
hoda_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001f3f8  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00009370  0801f588  0801f588  0002f588  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    0000018c  080288f8  080288f8  000388f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000600  08028a84  08028a84  00038a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08029084  08029084  000401e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08029084  08029084  00039084  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0802908c  0802908c  0003908c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  08029090  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000110b0  200001f0  08029274  000401f0  2**4
                  ALLOC
 10 ._user_heap_stack 00000600  200112a0  08029274  000412a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000401e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   004183c2  00000000  00000000  00040214  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0001cf54  00000000  00000000  004585d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00002b90  00000000  00000000  00475530  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 0001b4a8  00000000  00000000  004780c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002da99  00000000  00000000  00493568  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00056456  00000000  00000000  004c1001  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    001ef657  00000000  00000000  00517457  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000083  00000000  00000000  00706aae  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000e0c4  00000000  00000000  00706b34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_loc    00080af5  00000000  00000000  00714bf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001f0 	.word	0x200001f0
 80001ac:	00000000 	.word	0x00000000
 80001b0:	0801f570 	.word	0x0801f570

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001f4 	.word	0x200001f4
 80001cc:	0801f570 	.word	0x0801f570

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strcmp>:
 8000270:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000274:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000278:	2a01      	cmp	r2, #1
 800027a:	bf28      	it	cs
 800027c:	429a      	cmpcs	r2, r3
 800027e:	d0f7      	beq.n	8000270 <strcmp>
 8000280:	1ad0      	subs	r0, r2, r3
 8000282:	4770      	bx	lr

08000284 <strlen>:
 8000284:	4603      	mov	r3, r0
 8000286:	f813 2b01 	ldrb.w	r2, [r3], #1
 800028a:	2a00      	cmp	r2, #0
 800028c:	d1fb      	bne.n	8000286 <strlen+0x2>
 800028e:	1a18      	subs	r0, r3, r0
 8000290:	3801      	subs	r0, #1
 8000292:	4770      	bx	lr

08000294 <__aeabi_drsub>:
 8000294:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000298:	e002      	b.n	80002a0 <__adddf3>
 800029a:	bf00      	nop

0800029c <__aeabi_dsub>:
 800029c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002a0 <__adddf3>:
 80002a0:	b530      	push	{r4, r5, lr}
 80002a2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002aa:	ea94 0f05 	teq	r4, r5
 80002ae:	bf08      	it	eq
 80002b0:	ea90 0f02 	teqeq	r0, r2
 80002b4:	bf1f      	itttt	ne
 80002b6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002ba:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002be:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002c2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c6:	f000 80e2 	beq.w	800048e <__adddf3+0x1ee>
 80002ca:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ce:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002d2:	bfb8      	it	lt
 80002d4:	426d      	neglt	r5, r5
 80002d6:	dd0c      	ble.n	80002f2 <__adddf3+0x52>
 80002d8:	442c      	add	r4, r5
 80002da:	ea80 0202 	eor.w	r2, r0, r2
 80002de:	ea81 0303 	eor.w	r3, r1, r3
 80002e2:	ea82 0000 	eor.w	r0, r2, r0
 80002e6:	ea83 0101 	eor.w	r1, r3, r1
 80002ea:	ea80 0202 	eor.w	r2, r0, r2
 80002ee:	ea81 0303 	eor.w	r3, r1, r3
 80002f2:	2d36      	cmp	r5, #54	; 0x36
 80002f4:	bf88      	it	hi
 80002f6:	bd30      	pophi	{r4, r5, pc}
 80002f8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002fc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000300:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000304:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x70>
 800030a:	4240      	negs	r0, r0
 800030c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000310:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000314:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000318:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800031c:	d002      	beq.n	8000324 <__adddf3+0x84>
 800031e:	4252      	negs	r2, r2
 8000320:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000324:	ea94 0f05 	teq	r4, r5
 8000328:	f000 80a7 	beq.w	800047a <__adddf3+0x1da>
 800032c:	f1a4 0401 	sub.w	r4, r4, #1
 8000330:	f1d5 0e20 	rsbs	lr, r5, #32
 8000334:	db0d      	blt.n	8000352 <__adddf3+0xb2>
 8000336:	fa02 fc0e 	lsl.w	ip, r2, lr
 800033a:	fa22 f205 	lsr.w	r2, r2, r5
 800033e:	1880      	adds	r0, r0, r2
 8000340:	f141 0100 	adc.w	r1, r1, #0
 8000344:	fa03 f20e 	lsl.w	r2, r3, lr
 8000348:	1880      	adds	r0, r0, r2
 800034a:	fa43 f305 	asr.w	r3, r3, r5
 800034e:	4159      	adcs	r1, r3
 8000350:	e00e      	b.n	8000370 <__adddf3+0xd0>
 8000352:	f1a5 0520 	sub.w	r5, r5, #32
 8000356:	f10e 0e20 	add.w	lr, lr, #32
 800035a:	2a01      	cmp	r2, #1
 800035c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000360:	bf28      	it	cs
 8000362:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	18c0      	adds	r0, r0, r3
 800036c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000370:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000374:	d507      	bpl.n	8000386 <__adddf3+0xe6>
 8000376:	f04f 0e00 	mov.w	lr, #0
 800037a:	f1dc 0c00 	rsbs	ip, ip, #0
 800037e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000382:	eb6e 0101 	sbc.w	r1, lr, r1
 8000386:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800038a:	d31b      	bcc.n	80003c4 <__adddf3+0x124>
 800038c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000390:	d30c      	bcc.n	80003ac <__adddf3+0x10c>
 8000392:	0849      	lsrs	r1, r1, #1
 8000394:	ea5f 0030 	movs.w	r0, r0, rrx
 8000398:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800039c:	f104 0401 	add.w	r4, r4, #1
 80003a0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a8:	f080 809a 	bcs.w	80004e0 <__adddf3+0x240>
 80003ac:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003b0:	bf08      	it	eq
 80003b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b6:	f150 0000 	adcs.w	r0, r0, #0
 80003ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003be:	ea41 0105 	orr.w	r1, r1, r5
 80003c2:	bd30      	pop	{r4, r5, pc}
 80003c4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c8:	4140      	adcs	r0, r0
 80003ca:	eb41 0101 	adc.w	r1, r1, r1
 80003ce:	3c01      	subs	r4, #1
 80003d0:	bf28      	it	cs
 80003d2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d6:	d2e9      	bcs.n	80003ac <__adddf3+0x10c>
 80003d8:	f091 0f00 	teq	r1, #0
 80003dc:	bf04      	itt	eq
 80003de:	4601      	moveq	r1, r0
 80003e0:	2000      	moveq	r0, #0
 80003e2:	fab1 f381 	clz	r3, r1
 80003e6:	bf08      	it	eq
 80003e8:	3320      	addeq	r3, #32
 80003ea:	f1a3 030b 	sub.w	r3, r3, #11
 80003ee:	f1b3 0220 	subs.w	r2, r3, #32
 80003f2:	da0c      	bge.n	800040e <__adddf3+0x16e>
 80003f4:	320c      	adds	r2, #12
 80003f6:	dd08      	ble.n	800040a <__adddf3+0x16a>
 80003f8:	f102 0c14 	add.w	ip, r2, #20
 80003fc:	f1c2 020c 	rsb	r2, r2, #12
 8000400:	fa01 f00c 	lsl.w	r0, r1, ip
 8000404:	fa21 f102 	lsr.w	r1, r1, r2
 8000408:	e00c      	b.n	8000424 <__adddf3+0x184>
 800040a:	f102 0214 	add.w	r2, r2, #20
 800040e:	bfd8      	it	le
 8000410:	f1c2 0c20 	rsble	ip, r2, #32
 8000414:	fa01 f102 	lsl.w	r1, r1, r2
 8000418:	fa20 fc0c 	lsr.w	ip, r0, ip
 800041c:	bfdc      	itt	le
 800041e:	ea41 010c 	orrle.w	r1, r1, ip
 8000422:	4090      	lslle	r0, r2
 8000424:	1ae4      	subs	r4, r4, r3
 8000426:	bfa2      	ittt	ge
 8000428:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800042c:	4329      	orrge	r1, r5
 800042e:	bd30      	popge	{r4, r5, pc}
 8000430:	ea6f 0404 	mvn.w	r4, r4
 8000434:	3c1f      	subs	r4, #31
 8000436:	da1c      	bge.n	8000472 <__adddf3+0x1d2>
 8000438:	340c      	adds	r4, #12
 800043a:	dc0e      	bgt.n	800045a <__adddf3+0x1ba>
 800043c:	f104 0414 	add.w	r4, r4, #20
 8000440:	f1c4 0220 	rsb	r2, r4, #32
 8000444:	fa20 f004 	lsr.w	r0, r0, r4
 8000448:	fa01 f302 	lsl.w	r3, r1, r2
 800044c:	ea40 0003 	orr.w	r0, r0, r3
 8000450:	fa21 f304 	lsr.w	r3, r1, r4
 8000454:	ea45 0103 	orr.w	r1, r5, r3
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	f1c4 040c 	rsb	r4, r4, #12
 800045e:	f1c4 0220 	rsb	r2, r4, #32
 8000462:	fa20 f002 	lsr.w	r0, r0, r2
 8000466:	fa01 f304 	lsl.w	r3, r1, r4
 800046a:	ea40 0003 	orr.w	r0, r0, r3
 800046e:	4629      	mov	r1, r5
 8000470:	bd30      	pop	{r4, r5, pc}
 8000472:	fa21 f004 	lsr.w	r0, r1, r4
 8000476:	4629      	mov	r1, r5
 8000478:	bd30      	pop	{r4, r5, pc}
 800047a:	f094 0f00 	teq	r4, #0
 800047e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000482:	bf06      	itte	eq
 8000484:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000488:	3401      	addeq	r4, #1
 800048a:	3d01      	subne	r5, #1
 800048c:	e74e      	b.n	800032c <__adddf3+0x8c>
 800048e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000492:	bf18      	it	ne
 8000494:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000498:	d029      	beq.n	80004ee <__adddf3+0x24e>
 800049a:	ea94 0f05 	teq	r4, r5
 800049e:	bf08      	it	eq
 80004a0:	ea90 0f02 	teqeq	r0, r2
 80004a4:	d005      	beq.n	80004b2 <__adddf3+0x212>
 80004a6:	ea54 0c00 	orrs.w	ip, r4, r0
 80004aa:	bf04      	itt	eq
 80004ac:	4619      	moveq	r1, r3
 80004ae:	4610      	moveq	r0, r2
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	ea91 0f03 	teq	r1, r3
 80004b6:	bf1e      	ittt	ne
 80004b8:	2100      	movne	r1, #0
 80004ba:	2000      	movne	r0, #0
 80004bc:	bd30      	popne	{r4, r5, pc}
 80004be:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004c2:	d105      	bne.n	80004d0 <__adddf3+0x230>
 80004c4:	0040      	lsls	r0, r0, #1
 80004c6:	4149      	adcs	r1, r1
 80004c8:	bf28      	it	cs
 80004ca:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ce:	bd30      	pop	{r4, r5, pc}
 80004d0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d4:	bf3c      	itt	cc
 80004d6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004da:	bd30      	popcc	{r4, r5, pc}
 80004dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004e0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e8:	f04f 0000 	mov.w	r0, #0
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004f2:	bf1a      	itte	ne
 80004f4:	4619      	movne	r1, r3
 80004f6:	4610      	movne	r0, r2
 80004f8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004fc:	bf1c      	itt	ne
 80004fe:	460b      	movne	r3, r1
 8000500:	4602      	movne	r2, r0
 8000502:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000506:	bf06      	itte	eq
 8000508:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800050c:	ea91 0f03 	teqeq	r1, r3
 8000510:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000514:	bd30      	pop	{r4, r5, pc}
 8000516:	bf00      	nop

08000518 <__aeabi_ui2d>:
 8000518:	f090 0f00 	teq	r0, #0
 800051c:	bf04      	itt	eq
 800051e:	2100      	moveq	r1, #0
 8000520:	4770      	bxeq	lr
 8000522:	b530      	push	{r4, r5, lr}
 8000524:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000528:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800052c:	f04f 0500 	mov.w	r5, #0
 8000530:	f04f 0100 	mov.w	r1, #0
 8000534:	e750      	b.n	80003d8 <__adddf3+0x138>
 8000536:	bf00      	nop

08000538 <__aeabi_i2d>:
 8000538:	f090 0f00 	teq	r0, #0
 800053c:	bf04      	itt	eq
 800053e:	2100      	moveq	r1, #0
 8000540:	4770      	bxeq	lr
 8000542:	b530      	push	{r4, r5, lr}
 8000544:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000548:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800054c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000550:	bf48      	it	mi
 8000552:	4240      	negmi	r0, r0
 8000554:	f04f 0100 	mov.w	r1, #0
 8000558:	e73e      	b.n	80003d8 <__adddf3+0x138>
 800055a:	bf00      	nop

0800055c <__aeabi_f2d>:
 800055c:	0042      	lsls	r2, r0, #1
 800055e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000562:	ea4f 0131 	mov.w	r1, r1, rrx
 8000566:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800056a:	bf1f      	itttt	ne
 800056c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000570:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000574:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000578:	4770      	bxne	lr
 800057a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057e:	bf08      	it	eq
 8000580:	4770      	bxeq	lr
 8000582:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000586:	bf04      	itt	eq
 8000588:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800058c:	4770      	bxeq	lr
 800058e:	b530      	push	{r4, r5, lr}
 8000590:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000594:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000598:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800059c:	e71c      	b.n	80003d8 <__adddf3+0x138>
 800059e:	bf00      	nop

080005a0 <__aeabi_ul2d>:
 80005a0:	ea50 0201 	orrs.w	r2, r0, r1
 80005a4:	bf08      	it	eq
 80005a6:	4770      	bxeq	lr
 80005a8:	b530      	push	{r4, r5, lr}
 80005aa:	f04f 0500 	mov.w	r5, #0
 80005ae:	e00a      	b.n	80005c6 <__aeabi_l2d+0x16>

080005b0 <__aeabi_l2d>:
 80005b0:	ea50 0201 	orrs.w	r2, r0, r1
 80005b4:	bf08      	it	eq
 80005b6:	4770      	bxeq	lr
 80005b8:	b530      	push	{r4, r5, lr}
 80005ba:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005be:	d502      	bpl.n	80005c6 <__aeabi_l2d+0x16>
 80005c0:	4240      	negs	r0, r0
 80005c2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005ca:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ce:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005d2:	f43f aed8 	beq.w	8000386 <__adddf3+0xe6>
 80005d6:	f04f 0203 	mov.w	r2, #3
 80005da:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005de:	bf18      	it	ne
 80005e0:	3203      	addne	r2, #3
 80005e2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e6:	bf18      	it	ne
 80005e8:	3203      	addne	r2, #3
 80005ea:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ee:	f1c2 0320 	rsb	r3, r2, #32
 80005f2:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f6:	fa20 f002 	lsr.w	r0, r0, r2
 80005fa:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fe:	ea40 000e 	orr.w	r0, r0, lr
 8000602:	fa21 f102 	lsr.w	r1, r1, r2
 8000606:	4414      	add	r4, r2
 8000608:	e6bd      	b.n	8000386 <__adddf3+0xe6>
 800060a:	bf00      	nop

0800060c <__aeabi_dmul>:
 800060c:	b570      	push	{r4, r5, r6, lr}
 800060e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000612:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000616:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800061a:	bf1d      	ittte	ne
 800061c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000620:	ea94 0f0c 	teqne	r4, ip
 8000624:	ea95 0f0c 	teqne	r5, ip
 8000628:	f000 f8de 	bleq	80007e8 <__aeabi_dmul+0x1dc>
 800062c:	442c      	add	r4, r5
 800062e:	ea81 0603 	eor.w	r6, r1, r3
 8000632:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000636:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800063a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063e:	bf18      	it	ne
 8000640:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000644:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000648:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800064c:	d038      	beq.n	80006c0 <__aeabi_dmul+0xb4>
 800064e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000652:	f04f 0500 	mov.w	r5, #0
 8000656:	fbe1 e502 	umlal	lr, r5, r1, r2
 800065a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000662:	f04f 0600 	mov.w	r6, #0
 8000666:	fbe1 5603 	umlal	r5, r6, r1, r3
 800066a:	f09c 0f00 	teq	ip, #0
 800066e:	bf18      	it	ne
 8000670:	f04e 0e01 	orrne.w	lr, lr, #1
 8000674:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000678:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800067c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000680:	d204      	bcs.n	800068c <__aeabi_dmul+0x80>
 8000682:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000686:	416d      	adcs	r5, r5
 8000688:	eb46 0606 	adc.w	r6, r6, r6
 800068c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000690:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000694:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000698:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800069c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006a0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a4:	bf88      	it	hi
 80006a6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006aa:	d81e      	bhi.n	80006ea <__aeabi_dmul+0xde>
 80006ac:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006b0:	bf08      	it	eq
 80006b2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b6:	f150 0000 	adcs.w	r0, r0, #0
 80006ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c4:	ea46 0101 	orr.w	r1, r6, r1
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	ea81 0103 	eor.w	r1, r1, r3
 80006d0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d4:	bfc2      	ittt	gt
 80006d6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006da:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006de:	bd70      	popgt	{r4, r5, r6, pc}
 80006e0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e4:	f04f 0e00 	mov.w	lr, #0
 80006e8:	3c01      	subs	r4, #1
 80006ea:	f300 80ab 	bgt.w	8000844 <__aeabi_dmul+0x238>
 80006ee:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006f2:	bfde      	ittt	le
 80006f4:	2000      	movle	r0, #0
 80006f6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006fa:	bd70      	pople	{r4, r5, r6, pc}
 80006fc:	f1c4 0400 	rsb	r4, r4, #0
 8000700:	3c20      	subs	r4, #32
 8000702:	da35      	bge.n	8000770 <__aeabi_dmul+0x164>
 8000704:	340c      	adds	r4, #12
 8000706:	dc1b      	bgt.n	8000740 <__aeabi_dmul+0x134>
 8000708:	f104 0414 	add.w	r4, r4, #20
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f305 	lsl.w	r3, r0, r5
 8000714:	fa20 f004 	lsr.w	r0, r0, r4
 8000718:	fa01 f205 	lsl.w	r2, r1, r5
 800071c:	ea40 0002 	orr.w	r0, r0, r2
 8000720:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000724:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000728:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800072c:	fa21 f604 	lsr.w	r6, r1, r4
 8000730:	eb42 0106 	adc.w	r1, r2, r6
 8000734:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000738:	bf08      	it	eq
 800073a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073e:	bd70      	pop	{r4, r5, r6, pc}
 8000740:	f1c4 040c 	rsb	r4, r4, #12
 8000744:	f1c4 0520 	rsb	r5, r4, #32
 8000748:	fa00 f304 	lsl.w	r3, r0, r4
 800074c:	fa20 f005 	lsr.w	r0, r0, r5
 8000750:	fa01 f204 	lsl.w	r2, r1, r4
 8000754:	ea40 0002 	orr.w	r0, r0, r2
 8000758:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800075c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000760:	f141 0100 	adc.w	r1, r1, #0
 8000764:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000768:	bf08      	it	eq
 800076a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076e:	bd70      	pop	{r4, r5, r6, pc}
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f205 	lsl.w	r2, r0, r5
 8000778:	ea4e 0e02 	orr.w	lr, lr, r2
 800077c:	fa20 f304 	lsr.w	r3, r0, r4
 8000780:	fa01 f205 	lsl.w	r2, r1, r5
 8000784:	ea43 0302 	orr.w	r3, r3, r2
 8000788:	fa21 f004 	lsr.w	r0, r1, r4
 800078c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000790:	fa21 f204 	lsr.w	r2, r1, r4
 8000794:	ea20 0002 	bic.w	r0, r0, r2
 8000798:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800079c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a0:	bf08      	it	eq
 80007a2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a6:	bd70      	pop	{r4, r5, r6, pc}
 80007a8:	f094 0f00 	teq	r4, #0
 80007ac:	d10f      	bne.n	80007ce <__aeabi_dmul+0x1c2>
 80007ae:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007b2:	0040      	lsls	r0, r0, #1
 80007b4:	eb41 0101 	adc.w	r1, r1, r1
 80007b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007bc:	bf08      	it	eq
 80007be:	3c01      	subeq	r4, #1
 80007c0:	d0f7      	beq.n	80007b2 <__aeabi_dmul+0x1a6>
 80007c2:	ea41 0106 	orr.w	r1, r1, r6
 80007c6:	f095 0f00 	teq	r5, #0
 80007ca:	bf18      	it	ne
 80007cc:	4770      	bxne	lr
 80007ce:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007d2:	0052      	lsls	r2, r2, #1
 80007d4:	eb43 0303 	adc.w	r3, r3, r3
 80007d8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007dc:	bf08      	it	eq
 80007de:	3d01      	subeq	r5, #1
 80007e0:	d0f7      	beq.n	80007d2 <__aeabi_dmul+0x1c6>
 80007e2:	ea43 0306 	orr.w	r3, r3, r6
 80007e6:	4770      	bx	lr
 80007e8:	ea94 0f0c 	teq	r4, ip
 80007ec:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007f0:	bf18      	it	ne
 80007f2:	ea95 0f0c 	teqne	r5, ip
 80007f6:	d00c      	beq.n	8000812 <__aeabi_dmul+0x206>
 80007f8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007fc:	bf18      	it	ne
 80007fe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000802:	d1d1      	bne.n	80007a8 <__aeabi_dmul+0x19c>
 8000804:	ea81 0103 	eor.w	r1, r1, r3
 8000808:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800080c:	f04f 0000 	mov.w	r0, #0
 8000810:	bd70      	pop	{r4, r5, r6, pc}
 8000812:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000816:	bf06      	itte	eq
 8000818:	4610      	moveq	r0, r2
 800081a:	4619      	moveq	r1, r3
 800081c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000820:	d019      	beq.n	8000856 <__aeabi_dmul+0x24a>
 8000822:	ea94 0f0c 	teq	r4, ip
 8000826:	d102      	bne.n	800082e <__aeabi_dmul+0x222>
 8000828:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800082c:	d113      	bne.n	8000856 <__aeabi_dmul+0x24a>
 800082e:	ea95 0f0c 	teq	r5, ip
 8000832:	d105      	bne.n	8000840 <__aeabi_dmul+0x234>
 8000834:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000838:	bf1c      	itt	ne
 800083a:	4610      	movne	r0, r2
 800083c:	4619      	movne	r1, r3
 800083e:	d10a      	bne.n	8000856 <__aeabi_dmul+0x24a>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000848:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800084c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000850:	f04f 0000 	mov.w	r0, #0
 8000854:	bd70      	pop	{r4, r5, r6, pc}
 8000856:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800085a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085e:	bd70      	pop	{r4, r5, r6, pc}

08000860 <__aeabi_ddiv>:
 8000860:	b570      	push	{r4, r5, r6, lr}
 8000862:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000866:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800086a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086e:	bf1d      	ittte	ne
 8000870:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000874:	ea94 0f0c 	teqne	r4, ip
 8000878:	ea95 0f0c 	teqne	r5, ip
 800087c:	f000 f8a7 	bleq	80009ce <__aeabi_ddiv+0x16e>
 8000880:	eba4 0405 	sub.w	r4, r4, r5
 8000884:	ea81 0e03 	eor.w	lr, r1, r3
 8000888:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800088c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000890:	f000 8088 	beq.w	80009a4 <__aeabi_ddiv+0x144>
 8000894:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000898:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800089c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008a0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008ac:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008b0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b8:	429d      	cmp	r5, r3
 80008ba:	bf08      	it	eq
 80008bc:	4296      	cmpeq	r6, r2
 80008be:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008c2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c6:	d202      	bcs.n	80008ce <__aeabi_ddiv+0x6e>
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	1ab6      	subs	r6, r6, r2
 80008d0:	eb65 0503 	sbc.w	r5, r5, r3
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008de:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008e2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ea:	bf22      	ittt	cs
 80008ec:	1ab6      	subcs	r6, r6, r2
 80008ee:	4675      	movcs	r5, lr
 80008f0:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fe:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000902:	bf22      	ittt	cs
 8000904:	1ab6      	subcs	r6, r6, r2
 8000906:	4675      	movcs	r5, lr
 8000908:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800090c:	085b      	lsrs	r3, r3, #1
 800090e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000912:	ebb6 0e02 	subs.w	lr, r6, r2
 8000916:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091a:	bf22      	ittt	cs
 800091c:	1ab6      	subcs	r6, r6, r2
 800091e:	4675      	movcs	r5, lr
 8000920:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000924:	085b      	lsrs	r3, r3, #1
 8000926:	ea4f 0232 	mov.w	r2, r2, rrx
 800092a:	ebb6 0e02 	subs.w	lr, r6, r2
 800092e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000932:	bf22      	ittt	cs
 8000934:	1ab6      	subcs	r6, r6, r2
 8000936:	4675      	movcs	r5, lr
 8000938:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800093c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000940:	d018      	beq.n	8000974 <__aeabi_ddiv+0x114>
 8000942:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000946:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800094a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000952:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000956:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800095a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095e:	d1c0      	bne.n	80008e2 <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	d10b      	bne.n	800097e <__aeabi_ddiv+0x11e>
 8000966:	ea41 0100 	orr.w	r1, r1, r0
 800096a:	f04f 0000 	mov.w	r0, #0
 800096e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000972:	e7b6      	b.n	80008e2 <__aeabi_ddiv+0x82>
 8000974:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000978:	bf04      	itt	eq
 800097a:	4301      	orreq	r1, r0
 800097c:	2000      	moveq	r0, #0
 800097e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000982:	bf88      	it	hi
 8000984:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000988:	f63f aeaf 	bhi.w	80006ea <__aeabi_dmul+0xde>
 800098c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000990:	bf04      	itt	eq
 8000992:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000996:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800099a:	f150 0000 	adcs.w	r0, r0, #0
 800099e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009a2:	bd70      	pop	{r4, r5, r6, pc}
 80009a4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009ac:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009b0:	bfc2      	ittt	gt
 80009b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ba:	bd70      	popgt	{r4, r5, r6, pc}
 80009bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009c0:	f04f 0e00 	mov.w	lr, #0
 80009c4:	3c01      	subs	r4, #1
 80009c6:	e690      	b.n	80006ea <__aeabi_dmul+0xde>
 80009c8:	ea45 0e06 	orr.w	lr, r5, r6
 80009cc:	e68d      	b.n	80006ea <__aeabi_dmul+0xde>
 80009ce:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009d2:	ea94 0f0c 	teq	r4, ip
 80009d6:	bf08      	it	eq
 80009d8:	ea95 0f0c 	teqeq	r5, ip
 80009dc:	f43f af3b 	beq.w	8000856 <__aeabi_dmul+0x24a>
 80009e0:	ea94 0f0c 	teq	r4, ip
 80009e4:	d10a      	bne.n	80009fc <__aeabi_ddiv+0x19c>
 80009e6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009ea:	f47f af34 	bne.w	8000856 <__aeabi_dmul+0x24a>
 80009ee:	ea95 0f0c 	teq	r5, ip
 80009f2:	f47f af25 	bne.w	8000840 <__aeabi_dmul+0x234>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e72c      	b.n	8000856 <__aeabi_dmul+0x24a>
 80009fc:	ea95 0f0c 	teq	r5, ip
 8000a00:	d106      	bne.n	8000a10 <__aeabi_ddiv+0x1b0>
 8000a02:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a06:	f43f aefd 	beq.w	8000804 <__aeabi_dmul+0x1f8>
 8000a0a:	4610      	mov	r0, r2
 8000a0c:	4619      	mov	r1, r3
 8000a0e:	e722      	b.n	8000856 <__aeabi_dmul+0x24a>
 8000a10:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a14:	bf18      	it	ne
 8000a16:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a1a:	f47f aec5 	bne.w	80007a8 <__aeabi_dmul+0x19c>
 8000a1e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a22:	f47f af0d 	bne.w	8000840 <__aeabi_dmul+0x234>
 8000a26:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a2a:	f47f aeeb 	bne.w	8000804 <__aeabi_dmul+0x1f8>
 8000a2e:	e712      	b.n	8000856 <__aeabi_dmul+0x24a>

08000a30 <__gedf2>:
 8000a30:	f04f 3cff 	mov.w	ip, #4294967295
 8000a34:	e006      	b.n	8000a44 <__cmpdf2+0x4>
 8000a36:	bf00      	nop

08000a38 <__ledf2>:
 8000a38:	f04f 0c01 	mov.w	ip, #1
 8000a3c:	e002      	b.n	8000a44 <__cmpdf2+0x4>
 8000a3e:	bf00      	nop

08000a40 <__cmpdf2>:
 8000a40:	f04f 0c01 	mov.w	ip, #1
 8000a44:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a48:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a54:	bf18      	it	ne
 8000a56:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a5a:	d01b      	beq.n	8000a94 <__cmpdf2+0x54>
 8000a5c:	b001      	add	sp, #4
 8000a5e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a62:	bf0c      	ite	eq
 8000a64:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a68:	ea91 0f03 	teqne	r1, r3
 8000a6c:	bf02      	ittt	eq
 8000a6e:	ea90 0f02 	teqeq	r0, r2
 8000a72:	2000      	moveq	r0, #0
 8000a74:	4770      	bxeq	lr
 8000a76:	f110 0f00 	cmn.w	r0, #0
 8000a7a:	ea91 0f03 	teq	r1, r3
 8000a7e:	bf58      	it	pl
 8000a80:	4299      	cmppl	r1, r3
 8000a82:	bf08      	it	eq
 8000a84:	4290      	cmpeq	r0, r2
 8000a86:	bf2c      	ite	cs
 8000a88:	17d8      	asrcs	r0, r3, #31
 8000a8a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8e:	f040 0001 	orr.w	r0, r0, #1
 8000a92:	4770      	bx	lr
 8000a94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__cmpdf2+0x64>
 8000a9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aa2:	d107      	bne.n	8000ab4 <__cmpdf2+0x74>
 8000aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aac:	d1d6      	bne.n	8000a5c <__cmpdf2+0x1c>
 8000aae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ab2:	d0d3      	beq.n	8000a5c <__cmpdf2+0x1c>
 8000ab4:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop

08000abc <__aeabi_cdrcmple>:
 8000abc:	4684      	mov	ip, r0
 8000abe:	4610      	mov	r0, r2
 8000ac0:	4662      	mov	r2, ip
 8000ac2:	468c      	mov	ip, r1
 8000ac4:	4619      	mov	r1, r3
 8000ac6:	4663      	mov	r3, ip
 8000ac8:	e000      	b.n	8000acc <__aeabi_cdcmpeq>
 8000aca:	bf00      	nop

08000acc <__aeabi_cdcmpeq>:
 8000acc:	b501      	push	{r0, lr}
 8000ace:	f7ff ffb7 	bl	8000a40 <__cmpdf2>
 8000ad2:	2800      	cmp	r0, #0
 8000ad4:	bf48      	it	mi
 8000ad6:	f110 0f00 	cmnmi.w	r0, #0
 8000ada:	bd01      	pop	{r0, pc}

08000adc <__aeabi_dcmpeq>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff fff4 	bl	8000acc <__aeabi_cdcmpeq>
 8000ae4:	bf0c      	ite	eq
 8000ae6:	2001      	moveq	r0, #1
 8000ae8:	2000      	movne	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmplt>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffea 	bl	8000acc <__aeabi_cdcmpeq>
 8000af8:	bf34      	ite	cc
 8000afa:	2001      	movcc	r0, #1
 8000afc:	2000      	movcs	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmple>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffe0 	bl	8000acc <__aeabi_cdcmpeq>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpge>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffce 	bl	8000abc <__aeabi_cdrcmple>
 8000b20:	bf94      	ite	ls
 8000b22:	2001      	movls	r0, #1
 8000b24:	2000      	movhi	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpgt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffc4 	bl	8000abc <__aeabi_cdrcmple>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmpun>:
 8000b40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b48:	d102      	bne.n	8000b50 <__aeabi_dcmpun+0x10>
 8000b4a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4e:	d10a      	bne.n	8000b66 <__aeabi_dcmpun+0x26>
 8000b50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b58:	d102      	bne.n	8000b60 <__aeabi_dcmpun+0x20>
 8000b5a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5e:	d102      	bne.n	8000b66 <__aeabi_dcmpun+0x26>
 8000b60:	f04f 0000 	mov.w	r0, #0
 8000b64:	4770      	bx	lr
 8000b66:	f04f 0001 	mov.w	r0, #1
 8000b6a:	4770      	bx	lr

08000b6c <__aeabi_d2iz>:
 8000b6c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b70:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b74:	d215      	bcs.n	8000ba2 <__aeabi_d2iz+0x36>
 8000b76:	d511      	bpl.n	8000b9c <__aeabi_d2iz+0x30>
 8000b78:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b7c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b80:	d912      	bls.n	8000ba8 <__aeabi_d2iz+0x3c>
 8000b82:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b86:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b8a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b92:	fa23 f002 	lsr.w	r0, r3, r2
 8000b96:	bf18      	it	ne
 8000b98:	4240      	negne	r0, r0
 8000b9a:	4770      	bx	lr
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba6:	d105      	bne.n	8000bb4 <__aeabi_d2iz+0x48>
 8000ba8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bac:	bf08      	it	eq
 8000bae:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bb2:	4770      	bx	lr
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	bf00      	nop

08000bbc <__aeabi_d2f>:
 8000bbc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bc0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bc4:	bf24      	itt	cs
 8000bc6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bca:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bce:	d90d      	bls.n	8000bec <__aeabi_d2f+0x30>
 8000bd0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bd4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bdc:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000be0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be4:	bf08      	it	eq
 8000be6:	f020 0001 	biceq.w	r0, r0, #1
 8000bea:	4770      	bx	lr
 8000bec:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bf0:	d121      	bne.n	8000c36 <__aeabi_d2f+0x7a>
 8000bf2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bf6:	bfbc      	itt	lt
 8000bf8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bfc:	4770      	bxlt	lr
 8000bfe:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c02:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c06:	f1c2 0218 	rsb	r2, r2, #24
 8000c0a:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c12:	fa20 f002 	lsr.w	r0, r0, r2
 8000c16:	bf18      	it	ne
 8000c18:	f040 0001 	orrne.w	r0, r0, #1
 8000c1c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c20:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c24:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c28:	ea40 000c 	orr.w	r0, r0, ip
 8000c2c:	fa23 f302 	lsr.w	r3, r3, r2
 8000c30:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c34:	e7cc      	b.n	8000bd0 <__aeabi_d2f+0x14>
 8000c36:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c3a:	d107      	bne.n	8000c4c <__aeabi_d2f+0x90>
 8000c3c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c40:	bf1e      	ittt	ne
 8000c42:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c46:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c4a:	4770      	bxne	lr
 8000c4c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c50:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c54:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c58:	4770      	bx	lr
 8000c5a:	bf00      	nop

08000c5c <__aeabi_ldivmod>:
 8000c5c:	b97b      	cbnz	r3, 8000c7e <__aeabi_ldivmod+0x22>
 8000c5e:	b972      	cbnz	r2, 8000c7e <__aeabi_ldivmod+0x22>
 8000c60:	2900      	cmp	r1, #0
 8000c62:	bfbe      	ittt	lt
 8000c64:	2000      	movlt	r0, #0
 8000c66:	f04f 4100 	movlt.w	r1, #2147483648	; 0x80000000
 8000c6a:	e006      	blt.n	8000c7a <__aeabi_ldivmod+0x1e>
 8000c6c:	bf08      	it	eq
 8000c6e:	2800      	cmpeq	r0, #0
 8000c70:	bf1c      	itt	ne
 8000c72:	f06f 4100 	mvnne.w	r1, #2147483648	; 0x80000000
 8000c76:	f04f 30ff 	movne.w	r0, #4294967295
 8000c7a:	f001 b95f 	b.w	8001f3c <__aeabi_idiv0>
 8000c7e:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c82:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c86:	2900      	cmp	r1, #0
 8000c88:	db09      	blt.n	8000c9e <__aeabi_ldivmod+0x42>
 8000c8a:	2b00      	cmp	r3, #0
 8000c8c:	db1a      	blt.n	8000cc4 <__aeabi_ldivmod+0x68>
 8000c8e:	f000 f883 	bl	8000d98 <__udivmoddi4>
 8000c92:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c96:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c9a:	b004      	add	sp, #16
 8000c9c:	4770      	bx	lr
 8000c9e:	4240      	negs	r0, r0
 8000ca0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ca4:	2b00      	cmp	r3, #0
 8000ca6:	db1b      	blt.n	8000ce0 <__aeabi_ldivmod+0x84>
 8000ca8:	f000 f876 	bl	8000d98 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4240      	negs	r0, r0
 8000cb8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cbc:	4252      	negs	r2, r2
 8000cbe:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cc2:	4770      	bx	lr
 8000cc4:	4252      	negs	r2, r2
 8000cc6:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cca:	f000 f865 	bl	8000d98 <__udivmoddi4>
 8000cce:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cd2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cd6:	b004      	add	sp, #16
 8000cd8:	4240      	negs	r0, r0
 8000cda:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cde:	4770      	bx	lr
 8000ce0:	4252      	negs	r2, r2
 8000ce2:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000ce6:	f000 f857 	bl	8000d98 <__udivmoddi4>
 8000cea:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cee:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cf2:	b004      	add	sp, #16
 8000cf4:	4252      	negs	r2, r2
 8000cf6:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000cfa:	4770      	bx	lr

08000cfc <__aeabi_uldivmod>:
 8000cfc:	b953      	cbnz	r3, 8000d14 <__aeabi_uldivmod+0x18>
 8000cfe:	b94a      	cbnz	r2, 8000d14 <__aeabi_uldivmod+0x18>
 8000d00:	2900      	cmp	r1, #0
 8000d02:	bf08      	it	eq
 8000d04:	2800      	cmpeq	r0, #0
 8000d06:	bf1c      	itt	ne
 8000d08:	f04f 31ff 	movne.w	r1, #4294967295
 8000d0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000d10:	f001 b914 	b.w	8001f3c <__aeabi_idiv0>
 8000d14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000d18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000d1c:	f000 f83c 	bl	8000d98 <__udivmoddi4>
 8000d20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000d24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000d28:	b004      	add	sp, #16
 8000d2a:	4770      	bx	lr

08000d2c <__aeabi_d2lz>:
 8000d2c:	b538      	push	{r3, r4, r5, lr}
 8000d2e:	2200      	movs	r2, #0
 8000d30:	2300      	movs	r3, #0
 8000d32:	4604      	mov	r4, r0
 8000d34:	460d      	mov	r5, r1
 8000d36:	f7ff fedb 	bl	8000af0 <__aeabi_dcmplt>
 8000d3a:	b928      	cbnz	r0, 8000d48 <__aeabi_d2lz+0x1c>
 8000d3c:	4620      	mov	r0, r4
 8000d3e:	4629      	mov	r1, r5
 8000d40:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d44:	f000 b80a 	b.w	8000d5c <__aeabi_d2ulz>
 8000d48:	4620      	mov	r0, r4
 8000d4a:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000d4e:	f000 f805 	bl	8000d5c <__aeabi_d2ulz>
 8000d52:	4240      	negs	r0, r0
 8000d54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d58:	bd38      	pop	{r3, r4, r5, pc}
 8000d5a:	bf00      	nop

08000d5c <__aeabi_d2ulz>:
 8000d5c:	b5d0      	push	{r4, r6, r7, lr}
 8000d5e:	4b0c      	ldr	r3, [pc, #48]	; (8000d90 <__aeabi_d2ulz+0x34>)
 8000d60:	2200      	movs	r2, #0
 8000d62:	4606      	mov	r6, r0
 8000d64:	460f      	mov	r7, r1
 8000d66:	f7ff fc51 	bl	800060c <__aeabi_dmul>
 8000d6a:	f001 f8e9 	bl	8001f40 <__aeabi_d2uiz>
 8000d6e:	4604      	mov	r4, r0
 8000d70:	f7ff fbd2 	bl	8000518 <__aeabi_ui2d>
 8000d74:	4b07      	ldr	r3, [pc, #28]	; (8000d94 <__aeabi_d2ulz+0x38>)
 8000d76:	2200      	movs	r2, #0
 8000d78:	f7ff fc48 	bl	800060c <__aeabi_dmul>
 8000d7c:	4602      	mov	r2, r0
 8000d7e:	460b      	mov	r3, r1
 8000d80:	4630      	mov	r0, r6
 8000d82:	4639      	mov	r1, r7
 8000d84:	f7ff fa8a 	bl	800029c <__aeabi_dsub>
 8000d88:	f001 f8da 	bl	8001f40 <__aeabi_d2uiz>
 8000d8c:	4621      	mov	r1, r4
 8000d8e:	bdd0      	pop	{r4, r6, r7, pc}
 8000d90:	3df00000 	.word	0x3df00000
 8000d94:	41f00000 	.word	0x41f00000

08000d98 <__udivmoddi4>:
 8000d98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d9c:	9d08      	ldr	r5, [sp, #32]
 8000d9e:	4604      	mov	r4, r0
 8000da0:	468e      	mov	lr, r1
 8000da2:	2b00      	cmp	r3, #0
 8000da4:	d14d      	bne.n	8000e42 <__udivmoddi4+0xaa>
 8000da6:	428a      	cmp	r2, r1
 8000da8:	4694      	mov	ip, r2
 8000daa:	d969      	bls.n	8000e80 <__udivmoddi4+0xe8>
 8000dac:	fab2 f282 	clz	r2, r2
 8000db0:	b152      	cbz	r2, 8000dc8 <__udivmoddi4+0x30>
 8000db2:	fa01 f302 	lsl.w	r3, r1, r2
 8000db6:	f1c2 0120 	rsb	r1, r2, #32
 8000dba:	fa20 f101 	lsr.w	r1, r0, r1
 8000dbe:	fa0c fc02 	lsl.w	ip, ip, r2
 8000dc2:	ea41 0e03 	orr.w	lr, r1, r3
 8000dc6:	4094      	lsls	r4, r2
 8000dc8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000dcc:	0c21      	lsrs	r1, r4, #16
 8000dce:	fbbe f6f8 	udiv	r6, lr, r8
 8000dd2:	fa1f f78c 	uxth.w	r7, ip
 8000dd6:	fb08 e316 	mls	r3, r8, r6, lr
 8000dda:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000dde:	fb06 f107 	mul.w	r1, r6, r7
 8000de2:	4299      	cmp	r1, r3
 8000de4:	d90a      	bls.n	8000dfc <__udivmoddi4+0x64>
 8000de6:	eb1c 0303 	adds.w	r3, ip, r3
 8000dea:	f106 30ff 	add.w	r0, r6, #4294967295
 8000dee:	f080 811f 	bcs.w	8001030 <__udivmoddi4+0x298>
 8000df2:	4299      	cmp	r1, r3
 8000df4:	f240 811c 	bls.w	8001030 <__udivmoddi4+0x298>
 8000df8:	3e02      	subs	r6, #2
 8000dfa:	4463      	add	r3, ip
 8000dfc:	1a5b      	subs	r3, r3, r1
 8000dfe:	b2a4      	uxth	r4, r4
 8000e00:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e04:	fb08 3310 	mls	r3, r8, r0, r3
 8000e08:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e0c:	fb00 f707 	mul.w	r7, r0, r7
 8000e10:	42a7      	cmp	r7, r4
 8000e12:	d90a      	bls.n	8000e2a <__udivmoddi4+0x92>
 8000e14:	eb1c 0404 	adds.w	r4, ip, r4
 8000e18:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e1c:	f080 810a 	bcs.w	8001034 <__udivmoddi4+0x29c>
 8000e20:	42a7      	cmp	r7, r4
 8000e22:	f240 8107 	bls.w	8001034 <__udivmoddi4+0x29c>
 8000e26:	4464      	add	r4, ip
 8000e28:	3802      	subs	r0, #2
 8000e2a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e2e:	1be4      	subs	r4, r4, r7
 8000e30:	2600      	movs	r6, #0
 8000e32:	b11d      	cbz	r5, 8000e3c <__udivmoddi4+0xa4>
 8000e34:	40d4      	lsrs	r4, r2
 8000e36:	2300      	movs	r3, #0
 8000e38:	e9c5 4300 	strd	r4, r3, [r5]
 8000e3c:	4631      	mov	r1, r6
 8000e3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d909      	bls.n	8000e5a <__udivmoddi4+0xc2>
 8000e46:	2d00      	cmp	r5, #0
 8000e48:	f000 80ef 	beq.w	800102a <__udivmoddi4+0x292>
 8000e4c:	2600      	movs	r6, #0
 8000e4e:	e9c5 0100 	strd	r0, r1, [r5]
 8000e52:	4630      	mov	r0, r6
 8000e54:	4631      	mov	r1, r6
 8000e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e5a:	fab3 f683 	clz	r6, r3
 8000e5e:	2e00      	cmp	r6, #0
 8000e60:	d14a      	bne.n	8000ef8 <__udivmoddi4+0x160>
 8000e62:	428b      	cmp	r3, r1
 8000e64:	d302      	bcc.n	8000e6c <__udivmoddi4+0xd4>
 8000e66:	4282      	cmp	r2, r0
 8000e68:	f200 80f9 	bhi.w	800105e <__udivmoddi4+0x2c6>
 8000e6c:	1a84      	subs	r4, r0, r2
 8000e6e:	eb61 0303 	sbc.w	r3, r1, r3
 8000e72:	2001      	movs	r0, #1
 8000e74:	469e      	mov	lr, r3
 8000e76:	2d00      	cmp	r5, #0
 8000e78:	d0e0      	beq.n	8000e3c <__udivmoddi4+0xa4>
 8000e7a:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e7e:	e7dd      	b.n	8000e3c <__udivmoddi4+0xa4>
 8000e80:	b902      	cbnz	r2, 8000e84 <__udivmoddi4+0xec>
 8000e82:	deff      	udf	#255	; 0xff
 8000e84:	fab2 f282 	clz	r2, r2
 8000e88:	2a00      	cmp	r2, #0
 8000e8a:	f040 8092 	bne.w	8000fb2 <__udivmoddi4+0x21a>
 8000e8e:	eba1 010c 	sub.w	r1, r1, ip
 8000e92:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e96:	fa1f fe8c 	uxth.w	lr, ip
 8000e9a:	2601      	movs	r6, #1
 8000e9c:	0c20      	lsrs	r0, r4, #16
 8000e9e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000ea2:	fb07 1113 	mls	r1, r7, r3, r1
 8000ea6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000eaa:	fb0e f003 	mul.w	r0, lr, r3
 8000eae:	4288      	cmp	r0, r1
 8000eb0:	d908      	bls.n	8000ec4 <__udivmoddi4+0x12c>
 8000eb2:	eb1c 0101 	adds.w	r1, ip, r1
 8000eb6:	f103 38ff 	add.w	r8, r3, #4294967295
 8000eba:	d202      	bcs.n	8000ec2 <__udivmoddi4+0x12a>
 8000ebc:	4288      	cmp	r0, r1
 8000ebe:	f200 80cb 	bhi.w	8001058 <__udivmoddi4+0x2c0>
 8000ec2:	4643      	mov	r3, r8
 8000ec4:	1a09      	subs	r1, r1, r0
 8000ec6:	b2a4      	uxth	r4, r4
 8000ec8:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ecc:	fb07 1110 	mls	r1, r7, r0, r1
 8000ed0:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000ed4:	fb0e fe00 	mul.w	lr, lr, r0
 8000ed8:	45a6      	cmp	lr, r4
 8000eda:	d908      	bls.n	8000eee <__udivmoddi4+0x156>
 8000edc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ee0:	f100 31ff 	add.w	r1, r0, #4294967295
 8000ee4:	d202      	bcs.n	8000eec <__udivmoddi4+0x154>
 8000ee6:	45a6      	cmp	lr, r4
 8000ee8:	f200 80bb 	bhi.w	8001062 <__udivmoddi4+0x2ca>
 8000eec:	4608      	mov	r0, r1
 8000eee:	eba4 040e 	sub.w	r4, r4, lr
 8000ef2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000ef6:	e79c      	b.n	8000e32 <__udivmoddi4+0x9a>
 8000ef8:	f1c6 0720 	rsb	r7, r6, #32
 8000efc:	40b3      	lsls	r3, r6
 8000efe:	fa22 fc07 	lsr.w	ip, r2, r7
 8000f02:	ea4c 0c03 	orr.w	ip, ip, r3
 8000f06:	fa20 f407 	lsr.w	r4, r0, r7
 8000f0a:	fa01 f306 	lsl.w	r3, r1, r6
 8000f0e:	431c      	orrs	r4, r3
 8000f10:	40f9      	lsrs	r1, r7
 8000f12:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000f16:	fa00 f306 	lsl.w	r3, r0, r6
 8000f1a:	fbb1 f8f9 	udiv	r8, r1, r9
 8000f1e:	0c20      	lsrs	r0, r4, #16
 8000f20:	fa1f fe8c 	uxth.w	lr, ip
 8000f24:	fb09 1118 	mls	r1, r9, r8, r1
 8000f28:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000f2c:	fb08 f00e 	mul.w	r0, r8, lr
 8000f30:	4288      	cmp	r0, r1
 8000f32:	fa02 f206 	lsl.w	r2, r2, r6
 8000f36:	d90b      	bls.n	8000f50 <__udivmoddi4+0x1b8>
 8000f38:	eb1c 0101 	adds.w	r1, ip, r1
 8000f3c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000f40:	f080 8088 	bcs.w	8001054 <__udivmoddi4+0x2bc>
 8000f44:	4288      	cmp	r0, r1
 8000f46:	f240 8085 	bls.w	8001054 <__udivmoddi4+0x2bc>
 8000f4a:	f1a8 0802 	sub.w	r8, r8, #2
 8000f4e:	4461      	add	r1, ip
 8000f50:	1a09      	subs	r1, r1, r0
 8000f52:	b2a4      	uxth	r4, r4
 8000f54:	fbb1 f0f9 	udiv	r0, r1, r9
 8000f58:	fb09 1110 	mls	r1, r9, r0, r1
 8000f5c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f60:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f64:	458e      	cmp	lr, r1
 8000f66:	d908      	bls.n	8000f7a <__udivmoddi4+0x1e2>
 8000f68:	eb1c 0101 	adds.w	r1, ip, r1
 8000f6c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f70:	d26c      	bcs.n	800104c <__udivmoddi4+0x2b4>
 8000f72:	458e      	cmp	lr, r1
 8000f74:	d96a      	bls.n	800104c <__udivmoddi4+0x2b4>
 8000f76:	3802      	subs	r0, #2
 8000f78:	4461      	add	r1, ip
 8000f7a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f7e:	fba0 9402 	umull	r9, r4, r0, r2
 8000f82:	eba1 010e 	sub.w	r1, r1, lr
 8000f86:	42a1      	cmp	r1, r4
 8000f88:	46c8      	mov	r8, r9
 8000f8a:	46a6      	mov	lr, r4
 8000f8c:	d356      	bcc.n	800103c <__udivmoddi4+0x2a4>
 8000f8e:	d053      	beq.n	8001038 <__udivmoddi4+0x2a0>
 8000f90:	b15d      	cbz	r5, 8000faa <__udivmoddi4+0x212>
 8000f92:	ebb3 0208 	subs.w	r2, r3, r8
 8000f96:	eb61 010e 	sbc.w	r1, r1, lr
 8000f9a:	fa01 f707 	lsl.w	r7, r1, r7
 8000f9e:	fa22 f306 	lsr.w	r3, r2, r6
 8000fa2:	40f1      	lsrs	r1, r6
 8000fa4:	431f      	orrs	r7, r3
 8000fa6:	e9c5 7100 	strd	r7, r1, [r5]
 8000faa:	2600      	movs	r6, #0
 8000fac:	4631      	mov	r1, r6
 8000fae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fb2:	f1c2 0320 	rsb	r3, r2, #32
 8000fb6:	40d8      	lsrs	r0, r3
 8000fb8:	fa0c fc02 	lsl.w	ip, ip, r2
 8000fbc:	fa21 f303 	lsr.w	r3, r1, r3
 8000fc0:	4091      	lsls	r1, r2
 8000fc2:	4301      	orrs	r1, r0
 8000fc4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000fc8:	fa1f fe8c 	uxth.w	lr, ip
 8000fcc:	fbb3 f0f7 	udiv	r0, r3, r7
 8000fd0:	fb07 3610 	mls	r6, r7, r0, r3
 8000fd4:	0c0b      	lsrs	r3, r1, #16
 8000fd6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000fda:	fb00 f60e 	mul.w	r6, r0, lr
 8000fde:	429e      	cmp	r6, r3
 8000fe0:	fa04 f402 	lsl.w	r4, r4, r2
 8000fe4:	d908      	bls.n	8000ff8 <__udivmoddi4+0x260>
 8000fe6:	eb1c 0303 	adds.w	r3, ip, r3
 8000fea:	f100 38ff 	add.w	r8, r0, #4294967295
 8000fee:	d22f      	bcs.n	8001050 <__udivmoddi4+0x2b8>
 8000ff0:	429e      	cmp	r6, r3
 8000ff2:	d92d      	bls.n	8001050 <__udivmoddi4+0x2b8>
 8000ff4:	3802      	subs	r0, #2
 8000ff6:	4463      	add	r3, ip
 8000ff8:	1b9b      	subs	r3, r3, r6
 8000ffa:	b289      	uxth	r1, r1
 8000ffc:	fbb3 f6f7 	udiv	r6, r3, r7
 8001000:	fb07 3316 	mls	r3, r7, r6, r3
 8001004:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8001008:	fb06 f30e 	mul.w	r3, r6, lr
 800100c:	428b      	cmp	r3, r1
 800100e:	d908      	bls.n	8001022 <__udivmoddi4+0x28a>
 8001010:	eb1c 0101 	adds.w	r1, ip, r1
 8001014:	f106 38ff 	add.w	r8, r6, #4294967295
 8001018:	d216      	bcs.n	8001048 <__udivmoddi4+0x2b0>
 800101a:	428b      	cmp	r3, r1
 800101c:	d914      	bls.n	8001048 <__udivmoddi4+0x2b0>
 800101e:	3e02      	subs	r6, #2
 8001020:	4461      	add	r1, ip
 8001022:	1ac9      	subs	r1, r1, r3
 8001024:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8001028:	e738      	b.n	8000e9c <__udivmoddi4+0x104>
 800102a:	462e      	mov	r6, r5
 800102c:	4628      	mov	r0, r5
 800102e:	e705      	b.n	8000e3c <__udivmoddi4+0xa4>
 8001030:	4606      	mov	r6, r0
 8001032:	e6e3      	b.n	8000dfc <__udivmoddi4+0x64>
 8001034:	4618      	mov	r0, r3
 8001036:	e6f8      	b.n	8000e2a <__udivmoddi4+0x92>
 8001038:	454b      	cmp	r3, r9
 800103a:	d2a9      	bcs.n	8000f90 <__udivmoddi4+0x1f8>
 800103c:	ebb9 0802 	subs.w	r8, r9, r2
 8001040:	eb64 0e0c 	sbc.w	lr, r4, ip
 8001044:	3801      	subs	r0, #1
 8001046:	e7a3      	b.n	8000f90 <__udivmoddi4+0x1f8>
 8001048:	4646      	mov	r6, r8
 800104a:	e7ea      	b.n	8001022 <__udivmoddi4+0x28a>
 800104c:	4620      	mov	r0, r4
 800104e:	e794      	b.n	8000f7a <__udivmoddi4+0x1e2>
 8001050:	4640      	mov	r0, r8
 8001052:	e7d1      	b.n	8000ff8 <__udivmoddi4+0x260>
 8001054:	46d0      	mov	r8, sl
 8001056:	e77b      	b.n	8000f50 <__udivmoddi4+0x1b8>
 8001058:	3b02      	subs	r3, #2
 800105a:	4461      	add	r1, ip
 800105c:	e732      	b.n	8000ec4 <__udivmoddi4+0x12c>
 800105e:	4630      	mov	r0, r6
 8001060:	e709      	b.n	8000e76 <__udivmoddi4+0xde>
 8001062:	4464      	add	r4, ip
 8001064:	3802      	subs	r0, #2
 8001066:	e742      	b.n	8000eee <__udivmoddi4+0x156>

08001068 <selfrel_offset31>:
 8001068:	6803      	ldr	r3, [r0, #0]
 800106a:	005a      	lsls	r2, r3, #1
 800106c:	bf4c      	ite	mi
 800106e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8001072:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 8001076:	4418      	add	r0, r3
 8001078:	4770      	bx	lr
 800107a:	bf00      	nop

0800107c <search_EIT_table>:
 800107c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001080:	b329      	cbz	r1, 80010ce <search_EIT_table+0x52>
 8001082:	1e4f      	subs	r7, r1, #1
 8001084:	4604      	mov	r4, r0
 8001086:	4615      	mov	r5, r2
 8001088:	463e      	mov	r6, r7
 800108a:	f04f 0800 	mov.w	r8, #0
 800108e:	eb08 0106 	add.w	r1, r8, r6
 8001092:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8001096:	1049      	asrs	r1, r1, #1
 8001098:	eb04 09c1 	add.w	r9, r4, r1, lsl #3
 800109c:	4648      	mov	r0, r9
 800109e:	f7ff ffe3 	bl	8001068 <selfrel_offset31>
 80010a2:	4603      	mov	r3, r0
 80010a4:	00c8      	lsls	r0, r1, #3
 80010a6:	3008      	adds	r0, #8
 80010a8:	428f      	cmp	r7, r1
 80010aa:	4420      	add	r0, r4
 80010ac:	d009      	beq.n	80010c2 <search_EIT_table+0x46>
 80010ae:	42ab      	cmp	r3, r5
 80010b0:	d809      	bhi.n	80010c6 <search_EIT_table+0x4a>
 80010b2:	f7ff ffd9 	bl	8001068 <selfrel_offset31>
 80010b6:	3801      	subs	r0, #1
 80010b8:	42a8      	cmp	r0, r5
 80010ba:	d20a      	bcs.n	80010d2 <search_EIT_table+0x56>
 80010bc:	f101 0801 	add.w	r8, r1, #1
 80010c0:	e7e5      	b.n	800108e <search_EIT_table+0x12>
 80010c2:	42ab      	cmp	r3, r5
 80010c4:	d905      	bls.n	80010d2 <search_EIT_table+0x56>
 80010c6:	4588      	cmp	r8, r1
 80010c8:	d001      	beq.n	80010ce <search_EIT_table+0x52>
 80010ca:	1e4e      	subs	r6, r1, #1
 80010cc:	e7df      	b.n	800108e <search_EIT_table+0x12>
 80010ce:	f04f 0900 	mov.w	r9, #0
 80010d2:	4648      	mov	r0, r9
 80010d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

080010d8 <__gnu_unwind_get_pr_addr>:
 80010d8:	2801      	cmp	r0, #1
 80010da:	d007      	beq.n	80010ec <__gnu_unwind_get_pr_addr+0x14>
 80010dc:	2802      	cmp	r0, #2
 80010de:	d007      	beq.n	80010f0 <__gnu_unwind_get_pr_addr+0x18>
 80010e0:	4b04      	ldr	r3, [pc, #16]	; (80010f4 <__gnu_unwind_get_pr_addr+0x1c>)
 80010e2:	2800      	cmp	r0, #0
 80010e4:	bf0c      	ite	eq
 80010e6:	4618      	moveq	r0, r3
 80010e8:	2000      	movne	r0, #0
 80010ea:	4770      	bx	lr
 80010ec:	4802      	ldr	r0, [pc, #8]	; (80010f8 <__gnu_unwind_get_pr_addr+0x20>)
 80010ee:	4770      	bx	lr
 80010f0:	4802      	ldr	r0, [pc, #8]	; (80010fc <__gnu_unwind_get_pr_addr+0x24>)
 80010f2:	4770      	bx	lr
 80010f4:	080017b1 	.word	0x080017b1
 80010f8:	080017b5 	.word	0x080017b5
 80010fc:	080017b9 	.word	0x080017b9

08001100 <get_eit_entry>:
 8001100:	b530      	push	{r4, r5, lr}
 8001102:	4b23      	ldr	r3, [pc, #140]	; (8001190 <get_eit_entry+0x90>)
 8001104:	b083      	sub	sp, #12
 8001106:	4604      	mov	r4, r0
 8001108:	1e8d      	subs	r5, r1, #2
 800110a:	b33b      	cbz	r3, 800115c <get_eit_entry+0x5c>
 800110c:	a901      	add	r1, sp, #4
 800110e:	4628      	mov	r0, r5
 8001110:	f3af 8000 	nop.w
 8001114:	b1e8      	cbz	r0, 8001152 <get_eit_entry+0x52>
 8001116:	9901      	ldr	r1, [sp, #4]
 8001118:	462a      	mov	r2, r5
 800111a:	f7ff ffaf 	bl	800107c <search_EIT_table>
 800111e:	4601      	mov	r1, r0
 8001120:	b1b8      	cbz	r0, 8001152 <get_eit_entry+0x52>
 8001122:	f7ff ffa1 	bl	8001068 <selfrel_offset31>
 8001126:	684b      	ldr	r3, [r1, #4]
 8001128:	64a0      	str	r0, [r4, #72]	; 0x48
 800112a:	2b01      	cmp	r3, #1
 800112c:	d02c      	beq.n	8001188 <get_eit_entry+0x88>
 800112e:	2b00      	cmp	r3, #0
 8001130:	f101 0004 	add.w	r0, r1, #4
 8001134:	db24      	blt.n	8001180 <get_eit_entry+0x80>
 8001136:	f7ff ff97 	bl	8001068 <selfrel_offset31>
 800113a:	2300      	movs	r3, #0
 800113c:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8001140:	6803      	ldr	r3, [r0, #0]
 8001142:	2b00      	cmp	r3, #0
 8001144:	db11      	blt.n	800116a <get_eit_entry+0x6a>
 8001146:	f7ff ff8f 	bl	8001068 <selfrel_offset31>
 800114a:	6120      	str	r0, [r4, #16]
 800114c:	2000      	movs	r0, #0
 800114e:	b003      	add	sp, #12
 8001150:	bd30      	pop	{r4, r5, pc}
 8001152:	2300      	movs	r3, #0
 8001154:	2009      	movs	r0, #9
 8001156:	6123      	str	r3, [r4, #16]
 8001158:	b003      	add	sp, #12
 800115a:	bd30      	pop	{r4, r5, pc}
 800115c:	4b0d      	ldr	r3, [pc, #52]	; (8001194 <get_eit_entry+0x94>)
 800115e:	490e      	ldr	r1, [pc, #56]	; (8001198 <get_eit_entry+0x98>)
 8001160:	1ac9      	subs	r1, r1, r3
 8001162:	10c9      	asrs	r1, r1, #3
 8001164:	4618      	mov	r0, r3
 8001166:	9101      	str	r1, [sp, #4]
 8001168:	e7d6      	b.n	8001118 <get_eit_entry+0x18>
 800116a:	f3c3 6003 	ubfx	r0, r3, #24, #4
 800116e:	f7ff ffb3 	bl	80010d8 <__gnu_unwind_get_pr_addr>
 8001172:	2800      	cmp	r0, #0
 8001174:	6120      	str	r0, [r4, #16]
 8001176:	bf14      	ite	ne
 8001178:	2000      	movne	r0, #0
 800117a:	2009      	moveq	r0, #9
 800117c:	b003      	add	sp, #12
 800117e:	bd30      	pop	{r4, r5, pc}
 8001180:	2301      	movs	r3, #1
 8001182:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8001186:	e7db      	b.n	8001140 <get_eit_entry+0x40>
 8001188:	2300      	movs	r3, #0
 800118a:	6123      	str	r3, [r4, #16]
 800118c:	2005      	movs	r0, #5
 800118e:	e7de      	b.n	800114e <get_eit_entry+0x4e>
 8001190:	00000000 	.word	0x00000000
 8001194:	08028a84 	.word	0x08028a84
 8001198:	08029084 	.word	0x08029084

0800119c <restore_non_core_regs>:
 800119c:	6803      	ldr	r3, [r0, #0]
 800119e:	07da      	lsls	r2, r3, #31
 80011a0:	b510      	push	{r4, lr}
 80011a2:	4604      	mov	r4, r0
 80011a4:	d406      	bmi.n	80011b4 <restore_non_core_regs+0x18>
 80011a6:	079b      	lsls	r3, r3, #30
 80011a8:	f100 0048 	add.w	r0, r0, #72	; 0x48
 80011ac:	d509      	bpl.n	80011c2 <restore_non_core_regs+0x26>
 80011ae:	f000 fc5b 	bl	8001a68 <__gnu_Unwind_Restore_VFP_D>
 80011b2:	6823      	ldr	r3, [r4, #0]
 80011b4:	0759      	lsls	r1, r3, #29
 80011b6:	d509      	bpl.n	80011cc <restore_non_core_regs+0x30>
 80011b8:	071a      	lsls	r2, r3, #28
 80011ba:	d50e      	bpl.n	80011da <restore_non_core_regs+0x3e>
 80011bc:	06db      	lsls	r3, r3, #27
 80011be:	d513      	bpl.n	80011e8 <restore_non_core_regs+0x4c>
 80011c0:	bd10      	pop	{r4, pc}
 80011c2:	f000 fc49 	bl	8001a58 <__gnu_Unwind_Restore_VFP>
 80011c6:	6823      	ldr	r3, [r4, #0]
 80011c8:	0759      	lsls	r1, r3, #29
 80011ca:	d4f5      	bmi.n	80011b8 <restore_non_core_regs+0x1c>
 80011cc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80011d0:	f000 fc52 	bl	8001a78 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80011d4:	6823      	ldr	r3, [r4, #0]
 80011d6:	071a      	lsls	r2, r3, #28
 80011d8:	d4f0      	bmi.n	80011bc <restore_non_core_regs+0x20>
 80011da:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 80011de:	f000 fc53 	bl	8001a88 <__gnu_Unwind_Restore_WMMXD>
 80011e2:	6823      	ldr	r3, [r4, #0]
 80011e4:	06db      	lsls	r3, r3, #27
 80011e6:	d4eb      	bmi.n	80011c0 <restore_non_core_regs+0x24>
 80011e8:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 80011ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80011f0:	f000 bc8e 	b.w	8001b10 <__gnu_Unwind_Restore_WMMXC>

080011f4 <__gnu_unwind_24bit.constprop.0>:
 80011f4:	2009      	movs	r0, #9
 80011f6:	4770      	bx	lr

080011f8 <_Unwind_decode_typeinfo_ptr.constprop.0>:
 80011f8:	4603      	mov	r3, r0
 80011fa:	6800      	ldr	r0, [r0, #0]
 80011fc:	b100      	cbz	r0, 8001200 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
 80011fe:	4418      	add	r0, r3
 8001200:	4770      	bx	lr
 8001202:	bf00      	nop

08001204 <_Unwind_DebugHook>:
 8001204:	4770      	bx	lr
 8001206:	bf00      	nop

08001208 <unwind_phase2>:
 8001208:	b570      	push	{r4, r5, r6, lr}
 800120a:	4604      	mov	r4, r0
 800120c:	460e      	mov	r6, r1
 800120e:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001210:	4620      	mov	r0, r4
 8001212:	f7ff ff75 	bl	8001100 <get_eit_entry>
 8001216:	4605      	mov	r5, r0
 8001218:	b988      	cbnz	r0, 800123e <unwind_phase2+0x36>
 800121a:	6c32      	ldr	r2, [r6, #64]	; 0x40
 800121c:	6162      	str	r2, [r4, #20]
 800121e:	6923      	ldr	r3, [r4, #16]
 8001220:	4632      	mov	r2, r6
 8001222:	4621      	mov	r1, r4
 8001224:	2001      	movs	r0, #1
 8001226:	4798      	blx	r3
 8001228:	2808      	cmp	r0, #8
 800122a:	d0f0      	beq.n	800120e <unwind_phase2+0x6>
 800122c:	2807      	cmp	r0, #7
 800122e:	d106      	bne.n	800123e <unwind_phase2+0x36>
 8001230:	4628      	mov	r0, r5
 8001232:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001234:	f7ff ffe6 	bl	8001204 <_Unwind_DebugHook>
 8001238:	1d30      	adds	r0, r6, #4
 800123a:	f000 fc01 	bl	8001a40 <__restore_core_regs>
 800123e:	f01b fbb7 	bl	801c9b0 <abort>
 8001242:	bf00      	nop

08001244 <unwind_phase2_forced>:
 8001244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001248:	1d0d      	adds	r5, r1, #4
 800124a:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800124e:	f8d0 9018 	ldr.w	r9, [r0, #24]
 8001252:	4607      	mov	r7, r0
 8001254:	4614      	mov	r4, r2
 8001256:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001258:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 800125c:	f10d 0c0c 	add.w	ip, sp, #12
 8001260:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001264:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001266:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800126a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800126c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8001270:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8001274:	ae02      	add	r6, sp, #8
 8001276:	f04f 0e00 	mov.w	lr, #0
 800127a:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 800127e:	f8c6 e000 	str.w	lr, [r6]
 8001282:	e020      	b.n	80012c6 <unwind_phase2_forced+0x82>
 8001284:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8001286:	617b      	str	r3, [r7, #20]
 8001288:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800128c:	4631      	mov	r1, r6
 800128e:	a87a      	add	r0, sp, #488	; 0x1e8
 8001290:	f01b fc00 	bl	801ca94 <memcpy>
 8001294:	693b      	ldr	r3, [r7, #16]
 8001296:	aa7a      	add	r2, sp, #488	; 0x1e8
 8001298:	4639      	mov	r1, r7
 800129a:	4650      	mov	r0, sl
 800129c:	4798      	blx	r3
 800129e:	9b88      	ldr	r3, [sp, #544]	; 0x220
 80012a0:	6473      	str	r3, [r6, #68]	; 0x44
 80012a2:	4621      	mov	r1, r4
 80012a4:	e9cd 6900 	strd	r6, r9, [sp]
 80012a8:	4605      	mov	r5, r0
 80012aa:	463b      	mov	r3, r7
 80012ac:	463a      	mov	r2, r7
 80012ae:	2001      	movs	r0, #1
 80012b0:	47c0      	blx	r8
 80012b2:	4604      	mov	r4, r0
 80012b4:	b9e0      	cbnz	r0, 80012f0 <unwind_phase2_forced+0xac>
 80012b6:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80012ba:	a97a      	add	r1, sp, #488	; 0x1e8
 80012bc:	4630      	mov	r0, r6
 80012be:	f01b fbe9 	bl	801ca94 <memcpy>
 80012c2:	2d08      	cmp	r5, #8
 80012c4:	d11a      	bne.n	80012fc <unwind_phase2_forced+0xb8>
 80012c6:	6c31      	ldr	r1, [r6, #64]	; 0x40
 80012c8:	4638      	mov	r0, r7
 80012ca:	f7ff ff19 	bl	8001100 <get_eit_entry>
 80012ce:	3409      	adds	r4, #9
 80012d0:	fa5f fa84 	uxtb.w	sl, r4
 80012d4:	4605      	mov	r5, r0
 80012d6:	2800      	cmp	r0, #0
 80012d8:	d0d4      	beq.n	8001284 <unwind_phase2_forced+0x40>
 80012da:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80012dc:	6473      	str	r3, [r6, #68]	; 0x44
 80012de:	463a      	mov	r2, r7
 80012e0:	e9cd 6900 	strd	r6, r9, [sp]
 80012e4:	463b      	mov	r3, r7
 80012e6:	f04a 0110 	orr.w	r1, sl, #16
 80012ea:	2001      	movs	r0, #1
 80012ec:	47c0      	blx	r8
 80012ee:	b100      	cbz	r0, 80012f2 <unwind_phase2_forced+0xae>
 80012f0:	2509      	movs	r5, #9
 80012f2:	4628      	mov	r0, r5
 80012f4:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 80012f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80012fc:	2d07      	cmp	r5, #7
 80012fe:	d1f7      	bne.n	80012f0 <unwind_phase2_forced+0xac>
 8001300:	4620      	mov	r0, r4
 8001302:	6c31      	ldr	r1, [r6, #64]	; 0x40
 8001304:	f7ff ff7e 	bl	8001204 <_Unwind_DebugHook>
 8001308:	a803      	add	r0, sp, #12
 800130a:	f000 fb99 	bl	8001a40 <__restore_core_regs>
 800130e:	bf00      	nop

08001310 <_Unwind_GetCFA>:
 8001310:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8001312:	4770      	bx	lr

08001314 <__gnu_Unwind_RaiseException>:
 8001314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001316:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8001318:	640b      	str	r3, [r1, #64]	; 0x40
 800131a:	f101 0c04 	add.w	ip, r1, #4
 800131e:	460e      	mov	r6, r1
 8001320:	4605      	mov	r5, r0
 8001322:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001326:	b0f9      	sub	sp, #484	; 0x1e4
 8001328:	ac01      	add	r4, sp, #4
 800132a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800132c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001330:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001332:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001336:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001338:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 800133c:	f04f 37ff 	mov.w	r7, #4294967295
 8001340:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001344:	9700      	str	r7, [sp, #0]
 8001346:	e006      	b.n	8001356 <__gnu_Unwind_RaiseException+0x42>
 8001348:	692b      	ldr	r3, [r5, #16]
 800134a:	466a      	mov	r2, sp
 800134c:	4629      	mov	r1, r5
 800134e:	4798      	blx	r3
 8001350:	2808      	cmp	r0, #8
 8001352:	4604      	mov	r4, r0
 8001354:	d108      	bne.n	8001368 <__gnu_Unwind_RaiseException+0x54>
 8001356:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001358:	4628      	mov	r0, r5
 800135a:	f7ff fed1 	bl	8001100 <get_eit_entry>
 800135e:	2800      	cmp	r0, #0
 8001360:	d0f2      	beq.n	8001348 <__gnu_Unwind_RaiseException+0x34>
 8001362:	2009      	movs	r0, #9
 8001364:	b079      	add	sp, #484	; 0x1e4
 8001366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001368:	4668      	mov	r0, sp
 800136a:	f7ff ff17 	bl	800119c <restore_non_core_regs>
 800136e:	2c06      	cmp	r4, #6
 8001370:	d1f7      	bne.n	8001362 <__gnu_Unwind_RaiseException+0x4e>
 8001372:	4631      	mov	r1, r6
 8001374:	4628      	mov	r0, r5
 8001376:	f7ff ff47 	bl	8001208 <unwind_phase2>
 800137a:	bf00      	nop

0800137c <__gnu_Unwind_ForcedUnwind>:
 800137c:	60c1      	str	r1, [r0, #12]
 800137e:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
 8001380:	6182      	str	r2, [r0, #24]
 8001382:	6419      	str	r1, [r3, #64]	; 0x40
 8001384:	2200      	movs	r2, #0
 8001386:	4619      	mov	r1, r3
 8001388:	e75c      	b.n	8001244 <unwind_phase2_forced>
 800138a:	bf00      	nop

0800138c <__gnu_Unwind_Resume>:
 800138c:	b570      	push	{r4, r5, r6, lr}
 800138e:	68c6      	ldr	r6, [r0, #12]
 8001390:	6943      	ldr	r3, [r0, #20]
 8001392:	640b      	str	r3, [r1, #64]	; 0x40
 8001394:	b9ae      	cbnz	r6, 80013c2 <__gnu_Unwind_Resume+0x36>
 8001396:	6903      	ldr	r3, [r0, #16]
 8001398:	460a      	mov	r2, r1
 800139a:	4604      	mov	r4, r0
 800139c:	460d      	mov	r5, r1
 800139e:	4601      	mov	r1, r0
 80013a0:	2002      	movs	r0, #2
 80013a2:	4798      	blx	r3
 80013a4:	2807      	cmp	r0, #7
 80013a6:	d005      	beq.n	80013b4 <__gnu_Unwind_Resume+0x28>
 80013a8:	2808      	cmp	r0, #8
 80013aa:	d10f      	bne.n	80013cc <__gnu_Unwind_Resume+0x40>
 80013ac:	4629      	mov	r1, r5
 80013ae:	4620      	mov	r0, r4
 80013b0:	f7ff ff2a 	bl	8001208 <unwind_phase2>
 80013b4:	4630      	mov	r0, r6
 80013b6:	6c29      	ldr	r1, [r5, #64]	; 0x40
 80013b8:	f7ff ff24 	bl	8001204 <_Unwind_DebugHook>
 80013bc:	1d28      	adds	r0, r5, #4
 80013be:	f000 fb3f 	bl	8001a40 <__restore_core_regs>
 80013c2:	2201      	movs	r2, #1
 80013c4:	f7ff ff3e 	bl	8001244 <unwind_phase2_forced>
 80013c8:	f01b faf2 	bl	801c9b0 <abort>
 80013cc:	f01b faf0 	bl	801c9b0 <abort>

080013d0 <__gnu_Unwind_Resume_or_Rethrow>:
 80013d0:	68c2      	ldr	r2, [r0, #12]
 80013d2:	b11a      	cbz	r2, 80013dc <__gnu_Unwind_Resume_or_Rethrow+0xc>
 80013d4:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 80013d6:	640a      	str	r2, [r1, #64]	; 0x40
 80013d8:	2200      	movs	r2, #0
 80013da:	e733      	b.n	8001244 <unwind_phase2_forced>
 80013dc:	e79a      	b.n	8001314 <__gnu_Unwind_RaiseException>
 80013de:	bf00      	nop

080013e0 <_Unwind_Complete>:
 80013e0:	4770      	bx	lr
 80013e2:	bf00      	nop

080013e4 <_Unwind_DeleteException>:
 80013e4:	6883      	ldr	r3, [r0, #8]
 80013e6:	4601      	mov	r1, r0
 80013e8:	b10b      	cbz	r3, 80013ee <_Unwind_DeleteException+0xa>
 80013ea:	2001      	movs	r0, #1
 80013ec:	4718      	bx	r3
 80013ee:	4770      	bx	lr

080013f0 <_Unwind_VRS_Get>:
 80013f0:	2901      	cmp	r1, #1
 80013f2:	d012      	beq.n	800141a <_Unwind_VRS_Get+0x2a>
 80013f4:	d809      	bhi.n	800140a <_Unwind_VRS_Get+0x1a>
 80013f6:	b973      	cbnz	r3, 8001416 <_Unwind_VRS_Get+0x26>
 80013f8:	2a0f      	cmp	r2, #15
 80013fa:	d80c      	bhi.n	8001416 <_Unwind_VRS_Get+0x26>
 80013fc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8001400:	4618      	mov	r0, r3
 8001402:	6853      	ldr	r3, [r2, #4]
 8001404:	9a00      	ldr	r2, [sp, #0]
 8001406:	6013      	str	r3, [r2, #0]
 8001408:	4770      	bx	lr
 800140a:	3903      	subs	r1, #3
 800140c:	2901      	cmp	r1, #1
 800140e:	bf94      	ite	ls
 8001410:	2001      	movls	r0, #1
 8001412:	2002      	movhi	r0, #2
 8001414:	4770      	bx	lr
 8001416:	2002      	movs	r0, #2
 8001418:	4770      	bx	lr
 800141a:	4608      	mov	r0, r1
 800141c:	4770      	bx	lr
 800141e:	bf00      	nop

08001420 <_Unwind_GetGR>:
 8001420:	b500      	push	{lr}
 8001422:	b085      	sub	sp, #20
 8001424:	460a      	mov	r2, r1
 8001426:	2300      	movs	r3, #0
 8001428:	a903      	add	r1, sp, #12
 800142a:	9100      	str	r1, [sp, #0]
 800142c:	4619      	mov	r1, r3
 800142e:	f7ff ffdf 	bl	80013f0 <_Unwind_VRS_Get>
 8001432:	9803      	ldr	r0, [sp, #12]
 8001434:	b005      	add	sp, #20
 8001436:	f85d fb04 	ldr.w	pc, [sp], #4
 800143a:	bf00      	nop

0800143c <_Unwind_VRS_Set>:
 800143c:	2901      	cmp	r1, #1
 800143e:	d012      	beq.n	8001466 <_Unwind_VRS_Set+0x2a>
 8001440:	d809      	bhi.n	8001456 <_Unwind_VRS_Set+0x1a>
 8001442:	b973      	cbnz	r3, 8001462 <_Unwind_VRS_Set+0x26>
 8001444:	2a0f      	cmp	r2, #15
 8001446:	d80c      	bhi.n	8001462 <_Unwind_VRS_Set+0x26>
 8001448:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800144c:	9a00      	ldr	r2, [sp, #0]
 800144e:	6812      	ldr	r2, [r2, #0]
 8001450:	6042      	str	r2, [r0, #4]
 8001452:	4618      	mov	r0, r3
 8001454:	4770      	bx	lr
 8001456:	3903      	subs	r1, #3
 8001458:	2901      	cmp	r1, #1
 800145a:	bf94      	ite	ls
 800145c:	2001      	movls	r0, #1
 800145e:	2002      	movhi	r0, #2
 8001460:	4770      	bx	lr
 8001462:	2002      	movs	r0, #2
 8001464:	4770      	bx	lr
 8001466:	4608      	mov	r0, r1
 8001468:	4770      	bx	lr
 800146a:	bf00      	nop

0800146c <_Unwind_SetGR>:
 800146c:	b510      	push	{r4, lr}
 800146e:	b084      	sub	sp, #16
 8001470:	2300      	movs	r3, #0
 8001472:	ac03      	add	r4, sp, #12
 8001474:	9203      	str	r2, [sp, #12]
 8001476:	9400      	str	r4, [sp, #0]
 8001478:	460a      	mov	r2, r1
 800147a:	4619      	mov	r1, r3
 800147c:	f7ff ffde 	bl	800143c <_Unwind_VRS_Set>
 8001480:	b004      	add	sp, #16
 8001482:	bd10      	pop	{r4, pc}

08001484 <__gnu_Unwind_Backtrace>:
 8001484:	b570      	push	{r4, r5, r6, lr}
 8001486:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8001488:	6413      	str	r3, [r2, #64]	; 0x40
 800148a:	f102 0c04 	add.w	ip, r2, #4
 800148e:	4605      	mov	r5, r0
 8001490:	460c      	mov	r4, r1
 8001492:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 8001496:	f5ad 7d0e 	sub.w	sp, sp, #568	; 0x238
 800149a:	f10d 0e5c 	add.w	lr, sp, #92	; 0x5c
 800149e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80014a2:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80014a6:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80014aa:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80014ae:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 80014b2:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
 80014b6:	f04f 36ff 	mov.w	r6, #4294967295
 80014ba:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
 80014be:	9616      	str	r6, [sp, #88]	; 0x58
 80014c0:	e010      	b.n	80014e4 <__gnu_Unwind_Backtrace+0x60>
 80014c2:	f7ff ffd3 	bl	800146c <_Unwind_SetGR>
 80014c6:	4621      	mov	r1, r4
 80014c8:	a816      	add	r0, sp, #88	; 0x58
 80014ca:	47a8      	blx	r5
 80014cc:	4603      	mov	r3, r0
 80014ce:	aa16      	add	r2, sp, #88	; 0x58
 80014d0:	4669      	mov	r1, sp
 80014d2:	2008      	movs	r0, #8
 80014d4:	b983      	cbnz	r3, 80014f8 <__gnu_Unwind_Backtrace+0x74>
 80014d6:	9b04      	ldr	r3, [sp, #16]
 80014d8:	4798      	blx	r3
 80014da:	2805      	cmp	r0, #5
 80014dc:	4606      	mov	r6, r0
 80014de:	d00c      	beq.n	80014fa <__gnu_Unwind_Backtrace+0x76>
 80014e0:	2809      	cmp	r0, #9
 80014e2:	d009      	beq.n	80014f8 <__gnu_Unwind_Backtrace+0x74>
 80014e4:	9926      	ldr	r1, [sp, #152]	; 0x98
 80014e6:	4668      	mov	r0, sp
 80014e8:	f7ff fe0a 	bl	8001100 <get_eit_entry>
 80014ec:	4603      	mov	r3, r0
 80014ee:	466a      	mov	r2, sp
 80014f0:	210c      	movs	r1, #12
 80014f2:	a816      	add	r0, sp, #88	; 0x58
 80014f4:	2b00      	cmp	r3, #0
 80014f6:	d0e4      	beq.n	80014c2 <__gnu_Unwind_Backtrace+0x3e>
 80014f8:	2609      	movs	r6, #9
 80014fa:	a816      	add	r0, sp, #88	; 0x58
 80014fc:	f7ff fe4e 	bl	800119c <restore_non_core_regs>
 8001500:	4630      	mov	r0, r6
 8001502:	f50d 7d0e 	add.w	sp, sp, #568	; 0x238
 8001506:	bd70      	pop	{r4, r5, r6, pc}

08001508 <__gnu_unwind_pr_common>:
 8001508:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800150c:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
 800150e:	b089      	sub	sp, #36	; 0x24
 8001510:	461e      	mov	r6, r3
 8001512:	f854 3b04 	ldr.w	r3, [r4], #4
 8001516:	9406      	str	r4, [sp, #24]
 8001518:	460d      	mov	r5, r1
 800151a:	4617      	mov	r7, r2
 800151c:	f000 0803 	and.w	r8, r0, #3
 8001520:	2e00      	cmp	r6, #0
 8001522:	d079      	beq.n	8001618 <__gnu_unwind_pr_common+0x110>
 8001524:	0c1a      	lsrs	r2, r3, #16
 8001526:	041b      	lsls	r3, r3, #16
 8001528:	9305      	str	r3, [sp, #20]
 800152a:	f88d 201d 	strb.w	r2, [sp, #29]
 800152e:	2302      	movs	r3, #2
 8001530:	b2d2      	uxtb	r2, r2
 8001532:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8001536:	f88d 301c 	strb.w	r3, [sp, #28]
 800153a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 800153c:	f1b8 0f02 	cmp.w	r8, #2
 8001540:	bf08      	it	eq
 8001542:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8001544:	f013 0301 	ands.w	r3, r3, #1
 8001548:	d00c      	beq.n	8001564 <__gnu_unwind_pr_common+0x5c>
 800154a:	a905      	add	r1, sp, #20
 800154c:	4638      	mov	r0, r7
 800154e:	f000 fb79 	bl	8001c44 <__gnu_unwind_execute>
 8001552:	b918      	cbnz	r0, 800155c <__gnu_unwind_pr_common+0x54>
 8001554:	2008      	movs	r0, #8
 8001556:	b009      	add	sp, #36	; 0x24
 8001558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800155c:	2009      	movs	r0, #9
 800155e:	b009      	add	sp, #36	; 0x24
 8001560:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001564:	f8d4 a000 	ldr.w	sl, [r4]
 8001568:	f1ba 0f00 	cmp.w	sl, #0
 800156c:	d0ed      	beq.n	800154a <__gnu_unwind_pr_common+0x42>
 800156e:	9301      	str	r3, [sp, #4]
 8001570:	f000 0308 	and.w	r3, r0, #8
 8001574:	9302      	str	r3, [sp, #8]
 8001576:	2e02      	cmp	r6, #2
 8001578:	d04a      	beq.n	8001610 <__gnu_unwind_pr_common+0x108>
 800157a:	f8b4 a000 	ldrh.w	sl, [r4]
 800157e:	f8b4 9002 	ldrh.w	r9, [r4, #2]
 8001582:	3404      	adds	r4, #4
 8001584:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8001586:	f029 0b01 	bic.w	fp, r9, #1
 800158a:	210f      	movs	r1, #15
 800158c:	4638      	mov	r0, r7
 800158e:	449b      	add	fp, r3
 8001590:	f7ff ff46 	bl	8001420 <_Unwind_GetGR>
 8001594:	4583      	cmp	fp, r0
 8001596:	d839      	bhi.n	800160c <__gnu_unwind_pr_common+0x104>
 8001598:	f02a 0301 	bic.w	r3, sl, #1
 800159c:	449b      	add	fp, r3
 800159e:	4583      	cmp	fp, r0
 80015a0:	bf94      	ite	ls
 80015a2:	2000      	movls	r0, #0
 80015a4:	2001      	movhi	r0, #1
 80015a6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80015aa:	f003 0302 	and.w	r3, r3, #2
 80015ae:	f00a 0a01 	and.w	sl, sl, #1
 80015b2:	ea43 030a 	orr.w	r3, r3, sl
 80015b6:	2b01      	cmp	r3, #1
 80015b8:	d049      	beq.n	800164e <__gnu_unwind_pr_common+0x146>
 80015ba:	2b02      	cmp	r3, #2
 80015bc:	d032      	beq.n	8001624 <__gnu_unwind_pr_common+0x11c>
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d1cc      	bne.n	800155c <__gnu_unwind_pr_common+0x54>
 80015c2:	f1b8 0f00 	cmp.w	r8, #0
 80015c6:	d002      	beq.n	80015ce <__gnu_unwind_pr_common+0xc6>
 80015c8:	2800      	cmp	r0, #0
 80015ca:	f040 80cd 	bne.w	8001768 <__gnu_unwind_pr_common+0x260>
 80015ce:	3404      	adds	r4, #4
 80015d0:	f8d4 a000 	ldr.w	sl, [r4]
 80015d4:	f1ba 0f00 	cmp.w	sl, #0
 80015d8:	d1cd      	bne.n	8001576 <__gnu_unwind_pr_common+0x6e>
 80015da:	a905      	add	r1, sp, #20
 80015dc:	4638      	mov	r0, r7
 80015de:	f000 fb31 	bl	8001c44 <__gnu_unwind_execute>
 80015e2:	2800      	cmp	r0, #0
 80015e4:	d1ba      	bne.n	800155c <__gnu_unwind_pr_common+0x54>
 80015e6:	9b01      	ldr	r3, [sp, #4]
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d0b3      	beq.n	8001554 <__gnu_unwind_pr_common+0x4c>
 80015ec:	210f      	movs	r1, #15
 80015ee:	4638      	mov	r0, r7
 80015f0:	f7ff ff16 	bl	8001420 <_Unwind_GetGR>
 80015f4:	210e      	movs	r1, #14
 80015f6:	4602      	mov	r2, r0
 80015f8:	4638      	mov	r0, r7
 80015fa:	f7ff ff37 	bl	800146c <_Unwind_SetGR>
 80015fe:	4638      	mov	r0, r7
 8001600:	4a6a      	ldr	r2, [pc, #424]	; (80017ac <__gnu_unwind_pr_common+0x2a4>)
 8001602:	210f      	movs	r1, #15
 8001604:	f7ff ff32 	bl	800146c <_Unwind_SetGR>
 8001608:	2007      	movs	r0, #7
 800160a:	e7a8      	b.n	800155e <__gnu_unwind_pr_common+0x56>
 800160c:	2000      	movs	r0, #0
 800160e:	e7ca      	b.n	80015a6 <__gnu_unwind_pr_common+0x9e>
 8001610:	f8d4 9004 	ldr.w	r9, [r4, #4]
 8001614:	3408      	adds	r4, #8
 8001616:	e7b5      	b.n	8001584 <__gnu_unwind_pr_common+0x7c>
 8001618:	021b      	lsls	r3, r3, #8
 800161a:	9305      	str	r3, [sp, #20]
 800161c:	2303      	movs	r3, #3
 800161e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8001622:	e78a      	b.n	800153a <__gnu_unwind_pr_common+0x32>
 8001624:	6823      	ldr	r3, [r4, #0]
 8001626:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
 800162a:	f1b8 0f00 	cmp.w	r8, #0
 800162e:	d145      	bne.n	80016bc <__gnu_unwind_pr_common+0x1b4>
 8001630:	b128      	cbz	r0, 800163e <__gnu_unwind_pr_common+0x136>
 8001632:	9a02      	ldr	r2, [sp, #8]
 8001634:	2a00      	cmp	r2, #0
 8001636:	d05c      	beq.n	80016f2 <__gnu_unwind_pr_common+0x1ea>
 8001638:	f1bb 0f00 	cmp.w	fp, #0
 800163c:	d074      	beq.n	8001728 <__gnu_unwind_pr_common+0x220>
 800163e:	2b00      	cmp	r3, #0
 8001640:	da00      	bge.n	8001644 <__gnu_unwind_pr_common+0x13c>
 8001642:	3404      	adds	r4, #4
 8001644:	f10b 0b01 	add.w	fp, fp, #1
 8001648:	eb04 048b 	add.w	r4, r4, fp, lsl #2
 800164c:	e7c0      	b.n	80015d0 <__gnu_unwind_pr_common+0xc8>
 800164e:	f1b8 0f00 	cmp.w	r8, #0
 8001652:	d119      	bne.n	8001688 <__gnu_unwind_pr_common+0x180>
 8001654:	b1b0      	cbz	r0, 8001684 <__gnu_unwind_pr_common+0x17c>
 8001656:	6863      	ldr	r3, [r4, #4]
 8001658:	6822      	ldr	r2, [r4, #0]
 800165a:	1c99      	adds	r1, r3, #2
 800165c:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8001660:	f43f af7c 	beq.w	800155c <__gnu_unwind_pr_common+0x54>
 8001664:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8001668:	3301      	adds	r3, #1
 800166a:	9104      	str	r1, [sp, #16]
 800166c:	f000 8090 	beq.w	8001790 <__gnu_unwind_pr_common+0x288>
 8001670:	1d20      	adds	r0, r4, #4
 8001672:	f7ff fdc1 	bl	80011f8 <_Unwind_decode_typeinfo_ptr.constprop.0>
 8001676:	ab04      	add	r3, sp, #16
 8001678:	4601      	mov	r1, r0
 800167a:	4628      	mov	r0, r5
 800167c:	f019 fb1a 	bl	801acb4 <__cxa_type_match>
 8001680:	2800      	cmp	r0, #0
 8001682:	d15b      	bne.n	800173c <__gnu_unwind_pr_common+0x234>
 8001684:	3408      	adds	r4, #8
 8001686:	e7a3      	b.n	80015d0 <__gnu_unwind_pr_common+0xc8>
 8001688:	210d      	movs	r1, #13
 800168a:	4638      	mov	r0, r7
 800168c:	f8d5 9020 	ldr.w	r9, [r5, #32]
 8001690:	f7ff fec6 	bl	8001420 <_Unwind_GetGR>
 8001694:	4581      	cmp	r9, r0
 8001696:	d1f5      	bne.n	8001684 <__gnu_unwind_pr_common+0x17c>
 8001698:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800169a:	429c      	cmp	r4, r3
 800169c:	d1f2      	bne.n	8001684 <__gnu_unwind_pr_common+0x17c>
 800169e:	4620      	mov	r0, r4
 80016a0:	f7ff fce2 	bl	8001068 <selfrel_offset31>
 80016a4:	210f      	movs	r1, #15
 80016a6:	4602      	mov	r2, r0
 80016a8:	4638      	mov	r0, r7
 80016aa:	f7ff fedf 	bl	800146c <_Unwind_SetGR>
 80016ae:	4638      	mov	r0, r7
 80016b0:	462a      	mov	r2, r5
 80016b2:	2100      	movs	r1, #0
 80016b4:	f7ff feda 	bl	800146c <_Unwind_SetGR>
 80016b8:	2007      	movs	r0, #7
 80016ba:	e750      	b.n	800155e <__gnu_unwind_pr_common+0x56>
 80016bc:	210d      	movs	r1, #13
 80016be:	4638      	mov	r0, r7
 80016c0:	f8d5 9020 	ldr.w	r9, [r5, #32]
 80016c4:	f7ff feac 	bl	8001420 <_Unwind_GetGR>
 80016c8:	4581      	cmp	r9, r0
 80016ca:	d001      	beq.n	80016d0 <__gnu_unwind_pr_common+0x1c8>
 80016cc:	6823      	ldr	r3, [r4, #0]
 80016ce:	e7b6      	b.n	800163e <__gnu_unwind_pr_common+0x136>
 80016d0:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80016d2:	429c      	cmp	r4, r3
 80016d4:	d1fa      	bne.n	80016cc <__gnu_unwind_pr_common+0x1c4>
 80016d6:	2304      	movs	r3, #4
 80016d8:	2200      	movs	r2, #0
 80016da:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
 80016de:	18e3      	adds	r3, r4, r3
 80016e0:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
 80016e4:	636b      	str	r3, [r5, #52]	; 0x34
 80016e6:	6823      	ldr	r3, [r4, #0]
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	db59      	blt.n	80017a0 <__gnu_unwind_pr_common+0x298>
 80016ec:	2301      	movs	r3, #1
 80016ee:	9301      	str	r3, [sp, #4]
 80016f0:	e7a8      	b.n	8001644 <__gnu_unwind_pr_common+0x13c>
 80016f2:	f105 0358 	add.w	r3, r5, #88	; 0x58
 80016f6:	f8cd 800c 	str.w	r8, [sp, #12]
 80016fa:	f104 0a04 	add.w	sl, r4, #4
 80016fe:	46b0      	mov	r8, r6
 8001700:	4691      	mov	r9, r2
 8001702:	461e      	mov	r6, r3
 8001704:	e00e      	b.n	8001724 <__gnu_unwind_pr_common+0x21c>
 8001706:	4650      	mov	r0, sl
 8001708:	9604      	str	r6, [sp, #16]
 800170a:	f7ff fd75 	bl	80011f8 <_Unwind_decode_typeinfo_ptr.constprop.0>
 800170e:	2200      	movs	r2, #0
 8001710:	4601      	mov	r1, r0
 8001712:	ab04      	add	r3, sp, #16
 8001714:	4628      	mov	r0, r5
 8001716:	f109 0901 	add.w	r9, r9, #1
 800171a:	f10a 0a04 	add.w	sl, sl, #4
 800171e:	f019 fac9 	bl	801acb4 <__cxa_type_match>
 8001722:	b9e0      	cbnz	r0, 800175e <__gnu_unwind_pr_common+0x256>
 8001724:	45d9      	cmp	r9, fp
 8001726:	d1ee      	bne.n	8001706 <__gnu_unwind_pr_common+0x1fe>
 8001728:	210d      	movs	r1, #13
 800172a:	4638      	mov	r0, r7
 800172c:	f7ff fe78 	bl	8001420 <_Unwind_GetGR>
 8001730:	9b04      	ldr	r3, [sp, #16]
 8001732:	62ac      	str	r4, [r5, #40]	; 0x28
 8001734:	e9c5 0308 	strd	r0, r3, [r5, #32]
 8001738:	2006      	movs	r0, #6
 800173a:	e710      	b.n	800155e <__gnu_unwind_pr_common+0x56>
 800173c:	4681      	mov	r9, r0
 800173e:	210d      	movs	r1, #13
 8001740:	4638      	mov	r0, r7
 8001742:	f7ff fe6d 	bl	8001420 <_Unwind_GetGR>
 8001746:	f1b9 0f02 	cmp.w	r9, #2
 800174a:	6228      	str	r0, [r5, #32]
 800174c:	d125      	bne.n	800179a <__gnu_unwind_pr_common+0x292>
 800174e:	462b      	mov	r3, r5
 8001750:	9a04      	ldr	r2, [sp, #16]
 8001752:	f843 2f2c 	str.w	r2, [r3, #44]!
 8001756:	626b      	str	r3, [r5, #36]	; 0x24
 8001758:	62ac      	str	r4, [r5, #40]	; 0x28
 800175a:	2006      	movs	r0, #6
 800175c:	e6ff      	b.n	800155e <__gnu_unwind_pr_common+0x56>
 800175e:	4646      	mov	r6, r8
 8001760:	6823      	ldr	r3, [r4, #0]
 8001762:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8001766:	e76a      	b.n	800163e <__gnu_unwind_pr_common+0x136>
 8001768:	4620      	mov	r0, r4
 800176a:	f7ff fc7d 	bl	8001068 <selfrel_offset31>
 800176e:	3404      	adds	r4, #4
 8001770:	4602      	mov	r2, r0
 8001772:	63ac      	str	r4, [r5, #56]	; 0x38
 8001774:	4628      	mov	r0, r5
 8001776:	4614      	mov	r4, r2
 8001778:	f019 fafa 	bl	801ad70 <__cxa_begin_cleanup>
 800177c:	2800      	cmp	r0, #0
 800177e:	f43f aeed 	beq.w	800155c <__gnu_unwind_pr_common+0x54>
 8001782:	4638      	mov	r0, r7
 8001784:	4622      	mov	r2, r4
 8001786:	210f      	movs	r1, #15
 8001788:	f7ff fe70 	bl	800146c <_Unwind_SetGR>
 800178c:	2007      	movs	r0, #7
 800178e:	e6e6      	b.n	800155e <__gnu_unwind_pr_common+0x56>
 8001790:	210d      	movs	r1, #13
 8001792:	4638      	mov	r0, r7
 8001794:	f7ff fe44 	bl	8001420 <_Unwind_GetGR>
 8001798:	6228      	str	r0, [r5, #32]
 800179a:	9b04      	ldr	r3, [sp, #16]
 800179c:	626b      	str	r3, [r5, #36]	; 0x24
 800179e:	e7db      	b.n	8001758 <__gnu_unwind_pr_common+0x250>
 80017a0:	f10b 0001 	add.w	r0, fp, #1
 80017a4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80017a8:	e77a      	b.n	80016a0 <__gnu_unwind_pr_common+0x198>
 80017aa:	bf00      	nop
 80017ac:	0801b91d 	.word	0x0801b91d

080017b0 <__aeabi_unwind_cpp_pr0>:
 80017b0:	2300      	movs	r3, #0
 80017b2:	e6a9      	b.n	8001508 <__gnu_unwind_pr_common>

080017b4 <__aeabi_unwind_cpp_pr1>:
 80017b4:	2301      	movs	r3, #1
 80017b6:	e6a7      	b.n	8001508 <__gnu_unwind_pr_common>

080017b8 <__aeabi_unwind_cpp_pr2>:
 80017b8:	2302      	movs	r3, #2
 80017ba:	e6a5      	b.n	8001508 <__gnu_unwind_pr_common>

080017bc <_Unwind_VRS_Pop>:
 80017bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80017c0:	4606      	mov	r6, r0
 80017c2:	b0c3      	sub	sp, #268	; 0x10c
 80017c4:	4615      	mov	r5, r2
 80017c6:	461c      	mov	r4, r3
 80017c8:	2904      	cmp	r1, #4
 80017ca:	f200 80bf 	bhi.w	800194c <_Unwind_VRS_Pop+0x190>
 80017ce:	e8df f001 	tbb	[pc, r1]
 80017d2:	579e      	.short	0x579e
 80017d4:	2dbd      	.short	0x2dbd
 80017d6:	03          	.byte	0x03
 80017d7:	00          	.byte	0x00
 80017d8:	2c00      	cmp	r4, #0
 80017da:	f040 80b7 	bne.w	800194c <_Unwind_VRS_Pop+0x190>
 80017de:	2a10      	cmp	r2, #16
 80017e0:	f200 80b4 	bhi.w	800194c <_Unwind_VRS_Pop+0x190>
 80017e4:	6803      	ldr	r3, [r0, #0]
 80017e6:	06d8      	lsls	r0, r3, #27
 80017e8:	f100 80f9 	bmi.w	80019de <_Unwind_VRS_Pop+0x222>
 80017ec:	af20      	add	r7, sp, #128	; 0x80
 80017ee:	4638      	mov	r0, r7
 80017f0:	f000 f998 	bl	8001b24 <__gnu_Unwind_Save_WMMXC>
 80017f4:	6bb4      	ldr	r4, [r6, #56]	; 0x38
 80017f6:	4639      	mov	r1, r7
 80017f8:	2300      	movs	r3, #0
 80017fa:	f04f 0c01 	mov.w	ip, #1
 80017fe:	fa0c f203 	lsl.w	r2, ip, r3
 8001802:	422a      	tst	r2, r5
 8001804:	4620      	mov	r0, r4
 8001806:	f103 0301 	add.w	r3, r3, #1
 800180a:	d003      	beq.n	8001814 <_Unwind_VRS_Pop+0x58>
 800180c:	f850 2b04 	ldr.w	r2, [r0], #4
 8001810:	600a      	str	r2, [r1, #0]
 8001812:	4604      	mov	r4, r0
 8001814:	2b04      	cmp	r3, #4
 8001816:	f101 0104 	add.w	r1, r1, #4
 800181a:	d1f0      	bne.n	80017fe <_Unwind_VRS_Pop+0x42>
 800181c:	4638      	mov	r0, r7
 800181e:	63b4      	str	r4, [r6, #56]	; 0x38
 8001820:	f000 f976 	bl	8001b10 <__gnu_Unwind_Restore_WMMXC>
 8001824:	2000      	movs	r0, #0
 8001826:	b043      	add	sp, #268	; 0x10c
 8001828:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800182c:	2c03      	cmp	r4, #3
 800182e:	f040 808d 	bne.w	800194c <_Unwind_VRS_Pop+0x190>
 8001832:	b294      	uxth	r4, r2
 8001834:	eb04 4312 	add.w	r3, r4, r2, lsr #16
 8001838:	2b10      	cmp	r3, #16
 800183a:	ea4f 4512 	mov.w	r5, r2, lsr #16
 800183e:	f200 8085 	bhi.w	800194c <_Unwind_VRS_Pop+0x190>
 8001842:	6803      	ldr	r3, [r0, #0]
 8001844:	071f      	lsls	r7, r3, #28
 8001846:	f100 80d2 	bmi.w	80019ee <_Unwind_VRS_Pop+0x232>
 800184a:	af20      	add	r7, sp, #128	; 0x80
 800184c:	4638      	mov	r0, r7
 800184e:	f000 f93d 	bl	8001acc <__gnu_Unwind_Save_WMMXD>
 8001852:	6bb2      	ldr	r2, [r6, #56]	; 0x38
 8001854:	eb07 01c5 	add.w	r1, r7, r5, lsl #3
 8001858:	b154      	cbz	r4, 8001870 <_Unwind_VRS_Pop+0xb4>
 800185a:	460b      	mov	r3, r1
 800185c:	1ad0      	subs	r0, r2, r3
 800185e:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 8001862:	00e4      	lsls	r4, r4, #3
 8001864:	581d      	ldr	r5, [r3, r0]
 8001866:	f843 5b04 	str.w	r5, [r3], #4
 800186a:	428b      	cmp	r3, r1
 800186c:	d1fa      	bne.n	8001864 <_Unwind_VRS_Pop+0xa8>
 800186e:	4422      	add	r2, r4
 8001870:	4638      	mov	r0, r7
 8001872:	63b2      	str	r2, [r6, #56]	; 0x38
 8001874:	f000 f908 	bl	8001a88 <__gnu_Unwind_Restore_WMMXD>
 8001878:	2000      	movs	r0, #0
 800187a:	b043      	add	sp, #268	; 0x10c
 800187c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001880:	2c01      	cmp	r4, #1
 8001882:	ea4f 4812 	mov.w	r8, r2, lsr #16
 8001886:	b295      	uxth	r5, r2
 8001888:	d05c      	beq.n	8001944 <_Unwind_VRS_Pop+0x188>
 800188a:	2c05      	cmp	r4, #5
 800188c:	d15e      	bne.n	800194c <_Unwind_VRS_Pop+0x190>
 800188e:	eb08 0905 	add.w	r9, r8, r5
 8001892:	f1b9 0f20 	cmp.w	r9, #32
 8001896:	d859      	bhi.n	800194c <_Unwind_VRS_Pop+0x190>
 8001898:	f1b8 0f0f 	cmp.w	r8, #15
 800189c:	d979      	bls.n	8001992 <_Unwind_VRS_Pop+0x1d6>
 800189e:	46a9      	mov	r9, r5
 80018a0:	2d00      	cmp	r5, #0
 80018a2:	f040 808a 	bne.w	80019ba <_Unwind_VRS_Pop+0x1fe>
 80018a6:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80018a8:	b36d      	cbz	r5, 8001906 <_Unwind_VRS_Pop+0x14a>
 80018aa:	af20      	add	r7, sp, #128	; 0x80
 80018ac:	f04f 0900 	mov.w	r9, #0
 80018b0:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
 80018b4:	3f04      	subs	r7, #4
 80018b6:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80018ba:	f853 1b04 	ldr.w	r1, [r3], #4
 80018be:	f847 1f04 	str.w	r1, [r7, #4]!
 80018c2:	42ab      	cmp	r3, r5
 80018c4:	d1f9      	bne.n	80018ba <_Unwind_VRS_Pop+0xfe>
 80018c6:	f1b9 0f00 	cmp.w	r9, #0
 80018ca:	d00f      	beq.n	80018ec <_Unwind_VRS_Pop+0x130>
 80018cc:	466f      	mov	r7, sp
 80018ce:	4641      	mov	r1, r8
 80018d0:	2910      	cmp	r1, #16
 80018d2:	bf38      	it	cc
 80018d4:	2110      	movcc	r1, #16
 80018d6:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
 80018da:	3984      	subs	r1, #132	; 0x84
 80018dc:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
 80018e0:	f853 0b04 	ldr.w	r0, [r3], #4
 80018e4:	f841 0f04 	str.w	r0, [r1, #4]!
 80018e8:	42ab      	cmp	r3, r5
 80018ea:	d1f9      	bne.n	80018e0 <_Unwind_VRS_Pop+0x124>
 80018ec:	2c01      	cmp	r4, #1
 80018ee:	f000 8086 	beq.w	80019fe <_Unwind_VRS_Pop+0x242>
 80018f2:	f1b8 0f0f 	cmp.w	r8, #15
 80018f6:	63b5      	str	r5, [r6, #56]	; 0x38
 80018f8:	d947      	bls.n	800198a <_Unwind_VRS_Pop+0x1ce>
 80018fa:	f1b9 0f00 	cmp.w	r9, #0
 80018fe:	d002      	beq.n	8001906 <_Unwind_VRS_Pop+0x14a>
 8001900:	4668      	mov	r0, sp
 8001902:	f000 f8b9 	bl	8001a78 <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8001906:	2000      	movs	r0, #0
 8001908:	b043      	add	sp, #268	; 0x10c
 800190a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800190e:	b9ec      	cbnz	r4, 800194c <_Unwind_VRS_Pop+0x190>
 8001910:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8001912:	4623      	mov	r3, r4
 8001914:	fa1f fc82 	uxth.w	ip, r2
 8001918:	2401      	movs	r4, #1
 800191a:	1d37      	adds	r7, r6, #4
 800191c:	fa04 f203 	lsl.w	r2, r4, r3
 8001920:	ea12 0f0c 	tst.w	r2, ip
 8001924:	4601      	mov	r1, r0
 8001926:	d004      	beq.n	8001932 <_Unwind_VRS_Pop+0x176>
 8001928:	f851 2b04 	ldr.w	r2, [r1], #4
 800192c:	f847 2023 	str.w	r2, [r7, r3, lsl #2]
 8001930:	4608      	mov	r0, r1
 8001932:	3301      	adds	r3, #1
 8001934:	2b10      	cmp	r3, #16
 8001936:	d1f1      	bne.n	800191c <_Unwind_VRS_Pop+0x160>
 8001938:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
 800193c:	d1e3      	bne.n	8001906 <_Unwind_VRS_Pop+0x14a>
 800193e:	63b0      	str	r0, [r6, #56]	; 0x38
 8001940:	4628      	mov	r0, r5
 8001942:	e004      	b.n	800194e <_Unwind_VRS_Pop+0x192>
 8001944:	eb08 0305 	add.w	r3, r8, r5
 8001948:	2b10      	cmp	r3, #16
 800194a:	d903      	bls.n	8001954 <_Unwind_VRS_Pop+0x198>
 800194c:	2002      	movs	r0, #2
 800194e:	b043      	add	sp, #268	; 0x10c
 8001950:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001954:	f1b8 0f0f 	cmp.w	r8, #15
 8001958:	d8f8      	bhi.n	800194c <_Unwind_VRS_Pop+0x190>
 800195a:	6833      	ldr	r3, [r6, #0]
 800195c:	07da      	lsls	r2, r3, #31
 800195e:	d506      	bpl.n	800196e <_Unwind_VRS_Pop+0x1b2>
 8001960:	4630      	mov	r0, r6
 8001962:	f023 0303 	bic.w	r3, r3, #3
 8001966:	f840 3b48 	str.w	r3, [r0], #72
 800196a:	f000 f879 	bl	8001a60 <__gnu_Unwind_Save_VFP>
 800196e:	af20      	add	r7, sp, #128	; 0x80
 8001970:	4638      	mov	r0, r7
 8001972:	f000 f875 	bl	8001a60 <__gnu_Unwind_Save_VFP>
 8001976:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001978:	2d00      	cmp	r5, #0
 800197a:	d197      	bne.n	80018ac <_Unwind_VRS_Pop+0xf0>
 800197c:	461d      	mov	r5, r3
 800197e:	3504      	adds	r5, #4
 8001980:	63b5      	str	r5, [r6, #56]	; 0x38
 8001982:	4638      	mov	r0, r7
 8001984:	f000 f868 	bl	8001a58 <__gnu_Unwind_Restore_VFP>
 8001988:	e7bd      	b.n	8001906 <_Unwind_VRS_Pop+0x14a>
 800198a:	a820      	add	r0, sp, #128	; 0x80
 800198c:	f000 f86c 	bl	8001a68 <__gnu_Unwind_Restore_VFP_D>
 8001990:	e7b3      	b.n	80018fa <_Unwind_VRS_Pop+0x13e>
 8001992:	f1b9 0f10 	cmp.w	r9, #16
 8001996:	d940      	bls.n	8001a1a <_Unwind_VRS_Pop+0x25e>
 8001998:	f1a9 0910 	sub.w	r9, r9, #16
 800199c:	6833      	ldr	r3, [r6, #0]
 800199e:	07d9      	lsls	r1, r3, #31
 80019a0:	d508      	bpl.n	80019b4 <_Unwind_VRS_Pop+0x1f8>
 80019a2:	f023 0301 	bic.w	r3, r3, #1
 80019a6:	4630      	mov	r0, r6
 80019a8:	f043 0302 	orr.w	r3, r3, #2
 80019ac:	f840 3b48 	str.w	r3, [r0], #72
 80019b0:	f000 f85e 	bl	8001a70 <__gnu_Unwind_Save_VFP_D>
 80019b4:	f1b9 0f00 	cmp.w	r9, #0
 80019b8:	d032      	beq.n	8001a20 <_Unwind_VRS_Pop+0x264>
 80019ba:	6833      	ldr	r3, [r6, #0]
 80019bc:	075a      	lsls	r2, r3, #29
 80019be:	d420      	bmi.n	8001a02 <_Unwind_VRS_Pop+0x246>
 80019c0:	f1b8 0f0f 	cmp.w	r8, #15
 80019c4:	d925      	bls.n	8001a12 <_Unwind_VRS_Pop+0x256>
 80019c6:	466f      	mov	r7, sp
 80019c8:	4638      	mov	r0, r7
 80019ca:	f1c8 0510 	rsb	r5, r8, #16
 80019ce:	f000 f857 	bl	8001a80 <__gnu_Unwind_Save_VFP_D_16_to_31>
 80019d2:	2d00      	cmp	r5, #0
 80019d4:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 80019d6:	f77f af7a 	ble.w	80018ce <_Unwind_VRS_Pop+0x112>
 80019da:	af20      	add	r7, sp, #128	; 0x80
 80019dc:	e768      	b.n	80018b0 <_Unwind_VRS_Pop+0xf4>
 80019de:	f023 0310 	bic.w	r3, r3, #16
 80019e2:	6033      	str	r3, [r6, #0]
 80019e4:	f506 70e8 	add.w	r0, r6, #464	; 0x1d0
 80019e8:	f000 f89c 	bl	8001b24 <__gnu_Unwind_Save_WMMXC>
 80019ec:	e6fe      	b.n	80017ec <_Unwind_VRS_Pop+0x30>
 80019ee:	f023 0308 	bic.w	r3, r3, #8
 80019f2:	6003      	str	r3, [r0, #0]
 80019f4:	f500 70a8 	add.w	r0, r0, #336	; 0x150
 80019f8:	f000 f868 	bl	8001acc <__gnu_Unwind_Save_WMMXD>
 80019fc:	e725      	b.n	800184a <_Unwind_VRS_Pop+0x8e>
 80019fe:	af20      	add	r7, sp, #128	; 0x80
 8001a00:	e7bd      	b.n	800197e <_Unwind_VRS_Pop+0x1c2>
 8001a02:	4630      	mov	r0, r6
 8001a04:	f023 0304 	bic.w	r3, r3, #4
 8001a08:	f840 3bd0 	str.w	r3, [r0], #208
 8001a0c:	f000 f838 	bl	8001a80 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8001a10:	e7d6      	b.n	80019c0 <_Unwind_VRS_Pop+0x204>
 8001a12:	a820      	add	r0, sp, #128	; 0x80
 8001a14:	f000 f82c 	bl	8001a70 <__gnu_Unwind_Save_VFP_D>
 8001a18:	e7d5      	b.n	80019c6 <_Unwind_VRS_Pop+0x20a>
 8001a1a:	f04f 0900 	mov.w	r9, #0
 8001a1e:	e7bd      	b.n	800199c <_Unwind_VRS_Pop+0x1e0>
 8001a20:	f1b8 0f0f 	cmp.w	r8, #15
 8001a24:	f63f af3f 	bhi.w	80018a6 <_Unwind_VRS_Pop+0xea>
 8001a28:	af20      	add	r7, sp, #128	; 0x80
 8001a2a:	4638      	mov	r0, r7
 8001a2c:	f000 f820 	bl	8001a70 <__gnu_Unwind_Save_VFP_D>
 8001a30:	6bb3      	ldr	r3, [r6, #56]	; 0x38
 8001a32:	2d00      	cmp	r5, #0
 8001a34:	f47f af3a 	bne.w	80018ac <_Unwind_VRS_Pop+0xf0>
 8001a38:	4638      	mov	r0, r7
 8001a3a:	f000 f815 	bl	8001a68 <__gnu_Unwind_Restore_VFP_D>
 8001a3e:	e762      	b.n	8001906 <_Unwind_VRS_Pop+0x14a>

08001a40 <__restore_core_regs>:
 8001a40:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8001a44:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 8001a48:	469c      	mov	ip, r3
 8001a4a:	46a6      	mov	lr, r4
 8001a4c:	f84c 5d04 	str.w	r5, [ip, #-4]!
 8001a50:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 8001a54:	46e5      	mov	sp, ip
 8001a56:	bd00      	pop	{pc}

08001a58 <__gnu_Unwind_Restore_VFP>:
 8001a58:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 8001a5c:	4770      	bx	lr
 8001a5e:	bf00      	nop

08001a60 <__gnu_Unwind_Save_VFP>:
 8001a60:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 8001a64:	4770      	bx	lr
 8001a66:	bf00      	nop

08001a68 <__gnu_Unwind_Restore_VFP_D>:
 8001a68:	ec90 0b20 	vldmia	r0, {d0-d15}
 8001a6c:	4770      	bx	lr
 8001a6e:	bf00      	nop

08001a70 <__gnu_Unwind_Save_VFP_D>:
 8001a70:	ec80 0b20 	vstmia	r0, {d0-d15}
 8001a74:	4770      	bx	lr
 8001a76:	bf00      	nop

08001a78 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 8001a78:	ecd0 0b20 	vldmia	r0, {d16-d31}
 8001a7c:	4770      	bx	lr
 8001a7e:	bf00      	nop

08001a80 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 8001a80:	ecc0 0b20 	vstmia	r0, {d16-d31}
 8001a84:	4770      	bx	lr
 8001a86:	bf00      	nop

08001a88 <__gnu_Unwind_Restore_WMMXD>:
 8001a88:	ecf0 0102 	ldfe	f0, [r0], #8
 8001a8c:	ecf0 1102 	ldfe	f1, [r0], #8
 8001a90:	ecf0 2102 	ldfe	f2, [r0], #8
 8001a94:	ecf0 3102 	ldfe	f3, [r0], #8
 8001a98:	ecf0 4102 	ldfe	f4, [r0], #8
 8001a9c:	ecf0 5102 	ldfe	f5, [r0], #8
 8001aa0:	ecf0 6102 	ldfe	f6, [r0], #8
 8001aa4:	ecf0 7102 	ldfe	f7, [r0], #8
 8001aa8:	ecf0 8102 	ldfp	f0, [r0], #8
 8001aac:	ecf0 9102 	ldfp	f1, [r0], #8
 8001ab0:	ecf0 a102 	ldfp	f2, [r0], #8
 8001ab4:	ecf0 b102 	ldfp	f3, [r0], #8
 8001ab8:	ecf0 c102 	ldfp	f4, [r0], #8
 8001abc:	ecf0 d102 	ldfp	f5, [r0], #8
 8001ac0:	ecf0 e102 	ldfp	f6, [r0], #8
 8001ac4:	ecf0 f102 	ldfp	f7, [r0], #8
 8001ac8:	4770      	bx	lr
 8001aca:	bf00      	nop

08001acc <__gnu_Unwind_Save_WMMXD>:
 8001acc:	ece0 0102 	stfe	f0, [r0], #8
 8001ad0:	ece0 1102 	stfe	f1, [r0], #8
 8001ad4:	ece0 2102 	stfe	f2, [r0], #8
 8001ad8:	ece0 3102 	stfe	f3, [r0], #8
 8001adc:	ece0 4102 	stfe	f4, [r0], #8
 8001ae0:	ece0 5102 	stfe	f5, [r0], #8
 8001ae4:	ece0 6102 	stfe	f6, [r0], #8
 8001ae8:	ece0 7102 	stfe	f7, [r0], #8
 8001aec:	ece0 8102 	stfp	f0, [r0], #8
 8001af0:	ece0 9102 	stfp	f1, [r0], #8
 8001af4:	ece0 a102 	stfp	f2, [r0], #8
 8001af8:	ece0 b102 	stfp	f3, [r0], #8
 8001afc:	ece0 c102 	stfp	f4, [r0], #8
 8001b00:	ece0 d102 	stfp	f5, [r0], #8
 8001b04:	ece0 e102 	stfp	f6, [r0], #8
 8001b08:	ece0 f102 	stfp	f7, [r0], #8
 8001b0c:	4770      	bx	lr
 8001b0e:	bf00      	nop

08001b10 <__gnu_Unwind_Restore_WMMXC>:
 8001b10:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8001b14:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 8001b18:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8001b1c:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8001b20:	4770      	bx	lr
 8001b22:	bf00      	nop

08001b24 <__gnu_Unwind_Save_WMMXC>:
 8001b24:	fca0 8101 	stc2	1, cr8, [r0], #4
 8001b28:	fca0 9101 	stc2	1, cr9, [r0], #4
 8001b2c:	fca0 a101 	stc2	1, cr10, [r0], #4
 8001b30:	fca0 b101 	stc2	1, cr11, [r0], #4
 8001b34:	4770      	bx	lr
 8001b36:	bf00      	nop

08001b38 <_Unwind_RaiseException>:
 8001b38:	46ec      	mov	ip, sp
 8001b3a:	b500      	push	{lr}
 8001b3c:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001b40:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001b44:	f04f 0300 	mov.w	r3, #0
 8001b48:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001b4c:	a901      	add	r1, sp, #4
 8001b4e:	f7ff fbe1 	bl	8001314 <__gnu_Unwind_RaiseException>
 8001b52:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001b56:	b012      	add	sp, #72	; 0x48
 8001b58:	4770      	bx	lr
 8001b5a:	bf00      	nop

08001b5c <_Unwind_Resume>:
 8001b5c:	46ec      	mov	ip, sp
 8001b5e:	b500      	push	{lr}
 8001b60:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001b64:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001b68:	f04f 0300 	mov.w	r3, #0
 8001b6c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001b70:	a901      	add	r1, sp, #4
 8001b72:	f7ff fc0b 	bl	800138c <__gnu_Unwind_Resume>
 8001b76:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001b7a:	b012      	add	sp, #72	; 0x48
 8001b7c:	4770      	bx	lr
 8001b7e:	bf00      	nop

08001b80 <_Unwind_Resume_or_Rethrow>:
 8001b80:	46ec      	mov	ip, sp
 8001b82:	b500      	push	{lr}
 8001b84:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001b88:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001b8c:	f04f 0300 	mov.w	r3, #0
 8001b90:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001b94:	a901      	add	r1, sp, #4
 8001b96:	f7ff fc1b 	bl	80013d0 <__gnu_Unwind_Resume_or_Rethrow>
 8001b9a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001b9e:	b012      	add	sp, #72	; 0x48
 8001ba0:	4770      	bx	lr
 8001ba2:	bf00      	nop

08001ba4 <_Unwind_ForcedUnwind>:
 8001ba4:	46ec      	mov	ip, sp
 8001ba6:	b500      	push	{lr}
 8001ba8:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001bac:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001bb0:	f04f 0300 	mov.w	r3, #0
 8001bb4:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001bb8:	ab01      	add	r3, sp, #4
 8001bba:	f7ff fbdf 	bl	800137c <__gnu_Unwind_ForcedUnwind>
 8001bbe:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001bc2:	b012      	add	sp, #72	; 0x48
 8001bc4:	4770      	bx	lr
 8001bc6:	bf00      	nop

08001bc8 <_Unwind_Backtrace>:
 8001bc8:	46ec      	mov	ip, sp
 8001bca:	b500      	push	{lr}
 8001bcc:	e92d 5000 	stmdb	sp!, {ip, lr}
 8001bd0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8001bd4:	f04f 0300 	mov.w	r3, #0
 8001bd8:	e92d 000c 	stmdb	sp!, {r2, r3}
 8001bdc:	aa01      	add	r2, sp, #4
 8001bde:	f7ff fc51 	bl	8001484 <__gnu_Unwind_Backtrace>
 8001be2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8001be6:	b012      	add	sp, #72	; 0x48
 8001be8:	4770      	bx	lr
 8001bea:	bf00      	nop

08001bec <next_unwind_byte>:
 8001bec:	7a02      	ldrb	r2, [r0, #8]
 8001bee:	4603      	mov	r3, r0
 8001bf0:	b97a      	cbnz	r2, 8001c12 <next_unwind_byte+0x26>
 8001bf2:	7a42      	ldrb	r2, [r0, #9]
 8001bf4:	b1a2      	cbz	r2, 8001c20 <next_unwind_byte+0x34>
 8001bf6:	6841      	ldr	r1, [r0, #4]
 8001bf8:	3a01      	subs	r2, #1
 8001bfa:	b410      	push	{r4}
 8001bfc:	7242      	strb	r2, [r0, #9]
 8001bfe:	6808      	ldr	r0, [r1, #0]
 8001c00:	2203      	movs	r2, #3
 8001c02:	1d0c      	adds	r4, r1, #4
 8001c04:	721a      	strb	r2, [r3, #8]
 8001c06:	0202      	lsls	r2, r0, #8
 8001c08:	605c      	str	r4, [r3, #4]
 8001c0a:	0e00      	lsrs	r0, r0, #24
 8001c0c:	bc10      	pop	{r4}
 8001c0e:	601a      	str	r2, [r3, #0]
 8001c10:	4770      	bx	lr
 8001c12:	6800      	ldr	r0, [r0, #0]
 8001c14:	3a01      	subs	r2, #1
 8001c16:	721a      	strb	r2, [r3, #8]
 8001c18:	0202      	lsls	r2, r0, #8
 8001c1a:	601a      	str	r2, [r3, #0]
 8001c1c:	0e00      	lsrs	r0, r0, #24
 8001c1e:	4770      	bx	lr
 8001c20:	20b0      	movs	r0, #176	; 0xb0
 8001c22:	4770      	bx	lr

08001c24 <_Unwind_GetGR.constprop.0>:
 8001c24:	b500      	push	{lr}
 8001c26:	b085      	sub	sp, #20
 8001c28:	2300      	movs	r3, #0
 8001c2a:	aa03      	add	r2, sp, #12
 8001c2c:	9200      	str	r2, [sp, #0]
 8001c2e:	4619      	mov	r1, r3
 8001c30:	220c      	movs	r2, #12
 8001c32:	f7ff fbdd 	bl	80013f0 <_Unwind_VRS_Get>
 8001c36:	9803      	ldr	r0, [sp, #12]
 8001c38:	b005      	add	sp, #20
 8001c3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c3e:	bf00      	nop

08001c40 <unwind_UCB_from_context>:
 8001c40:	e7f0      	b.n	8001c24 <_Unwind_GetGR.constprop.0>
 8001c42:	bf00      	nop

08001c44 <__gnu_unwind_execute>:
 8001c44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c48:	4605      	mov	r5, r0
 8001c4a:	b085      	sub	sp, #20
 8001c4c:	460e      	mov	r6, r1
 8001c4e:	f04f 0800 	mov.w	r8, #0
 8001c52:	4630      	mov	r0, r6
 8001c54:	f7ff ffca 	bl	8001bec <next_unwind_byte>
 8001c58:	28b0      	cmp	r0, #176	; 0xb0
 8001c5a:	4604      	mov	r4, r0
 8001c5c:	f000 80ba 	beq.w	8001dd4 <__gnu_unwind_execute+0x190>
 8001c60:	0607      	lsls	r7, r0, #24
 8001c62:	d520      	bpl.n	8001ca6 <__gnu_unwind_execute+0x62>
 8001c64:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 8001c68:	2b80      	cmp	r3, #128	; 0x80
 8001c6a:	d04d      	beq.n	8001d08 <__gnu_unwind_execute+0xc4>
 8001c6c:	2b90      	cmp	r3, #144	; 0x90
 8001c6e:	d036      	beq.n	8001cde <__gnu_unwind_execute+0x9a>
 8001c70:	2ba0      	cmp	r3, #160	; 0xa0
 8001c72:	d060      	beq.n	8001d36 <__gnu_unwind_execute+0xf2>
 8001c74:	2bb0      	cmp	r3, #176	; 0xb0
 8001c76:	d074      	beq.n	8001d62 <__gnu_unwind_execute+0x11e>
 8001c78:	2bc0      	cmp	r3, #192	; 0xc0
 8001c7a:	f000 808b 	beq.w	8001d94 <__gnu_unwind_execute+0x150>
 8001c7e:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001c82:	2bd0      	cmp	r3, #208	; 0xd0
 8001c84:	d10b      	bne.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001c86:	f000 0207 	and.w	r2, r0, #7
 8001c8a:	3201      	adds	r2, #1
 8001c8c:	2305      	movs	r3, #5
 8001c8e:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001c92:	2101      	movs	r1, #1
 8001c94:	4628      	mov	r0, r5
 8001c96:	f7ff fd91 	bl	80017bc <_Unwind_VRS_Pop>
 8001c9a:	2800      	cmp	r0, #0
 8001c9c:	d0d9      	beq.n	8001c52 <__gnu_unwind_execute+0xe>
 8001c9e:	2009      	movs	r0, #9
 8001ca0:	b005      	add	sp, #20
 8001ca2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001ca6:	0083      	lsls	r3, r0, #2
 8001ca8:	b2db      	uxtb	r3, r3
 8001caa:	1d1f      	adds	r7, r3, #4
 8001cac:	f10d 090c 	add.w	r9, sp, #12
 8001cb0:	2300      	movs	r3, #0
 8001cb2:	4619      	mov	r1, r3
 8001cb4:	f8cd 9000 	str.w	r9, [sp]
 8001cb8:	220d      	movs	r2, #13
 8001cba:	4628      	mov	r0, r5
 8001cbc:	f7ff fb98 	bl	80013f0 <_Unwind_VRS_Get>
 8001cc0:	9b03      	ldr	r3, [sp, #12]
 8001cc2:	f8cd 9000 	str.w	r9, [sp]
 8001cc6:	0660      	lsls	r0, r4, #25
 8001cc8:	bf4c      	ite	mi
 8001cca:	1bdf      	submi	r7, r3, r7
 8001ccc:	18ff      	addpl	r7, r7, r3
 8001cce:	2300      	movs	r3, #0
 8001cd0:	220d      	movs	r2, #13
 8001cd2:	4619      	mov	r1, r3
 8001cd4:	4628      	mov	r0, r5
 8001cd6:	9703      	str	r7, [sp, #12]
 8001cd8:	f7ff fbb0 	bl	800143c <_Unwind_VRS_Set>
 8001cdc:	e7b9      	b.n	8001c52 <__gnu_unwind_execute+0xe>
 8001cde:	f000 030d 	and.w	r3, r0, #13
 8001ce2:	2b0d      	cmp	r3, #13
 8001ce4:	d0db      	beq.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001ce6:	af03      	add	r7, sp, #12
 8001ce8:	2300      	movs	r3, #0
 8001cea:	f000 020f 	and.w	r2, r0, #15
 8001cee:	4619      	mov	r1, r3
 8001cf0:	9700      	str	r7, [sp, #0]
 8001cf2:	4628      	mov	r0, r5
 8001cf4:	f7ff fb7c 	bl	80013f0 <_Unwind_VRS_Get>
 8001cf8:	2300      	movs	r3, #0
 8001cfa:	9700      	str	r7, [sp, #0]
 8001cfc:	220d      	movs	r2, #13
 8001cfe:	4619      	mov	r1, r3
 8001d00:	4628      	mov	r0, r5
 8001d02:	f7ff fb9b 	bl	800143c <_Unwind_VRS_Set>
 8001d06:	e7a4      	b.n	8001c52 <__gnu_unwind_execute+0xe>
 8001d08:	4630      	mov	r0, r6
 8001d0a:	f7ff ff6f 	bl	8001bec <next_unwind_byte>
 8001d0e:	0224      	lsls	r4, r4, #8
 8001d10:	4320      	orrs	r0, r4
 8001d12:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
 8001d16:	d0c2      	beq.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001d18:	0104      	lsls	r4, r0, #4
 8001d1a:	2300      	movs	r3, #0
 8001d1c:	b2a2      	uxth	r2, r4
 8001d1e:	4619      	mov	r1, r3
 8001d20:	4628      	mov	r0, r5
 8001d22:	f7ff fd4b 	bl	80017bc <_Unwind_VRS_Pop>
 8001d26:	2800      	cmp	r0, #0
 8001d28:	d1b9      	bne.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001d2a:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8001d2e:	bf18      	it	ne
 8001d30:	f04f 0801 	movne.w	r8, #1
 8001d34:	e78d      	b.n	8001c52 <__gnu_unwind_execute+0xe>
 8001d36:	43c2      	mvns	r2, r0
 8001d38:	f002 0307 	and.w	r3, r2, #7
 8001d3c:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 8001d40:	411a      	asrs	r2, r3
 8001d42:	0701      	lsls	r1, r0, #28
 8001d44:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 8001d48:	f04f 0300 	mov.w	r3, #0
 8001d4c:	bf48      	it	mi
 8001d4e:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 8001d52:	4619      	mov	r1, r3
 8001d54:	4628      	mov	r0, r5
 8001d56:	f7ff fd31 	bl	80017bc <_Unwind_VRS_Pop>
 8001d5a:	2800      	cmp	r0, #0
 8001d5c:	f43f af79 	beq.w	8001c52 <__gnu_unwind_execute+0xe>
 8001d60:	e79d      	b.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001d62:	28b1      	cmp	r0, #177	; 0xb1
 8001d64:	d03b      	beq.n	8001dde <__gnu_unwind_execute+0x19a>
 8001d66:	28b2      	cmp	r0, #178	; 0xb2
 8001d68:	f000 8093 	beq.w	8001e92 <__gnu_unwind_execute+0x24e>
 8001d6c:	28b3      	cmp	r0, #179	; 0xb3
 8001d6e:	d041      	beq.n	8001df4 <__gnu_unwind_execute+0x1b0>
 8001d70:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 8001d74:	2bb4      	cmp	r3, #180	; 0xb4
 8001d76:	d092      	beq.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001d78:	f000 0207 	and.w	r2, r0, #7
 8001d7c:	3201      	adds	r2, #1
 8001d7e:	2301      	movs	r3, #1
 8001d80:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 8001d84:	4619      	mov	r1, r3
 8001d86:	4628      	mov	r0, r5
 8001d88:	f7ff fd18 	bl	80017bc <_Unwind_VRS_Pop>
 8001d8c:	2800      	cmp	r0, #0
 8001d8e:	f43f af60 	beq.w	8001c52 <__gnu_unwind_execute+0xe>
 8001d92:	e784      	b.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001d94:	28c6      	cmp	r0, #198	; 0xc6
 8001d96:	d04a      	beq.n	8001e2e <__gnu_unwind_execute+0x1ea>
 8001d98:	28c7      	cmp	r0, #199	; 0xc7
 8001d9a:	d054      	beq.n	8001e46 <__gnu_unwind_execute+0x202>
 8001d9c:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 8001da0:	2bc0      	cmp	r3, #192	; 0xc0
 8001da2:	d063      	beq.n	8001e6c <__gnu_unwind_execute+0x228>
 8001da4:	28c8      	cmp	r0, #200	; 0xc8
 8001da6:	d068      	beq.n	8001e7a <__gnu_unwind_execute+0x236>
 8001da8:	28c9      	cmp	r0, #201	; 0xc9
 8001daa:	f47f af78 	bne.w	8001c9e <__gnu_unwind_execute+0x5a>
 8001dae:	4630      	mov	r0, r6
 8001db0:	f7ff ff1c 	bl	8001bec <next_unwind_byte>
 8001db4:	0302      	lsls	r2, r0, #12
 8001db6:	f000 000f 	and.w	r0, r0, #15
 8001dba:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001dbe:	3001      	adds	r0, #1
 8001dc0:	4302      	orrs	r2, r0
 8001dc2:	2101      	movs	r1, #1
 8001dc4:	2305      	movs	r3, #5
 8001dc6:	4628      	mov	r0, r5
 8001dc8:	f7ff fcf8 	bl	80017bc <_Unwind_VRS_Pop>
 8001dcc:	2800      	cmp	r0, #0
 8001dce:	f43f af40 	beq.w	8001c52 <__gnu_unwind_execute+0xe>
 8001dd2:	e764      	b.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001dd4:	f1b8 0f00 	cmp.w	r8, #0
 8001dd8:	d018      	beq.n	8001e0c <__gnu_unwind_execute+0x1c8>
 8001dda:	2000      	movs	r0, #0
 8001ddc:	e760      	b.n	8001ca0 <__gnu_unwind_execute+0x5c>
 8001dde:	4630      	mov	r0, r6
 8001de0:	f7ff ff04 	bl	8001bec <next_unwind_byte>
 8001de4:	4602      	mov	r2, r0
 8001de6:	2800      	cmp	r0, #0
 8001de8:	f43f af59 	beq.w	8001c9e <__gnu_unwind_execute+0x5a>
 8001dec:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001df0:	d0c8      	beq.n	8001d84 <__gnu_unwind_execute+0x140>
 8001df2:	e754      	b.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001df4:	4630      	mov	r0, r6
 8001df6:	f7ff fef9 	bl	8001bec <next_unwind_byte>
 8001dfa:	0302      	lsls	r2, r0, #12
 8001dfc:	f000 030f 	and.w	r3, r0, #15
 8001e00:	3301      	adds	r3, #1
 8001e02:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001e06:	431a      	orrs	r2, r3
 8001e08:	2301      	movs	r3, #1
 8001e0a:	e7bb      	b.n	8001d84 <__gnu_unwind_execute+0x140>
 8001e0c:	ac03      	add	r4, sp, #12
 8001e0e:	4643      	mov	r3, r8
 8001e10:	220e      	movs	r2, #14
 8001e12:	4641      	mov	r1, r8
 8001e14:	9400      	str	r4, [sp, #0]
 8001e16:	4628      	mov	r0, r5
 8001e18:	f7ff faea 	bl	80013f0 <_Unwind_VRS_Get>
 8001e1c:	9400      	str	r4, [sp, #0]
 8001e1e:	4643      	mov	r3, r8
 8001e20:	220f      	movs	r2, #15
 8001e22:	4641      	mov	r1, r8
 8001e24:	4628      	mov	r0, r5
 8001e26:	f7ff fb09 	bl	800143c <_Unwind_VRS_Set>
 8001e2a:	4640      	mov	r0, r8
 8001e2c:	e738      	b.n	8001ca0 <__gnu_unwind_execute+0x5c>
 8001e2e:	4630      	mov	r0, r6
 8001e30:	f7ff fedc 	bl	8001bec <next_unwind_byte>
 8001e34:	0302      	lsls	r2, r0, #12
 8001e36:	f000 030f 	and.w	r3, r0, #15
 8001e3a:	3301      	adds	r3, #1
 8001e3c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8001e40:	431a      	orrs	r2, r3
 8001e42:	2303      	movs	r3, #3
 8001e44:	e79e      	b.n	8001d84 <__gnu_unwind_execute+0x140>
 8001e46:	4630      	mov	r0, r6
 8001e48:	f7ff fed0 	bl	8001bec <next_unwind_byte>
 8001e4c:	4602      	mov	r2, r0
 8001e4e:	2800      	cmp	r0, #0
 8001e50:	f43f af25 	beq.w	8001c9e <__gnu_unwind_execute+0x5a>
 8001e54:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8001e58:	f47f af21 	bne.w	8001c9e <__gnu_unwind_execute+0x5a>
 8001e5c:	2104      	movs	r1, #4
 8001e5e:	4628      	mov	r0, r5
 8001e60:	f7ff fcac 	bl	80017bc <_Unwind_VRS_Pop>
 8001e64:	2800      	cmp	r0, #0
 8001e66:	f43f aef4 	beq.w	8001c52 <__gnu_unwind_execute+0xe>
 8001e6a:	e718      	b.n	8001c9e <__gnu_unwind_execute+0x5a>
 8001e6c:	f000 020f 	and.w	r2, r0, #15
 8001e70:	3201      	adds	r2, #1
 8001e72:	2303      	movs	r3, #3
 8001e74:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 8001e78:	e784      	b.n	8001d84 <__gnu_unwind_execute+0x140>
 8001e7a:	4630      	mov	r0, r6
 8001e7c:	f7ff feb6 	bl	8001bec <next_unwind_byte>
 8001e80:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 8001e84:	f000 030f 	and.w	r3, r0, #15
 8001e88:	3210      	adds	r2, #16
 8001e8a:	3301      	adds	r3, #1
 8001e8c:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 8001e90:	e797      	b.n	8001dc2 <__gnu_unwind_execute+0x17e>
 8001e92:	2300      	movs	r3, #0
 8001e94:	f10d 090c 	add.w	r9, sp, #12
 8001e98:	220d      	movs	r2, #13
 8001e9a:	4619      	mov	r1, r3
 8001e9c:	f8cd 9000 	str.w	r9, [sp]
 8001ea0:	4628      	mov	r0, r5
 8001ea2:	f7ff faa5 	bl	80013f0 <_Unwind_VRS_Get>
 8001ea6:	4630      	mov	r0, r6
 8001ea8:	f7ff fea0 	bl	8001bec <next_unwind_byte>
 8001eac:	0602      	lsls	r2, r0, #24
 8001eae:	f04f 0402 	mov.w	r4, #2
 8001eb2:	d50c      	bpl.n	8001ece <__gnu_unwind_execute+0x28a>
 8001eb4:	9b03      	ldr	r3, [sp, #12]
 8001eb6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001eba:	40a0      	lsls	r0, r4
 8001ebc:	4418      	add	r0, r3
 8001ebe:	9003      	str	r0, [sp, #12]
 8001ec0:	4630      	mov	r0, r6
 8001ec2:	f7ff fe93 	bl	8001bec <next_unwind_byte>
 8001ec6:	0603      	lsls	r3, r0, #24
 8001ec8:	f104 0407 	add.w	r4, r4, #7
 8001ecc:	d4f2      	bmi.n	8001eb4 <__gnu_unwind_execute+0x270>
 8001ece:	9b03      	ldr	r3, [sp, #12]
 8001ed0:	f8cd 9000 	str.w	r9, [sp]
 8001ed4:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 8001ed8:	40a2      	lsls	r2, r4
 8001eda:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8001ede:	441a      	add	r2, r3
 8001ee0:	2300      	movs	r3, #0
 8001ee2:	9203      	str	r2, [sp, #12]
 8001ee4:	4619      	mov	r1, r3
 8001ee6:	220d      	movs	r2, #13
 8001ee8:	4628      	mov	r0, r5
 8001eea:	f7ff faa7 	bl	800143c <_Unwind_VRS_Set>
 8001eee:	e6b0      	b.n	8001c52 <__gnu_unwind_execute+0xe>

08001ef0 <__gnu_unwind_frame>:
 8001ef0:	b510      	push	{r4, lr}
 8001ef2:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
 8001ef4:	6853      	ldr	r3, [r2, #4]
 8001ef6:	b084      	sub	sp, #16
 8001ef8:	f04f 0c03 	mov.w	ip, #3
 8001efc:	3208      	adds	r2, #8
 8001efe:	021c      	lsls	r4, r3, #8
 8001f00:	4608      	mov	r0, r1
 8001f02:	0e1b      	lsrs	r3, r3, #24
 8001f04:	a901      	add	r1, sp, #4
 8001f06:	9401      	str	r4, [sp, #4]
 8001f08:	9202      	str	r2, [sp, #8]
 8001f0a:	f88d c00c 	strb.w	ip, [sp, #12]
 8001f0e:	f88d 300d 	strb.w	r3, [sp, #13]
 8001f12:	f7ff fe97 	bl	8001c44 <__gnu_unwind_execute>
 8001f16:	b004      	add	sp, #16
 8001f18:	bd10      	pop	{r4, pc}
 8001f1a:	bf00      	nop

08001f1c <_Unwind_GetRegionStart>:
 8001f1c:	b508      	push	{r3, lr}
 8001f1e:	f7ff fe8f 	bl	8001c40 <unwind_UCB_from_context>
 8001f22:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8001f24:	bd08      	pop	{r3, pc}
 8001f26:	bf00      	nop

08001f28 <_Unwind_GetLanguageSpecificData>:
 8001f28:	b508      	push	{r3, lr}
 8001f2a:	f7ff fe89 	bl	8001c40 <unwind_UCB_from_context>
 8001f2e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8001f30:	79c3      	ldrb	r3, [r0, #7]
 8001f32:	3302      	adds	r3, #2
 8001f34:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8001f38:	bd08      	pop	{r3, pc}
 8001f3a:	bf00      	nop

08001f3c <__aeabi_idiv0>:
 8001f3c:	4770      	bx	lr
 8001f3e:	bf00      	nop

08001f40 <__aeabi_d2uiz>:
 8001f40:	004a      	lsls	r2, r1, #1
 8001f42:	d211      	bcs.n	8001f68 <__aeabi_d2uiz+0x28>
 8001f44:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8001f48:	d211      	bcs.n	8001f6e <__aeabi_d2uiz+0x2e>
 8001f4a:	d50d      	bpl.n	8001f68 <__aeabi_d2uiz+0x28>
 8001f4c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8001f50:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8001f54:	d40e      	bmi.n	8001f74 <__aeabi_d2uiz+0x34>
 8001f56:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8001f5a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001f5e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8001f62:	fa23 f002 	lsr.w	r0, r3, r2
 8001f66:	4770      	bx	lr
 8001f68:	f04f 0000 	mov.w	r0, #0
 8001f6c:	4770      	bx	lr
 8001f6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8001f72:	d102      	bne.n	8001f7a <__aeabi_d2uiz+0x3a>
 8001f74:	f04f 30ff 	mov.w	r0, #4294967295
 8001f78:	4770      	bx	lr
 8001f7a:	f04f 0000 	mov.w	r0, #0
 8001f7e:	4770      	bx	lr

08001f80 <DebugLog>:
#ifndef TF_LITE_STRIP_ERROR_STRINGS
#include <cstdio>
#endif

extern "C" void DebugLog(const char *format, va_list args)
{
 8001f80:	b580      	push	{r7, lr}
 8001f82:	b082      	sub	sp, #8
 8001f84:	af00      	add	r7, sp, #0
 8001f86:	6078      	str	r0, [r7, #4]
 8001f88:	6039      	str	r1, [r7, #0]
#ifndef TF_LITE_STRIP_ERROR_STRINGS
	// Reusing TF_LITE_STRIP_ERROR_STRINGS to disable DebugLog completely to get
	// maximum reduction in binary size. This is because we have DebugLog calls
	// via TF_LITE_CHECK that are not stubbed out by TF_LITE_REPORT_ERROR.
	vfprintf(stderr, format, args);
 8001f8a:	4b06      	ldr	r3, [pc, #24]	; (8001fa4 <DebugLog+0x24>)
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	68db      	ldr	r3, [r3, #12]
 8001f90:	683a      	ldr	r2, [r7, #0]
 8001f92:	6879      	ldr	r1, [r7, #4]
 8001f94:	4618      	mov	r0, r3
 8001f96:	f01a ffe7 	bl	801cf68 <vfiprintf>
#endif
}
 8001f9a:	bf00      	nop
 8001f9c:	3708      	adds	r7, #8
 8001f9e:	46bd      	mov	sp, r7
 8001fa0:	bd80      	pop	{r7, pc}
 8001fa2:	bf00      	nop
 8001fa4:	20000014 	.word	0x20000014

08001fa8 <_ZN11flatbuffers11EndianCheckEv>:

// Litmus check for ensuring the Offsets are the expected size.
static_assert(sizeof(Offset<>) == 4, "Offset has wrong size");
static_assert(sizeof(Offset64<>) == 8, "Offset64 has wrong size");

inline void EndianCheck() {
 8001fa8:	b580      	push	{r7, lr}
 8001faa:	b082      	sub	sp, #8
 8001fac:	af00      	add	r7, sp, #0
  int endiantest = 1;
 8001fae:	2301      	movs	r3, #1
 8001fb0:	607b      	str	r3, [r7, #4]
  // If this fails, see FLATBUFFERS_LITTLEENDIAN above.
  FLATBUFFERS_ASSERT(*reinterpret_cast<char *>(&endiantest) ==
 8001fb2:	1d3b      	adds	r3, r7, #4
 8001fb4:	781b      	ldrb	r3, [r3, #0]
 8001fb6:	2b01      	cmp	r3, #1
 8001fb8:	d005      	beq.n	8001fc6 <_ZN11flatbuffers11EndianCheckEv+0x1e>
 8001fba:	4b05      	ldr	r3, [pc, #20]	; (8001fd0 <_ZN11flatbuffers11EndianCheckEv+0x28>)
 8001fbc:	4a05      	ldr	r2, [pc, #20]	; (8001fd4 <_ZN11flatbuffers11EndianCheckEv+0x2c>)
 8001fbe:	213a      	movs	r1, #58	; 0x3a
 8001fc0:	4805      	ldr	r0, [pc, #20]	; (8001fd8 <_ZN11flatbuffers11EndianCheckEv+0x30>)
 8001fc2:	f01a fcfd 	bl	801c9c0 <__assert_func>
                     FLATBUFFERS_LITTLEENDIAN);
  (void)endiantest;
}
 8001fc6:	bf00      	nop
 8001fc8:	3708      	adds	r7, #8
 8001fca:	46bd      	mov	sp, r7
 8001fcc:	bd80      	pop	{r7, pc}
 8001fce:	bf00      	nop
 8001fd0:	0801f588 	.word	0x0801f588
 8001fd4:	0801f5cc 	.word	0x0801f5cc
 8001fd8:	0801f5ec 	.word	0x0801f5ec

08001fdc <_ZN6tflite8GetModelEPKv>:
  }
  value = nullptr;
  type = BuiltinOptions2_NONE;
}

inline const tflite::Model *GetModel(const void *buf) {
 8001fdc:	b580      	push	{r7, lr}
 8001fde:	b082      	sub	sp, #8
 8001fe0:	af00      	add	r7, sp, #0
 8001fe2:	6078      	str	r0, [r7, #4]
  return ::flatbuffers::GetRoot<tflite::Model>(buf);
 8001fe4:	6878      	ldr	r0, [r7, #4]
 8001fe6:	f000 fddd 	bl	8002ba4 <_ZN11flatbuffers7GetRootIN6tflite5ModelEEEPKT_PKv>
 8001fea:	4603      	mov	r3, r0
}
 8001fec:	4618      	mov	r0, r3
 8001fee:	3708      	adds	r7, #8
 8001ff0:	46bd      	mov	sp, r7
 8001ff2:	bd80      	pop	{r7, pc}

08001ff4 <_ZN6tflite15MicroOpResolverD1Ev>:
  // Returns the operator specific parsing function for the OpData for a
  // BuiltinOperator (if registered), else nullptr.
  virtual TfLiteBridgeBuiltinParseFunction GetOpDataParser(
      BuiltinOperator op) const = 0;

  virtual ~MicroOpResolver() {}
 8001ff4:	b480      	push	{r7}
 8001ff6:	b083      	sub	sp, #12
 8001ff8:	af00      	add	r7, sp, #0
 8001ffa:	6078      	str	r0, [r7, #4]
 8001ffc:	4a04      	ldr	r2, [pc, #16]	; (8002010 <_ZN6tflite15MicroOpResolverD1Ev+0x1c>)
 8001ffe:	687b      	ldr	r3, [r7, #4]
 8002000:	601a      	str	r2, [r3, #0]
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	4618      	mov	r0, r3
 8002006:	370c      	adds	r7, #12
 8002008:	46bd      	mov	sp, r7
 800200a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800200e:	4770      	bx	lr
 8002010:	08020d48 	.word	0x08020d48

08002014 <_ZN6tflite15MicroOpResolverD0Ev>:
 8002014:	b580      	push	{r7, lr}
 8002016:	b082      	sub	sp, #8
 8002018:	af00      	add	r7, sp, #0
 800201a:	6078      	str	r0, [r7, #4]
 800201c:	6878      	ldr	r0, [r7, #4]
 800201e:	f7ff ffe9 	bl	8001ff4 <_ZN6tflite15MicroOpResolverD1Ev>
 8002022:	2104      	movs	r1, #4
 8002024:	6878      	ldr	r0, [r7, #4]
 8002026:	f018 fe1f 	bl	801ac68 <_ZdlPvj>
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	4618      	mov	r0, r3
 800202e:	3708      	adds	r7, #8
 8002030:	46bd      	mov	sp, r7
 8002032:	bd80      	pop	{r7, pc}

08002034 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002034:	b5b0      	push	{r4, r5, r7, lr}
 8002036:	f5ad 7d38 	sub.w	sp, sp, #736	; 0x2e0
 800203a:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800203c:	f001 fbbd 	bl	80037ba <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002040:	f000 f9b6 	bl	80023b0 <_Z18SystemClock_Configv>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002044:	f000 fbb8 	bl	80027b8 <_ZL12MX_GPIO_Initv>
  MX_DFSDM1_Init();
 8002048:	f000 fa24 	bl	8002494 <_ZL14MX_DFSDM1_Initv>
  MX_I2C2_Init();
 800204c:	f000 fa60 	bl	8002510 <_ZL12MX_I2C2_Initv>
  MX_QUADSPI_Init();
 8002050:	f000 faac 	bl	80025ac <_ZL15MX_QUADSPI_Initv>
  MX_SPI3_Init();
 8002054:	f000 fad4 	bl	8002600 <_ZL12MX_SPI3_Initv>
  MX_USART1_UART_Init();
 8002058:	f000 fb14 	bl	8002684 <_ZL19MX_USART1_UART_Initv>
  MX_USART3_UART_Init();
 800205c:	f000 fb46 	bl	80026ec <_ZL19MX_USART3_UART_Initv>
  MX_USB_OTG_FS_PCD_Init();
 8002060:	f000 fb78 	bl	8002754 <_ZL22MX_USB_OTG_FS_PCD_Initv>
  /* USER CODE BEGIN 2 */
  tflite::InitializeTarget();
 8002064:	f00c f9aa 	bl	800e3bc <_ZN6tflite16InitializeTargetEv>
  const static uint32_t window_size = 256;
  	const static uint32_t frame_step = 128;

  	arm_rfft_fast_instance_f32 fft;
  	if (arm_rfft_fast_init_256_f32(&fft) != ARM_MATH_SUCCESS) {
 8002068:	f507 730d 	add.w	r3, r7, #564	; 0x234
 800206c:	4618      	mov	r0, r3
 800206e:	f018 fcf9 	bl	801aa64 <arm_rfft_fast_init_256_f32>
 8002072:	4603      	mov	r3, r0
 8002074:	2b00      	cmp	r3, #0
 8002076:	bf14      	ite	ne
 8002078:	2301      	movne	r3, #1
 800207a:	2300      	moveq	r3, #0
 800207c:	b2db      	uxtb	r3, r3
 800207e:	2b00      	cmp	r3, #0
 8002080:	d005      	beq.n	800208e <main+0x5a>
  		assert(!"Failed to init RFFT");
 8002082:	4bbf      	ldr	r3, [pc, #764]	; (8002380 <main+0x34c>)
 8002084:	4abf      	ldr	r2, [pc, #764]	; (8002384 <main+0x350>)
 8002086:	21d9      	movs	r1, #217	; 0xd9
 8002088:	48bf      	ldr	r0, [pc, #764]	; (8002388 <main+0x354>)
 800208a:	f01a fc99 	bl	801c9c0 <__assert_func>
  	}

  	static float hanning[window_size];
  	arm_hanning_f32(hanning, window_size);
 800208e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002092:	48be      	ldr	r0, [pc, #760]	; (800238c <main+0x358>)
 8002094:	f018 fd0c 	bl	801aab0 <arm_hanning_f32>
  	const tflite::Model *model = tflite::GetModel(model_tflite);
 8002098:	48bd      	ldr	r0, [pc, #756]	; (8002390 <main+0x35c>)
 800209a:	f7ff ff9f 	bl	8001fdc <_ZN6tflite8GetModelEPKv>
 800209e:	f8c7 02c8 	str.w	r0, [r7, #712]	; 0x2c8
  	tflite::MicroMutableOpResolver<8> op_resolver;
 80020a2:	f507 7384 	add.w	r3, r7, #264	; 0x108
 80020a6:	4618      	mov	r0, r3
 80020a8:	f000 fd98 	bl	8002bdc <_ZN6tflite22MicroMutableOpResolverILj8EEC1Ev>

  		// Not really sure which ops to add
  		if (op_resolver.AddRelu() != kTfLiteOk) {
 80020ac:	f507 7384 	add.w	r3, r7, #264	; 0x108
 80020b0:	4618      	mov	r0, r3
 80020b2:	f000 fdad 	bl	8002c10 <_ZN6tflite22MicroMutableOpResolverILj8EE7AddReluEv>
 80020b6:	4603      	mov	r3, r0
 80020b8:	2b00      	cmp	r3, #0
 80020ba:	bf14      	ite	ne
 80020bc:	2301      	movne	r3, #1
 80020be:	2300      	moveq	r3, #0
 80020c0:	b2db      	uxtb	r3, r3
 80020c2:	2b00      	cmp	r3, #0
 80020c4:	d005      	beq.n	80020d2 <main+0x9e>
  			assert(!"Failed to add op");
 80020c6:	4bb3      	ldr	r3, [pc, #716]	; (8002394 <main+0x360>)
 80020c8:	4aae      	ldr	r2, [pc, #696]	; (8002384 <main+0x350>)
 80020ca:	21e3      	movs	r1, #227	; 0xe3
 80020cc:	48ae      	ldr	r0, [pc, #696]	; (8002388 <main+0x354>)
 80020ce:	f01a fc77 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddConv2D() != kTfLiteOk) {
 80020d2:	f507 7313 	add.w	r3, r7, #588	; 0x24c
 80020d6:	4618      	mov	r0, r3
 80020d8:	f006 fbf6 	bl	80088c8 <_ZN6tflite16Register_CONV_2DEv>
 80020dc:	f507 7213 	add.w	r2, r7, #588	; 0x24c
 80020e0:	f507 7384 	add.w	r3, r7, #264	; 0x108
 80020e4:	4611      	mov	r1, r2
 80020e6:	4618      	mov	r0, r3
 80020e8:	f000 fdaa 	bl	8002c40 <_ZN6tflite22MicroMutableOpResolverILj8EE9AddConv2DERK16TFLMRegistration>
 80020ec:	4603      	mov	r3, r0
 80020ee:	2b00      	cmp	r3, #0
 80020f0:	bf14      	ite	ne
 80020f2:	2301      	movne	r3, #1
 80020f4:	2300      	moveq	r3, #0
 80020f6:	b2db      	uxtb	r3, r3
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	d005      	beq.n	8002108 <main+0xd4>
  			assert(!"Failed to add op");
 80020fc:	4ba5      	ldr	r3, [pc, #660]	; (8002394 <main+0x360>)
 80020fe:	4aa1      	ldr	r2, [pc, #644]	; (8002384 <main+0x350>)
 8002100:	21e6      	movs	r1, #230	; 0xe6
 8002102:	48a1      	ldr	r0, [pc, #644]	; (8002388 <main+0x354>)
 8002104:	f01a fc5c 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddMaxPool2D() != kTfLiteOk) {
 8002108:	f507 731a 	add.w	r3, r7, #616	; 0x268
 800210c:	4618      	mov	r0, r3
 800210e:	f007 fac5 	bl	800969c <_ZN6tflite20Register_MAX_POOL_2DEv>
 8002112:	f507 721a 	add.w	r2, r7, #616	; 0x268
 8002116:	f507 7384 	add.w	r3, r7, #264	; 0x108
 800211a:	4611      	mov	r1, r2
 800211c:	4618      	mov	r0, r3
 800211e:	f000 fda1 	bl	8002c64 <_ZN6tflite22MicroMutableOpResolverILj8EE12AddMaxPool2DERK16TFLMRegistration>
 8002122:	4603      	mov	r3, r0
 8002124:	2b00      	cmp	r3, #0
 8002126:	bf14      	ite	ne
 8002128:	2301      	movne	r3, #1
 800212a:	2300      	moveq	r3, #0
 800212c:	b2db      	uxtb	r3, r3
 800212e:	2b00      	cmp	r3, #0
 8002130:	d005      	beq.n	800213e <main+0x10a>
  			assert(!"Failed to add op");
 8002132:	4b98      	ldr	r3, [pc, #608]	; (8002394 <main+0x360>)
 8002134:	4a93      	ldr	r2, [pc, #588]	; (8002384 <main+0x350>)
 8002136:	21e9      	movs	r1, #233	; 0xe9
 8002138:	4893      	ldr	r0, [pc, #588]	; (8002388 <main+0x354>)
 800213a:	f01a fc41 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddReshape() != kTfLiteOk) {
 800213e:	f507 7384 	add.w	r3, r7, #264	; 0x108
 8002142:	4618      	mov	r0, r3
 8002144:	f000 fda0 	bl	8002c88 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddReshapeEv>
 8002148:	4603      	mov	r3, r0
 800214a:	2b00      	cmp	r3, #0
 800214c:	bf14      	ite	ne
 800214e:	2301      	movne	r3, #1
 8002150:	2300      	moveq	r3, #0
 8002152:	b2db      	uxtb	r3, r3
 8002154:	2b00      	cmp	r3, #0
 8002156:	d005      	beq.n	8002164 <main+0x130>
  			assert(!"Failed to add op");
 8002158:	4b8e      	ldr	r3, [pc, #568]	; (8002394 <main+0x360>)
 800215a:	4a8a      	ldr	r2, [pc, #552]	; (8002384 <main+0x350>)
 800215c:	21ec      	movs	r1, #236	; 0xec
 800215e:	488a      	ldr	r0, [pc, #552]	; (8002388 <main+0x354>)
 8002160:	f01a fc2e 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddFullyConnected() != kTfLiteOk) {
 8002164:	f507 7321 	add.w	r3, r7, #644	; 0x284
 8002168:	4618      	mov	r0, r3
 800216a:	f007 f91d 	bl	80093a8 <_ZN6tflite24Register_FULLY_CONNECTEDEv>
 800216e:	f507 7221 	add.w	r2, r7, #644	; 0x284
 8002172:	f507 7384 	add.w	r3, r7, #264	; 0x108
 8002176:	4611      	mov	r1, r2
 8002178:	4618      	mov	r0, r3
 800217a:	f000 fd9d 	bl	8002cb8 <_ZN6tflite22MicroMutableOpResolverILj8EE17AddFullyConnectedERK16TFLMRegistration>
 800217e:	4603      	mov	r3, r0
 8002180:	2b00      	cmp	r3, #0
 8002182:	bf14      	ite	ne
 8002184:	2301      	movne	r3, #1
 8002186:	2300      	moveq	r3, #0
 8002188:	b2db      	uxtb	r3, r3
 800218a:	2b00      	cmp	r3, #0
 800218c:	d005      	beq.n	800219a <main+0x166>
  			assert(!"Failed to add op");
 800218e:	4b81      	ldr	r3, [pc, #516]	; (8002394 <main+0x360>)
 8002190:	4a7c      	ldr	r2, [pc, #496]	; (8002384 <main+0x350>)
 8002192:	21ef      	movs	r1, #239	; 0xef
 8002194:	487c      	ldr	r0, [pc, #496]	; (8002388 <main+0x354>)
 8002196:	f01a fc13 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddSoftmax() != kTfLiteOk) {
 800219a:	f507 7328 	add.w	r3, r7, #672	; 0x2a0
 800219e:	4618      	mov	r0, r3
 80021a0:	f007 fcb4 	bl	8009b0c <_ZN6tflite16Register_SOFTMAXEv>
 80021a4:	f507 7228 	add.w	r2, r7, #672	; 0x2a0
 80021a8:	f507 7384 	add.w	r3, r7, #264	; 0x108
 80021ac:	4611      	mov	r1, r2
 80021ae:	4618      	mov	r0, r3
 80021b0:	f000 fd94 	bl	8002cdc <_ZN6tflite22MicroMutableOpResolverILj8EE10AddSoftmaxERK16TFLMRegistration>
 80021b4:	4603      	mov	r3, r0
 80021b6:	2b00      	cmp	r3, #0
 80021b8:	bf14      	ite	ne
 80021ba:	2301      	movne	r3, #1
 80021bc:	2300      	moveq	r3, #0
 80021be:	b2db      	uxtb	r3, r3
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d005      	beq.n	80021d0 <main+0x19c>
  			assert(!"Failed to add op");
 80021c4:	4b73      	ldr	r3, [pc, #460]	; (8002394 <main+0x360>)
 80021c6:	4a6f      	ldr	r2, [pc, #444]	; (8002384 <main+0x350>)
 80021c8:	21f2      	movs	r1, #242	; 0xf2
 80021ca:	486f      	ldr	r0, [pc, #444]	; (8002388 <main+0x354>)
 80021cc:	f01a fbf8 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddResizeBilinear() != kTfLiteOk) {
 80021d0:	f507 7384 	add.w	r3, r7, #264	; 0x108
 80021d4:	4618      	mov	r0, r3
 80021d6:	f000 fd93 	bl	8002d00 <_ZN6tflite22MicroMutableOpResolverILj8EE17AddResizeBilinearEv>
 80021da:	4603      	mov	r3, r0
 80021dc:	2b00      	cmp	r3, #0
 80021de:	bf14      	ite	ne
 80021e0:	2301      	movne	r3, #1
 80021e2:	2300      	moveq	r3, #0
 80021e4:	b2db      	uxtb	r3, r3
 80021e6:	2b00      	cmp	r3, #0
 80021e8:	d005      	beq.n	80021f6 <main+0x1c2>
  			assert(!"Failed to add op");
 80021ea:	4b6a      	ldr	r3, [pc, #424]	; (8002394 <main+0x360>)
 80021ec:	4a65      	ldr	r2, [pc, #404]	; (8002384 <main+0x350>)
 80021ee:	21f5      	movs	r1, #245	; 0xf5
 80021f0:	4865      	ldr	r0, [pc, #404]	; (8002388 <main+0x354>)
 80021f2:	f01a fbe5 	bl	801c9c0 <__assert_func>
  		}
  		if (op_resolver.AddQuantize() != kTfLiteOk) {
 80021f6:	f507 7384 	add.w	r3, r7, #264	; 0x108
 80021fa:	4618      	mov	r0, r3
 80021fc:	f000 fd98 	bl	8002d30 <_ZN6tflite22MicroMutableOpResolverILj8EE11AddQuantizeEv>
 8002200:	4603      	mov	r3, r0
 8002202:	2b00      	cmp	r3, #0
 8002204:	bf14      	ite	ne
 8002206:	2301      	movne	r3, #1
 8002208:	2300      	moveq	r3, #0
 800220a:	b2db      	uxtb	r3, r3
 800220c:	2b00      	cmp	r3, #0
 800220e:	d005      	beq.n	800221c <main+0x1e8>
  			assert(!"Failed to add op");
 8002210:	4b60      	ldr	r3, [pc, #384]	; (8002394 <main+0x360>)
 8002212:	4a5c      	ldr	r2, [pc, #368]	; (8002384 <main+0x350>)
 8002214:	21f8      	movs	r1, #248	; 0xf8
 8002216:	485c      	ldr	r0, [pc, #368]	; (8002388 <main+0x354>)
 8002218:	f01a fbd2 	bl	801c9c0 <__assert_func>
  		}
  		// Interpreter
  			tflite::MicroInterpreter interpreter(model, op_resolver, tensor_arena,
  								 kTensorArenaSize);
 800221c:	f507 7284 	add.w	r2, r7, #264	; 0x108
 8002220:	f107 004c 	add.w	r0, r7, #76	; 0x4c
 8002224:	2300      	movs	r3, #0
 8002226:	9303      	str	r3, [sp, #12]
 8002228:	2300      	movs	r3, #0
 800222a:	9302      	str	r3, [sp, #8]
 800222c:	2300      	movs	r3, #0
 800222e:	9301      	str	r3, [sp, #4]
 8002230:	4b59      	ldr	r3, [pc, #356]	; (8002398 <main+0x364>)
 8002232:	9300      	str	r3, [sp, #0]
 8002234:	4b59      	ldr	r3, [pc, #356]	; (800239c <main+0x368>)
 8002236:	f8d7 12c8 	ldr.w	r1, [r7, #712]	; 0x2c8
 800223a:	f00a fdc3 	bl	800cdc4 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb>

  			if (interpreter.AllocateTensors() != kTfLiteOk) {
 800223e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002242:	4618      	mov	r0, r3
 8002244:	f00a ffc2 	bl	800d1cc <_ZN6tflite16MicroInterpreter15AllocateTensorsEv>
 8002248:	4603      	mov	r3, r0
 800224a:	2b00      	cmp	r3, #0
 800224c:	bf14      	ite	ne
 800224e:	2301      	movne	r3, #1
 8002250:	2300      	moveq	r3, #0
 8002252:	b2db      	uxtb	r3, r3
 8002254:	2b00      	cmp	r3, #0
 8002256:	d001      	beq.n	800225c <main+0x228>
  			    Error_Handler();
 8002258:	f000 fc94 	bl	8002b84 <Error_Handler>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  			float means[6] = {0.03458063, 14.73856614, 14.46725874, 11.5, 3.1, 0.7};
 800225c:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 8002260:	f5a3 7327 	sub.w	r3, r3, #668	; 0x29c
 8002264:	4a4e      	ldr	r2, [pc, #312]	; (80023a0 <main+0x36c>)
 8002266:	461c      	mov	r4, r3
 8002268:	4615      	mov	r5, r2
 800226a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800226c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800226e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8002272:	e884 0003 	stmia.w	r4, {r0, r1}
  			float stds[6]  = {0.03533115, 15.07376046, 14.82961334, 6.92218655, 1.97230829, 0.45825757};
 8002276:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 800227a:	f5a3 732d 	sub.w	r3, r3, #692	; 0x2b4
 800227e:	4a49      	ldr	r2, [pc, #292]	; (80023a4 <main+0x370>)
 8002280:	461c      	mov	r4, r3
 8002282:	4615      	mov	r5, r2
 8002284:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002286:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002288:	e895 0003 	ldmia.w	r5, {r0, r1}
 800228c:	e884 0003 	stmia.w	r4, {r0, r1}
  while (1)
  {
	  float input_features[6] = {1.23, 0.5, 0.49, 10, 2, 1};
 8002290:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 8002294:	f5a3 7333 	sub.w	r3, r3, #716	; 0x2cc
 8002298:	4a43      	ldr	r2, [pc, #268]	; (80023a8 <main+0x374>)
 800229a:	461c      	mov	r4, r3
 800229c:	4615      	mov	r5, r2
 800229e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022a0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80022a6:	e884 0003 	stmia.w	r4, {r0, r1}

	      TfLiteTensor* input = interpreter.input(0);  // <-- ADD THIS LINE
 80022aa:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80022ae:	2100      	movs	r1, #0
 80022b0:	4618      	mov	r0, r3
 80022b2:	f00a fd07 	bl	800ccc4 <_ZN6tflite16MicroInterpreter5inputEj>
 80022b6:	f8c7 02c4 	str.w	r0, [r7, #708]	; 0x2c4

	      for (int i = 0; i < 6; i++) {
 80022ba:	2300      	movs	r3, #0
 80022bc:	f8c7 32cc 	str.w	r3, [r7, #716]	; 0x2cc
 80022c0:	f8d7 32cc 	ldr.w	r3, [r7, #716]	; 0x2cc
 80022c4:	2b05      	cmp	r3, #5
 80022c6:	dc30      	bgt.n	800232a <main+0x2f6>
	          input->data.f[i] = (input_features[i] - means[i]) / stds[i];
 80022c8:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 80022cc:	f5a3 7233 	sub.w	r2, r3, #716	; 0x2cc
 80022d0:	f8d7 32cc 	ldr.w	r3, [r7, #716]	; 0x2cc
 80022d4:	009b      	lsls	r3, r3, #2
 80022d6:	4413      	add	r3, r2
 80022d8:	ed93 7a00 	vldr	s14, [r3]
 80022dc:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 80022e0:	f5a3 7227 	sub.w	r2, r3, #668	; 0x29c
 80022e4:	f8d7 32cc 	ldr.w	r3, [r7, #716]	; 0x2cc
 80022e8:	009b      	lsls	r3, r3, #2
 80022ea:	4413      	add	r3, r2
 80022ec:	edd3 7a00 	vldr	s15, [r3]
 80022f0:	ee77 6a67 	vsub.f32	s13, s14, s15
 80022f4:	f507 7334 	add.w	r3, r7, #720	; 0x2d0
 80022f8:	f5a3 722d 	sub.w	r2, r3, #692	; 0x2b4
 80022fc:	f8d7 32cc 	ldr.w	r3, [r7, #716]	; 0x2cc
 8002300:	009b      	lsls	r3, r3, #2
 8002302:	4413      	add	r3, r2
 8002304:	ed93 7a00 	vldr	s14, [r3]
 8002308:	f8d7 32c4 	ldr.w	r3, [r7, #708]	; 0x2c4
 800230c:	685a      	ldr	r2, [r3, #4]
 800230e:	f8d7 32cc 	ldr.w	r3, [r7, #716]	; 0x2cc
 8002312:	009b      	lsls	r3, r3, #2
 8002314:	4413      	add	r3, r2
 8002316:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800231a:	edc3 7a00 	vstr	s15, [r3]
	      for (int i = 0; i < 6; i++) {
 800231e:	f8d7 32cc 	ldr.w	r3, [r7, #716]	; 0x2cc
 8002322:	3301      	adds	r3, #1
 8002324:	f8c7 32cc 	str.w	r3, [r7, #716]	; 0x2cc
 8002328:	e7ca      	b.n	80022c0 <main+0x28c>
	      }

	      if (interpreter.Invoke() != kTfLiteOk) {
 800232a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800232e:	4618      	mov	r0, r3
 8002330:	f00b f8e6 	bl	800d500 <_ZN6tflite16MicroInterpreter6InvokeEv>
 8002334:	4603      	mov	r3, r0
 8002336:	2b00      	cmp	r3, #0
 8002338:	bf14      	ite	ne
 800233a:	2301      	movne	r3, #1
 800233c:	2300      	moveq	r3, #0
 800233e:	b2db      	uxtb	r3, r3
 8002340:	2b00      	cmp	r3, #0
 8002342:	d001      	beq.n	8002348 <main+0x314>
	          Error_Handler();
 8002344:	f000 fc1e 	bl	8002b84 <Error_Handler>
	      }

	      TfLiteTensor* output = interpreter.output(0);
 8002348:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800234c:	2100      	movs	r1, #0
 800234e:	4618      	mov	r0, r3
 8002350:	f00a fcf8 	bl	800cd44 <_ZN6tflite16MicroInterpreter6outputEj>
 8002354:	f8c7 02c0 	str.w	r0, [r7, #704]	; 0x2c0
	      float prediction = output->data.f[0];
 8002358:	f8d7 32c0 	ldr.w	r3, [r7, #704]	; 0x2c0
 800235c:	685b      	ldr	r3, [r3, #4]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f8c7 32bc 	str.w	r3, [r7, #700]	; 0x2bc
	      printf("Predicted energy: %f\r\n", prediction);
 8002364:	f8d7 02bc 	ldr.w	r0, [r7, #700]	; 0x2bc
 8002368:	f7fe f8f8 	bl	800055c <__aeabi_f2d>
 800236c:	4602      	mov	r2, r0
 800236e:	460b      	mov	r3, r1
 8002370:	480e      	ldr	r0, [pc, #56]	; (80023ac <main+0x378>)
 8002372:	f01b fa6d 	bl	801d850 <iprintf>

	      HAL_Delay(1000);
 8002376:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800237a:	f001 fa93 	bl	80038a4 <HAL_Delay>
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
  }
 800237e:	e787      	b.n	8002290 <main+0x25c>
 8002380:	08020368 	.word	0x08020368
 8002384:	08020380 	.word	0x08020380
 8002388:	080202b8 	.word	0x080202b8
 800238c:	20010e48 	.word	0x20010e48
 8002390:	08020da4 	.word	0x08020da4
 8002394:	0802038c 	.word	0x0802038c
 8002398:	000104f0 	.word	0x000104f0
 800239c:	20000210 	.word	0x20000210
 80023a0:	080203b8 	.word	0x080203b8
 80023a4:	080203d0 	.word	0x080203d0
 80023a8:	080203e8 	.word	0x080203e8
 80023ac:	080203a0 	.word	0x080203a0

080023b0 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80023b0:	b580      	push	{r7, lr}
 80023b2:	b096      	sub	sp, #88	; 0x58
 80023b4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80023b6:	f107 0314 	add.w	r3, r7, #20
 80023ba:	2244      	movs	r2, #68	; 0x44
 80023bc:	2100      	movs	r1, #0
 80023be:	4618      	mov	r0, r3
 80023c0:	f01a fb90 	bl	801cae4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80023c4:	463b      	mov	r3, r7
 80023c6:	2200      	movs	r2, #0
 80023c8:	601a      	str	r2, [r3, #0]
 80023ca:	605a      	str	r2, [r3, #4]
 80023cc:	609a      	str	r2, [r3, #8]
 80023ce:	60da      	str	r2, [r3, #12]
 80023d0:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80023d2:	f44f 7000 	mov.w	r0, #512	; 0x200
 80023d6:	f002 f919 	bl	800460c <HAL_PWREx_ControlVoltageScaling>
 80023da:	4603      	mov	r3, r0
 80023dc:	2b00      	cmp	r3, #0
 80023de:	bf14      	ite	ne
 80023e0:	2301      	movne	r3, #1
 80023e2:	2300      	moveq	r3, #0
 80023e4:	b2db      	uxtb	r3, r3
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	d001      	beq.n	80023ee <_Z18SystemClock_Configv+0x3e>
  {
    Error_Handler();
 80023ea:	f000 fbcb 	bl	8002b84 <Error_Handler>
  }

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 80023ee:	f002 f8ef 	bl	80045d0 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 80023f2:	4b27      	ldr	r3, [pc, #156]	; (8002490 <_Z18SystemClock_Configv+0xe0>)
 80023f4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80023f8:	4a25      	ldr	r2, [pc, #148]	; (8002490 <_Z18SystemClock_Configv+0xe0>)
 80023fa:	f023 0318 	bic.w	r3, r3, #24
 80023fe:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 8002402:	2314      	movs	r3, #20
 8002404:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8002406:	2301      	movs	r3, #1
 8002408:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 800240a:	2301      	movs	r3, #1
 800240c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.MSICalibrationValue = 0;
 800240e:	2300      	movs	r3, #0
 8002410:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8002412:	2360      	movs	r3, #96	; 0x60
 8002414:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002416:	2302      	movs	r3, #2
 8002418:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 800241a:	2301      	movs	r3, #1
 800241c:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLM = 1;
 800241e:	2301      	movs	r3, #1
 8002420:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLN = 40;
 8002422:	2328      	movs	r3, #40	; 0x28
 8002424:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8002426:	2307      	movs	r3, #7
 8002428:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800242a:	2302      	movs	r3, #2
 800242c:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 800242e:	2302      	movs	r3, #2
 8002430:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002432:	f107 0314 	add.w	r3, r7, #20
 8002436:	4618      	mov	r0, r3
 8002438:	f002 fa0a 	bl	8004850 <HAL_RCC_OscConfig>
 800243c:	4603      	mov	r3, r0
 800243e:	2b00      	cmp	r3, #0
 8002440:	bf14      	ite	ne
 8002442:	2301      	movne	r3, #1
 8002444:	2300      	moveq	r3, #0
 8002446:	b2db      	uxtb	r3, r3
 8002448:	2b00      	cmp	r3, #0
 800244a:	d001      	beq.n	8002450 <_Z18SystemClock_Configv+0xa0>
  {
    Error_Handler();
 800244c:	f000 fb9a 	bl	8002b84 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002450:	230f      	movs	r3, #15
 8002452:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002454:	2303      	movs	r3, #3
 8002456:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002458:	2300      	movs	r3, #0
 800245a:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800245c:	2300      	movs	r3, #0
 800245e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002460:	2300      	movs	r3, #0
 8002462:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8002464:	463b      	mov	r3, r7
 8002466:	2104      	movs	r1, #4
 8002468:	4618      	mov	r0, r3
 800246a:	f002 fdcd 	bl	8005008 <HAL_RCC_ClockConfig>
 800246e:	4603      	mov	r3, r0
 8002470:	2b00      	cmp	r3, #0
 8002472:	bf14      	ite	ne
 8002474:	2301      	movne	r3, #1
 8002476:	2300      	moveq	r3, #0
 8002478:	b2db      	uxtb	r3, r3
 800247a:	2b00      	cmp	r3, #0
 800247c:	d001      	beq.n	8002482 <_Z18SystemClock_Configv+0xd2>
  {
    Error_Handler();
 800247e:	f000 fb81 	bl	8002b84 <Error_Handler>
  }

  /** Enable MSI Auto calibration
  */
  HAL_RCCEx_EnableMSIPLLMode();
 8002482:	f003 facf 	bl	8005a24 <HAL_RCCEx_EnableMSIPLLMode>
}
 8002486:	bf00      	nop
 8002488:	3758      	adds	r7, #88	; 0x58
 800248a:	46bd      	mov	sp, r7
 800248c:	bd80      	pop	{r7, pc}
 800248e:	bf00      	nop
 8002490:	40021000 	.word	0x40021000

08002494 <_ZL14MX_DFSDM1_Initv>:
  * @brief DFSDM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_DFSDM1_Init(void)
{
 8002494:	b580      	push	{r7, lr}
 8002496:	af00      	add	r7, sp, #0
  /* USER CODE END DFSDM1_Init 0 */

  /* USER CODE BEGIN DFSDM1_Init 1 */

  /* USER CODE END DFSDM1_Init 1 */
  hdfsdm1_channel1.Instance = DFSDM1_Channel1;
 8002498:	4b1b      	ldr	r3, [pc, #108]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 800249a:	4a1c      	ldr	r2, [pc, #112]	; (800250c <_ZL14MX_DFSDM1_Initv+0x78>)
 800249c:	601a      	str	r2, [r3, #0]
  hdfsdm1_channel1.Init.OutputClock.Activation = ENABLE;
 800249e:	4b1a      	ldr	r3, [pc, #104]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024a0:	2201      	movs	r2, #1
 80024a2:	711a      	strb	r2, [r3, #4]
  hdfsdm1_channel1.Init.OutputClock.Selection = DFSDM_CHANNEL_OUTPUT_CLOCK_SYSTEM;
 80024a4:	4b18      	ldr	r3, [pc, #96]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024a6:	2200      	movs	r2, #0
 80024a8:	609a      	str	r2, [r3, #8]
  hdfsdm1_channel1.Init.OutputClock.Divider = 2;
 80024aa:	4b17      	ldr	r3, [pc, #92]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024ac:	2202      	movs	r2, #2
 80024ae:	60da      	str	r2, [r3, #12]
  hdfsdm1_channel1.Init.Input.Multiplexer = DFSDM_CHANNEL_EXTERNAL_INPUTS;
 80024b0:	4b15      	ldr	r3, [pc, #84]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024b2:	2200      	movs	r2, #0
 80024b4:	611a      	str	r2, [r3, #16]
  hdfsdm1_channel1.Init.Input.DataPacking = DFSDM_CHANNEL_STANDARD_MODE;
 80024b6:	4b14      	ldr	r3, [pc, #80]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024b8:	2200      	movs	r2, #0
 80024ba:	615a      	str	r2, [r3, #20]
  hdfsdm1_channel1.Init.Input.Pins = DFSDM_CHANNEL_FOLLOWING_CHANNEL_PINS;
 80024bc:	4b12      	ldr	r3, [pc, #72]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024be:	f44f 7280 	mov.w	r2, #256	; 0x100
 80024c2:	619a      	str	r2, [r3, #24]
  hdfsdm1_channel1.Init.SerialInterface.Type = DFSDM_CHANNEL_SPI_RISING;
 80024c4:	4b10      	ldr	r3, [pc, #64]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024c6:	2200      	movs	r2, #0
 80024c8:	61da      	str	r2, [r3, #28]
  hdfsdm1_channel1.Init.SerialInterface.SpiClock = DFSDM_CHANNEL_SPI_CLOCK_INTERNAL;
 80024ca:	4b0f      	ldr	r3, [pc, #60]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024cc:	2204      	movs	r2, #4
 80024ce:	621a      	str	r2, [r3, #32]
  hdfsdm1_channel1.Init.Awd.FilterOrder = DFSDM_CHANNEL_FASTSINC_ORDER;
 80024d0:	4b0d      	ldr	r3, [pc, #52]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024d2:	2200      	movs	r2, #0
 80024d4:	625a      	str	r2, [r3, #36]	; 0x24
  hdfsdm1_channel1.Init.Awd.Oversampling = 1;
 80024d6:	4b0c      	ldr	r3, [pc, #48]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024d8:	2201      	movs	r2, #1
 80024da:	629a      	str	r2, [r3, #40]	; 0x28
  hdfsdm1_channel1.Init.Offset = 0;
 80024dc:	4b0a      	ldr	r3, [pc, #40]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024de:	2200      	movs	r2, #0
 80024e0:	62da      	str	r2, [r3, #44]	; 0x2c
  hdfsdm1_channel1.Init.RightBitShift = 0x00;
 80024e2:	4b09      	ldr	r3, [pc, #36]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024e4:	2200      	movs	r2, #0
 80024e6:	631a      	str	r2, [r3, #48]	; 0x30
  if (HAL_DFSDM_ChannelInit(&hdfsdm1_channel1) != HAL_OK)
 80024e8:	4807      	ldr	r0, [pc, #28]	; (8002508 <_ZL14MX_DFSDM1_Initv+0x74>)
 80024ea:	f001 fb11 	bl	8003b10 <HAL_DFSDM_ChannelInit>
 80024ee:	4603      	mov	r3, r0
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	bf14      	ite	ne
 80024f4:	2301      	movne	r3, #1
 80024f6:	2300      	moveq	r3, #0
 80024f8:	b2db      	uxtb	r3, r3
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d001      	beq.n	8002502 <_ZL14MX_DFSDM1_Initv+0x6e>
  {
    Error_Handler();
 80024fe:	f000 fb41 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN DFSDM1_Init 2 */

  /* USER CODE END DFSDM1_Init 2 */

}
 8002502:	bf00      	nop
 8002504:	bd80      	pop	{r7, pc}
 8002506:	bf00      	nop
 8002508:	20010700 	.word	0x20010700
 800250c:	40016020 	.word	0x40016020

08002510 <_ZL12MX_I2C2_Initv>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8002510:	b580      	push	{r7, lr}
 8002512:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8002514:	4b23      	ldr	r3, [pc, #140]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002516:	4a24      	ldr	r2, [pc, #144]	; (80025a8 <_ZL12MX_I2C2_Initv+0x98>)
 8002518:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x00000E14;
 800251a:	4b22      	ldr	r3, [pc, #136]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 800251c:	f640 6214 	movw	r2, #3604	; 0xe14
 8002520:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8002522:	4b20      	ldr	r3, [pc, #128]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002524:	2200      	movs	r2, #0
 8002526:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002528:	4b1e      	ldr	r3, [pc, #120]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 800252a:	2201      	movs	r2, #1
 800252c:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800252e:	4b1d      	ldr	r3, [pc, #116]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002530:	2200      	movs	r2, #0
 8002532:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8002534:	4b1b      	ldr	r3, [pc, #108]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002536:	2200      	movs	r2, #0
 8002538:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800253a:	4b1a      	ldr	r3, [pc, #104]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 800253c:	2200      	movs	r2, #0
 800253e:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002540:	4b18      	ldr	r3, [pc, #96]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002542:	2200      	movs	r2, #0
 8002544:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002546:	4b17      	ldr	r3, [pc, #92]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002548:	2200      	movs	r2, #0
 800254a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 800254c:	4815      	ldr	r0, [pc, #84]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 800254e:	f001 fdd0 	bl	80040f2 <HAL_I2C_Init>
 8002552:	4603      	mov	r3, r0
 8002554:	2b00      	cmp	r3, #0
 8002556:	bf14      	ite	ne
 8002558:	2301      	movne	r3, #1
 800255a:	2300      	moveq	r3, #0
 800255c:	b2db      	uxtb	r3, r3
 800255e:	2b00      	cmp	r3, #0
 8002560:	d001      	beq.n	8002566 <_ZL12MX_I2C2_Initv+0x56>
  {
    Error_Handler();
 8002562:	f000 fb0f 	bl	8002b84 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002566:	2100      	movs	r1, #0
 8002568:	480e      	ldr	r0, [pc, #56]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 800256a:	f001 fe51 	bl	8004210 <HAL_I2CEx_ConfigAnalogFilter>
 800256e:	4603      	mov	r3, r0
 8002570:	2b00      	cmp	r3, #0
 8002572:	bf14      	ite	ne
 8002574:	2301      	movne	r3, #1
 8002576:	2300      	moveq	r3, #0
 8002578:	b2db      	uxtb	r3, r3
 800257a:	2b00      	cmp	r3, #0
 800257c:	d001      	beq.n	8002582 <_ZL12MX_I2C2_Initv+0x72>
  {
    Error_Handler();
 800257e:	f000 fb01 	bl	8002b84 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8002582:	2100      	movs	r1, #0
 8002584:	4807      	ldr	r0, [pc, #28]	; (80025a4 <_ZL12MX_I2C2_Initv+0x94>)
 8002586:	f001 fe8e 	bl	80042a6 <HAL_I2CEx_ConfigDigitalFilter>
 800258a:	4603      	mov	r3, r0
 800258c:	2b00      	cmp	r3, #0
 800258e:	bf14      	ite	ne
 8002590:	2301      	movne	r3, #1
 8002592:	2300      	moveq	r3, #0
 8002594:	b2db      	uxtb	r3, r3
 8002596:	2b00      	cmp	r3, #0
 8002598:	d001      	beq.n	800259e <_ZL12MX_I2C2_Initv+0x8e>
  {
    Error_Handler();
 800259a:	f000 faf3 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 800259e:	bf00      	nop
 80025a0:	bd80      	pop	{r7, pc}
 80025a2:	bf00      	nop
 80025a4:	20010738 	.word	0x20010738
 80025a8:	40005800 	.word	0x40005800

080025ac <_ZL15MX_QUADSPI_Initv>:
  * @brief QUADSPI Initialization Function
  * @param None
  * @retval None
  */
static void MX_QUADSPI_Init(void)
{
 80025ac:	b580      	push	{r7, lr}
 80025ae:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN QUADSPI_Init 1 */

  /* USER CODE END QUADSPI_Init 1 */
  /* QUADSPI parameter configuration*/
  hqspi.Instance = QUADSPI;
 80025b0:	4b11      	ldr	r3, [pc, #68]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025b2:	4a12      	ldr	r2, [pc, #72]	; (80025fc <_ZL15MX_QUADSPI_Initv+0x50>)
 80025b4:	601a      	str	r2, [r3, #0]
  hqspi.Init.ClockPrescaler = 2;
 80025b6:	4b10      	ldr	r3, [pc, #64]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025b8:	2202      	movs	r2, #2
 80025ba:	605a      	str	r2, [r3, #4]
  hqspi.Init.FifoThreshold = 4;
 80025bc:	4b0e      	ldr	r3, [pc, #56]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025be:	2204      	movs	r2, #4
 80025c0:	609a      	str	r2, [r3, #8]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80025c2:	4b0d      	ldr	r3, [pc, #52]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025c4:	2210      	movs	r2, #16
 80025c6:	60da      	str	r2, [r3, #12]
  hqspi.Init.FlashSize = 23;
 80025c8:	4b0b      	ldr	r3, [pc, #44]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025ca:	2217      	movs	r2, #23
 80025cc:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_1_CYCLE;
 80025ce:	4b0a      	ldr	r3, [pc, #40]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025d0:	2200      	movs	r2, #0
 80025d2:	615a      	str	r2, [r3, #20]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 80025d4:	4b08      	ldr	r3, [pc, #32]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025d6:	2200      	movs	r2, #0
 80025d8:	619a      	str	r2, [r3, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80025da:	4807      	ldr	r0, [pc, #28]	; (80025f8 <_ZL15MX_QUADSPI_Initv+0x4c>)
 80025dc:	f002 f87c 	bl	80046d8 <HAL_QSPI_Init>
 80025e0:	4603      	mov	r3, r0
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	bf14      	ite	ne
 80025e6:	2301      	movne	r3, #1
 80025e8:	2300      	moveq	r3, #0
 80025ea:	b2db      	uxtb	r3, r3
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d001      	beq.n	80025f4 <_ZL15MX_QUADSPI_Initv+0x48>
  {
    Error_Handler();
 80025f0:	f000 fac8 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN QUADSPI_Init 2 */

  /* USER CODE END QUADSPI_Init 2 */

}
 80025f4:	bf00      	nop
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	2001078c 	.word	0x2001078c
 80025fc:	a0001000 	.word	0xa0001000

08002600 <_ZL12MX_SPI3_Initv>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8002600:	b580      	push	{r7, lr}
 8002602:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8002604:	4b1d      	ldr	r3, [pc, #116]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002606:	4a1e      	ldr	r2, [pc, #120]	; (8002680 <_ZL12MX_SPI3_Initv+0x80>)
 8002608:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 800260a:	4b1c      	ldr	r3, [pc, #112]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 800260c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002610:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8002612:	4b1a      	ldr	r3, [pc, #104]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002614:	2200      	movs	r2, #0
 8002616:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_4BIT;
 8002618:	4b18      	ldr	r3, [pc, #96]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 800261a:	f44f 7240 	mov.w	r2, #768	; 0x300
 800261e:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002620:	4b16      	ldr	r3, [pc, #88]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002622:	2200      	movs	r2, #0
 8002624:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002626:	4b15      	ldr	r3, [pc, #84]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002628:	2200      	movs	r2, #0
 800262a:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 800262c:	4b13      	ldr	r3, [pc, #76]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 800262e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002632:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8002634:	4b11      	ldr	r3, [pc, #68]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002636:	2200      	movs	r2, #0
 8002638:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800263a:	4b10      	ldr	r3, [pc, #64]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 800263c:	2200      	movs	r2, #0
 800263e:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8002640:	4b0e      	ldr	r3, [pc, #56]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002642:	2200      	movs	r2, #0
 8002644:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002646:	4b0d      	ldr	r3, [pc, #52]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002648:	2200      	movs	r2, #0
 800264a:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 7;
 800264c:	4b0b      	ldr	r3, [pc, #44]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 800264e:	2207      	movs	r2, #7
 8002650:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi3.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8002652:	4b0a      	ldr	r3, [pc, #40]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002654:	2200      	movs	r2, #0
 8002656:	631a      	str	r2, [r3, #48]	; 0x30
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8002658:	4b08      	ldr	r3, [pc, #32]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 800265a:	2208      	movs	r2, #8
 800265c:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 800265e:	4807      	ldr	r0, [pc, #28]	; (800267c <_ZL12MX_SPI3_Initv+0x7c>)
 8002660:	f003 fbc2 	bl	8005de8 <HAL_SPI_Init>
 8002664:	4603      	mov	r3, r0
 8002666:	2b00      	cmp	r3, #0
 8002668:	bf14      	ite	ne
 800266a:	2301      	movne	r3, #1
 800266c:	2300      	moveq	r3, #0
 800266e:	b2db      	uxtb	r3, r3
 8002670:	2b00      	cmp	r3, #0
 8002672:	d001      	beq.n	8002678 <_ZL12MX_SPI3_Initv+0x78>
  {
    Error_Handler();
 8002674:	f000 fa86 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8002678:	bf00      	nop
 800267a:	bd80      	pop	{r7, pc}
 800267c:	200107d0 	.word	0x200107d0
 8002680:	40003c00 	.word	0x40003c00

08002684 <_ZL19MX_USART1_UART_Initv>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8002684:	b580      	push	{r7, lr}
 8002686:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8002688:	4b16      	ldr	r3, [pc, #88]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 800268a:	4a17      	ldr	r2, [pc, #92]	; (80026e8 <_ZL19MX_USART1_UART_Initv+0x64>)
 800268c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800268e:	4b15      	ldr	r3, [pc, #84]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 8002690:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8002694:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8002696:	4b13      	ldr	r3, [pc, #76]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 8002698:	2200      	movs	r2, #0
 800269a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800269c:	4b11      	ldr	r3, [pc, #68]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 800269e:	2200      	movs	r2, #0
 80026a0:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80026a2:	4b10      	ldr	r3, [pc, #64]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026a4:	2200      	movs	r2, #0
 80026a6:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80026a8:	4b0e      	ldr	r3, [pc, #56]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026aa:	220c      	movs	r2, #12
 80026ac:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80026ae:	4b0d      	ldr	r3, [pc, #52]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026b0:	2200      	movs	r2, #0
 80026b2:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80026b4:	4b0b      	ldr	r3, [pc, #44]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026b6:	2200      	movs	r2, #0
 80026b8:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80026ba:	4b0a      	ldr	r3, [pc, #40]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026bc:	2200      	movs	r2, #0
 80026be:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80026c0:	4b08      	ldr	r3, [pc, #32]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026c2:	2200      	movs	r2, #0
 80026c4:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80026c6:	4807      	ldr	r0, [pc, #28]	; (80026e4 <_ZL19MX_USART1_UART_Initv+0x60>)
 80026c8:	f003 fc31 	bl	8005f2e <HAL_UART_Init>
 80026cc:	4603      	mov	r3, r0
 80026ce:	2b00      	cmp	r3, #0
 80026d0:	bf14      	ite	ne
 80026d2:	2301      	movne	r3, #1
 80026d4:	2300      	moveq	r3, #0
 80026d6:	b2db      	uxtb	r3, r3
 80026d8:	2b00      	cmp	r3, #0
 80026da:	d001      	beq.n	80026e0 <_ZL19MX_USART1_UART_Initv+0x5c>
  {
    Error_Handler();
 80026dc:	f000 fa52 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80026e0:	bf00      	nop
 80026e2:	bd80      	pop	{r7, pc}
 80026e4:	20010834 	.word	0x20010834
 80026e8:	40013800 	.word	0x40013800

080026ec <_ZL19MX_USART3_UART_Initv>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80026ec:	b580      	push	{r7, lr}
 80026ee:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80026f0:	4b16      	ldr	r3, [pc, #88]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 80026f2:	4a17      	ldr	r2, [pc, #92]	; (8002750 <_ZL19MX_USART3_UART_Initv+0x64>)
 80026f4:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80026f6:	4b15      	ldr	r3, [pc, #84]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 80026f8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80026fc:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80026fe:	4b13      	ldr	r3, [pc, #76]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 8002700:	2200      	movs	r2, #0
 8002702:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8002704:	4b11      	ldr	r3, [pc, #68]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 8002706:	2200      	movs	r2, #0
 8002708:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800270a:	4b10      	ldr	r3, [pc, #64]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 800270c:	2200      	movs	r2, #0
 800270e:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8002710:	4b0e      	ldr	r3, [pc, #56]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 8002712:	220c      	movs	r2, #12
 8002714:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002716:	4b0d      	ldr	r3, [pc, #52]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 8002718:	2200      	movs	r2, #0
 800271a:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 800271c:	4b0b      	ldr	r3, [pc, #44]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 800271e:	2200      	movs	r2, #0
 8002720:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002722:	4b0a      	ldr	r3, [pc, #40]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 8002724:	2200      	movs	r2, #0
 8002726:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002728:	4b08      	ldr	r3, [pc, #32]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 800272a:	2200      	movs	r2, #0
 800272c:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 800272e:	4807      	ldr	r0, [pc, #28]	; (800274c <_ZL19MX_USART3_UART_Initv+0x60>)
 8002730:	f003 fbfd 	bl	8005f2e <HAL_UART_Init>
 8002734:	4603      	mov	r3, r0
 8002736:	2b00      	cmp	r3, #0
 8002738:	bf14      	ite	ne
 800273a:	2301      	movne	r3, #1
 800273c:	2300      	moveq	r3, #0
 800273e:	b2db      	uxtb	r3, r3
 8002740:	2b00      	cmp	r3, #0
 8002742:	d001      	beq.n	8002748 <_ZL19MX_USART3_UART_Initv+0x5c>
  {
    Error_Handler();
 8002744:	f000 fa1e 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8002748:	bf00      	nop
 800274a:	bd80      	pop	{r7, pc}
 800274c:	200108b8 	.word	0x200108b8
 8002750:	40004800 	.word	0x40004800

08002754 <_ZL22MX_USB_OTG_FS_PCD_Initv>:
  * @brief USB_OTG_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_FS_PCD_Init(void)
{
 8002754:	b580      	push	{r7, lr}
 8002756:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8002758:	4b16      	ldr	r3, [pc, #88]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 800275a:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 800275e:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 8002760:	4b14      	ldr	r3, [pc, #80]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002762:	2206      	movs	r2, #6
 8002764:	605a      	str	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 8002766:	4b13      	ldr	r3, [pc, #76]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002768:	2202      	movs	r2, #2
 800276a:	60da      	str	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800276c:	4b11      	ldr	r3, [pc, #68]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 800276e:	2202      	movs	r2, #2
 8002770:	619a      	str	r2, [r3, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = DISABLE;
 8002772:	4b10      	ldr	r3, [pc, #64]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002774:	2200      	movs	r2, #0
 8002776:	61da      	str	r2, [r3, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8002778:	4b0e      	ldr	r3, [pc, #56]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 800277a:	2200      	movs	r2, #0
 800277c:	621a      	str	r2, [r3, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 800277e:	4b0d      	ldr	r3, [pc, #52]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002780:	2200      	movs	r2, #0
 8002782:	625a      	str	r2, [r3, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.battery_charging_enable = DISABLE;
 8002784:	4b0b      	ldr	r3, [pc, #44]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002786:	2200      	movs	r2, #0
 8002788:	629a      	str	r2, [r3, #40]	; 0x28
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 800278a:	4b0a      	ldr	r3, [pc, #40]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 800278c:	2200      	movs	r2, #0
 800278e:	631a      	str	r2, [r3, #48]	; 0x30
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = DISABLE;
 8002790:	4b08      	ldr	r3, [pc, #32]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002792:	2200      	movs	r2, #0
 8002794:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 8002796:	4807      	ldr	r0, [pc, #28]	; (80027b4 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x60>)
 8002798:	f001 fdd1 	bl	800433e <HAL_PCD_Init>
 800279c:	4603      	mov	r3, r0
 800279e:	2b00      	cmp	r3, #0
 80027a0:	bf14      	ite	ne
 80027a2:	2301      	movne	r3, #1
 80027a4:	2300      	moveq	r3, #0
 80027a6:	b2db      	uxtb	r3, r3
 80027a8:	2b00      	cmp	r3, #0
 80027aa:	d001      	beq.n	80027b0 <_ZL22MX_USB_OTG_FS_PCD_Initv+0x5c>
  {
    Error_Handler();
 80027ac:	f000 f9ea 	bl	8002b84 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 80027b0:	bf00      	nop
 80027b2:	bd80      	pop	{r7, pc}
 80027b4:	2001093c 	.word	0x2001093c

080027b8 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80027b8:	b580      	push	{r7, lr}
 80027ba:	b08a      	sub	sp, #40	; 0x28
 80027bc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027be:	f107 0314 	add.w	r3, r7, #20
 80027c2:	2200      	movs	r2, #0
 80027c4:	601a      	str	r2, [r3, #0]
 80027c6:	605a      	str	r2, [r3, #4]
 80027c8:	609a      	str	r2, [r3, #8]
 80027ca:	60da      	str	r2, [r3, #12]
 80027cc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80027ce:	4bbd      	ldr	r3, [pc, #756]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 80027d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80027d2:	4abc      	ldr	r2, [pc, #752]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 80027d4:	f043 0310 	orr.w	r3, r3, #16
 80027d8:	64d3      	str	r3, [r2, #76]	; 0x4c
 80027da:	4bba      	ldr	r3, [pc, #744]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 80027dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80027de:	f003 0310 	and.w	r3, r3, #16
 80027e2:	613b      	str	r3, [r7, #16]
 80027e4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80027e6:	4bb7      	ldr	r3, [pc, #732]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 80027e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80027ea:	4ab6      	ldr	r2, [pc, #728]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 80027ec:	f043 0304 	orr.w	r3, r3, #4
 80027f0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80027f2:	4bb4      	ldr	r3, [pc, #720]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 80027f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80027f6:	f003 0304 	and.w	r3, r3, #4
 80027fa:	60fb      	str	r3, [r7, #12]
 80027fc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027fe:	4bb1      	ldr	r3, [pc, #708]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 8002800:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002802:	4ab0      	ldr	r2, [pc, #704]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 8002804:	f043 0301 	orr.w	r3, r3, #1
 8002808:	64d3      	str	r3, [r2, #76]	; 0x4c
 800280a:	4bae      	ldr	r3, [pc, #696]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 800280c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800280e:	f003 0301 	and.w	r3, r3, #1
 8002812:	60bb      	str	r3, [r7, #8]
 8002814:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002816:	4bab      	ldr	r3, [pc, #684]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 8002818:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800281a:	4aaa      	ldr	r2, [pc, #680]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 800281c:	f043 0302 	orr.w	r3, r3, #2
 8002820:	64d3      	str	r3, [r2, #76]	; 0x4c
 8002822:	4ba8      	ldr	r3, [pc, #672]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 8002824:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002826:	f003 0302 	and.w	r3, r3, #2
 800282a:	607b      	str	r3, [r7, #4]
 800282c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800282e:	4ba5      	ldr	r3, [pc, #660]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 8002830:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002832:	4aa4      	ldr	r2, [pc, #656]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 8002834:	f043 0308 	orr.w	r3, r3, #8
 8002838:	64d3      	str	r3, [r2, #76]	; 0x4c
 800283a:	4ba2      	ldr	r3, [pc, #648]	; (8002ac4 <_ZL12MX_GPIO_Initv+0x30c>)
 800283c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800283e:	f003 0308 	and.w	r3, r3, #8
 8002842:	603b      	str	r3, [r7, #0]
 8002844:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, M24SR64_Y_RF_DISABLE_Pin|M24SR64_Y_GPO_Pin|ISM43362_RST_Pin, GPIO_PIN_RESET);
 8002846:	2200      	movs	r2, #0
 8002848:	f44f 718a 	mov.w	r1, #276	; 0x114
 800284c:	489e      	ldr	r0, [pc, #632]	; (8002ac8 <_ZL12MX_GPIO_Initv+0x310>)
 800284e:	f001 fc15 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, ARD_D10_Pin|SPBTLE_RF_RST_Pin|ARD_D9_Pin, GPIO_PIN_RESET);
 8002852:	2200      	movs	r2, #0
 8002854:	f248 1104 	movw	r1, #33028	; 0x8104
 8002858:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800285c:	f001 fc0e 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, ARD_D8_Pin|ISM43362_BOOT0_Pin|ISM43362_WAKEUP_Pin|LED2_Pin
 8002860:	2200      	movs	r2, #0
 8002862:	f24f 0114 	movw	r1, #61460	; 0xf014
 8002866:	4899      	ldr	r0, [pc, #612]	; (8002acc <_ZL12MX_GPIO_Initv+0x314>)
 8002868:	f001 fc08 	bl	800407c <HAL_GPIO_WritePin>
                          |SPSGRF_915_SDN_Pin|ARD_D5_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, USB_OTG_FS_PWR_EN_Pin|PMOD_RESET_Pin|STSAFE_A100_RESET_Pin, GPIO_PIN_RESET);
 800286c:	2200      	movs	r2, #0
 800286e:	f241 0181 	movw	r1, #4225	; 0x1081
 8002872:	4897      	ldr	r0, [pc, #604]	; (8002ad0 <_ZL12MX_GPIO_Initv+0x318>)
 8002874:	f001 fc02 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPBTLE_RF_SPI3_CSN_GPIO_Port, SPBTLE_RF_SPI3_CSN_Pin, GPIO_PIN_SET);
 8002878:	2201      	movs	r2, #1
 800287a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800287e:	4894      	ldr	r0, [pc, #592]	; (8002ad0 <_ZL12MX_GPIO_Initv+0x318>)
 8002880:	f001 fbfc 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, VL53L0X_XSHUT_Pin|LED3_WIFI__LED4_BLE_Pin, GPIO_PIN_RESET);
 8002884:	2200      	movs	r2, #0
 8002886:	f44f 7110 	mov.w	r1, #576	; 0x240
 800288a:	4892      	ldr	r0, [pc, #584]	; (8002ad4 <_ZL12MX_GPIO_Initv+0x31c>)
 800288c:	f001 fbf6 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SPSGRF_915_SPI3_CSN_GPIO_Port, SPSGRF_915_SPI3_CSN_Pin, GPIO_PIN_SET);
 8002890:	2201      	movs	r2, #1
 8002892:	2120      	movs	r1, #32
 8002894:	488d      	ldr	r0, [pc, #564]	; (8002acc <_ZL12MX_GPIO_Initv+0x314>)
 8002896:	f001 fbf1 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ISM43362_SPI3_CSN_GPIO_Port, ISM43362_SPI3_CSN_Pin, GPIO_PIN_SET);
 800289a:	2201      	movs	r2, #1
 800289c:	2101      	movs	r1, #1
 800289e:	488a      	ldr	r0, [pc, #552]	; (8002ac8 <_ZL12MX_GPIO_Initv+0x310>)
 80028a0:	f001 fbec 	bl	800407c <HAL_GPIO_WritePin>

  /*Configure GPIO pins : M24SR64_Y_RF_DISABLE_Pin M24SR64_Y_GPO_Pin ISM43362_RST_Pin ISM43362_SPI3_CSN_Pin */
  GPIO_InitStruct.Pin = M24SR64_Y_RF_DISABLE_Pin|M24SR64_Y_GPO_Pin|ISM43362_RST_Pin|ISM43362_SPI3_CSN_Pin;
 80028a4:	f240 1315 	movw	r3, #277	; 0x115
 80028a8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80028aa:	2301      	movs	r3, #1
 80028ac:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028ae:	2300      	movs	r3, #0
 80028b0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80028b2:	2300      	movs	r3, #0
 80028b4:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80028b6:	f107 0314 	add.w	r3, r7, #20
 80028ba:	4619      	mov	r1, r3
 80028bc:	4882      	ldr	r0, [pc, #520]	; (8002ac8 <_ZL12MX_GPIO_Initv+0x310>)
 80028be:	f001 fa33 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OTG_FS_OVRCR_EXTI3_Pin SPSGRF_915_GPIO3_EXTI5_Pin SPBTLE_RF_IRQ_EXTI6_Pin ISM43362_DRDY_EXTI1_Pin */
  GPIO_InitStruct.Pin = USB_OTG_FS_OVRCR_EXTI3_Pin|SPSGRF_915_GPIO3_EXTI5_Pin|SPBTLE_RF_IRQ_EXTI6_Pin|ISM43362_DRDY_EXTI1_Pin;
 80028c2:	236a      	movs	r3, #106	; 0x6a
 80028c4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80028c6:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80028ca:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028cc:	2300      	movs	r3, #0
 80028ce:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80028d0:	f107 0314 	add.w	r3, r7, #20
 80028d4:	4619      	mov	r1, r3
 80028d6:	487c      	ldr	r0, [pc, #496]	; (8002ac8 <_ZL12MX_GPIO_Initv+0x310>)
 80028d8:	f001 fa26 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUTTON_EXTI13_Pin */
  GPIO_InitStruct.Pin = BUTTON_EXTI13_Pin;
 80028dc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80028e0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80028e2:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80028e6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028e8:	2300      	movs	r3, #0
 80028ea:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(BUTTON_EXTI13_GPIO_Port, &GPIO_InitStruct);
 80028ec:	f107 0314 	add.w	r3, r7, #20
 80028f0:	4619      	mov	r1, r3
 80028f2:	4878      	ldr	r0, [pc, #480]	; (8002ad4 <_ZL12MX_GPIO_Initv+0x31c>)
 80028f4:	f001 fa18 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_A5_Pin ARD_A4_Pin ARD_A3_Pin ARD_A2_Pin
                           ARD_A1_Pin ARD_A0_Pin */
  GPIO_InitStruct.Pin = ARD_A5_Pin|ARD_A4_Pin|ARD_A3_Pin|ARD_A2_Pin
 80028f8:	233f      	movs	r3, #63	; 0x3f
 80028fa:	617b      	str	r3, [r7, #20]
                          |ARD_A1_Pin|ARD_A0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 80028fc:	230b      	movs	r3, #11
 80028fe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002900:	2300      	movs	r3, #0
 8002902:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002904:	f107 0314 	add.w	r3, r7, #20
 8002908:	4619      	mov	r1, r3
 800290a:	4872      	ldr	r0, [pc, #456]	; (8002ad4 <_ZL12MX_GPIO_Initv+0x31c>)
 800290c:	f001 fa0c 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D1_Pin ARD_D0_Pin */
  GPIO_InitStruct.Pin = ARD_D1_Pin|ARD_D0_Pin;
 8002910:	2303      	movs	r3, #3
 8002912:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002914:	2302      	movs	r3, #2
 8002916:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002918:	2300      	movs	r3, #0
 800291a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800291c:	2303      	movs	r3, #3
 800291e:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8002920:	2308      	movs	r3, #8
 8002922:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002924:	f107 0314 	add.w	r3, r7, #20
 8002928:	4619      	mov	r1, r3
 800292a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800292e:	f001 f9fb 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D10_Pin SPBTLE_RF_RST_Pin ARD_D9_Pin */
  GPIO_InitStruct.Pin = ARD_D10_Pin|SPBTLE_RF_RST_Pin|ARD_D9_Pin;
 8002932:	f248 1304 	movw	r3, #33028	; 0x8104
 8002936:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002938:	2301      	movs	r3, #1
 800293a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800293c:	2300      	movs	r3, #0
 800293e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002940:	2300      	movs	r3, #0
 8002942:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002944:	f107 0314 	add.w	r3, r7, #20
 8002948:	4619      	mov	r1, r3
 800294a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800294e:	f001 f9eb 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D4_Pin */
  GPIO_InitStruct.Pin = ARD_D4_Pin;
 8002952:	2308      	movs	r3, #8
 8002954:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002956:	2302      	movs	r3, #2
 8002958:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800295a:	2300      	movs	r3, #0
 800295c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800295e:	2300      	movs	r3, #0
 8002960:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8002962:	2301      	movs	r3, #1
 8002964:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(ARD_D4_GPIO_Port, &GPIO_InitStruct);
 8002966:	f107 0314 	add.w	r3, r7, #20
 800296a:	4619      	mov	r1, r3
 800296c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8002970:	f001 f9da 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D7_Pin */
  GPIO_InitStruct.Pin = ARD_D7_Pin;
 8002974:	2310      	movs	r3, #16
 8002976:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 8002978:	230b      	movs	r3, #11
 800297a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800297c:	2300      	movs	r3, #0
 800297e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ARD_D7_GPIO_Port, &GPIO_InitStruct);
 8002980:	f107 0314 	add.w	r3, r7, #20
 8002984:	4619      	mov	r1, r3
 8002986:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800298a:	f001 f9cd 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D13_Pin ARD_D12_Pin ARD_D11_Pin */
  GPIO_InitStruct.Pin = ARD_D13_Pin|ARD_D12_Pin|ARD_D11_Pin;
 800298e:	23e0      	movs	r3, #224	; 0xe0
 8002990:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002992:	2302      	movs	r3, #2
 8002994:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002996:	2300      	movs	r3, #0
 8002998:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800299a:	2303      	movs	r3, #3
 800299c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 800299e:	2305      	movs	r3, #5
 80029a0:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029a2:	f107 0314 	add.w	r3, r7, #20
 80029a6:	4619      	mov	r1, r3
 80029a8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80029ac:	f001 f9bc 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D3_Pin */
  GPIO_InitStruct.Pin = ARD_D3_Pin;
 80029b0:	2301      	movs	r3, #1
 80029b2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80029b4:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 80029b8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029ba:	2300      	movs	r3, #0
 80029bc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ARD_D3_GPIO_Port, &GPIO_InitStruct);
 80029be:	f107 0314 	add.w	r3, r7, #20
 80029c2:	4619      	mov	r1, r3
 80029c4:	4841      	ldr	r0, [pc, #260]	; (8002acc <_ZL12MX_GPIO_Initv+0x314>)
 80029c6:	f001 f9af 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pin : ARD_D6_Pin */
  GPIO_InitStruct.Pin = ARD_D6_Pin;
 80029ca:	2302      	movs	r3, #2
 80029cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 80029ce:	230b      	movs	r3, #11
 80029d0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029d2:	2300      	movs	r3, #0
 80029d4:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(ARD_D6_GPIO_Port, &GPIO_InitStruct);
 80029d6:	f107 0314 	add.w	r3, r7, #20
 80029da:	4619      	mov	r1, r3
 80029dc:	483b      	ldr	r0, [pc, #236]	; (8002acc <_ZL12MX_GPIO_Initv+0x314>)
 80029de:	f001 f9a3 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D8_Pin ISM43362_BOOT0_Pin ISM43362_WAKEUP_Pin LED2_Pin
                           SPSGRF_915_SDN_Pin ARD_D5_Pin SPSGRF_915_SPI3_CSN_Pin */
  GPIO_InitStruct.Pin = ARD_D8_Pin|ISM43362_BOOT0_Pin|ISM43362_WAKEUP_Pin|LED2_Pin
 80029e2:	f24f 0334 	movw	r3, #61492	; 0xf034
 80029e6:	617b      	str	r3, [r7, #20]
                          |SPSGRF_915_SDN_Pin|ARD_D5_Pin|SPSGRF_915_SPI3_CSN_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80029e8:	2301      	movs	r3, #1
 80029ea:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029ec:	2300      	movs	r3, #0
 80029ee:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80029f0:	2300      	movs	r3, #0
 80029f2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80029f4:	f107 0314 	add.w	r3, r7, #20
 80029f8:	4619      	mov	r1, r3
 80029fa:	4834      	ldr	r0, [pc, #208]	; (8002acc <_ZL12MX_GPIO_Initv+0x314>)
 80029fc:	f001 f994 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : LPS22HB_INT_DRDY_EXTI0_Pin LSM6DSL_INT1_EXTI11_Pin ARD_D2_Pin HTS221_DRDY_EXTI15_Pin
                           PMOD_IRQ_EXTI12_Pin */
  GPIO_InitStruct.Pin = LPS22HB_INT_DRDY_EXTI0_Pin|LSM6DSL_INT1_EXTI11_Pin|ARD_D2_Pin|HTS221_DRDY_EXTI15_Pin
 8002a00:	f64c 4304 	movw	r3, #52228	; 0xcc04
 8002a04:	617b      	str	r3, [r7, #20]
                          |PMOD_IRQ_EXTI12_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002a06:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002a0a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002a10:	f107 0314 	add.w	r3, r7, #20
 8002a14:	4619      	mov	r1, r3
 8002a16:	482e      	ldr	r0, [pc, #184]	; (8002ad0 <_ZL12MX_GPIO_Initv+0x318>)
 8002a18:	f001 f986 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : USB_OTG_FS_PWR_EN_Pin SPBTLE_RF_SPI3_CSN_Pin PMOD_RESET_Pin STSAFE_A100_RESET_Pin */
  GPIO_InitStruct.Pin = USB_OTG_FS_PWR_EN_Pin|SPBTLE_RF_SPI3_CSN_Pin|PMOD_RESET_Pin|STSAFE_A100_RESET_Pin;
 8002a1c:	f243 0381 	movw	r3, #12417	; 0x3081
 8002a20:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002a22:	2301      	movs	r3, #1
 8002a24:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a26:	2300      	movs	r3, #0
 8002a28:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002a2e:	f107 0314 	add.w	r3, r7, #20
 8002a32:	4619      	mov	r1, r3
 8002a34:	4826      	ldr	r0, [pc, #152]	; (8002ad0 <_ZL12MX_GPIO_Initv+0x318>)
 8002a36:	f001 f977 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : VL53L0X_XSHUT_Pin LED3_WIFI__LED4_BLE_Pin */
  GPIO_InitStruct.Pin = VL53L0X_XSHUT_Pin|LED3_WIFI__LED4_BLE_Pin;
 8002a3a:	f44f 7310 	mov.w	r3, #576	; 0x240
 8002a3e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002a40:	2301      	movs	r3, #1
 8002a42:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a44:	2300      	movs	r3, #0
 8002a46:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002a48:	2300      	movs	r3, #0
 8002a4a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a4c:	f107 0314 	add.w	r3, r7, #20
 8002a50:	4619      	mov	r1, r3
 8002a52:	4820      	ldr	r0, [pc, #128]	; (8002ad4 <_ZL12MX_GPIO_Initv+0x31c>)
 8002a54:	f001 f968 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : VL53L0X_GPIO1_EXTI7_Pin LSM3MDL_DRDY_EXTI8_Pin */
  GPIO_InitStruct.Pin = VL53L0X_GPIO1_EXTI7_Pin|LSM3MDL_DRDY_EXTI8_Pin;
 8002a58:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8002a5c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8002a5e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002a62:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a64:	2300      	movs	r3, #0
 8002a66:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002a68:	f107 0314 	add.w	r3, r7, #20
 8002a6c:	4619      	mov	r1, r3
 8002a6e:	4819      	ldr	r0, [pc, #100]	; (8002ad4 <_ZL12MX_GPIO_Initv+0x31c>)
 8002a70:	f001 f95a 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pin : PMOD_SPI2_SCK_Pin */
  GPIO_InitStruct.Pin = PMOD_SPI2_SCK_Pin;
 8002a74:	2302      	movs	r3, #2
 8002a76:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a78:	2302      	movs	r3, #2
 8002a7a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a7c:	2300      	movs	r3, #0
 8002a7e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002a80:	2303      	movs	r3, #3
 8002a82:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002a84:	2305      	movs	r3, #5
 8002a86:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(PMOD_SPI2_SCK_GPIO_Port, &GPIO_InitStruct);
 8002a88:	f107 0314 	add.w	r3, r7, #20
 8002a8c:	4619      	mov	r1, r3
 8002a8e:	4810      	ldr	r0, [pc, #64]	; (8002ad0 <_ZL12MX_GPIO_Initv+0x318>)
 8002a90:	f001 f94a 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : PMOD_UART2_CTS_Pin PMOD_UART2_RTS_Pin PMOD_UART2_TX_Pin PMOD_UART2_RX_Pin */
  GPIO_InitStruct.Pin = PMOD_UART2_CTS_Pin|PMOD_UART2_RTS_Pin|PMOD_UART2_TX_Pin|PMOD_UART2_RX_Pin;
 8002a94:	2378      	movs	r3, #120	; 0x78
 8002a96:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a98:	2302      	movs	r3, #2
 8002a9a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002a9c:	2300      	movs	r3, #0
 8002a9e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002aa0:	2303      	movs	r3, #3
 8002aa2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8002aa4:	2307      	movs	r3, #7
 8002aa6:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002aa8:	f107 0314 	add.w	r3, r7, #20
 8002aac:	4619      	mov	r1, r3
 8002aae:	4808      	ldr	r0, [pc, #32]	; (8002ad0 <_ZL12MX_GPIO_Initv+0x318>)
 8002ab0:	f001 f93a 	bl	8003d28 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARD_D15_Pin ARD_D14_Pin */
  GPIO_InitStruct.Pin = ARD_D15_Pin|ARD_D14_Pin;
 8002ab4:	f44f 7340 	mov.w	r3, #768	; 0x300
 8002ab8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002aba:	2312      	movs	r3, #18
 8002abc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002abe:	2300      	movs	r3, #0
 8002ac0:	e00a      	b.n	8002ad8 <_ZL12MX_GPIO_Initv+0x320>
 8002ac2:	bf00      	nop
 8002ac4:	40021000 	.word	0x40021000
 8002ac8:	48001000 	.word	0x48001000
 8002acc:	48000400 	.word	0x48000400
 8002ad0:	48000c00 	.word	0x48000c00
 8002ad4:	48000800 	.word	0x48000800
 8002ad8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ada:	2303      	movs	r3, #3
 8002adc:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002ade:	2304      	movs	r3, #4
 8002ae0:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002ae2:	f107 0314 	add.w	r3, r7, #20
 8002ae6:	4619      	mov	r1, r3
 8002ae8:	480b      	ldr	r0, [pc, #44]	; (8002b18 <_ZL12MX_GPIO_Initv+0x360>)
 8002aea:	f001 f91d 	bl	8003d28 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8002aee:	2200      	movs	r2, #0
 8002af0:	2100      	movs	r1, #0
 8002af2:	2017      	movs	r0, #23
 8002af4:	f000 ffd5 	bl	8003aa2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8002af8:	2017      	movs	r0, #23
 8002afa:	f000 ffee 	bl	8003ada <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8002afe:	2200      	movs	r2, #0
 8002b00:	2100      	movs	r1, #0
 8002b02:	2028      	movs	r0, #40	; 0x28
 8002b04:	f000 ffcd 	bl	8003aa2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8002b08:	2028      	movs	r0, #40	; 0x28
 8002b0a:	f000 ffe6 	bl	8003ada <HAL_NVIC_EnableIRQ>

}
 8002b0e:	bf00      	nop
 8002b10:	3728      	adds	r7, #40	; 0x28
 8002b12:	46bd      	mov	sp, r7
 8002b14:	bd80      	pop	{r7, pc}
 8002b16:	bf00      	nop
 8002b18:	48000400 	.word	0x48000400

08002b1c <_write>:

/* USER CODE BEGIN 4 */
extern "C" {
int _write(int fd, const void *buf, int cnt)
{
 8002b1c:	b580      	push	{r7, lr}
 8002b1e:	b084      	sub	sp, #16
 8002b20:	af00      	add	r7, sp, #0
 8002b22:	60f8      	str	r0, [r7, #12]
 8002b24:	60b9      	str	r1, [r7, #8]
 8002b26:	607a      	str	r2, [r7, #4]
if (fd == 1 || fd == 1) {
 8002b28:	68fb      	ldr	r3, [r7, #12]
 8002b2a:	2b01      	cmp	r3, #1
 8002b2c:	d002      	beq.n	8002b34 <_write+0x18>
 8002b2e:	68fb      	ldr	r3, [r7, #12]
 8002b30:	2b01      	cmp	r3, #1
 8002b32:	d11d      	bne.n	8002b70 <_write+0x54>
if (HAL_UART_Transmit(&huart1, (uint8_t *)buf, cnt,100) != HAL_OK) {
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	b29a      	uxth	r2, r3
 8002b38:	2364      	movs	r3, #100	; 0x64
 8002b3a:	68b9      	ldr	r1, [r7, #8]
 8002b3c:	480f      	ldr	r0, [pc, #60]	; (8002b7c <_write+0x60>)
 8002b3e:	f003 fa44 	bl	8005fca <HAL_UART_Transmit>
 8002b42:	4603      	mov	r3, r0
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	bf14      	ite	ne
 8002b48:	2301      	movne	r3, #1
 8002b4a:	2300      	moveq	r3, #0
 8002b4c:	b2db      	uxtb	r3, r3
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d002      	beq.n	8002b58 <_write+0x3c>
return -1;
 8002b52:	f04f 33ff 	mov.w	r3, #4294967295
 8002b56:	e00c      	b.n	8002b72 <_write+0x56>
}
#ifndef CONFIG_DEBUG_NOCR
if (*(uint8_t *)(buf + cnt - 1) == '\n') {
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	3b01      	subs	r3, #1
 8002b5c:	68ba      	ldr	r2, [r7, #8]
 8002b5e:	4413      	add	r3, r2
 8002b60:	781b      	ldrb	r3, [r3, #0]
 8002b62:	2b0a      	cmp	r3, #10
 8002b64:	d104      	bne.n	8002b70 <_write+0x54>
_write(fd, "\r", 1);
 8002b66:	2201      	movs	r2, #1
 8002b68:	4905      	ldr	r1, [pc, #20]	; (8002b80 <_write+0x64>)
 8002b6a:	68f8      	ldr	r0, [r7, #12]
 8002b6c:	f7ff ffd6 	bl	8002b1c <_write>
}
#endif
} return cnt;
 8002b70:	687b      	ldr	r3, [r7, #4]
}
 8002b72:	4618      	mov	r0, r3
 8002b74:	3710      	adds	r7, #16
 8002b76:	46bd      	mov	sp, r7
 8002b78:	bd80      	pop	{r7, pc}
 8002b7a:	bf00      	nop
 8002b7c:	20010834 	.word	0x20010834
 8002b80:	08020400 	.word	0x08020400

08002b84 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002b84:	b480      	push	{r7}
 8002b86:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002b88:	b672      	cpsid	i
}
 8002b8a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002b8c:	e7fe      	b.n	8002b8c <Error_Handler+0x8>

08002b8e <_ZN11flatbuffers12EndianScalarImEET_S1_>:
#if defined(_MSC_VER)
  #pragma warning(pop)
#endif


template<typename T> T EndianScalar(T t) {
 8002b8e:	b480      	push	{r7}
 8002b90:	b083      	sub	sp, #12
 8002b92:	af00      	add	r7, sp, #0
 8002b94:	6078      	str	r0, [r7, #4]
  #if FLATBUFFERS_LITTLEENDIAN
    return t;
 8002b96:	687b      	ldr	r3, [r7, #4]
  #else
    return EndianSwap(t);
  #endif
}
 8002b98:	4618      	mov	r0, r3
 8002b9a:	370c      	adds	r7, #12
 8002b9c:	46bd      	mov	sp, r7
 8002b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ba2:	4770      	bx	lr

08002ba4 <_ZN11flatbuffers7GetRootIN6tflite5ModelEEEPKT_PKv>:
template<typename T, typename SizeT = uoffset_t>
T *GetMutableSizePrefixedRoot(void *buf) {
  return GetMutableRoot<T>(reinterpret_cast<uint8_t *>(buf) + sizeof(SizeT));
}

template<typename T> const T *GetRoot(const void *buf) {
 8002ba4:	b580      	push	{r7, lr}
 8002ba6:	b082      	sub	sp, #8
 8002ba8:	af00      	add	r7, sp, #0
 8002baa:	6078      	str	r0, [r7, #4]
  return GetMutableRoot<T>(const_cast<void *>(buf));
 8002bac:	6878      	ldr	r0, [r7, #4]
 8002bae:	f000 f8d7 	bl	8002d60 <_ZN11flatbuffers14GetMutableRootIN6tflite5ModelEEEPT_Pv>
 8002bb2:	4603      	mov	r3, r0
}
 8002bb4:	4618      	mov	r0, r3
 8002bb6:	3708      	adds	r7, #8
 8002bb8:	46bd      	mov	sp, r7
 8002bba:	bd80      	pop	{r7, pc}

08002bbc <_ZN6tflite15MicroOpResolverC1Ev>:
class MicroOpResolver {
 8002bbc:	b480      	push	{r7}
 8002bbe:	b083      	sub	sp, #12
 8002bc0:	af00      	add	r7, sp, #0
 8002bc2:	6078      	str	r0, [r7, #4]
 8002bc4:	4a04      	ldr	r2, [pc, #16]	; (8002bd8 <_ZN6tflite15MicroOpResolverC1Ev+0x1c>)
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	601a      	str	r2, [r3, #0]
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	4618      	mov	r0, r3
 8002bce:	370c      	adds	r7, #12
 8002bd0:	46bd      	mov	sp, r7
 8002bd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd6:	4770      	bx	lr
 8002bd8:	08020d48 	.word	0x08020d48

08002bdc <_ZN6tflite22MicroMutableOpResolverILj8EEC1Ev>:
template <unsigned int tOpCount>
class MicroMutableOpResolver : public MicroOpResolver {
 public:
  TF_LITE_REMOVE_VIRTUAL_DELETE

  explicit MicroMutableOpResolver() {}
 8002bdc:	b580      	push	{r7, lr}
 8002bde:	b082      	sub	sp, #8
 8002be0:	af00      	add	r7, sp, #0
 8002be2:	6078      	str	r0, [r7, #4]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	4618      	mov	r0, r3
 8002be8:	f7ff ffe8 	bl	8002bbc <_ZN6tflite15MicroOpResolverC1Ev>
 8002bec:	4a07      	ldr	r2, [pc, #28]	; (8002c0c <_ZN6tflite22MicroMutableOpResolverILj8EEC1Ev+0x30>)
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	601a      	str	r2, [r3, #0]
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	2200      	movs	r2, #0
 8002bf6:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
 8002bfa:	687b      	ldr	r3, [r7, #4]
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	4618      	mov	r0, r3
 8002c06:	3708      	adds	r7, #8
 8002c08:	46bd      	mov	sp, r7
 8002c0a:	bd80      	pop	{r7, pc}
 8002c0c:	08020d2c 	.word	0x08020d2c

08002c10 <_ZN6tflite22MicroMutableOpResolverILj8EE7AddReluEv>:
  TfLiteStatus AddReduceMax() {
    return AddBuiltin(BuiltinOperator_REDUCE_MAX, Register_REDUCE_MAX(),
                      ParseReducer);
  }

  TfLiteStatus AddRelu() {
 8002c10:	b580      	push	{r7, lr}
 8002c12:	b08a      	sub	sp, #40	; 0x28
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
    return AddBuiltin(BuiltinOperator_RELU, tflite::Register_RELU(), ParseRelu);
 8002c18:	f107 030c 	add.w	r3, r7, #12
 8002c1c:	4618      	mov	r0, r3
 8002c1e:	f004 fdd3 	bl	80077c8 <_ZN6tflite13Register_RELUEv>
 8002c22:	f107 020c 	add.w	r2, r7, #12
 8002c26:	4b05      	ldr	r3, [pc, #20]	; (8002c3c <_ZN6tflite22MicroMutableOpResolverILj8EE7AddReluEv+0x2c>)
 8002c28:	2113      	movs	r1, #19
 8002c2a:	6878      	ldr	r0, [r7, #4]
 8002c2c:	f000 f8b0 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002c30:	4603      	mov	r3, r0
  }
 8002c32:	4618      	mov	r0, r3
 8002c34:	3728      	adds	r7, #40	; 0x28
 8002c36:	46bd      	mov	sp, r7
 8002c38:	bd80      	pop	{r7, pc}
 8002c3a:	bf00      	nop
 8002c3c:	08007495 	.word	0x08007495

08002c40 <_ZN6tflite22MicroMutableOpResolverILj8EE9AddConv2DERK16TFLMRegistration>:
  TfLiteStatus AddConv2D(
 8002c40:	b580      	push	{r7, lr}
 8002c42:	b082      	sub	sp, #8
 8002c44:	af00      	add	r7, sp, #0
 8002c46:	6078      	str	r0, [r7, #4]
 8002c48:	6039      	str	r1, [r7, #0]
    return AddBuiltin(BuiltinOperator_CONV_2D, registration, ParseConv2D);
 8002c4a:	4b05      	ldr	r3, [pc, #20]	; (8002c60 <_ZN6tflite22MicroMutableOpResolverILj8EE9AddConv2DERK16TFLMRegistration+0x20>)
 8002c4c:	683a      	ldr	r2, [r7, #0]
 8002c4e:	2103      	movs	r1, #3
 8002c50:	6878      	ldr	r0, [r7, #4]
 8002c52:	f000 f89d 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002c56:	4603      	mov	r3, r0
  }
 8002c58:	4618      	mov	r0, r3
 8002c5a:	3708      	adds	r7, #8
 8002c5c:	46bd      	mov	sp, r7
 8002c5e:	bd80      	pop	{r7, pc}
 8002c60:	080070b9 	.word	0x080070b9

08002c64 <_ZN6tflite22MicroMutableOpResolverILj8EE12AddMaxPool2DERK16TFLMRegistration>:
  TfLiteStatus AddMaxPool2D(
 8002c64:	b580      	push	{r7, lr}
 8002c66:	b082      	sub	sp, #8
 8002c68:	af00      	add	r7, sp, #0
 8002c6a:	6078      	str	r0, [r7, #4]
 8002c6c:	6039      	str	r1, [r7, #0]
    return AddBuiltin(BuiltinOperator_MAX_POOL_2D, registration, ParsePool);
 8002c6e:	4b05      	ldr	r3, [pc, #20]	; (8002c84 <_ZN6tflite22MicroMutableOpResolverILj8EE12AddMaxPool2DERK16TFLMRegistration+0x20>)
 8002c70:	683a      	ldr	r2, [r7, #0]
 8002c72:	2111      	movs	r1, #17
 8002c74:	6878      	ldr	r0, [r7, #4]
 8002c76:	f000 f88b 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002c7a:	4603      	mov	r3, r0
  }
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	3708      	adds	r7, #8
 8002c80:	46bd      	mov	sp, r7
 8002c82:	bd80      	pop	{r7, pc}
 8002c84:	08007375 	.word	0x08007375

08002c88 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddReshapeEv>:
  TfLiteStatus AddRelu6() {
    return AddBuiltin(BuiltinOperator_RELU6, tflite::Register_RELU6(),
                      ParseRelu6);
  }

  TfLiteStatus AddReshape() {
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	b08a      	sub	sp, #40	; 0x28
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	6078      	str	r0, [r7, #4]
    return AddBuiltin(BuiltinOperator_RESHAPE, Register_RESHAPE(),
 8002c90:	f107 030c 	add.w	r3, r7, #12
 8002c94:	4618      	mov	r0, r3
 8002c96:	f008 f9c9 	bl	800b02c <_ZN6tflite16Register_RESHAPEEv>
 8002c9a:	f107 020c 	add.w	r2, r7, #12
 8002c9e:	4b05      	ldr	r3, [pc, #20]	; (8002cb4 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddReshapeEv+0x2c>)
 8002ca0:	2116      	movs	r1, #22
 8002ca2:	6878      	ldr	r0, [r7, #4]
 8002ca4:	f000 f874 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002ca8:	4603      	mov	r3, r0
                      ParseReshape);
  }
 8002caa:	4618      	mov	r0, r3
 8002cac:	3728      	adds	r7, #40	; 0x28
 8002cae:	46bd      	mov	sp, r7
 8002cb0:	bd80      	pop	{r7, pc}
 8002cb2:	bf00      	nop
 8002cb4:	080074c1 	.word	0x080074c1

08002cb8 <_ZN6tflite22MicroMutableOpResolverILj8EE17AddFullyConnectedERK16TFLMRegistration>:
  TfLiteStatus AddFullyConnected(
 8002cb8:	b580      	push	{r7, lr}
 8002cba:	b082      	sub	sp, #8
 8002cbc:	af00      	add	r7, sp, #0
 8002cbe:	6078      	str	r0, [r7, #4]
 8002cc0:	6039      	str	r1, [r7, #0]
    return AddBuiltin(BuiltinOperator_FULLY_CONNECTED, registration,
 8002cc2:	4b05      	ldr	r3, [pc, #20]	; (8002cd8 <_ZN6tflite22MicroMutableOpResolverILj8EE17AddFullyConnectedERK16TFLMRegistration+0x20>)
 8002cc4:	683a      	ldr	r2, [r7, #0]
 8002cc6:	2109      	movs	r1, #9
 8002cc8:	6878      	ldr	r0, [r7, #4]
 8002cca:	f000 f861 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002cce:	4603      	mov	r3, r0
  }
 8002cd0:	4618      	mov	r0, r3
 8002cd2:	3708      	adds	r7, #8
 8002cd4:	46bd      	mov	sp, r7
 8002cd6:	bd80      	pop	{r7, pc}
 8002cd8:	0800721d 	.word	0x0800721d

08002cdc <_ZN6tflite22MicroMutableOpResolverILj8EE10AddSoftmaxERK16TFLMRegistration>:

  TfLiteStatus AddSlice() {
    return AddBuiltin(BuiltinOperator_SLICE, Register_SLICE(), ParseSlice);
  }

  TfLiteStatus AddSoftmax(
 8002cdc:	b580      	push	{r7, lr}
 8002cde:	b082      	sub	sp, #8
 8002ce0:	af00      	add	r7, sp, #0
 8002ce2:	6078      	str	r0, [r7, #4]
 8002ce4:	6039      	str	r1, [r7, #0]
      const TFLMRegistration& registration = Register_SOFTMAX()) {
    return AddBuiltin(BuiltinOperator_SOFTMAX, registration, ParseSoftmax);
 8002ce6:	4b05      	ldr	r3, [pc, #20]	; (8002cfc <_ZN6tflite22MicroMutableOpResolverILj8EE10AddSoftmaxERK16TFLMRegistration+0x20>)
 8002ce8:	683a      	ldr	r2, [r7, #0]
 8002cea:	2119      	movs	r1, #25
 8002cec:	6878      	ldr	r0, [r7, #4]
 8002cee:	f000 f84f 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002cf2:	4603      	mov	r3, r0
  }
 8002cf4:	4618      	mov	r0, r3
 8002cf6:	3708      	adds	r7, #8
 8002cf8:	46bd      	mov	sp, r7
 8002cfa:	bd80      	pop	{r7, pc}
 8002cfc:	08007641 	.word	0x08007641

08002d00 <_ZN6tflite22MicroMutableOpResolverILj8EE17AddResizeBilinearEv>:
  TfLiteStatus AddResizeBilinear() {
 8002d00:	b580      	push	{r7, lr}
 8002d02:	b08a      	sub	sp, #40	; 0x28
 8002d04:	af00      	add	r7, sp, #0
 8002d06:	6078      	str	r0, [r7, #4]
                      Register_RESIZE_BILINEAR(), ParseResizeBilinear);
 8002d08:	f107 030c 	add.w	r3, r7, #12
 8002d0c:	4618      	mov	r0, r3
 8002d0e:	f008 fc0d 	bl	800b52c <_ZN6tflite24Register_RESIZE_BILINEAREv>
    return AddBuiltin(BuiltinOperator_RESIZE_BILINEAR,
 8002d12:	f107 020c 	add.w	r2, r7, #12
 8002d16:	4b05      	ldr	r3, [pc, #20]	; (8002d2c <_ZN6tflite22MicroMutableOpResolverILj8EE17AddResizeBilinearEv+0x2c>)
 8002d18:	2117      	movs	r1, #23
 8002d1a:	6878      	ldr	r0, [r7, #4]
 8002d1c:	f000 f838 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002d20:	4603      	mov	r3, r0
  }
 8002d22:	4618      	mov	r0, r3
 8002d24:	3728      	adds	r7, #40	; 0x28
 8002d26:	46bd      	mov	sp, r7
 8002d28:	bd80      	pop	{r7, pc}
 8002d2a:	bf00      	nop
 8002d2c:	08007595 	.word	0x08007595

08002d30 <_ZN6tflite22MicroMutableOpResolverILj8EE11AddQuantizeEv>:
  TfLiteStatus AddQuantize() {
 8002d30:	b580      	push	{r7, lr}
 8002d32:	b08a      	sub	sp, #40	; 0x28
 8002d34:	af00      	add	r7, sp, #0
 8002d36:	6078      	str	r0, [r7, #4]
    return AddBuiltin(BuiltinOperator_QUANTIZE, Register_QUANTIZE(),
 8002d38:	f107 030c 	add.w	r3, r7, #12
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	f007 fce7 	bl	800a710 <_ZN6tflite17Register_QUANTIZEEv>
 8002d42:	f107 020c 	add.w	r2, r7, #12
 8002d46:	4b05      	ldr	r3, [pc, #20]	; (8002d5c <_ZN6tflite22MicroMutableOpResolverILj8EE11AddQuantizeEv+0x2c>)
 8002d48:	2172      	movs	r1, #114	; 0x72
 8002d4a:	6878      	ldr	r0, [r7, #4]
 8002d4c:	f000 f820 	bl	8002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>
 8002d50:	4603      	mov	r3, r0
  }
 8002d52:	4618      	mov	r0, r3
 8002d54:	3728      	adds	r7, #40	; 0x28
 8002d56:	46bd      	mov	sp, r7
 8002d58:	bd80      	pop	{r7, pc}
 8002d5a:	bf00      	nop
 8002d5c:	08007469 	.word	0x08007469

08002d60 <_ZN11flatbuffers14GetMutableRootIN6tflite5ModelEEEPT_Pv>:
template<typename T> T *GetMutableRoot(void *buf) {
 8002d60:	b580      	push	{r7, lr}
 8002d62:	b082      	sub	sp, #8
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	6078      	str	r0, [r7, #4]
  if (!buf) return nullptr;
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d101      	bne.n	8002d72 <_ZN11flatbuffers14GetMutableRootIN6tflite5ModelEEEPT_Pv+0x12>
 8002d6e:	2300      	movs	r3, #0
 8002d70:	e009      	b.n	8002d86 <_ZN11flatbuffers14GetMutableRootIN6tflite5ModelEEEPT_Pv+0x26>
  EndianCheck();
 8002d72:	f7ff f919 	bl	8001fa8 <_ZN11flatbuffers11EndianCheckEv>
      EndianScalar(*reinterpret_cast<uoffset_t *>(buf)));
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	4618      	mov	r0, r3
 8002d7c:	f7ff ff07 	bl	8002b8e <_ZN11flatbuffers12EndianScalarImEET_S1_>
 8002d80:	4602      	mov	r2, r0
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	4413      	add	r3, r2
}
 8002d86:	4618      	mov	r0, r3
 8002d88:	3708      	adds	r7, #8
 8002d8a:	46bd      	mov	sp, r7
 8002d8c:	bd80      	pop	{r7, pc}
	...

08002d90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE>:
  }

  unsigned int GetRegistrationLength() { return registrations_len_; }

 private:
  TfLiteStatus AddBuiltin(tflite::BuiltinOperator op,
 8002d90:	b5b0      	push	{r4, r5, r7, lr}
 8002d92:	b084      	sub	sp, #16
 8002d94:	af00      	add	r7, sp, #0
 8002d96:	60f8      	str	r0, [r7, #12]
 8002d98:	60b9      	str	r1, [r7, #8]
 8002d9a:	607a      	str	r2, [r7, #4]
 8002d9c:	603b      	str	r3, [r7, #0]
                          const TFLMRegistration& registration,
                          TfLiteBridgeBuiltinParseFunction parser) {
    if (op == BuiltinOperator_CUSTOM) {
 8002d9e:	68bb      	ldr	r3, [r7, #8]
 8002da0:	2b20      	cmp	r3, #32
 8002da2:	d107      	bne.n	8002db4 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0x24>
      MicroPrintf("Invalid parameter BuiltinOperator_CUSTOM to the ");
 8002da4:	4837      	ldr	r0, [pc, #220]	; (8002e84 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0xf4>)
 8002da6:	f00b fa33 	bl	800e210 <_Z11MicroPrintfPKcz>
      MicroPrintf("AddBuiltin function.");
 8002daa:	4837      	ldr	r0, [pc, #220]	; (8002e88 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0xf8>)
 8002dac:	f00b fa30 	bl	800e210 <_Z11MicroPrintfPKcz>
      return kTfLiteError;
 8002db0:	2301      	movs	r3, #1
 8002db2:	e062      	b.n	8002e7a <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0xea>
    }

    if (FindOp(op) != nullptr) {
 8002db4:	68fb      	ldr	r3, [r7, #12]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	68b9      	ldr	r1, [r7, #8]
 8002dbc:	68f8      	ldr	r0, [r7, #12]
 8002dbe:	4798      	blx	r3
 8002dc0:	4603      	mov	r3, r0
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	bf14      	ite	ne
 8002dc6:	2301      	movne	r3, #1
 8002dc8:	2300      	moveq	r3, #0
 8002dca:	b2db      	uxtb	r3, r3
 8002dcc:	2b00      	cmp	r3, #0
 8002dce:	d008      	beq.n	8002de2 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0x52>
      MicroPrintf("Calling AddBuiltin with the same op more than ");
 8002dd0:	482e      	ldr	r0, [pc, #184]	; (8002e8c <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0xfc>)
 8002dd2:	f00b fa1d 	bl	800e210 <_Z11MicroPrintfPKcz>
      MicroPrintf("once is not supported (Op: #%d).", op);
 8002dd6:	68b9      	ldr	r1, [r7, #8]
 8002dd8:	482d      	ldr	r0, [pc, #180]	; (8002e90 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0x100>)
 8002dda:	f00b fa19 	bl	800e210 <_Z11MicroPrintfPKcz>
      return kTfLiteError;
 8002dde:	2301      	movs	r3, #1
 8002de0:	e04b      	b.n	8002e7a <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0xea>
    }

    if (registrations_len_ >= tOpCount) {
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8002de8:	2b07      	cmp	r3, #7
 8002dea:	d909      	bls.n	8002e00 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0x70>
      MicroPrintf("Couldn't register builtin op #%d, resolver size ", op);
 8002dec:	68b9      	ldr	r1, [r7, #8]
 8002dee:	4829      	ldr	r0, [pc, #164]	; (8002e94 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0x104>)
 8002df0:	f00b fa0e 	bl	800e210 <_Z11MicroPrintfPKcz>
      MicroPrintf("is too small (%d).", tOpCount);
 8002df4:	2108      	movs	r1, #8
 8002df6:	4828      	ldr	r0, [pc, #160]	; (8002e98 <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0x108>)
 8002df8:	f00b fa0a 	bl	800e210 <_Z11MicroPrintfPKcz>
      return kTfLiteError;
 8002dfc:	2301      	movs	r3, #1
 8002dfe:	e03c      	b.n	8002e7a <_ZN6tflite22MicroMutableOpResolverILj8EE10AddBuiltinENS_15BuiltinOperatorERK16TFLMRegistrationPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvE+0xea>
    }

    registrations_[registrations_len_] = registration;
 8002e00:	68fb      	ldr	r3, [r7, #12]
 8002e02:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8002e06:	68f9      	ldr	r1, [r7, #12]
 8002e08:	4613      	mov	r3, r2
 8002e0a:	00db      	lsls	r3, r3, #3
 8002e0c:	1a9b      	subs	r3, r3, r2
 8002e0e:	009b      	lsls	r3, r3, #2
 8002e10:	440b      	add	r3, r1
 8002e12:	687a      	ldr	r2, [r7, #4]
 8002e14:	1d1c      	adds	r4, r3, #4
 8002e16:	4615      	mov	r5, r2
 8002e18:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002e1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002e1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002e20:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    // Strictly speaking, the builtin_code is not necessary for TFLM but filling
    // it in regardless.
    registrations_[registrations_len_].builtin_code = op;
 8002e24:	68fb      	ldr	r3, [r7, #12]
 8002e26:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
 8002e2a:	68f9      	ldr	r1, [r7, #12]
 8002e2c:	4613      	mov	r3, r2
 8002e2e:	00db      	lsls	r3, r3, #3
 8002e30:	1a9b      	subs	r3, r3, r2
 8002e32:	009b      	lsls	r3, r3, #2
 8002e34:	440b      	add	r3, r1
 8002e36:	3318      	adds	r3, #24
 8002e38:	68ba      	ldr	r2, [r7, #8]
 8002e3a:	601a      	str	r2, [r3, #0]
    registrations_len_++;
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8002e42:	1c5a      	adds	r2, r3, #1
 8002e44:	68fb      	ldr	r3, [r7, #12]
 8002e46:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4

    builtin_codes_[num_buitin_ops_] = op;
 8002e4a:	68fb      	ldr	r3, [r7, #12]
 8002e4c:	f8d3 2128 	ldr.w	r2, [r3, #296]	; 0x128
 8002e50:	68fb      	ldr	r3, [r7, #12]
 8002e52:	323a      	adds	r2, #58	; 0x3a
 8002e54:	68b9      	ldr	r1, [r7, #8]
 8002e56:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    builtin_parsers_[num_buitin_ops_] = parser;
 8002e5a:	68fb      	ldr	r3, [r7, #12]
 8002e5c:	f8d3 2128 	ldr.w	r2, [r3, #296]	; 0x128
 8002e60:	68fb      	ldr	r3, [r7, #12]
 8002e62:	3242      	adds	r2, #66	; 0x42
 8002e64:	6839      	ldr	r1, [r7, #0]
 8002e66:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    num_buitin_ops_++;
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	f8d3 3128 	ldr.w	r3, [r3, #296]	; 0x128
 8002e70:	1c5a      	adds	r2, r3, #1
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	f8c3 2128 	str.w	r2, [r3, #296]	; 0x128

    return kTfLiteOk;
 8002e78:	2300      	movs	r3, #0
  }
 8002e7a:	4618      	mov	r0, r3
 8002e7c:	3710      	adds	r7, #16
 8002e7e:	46bd      	mov	sp, r7
 8002e80:	bdb0      	pop	{r4, r5, r7, pc}
 8002e82:	bf00      	nop
 8002e84:	080208fc 	.word	0x080208fc
 8002e88:	08020930 	.word	0x08020930
 8002e8c:	08020948 	.word	0x08020948
 8002e90:	08020978 	.word	0x08020978
 8002e94:	0802099c 	.word	0x0802099c
 8002e98:	080209d0 	.word	0x080209d0

08002e9c <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE>:
  const TFLMRegistration* FindOp(tflite::BuiltinOperator op) const override {
 8002e9c:	b480      	push	{r7}
 8002e9e:	b085      	sub	sp, #20
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
 8002ea4:	6039      	str	r1, [r7, #0]
    if (op == BuiltinOperator_CUSTOM) return nullptr;
 8002ea6:	683b      	ldr	r3, [r7, #0]
 8002ea8:	2b20      	cmp	r3, #32
 8002eaa:	d101      	bne.n	8002eb0 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE+0x14>
 8002eac:	2300      	movs	r3, #0
 8002eae:	e01c      	b.n	8002eea <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE+0x4e>
    for (unsigned int i = 0; i < registrations_len_; ++i) {
 8002eb0:	2300      	movs	r3, #0
 8002eb2:	60fb      	str	r3, [r7, #12]
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8002eba:	68fa      	ldr	r2, [r7, #12]
 8002ebc:	429a      	cmp	r2, r3
 8002ebe:	d213      	bcs.n	8002ee8 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE+0x4c>
      const TFLMRegistration& registration = registrations_[i];
 8002ec0:	68fa      	ldr	r2, [r7, #12]
 8002ec2:	4613      	mov	r3, r2
 8002ec4:	00db      	lsls	r3, r3, #3
 8002ec6:	1a9b      	subs	r3, r3, r2
 8002ec8:	009b      	lsls	r3, r3, #2
 8002eca:	687a      	ldr	r2, [r7, #4]
 8002ecc:	4413      	add	r3, r2
 8002ece:	3304      	adds	r3, #4
 8002ed0:	60bb      	str	r3, [r7, #8]
      if (registration.builtin_code == op) {
 8002ed2:	68bb      	ldr	r3, [r7, #8]
 8002ed4:	695b      	ldr	r3, [r3, #20]
 8002ed6:	683a      	ldr	r2, [r7, #0]
 8002ed8:	429a      	cmp	r2, r3
 8002eda:	d101      	bne.n	8002ee0 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE+0x44>
        return &registration;
 8002edc:	68bb      	ldr	r3, [r7, #8]
 8002ede:	e004      	b.n	8002eea <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE+0x4e>
    for (unsigned int i = 0; i < registrations_len_; ++i) {
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	3301      	adds	r3, #1
 8002ee4:	60fb      	str	r3, [r7, #12]
 8002ee6:	e7e5      	b.n	8002eb4 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpENS_15BuiltinOperatorE+0x18>
    return nullptr;
 8002ee8:	2300      	movs	r3, #0
  }
 8002eea:	4618      	mov	r0, r3
 8002eec:	3714      	adds	r7, #20
 8002eee:	46bd      	mov	sp, r7
 8002ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ef4:	4770      	bx	lr
	...

08002ef8 <_ZN6tflite22MicroMutableOpResolverILj8EED1Ev>:
class MicroMutableOpResolver : public MicroOpResolver {
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	b082      	sub	sp, #8
 8002efc:	af00      	add	r7, sp, #0
 8002efe:	6078      	str	r0, [r7, #4]
 8002f00:	4a05      	ldr	r2, [pc, #20]	; (8002f18 <_ZN6tflite22MicroMutableOpResolverILj8EED1Ev+0x20>)
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	601a      	str	r2, [r3, #0]
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	4618      	mov	r0, r3
 8002f0a:	f7ff f873 	bl	8001ff4 <_ZN6tflite15MicroOpResolverD1Ev>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	4618      	mov	r0, r3
 8002f12:	3708      	adds	r7, #8
 8002f14:	46bd      	mov	sp, r7
 8002f16:	bd80      	pop	{r7, pc}
 8002f18:	08020d2c 	.word	0x08020d2c

08002f1c <_ZN6tflite22MicroMutableOpResolverILj8EED0Ev>:
 8002f1c:	b580      	push	{r7, lr}
 8002f1e:	b082      	sub	sp, #8
 8002f20:	af00      	add	r7, sp, #0
 8002f22:	6078      	str	r0, [r7, #4]
 8002f24:	6878      	ldr	r0, [r7, #4]
 8002f26:	f7ff ffe7 	bl	8002ef8 <_ZN6tflite22MicroMutableOpResolverILj8EED1Ev>
 8002f2a:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002f2e:	6878      	ldr	r0, [r7, #4]
 8002f30:	f017 fe9a 	bl	801ac68 <_ZdlPvj>
 8002f34:	687b      	ldr	r3, [r7, #4]
 8002f36:	4618      	mov	r0, r3
 8002f38:	3708      	adds	r7, #8
 8002f3a:	46bd      	mov	sp, r7
 8002f3c:	bd80      	pop	{r7, pc}

08002f3e <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpEPKc>:
  const TFLMRegistration* FindOp(const char* op) const override {
 8002f3e:	b580      	push	{r7, lr}
 8002f40:	b084      	sub	sp, #16
 8002f42:	af00      	add	r7, sp, #0
 8002f44:	6078      	str	r0, [r7, #4]
 8002f46:	6039      	str	r1, [r7, #0]
    for (unsigned int i = 0; i < registrations_len_; ++i) {
 8002f48:	2300      	movs	r3, #0
 8002f4a:	60fb      	str	r3, [r7, #12]
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8002f52:	68fa      	ldr	r2, [r7, #12]
 8002f54:	429a      	cmp	r2, r3
 8002f56:	d21b      	bcs.n	8002f90 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpEPKc+0x52>
      const TFLMRegistration& registration = registrations_[i];
 8002f58:	68fa      	ldr	r2, [r7, #12]
 8002f5a:	4613      	mov	r3, r2
 8002f5c:	00db      	lsls	r3, r3, #3
 8002f5e:	1a9b      	subs	r3, r3, r2
 8002f60:	009b      	lsls	r3, r3, #2
 8002f62:	687a      	ldr	r2, [r7, #4]
 8002f64:	4413      	add	r3, r2
 8002f66:	3304      	adds	r3, #4
 8002f68:	60bb      	str	r3, [r7, #8]
      if ((registration.builtin_code == BuiltinOperator_CUSTOM) &&
 8002f6a:	68bb      	ldr	r3, [r7, #8]
 8002f6c:	695b      	ldr	r3, [r3, #20]
 8002f6e:	2b20      	cmp	r3, #32
 8002f70:	d10a      	bne.n	8002f88 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpEPKc+0x4a>
          (strcmp(registration.custom_name, op) == 0)) {
 8002f72:	68bb      	ldr	r3, [r7, #8]
 8002f74:	699b      	ldr	r3, [r3, #24]
 8002f76:	6839      	ldr	r1, [r7, #0]
 8002f78:	4618      	mov	r0, r3
 8002f7a:	f7fd f979 	bl	8000270 <strcmp>
 8002f7e:	4603      	mov	r3, r0
      if ((registration.builtin_code == BuiltinOperator_CUSTOM) &&
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d101      	bne.n	8002f88 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpEPKc+0x4a>
        return &registration;
 8002f84:	68bb      	ldr	r3, [r7, #8]
 8002f86:	e004      	b.n	8002f92 <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpEPKc+0x54>
    for (unsigned int i = 0; i < registrations_len_; ++i) {
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	3301      	adds	r3, #1
 8002f8c:	60fb      	str	r3, [r7, #12]
 8002f8e:	e7dd      	b.n	8002f4c <_ZNK6tflite22MicroMutableOpResolverILj8EE6FindOpEPKc+0xe>
    return nullptr;
 8002f90:	2300      	movs	r3, #0
  }
 8002f92:	4618      	mov	r0, r3
 8002f94:	3710      	adds	r7, #16
 8002f96:	46bd      	mov	sp, r7
 8002f98:	bd80      	pop	{r7, pc}

08002f9a <_ZNK6tflite22MicroMutableOpResolverILj8EE15GetOpDataParserENS_15BuiltinOperatorE>:
  TfLiteBridgeBuiltinParseFunction GetOpDataParser(
 8002f9a:	b580      	push	{r7, lr}
 8002f9c:	b084      	sub	sp, #16
 8002f9e:	af00      	add	r7, sp, #0
 8002fa0:	6078      	str	r0, [r7, #4]
 8002fa2:	6039      	str	r1, [r7, #0]
    TFLITE_DCHECK(num_buitin_ops_ <= tOpCount);
 8002fa4:	687b      	ldr	r3, [r7, #4]
 8002fa6:	f8d3 3128 	ldr.w	r3, [r3, #296]	; 0x128
 8002faa:	2b08      	cmp	r3, #8
 8002fac:	d901      	bls.n	8002fb2 <_ZNK6tflite22MicroMutableOpResolverILj8EE15GetOpDataParserENS_15BuiltinOperatorE+0x18>
 8002fae:	f019 fcff 	bl	801c9b0 <abort>
    for (unsigned int i = 0; i < num_buitin_ops_; ++i) {
 8002fb2:	2300      	movs	r3, #0
 8002fb4:	60fb      	str	r3, [r7, #12]
 8002fb6:	687b      	ldr	r3, [r7, #4]
 8002fb8:	f8d3 3128 	ldr.w	r3, [r3, #296]	; 0x128
 8002fbc:	68fa      	ldr	r2, [r7, #12]
 8002fbe:	429a      	cmp	r2, r3
 8002fc0:	d211      	bcs.n	8002fe6 <_ZNK6tflite22MicroMutableOpResolverILj8EE15GetOpDataParserENS_15BuiltinOperatorE+0x4c>
      if (builtin_codes_[i] == op) return builtin_parsers_[i];
 8002fc2:	687b      	ldr	r3, [r7, #4]
 8002fc4:	68fa      	ldr	r2, [r7, #12]
 8002fc6:	323a      	adds	r2, #58	; 0x3a
 8002fc8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002fcc:	683a      	ldr	r2, [r7, #0]
 8002fce:	429a      	cmp	r2, r3
 8002fd0:	d105      	bne.n	8002fde <_ZNK6tflite22MicroMutableOpResolverILj8EE15GetOpDataParserENS_15BuiltinOperatorE+0x44>
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	68fa      	ldr	r2, [r7, #12]
 8002fd6:	3242      	adds	r2, #66	; 0x42
 8002fd8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002fdc:	e004      	b.n	8002fe8 <_ZNK6tflite22MicroMutableOpResolverILj8EE15GetOpDataParserENS_15BuiltinOperatorE+0x4e>
    for (unsigned int i = 0; i < num_buitin_ops_; ++i) {
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	3301      	adds	r3, #1
 8002fe2:	60fb      	str	r3, [r7, #12]
 8002fe4:	e7e7      	b.n	8002fb6 <_ZNK6tflite22MicroMutableOpResolverILj8EE15GetOpDataParserENS_15BuiltinOperatorE+0x1c>
    return nullptr;
 8002fe6:	2300      	movs	r3, #0
  }
 8002fe8:	4618      	mov	r0, r3
 8002fea:	3710      	adds	r7, #16
 8002fec:	46bd      	mov	sp, r7
 8002fee:	bd80      	pop	{r7, pc}

08002ff0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002ff0:	b480      	push	{r7}
 8002ff2:	b083      	sub	sp, #12
 8002ff4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002ff6:	4b0f      	ldr	r3, [pc, #60]	; (8003034 <HAL_MspInit+0x44>)
 8002ff8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002ffa:	4a0e      	ldr	r2, [pc, #56]	; (8003034 <HAL_MspInit+0x44>)
 8002ffc:	f043 0301 	orr.w	r3, r3, #1
 8003000:	6613      	str	r3, [r2, #96]	; 0x60
 8003002:	4b0c      	ldr	r3, [pc, #48]	; (8003034 <HAL_MspInit+0x44>)
 8003004:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003006:	f003 0301 	and.w	r3, r3, #1
 800300a:	607b      	str	r3, [r7, #4]
 800300c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800300e:	4b09      	ldr	r3, [pc, #36]	; (8003034 <HAL_MspInit+0x44>)
 8003010:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003012:	4a08      	ldr	r2, [pc, #32]	; (8003034 <HAL_MspInit+0x44>)
 8003014:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003018:	6593      	str	r3, [r2, #88]	; 0x58
 800301a:	4b06      	ldr	r3, [pc, #24]	; (8003034 <HAL_MspInit+0x44>)
 800301c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800301e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003022:	603b      	str	r3, [r7, #0]
 8003024:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003026:	bf00      	nop
 8003028:	370c      	adds	r7, #12
 800302a:	46bd      	mov	sp, r7
 800302c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003030:	4770      	bx	lr
 8003032:	bf00      	nop
 8003034:	40021000 	.word	0x40021000

08003038 <HAL_DFSDM_ChannelMspInit>:
* This function configures the hardware resources used in this example
* @param hdfsdm_channel: DFSDM_Channel handle pointer
* @retval None
*/
void HAL_DFSDM_ChannelMspInit(DFSDM_Channel_HandleTypeDef* hdfsdm_channel)
{
 8003038:	b580      	push	{r7, lr}
 800303a:	b0ac      	sub	sp, #176	; 0xb0
 800303c:	af00      	add	r7, sp, #0
 800303e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003040:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8003044:	2200      	movs	r2, #0
 8003046:	601a      	str	r2, [r3, #0]
 8003048:	605a      	str	r2, [r3, #4]
 800304a:	609a      	str	r2, [r3, #8]
 800304c:	60da      	str	r2, [r3, #12]
 800304e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8003050:	f107 0314 	add.w	r3, r7, #20
 8003054:	2288      	movs	r2, #136	; 0x88
 8003056:	2100      	movs	r1, #0
 8003058:	4618      	mov	r0, r3
 800305a:	f019 fd43 	bl	801cae4 <memset>
  if(DFSDM1_Init == 0)
 800305e:	4b25      	ldr	r3, [pc, #148]	; (80030f4 <HAL_DFSDM_ChannelMspInit+0xbc>)
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	2b00      	cmp	r3, #0
 8003064:	d142      	bne.n	80030ec <HAL_DFSDM_ChannelMspInit+0xb4>

  /* USER CODE END DFSDM1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_DFSDM1;
 8003066:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800306a:	617b      	str	r3, [r7, #20]
    PeriphClkInit.Dfsdm1ClockSelection = RCC_DFSDM1CLKSOURCE_PCLK;
 800306c:	2300      	movs	r3, #0
 800306e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003072:	f107 0314 	add.w	r3, r7, #20
 8003076:	4618      	mov	r0, r3
 8003078:	f002 f9ea 	bl	8005450 <HAL_RCCEx_PeriphCLKConfig>
 800307c:	4603      	mov	r3, r0
 800307e:	2b00      	cmp	r3, #0
 8003080:	d001      	beq.n	8003086 <HAL_DFSDM_ChannelMspInit+0x4e>
    {
      Error_Handler();
 8003082:	f7ff fd7f 	bl	8002b84 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_DFSDM1_CLK_ENABLE();
 8003086:	4b1c      	ldr	r3, [pc, #112]	; (80030f8 <HAL_DFSDM_ChannelMspInit+0xc0>)
 8003088:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800308a:	4a1b      	ldr	r2, [pc, #108]	; (80030f8 <HAL_DFSDM_ChannelMspInit+0xc0>)
 800308c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8003090:	6613      	str	r3, [r2, #96]	; 0x60
 8003092:	4b19      	ldr	r3, [pc, #100]	; (80030f8 <HAL_DFSDM_ChannelMspInit+0xc0>)
 8003094:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003096:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800309a:	613b      	str	r3, [r7, #16]
 800309c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800309e:	4b16      	ldr	r3, [pc, #88]	; (80030f8 <HAL_DFSDM_ChannelMspInit+0xc0>)
 80030a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80030a2:	4a15      	ldr	r2, [pc, #84]	; (80030f8 <HAL_DFSDM_ChannelMspInit+0xc0>)
 80030a4:	f043 0310 	orr.w	r3, r3, #16
 80030a8:	64d3      	str	r3, [r2, #76]	; 0x4c
 80030aa:	4b13      	ldr	r3, [pc, #76]	; (80030f8 <HAL_DFSDM_ChannelMspInit+0xc0>)
 80030ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80030ae:	f003 0310 	and.w	r3, r3, #16
 80030b2:	60fb      	str	r3, [r7, #12]
 80030b4:	68fb      	ldr	r3, [r7, #12]
    /**DFSDM1 GPIO Configuration
    PE7     ------> DFSDM1_DATIN2
    PE9     ------> DFSDM1_CKOUT
    */
    GPIO_InitStruct.Pin = DFSDM1_DATIN2_Pin|DFSDM1_CKOUT_Pin;
 80030b6:	f44f 7320 	mov.w	r3, #640	; 0x280
 80030ba:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80030be:	2302      	movs	r3, #2
 80030c0:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80030c4:	2300      	movs	r3, #0
 80030c6:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80030ca:	2300      	movs	r3, #0
 80030cc:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF6_DFSDM1;
 80030d0:	2306      	movs	r3, #6
 80030d2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80030d6:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80030da:	4619      	mov	r1, r3
 80030dc:	4807      	ldr	r0, [pc, #28]	; (80030fc <HAL_DFSDM_ChannelMspInit+0xc4>)
 80030de:	f000 fe23 	bl	8003d28 <HAL_GPIO_Init>

  /* USER CODE BEGIN DFSDM1_MspInit 1 */

  /* USER CODE END DFSDM1_MspInit 1 */
  DFSDM1_Init++;
 80030e2:	4b04      	ldr	r3, [pc, #16]	; (80030f4 <HAL_DFSDM_ChannelMspInit+0xbc>)
 80030e4:	681b      	ldr	r3, [r3, #0]
 80030e6:	3301      	adds	r3, #1
 80030e8:	4a02      	ldr	r2, [pc, #8]	; (80030f4 <HAL_DFSDM_ChannelMspInit+0xbc>)
 80030ea:	6013      	str	r3, [r2, #0]
  }

}
 80030ec:	bf00      	nop
 80030ee:	37b0      	adds	r7, #176	; 0xb0
 80030f0:	46bd      	mov	sp, r7
 80030f2:	bd80      	pop	{r7, pc}
 80030f4:	20011248 	.word	0x20011248
 80030f8:	40021000 	.word	0x40021000
 80030fc:	48001000 	.word	0x48001000

08003100 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8003100:	b580      	push	{r7, lr}
 8003102:	b0ac      	sub	sp, #176	; 0xb0
 8003104:	af00      	add	r7, sp, #0
 8003106:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003108:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 800310c:	2200      	movs	r2, #0
 800310e:	601a      	str	r2, [r3, #0]
 8003110:	605a      	str	r2, [r3, #4]
 8003112:	609a      	str	r2, [r3, #8]
 8003114:	60da      	str	r2, [r3, #12]
 8003116:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8003118:	f107 0314 	add.w	r3, r7, #20
 800311c:	2288      	movs	r2, #136	; 0x88
 800311e:	2100      	movs	r1, #0
 8003120:	4618      	mov	r0, r3
 8003122:	f019 fcdf 	bl	801cae4 <memset>
  if(hi2c->Instance==I2C2)
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	4a21      	ldr	r2, [pc, #132]	; (80031b0 <HAL_I2C_MspInit+0xb0>)
 800312c:	4293      	cmp	r3, r2
 800312e:	d13b      	bne.n	80031a8 <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8003130:	2380      	movs	r3, #128	; 0x80
 8003132:	617b      	str	r3, [r7, #20]
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8003134:	2300      	movs	r3, #0
 8003136:	66bb      	str	r3, [r7, #104]	; 0x68
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003138:	f107 0314 	add.w	r3, r7, #20
 800313c:	4618      	mov	r0, r3
 800313e:	f002 f987 	bl	8005450 <HAL_RCCEx_PeriphCLKConfig>
 8003142:	4603      	mov	r3, r0
 8003144:	2b00      	cmp	r3, #0
 8003146:	d001      	beq.n	800314c <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 8003148:	f7ff fd1c 	bl	8002b84 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800314c:	4b19      	ldr	r3, [pc, #100]	; (80031b4 <HAL_I2C_MspInit+0xb4>)
 800314e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003150:	4a18      	ldr	r2, [pc, #96]	; (80031b4 <HAL_I2C_MspInit+0xb4>)
 8003152:	f043 0302 	orr.w	r3, r3, #2
 8003156:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003158:	4b16      	ldr	r3, [pc, #88]	; (80031b4 <HAL_I2C_MspInit+0xb4>)
 800315a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800315c:	f003 0302 	and.w	r3, r3, #2
 8003160:	613b      	str	r3, [r7, #16]
 8003162:	693b      	ldr	r3, [r7, #16]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = INTERNAL_I2C2_SCL_Pin|INTERNAL_I2C2_SDA_Pin;
 8003164:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003168:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800316c:	2312      	movs	r3, #18
 800316e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003172:	2301      	movs	r3, #1
 8003174:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003178:	2303      	movs	r3, #3
 800317a:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 800317e:	2304      	movs	r3, #4
 8003180:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003184:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8003188:	4619      	mov	r1, r3
 800318a:	480b      	ldr	r0, [pc, #44]	; (80031b8 <HAL_I2C_MspInit+0xb8>)
 800318c:	f000 fdcc 	bl	8003d28 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8003190:	4b08      	ldr	r3, [pc, #32]	; (80031b4 <HAL_I2C_MspInit+0xb4>)
 8003192:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003194:	4a07      	ldr	r2, [pc, #28]	; (80031b4 <HAL_I2C_MspInit+0xb4>)
 8003196:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800319a:	6593      	str	r3, [r2, #88]	; 0x58
 800319c:	4b05      	ldr	r3, [pc, #20]	; (80031b4 <HAL_I2C_MspInit+0xb4>)
 800319e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80031a0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80031a4:	60fb      	str	r3, [r7, #12]
 80031a6:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 80031a8:	bf00      	nop
 80031aa:	37b0      	adds	r7, #176	; 0xb0
 80031ac:	46bd      	mov	sp, r7
 80031ae:	bd80      	pop	{r7, pc}
 80031b0:	40005800 	.word	0x40005800
 80031b4:	40021000 	.word	0x40021000
 80031b8:	48000400 	.word	0x48000400

080031bc <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80031bc:	b580      	push	{r7, lr}
 80031be:	b08a      	sub	sp, #40	; 0x28
 80031c0:	af00      	add	r7, sp, #0
 80031c2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80031c4:	f107 0314 	add.w	r3, r7, #20
 80031c8:	2200      	movs	r2, #0
 80031ca:	601a      	str	r2, [r3, #0]
 80031cc:	605a      	str	r2, [r3, #4]
 80031ce:	609a      	str	r2, [r3, #8]
 80031d0:	60da      	str	r2, [r3, #12]
 80031d2:	611a      	str	r2, [r3, #16]
  if(hqspi->Instance==QUADSPI)
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	4a17      	ldr	r2, [pc, #92]	; (8003238 <HAL_QSPI_MspInit+0x7c>)
 80031da:	4293      	cmp	r3, r2
 80031dc:	d128      	bne.n	8003230 <HAL_QSPI_MspInit+0x74>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 80031de:	4b17      	ldr	r3, [pc, #92]	; (800323c <HAL_QSPI_MspInit+0x80>)
 80031e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80031e2:	4a16      	ldr	r2, [pc, #88]	; (800323c <HAL_QSPI_MspInit+0x80>)
 80031e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80031e8:	6513      	str	r3, [r2, #80]	; 0x50
 80031ea:	4b14      	ldr	r3, [pc, #80]	; (800323c <HAL_QSPI_MspInit+0x80>)
 80031ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80031ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031f2:	613b      	str	r3, [r7, #16]
 80031f4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 80031f6:	4b11      	ldr	r3, [pc, #68]	; (800323c <HAL_QSPI_MspInit+0x80>)
 80031f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80031fa:	4a10      	ldr	r2, [pc, #64]	; (800323c <HAL_QSPI_MspInit+0x80>)
 80031fc:	f043 0310 	orr.w	r3, r3, #16
 8003200:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003202:	4b0e      	ldr	r3, [pc, #56]	; (800323c <HAL_QSPI_MspInit+0x80>)
 8003204:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003206:	f003 0310 	and.w	r3, r3, #16
 800320a:	60fb      	str	r3, [r7, #12]
 800320c:	68fb      	ldr	r3, [r7, #12]
    PE12     ------> QUADSPI_BK1_IO0
    PE13     ------> QUADSPI_BK1_IO1
    PE14     ------> QUADSPI_BK1_IO2
    PE15     ------> QUADSPI_BK1_IO3
    */
    GPIO_InitStruct.Pin = QUADSPI_CLK_Pin|QUADSPI_NCS_Pin|OQUADSPI_BK1_IO0_Pin|QUADSPI_BK1_IO1_Pin
 800320e:	f44f 437c 	mov.w	r3, #64512	; 0xfc00
 8003212:	617b      	str	r3, [r7, #20]
                          |QUAD_SPI_BK1_IO2_Pin|QUAD_SPI_BK1_IO3_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003214:	2302      	movs	r3, #2
 8003216:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003218:	2300      	movs	r3, #0
 800321a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800321c:	2303      	movs	r3, #3
 800321e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8003220:	230a      	movs	r3, #10
 8003222:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8003224:	f107 0314 	add.w	r3, r7, #20
 8003228:	4619      	mov	r1, r3
 800322a:	4805      	ldr	r0, [pc, #20]	; (8003240 <HAL_QSPI_MspInit+0x84>)
 800322c:	f000 fd7c 	bl	8003d28 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8003230:	bf00      	nop
 8003232:	3728      	adds	r7, #40	; 0x28
 8003234:	46bd      	mov	sp, r7
 8003236:	bd80      	pop	{r7, pc}
 8003238:	a0001000 	.word	0xa0001000
 800323c:	40021000 	.word	0x40021000
 8003240:	48001000 	.word	0x48001000

08003244 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8003244:	b580      	push	{r7, lr}
 8003246:	b08a      	sub	sp, #40	; 0x28
 8003248:	af00      	add	r7, sp, #0
 800324a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800324c:	f107 0314 	add.w	r3, r7, #20
 8003250:	2200      	movs	r2, #0
 8003252:	601a      	str	r2, [r3, #0]
 8003254:	605a      	str	r2, [r3, #4]
 8003256:	609a      	str	r2, [r3, #8]
 8003258:	60da      	str	r2, [r3, #12]
 800325a:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	681b      	ldr	r3, [r3, #0]
 8003260:	4a17      	ldr	r2, [pc, #92]	; (80032c0 <HAL_SPI_MspInit+0x7c>)
 8003262:	4293      	cmp	r3, r2
 8003264:	d128      	bne.n	80032b8 <HAL_SPI_MspInit+0x74>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8003266:	4b17      	ldr	r3, [pc, #92]	; (80032c4 <HAL_SPI_MspInit+0x80>)
 8003268:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800326a:	4a16      	ldr	r2, [pc, #88]	; (80032c4 <HAL_SPI_MspInit+0x80>)
 800326c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003270:	6593      	str	r3, [r2, #88]	; 0x58
 8003272:	4b14      	ldr	r3, [pc, #80]	; (80032c4 <HAL_SPI_MspInit+0x80>)
 8003274:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003276:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800327a:	613b      	str	r3, [r7, #16]
 800327c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800327e:	4b11      	ldr	r3, [pc, #68]	; (80032c4 <HAL_SPI_MspInit+0x80>)
 8003280:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003282:	4a10      	ldr	r2, [pc, #64]	; (80032c4 <HAL_SPI_MspInit+0x80>)
 8003284:	f043 0304 	orr.w	r3, r3, #4
 8003288:	64d3      	str	r3, [r2, #76]	; 0x4c
 800328a:	4b0e      	ldr	r3, [pc, #56]	; (80032c4 <HAL_SPI_MspInit+0x80>)
 800328c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800328e:	f003 0304 	and.w	r3, r3, #4
 8003292:	60fb      	str	r3, [r7, #12]
 8003294:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration
    PC10     ------> SPI3_SCK
    PC11     ------> SPI3_MISO
    PC12     ------> SPI3_MOSI
    */
    GPIO_InitStruct.Pin = INTERNAL_SPI3_SCK_Pin|INTERNAL_SPI3_MISO_Pin|INTERNAL_SPI3_MOSI_Pin;
 8003296:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 800329a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800329c:	2302      	movs	r3, #2
 800329e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80032a0:	2300      	movs	r3, #0
 80032a2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80032a4:	2303      	movs	r3, #3
 80032a6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 80032a8:	2306      	movs	r3, #6
 80032aa:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80032ac:	f107 0314 	add.w	r3, r7, #20
 80032b0:	4619      	mov	r1, r3
 80032b2:	4805      	ldr	r0, [pc, #20]	; (80032c8 <HAL_SPI_MspInit+0x84>)
 80032b4:	f000 fd38 	bl	8003d28 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 80032b8:	bf00      	nop
 80032ba:	3728      	adds	r7, #40	; 0x28
 80032bc:	46bd      	mov	sp, r7
 80032be:	bd80      	pop	{r7, pc}
 80032c0:	40003c00 	.word	0x40003c00
 80032c4:	40021000 	.word	0x40021000
 80032c8:	48000800 	.word	0x48000800

080032cc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80032cc:	b580      	push	{r7, lr}
 80032ce:	b0ae      	sub	sp, #184	; 0xb8
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80032d4:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80032d8:	2200      	movs	r2, #0
 80032da:	601a      	str	r2, [r3, #0]
 80032dc:	605a      	str	r2, [r3, #4]
 80032de:	609a      	str	r2, [r3, #8]
 80032e0:	60da      	str	r2, [r3, #12]
 80032e2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80032e4:	f107 031c 	add.w	r3, r7, #28
 80032e8:	2288      	movs	r2, #136	; 0x88
 80032ea:	2100      	movs	r1, #0
 80032ec:	4618      	mov	r0, r3
 80032ee:	f019 fbf9 	bl	801cae4 <memset>
  if(huart->Instance==USART1)
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	4a42      	ldr	r2, [pc, #264]	; (8003400 <HAL_UART_MspInit+0x134>)
 80032f8:	4293      	cmp	r3, r2
 80032fa:	d13b      	bne.n	8003374 <HAL_UART_MspInit+0xa8>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80032fc:	2301      	movs	r3, #1
 80032fe:	61fb      	str	r3, [r7, #28]
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8003300:	2300      	movs	r3, #0
 8003302:	657b      	str	r3, [r7, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003304:	f107 031c 	add.w	r3, r7, #28
 8003308:	4618      	mov	r0, r3
 800330a:	f002 f8a1 	bl	8005450 <HAL_RCCEx_PeriphCLKConfig>
 800330e:	4603      	mov	r3, r0
 8003310:	2b00      	cmp	r3, #0
 8003312:	d001      	beq.n	8003318 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8003314:	f7ff fc36 	bl	8002b84 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8003318:	4b3a      	ldr	r3, [pc, #232]	; (8003404 <HAL_UART_MspInit+0x138>)
 800331a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800331c:	4a39      	ldr	r2, [pc, #228]	; (8003404 <HAL_UART_MspInit+0x138>)
 800331e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8003322:	6613      	str	r3, [r2, #96]	; 0x60
 8003324:	4b37      	ldr	r3, [pc, #220]	; (8003404 <HAL_UART_MspInit+0x138>)
 8003326:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003328:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800332c:	61bb      	str	r3, [r7, #24]
 800332e:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003330:	4b34      	ldr	r3, [pc, #208]	; (8003404 <HAL_UART_MspInit+0x138>)
 8003332:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003334:	4a33      	ldr	r2, [pc, #204]	; (8003404 <HAL_UART_MspInit+0x138>)
 8003336:	f043 0302 	orr.w	r3, r3, #2
 800333a:	64d3      	str	r3, [r2, #76]	; 0x4c
 800333c:	4b31      	ldr	r3, [pc, #196]	; (8003404 <HAL_UART_MspInit+0x138>)
 800333e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003340:	f003 0302 	and.w	r3, r3, #2
 8003344:	617b      	str	r3, [r7, #20]
 8003346:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PB6     ------> USART1_TX
    PB7     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = ST_LINK_UART1_TX_Pin|ST_LINK_UART1_RX_Pin;
 8003348:	23c0      	movs	r3, #192	; 0xc0
 800334a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800334e:	2302      	movs	r3, #2
 8003350:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003354:	2300      	movs	r3, #0
 8003356:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800335a:	2303      	movs	r3, #3
 800335c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8003360:	2307      	movs	r3, #7
 8003362:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003366:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800336a:	4619      	mov	r1, r3
 800336c:	4826      	ldr	r0, [pc, #152]	; (8003408 <HAL_UART_MspInit+0x13c>)
 800336e:	f000 fcdb 	bl	8003d28 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8003372:	e040      	b.n	80033f6 <HAL_UART_MspInit+0x12a>
  else if(huart->Instance==USART3)
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	4a24      	ldr	r2, [pc, #144]	; (800340c <HAL_UART_MspInit+0x140>)
 800337a:	4293      	cmp	r3, r2
 800337c:	d13b      	bne.n	80033f6 <HAL_UART_MspInit+0x12a>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 800337e:	2304      	movs	r3, #4
 8003380:	61fb      	str	r3, [r7, #28]
    PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8003382:	2300      	movs	r3, #0
 8003384:	65fb      	str	r3, [r7, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003386:	f107 031c 	add.w	r3, r7, #28
 800338a:	4618      	mov	r0, r3
 800338c:	f002 f860 	bl	8005450 <HAL_RCCEx_PeriphCLKConfig>
 8003390:	4603      	mov	r3, r0
 8003392:	2b00      	cmp	r3, #0
 8003394:	d001      	beq.n	800339a <HAL_UART_MspInit+0xce>
      Error_Handler();
 8003396:	f7ff fbf5 	bl	8002b84 <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 800339a:	4b1a      	ldr	r3, [pc, #104]	; (8003404 <HAL_UART_MspInit+0x138>)
 800339c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800339e:	4a19      	ldr	r2, [pc, #100]	; (8003404 <HAL_UART_MspInit+0x138>)
 80033a0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80033a4:	6593      	str	r3, [r2, #88]	; 0x58
 80033a6:	4b17      	ldr	r3, [pc, #92]	; (8003404 <HAL_UART_MspInit+0x138>)
 80033a8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80033aa:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80033ae:	613b      	str	r3, [r7, #16]
 80033b0:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80033b2:	4b14      	ldr	r3, [pc, #80]	; (8003404 <HAL_UART_MspInit+0x138>)
 80033b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80033b6:	4a13      	ldr	r2, [pc, #76]	; (8003404 <HAL_UART_MspInit+0x138>)
 80033b8:	f043 0308 	orr.w	r3, r3, #8
 80033bc:	64d3      	str	r3, [r2, #76]	; 0x4c
 80033be:	4b11      	ldr	r3, [pc, #68]	; (8003404 <HAL_UART_MspInit+0x138>)
 80033c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80033c2:	f003 0308 	and.w	r3, r3, #8
 80033c6:	60fb      	str	r3, [r7, #12]
 80033c8:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = INTERNAL_UART3_TX_Pin|INTERNAL_UART3_RX_Pin;
 80033ca:	f44f 7340 	mov.w	r3, #768	; 0x300
 80033ce:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80033d2:	2302      	movs	r3, #2
 80033d4:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80033d8:	2300      	movs	r3, #0
 80033da:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80033de:	2303      	movs	r3, #3
 80033e0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 80033e4:	2307      	movs	r3, #7
 80033e6:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80033ea:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80033ee:	4619      	mov	r1, r3
 80033f0:	4807      	ldr	r0, [pc, #28]	; (8003410 <HAL_UART_MspInit+0x144>)
 80033f2:	f000 fc99 	bl	8003d28 <HAL_GPIO_Init>
}
 80033f6:	bf00      	nop
 80033f8:	37b8      	adds	r7, #184	; 0xb8
 80033fa:	46bd      	mov	sp, r7
 80033fc:	bd80      	pop	{r7, pc}
 80033fe:	bf00      	nop
 8003400:	40013800 	.word	0x40013800
 8003404:	40021000 	.word	0x40021000
 8003408:	48000400 	.word	0x48000400
 800340c:	40004800 	.word	0x40004800
 8003410:	48000c00 	.word	0x48000c00

08003414 <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 8003414:	b580      	push	{r7, lr}
 8003416:	b0ac      	sub	sp, #176	; 0xb0
 8003418:	af00      	add	r7, sp, #0
 800341a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800341c:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8003420:	2200      	movs	r2, #0
 8003422:	601a      	str	r2, [r3, #0]
 8003424:	605a      	str	r2, [r3, #4]
 8003426:	609a      	str	r2, [r3, #8]
 8003428:	60da      	str	r2, [r3, #12]
 800342a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800342c:	f107 0314 	add.w	r3, r7, #20
 8003430:	2288      	movs	r2, #136	; 0x88
 8003432:	2100      	movs	r1, #0
 8003434:	4618      	mov	r0, r3
 8003436:	f019 fb55 	bl	801cae4 <memset>
  if(hpcd->Instance==USB_OTG_FS)
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8003442:	d17c      	bne.n	800353e <HAL_PCD_MspInit+0x12a>

  /* USER CODE END USB_OTG_FS_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 8003444:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003448:	617b      	str	r3, [r7, #20]
    PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 800344a:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 800344e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
    PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 8003452:	2301      	movs	r3, #1
 8003454:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 8003456:	2301      	movs	r3, #1
 8003458:	61fb      	str	r3, [r7, #28]
    PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 800345a:	2318      	movs	r3, #24
 800345c:	623b      	str	r3, [r7, #32]
    PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 800345e:	2307      	movs	r3, #7
 8003460:	627b      	str	r3, [r7, #36]	; 0x24
    PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 8003462:	2302      	movs	r3, #2
 8003464:	62bb      	str	r3, [r7, #40]	; 0x28
    PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 8003466:	2302      	movs	r3, #2
 8003468:	62fb      	str	r3, [r7, #44]	; 0x2c
    PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 800346a:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800346e:	633b      	str	r3, [r7, #48]	; 0x30
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003470:	f107 0314 	add.w	r3, r7, #20
 8003474:	4618      	mov	r0, r3
 8003476:	f001 ffeb 	bl	8005450 <HAL_RCCEx_PeriphCLKConfig>
 800347a:	4603      	mov	r3, r0
 800347c:	2b00      	cmp	r3, #0
 800347e:	d001      	beq.n	8003484 <HAL_PCD_MspInit+0x70>
    {
      Error_Handler();
 8003480:	f7ff fb80 	bl	8002b84 <Error_Handler>
    }

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003484:	4b30      	ldr	r3, [pc, #192]	; (8003548 <HAL_PCD_MspInit+0x134>)
 8003486:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003488:	4a2f      	ldr	r2, [pc, #188]	; (8003548 <HAL_PCD_MspInit+0x134>)
 800348a:	f043 0301 	orr.w	r3, r3, #1
 800348e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8003490:	4b2d      	ldr	r3, [pc, #180]	; (8003548 <HAL_PCD_MspInit+0x134>)
 8003492:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003494:	f003 0301 	and.w	r3, r3, #1
 8003498:	613b      	str	r3, [r7, #16]
 800349a:	693b      	ldr	r3, [r7, #16]
    PA9     ------> USB_OTG_FS_VBUS
    PA10     ------> USB_OTG_FS_ID
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = USB_OTG_FS_VBUS_Pin;
 800349c:	f44f 7300 	mov.w	r3, #512	; 0x200
 80034a0:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80034a4:	2300      	movs	r3, #0
 80034a6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034aa:	2300      	movs	r3, #0
 80034ac:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(USB_OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 80034b0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80034b4:	4619      	mov	r1, r3
 80034b6:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80034ba:	f000 fc35 	bl	8003d28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = USB_OTG_FS_ID_Pin|USB_OTG_FS_DM_Pin|USB_OTG_FS_DP_Pin;
 80034be:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 80034c2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80034c6:	2302      	movs	r3, #2
 80034c8:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80034cc:	2300      	movs	r3, #0
 80034ce:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80034d2:	2303      	movs	r3, #3
 80034d4:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 80034d8:	230a      	movs	r3, #10
 80034da:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80034de:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 80034e2:	4619      	mov	r1, r3
 80034e4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80034e8:	f000 fc1e 	bl	8003d28 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 80034ec:	4b16      	ldr	r3, [pc, #88]	; (8003548 <HAL_PCD_MspInit+0x134>)
 80034ee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034f0:	4a15      	ldr	r2, [pc, #84]	; (8003548 <HAL_PCD_MspInit+0x134>)
 80034f2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80034f6:	64d3      	str	r3, [r2, #76]	; 0x4c
 80034f8:	4b13      	ldr	r3, [pc, #76]	; (8003548 <HAL_PCD_MspInit+0x134>)
 80034fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80034fc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8003500:	60fb      	str	r3, [r7, #12]
 8003502:	68fb      	ldr	r3, [r7, #12]

    /* Enable VDDUSB */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003504:	4b10      	ldr	r3, [pc, #64]	; (8003548 <HAL_PCD_MspInit+0x134>)
 8003506:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003508:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800350c:	2b00      	cmp	r3, #0
 800350e:	d114      	bne.n	800353a <HAL_PCD_MspInit+0x126>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003510:	4b0d      	ldr	r3, [pc, #52]	; (8003548 <HAL_PCD_MspInit+0x134>)
 8003512:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003514:	4a0c      	ldr	r2, [pc, #48]	; (8003548 <HAL_PCD_MspInit+0x134>)
 8003516:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800351a:	6593      	str	r3, [r2, #88]	; 0x58
 800351c:	4b0a      	ldr	r3, [pc, #40]	; (8003548 <HAL_PCD_MspInit+0x134>)
 800351e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003520:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003524:	60bb      	str	r3, [r7, #8]
 8003526:	68bb      	ldr	r3, [r7, #8]
      HAL_PWREx_EnableVddUSB();
 8003528:	f001 f8c6 	bl	80046b8 <HAL_PWREx_EnableVddUSB>
      __HAL_RCC_PWR_CLK_DISABLE();
 800352c:	4b06      	ldr	r3, [pc, #24]	; (8003548 <HAL_PCD_MspInit+0x134>)
 800352e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8003530:	4a05      	ldr	r2, [pc, #20]	; (8003548 <HAL_PCD_MspInit+0x134>)
 8003532:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003536:	6593      	str	r3, [r2, #88]	; 0x58
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }

}
 8003538:	e001      	b.n	800353e <HAL_PCD_MspInit+0x12a>
      HAL_PWREx_EnableVddUSB();
 800353a:	f001 f8bd 	bl	80046b8 <HAL_PWREx_EnableVddUSB>
}
 800353e:	bf00      	nop
 8003540:	37b0      	adds	r7, #176	; 0xb0
 8003542:	46bd      	mov	sp, r7
 8003544:	bd80      	pop	{r7, pc}
 8003546:	bf00      	nop
 8003548:	40021000 	.word	0x40021000

0800354c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800354c:	b480      	push	{r7}
 800354e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003550:	e7fe      	b.n	8003550 <NMI_Handler+0x4>

08003552 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003552:	b480      	push	{r7}
 8003554:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003556:	e7fe      	b.n	8003556 <HardFault_Handler+0x4>

08003558 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003558:	b480      	push	{r7}
 800355a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800355c:	e7fe      	b.n	800355c <MemManage_Handler+0x4>

0800355e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800355e:	b480      	push	{r7}
 8003560:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003562:	e7fe      	b.n	8003562 <BusFault_Handler+0x4>

08003564 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003564:	b480      	push	{r7}
 8003566:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003568:	e7fe      	b.n	8003568 <UsageFault_Handler+0x4>

0800356a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800356a:	b480      	push	{r7}
 800356c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800356e:	bf00      	nop
 8003570:	46bd      	mov	sp, r7
 8003572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003576:	4770      	bx	lr

08003578 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8003578:	b480      	push	{r7}
 800357a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800357c:	bf00      	nop
 800357e:	46bd      	mov	sp, r7
 8003580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003584:	4770      	bx	lr

08003586 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003586:	b480      	push	{r7}
 8003588:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800358a:	bf00      	nop
 800358c:	46bd      	mov	sp, r7
 800358e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003592:	4770      	bx	lr

08003594 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003594:	b580      	push	{r7, lr}
 8003596:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003598:	f000 f964 	bl	8003864 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800359c:	bf00      	nop
 800359e:	bd80      	pop	{r7, pc}

080035a0 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 80035a0:	b580      	push	{r7, lr}
 80035a2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(SPSGRF_915_GPIO3_EXTI5_Pin);
 80035a4:	2020      	movs	r0, #32
 80035a6:	f000 fd81 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(SPBTLE_RF_IRQ_EXTI6_Pin);
 80035aa:	2040      	movs	r0, #64	; 0x40
 80035ac:	f000 fd7e 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(VL53L0X_GPIO1_EXTI7_Pin);
 80035b0:	2080      	movs	r0, #128	; 0x80
 80035b2:	f000 fd7b 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(LSM3MDL_DRDY_EXTI8_Pin);
 80035b6:	f44f 7080 	mov.w	r0, #256	; 0x100
 80035ba:	f000 fd77 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 80035be:	bf00      	nop
 80035c0:	bd80      	pop	{r7, pc}

080035c2 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80035c2:	b580      	push	{r7, lr}
 80035c4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(LPS22HB_INT_DRDY_EXTI0_Pin);
 80035c6:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80035ca:	f000 fd6f 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(LSM6DSL_INT1_EXTI11_Pin);
 80035ce:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80035d2:	f000 fd6b 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(BUTTON_EXTI13_Pin);
 80035d6:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80035da:	f000 fd67 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(ARD_D2_Pin);
 80035de:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80035e2:	f000 fd63 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(HTS221_DRDY_EXTI15_Pin);
 80035e6:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80035ea:	f000 fd5f 	bl	80040ac <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80035ee:	bf00      	nop
 80035f0:	bd80      	pop	{r7, pc}

080035f2 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80035f2:	b480      	push	{r7}
 80035f4:	af00      	add	r7, sp, #0
	return 1;
 80035f6:	2301      	movs	r3, #1
}
 80035f8:	4618      	mov	r0, r3
 80035fa:	46bd      	mov	sp, r7
 80035fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003600:	4770      	bx	lr

08003602 <_kill>:

int _kill(int pid, int sig)
{
 8003602:	b580      	push	{r7, lr}
 8003604:	b082      	sub	sp, #8
 8003606:	af00      	add	r7, sp, #0
 8003608:	6078      	str	r0, [r7, #4]
 800360a:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800360c:	f019 f9f6 	bl	801c9fc <__errno>
 8003610:	4603      	mov	r3, r0
 8003612:	2216      	movs	r2, #22
 8003614:	601a      	str	r2, [r3, #0]
	return -1;
 8003616:	f04f 33ff 	mov.w	r3, #4294967295
}
 800361a:	4618      	mov	r0, r3
 800361c:	3708      	adds	r7, #8
 800361e:	46bd      	mov	sp, r7
 8003620:	bd80      	pop	{r7, pc}

08003622 <_exit>:

void _exit (int status)
{
 8003622:	b580      	push	{r7, lr}
 8003624:	b082      	sub	sp, #8
 8003626:	af00      	add	r7, sp, #0
 8003628:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800362a:	f04f 31ff 	mov.w	r1, #4294967295
 800362e:	6878      	ldr	r0, [r7, #4]
 8003630:	f7ff ffe7 	bl	8003602 <_kill>
	while (1) {}		/* Make sure we hang here */
 8003634:	e7fe      	b.n	8003634 <_exit+0x12>

08003636 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003636:	b580      	push	{r7, lr}
 8003638:	b086      	sub	sp, #24
 800363a:	af00      	add	r7, sp, #0
 800363c:	60f8      	str	r0, [r7, #12]
 800363e:	60b9      	str	r1, [r7, #8]
 8003640:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003642:	2300      	movs	r3, #0
 8003644:	617b      	str	r3, [r7, #20]
 8003646:	e00a      	b.n	800365e <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8003648:	f3af 8000 	nop.w
 800364c:	4601      	mov	r1, r0
 800364e:	68bb      	ldr	r3, [r7, #8]
 8003650:	1c5a      	adds	r2, r3, #1
 8003652:	60ba      	str	r2, [r7, #8]
 8003654:	b2ca      	uxtb	r2, r1
 8003656:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003658:	697b      	ldr	r3, [r7, #20]
 800365a:	3301      	adds	r3, #1
 800365c:	617b      	str	r3, [r7, #20]
 800365e:	697a      	ldr	r2, [r7, #20]
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	429a      	cmp	r2, r3
 8003664:	dbf0      	blt.n	8003648 <_read+0x12>
	}

return len;
 8003666:	687b      	ldr	r3, [r7, #4]
}
 8003668:	4618      	mov	r0, r3
 800366a:	3718      	adds	r7, #24
 800366c:	46bd      	mov	sp, r7
 800366e:	bd80      	pop	{r7, pc}

08003670 <_close>:
	}
	return len;
}

int _close(int file)
{
 8003670:	b480      	push	{r7}
 8003672:	b083      	sub	sp, #12
 8003674:	af00      	add	r7, sp, #0
 8003676:	6078      	str	r0, [r7, #4]
	return -1;
 8003678:	f04f 33ff 	mov.w	r3, #4294967295
}
 800367c:	4618      	mov	r0, r3
 800367e:	370c      	adds	r7, #12
 8003680:	46bd      	mov	sp, r7
 8003682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003686:	4770      	bx	lr

08003688 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003688:	b480      	push	{r7}
 800368a:	b083      	sub	sp, #12
 800368c:	af00      	add	r7, sp, #0
 800368e:	6078      	str	r0, [r7, #4]
 8003690:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8003692:	683b      	ldr	r3, [r7, #0]
 8003694:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8003698:	605a      	str	r2, [r3, #4]
	return 0;
 800369a:	2300      	movs	r3, #0
}
 800369c:	4618      	mov	r0, r3
 800369e:	370c      	adds	r7, #12
 80036a0:	46bd      	mov	sp, r7
 80036a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a6:	4770      	bx	lr

080036a8 <_isatty>:

int _isatty(int file)
{
 80036a8:	b480      	push	{r7}
 80036aa:	b083      	sub	sp, #12
 80036ac:	af00      	add	r7, sp, #0
 80036ae:	6078      	str	r0, [r7, #4]
	return 1;
 80036b0:	2301      	movs	r3, #1
}
 80036b2:	4618      	mov	r0, r3
 80036b4:	370c      	adds	r7, #12
 80036b6:	46bd      	mov	sp, r7
 80036b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036bc:	4770      	bx	lr

080036be <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80036be:	b480      	push	{r7}
 80036c0:	b085      	sub	sp, #20
 80036c2:	af00      	add	r7, sp, #0
 80036c4:	60f8      	str	r0, [r7, #12]
 80036c6:	60b9      	str	r1, [r7, #8]
 80036c8:	607a      	str	r2, [r7, #4]
	return 0;
 80036ca:	2300      	movs	r3, #0
}
 80036cc:	4618      	mov	r0, r3
 80036ce:	3714      	adds	r7, #20
 80036d0:	46bd      	mov	sp, r7
 80036d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036d6:	4770      	bx	lr

080036d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80036d8:	b580      	push	{r7, lr}
 80036da:	b086      	sub	sp, #24
 80036dc:	af00      	add	r7, sp, #0
 80036de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80036e0:	4a14      	ldr	r2, [pc, #80]	; (8003734 <_sbrk+0x5c>)
 80036e2:	4b15      	ldr	r3, [pc, #84]	; (8003738 <_sbrk+0x60>)
 80036e4:	1ad3      	subs	r3, r2, r3
 80036e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80036e8:	697b      	ldr	r3, [r7, #20]
 80036ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80036ec:	4b13      	ldr	r3, [pc, #76]	; (800373c <_sbrk+0x64>)
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	2b00      	cmp	r3, #0
 80036f2:	d102      	bne.n	80036fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80036f4:	4b11      	ldr	r3, [pc, #68]	; (800373c <_sbrk+0x64>)
 80036f6:	4a12      	ldr	r2, [pc, #72]	; (8003740 <_sbrk+0x68>)
 80036f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80036fa:	4b10      	ldr	r3, [pc, #64]	; (800373c <_sbrk+0x64>)
 80036fc:	681a      	ldr	r2, [r3, #0]
 80036fe:	687b      	ldr	r3, [r7, #4]
 8003700:	4413      	add	r3, r2
 8003702:	693a      	ldr	r2, [r7, #16]
 8003704:	429a      	cmp	r2, r3
 8003706:	d207      	bcs.n	8003718 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003708:	f019 f978 	bl	801c9fc <__errno>
 800370c:	4603      	mov	r3, r0
 800370e:	220c      	movs	r2, #12
 8003710:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8003712:	f04f 33ff 	mov.w	r3, #4294967295
 8003716:	e009      	b.n	800372c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003718:	4b08      	ldr	r3, [pc, #32]	; (800373c <_sbrk+0x64>)
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800371e:	4b07      	ldr	r3, [pc, #28]	; (800373c <_sbrk+0x64>)
 8003720:	681a      	ldr	r2, [r3, #0]
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	4413      	add	r3, r2
 8003726:	4a05      	ldr	r2, [pc, #20]	; (800373c <_sbrk+0x64>)
 8003728:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800372a:	68fb      	ldr	r3, [r7, #12]
}
 800372c:	4618      	mov	r0, r3
 800372e:	3718      	adds	r7, #24
 8003730:	46bd      	mov	sp, r7
 8003732:	bd80      	pop	{r7, pc}
 8003734:	20018000 	.word	0x20018000
 8003738:	00000400 	.word	0x00000400
 800373c:	2001124c 	.word	0x2001124c
 8003740:	200112a0 	.word	0x200112a0

08003744 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 8003744:	b480      	push	{r7}
 8003746:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8003748:	4b06      	ldr	r3, [pc, #24]	; (8003764 <SystemInit+0x20>)
 800374a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800374e:	4a05      	ldr	r2, [pc, #20]	; (8003764 <SystemInit+0x20>)
 8003750:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003754:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 8003758:	bf00      	nop
 800375a:	46bd      	mov	sp, r7
 800375c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003760:	4770      	bx	lr
 8003762:	bf00      	nop
 8003764:	e000ed00 	.word	0xe000ed00

08003768 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8003768:	f8df d034 	ldr.w	sp, [pc, #52]	; 80037a0 <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 800376c:	f7ff ffea 	bl	8003744 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003770:	480c      	ldr	r0, [pc, #48]	; (80037a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8003772:	490d      	ldr	r1, [pc, #52]	; (80037a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003774:	4a0d      	ldr	r2, [pc, #52]	; (80037ac <LoopForever+0xe>)
  movs r3, #0
 8003776:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003778:	e002      	b.n	8003780 <LoopCopyDataInit>

0800377a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800377a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800377c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800377e:	3304      	adds	r3, #4

08003780 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003780:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003782:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003784:	d3f9      	bcc.n	800377a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003786:	4a0a      	ldr	r2, [pc, #40]	; (80037b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003788:	4c0a      	ldr	r4, [pc, #40]	; (80037b4 <LoopForever+0x16>)
  movs r3, #0
 800378a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800378c:	e001      	b.n	8003792 <LoopFillZerobss>

0800378e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800378e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003790:	3204      	adds	r2, #4

08003792 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003792:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003794:	d3fb      	bcc.n	800378e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8003796:	f019 f949 	bl	801ca2c <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 800379a:	f7fe fc4b 	bl	8002034 <main>

0800379e <LoopForever>:

LoopForever:
    b LoopForever
 800379e:	e7fe      	b.n	800379e <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 80037a0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80037a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80037a8:	200001e4 	.word	0x200001e4
  ldr r2, =_sidata
 80037ac:	08029090 	.word	0x08029090
  ldr r2, =_sbss
 80037b0:	200001f0 	.word	0x200001f0
  ldr r4, =_ebss
 80037b4:	200112a0 	.word	0x200112a0

080037b8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 80037b8:	e7fe      	b.n	80037b8 <ADC1_2_IRQHandler>

080037ba <HAL_Init>:
  *         each 1ms in the SysTick_Handler() interrupt handler.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80037ba:	b580      	push	{r7, lr}
 80037bc:	b082      	sub	sp, #8
 80037be:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 80037c0:	2300      	movs	r3, #0
 80037c2:	71fb      	strb	r3, [r7, #7]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80037c4:	2003      	movs	r0, #3
 80037c6:	f000 f961 	bl	8003a8c <HAL_NVIC_SetPriorityGrouping>

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80037ca:	2000      	movs	r0, #0
 80037cc:	f000 f80e 	bl	80037ec <HAL_InitTick>
 80037d0:	4603      	mov	r3, r0
 80037d2:	2b00      	cmp	r3, #0
 80037d4:	d002      	beq.n	80037dc <HAL_Init+0x22>
  {
    status = HAL_ERROR;
 80037d6:	2301      	movs	r3, #1
 80037d8:	71fb      	strb	r3, [r7, #7]
 80037da:	e001      	b.n	80037e0 <HAL_Init+0x26>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 80037dc:	f7ff fc08 	bl	8002ff0 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 80037e0:	79fb      	ldrb	r3, [r7, #7]
}
 80037e2:	4618      	mov	r0, r3
 80037e4:	3708      	adds	r7, #8
 80037e6:	46bd      	mov	sp, r7
 80037e8:	bd80      	pop	{r7, pc}
	...

080037ec <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80037ec:	b580      	push	{r7, lr}
 80037ee:	b084      	sub	sp, #16
 80037f0:	af00      	add	r7, sp, #0
 80037f2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
 80037f4:	2300      	movs	r3, #0
 80037f6:	73fb      	strb	r3, [r7, #15]

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/
  if ((uint32_t)uwTickFreq != 0U)
 80037f8:	4b17      	ldr	r3, [pc, #92]	; (8003858 <HAL_InitTick+0x6c>)
 80037fa:	781b      	ldrb	r3, [r3, #0]
 80037fc:	2b00      	cmp	r3, #0
 80037fe:	d023      	beq.n	8003848 <HAL_InitTick+0x5c>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / (uint32_t)uwTickFreq)) == 0U)
 8003800:	4b16      	ldr	r3, [pc, #88]	; (800385c <HAL_InitTick+0x70>)
 8003802:	681a      	ldr	r2, [r3, #0]
 8003804:	4b14      	ldr	r3, [pc, #80]	; (8003858 <HAL_InitTick+0x6c>)
 8003806:	781b      	ldrb	r3, [r3, #0]
 8003808:	4619      	mov	r1, r3
 800380a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800380e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003812:	fbb2 f3f3 	udiv	r3, r2, r3
 8003816:	4618      	mov	r0, r3
 8003818:	f000 f96d 	bl	8003af6 <HAL_SYSTICK_Config>
 800381c:	4603      	mov	r3, r0
 800381e:	2b00      	cmp	r3, #0
 8003820:	d10f      	bne.n	8003842 <HAL_InitTick+0x56>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	2b0f      	cmp	r3, #15
 8003826:	d809      	bhi.n	800383c <HAL_InitTick+0x50>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003828:	2200      	movs	r2, #0
 800382a:	6879      	ldr	r1, [r7, #4]
 800382c:	f04f 30ff 	mov.w	r0, #4294967295
 8003830:	f000 f937 	bl	8003aa2 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8003834:	4a0a      	ldr	r2, [pc, #40]	; (8003860 <HAL_InitTick+0x74>)
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	6013      	str	r3, [r2, #0]
 800383a:	e007      	b.n	800384c <HAL_InitTick+0x60>
      }
      else
      {
        status = HAL_ERROR;
 800383c:	2301      	movs	r3, #1
 800383e:	73fb      	strb	r3, [r7, #15]
 8003840:	e004      	b.n	800384c <HAL_InitTick+0x60>
      }
    }
    else
    {
      status = HAL_ERROR;
 8003842:	2301      	movs	r3, #1
 8003844:	73fb      	strb	r3, [r7, #15]
 8003846:	e001      	b.n	800384c <HAL_InitTick+0x60>
    }
  }
  else
  {
    status = HAL_ERROR;
 8003848:	2301      	movs	r3, #1
 800384a:	73fb      	strb	r3, [r7, #15]
  }

  /* Return function status */
  return status;
 800384c:	7bfb      	ldrb	r3, [r7, #15]
}
 800384e:	4618      	mov	r0, r3
 8003850:	3710      	adds	r7, #16
 8003852:	46bd      	mov	sp, r7
 8003854:	bd80      	pop	{r7, pc}
 8003856:	bf00      	nop
 8003858:	20000008 	.word	0x20000008
 800385c:	20000000 	.word	0x20000000
 8003860:	20000004 	.word	0x20000004

08003864 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003864:	b480      	push	{r7}
 8003866:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8003868:	4b06      	ldr	r3, [pc, #24]	; (8003884 <HAL_IncTick+0x20>)
 800386a:	781b      	ldrb	r3, [r3, #0]
 800386c:	461a      	mov	r2, r3
 800386e:	4b06      	ldr	r3, [pc, #24]	; (8003888 <HAL_IncTick+0x24>)
 8003870:	681b      	ldr	r3, [r3, #0]
 8003872:	4413      	add	r3, r2
 8003874:	4a04      	ldr	r2, [pc, #16]	; (8003888 <HAL_IncTick+0x24>)
 8003876:	6013      	str	r3, [r2, #0]
}
 8003878:	bf00      	nop
 800387a:	46bd      	mov	sp, r7
 800387c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003880:	4770      	bx	lr
 8003882:	bf00      	nop
 8003884:	20000008 	.word	0x20000008
 8003888:	20011250 	.word	0x20011250

0800388c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800388c:	b480      	push	{r7}
 800388e:	af00      	add	r7, sp, #0
  return uwTick;
 8003890:	4b03      	ldr	r3, [pc, #12]	; (80038a0 <HAL_GetTick+0x14>)
 8003892:	681b      	ldr	r3, [r3, #0]
}
 8003894:	4618      	mov	r0, r3
 8003896:	46bd      	mov	sp, r7
 8003898:	f85d 7b04 	ldr.w	r7, [sp], #4
 800389c:	4770      	bx	lr
 800389e:	bf00      	nop
 80038a0:	20011250 	.word	0x20011250

080038a4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80038a4:	b580      	push	{r7, lr}
 80038a6:	b084      	sub	sp, #16
 80038a8:	af00      	add	r7, sp, #0
 80038aa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80038ac:	f7ff ffee 	bl	800388c <HAL_GetTick>
 80038b0:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	60fb      	str	r3, [r7, #12]

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
 80038b6:	68fb      	ldr	r3, [r7, #12]
 80038b8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038bc:	d005      	beq.n	80038ca <HAL_Delay+0x26>
  {
    wait += (uint32_t)uwTickFreq;
 80038be:	4b0a      	ldr	r3, [pc, #40]	; (80038e8 <HAL_Delay+0x44>)
 80038c0:	781b      	ldrb	r3, [r3, #0]
 80038c2:	461a      	mov	r2, r3
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	4413      	add	r3, r2
 80038c8:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80038ca:	bf00      	nop
 80038cc:	f7ff ffde 	bl	800388c <HAL_GetTick>
 80038d0:	4602      	mov	r2, r0
 80038d2:	68bb      	ldr	r3, [r7, #8]
 80038d4:	1ad3      	subs	r3, r2, r3
 80038d6:	68fa      	ldr	r2, [r7, #12]
 80038d8:	429a      	cmp	r2, r3
 80038da:	d8f7      	bhi.n	80038cc <HAL_Delay+0x28>
  {
  }
}
 80038dc:	bf00      	nop
 80038de:	bf00      	nop
 80038e0:	3710      	adds	r7, #16
 80038e2:	46bd      	mov	sp, r7
 80038e4:	bd80      	pop	{r7, pc}
 80038e6:	bf00      	nop
 80038e8:	20000008 	.word	0x20000008

080038ec <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80038ec:	b480      	push	{r7}
 80038ee:	b085      	sub	sp, #20
 80038f0:	af00      	add	r7, sp, #0
 80038f2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	f003 0307 	and.w	r3, r3, #7
 80038fa:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80038fc:	4b0c      	ldr	r3, [pc, #48]	; (8003930 <__NVIC_SetPriorityGrouping+0x44>)
 80038fe:	68db      	ldr	r3, [r3, #12]
 8003900:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003902:	68ba      	ldr	r2, [r7, #8]
 8003904:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003908:	4013      	ands	r3, r2
 800390a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003910:	68bb      	ldr	r3, [r7, #8]
 8003912:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003914:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003918:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800391c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800391e:	4a04      	ldr	r2, [pc, #16]	; (8003930 <__NVIC_SetPriorityGrouping+0x44>)
 8003920:	68bb      	ldr	r3, [r7, #8]
 8003922:	60d3      	str	r3, [r2, #12]
}
 8003924:	bf00      	nop
 8003926:	3714      	adds	r7, #20
 8003928:	46bd      	mov	sp, r7
 800392a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800392e:	4770      	bx	lr
 8003930:	e000ed00 	.word	0xe000ed00

08003934 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003934:	b480      	push	{r7}
 8003936:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003938:	4b04      	ldr	r3, [pc, #16]	; (800394c <__NVIC_GetPriorityGrouping+0x18>)
 800393a:	68db      	ldr	r3, [r3, #12]
 800393c:	0a1b      	lsrs	r3, r3, #8
 800393e:	f003 0307 	and.w	r3, r3, #7
}
 8003942:	4618      	mov	r0, r3
 8003944:	46bd      	mov	sp, r7
 8003946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800394a:	4770      	bx	lr
 800394c:	e000ed00 	.word	0xe000ed00

08003950 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003950:	b480      	push	{r7}
 8003952:	b083      	sub	sp, #12
 8003954:	af00      	add	r7, sp, #0
 8003956:	4603      	mov	r3, r0
 8003958:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800395a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800395e:	2b00      	cmp	r3, #0
 8003960:	db0b      	blt.n	800397a <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003962:	79fb      	ldrb	r3, [r7, #7]
 8003964:	f003 021f 	and.w	r2, r3, #31
 8003968:	4907      	ldr	r1, [pc, #28]	; (8003988 <__NVIC_EnableIRQ+0x38>)
 800396a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800396e:	095b      	lsrs	r3, r3, #5
 8003970:	2001      	movs	r0, #1
 8003972:	fa00 f202 	lsl.w	r2, r0, r2
 8003976:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 800397a:	bf00      	nop
 800397c:	370c      	adds	r7, #12
 800397e:	46bd      	mov	sp, r7
 8003980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003984:	4770      	bx	lr
 8003986:	bf00      	nop
 8003988:	e000e100 	.word	0xe000e100

0800398c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800398c:	b480      	push	{r7}
 800398e:	b083      	sub	sp, #12
 8003990:	af00      	add	r7, sp, #0
 8003992:	4603      	mov	r3, r0
 8003994:	6039      	str	r1, [r7, #0]
 8003996:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003998:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800399c:	2b00      	cmp	r3, #0
 800399e:	db0a      	blt.n	80039b6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039a0:	683b      	ldr	r3, [r7, #0]
 80039a2:	b2da      	uxtb	r2, r3
 80039a4:	490c      	ldr	r1, [pc, #48]	; (80039d8 <__NVIC_SetPriority+0x4c>)
 80039a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039aa:	0112      	lsls	r2, r2, #4
 80039ac:	b2d2      	uxtb	r2, r2
 80039ae:	440b      	add	r3, r1
 80039b0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80039b4:	e00a      	b.n	80039cc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80039b6:	683b      	ldr	r3, [r7, #0]
 80039b8:	b2da      	uxtb	r2, r3
 80039ba:	4908      	ldr	r1, [pc, #32]	; (80039dc <__NVIC_SetPriority+0x50>)
 80039bc:	79fb      	ldrb	r3, [r7, #7]
 80039be:	f003 030f 	and.w	r3, r3, #15
 80039c2:	3b04      	subs	r3, #4
 80039c4:	0112      	lsls	r2, r2, #4
 80039c6:	b2d2      	uxtb	r2, r2
 80039c8:	440b      	add	r3, r1
 80039ca:	761a      	strb	r2, [r3, #24]
}
 80039cc:	bf00      	nop
 80039ce:	370c      	adds	r7, #12
 80039d0:	46bd      	mov	sp, r7
 80039d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039d6:	4770      	bx	lr
 80039d8:	e000e100 	.word	0xe000e100
 80039dc:	e000ed00 	.word	0xe000ed00

080039e0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80039e0:	b480      	push	{r7}
 80039e2:	b089      	sub	sp, #36	; 0x24
 80039e4:	af00      	add	r7, sp, #0
 80039e6:	60f8      	str	r0, [r7, #12]
 80039e8:	60b9      	str	r1, [r7, #8]
 80039ea:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	f003 0307 	and.w	r3, r3, #7
 80039f2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80039f4:	69fb      	ldr	r3, [r7, #28]
 80039f6:	f1c3 0307 	rsb	r3, r3, #7
 80039fa:	2b04      	cmp	r3, #4
 80039fc:	bf28      	it	cs
 80039fe:	2304      	movcs	r3, #4
 8003a00:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003a02:	69fb      	ldr	r3, [r7, #28]
 8003a04:	3304      	adds	r3, #4
 8003a06:	2b06      	cmp	r3, #6
 8003a08:	d902      	bls.n	8003a10 <NVIC_EncodePriority+0x30>
 8003a0a:	69fb      	ldr	r3, [r7, #28]
 8003a0c:	3b03      	subs	r3, #3
 8003a0e:	e000      	b.n	8003a12 <NVIC_EncodePriority+0x32>
 8003a10:	2300      	movs	r3, #0
 8003a12:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003a14:	f04f 32ff 	mov.w	r2, #4294967295
 8003a18:	69bb      	ldr	r3, [r7, #24]
 8003a1a:	fa02 f303 	lsl.w	r3, r2, r3
 8003a1e:	43da      	mvns	r2, r3
 8003a20:	68bb      	ldr	r3, [r7, #8]
 8003a22:	401a      	ands	r2, r3
 8003a24:	697b      	ldr	r3, [r7, #20]
 8003a26:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003a28:	f04f 31ff 	mov.w	r1, #4294967295
 8003a2c:	697b      	ldr	r3, [r7, #20]
 8003a2e:	fa01 f303 	lsl.w	r3, r1, r3
 8003a32:	43d9      	mvns	r1, r3
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003a38:	4313      	orrs	r3, r2
         );
}
 8003a3a:	4618      	mov	r0, r3
 8003a3c:	3724      	adds	r7, #36	; 0x24
 8003a3e:	46bd      	mov	sp, r7
 8003a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a44:	4770      	bx	lr
	...

08003a48 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003a48:	b580      	push	{r7, lr}
 8003a4a:	b082      	sub	sp, #8
 8003a4c:	af00      	add	r7, sp, #0
 8003a4e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003a50:	687b      	ldr	r3, [r7, #4]
 8003a52:	3b01      	subs	r3, #1
 8003a54:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003a58:	d301      	bcc.n	8003a5e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003a5a:	2301      	movs	r3, #1
 8003a5c:	e00f      	b.n	8003a7e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003a5e:	4a0a      	ldr	r2, [pc, #40]	; (8003a88 <SysTick_Config+0x40>)
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	3b01      	subs	r3, #1
 8003a64:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003a66:	210f      	movs	r1, #15
 8003a68:	f04f 30ff 	mov.w	r0, #4294967295
 8003a6c:	f7ff ff8e 	bl	800398c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003a70:	4b05      	ldr	r3, [pc, #20]	; (8003a88 <SysTick_Config+0x40>)
 8003a72:	2200      	movs	r2, #0
 8003a74:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003a76:	4b04      	ldr	r3, [pc, #16]	; (8003a88 <SysTick_Config+0x40>)
 8003a78:	2207      	movs	r2, #7
 8003a7a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003a7c:	2300      	movs	r3, #0
}
 8003a7e:	4618      	mov	r0, r3
 8003a80:	3708      	adds	r7, #8
 8003a82:	46bd      	mov	sp, r7
 8003a84:	bd80      	pop	{r7, pc}
 8003a86:	bf00      	nop
 8003a88:	e000e010 	.word	0xe000e010

08003a8c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003a8c:	b580      	push	{r7, lr}
 8003a8e:	b082      	sub	sp, #8
 8003a90:	af00      	add	r7, sp, #0
 8003a92:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003a94:	6878      	ldr	r0, [r7, #4]
 8003a96:	f7ff ff29 	bl	80038ec <__NVIC_SetPriorityGrouping>
}
 8003a9a:	bf00      	nop
 8003a9c:	3708      	adds	r7, #8
 8003a9e:	46bd      	mov	sp, r7
 8003aa0:	bd80      	pop	{r7, pc}

08003aa2 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003aa2:	b580      	push	{r7, lr}
 8003aa4:	b086      	sub	sp, #24
 8003aa6:	af00      	add	r7, sp, #0
 8003aa8:	4603      	mov	r3, r0
 8003aaa:	60b9      	str	r1, [r7, #8]
 8003aac:	607a      	str	r2, [r7, #4]
 8003aae:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8003ab0:	2300      	movs	r3, #0
 8003ab2:	617b      	str	r3, [r7, #20]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8003ab4:	f7ff ff3e 	bl	8003934 <__NVIC_GetPriorityGrouping>
 8003ab8:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003aba:	687a      	ldr	r2, [r7, #4]
 8003abc:	68b9      	ldr	r1, [r7, #8]
 8003abe:	6978      	ldr	r0, [r7, #20]
 8003ac0:	f7ff ff8e 	bl	80039e0 <NVIC_EncodePriority>
 8003ac4:	4602      	mov	r2, r0
 8003ac6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003aca:	4611      	mov	r1, r2
 8003acc:	4618      	mov	r0, r3
 8003ace:	f7ff ff5d 	bl	800398c <__NVIC_SetPriority>
}
 8003ad2:	bf00      	nop
 8003ad4:	3718      	adds	r7, #24
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}

08003ada <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32l4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003ada:	b580      	push	{r7, lr}
 8003adc:	b082      	sub	sp, #8
 8003ade:	af00      	add	r7, sp, #0
 8003ae0:	4603      	mov	r3, r0
 8003ae2:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8003ae4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003ae8:	4618      	mov	r0, r3
 8003aea:	f7ff ff31 	bl	8003950 <__NVIC_EnableIRQ>
}
 8003aee:	bf00      	nop
 8003af0:	3708      	adds	r7, #8
 8003af2:	46bd      	mov	sp, r7
 8003af4:	bd80      	pop	{r7, pc}

08003af6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8003af6:	b580      	push	{r7, lr}
 8003af8:	b082      	sub	sp, #8
 8003afa:	af00      	add	r7, sp, #0
 8003afc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003afe:	6878      	ldr	r0, [r7, #4]
 8003b00:	f7ff ffa2 	bl	8003a48 <SysTick_Config>
 8003b04:	4603      	mov	r3, r0
}
 8003b06:	4618      	mov	r0, r3
 8003b08:	3708      	adds	r7, #8
 8003b0a:	46bd      	mov	sp, r7
 8003b0c:	bd80      	pop	{r7, pc}
	...

08003b10 <HAL_DFSDM_ChannelInit>:
  *         in the DFSDM_ChannelInitTypeDef structure and initialize the associated handle.
  * @param  hdfsdm_channel DFSDM channel handle.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_DFSDM_ChannelInit(DFSDM_Channel_HandleTypeDef *hdfsdm_channel)
{
 8003b10:	b580      	push	{r7, lr}
 8003b12:	b082      	sub	sp, #8
 8003b14:	af00      	add	r7, sp, #0
 8003b16:	6078      	str	r0, [r7, #4]
  /* Check DFSDM Channel handle */
  if (hdfsdm_channel == NULL)
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	2b00      	cmp	r3, #0
 8003b1c:	d101      	bne.n	8003b22 <HAL_DFSDM_ChannelInit+0x12>
  {
    return HAL_ERROR;
 8003b1e:	2301      	movs	r3, #1
 8003b20:	e0ac      	b.n	8003c7c <HAL_DFSDM_ChannelInit+0x16c>
  assert_param(IS_DFSDM_CHANNEL_FILTER_OVS_RATIO(hdfsdm_channel->Init.Awd.Oversampling));
  assert_param(IS_DFSDM_CHANNEL_OFFSET(hdfsdm_channel->Init.Offset));
  assert_param(IS_DFSDM_CHANNEL_RIGHT_BIT_SHIFT(hdfsdm_channel->Init.RightBitShift));

  /* Check that channel has not been already initialized */
  if (a_dfsdm1ChannelHandle[DFSDM_GetChannelFromInstance(hdfsdm_channel->Instance)] != NULL)
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	4618      	mov	r0, r3
 8003b28:	f000 f8b2 	bl	8003c90 <DFSDM_GetChannelFromInstance>
 8003b2c:	4603      	mov	r3, r0
 8003b2e:	4a55      	ldr	r2, [pc, #340]	; (8003c84 <HAL_DFSDM_ChannelInit+0x174>)
 8003b30:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	d001      	beq.n	8003b3c <HAL_DFSDM_ChannelInit+0x2c>
  {
    return HAL_ERROR;
 8003b38:	2301      	movs	r3, #1
 8003b3a:	e09f      	b.n	8003c7c <HAL_DFSDM_ChannelInit+0x16c>
    hdfsdm_channel->MspInitCallback = HAL_DFSDM_ChannelMspInit;
  }
  hdfsdm_channel->MspInitCallback(hdfsdm_channel);
#else
  /* Call MSP init function */
  HAL_DFSDM_ChannelMspInit(hdfsdm_channel);
 8003b3c:	6878      	ldr	r0, [r7, #4]
 8003b3e:	f7ff fa7b 	bl	8003038 <HAL_DFSDM_ChannelMspInit>
#endif

  /* Update the channel counter */
  v_dfsdm1ChannelCounter++;
 8003b42:	4b51      	ldr	r3, [pc, #324]	; (8003c88 <HAL_DFSDM_ChannelInit+0x178>)
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	3301      	adds	r3, #1
 8003b48:	4a4f      	ldr	r2, [pc, #316]	; (8003c88 <HAL_DFSDM_ChannelInit+0x178>)
 8003b4a:	6013      	str	r3, [r2, #0]

  /* Configure output serial clock and enable global DFSDM interface only for first channel */
  if (v_dfsdm1ChannelCounter == 1U)
 8003b4c:	4b4e      	ldr	r3, [pc, #312]	; (8003c88 <HAL_DFSDM_ChannelInit+0x178>)
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	2b01      	cmp	r3, #1
 8003b52:	d125      	bne.n	8003ba0 <HAL_DFSDM_ChannelInit+0x90>
  {
    assert_param(IS_DFSDM_CHANNEL_OUTPUT_CLOCK(hdfsdm_channel->Init.OutputClock.Selection));
    /* Set the output serial clock source */
    DFSDM1_Channel0->CHCFGR1 &= ~(DFSDM_CHCFGR1_CKOUTSRC);
 8003b54:	4b4d      	ldr	r3, [pc, #308]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	4a4c      	ldr	r2, [pc, #304]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b5a:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8003b5e:	6013      	str	r3, [r2, #0]
    DFSDM1_Channel0->CHCFGR1 |= hdfsdm_channel->Init.OutputClock.Selection;
 8003b60:	4b4a      	ldr	r3, [pc, #296]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b62:	681a      	ldr	r2, [r3, #0]
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	689b      	ldr	r3, [r3, #8]
 8003b68:	4948      	ldr	r1, [pc, #288]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b6a:	4313      	orrs	r3, r2
 8003b6c:	600b      	str	r3, [r1, #0]

    /* Reset clock divider */
    DFSDM1_Channel0->CHCFGR1 &= ~(DFSDM_CHCFGR1_CKOUTDIV);
 8003b6e:	4b47      	ldr	r3, [pc, #284]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b70:	681b      	ldr	r3, [r3, #0]
 8003b72:	4a46      	ldr	r2, [pc, #280]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b74:	f423 037f 	bic.w	r3, r3, #16711680	; 0xff0000
 8003b78:	6013      	str	r3, [r2, #0]
    if (hdfsdm_channel->Init.OutputClock.Activation == ENABLE)
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	791b      	ldrb	r3, [r3, #4]
 8003b7e:	2b01      	cmp	r3, #1
 8003b80:	d108      	bne.n	8003b94 <HAL_DFSDM_ChannelInit+0x84>
    {
      assert_param(IS_DFSDM_CHANNEL_OUTPUT_CLOCK_DIVIDER(hdfsdm_channel->Init.OutputClock.Divider));
      /* Set the output clock divider */
      DFSDM1_Channel0->CHCFGR1 |= (uint32_t)((hdfsdm_channel->Init.OutputClock.Divider - 1U) <<
 8003b82:	4b42      	ldr	r3, [pc, #264]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b84:	681a      	ldr	r2, [r3, #0]
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	68db      	ldr	r3, [r3, #12]
 8003b8a:	3b01      	subs	r3, #1
 8003b8c:	041b      	lsls	r3, r3, #16
 8003b8e:	493f      	ldr	r1, [pc, #252]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b90:	4313      	orrs	r3, r2
 8003b92:	600b      	str	r3, [r1, #0]
                                             DFSDM_CHCFGR1_CKOUTDIV_Pos);
    }

    /* enable the DFSDM global interface */
    DFSDM1_Channel0->CHCFGR1 |= DFSDM_CHCFGR1_DFSDMEN;
 8003b94:	4b3d      	ldr	r3, [pc, #244]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b96:	681b      	ldr	r3, [r3, #0]
 8003b98:	4a3c      	ldr	r2, [pc, #240]	; (8003c8c <HAL_DFSDM_ChannelInit+0x17c>)
 8003b9a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8003b9e:	6013      	str	r3, [r2, #0]
  }

  /* Set channel input parameters */
  hdfsdm_channel->Instance->CHCFGR1 &= ~(DFSDM_CHCFGR1_DATPACK | DFSDM_CHCFGR1_DATMPX |
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	681a      	ldr	r2, [r3, #0]
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	681b      	ldr	r3, [r3, #0]
 8003baa:	f422 4271 	bic.w	r2, r2, #61696	; 0xf100
 8003bae:	601a      	str	r2, [r3, #0]
                                         DFSDM_CHCFGR1_CHINSEL);
  hdfsdm_channel->Instance->CHCFGR1 |= (hdfsdm_channel->Init.Input.Multiplexer |
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	6819      	ldr	r1, [r3, #0]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	691a      	ldr	r2, [r3, #16]
                                        hdfsdm_channel->Init.Input.DataPacking |
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	695b      	ldr	r3, [r3, #20]
  hdfsdm_channel->Instance->CHCFGR1 |= (hdfsdm_channel->Init.Input.Multiplexer |
 8003bbe:	431a      	orrs	r2, r3
                                        hdfsdm_channel->Init.Input.Pins);
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	699b      	ldr	r3, [r3, #24]
                                        hdfsdm_channel->Init.Input.DataPacking |
 8003bc4:	431a      	orrs	r2, r3
  hdfsdm_channel->Instance->CHCFGR1 |= (hdfsdm_channel->Init.Input.Multiplexer |
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	430a      	orrs	r2, r1
 8003bcc:	601a      	str	r2, [r3, #0]

  /* Set serial interface parameters */
  hdfsdm_channel->Instance->CHCFGR1 &= ~(DFSDM_CHCFGR1_SITP | DFSDM_CHCFGR1_SPICKSEL);
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	681a      	ldr	r2, [r3, #0]
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	f022 020f 	bic.w	r2, r2, #15
 8003bdc:	601a      	str	r2, [r3, #0]
  hdfsdm_channel->Instance->CHCFGR1 |= (hdfsdm_channel->Init.SerialInterface.Type |
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	6819      	ldr	r1, [r3, #0]
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	69da      	ldr	r2, [r3, #28]
                                        hdfsdm_channel->Init.SerialInterface.SpiClock);
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	6a1b      	ldr	r3, [r3, #32]
  hdfsdm_channel->Instance->CHCFGR1 |= (hdfsdm_channel->Init.SerialInterface.Type |
 8003bec:	431a      	orrs	r2, r3
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	430a      	orrs	r2, r1
 8003bf4:	601a      	str	r2, [r3, #0]

  /* Set analog watchdog parameters */
  hdfsdm_channel->Instance->CHAWSCDR &= ~(DFSDM_CHAWSCDR_AWFORD | DFSDM_CHAWSCDR_AWFOSR);
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	689a      	ldr	r2, [r3, #8]
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	f422 025f 	bic.w	r2, r2, #14614528	; 0xdf0000
 8003c04:	609a      	str	r2, [r3, #8]
  hdfsdm_channel->Instance->CHAWSCDR |= (hdfsdm_channel->Init.Awd.FilterOrder |
 8003c06:	687b      	ldr	r3, [r7, #4]
 8003c08:	681b      	ldr	r3, [r3, #0]
 8003c0a:	6899      	ldr	r1, [r3, #8]
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                                         ((hdfsdm_channel->Init.Awd.Oversampling - 1U) << DFSDM_CHAWSCDR_AWFOSR_Pos));
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c14:	3b01      	subs	r3, #1
 8003c16:	041b      	lsls	r3, r3, #16
  hdfsdm_channel->Instance->CHAWSCDR |= (hdfsdm_channel->Init.Awd.FilterOrder |
 8003c18:	431a      	orrs	r2, r3
 8003c1a:	687b      	ldr	r3, [r7, #4]
 8003c1c:	681b      	ldr	r3, [r3, #0]
 8003c1e:	430a      	orrs	r2, r1
 8003c20:	609a      	str	r2, [r3, #8]

  /* Set channel offset and right bit shift */
  hdfsdm_channel->Instance->CHCFGR2 &= ~(DFSDM_CHCFGR2_OFFSET | DFSDM_CHCFGR2_DTRBS);
 8003c22:	687b      	ldr	r3, [r7, #4]
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	685a      	ldr	r2, [r3, #4]
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	f002 0207 	and.w	r2, r2, #7
 8003c30:	605a      	str	r2, [r3, #4]
  hdfsdm_channel->Instance->CHCFGR2 |= (((uint32_t) hdfsdm_channel->Init.Offset << DFSDM_CHCFGR2_OFFSET_Pos) |
 8003c32:	687b      	ldr	r3, [r7, #4]
 8003c34:	681b      	ldr	r3, [r3, #0]
 8003c36:	6859      	ldr	r1, [r3, #4]
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c3c:	021a      	lsls	r2, r3, #8
                                        (hdfsdm_channel->Init.RightBitShift << DFSDM_CHCFGR2_DTRBS_Pos));
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003c42:	00db      	lsls	r3, r3, #3
  hdfsdm_channel->Instance->CHCFGR2 |= (((uint32_t) hdfsdm_channel->Init.Offset << DFSDM_CHCFGR2_OFFSET_Pos) |
 8003c44:	431a      	orrs	r2, r3
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	430a      	orrs	r2, r1
 8003c4c:	605a      	str	r2, [r3, #4]

  /* Enable DFSDM channel */
  hdfsdm_channel->Instance->CHCFGR1 |= DFSDM_CHCFGR1_CHEN;
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	681a      	ldr	r2, [r3, #0]
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003c5c:	601a      	str	r2, [r3, #0]

  /* Set DFSDM Channel to ready state */
  hdfsdm_channel->State = HAL_DFSDM_CHANNEL_STATE_READY;
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	2201      	movs	r2, #1
 8003c62:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  /* Store channel handle in DFSDM channel handle table */
  a_dfsdm1ChannelHandle[DFSDM_GetChannelFromInstance(hdfsdm_channel->Instance)] = hdfsdm_channel;
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	4618      	mov	r0, r3
 8003c6c:	f000 f810 	bl	8003c90 <DFSDM_GetChannelFromInstance>
 8003c70:	4602      	mov	r2, r0
 8003c72:	4904      	ldr	r1, [pc, #16]	; (8003c84 <HAL_DFSDM_ChannelInit+0x174>)
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

  return HAL_OK;
 8003c7a:	2300      	movs	r3, #0
}
 8003c7c:	4618      	mov	r0, r3
 8003c7e:	3708      	adds	r7, #8
 8003c80:	46bd      	mov	sp, r7
 8003c82:	bd80      	pop	{r7, pc}
 8003c84:	20011258 	.word	0x20011258
 8003c88:	20011254 	.word	0x20011254
 8003c8c:	40016000 	.word	0x40016000

08003c90 <DFSDM_GetChannelFromInstance>:
  * @brief  This function allows to get the channel number from channel instance.
  * @param  Instance DFSDM channel instance.
  * @retval Channel number.
  */
static uint32_t DFSDM_GetChannelFromInstance(const DFSDM_Channel_TypeDef *Instance)
{
 8003c90:	b480      	push	{r7}
 8003c92:	b085      	sub	sp, #20
 8003c94:	af00      	add	r7, sp, #0
 8003c96:	6078      	str	r0, [r7, #4]
  uint32_t channel;

  /* Get channel from instance */
  if (Instance == DFSDM1_Channel0)
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	4a1c      	ldr	r2, [pc, #112]	; (8003d0c <DFSDM_GetChannelFromInstance+0x7c>)
 8003c9c:	4293      	cmp	r3, r2
 8003c9e:	d102      	bne.n	8003ca6 <DFSDM_GetChannelFromInstance+0x16>
  {
    channel = 0;
 8003ca0:	2300      	movs	r3, #0
 8003ca2:	60fb      	str	r3, [r7, #12]
 8003ca4:	e02b      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
  else if (Instance == DFSDM1_Channel1)
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	4a19      	ldr	r2, [pc, #100]	; (8003d10 <DFSDM_GetChannelFromInstance+0x80>)
 8003caa:	4293      	cmp	r3, r2
 8003cac:	d102      	bne.n	8003cb4 <DFSDM_GetChannelFromInstance+0x24>
  {
    channel = 1;
 8003cae:	2301      	movs	r3, #1
 8003cb0:	60fb      	str	r3, [r7, #12]
 8003cb2:	e024      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
  else if (Instance == DFSDM1_Channel2)
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	4a17      	ldr	r2, [pc, #92]	; (8003d14 <DFSDM_GetChannelFromInstance+0x84>)
 8003cb8:	4293      	cmp	r3, r2
 8003cba:	d102      	bne.n	8003cc2 <DFSDM_GetChannelFromInstance+0x32>
  {
    channel = 2;
 8003cbc:	2302      	movs	r3, #2
 8003cbe:	60fb      	str	r3, [r7, #12]
 8003cc0:	e01d      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx) || \
    defined(STM32L496xx) || defined(STM32L4A6xx) || \
    defined(STM32L4R5xx) || defined(STM32L4R7xx) || defined(STM32L4R9xx) || defined(STM32L4S5xx) || defined(STM32L4S7xx) || defined(STM32L4S9xx)
  else if (Instance == DFSDM1_Channel4)
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	4a14      	ldr	r2, [pc, #80]	; (8003d18 <DFSDM_GetChannelFromInstance+0x88>)
 8003cc6:	4293      	cmp	r3, r2
 8003cc8:	d102      	bne.n	8003cd0 <DFSDM_GetChannelFromInstance+0x40>
  {
    channel = 4;
 8003cca:	2304      	movs	r3, #4
 8003ccc:	60fb      	str	r3, [r7, #12]
 8003cce:	e016      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
  else if (Instance == DFSDM1_Channel5)
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	4a12      	ldr	r2, [pc, #72]	; (8003d1c <DFSDM_GetChannelFromInstance+0x8c>)
 8003cd4:	4293      	cmp	r3, r2
 8003cd6:	d102      	bne.n	8003cde <DFSDM_GetChannelFromInstance+0x4e>
  {
    channel = 5;
 8003cd8:	2305      	movs	r3, #5
 8003cda:	60fb      	str	r3, [r7, #12]
 8003cdc:	e00f      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
  else if (Instance == DFSDM1_Channel6)
 8003cde:	687b      	ldr	r3, [r7, #4]
 8003ce0:	4a0f      	ldr	r2, [pc, #60]	; (8003d20 <DFSDM_GetChannelFromInstance+0x90>)
 8003ce2:	4293      	cmp	r3, r2
 8003ce4:	d102      	bne.n	8003cec <DFSDM_GetChannelFromInstance+0x5c>
  {
    channel = 6;
 8003ce6:	2306      	movs	r3, #6
 8003ce8:	60fb      	str	r3, [r7, #12]
 8003cea:	e008      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
  else if (Instance == DFSDM1_Channel7)
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	4a0d      	ldr	r2, [pc, #52]	; (8003d24 <DFSDM_GetChannelFromInstance+0x94>)
 8003cf0:	4293      	cmp	r3, r2
 8003cf2:	d102      	bne.n	8003cfa <DFSDM_GetChannelFromInstance+0x6a>
  {
    channel = 7;
 8003cf4:	2307      	movs	r3, #7
 8003cf6:	60fb      	str	r3, [r7, #12]
 8003cf8:	e001      	b.n	8003cfe <DFSDM_GetChannelFromInstance+0x6e>
  }
#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx || STM32L496xx || STM32L4A6xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
  else /* DFSDM1_Channel3 */
  {
    channel = 3;
 8003cfa:	2303      	movs	r3, #3
 8003cfc:	60fb      	str	r3, [r7, #12]
  }

  return channel;
 8003cfe:	68fb      	ldr	r3, [r7, #12]
}
 8003d00:	4618      	mov	r0, r3
 8003d02:	3714      	adds	r7, #20
 8003d04:	46bd      	mov	sp, r7
 8003d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d0a:	4770      	bx	lr
 8003d0c:	40016000 	.word	0x40016000
 8003d10:	40016020 	.word	0x40016020
 8003d14:	40016040 	.word	0x40016040
 8003d18:	40016080 	.word	0x40016080
 8003d1c:	400160a0 	.word	0x400160a0
 8003d20:	400160c0 	.word	0x400160c0
 8003d24:	400160e0 	.word	0x400160e0

08003d28 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003d28:	b480      	push	{r7}
 8003d2a:	b087      	sub	sp, #28
 8003d2c:	af00      	add	r7, sp, #0
 8003d2e:	6078      	str	r0, [r7, #4]
 8003d30:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8003d32:	2300      	movs	r3, #0
 8003d34:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8003d36:	e17f      	b.n	8004038 <HAL_GPIO_Init+0x310>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	681a      	ldr	r2, [r3, #0]
 8003d3c:	2101      	movs	r1, #1
 8003d3e:	697b      	ldr	r3, [r7, #20]
 8003d40:	fa01 f303 	lsl.w	r3, r1, r3
 8003d44:	4013      	ands	r3, r2
 8003d46:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8003d48:	68fb      	ldr	r3, [r7, #12]
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	f000 8171 	beq.w	8004032 <HAL_GPIO_Init+0x30a>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003d50:	683b      	ldr	r3, [r7, #0]
 8003d52:	685b      	ldr	r3, [r3, #4]
 8003d54:	f003 0303 	and.w	r3, r3, #3
 8003d58:	2b01      	cmp	r3, #1
 8003d5a:	d005      	beq.n	8003d68 <HAL_GPIO_Init+0x40>
 8003d5c:	683b      	ldr	r3, [r7, #0]
 8003d5e:	685b      	ldr	r3, [r3, #4]
 8003d60:	f003 0303 	and.w	r3, r3, #3
 8003d64:	2b02      	cmp	r3, #2
 8003d66:	d130      	bne.n	8003dca <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	689b      	ldr	r3, [r3, #8]
 8003d6c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8003d6e:	697b      	ldr	r3, [r7, #20]
 8003d70:	005b      	lsls	r3, r3, #1
 8003d72:	2203      	movs	r2, #3
 8003d74:	fa02 f303 	lsl.w	r3, r2, r3
 8003d78:	43db      	mvns	r3, r3
 8003d7a:	693a      	ldr	r2, [r7, #16]
 8003d7c:	4013      	ands	r3, r2
 8003d7e:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8003d80:	683b      	ldr	r3, [r7, #0]
 8003d82:	68da      	ldr	r2, [r3, #12]
 8003d84:	697b      	ldr	r3, [r7, #20]
 8003d86:	005b      	lsls	r3, r3, #1
 8003d88:	fa02 f303 	lsl.w	r3, r2, r3
 8003d8c:	693a      	ldr	r2, [r7, #16]
 8003d8e:	4313      	orrs	r3, r2
 8003d90:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8003d92:	687b      	ldr	r3, [r7, #4]
 8003d94:	693a      	ldr	r2, [r7, #16]
 8003d96:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003d98:	687b      	ldr	r3, [r7, #4]
 8003d9a:	685b      	ldr	r3, [r3, #4]
 8003d9c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8003d9e:	2201      	movs	r2, #1
 8003da0:	697b      	ldr	r3, [r7, #20]
 8003da2:	fa02 f303 	lsl.w	r3, r2, r3
 8003da6:	43db      	mvns	r3, r3
 8003da8:	693a      	ldr	r2, [r7, #16]
 8003daa:	4013      	ands	r3, r2
 8003dac:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003dae:	683b      	ldr	r3, [r7, #0]
 8003db0:	685b      	ldr	r3, [r3, #4]
 8003db2:	091b      	lsrs	r3, r3, #4
 8003db4:	f003 0201 	and.w	r2, r3, #1
 8003db8:	697b      	ldr	r3, [r7, #20]
 8003dba:	fa02 f303 	lsl.w	r3, r2, r3
 8003dbe:	693a      	ldr	r2, [r7, #16]
 8003dc0:	4313      	orrs	r3, r2
 8003dc2:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	693a      	ldr	r2, [r7, #16]
 8003dc8:	605a      	str	r2, [r3, #4]
      }

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx)

      /* In case of Analog mode, check if ADC control mode is selected */
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 8003dca:	683b      	ldr	r3, [r7, #0]
 8003dcc:	685b      	ldr	r3, [r3, #4]
 8003dce:	f003 0303 	and.w	r3, r3, #3
 8003dd2:	2b03      	cmp	r3, #3
 8003dd4:	d118      	bne.n	8003e08 <HAL_GPIO_Init+0xe0>
      {
        /* Configure the IO Output Type */
        temp = GPIOx->ASCR;
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003dda:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8003ddc:	2201      	movs	r2, #1
 8003dde:	697b      	ldr	r3, [r7, #20]
 8003de0:	fa02 f303 	lsl.w	r3, r2, r3
 8003de4:	43db      	mvns	r3, r3
 8003de6:	693a      	ldr	r2, [r7, #16]
 8003de8:	4013      	ands	r3, r2
 8003dea:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_MODE_ANALOG_ADC_CONTROL) >> 3) << position);
 8003dec:	683b      	ldr	r3, [r7, #0]
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	08db      	lsrs	r3, r3, #3
 8003df2:	f003 0201 	and.w	r2, r3, #1
 8003df6:	697b      	ldr	r3, [r7, #20]
 8003df8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dfc:	693a      	ldr	r2, [r7, #16]
 8003dfe:	4313      	orrs	r3, r2
 8003e00:	613b      	str	r3, [r7, #16]
        GPIOx->ASCR = temp;
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	693a      	ldr	r2, [r7, #16]
 8003e06:	62da      	str	r2, [r3, #44]	; 0x2c
      }

#endif /* STM32L471xx || STM32L475xx || STM32L476xx || STM32L485xx || STM32L486xx */

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003e08:	683b      	ldr	r3, [r7, #0]
 8003e0a:	685b      	ldr	r3, [r3, #4]
 8003e0c:	f003 0303 	and.w	r3, r3, #3
 8003e10:	2b03      	cmp	r3, #3
 8003e12:	d017      	beq.n	8003e44 <HAL_GPIO_Init+0x11c>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        temp = GPIOx->PUPDR;
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	68db      	ldr	r3, [r3, #12]
 8003e18:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8003e1a:	697b      	ldr	r3, [r7, #20]
 8003e1c:	005b      	lsls	r3, r3, #1
 8003e1e:	2203      	movs	r2, #3
 8003e20:	fa02 f303 	lsl.w	r3, r2, r3
 8003e24:	43db      	mvns	r3, r3
 8003e26:	693a      	ldr	r2, [r7, #16]
 8003e28:	4013      	ands	r3, r2
 8003e2a:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003e2c:	683b      	ldr	r3, [r7, #0]
 8003e2e:	689a      	ldr	r2, [r3, #8]
 8003e30:	697b      	ldr	r3, [r7, #20]
 8003e32:	005b      	lsls	r3, r3, #1
 8003e34:	fa02 f303 	lsl.w	r3, r2, r3
 8003e38:	693a      	ldr	r2, [r7, #16]
 8003e3a:	4313      	orrs	r3, r2
 8003e3c:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	693a      	ldr	r2, [r7, #16]
 8003e42:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003e44:	683b      	ldr	r3, [r7, #0]
 8003e46:	685b      	ldr	r3, [r3, #4]
 8003e48:	f003 0303 	and.w	r3, r3, #3
 8003e4c:	2b02      	cmp	r3, #2
 8003e4e:	d123      	bne.n	8003e98 <HAL_GPIO_Init+0x170>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 8003e50:	697b      	ldr	r3, [r7, #20]
 8003e52:	08da      	lsrs	r2, r3, #3
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	3208      	adds	r2, #8
 8003e58:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003e5c:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8003e5e:	697b      	ldr	r3, [r7, #20]
 8003e60:	f003 0307 	and.w	r3, r3, #7
 8003e64:	009b      	lsls	r3, r3, #2
 8003e66:	220f      	movs	r2, #15
 8003e68:	fa02 f303 	lsl.w	r3, r2, r3
 8003e6c:	43db      	mvns	r3, r3
 8003e6e:	693a      	ldr	r2, [r7, #16]
 8003e70:	4013      	ands	r3, r2
 8003e72:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8003e74:	683b      	ldr	r3, [r7, #0]
 8003e76:	691a      	ldr	r2, [r3, #16]
 8003e78:	697b      	ldr	r3, [r7, #20]
 8003e7a:	f003 0307 	and.w	r3, r3, #7
 8003e7e:	009b      	lsls	r3, r3, #2
 8003e80:	fa02 f303 	lsl.w	r3, r2, r3
 8003e84:	693a      	ldr	r2, [r7, #16]
 8003e86:	4313      	orrs	r3, r2
 8003e88:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8003e8a:	697b      	ldr	r3, [r7, #20]
 8003e8c:	08da      	lsrs	r2, r3, #3
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	3208      	adds	r2, #8
 8003e92:	6939      	ldr	r1, [r7, #16]
 8003e94:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003e98:	687b      	ldr	r3, [r7, #4]
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8003e9e:	697b      	ldr	r3, [r7, #20]
 8003ea0:	005b      	lsls	r3, r3, #1
 8003ea2:	2203      	movs	r2, #3
 8003ea4:	fa02 f303 	lsl.w	r3, r2, r3
 8003ea8:	43db      	mvns	r3, r3
 8003eaa:	693a      	ldr	r2, [r7, #16]
 8003eac:	4013      	ands	r3, r2
 8003eae:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8003eb0:	683b      	ldr	r3, [r7, #0]
 8003eb2:	685b      	ldr	r3, [r3, #4]
 8003eb4:	f003 0203 	and.w	r2, r3, #3
 8003eb8:	697b      	ldr	r3, [r7, #20]
 8003eba:	005b      	lsls	r3, r3, #1
 8003ebc:	fa02 f303 	lsl.w	r3, r2, r3
 8003ec0:	693a      	ldr	r2, [r7, #16]
 8003ec2:	4313      	orrs	r3, r2
 8003ec4:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8003ec6:	687b      	ldr	r3, [r7, #4]
 8003ec8:	693a      	ldr	r2, [r7, #16]
 8003eca:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8003ecc:	683b      	ldr	r3, [r7, #0]
 8003ece:	685b      	ldr	r3, [r3, #4]
 8003ed0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003ed4:	2b00      	cmp	r3, #0
 8003ed6:	f000 80ac 	beq.w	8004032 <HAL_GPIO_Init+0x30a>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003eda:	4b5f      	ldr	r3, [pc, #380]	; (8004058 <HAL_GPIO_Init+0x330>)
 8003edc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003ede:	4a5e      	ldr	r2, [pc, #376]	; (8004058 <HAL_GPIO_Init+0x330>)
 8003ee0:	f043 0301 	orr.w	r3, r3, #1
 8003ee4:	6613      	str	r3, [r2, #96]	; 0x60
 8003ee6:	4b5c      	ldr	r3, [pc, #368]	; (8004058 <HAL_GPIO_Init+0x330>)
 8003ee8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003eea:	f003 0301 	and.w	r3, r3, #1
 8003eee:	60bb      	str	r3, [r7, #8]
 8003ef0:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8003ef2:	4a5a      	ldr	r2, [pc, #360]	; (800405c <HAL_GPIO_Init+0x334>)
 8003ef4:	697b      	ldr	r3, [r7, #20]
 8003ef6:	089b      	lsrs	r3, r3, #2
 8003ef8:	3302      	adds	r3, #2
 8003efa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003efe:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8003f00:	697b      	ldr	r3, [r7, #20]
 8003f02:	f003 0303 	and.w	r3, r3, #3
 8003f06:	009b      	lsls	r3, r3, #2
 8003f08:	220f      	movs	r2, #15
 8003f0a:	fa02 f303 	lsl.w	r3, r2, r3
 8003f0e:	43db      	mvns	r3, r3
 8003f10:	693a      	ldr	r2, [r7, #16]
 8003f12:	4013      	ands	r3, r2
 8003f14:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8003f1c:	d025      	beq.n	8003f6a <HAL_GPIO_Init+0x242>
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	4a4f      	ldr	r2, [pc, #316]	; (8004060 <HAL_GPIO_Init+0x338>)
 8003f22:	4293      	cmp	r3, r2
 8003f24:	d01f      	beq.n	8003f66 <HAL_GPIO_Init+0x23e>
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	4a4e      	ldr	r2, [pc, #312]	; (8004064 <HAL_GPIO_Init+0x33c>)
 8003f2a:	4293      	cmp	r3, r2
 8003f2c:	d019      	beq.n	8003f62 <HAL_GPIO_Init+0x23a>
 8003f2e:	687b      	ldr	r3, [r7, #4]
 8003f30:	4a4d      	ldr	r2, [pc, #308]	; (8004068 <HAL_GPIO_Init+0x340>)
 8003f32:	4293      	cmp	r3, r2
 8003f34:	d013      	beq.n	8003f5e <HAL_GPIO_Init+0x236>
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	4a4c      	ldr	r2, [pc, #304]	; (800406c <HAL_GPIO_Init+0x344>)
 8003f3a:	4293      	cmp	r3, r2
 8003f3c:	d00d      	beq.n	8003f5a <HAL_GPIO_Init+0x232>
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	4a4b      	ldr	r2, [pc, #300]	; (8004070 <HAL_GPIO_Init+0x348>)
 8003f42:	4293      	cmp	r3, r2
 8003f44:	d007      	beq.n	8003f56 <HAL_GPIO_Init+0x22e>
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	4a4a      	ldr	r2, [pc, #296]	; (8004074 <HAL_GPIO_Init+0x34c>)
 8003f4a:	4293      	cmp	r3, r2
 8003f4c:	d101      	bne.n	8003f52 <HAL_GPIO_Init+0x22a>
 8003f4e:	2306      	movs	r3, #6
 8003f50:	e00c      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f52:	2307      	movs	r3, #7
 8003f54:	e00a      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f56:	2305      	movs	r3, #5
 8003f58:	e008      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f5a:	2304      	movs	r3, #4
 8003f5c:	e006      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f5e:	2303      	movs	r3, #3
 8003f60:	e004      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f62:	2302      	movs	r3, #2
 8003f64:	e002      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f66:	2301      	movs	r3, #1
 8003f68:	e000      	b.n	8003f6c <HAL_GPIO_Init+0x244>
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	697a      	ldr	r2, [r7, #20]
 8003f6e:	f002 0203 	and.w	r2, r2, #3
 8003f72:	0092      	lsls	r2, r2, #2
 8003f74:	4093      	lsls	r3, r2
 8003f76:	693a      	ldr	r2, [r7, #16]
 8003f78:	4313      	orrs	r3, r2
 8003f7a:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8003f7c:	4937      	ldr	r1, [pc, #220]	; (800405c <HAL_GPIO_Init+0x334>)
 8003f7e:	697b      	ldr	r3, [r7, #20]
 8003f80:	089b      	lsrs	r3, r3, #2
 8003f82:	3302      	adds	r3, #2
 8003f84:	693a      	ldr	r2, [r7, #16]
 8003f86:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8003f8a:	4b3b      	ldr	r3, [pc, #236]	; (8004078 <HAL_GPIO_Init+0x350>)
 8003f8c:	689b      	ldr	r3, [r3, #8]
 8003f8e:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003f90:	68fb      	ldr	r3, [r7, #12]
 8003f92:	43db      	mvns	r3, r3
 8003f94:	693a      	ldr	r2, [r7, #16]
 8003f96:	4013      	ands	r3, r2
 8003f98:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8003f9a:	683b      	ldr	r3, [r7, #0]
 8003f9c:	685b      	ldr	r3, [r3, #4]
 8003f9e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003fa2:	2b00      	cmp	r3, #0
 8003fa4:	d003      	beq.n	8003fae <HAL_GPIO_Init+0x286>
        {
          temp |= iocurrent;
 8003fa6:	693a      	ldr	r2, [r7, #16]
 8003fa8:	68fb      	ldr	r3, [r7, #12]
 8003faa:	4313      	orrs	r3, r2
 8003fac:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR1 = temp;
 8003fae:	4a32      	ldr	r2, [pc, #200]	; (8004078 <HAL_GPIO_Init+0x350>)
 8003fb0:	693b      	ldr	r3, [r7, #16]
 8003fb2:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR1;
 8003fb4:	4b30      	ldr	r3, [pc, #192]	; (8004078 <HAL_GPIO_Init+0x350>)
 8003fb6:	68db      	ldr	r3, [r3, #12]
 8003fb8:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003fba:	68fb      	ldr	r3, [r7, #12]
 8003fbc:	43db      	mvns	r3, r3
 8003fbe:	693a      	ldr	r2, [r7, #16]
 8003fc0:	4013      	ands	r3, r2
 8003fc2:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8003fc4:	683b      	ldr	r3, [r7, #0]
 8003fc6:	685b      	ldr	r3, [r3, #4]
 8003fc8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003fcc:	2b00      	cmp	r3, #0
 8003fce:	d003      	beq.n	8003fd8 <HAL_GPIO_Init+0x2b0>
        {
          temp |= iocurrent;
 8003fd0:	693a      	ldr	r2, [r7, #16]
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	4313      	orrs	r3, r2
 8003fd6:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR1 = temp;
 8003fd8:	4a27      	ldr	r2, [pc, #156]	; (8004078 <HAL_GPIO_Init+0x350>)
 8003fda:	693b      	ldr	r3, [r7, #16]
 8003fdc:	60d3      	str	r3, [r2, #12]

        /* Clear EXTI line configuration */
        temp = EXTI->EMR1;
 8003fde:	4b26      	ldr	r3, [pc, #152]	; (8004078 <HAL_GPIO_Init+0x350>)
 8003fe0:	685b      	ldr	r3, [r3, #4]
 8003fe2:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	43db      	mvns	r3, r3
 8003fe8:	693a      	ldr	r2, [r7, #16]
 8003fea:	4013      	ands	r3, r2
 8003fec:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8003fee:	683b      	ldr	r3, [r7, #0]
 8003ff0:	685b      	ldr	r3, [r3, #4]
 8003ff2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003ff6:	2b00      	cmp	r3, #0
 8003ff8:	d003      	beq.n	8004002 <HAL_GPIO_Init+0x2da>
        {
          temp |= iocurrent;
 8003ffa:	693a      	ldr	r2, [r7, #16]
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	4313      	orrs	r3, r2
 8004000:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR1 = temp;
 8004002:	4a1d      	ldr	r2, [pc, #116]	; (8004078 <HAL_GPIO_Init+0x350>)
 8004004:	693b      	ldr	r3, [r7, #16]
 8004006:	6053      	str	r3, [r2, #4]

        temp = EXTI->IMR1;
 8004008:	4b1b      	ldr	r3, [pc, #108]	; (8004078 <HAL_GPIO_Init+0x350>)
 800400a:	681b      	ldr	r3, [r3, #0]
 800400c:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	43db      	mvns	r3, r3
 8004012:	693a      	ldr	r2, [r7, #16]
 8004014:	4013      	ands	r3, r2
 8004016:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8004018:	683b      	ldr	r3, [r7, #0]
 800401a:	685b      	ldr	r3, [r3, #4]
 800401c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004020:	2b00      	cmp	r3, #0
 8004022:	d003      	beq.n	800402c <HAL_GPIO_Init+0x304>
        {
          temp |= iocurrent;
 8004024:	693a      	ldr	r2, [r7, #16]
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	4313      	orrs	r3, r2
 800402a:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR1 = temp;
 800402c:	4a12      	ldr	r2, [pc, #72]	; (8004078 <HAL_GPIO_Init+0x350>)
 800402e:	693b      	ldr	r3, [r7, #16]
 8004030:	6013      	str	r3, [r2, #0]
      }
    }

    position++;
 8004032:	697b      	ldr	r3, [r7, #20]
 8004034:	3301      	adds	r3, #1
 8004036:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8004038:	683b      	ldr	r3, [r7, #0]
 800403a:	681a      	ldr	r2, [r3, #0]
 800403c:	697b      	ldr	r3, [r7, #20]
 800403e:	fa22 f303 	lsr.w	r3, r2, r3
 8004042:	2b00      	cmp	r3, #0
 8004044:	f47f ae78 	bne.w	8003d38 <HAL_GPIO_Init+0x10>
  }
}
 8004048:	bf00      	nop
 800404a:	bf00      	nop
 800404c:	371c      	adds	r7, #28
 800404e:	46bd      	mov	sp, r7
 8004050:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004054:	4770      	bx	lr
 8004056:	bf00      	nop
 8004058:	40021000 	.word	0x40021000
 800405c:	40010000 	.word	0x40010000
 8004060:	48000400 	.word	0x48000400
 8004064:	48000800 	.word	0x48000800
 8004068:	48000c00 	.word	0x48000c00
 800406c:	48001000 	.word	0x48001000
 8004070:	48001400 	.word	0x48001400
 8004074:	48001800 	.word	0x48001800
 8004078:	40010400 	.word	0x40010400

0800407c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 800407c:	b480      	push	{r7}
 800407e:	b083      	sub	sp, #12
 8004080:	af00      	add	r7, sp, #0
 8004082:	6078      	str	r0, [r7, #4]
 8004084:	460b      	mov	r3, r1
 8004086:	807b      	strh	r3, [r7, #2]
 8004088:	4613      	mov	r3, r2
 800408a:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800408c:	787b      	ldrb	r3, [r7, #1]
 800408e:	2b00      	cmp	r3, #0
 8004090:	d003      	beq.n	800409a <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004092:	887a      	ldrh	r2, [r7, #2]
 8004094:	687b      	ldr	r3, [r7, #4]
 8004096:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8004098:	e002      	b.n	80040a0 <HAL_GPIO_WritePin+0x24>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 800409a:	887a      	ldrh	r2, [r7, #2]
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	629a      	str	r2, [r3, #40]	; 0x28
}
 80040a0:	bf00      	nop
 80040a2:	370c      	adds	r7, #12
 80040a4:	46bd      	mov	sp, r7
 80040a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040aa:	4770      	bx	lr

080040ac <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  Handle EXTI interrupt request.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80040ac:	b580      	push	{r7, lr}
 80040ae:	b082      	sub	sp, #8
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	4603      	mov	r3, r0
 80040b4:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != 0x00u)
 80040b6:	4b08      	ldr	r3, [pc, #32]	; (80040d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80040b8:	695a      	ldr	r2, [r3, #20]
 80040ba:	88fb      	ldrh	r3, [r7, #6]
 80040bc:	4013      	ands	r3, r2
 80040be:	2b00      	cmp	r3, #0
 80040c0:	d006      	beq.n	80040d0 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80040c2:	4a05      	ldr	r2, [pc, #20]	; (80040d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80040c4:	88fb      	ldrh	r3, [r7, #6]
 80040c6:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80040c8:	88fb      	ldrh	r3, [r7, #6]
 80040ca:	4618      	mov	r0, r3
 80040cc:	f000 f806 	bl	80040dc <HAL_GPIO_EXTI_Callback>
  }
}
 80040d0:	bf00      	nop
 80040d2:	3708      	adds	r7, #8
 80040d4:	46bd      	mov	sp, r7
 80040d6:	bd80      	pop	{r7, pc}
 80040d8:	40010400 	.word	0x40010400

080040dc <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callback.
  * @param  GPIO_Pin Specifies the port pin connected to corresponding EXTI line.
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80040dc:	b480      	push	{r7}
 80040de:	b083      	sub	sp, #12
 80040e0:	af00      	add	r7, sp, #0
 80040e2:	4603      	mov	r3, r0
 80040e4:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 80040e6:	bf00      	nop
 80040e8:	370c      	adds	r7, #12
 80040ea:	46bd      	mov	sp, r7
 80040ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040f0:	4770      	bx	lr

080040f2 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80040f2:	b580      	push	{r7, lr}
 80040f4:	b082      	sub	sp, #8
 80040f6:	af00      	add	r7, sp, #0
 80040f8:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d101      	bne.n	8004104 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004100:	2301      	movs	r3, #1
 8004102:	e081      	b.n	8004208 <HAL_I2C_Init+0x116>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800410a:	b2db      	uxtb	r3, r3
 800410c:	2b00      	cmp	r3, #0
 800410e:	d106      	bne.n	800411e <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	2200      	movs	r2, #0
 8004114:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 8004118:	6878      	ldr	r0, [r7, #4]
 800411a:	f7fe fff1 	bl	8003100 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	2224      	movs	r2, #36	; 0x24
 8004122:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004126:	687b      	ldr	r3, [r7, #4]
 8004128:	681b      	ldr	r3, [r3, #0]
 800412a:	681a      	ldr	r2, [r3, #0]
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	f022 0201 	bic.w	r2, r2, #1
 8004134:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	685a      	ldr	r2, [r3, #4]
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	681b      	ldr	r3, [r3, #0]
 800413e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8004142:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	689a      	ldr	r2, [r3, #8]
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004152:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	68db      	ldr	r3, [r3, #12]
 8004158:	2b01      	cmp	r3, #1
 800415a:	d107      	bne.n	800416c <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	689a      	ldr	r2, [r3, #8]
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004168:	609a      	str	r2, [r3, #8]
 800416a:	e006      	b.n	800417a <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 800416c:	687b      	ldr	r3, [r7, #4]
 800416e:	689a      	ldr	r2, [r3, #8]
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8004178:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 800417a:	687b      	ldr	r3, [r7, #4]
 800417c:	68db      	ldr	r3, [r3, #12]
 800417e:	2b02      	cmp	r3, #2
 8004180:	d104      	bne.n	800418c <HAL_I2C_Init+0x9a>
  {
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	681b      	ldr	r3, [r3, #0]
 8004186:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800418a:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	685b      	ldr	r3, [r3, #4]
 8004192:	687a      	ldr	r2, [r7, #4]
 8004194:	6812      	ldr	r2, [r2, #0]
 8004196:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800419a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800419e:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	68da      	ldr	r2, [r3, #12]
 80041a6:	687b      	ldr	r3, [r7, #4]
 80041a8:	681b      	ldr	r3, [r3, #0]
 80041aa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80041ae:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	691a      	ldr	r2, [r3, #16]
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	695b      	ldr	r3, [r3, #20]
 80041b8:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 80041bc:	687b      	ldr	r3, [r7, #4]
 80041be:	699b      	ldr	r3, [r3, #24]
 80041c0:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	681b      	ldr	r3, [r3, #0]
 80041c6:	430a      	orrs	r2, r1
 80041c8:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	69d9      	ldr	r1, [r3, #28]
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	6a1a      	ldr	r2, [r3, #32]
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	430a      	orrs	r2, r1
 80041d8:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	681a      	ldr	r2, [r3, #0]
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	f042 0201 	orr.w	r2, r2, #1
 80041e8:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80041ea:	687b      	ldr	r3, [r7, #4]
 80041ec:	2200      	movs	r2, #0
 80041ee:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	2220      	movs	r2, #32
 80041f4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	2200      	movs	r2, #0
 80041fc:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	2200      	movs	r2, #0
 8004202:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  return HAL_OK;
 8004206:	2300      	movs	r3, #0
}
 8004208:	4618      	mov	r0, r3
 800420a:	3708      	adds	r7, #8
 800420c:	46bd      	mov	sp, r7
 800420e:	bd80      	pop	{r7, pc}

08004210 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004210:	b480      	push	{r7}
 8004212:	b083      	sub	sp, #12
 8004214:	af00      	add	r7, sp, #0
 8004216:	6078      	str	r0, [r7, #4]
 8004218:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004220:	b2db      	uxtb	r3, r3
 8004222:	2b20      	cmp	r3, #32
 8004224:	d138      	bne.n	8004298 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800422c:	2b01      	cmp	r3, #1
 800422e:	d101      	bne.n	8004234 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8004230:	2302      	movs	r3, #2
 8004232:	e032      	b.n	800429a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	2201      	movs	r2, #1
 8004238:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800423c:	687b      	ldr	r3, [r7, #4]
 800423e:	2224      	movs	r2, #36	; 0x24
 8004240:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004244:	687b      	ldr	r3, [r7, #4]
 8004246:	681b      	ldr	r3, [r3, #0]
 8004248:	681a      	ldr	r2, [r3, #0]
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	f022 0201 	bic.w	r2, r2, #1
 8004252:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	681a      	ldr	r2, [r3, #0]
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004262:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	6819      	ldr	r1, [r3, #0]
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	683a      	ldr	r2, [r7, #0]
 8004270:	430a      	orrs	r2, r1
 8004272:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	681a      	ldr	r2, [r3, #0]
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	f042 0201 	orr.w	r2, r2, #1
 8004282:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	2220      	movs	r2, #32
 8004288:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	2200      	movs	r2, #0
 8004290:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8004294:	2300      	movs	r3, #0
 8004296:	e000      	b.n	800429a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8004298:	2302      	movs	r3, #2
  }
}
 800429a:	4618      	mov	r0, r3
 800429c:	370c      	adds	r7, #12
 800429e:	46bd      	mov	sp, r7
 80042a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042a4:	4770      	bx	lr

080042a6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80042a6:	b480      	push	{r7}
 80042a8:	b085      	sub	sp, #20
 80042aa:	af00      	add	r7, sp, #0
 80042ac:	6078      	str	r0, [r7, #4]
 80042ae:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80042b6:	b2db      	uxtb	r3, r3
 80042b8:	2b20      	cmp	r3, #32
 80042ba:	d139      	bne.n	8004330 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80042c2:	2b01      	cmp	r3, #1
 80042c4:	d101      	bne.n	80042ca <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80042c6:	2302      	movs	r3, #2
 80042c8:	e033      	b.n	8004332 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	2201      	movs	r2, #1
 80042ce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	2224      	movs	r2, #36	; 0x24
 80042d6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	681b      	ldr	r3, [r3, #0]
 80042de:	681a      	ldr	r2, [r3, #0]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	f022 0201 	bic.w	r2, r2, #1
 80042e8:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	681b      	ldr	r3, [r3, #0]
 80042f0:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80042f8:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80042fa:	683b      	ldr	r3, [r7, #0]
 80042fc:	021b      	lsls	r3, r3, #8
 80042fe:	68fa      	ldr	r2, [r7, #12]
 8004300:	4313      	orrs	r3, r2
 8004302:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8004304:	687b      	ldr	r3, [r7, #4]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	68fa      	ldr	r2, [r7, #12]
 800430a:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	681a      	ldr	r2, [r3, #0]
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	681b      	ldr	r3, [r3, #0]
 8004316:	f042 0201 	orr.w	r2, r2, #1
 800431a:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	2220      	movs	r2, #32
 8004320:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004324:	687b      	ldr	r3, [r7, #4]
 8004326:	2200      	movs	r2, #0
 8004328:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 800432c:	2300      	movs	r3, #0
 800432e:	e000      	b.n	8004332 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 8004330:	2302      	movs	r3, #2
  }
}
 8004332:	4618      	mov	r0, r3
 8004334:	3714      	adds	r7, #20
 8004336:	46bd      	mov	sp, r7
 8004338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800433c:	4770      	bx	lr

0800433e <HAL_PCD_Init>:
  *         parameters in the PCD_InitTypeDef and initialize the associated handle.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCD_Init(PCD_HandleTypeDef *hpcd)
{
 800433e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004340:	b08f      	sub	sp, #60	; 0x3c
 8004342:	af0a      	add	r7, sp, #40	; 0x28
 8004344:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx;
#endif /* defined (USB_OTG_FS) */
  uint8_t i;

  /* Check the PCD handle allocation */
  if (hpcd == NULL)
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	2b00      	cmp	r3, #0
 800434a:	d101      	bne.n	8004350 <HAL_PCD_Init+0x12>
  {
    return HAL_ERROR;
 800434c:	2301      	movs	r3, #1
 800434e:	e116      	b.n	800457e <HAL_PCD_Init+0x240>

  /* Check the parameters */
  assert_param(IS_PCD_ALL_INSTANCE(hpcd->Instance));

#if defined (USB_OTG_FS)
  USBx = hpcd->Instance;
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	60bb      	str	r3, [r7, #8]
#endif /* defined (USB_OTG_FS) */

  if (hpcd->State == HAL_PCD_STATE_RESET)
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
 800435c:	b2db      	uxtb	r3, r3
 800435e:	2b00      	cmp	r3, #0
 8004360:	d106      	bne.n	8004370 <HAL_PCD_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hpcd->Lock = HAL_UNLOCKED;
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	2200      	movs	r2, #0
 8004366:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc

    /* Init the low level hardware */
    hpcd->MspInitCallback(hpcd);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_PCD_MspInit(hpcd);
 800436a:	6878      	ldr	r0, [r7, #4]
 800436c:	f7ff f852 	bl	8003414 <HAL_PCD_MspInit>
#endif /* (USE_HAL_PCD_REGISTER_CALLBACKS) */
  }

  hpcd->State = HAL_PCD_STATE_BUSY;
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	2203      	movs	r2, #3
 8004374:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd

#if defined (USB_OTG_FS)
  /* Disable DMA mode for FS instance */
  if ((USBx->CID & (0x1U << 8)) == 0U)
 8004378:	68bb      	ldr	r3, [r7, #8]
 800437a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800437c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004380:	2b00      	cmp	r3, #0
 8004382:	d102      	bne.n	800438a <HAL_PCD_Init+0x4c>
  {
    hpcd->Init.dma_enable = 0U;
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	2200      	movs	r2, #0
 8004388:	611a      	str	r2, [r3, #16]
  }
#endif /* defined (USB_OTG_FS) */

  /* Disable the Interrupts */
  __HAL_PCD_DISABLE(hpcd);
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	681b      	ldr	r3, [r3, #0]
 800438e:	4618      	mov	r0, r3
 8004390:	f002 fb43 	bl	8006a1a <USB_DisableGlobalInt>

  /*Init the Core (common init.) */
  if (USB_CoreInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	603b      	str	r3, [r7, #0]
 800439a:	687e      	ldr	r6, [r7, #4]
 800439c:	466d      	mov	r5, sp
 800439e:	f106 0410 	add.w	r4, r6, #16
 80043a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80043a4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80043a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80043a8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80043aa:	e894 0003 	ldmia.w	r4, {r0, r1}
 80043ae:	e885 0003 	stmia.w	r5, {r0, r1}
 80043b2:	1d33      	adds	r3, r6, #4
 80043b4:	cb0e      	ldmia	r3, {r1, r2, r3}
 80043b6:	6838      	ldr	r0, [r7, #0]
 80043b8:	f002 fb03 	bl	80069c2 <USB_CoreInit>
 80043bc:	4603      	mov	r3, r0
 80043be:	2b00      	cmp	r3, #0
 80043c0:	d005      	beq.n	80043ce <HAL_PCD_Init+0x90>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	2202      	movs	r2, #2
 80043c6:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
    return HAL_ERROR;
 80043ca:	2301      	movs	r3, #1
 80043cc:	e0d7      	b.n	800457e <HAL_PCD_Init+0x240>
  }

  /* Force Device Mode*/
  (void)USB_SetCurrentMode(hpcd->Instance, USB_DEVICE_MODE);
 80043ce:	687b      	ldr	r3, [r7, #4]
 80043d0:	681b      	ldr	r3, [r3, #0]
 80043d2:	2100      	movs	r1, #0
 80043d4:	4618      	mov	r0, r3
 80043d6:	f002 fb31 	bl	8006a3c <USB_SetCurrentMode>

  /* Init endpoints structures */
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 80043da:	2300      	movs	r3, #0
 80043dc:	73fb      	strb	r3, [r7, #15]
 80043de:	e04a      	b.n	8004476 <HAL_PCD_Init+0x138>
  {
    /* Init ep structure */
    hpcd->IN_ep[i].is_in = 1U;
 80043e0:	7bfa      	ldrb	r2, [r7, #15]
 80043e2:	6879      	ldr	r1, [r7, #4]
 80043e4:	4613      	mov	r3, r2
 80043e6:	00db      	lsls	r3, r3, #3
 80043e8:	4413      	add	r3, r2
 80043ea:	009b      	lsls	r3, r3, #2
 80043ec:	440b      	add	r3, r1
 80043ee:	333d      	adds	r3, #61	; 0x3d
 80043f0:	2201      	movs	r2, #1
 80043f2:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].num = i;
 80043f4:	7bfa      	ldrb	r2, [r7, #15]
 80043f6:	6879      	ldr	r1, [r7, #4]
 80043f8:	4613      	mov	r3, r2
 80043fa:	00db      	lsls	r3, r3, #3
 80043fc:	4413      	add	r3, r2
 80043fe:	009b      	lsls	r3, r3, #2
 8004400:	440b      	add	r3, r1
 8004402:	333c      	adds	r3, #60	; 0x3c
 8004404:	7bfa      	ldrb	r2, [r7, #15]
 8004406:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].tx_fifo_num = i;
 8004408:	7bfa      	ldrb	r2, [r7, #15]
 800440a:	7bfb      	ldrb	r3, [r7, #15]
 800440c:	b298      	uxth	r0, r3
 800440e:	6879      	ldr	r1, [r7, #4]
 8004410:	4613      	mov	r3, r2
 8004412:	00db      	lsls	r3, r3, #3
 8004414:	4413      	add	r3, r2
 8004416:	009b      	lsls	r3, r3, #2
 8004418:	440b      	add	r3, r1
 800441a:	3344      	adds	r3, #68	; 0x44
 800441c:	4602      	mov	r2, r0
 800441e:	801a      	strh	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->IN_ep[i].type = EP_TYPE_CTRL;
 8004420:	7bfa      	ldrb	r2, [r7, #15]
 8004422:	6879      	ldr	r1, [r7, #4]
 8004424:	4613      	mov	r3, r2
 8004426:	00db      	lsls	r3, r3, #3
 8004428:	4413      	add	r3, r2
 800442a:	009b      	lsls	r3, r3, #2
 800442c:	440b      	add	r3, r1
 800442e:	3340      	adds	r3, #64	; 0x40
 8004430:	2200      	movs	r2, #0
 8004432:	701a      	strb	r2, [r3, #0]
    hpcd->IN_ep[i].maxpacket = 0U;
 8004434:	7bfa      	ldrb	r2, [r7, #15]
 8004436:	6879      	ldr	r1, [r7, #4]
 8004438:	4613      	mov	r3, r2
 800443a:	00db      	lsls	r3, r3, #3
 800443c:	4413      	add	r3, r2
 800443e:	009b      	lsls	r3, r3, #2
 8004440:	440b      	add	r3, r1
 8004442:	3348      	adds	r3, #72	; 0x48
 8004444:	2200      	movs	r2, #0
 8004446:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_buff = 0U;
 8004448:	7bfa      	ldrb	r2, [r7, #15]
 800444a:	6879      	ldr	r1, [r7, #4]
 800444c:	4613      	mov	r3, r2
 800444e:	00db      	lsls	r3, r3, #3
 8004450:	4413      	add	r3, r2
 8004452:	009b      	lsls	r3, r3, #2
 8004454:	440b      	add	r3, r1
 8004456:	334c      	adds	r3, #76	; 0x4c
 8004458:	2200      	movs	r2, #0
 800445a:	601a      	str	r2, [r3, #0]
    hpcd->IN_ep[i].xfer_len = 0U;
 800445c:	7bfa      	ldrb	r2, [r7, #15]
 800445e:	6879      	ldr	r1, [r7, #4]
 8004460:	4613      	mov	r3, r2
 8004462:	00db      	lsls	r3, r3, #3
 8004464:	4413      	add	r3, r2
 8004466:	009b      	lsls	r3, r3, #2
 8004468:	440b      	add	r3, r1
 800446a:	3354      	adds	r3, #84	; 0x54
 800446c:	2200      	movs	r2, #0
 800446e:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004470:	7bfb      	ldrb	r3, [r7, #15]
 8004472:	3301      	adds	r3, #1
 8004474:	73fb      	strb	r3, [r7, #15]
 8004476:	7bfa      	ldrb	r2, [r7, #15]
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	685b      	ldr	r3, [r3, #4]
 800447c:	429a      	cmp	r2, r3
 800447e:	d3af      	bcc.n	80043e0 <HAL_PCD_Init+0xa2>
  }

  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 8004480:	2300      	movs	r3, #0
 8004482:	73fb      	strb	r3, [r7, #15]
 8004484:	e044      	b.n	8004510 <HAL_PCD_Init+0x1d2>
  {
    hpcd->OUT_ep[i].is_in = 0U;
 8004486:	7bfa      	ldrb	r2, [r7, #15]
 8004488:	6879      	ldr	r1, [r7, #4]
 800448a:	4613      	mov	r3, r2
 800448c:	00db      	lsls	r3, r3, #3
 800448e:	4413      	add	r3, r2
 8004490:	009b      	lsls	r3, r3, #2
 8004492:	440b      	add	r3, r1
 8004494:	f203 237d 	addw	r3, r3, #637	; 0x27d
 8004498:	2200      	movs	r2, #0
 800449a:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].num = i;
 800449c:	7bfa      	ldrb	r2, [r7, #15]
 800449e:	6879      	ldr	r1, [r7, #4]
 80044a0:	4613      	mov	r3, r2
 80044a2:	00db      	lsls	r3, r3, #3
 80044a4:	4413      	add	r3, r2
 80044a6:	009b      	lsls	r3, r3, #2
 80044a8:	440b      	add	r3, r1
 80044aa:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 80044ae:	7bfa      	ldrb	r2, [r7, #15]
 80044b0:	701a      	strb	r2, [r3, #0]
    /* Control until ep is activated */
    hpcd->OUT_ep[i].type = EP_TYPE_CTRL;
 80044b2:	7bfa      	ldrb	r2, [r7, #15]
 80044b4:	6879      	ldr	r1, [r7, #4]
 80044b6:	4613      	mov	r3, r2
 80044b8:	00db      	lsls	r3, r3, #3
 80044ba:	4413      	add	r3, r2
 80044bc:	009b      	lsls	r3, r3, #2
 80044be:	440b      	add	r3, r1
 80044c0:	f503 7320 	add.w	r3, r3, #640	; 0x280
 80044c4:	2200      	movs	r2, #0
 80044c6:	701a      	strb	r2, [r3, #0]
    hpcd->OUT_ep[i].maxpacket = 0U;
 80044c8:	7bfa      	ldrb	r2, [r7, #15]
 80044ca:	6879      	ldr	r1, [r7, #4]
 80044cc:	4613      	mov	r3, r2
 80044ce:	00db      	lsls	r3, r3, #3
 80044d0:	4413      	add	r3, r2
 80044d2:	009b      	lsls	r3, r3, #2
 80044d4:	440b      	add	r3, r1
 80044d6:	f503 7322 	add.w	r3, r3, #648	; 0x288
 80044da:	2200      	movs	r2, #0
 80044dc:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_buff = 0U;
 80044de:	7bfa      	ldrb	r2, [r7, #15]
 80044e0:	6879      	ldr	r1, [r7, #4]
 80044e2:	4613      	mov	r3, r2
 80044e4:	00db      	lsls	r3, r3, #3
 80044e6:	4413      	add	r3, r2
 80044e8:	009b      	lsls	r3, r3, #2
 80044ea:	440b      	add	r3, r1
 80044ec:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 80044f0:	2200      	movs	r2, #0
 80044f2:	601a      	str	r2, [r3, #0]
    hpcd->OUT_ep[i].xfer_len = 0U;
 80044f4:	7bfa      	ldrb	r2, [r7, #15]
 80044f6:	6879      	ldr	r1, [r7, #4]
 80044f8:	4613      	mov	r3, r2
 80044fa:	00db      	lsls	r3, r3, #3
 80044fc:	4413      	add	r3, r2
 80044fe:	009b      	lsls	r3, r3, #2
 8004500:	440b      	add	r3, r1
 8004502:	f503 7325 	add.w	r3, r3, #660	; 0x294
 8004506:	2200      	movs	r2, #0
 8004508:	601a      	str	r2, [r3, #0]
  for (i = 0U; i < hpcd->Init.dev_endpoints; i++)
 800450a:	7bfb      	ldrb	r3, [r7, #15]
 800450c:	3301      	adds	r3, #1
 800450e:	73fb      	strb	r3, [r7, #15]
 8004510:	7bfa      	ldrb	r2, [r7, #15]
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	685b      	ldr	r3, [r3, #4]
 8004516:	429a      	cmp	r2, r3
 8004518:	d3b5      	bcc.n	8004486 <HAL_PCD_Init+0x148>
  }

  /* Init Device */
  if (USB_DevInit(hpcd->Instance, hpcd->Init) != HAL_OK)
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	603b      	str	r3, [r7, #0]
 8004520:	687e      	ldr	r6, [r7, #4]
 8004522:	466d      	mov	r5, sp
 8004524:	f106 0410 	add.w	r4, r6, #16
 8004528:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800452a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800452c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800452e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8004530:	e894 0003 	ldmia.w	r4, {r0, r1}
 8004534:	e885 0003 	stmia.w	r5, {r0, r1}
 8004538:	1d33      	adds	r3, r6, #4
 800453a:	cb0e      	ldmia	r3, {r1, r2, r3}
 800453c:	6838      	ldr	r0, [r7, #0]
 800453e:	f002 fac9 	bl	8006ad4 <USB_DevInit>
 8004542:	4603      	mov	r3, r0
 8004544:	2b00      	cmp	r3, #0
 8004546:	d005      	beq.n	8004554 <HAL_PCD_Init+0x216>
  {
    hpcd->State = HAL_PCD_STATE_ERROR;
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	2202      	movs	r2, #2
 800454c:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
    return HAL_ERROR;
 8004550:	2301      	movs	r3, #1
 8004552:	e014      	b.n	800457e <HAL_PCD_Init+0x240>
  }

  hpcd->USB_Address = 0U;
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	2200      	movs	r2, #0
 8004558:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  hpcd->State = HAL_PCD_STATE_READY;
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	2201      	movs	r2, #1
 8004560:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd

  /* Activate LPM */
  if (hpcd->Init.lpm_enable == 1U)
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004568:	2b01      	cmp	r3, #1
 800456a:	d102      	bne.n	8004572 <HAL_PCD_Init+0x234>
  {
    (void)HAL_PCDEx_ActivateLPM(hpcd);
 800456c:	6878      	ldr	r0, [r7, #4]
 800456e:	f000 f80a 	bl	8004586 <HAL_PCDEx_ActivateLPM>
  }

  (void)USB_DevDisconnect(hpcd->Instance);
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	4618      	mov	r0, r3
 8004578:	f002 fc75 	bl	8006e66 <USB_DevDisconnect>

  return HAL_OK;
 800457c:	2300      	movs	r3, #0
}
 800457e:	4618      	mov	r0, r3
 8004580:	3714      	adds	r7, #20
 8004582:	46bd      	mov	sp, r7
 8004584:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004586 <HAL_PCDEx_ActivateLPM>:
  * @brief  Activate LPM feature.
  * @param  hpcd PCD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PCDEx_ActivateLPM(PCD_HandleTypeDef *hpcd)
{
 8004586:	b480      	push	{r7}
 8004588:	b085      	sub	sp, #20
 800458a:	af00      	add	r7, sp, #0
 800458c:	6078      	str	r0, [r7, #4]
  USB_OTG_GlobalTypeDef *USBx = hpcd->Instance;
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	681b      	ldr	r3, [r3, #0]
 8004592:	60fb      	str	r3, [r7, #12]

  hpcd->lpm_active = 1U;
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	2201      	movs	r2, #1
 8004598:	f8c3 2500 	str.w	r2, [r3, #1280]	; 0x500
  hpcd->LPM_State = LPM_L0;
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	2200      	movs	r2, #0
 80045a0:	f883 24f4 	strb.w	r2, [r3, #1268]	; 0x4f4
  USBx->GINTMSK |= USB_OTG_GINTMSK_LPMINTM;
 80045a4:	68fb      	ldr	r3, [r7, #12]
 80045a6:	699b      	ldr	r3, [r3, #24]
 80045a8:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	619a      	str	r2, [r3, #24]
  USBx->GLPMCFG |= (USB_OTG_GLPMCFG_LPMEN | USB_OTG_GLPMCFG_LPMACK | USB_OTG_GLPMCFG_ENBESL);
 80045b0:	68fb      	ldr	r3, [r7, #12]
 80045b2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045b4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80045b8:	f043 0303 	orr.w	r3, r3, #3
 80045bc:	68fa      	ldr	r2, [r7, #12]
 80045be:	6553      	str	r3, [r2, #84]	; 0x54

  return HAL_OK;
 80045c0:	2300      	movs	r3, #0
}
 80045c2:	4618      	mov	r0, r3
 80045c4:	3714      	adds	r7, #20
 80045c6:	46bd      	mov	sp, r7
 80045c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045cc:	4770      	bx	lr
	...

080045d0 <HAL_PWR_EnableBkUpAccess>:
  * @note  LSEON bit that switches on and off the LSE crystal belongs as well to the
  *        back-up domain.
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
 80045d0:	b480      	push	{r7}
 80045d2:	af00      	add	r7, sp, #0
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80045d4:	4b05      	ldr	r3, [pc, #20]	; (80045ec <HAL_PWR_EnableBkUpAccess+0x1c>)
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	4a04      	ldr	r2, [pc, #16]	; (80045ec <HAL_PWR_EnableBkUpAccess+0x1c>)
 80045da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80045de:	6013      	str	r3, [r2, #0]
}
 80045e0:	bf00      	nop
 80045e2:	46bd      	mov	sp, r7
 80045e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045e8:	4770      	bx	lr
 80045ea:	bf00      	nop
 80045ec:	40007000 	.word	0x40007000

080045f0 <HAL_PWREx_GetVoltageRange>:
  * @brief Return Voltage Scaling Range.
  * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1 or PWR_REGULATOR_VOLTAGE_SCALE2
  *         or PWR_REGULATOR_VOLTAGE_SCALE1_BOOST when applicable)
  */
uint32_t HAL_PWREx_GetVoltageRange(void)
{
 80045f0:	b480      	push	{r7}
 80045f2:	af00      	add	r7, sp, #0
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
 80045f4:	4b04      	ldr	r3, [pc, #16]	; (8004608 <HAL_PWREx_GetVoltageRange+0x18>)
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
#endif
}
 80045fc:	4618      	mov	r0, r3
 80045fe:	46bd      	mov	sp, r7
 8004600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004604:	4770      	bx	lr
 8004606:	bf00      	nop
 8004608:	40007000 	.word	0x40007000

0800460c <HAL_PWREx_ControlVoltageScaling>:
  *        cleared before returning the status. If the flag is not cleared within
  *        50 microseconds, HAL_TIMEOUT status is reported.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
{
 800460c:	b480      	push	{r7}
 800460e:	b085      	sub	sp, #20
 8004610:	af00      	add	r7, sp, #0
 8004612:	6078      	str	r0, [r7, #4]
  }

#else

  /* If Set Range 1 */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800461a:	d130      	bne.n	800467e <HAL_PWREx_ControlVoltageScaling+0x72>
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 800461c:	4b23      	ldr	r3, [pc, #140]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004624:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004628:	d038      	beq.n	800469c <HAL_PWREx_ControlVoltageScaling+0x90>
    {
      /* Set Range 1 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 800462a:	4b20      	ldr	r3, [pc, #128]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004632:	4a1e      	ldr	r2, [pc, #120]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004634:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004638:	6013      	str	r3, [r2, #0]

      /* Wait until VOSF is cleared */
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 800463a:	4b1d      	ldr	r3, [pc, #116]	; (80046b0 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 800463c:	681b      	ldr	r3, [r3, #0]
 800463e:	2232      	movs	r2, #50	; 0x32
 8004640:	fb02 f303 	mul.w	r3, r2, r3
 8004644:	4a1b      	ldr	r2, [pc, #108]	; (80046b4 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8004646:	fba2 2303 	umull	r2, r3, r2, r3
 800464a:	0c9b      	lsrs	r3, r3, #18
 800464c:	3301      	adds	r3, #1
 800464e:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 8004650:	e002      	b.n	8004658 <HAL_PWREx_ControlVoltageScaling+0x4c>
      {
        wait_loop_index--;
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	3b01      	subs	r3, #1
 8004656:	60fb      	str	r3, [r7, #12]
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 8004658:	4b14      	ldr	r3, [pc, #80]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800465a:	695b      	ldr	r3, [r3, #20]
 800465c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004660:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004664:	d102      	bne.n	800466c <HAL_PWREx_ControlVoltageScaling+0x60>
 8004666:	68fb      	ldr	r3, [r7, #12]
 8004668:	2b00      	cmp	r3, #0
 800466a:	d1f2      	bne.n	8004652 <HAL_PWREx_ControlVoltageScaling+0x46>
      }
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 800466c:	4b0f      	ldr	r3, [pc, #60]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800466e:	695b      	ldr	r3, [r3, #20]
 8004670:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004674:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8004678:	d110      	bne.n	800469c <HAL_PWREx_ControlVoltageScaling+0x90>
      {
        return HAL_TIMEOUT;
 800467a:	2303      	movs	r3, #3
 800467c:	e00f      	b.n	800469e <HAL_PWREx_ControlVoltageScaling+0x92>
      }
    }
  }
  else
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 800467e:	4b0b      	ldr	r3, [pc, #44]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004680:	681b      	ldr	r3, [r3, #0]
 8004682:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8004686:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800468a:	d007      	beq.n	800469c <HAL_PWREx_ControlVoltageScaling+0x90>
    {
      /* Set Range 2 */
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 800468c:	4b07      	ldr	r3, [pc, #28]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8004694:	4a05      	ldr	r2, [pc, #20]	; (80046ac <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8004696:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800469a:	6013      	str	r3, [r2, #0]
      /* No need to wait for VOSF to be cleared for this transition */
    }
  }
#endif

  return HAL_OK;
 800469c:	2300      	movs	r3, #0
}
 800469e:	4618      	mov	r0, r3
 80046a0:	3714      	adds	r7, #20
 80046a2:	46bd      	mov	sp, r7
 80046a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046a8:	4770      	bx	lr
 80046aa:	bf00      	nop
 80046ac:	40007000 	.word	0x40007000
 80046b0:	20000000 	.word	0x20000000
 80046b4:	431bde83 	.word	0x431bde83

080046b8 <HAL_PWREx_EnableVddUSB>:
  * @brief Enable VDDUSB supply.
  * @note  Remove VDDUSB electrical and logical isolation, once VDDUSB supply is present.
  * @retval None
  */
void HAL_PWREx_EnableVddUSB(void)
{
 80046b8:	b480      	push	{r7}
 80046ba:	af00      	add	r7, sp, #0
  SET_BIT(PWR->CR2, PWR_CR2_USV);
 80046bc:	4b05      	ldr	r3, [pc, #20]	; (80046d4 <HAL_PWREx_EnableVddUSB+0x1c>)
 80046be:	685b      	ldr	r3, [r3, #4]
 80046c0:	4a04      	ldr	r2, [pc, #16]	; (80046d4 <HAL_PWREx_EnableVddUSB+0x1c>)
 80046c2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80046c6:	6053      	str	r3, [r2, #4]
}
 80046c8:	bf00      	nop
 80046ca:	46bd      	mov	sp, r7
 80046cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046d0:	4770      	bx	lr
 80046d2:	bf00      	nop
 80046d4:	40007000 	.word	0x40007000

080046d8 <HAL_QSPI_Init>:
  *        in the QSPI_InitTypeDef and initialize the associated handle.
  * @param hqspi QSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
{
 80046d8:	b580      	push	{r7, lr}
 80046da:	b086      	sub	sp, #24
 80046dc:	af02      	add	r7, sp, #8
 80046de:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 80046e0:	f7ff f8d4 	bl	800388c <HAL_GetTick>
 80046e4:	60f8      	str	r0, [r7, #12]

  /* Check the QSPI handle allocation */
  if(hqspi == NULL)
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	2b00      	cmp	r3, #0
 80046ea:	d101      	bne.n	80046f0 <HAL_QSPI_Init+0x18>
  {
    return HAL_ERROR;
 80046ec:	2301      	movs	r3, #1
 80046ee:	e063      	b.n	80047b8 <HAL_QSPI_Init+0xe0>
  {
    assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
  }
#endif

  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80046f6:	b2db      	uxtb	r3, r3
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	d10b      	bne.n	8004714 <HAL_QSPI_Init+0x3c>
  {
    /* Allocate lock resource and initialize it */
    hqspi->Lock = HAL_UNLOCKED;
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	2200      	movs	r2, #0
 8004700:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    hqspi->MspInitCallback(hqspi);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_QSPI_MspInit(hqspi);
 8004704:	6878      	ldr	r0, [r7, #4]
 8004706:	f7fe fd59 	bl	80031bc <HAL_QSPI_MspInit>
#endif

    /* Configure the default timeout for the QSPI memory access */
    HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
 800470a:	f241 3188 	movw	r1, #5000	; 0x1388
 800470e:	6878      	ldr	r0, [r7, #4]
 8004710:	f000 f858 	bl	80047c4 <HAL_QSPI_SetTimeout>
  }

  /* Configure QSPI FIFO Threshold */
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	681b      	ldr	r3, [r3, #0]
 800471a:	f423 6170 	bic.w	r1, r3, #3840	; 0xf00
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	689b      	ldr	r3, [r3, #8]
 8004722:	3b01      	subs	r3, #1
 8004724:	021a      	lsls	r2, r3, #8
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	430a      	orrs	r2, r1
 800472c:	601a      	str	r2, [r3, #0]
             ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));

  /* Wait till BUSY flag reset */
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004732:	9300      	str	r3, [sp, #0]
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	2200      	movs	r2, #0
 8004738:	2120      	movs	r1, #32
 800473a:	6878      	ldr	r0, [r7, #4]
 800473c:	f000 f850 	bl	80047e0 <QSPI_WaitFlagStateUntilTimeout>
 8004740:	4603      	mov	r3, r0
 8004742:	72fb      	strb	r3, [r7, #11]

  if(status == HAL_OK)
 8004744:	7afb      	ldrb	r3, [r7, #11]
 8004746:	2b00      	cmp	r3, #0
 8004748:	d131      	bne.n	80047ae <HAL_QSPI_Init+0xd6>
#if defined(QUADSPI_CR_DFM)
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
               ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
                hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));
#else
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT),
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8004754:	f023 0310 	bic.w	r3, r3, #16
 8004758:	687a      	ldr	r2, [r7, #4]
 800475a:	6852      	ldr	r2, [r2, #4]
 800475c:	0611      	lsls	r1, r2, #24
 800475e:	687a      	ldr	r2, [r7, #4]
 8004760:	68d2      	ldr	r2, [r2, #12]
 8004762:	4311      	orrs	r1, r2
 8004764:	687a      	ldr	r2, [r7, #4]
 8004766:	6812      	ldr	r2, [r2, #0]
 8004768:	430b      	orrs	r3, r1
 800476a:	6013      	str	r3, [r2, #0]
               ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
                hqspi->Init.SampleShifting));
#endif

    /* Configure QSPI Flash Size, CS High Time and Clock Mode */
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800476c:	687b      	ldr	r3, [r7, #4]
 800476e:	681b      	ldr	r3, [r3, #0]
 8004770:	685a      	ldr	r2, [r3, #4]
 8004772:	4b13      	ldr	r3, [pc, #76]	; (80047c0 <HAL_QSPI_Init+0xe8>)
 8004774:	4013      	ands	r3, r2
 8004776:	687a      	ldr	r2, [r7, #4]
 8004778:	6912      	ldr	r2, [r2, #16]
 800477a:	0411      	lsls	r1, r2, #16
 800477c:	687a      	ldr	r2, [r7, #4]
 800477e:	6952      	ldr	r2, [r2, #20]
 8004780:	4311      	orrs	r1, r2
 8004782:	687a      	ldr	r2, [r7, #4]
 8004784:	6992      	ldr	r2, [r2, #24]
 8004786:	4311      	orrs	r1, r2
 8004788:	687a      	ldr	r2, [r7, #4]
 800478a:	6812      	ldr	r2, [r2, #0]
 800478c:	430b      	orrs	r3, r1
 800478e:	6053      	str	r3, [r2, #4]
               ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
                hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));

    /* Enable the QSPI peripheral */
    __HAL_QSPI_ENABLE(hqspi);
 8004790:	687b      	ldr	r3, [r7, #4]
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	681a      	ldr	r2, [r3, #0]
 8004796:	687b      	ldr	r3, [r7, #4]
 8004798:	681b      	ldr	r3, [r3, #0]
 800479a:	f042 0201 	orr.w	r2, r2, #1
 800479e:	601a      	str	r2, [r3, #0]

    /* Set QSPI error code to none */
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	2200      	movs	r2, #0
 80047a4:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Initialize the QSPI state */
    hqspi->State = HAL_QSPI_STATE_READY;
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	2201      	movs	r2, #1
 80047aa:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  }

  /* Release Lock */
  __HAL_UNLOCK(hqspi);
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	2200      	movs	r2, #0
 80047b2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Return function status */
  return status;
 80047b6:	7afb      	ldrb	r3, [r7, #11]
}
 80047b8:	4618      	mov	r0, r3
 80047ba:	3710      	adds	r7, #16
 80047bc:	46bd      	mov	sp, r7
 80047be:	bd80      	pop	{r7, pc}
 80047c0:	ffe0f8fe 	.word	0xffe0f8fe

080047c4 <HAL_QSPI_SetTimeout>:
  * @param  hqspi QSPI handle.
  * @param  Timeout Timeout for the QSPI memory access.
  * @retval None
  */
void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
{
 80047c4:	b480      	push	{r7}
 80047c6:	b083      	sub	sp, #12
 80047c8:	af00      	add	r7, sp, #0
 80047ca:	6078      	str	r0, [r7, #4]
 80047cc:	6039      	str	r1, [r7, #0]
  hqspi->Timeout = Timeout;
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	683a      	ldr	r2, [r7, #0]
 80047d2:	641a      	str	r2, [r3, #64]	; 0x40
}
 80047d4:	bf00      	nop
 80047d6:	370c      	adds	r7, #12
 80047d8:	46bd      	mov	sp, r7
 80047da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047de:	4770      	bx	lr

080047e0 <QSPI_WaitFlagStateUntilTimeout>:
  * @param  Timeout Duration of the timeout
  * @retval HAL status
  */
static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 80047e0:	b580      	push	{r7, lr}
 80047e2:	b084      	sub	sp, #16
 80047e4:	af00      	add	r7, sp, #0
 80047e6:	60f8      	str	r0, [r7, #12]
 80047e8:	60b9      	str	r1, [r7, #8]
 80047ea:	603b      	str	r3, [r7, #0]
 80047ec:	4613      	mov	r3, r2
 80047ee:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 80047f0:	e01a      	b.n	8004828 <QSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80047f2:	69bb      	ldr	r3, [r7, #24]
 80047f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80047f8:	d016      	beq.n	8004828 <QSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80047fa:	f7ff f847 	bl	800388c <HAL_GetTick>
 80047fe:	4602      	mov	r2, r0
 8004800:	683b      	ldr	r3, [r7, #0]
 8004802:	1ad3      	subs	r3, r2, r3
 8004804:	69ba      	ldr	r2, [r7, #24]
 8004806:	429a      	cmp	r2, r3
 8004808:	d302      	bcc.n	8004810 <QSPI_WaitFlagStateUntilTimeout+0x30>
 800480a:	69bb      	ldr	r3, [r7, #24]
 800480c:	2b00      	cmp	r3, #0
 800480e:	d10b      	bne.n	8004828 <QSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	2204      	movs	r2, #4
 8004814:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8004818:	68fb      	ldr	r3, [r7, #12]
 800481a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800481c:	f043 0201 	orr.w	r2, r3, #1
 8004820:	68fb      	ldr	r3, [r7, #12]
 8004822:	63da      	str	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8004824:	2301      	movs	r3, #1
 8004826:	e00e      	b.n	8004846 <QSPI_WaitFlagStateUntilTimeout+0x66>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8004828:	68fb      	ldr	r3, [r7, #12]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	689a      	ldr	r2, [r3, #8]
 800482e:	68bb      	ldr	r3, [r7, #8]
 8004830:	4013      	ands	r3, r2
 8004832:	2b00      	cmp	r3, #0
 8004834:	bf14      	ite	ne
 8004836:	2301      	movne	r3, #1
 8004838:	2300      	moveq	r3, #0
 800483a:	b2db      	uxtb	r3, r3
 800483c:	461a      	mov	r2, r3
 800483e:	79fb      	ldrb	r3, [r7, #7]
 8004840:	429a      	cmp	r2, r3
 8004842:	d1d6      	bne.n	80047f2 <QSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8004844:	2300      	movs	r3, #0
}
 8004846:	4618      	mov	r0, r3
 8004848:	3710      	adds	r7, #16
 800484a:	46bd      	mov	sp, r7
 800484c:	bd80      	pop	{r7, pc}
	...

08004850 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004850:	b580      	push	{r7, lr}
 8004852:	b088      	sub	sp, #32
 8004854:	af00      	add	r7, sp, #0
 8004856:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	2b00      	cmp	r3, #0
 800485c:	d101      	bne.n	8004862 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800485e:	2301      	movs	r3, #1
 8004860:	e3ca      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8004862:	4b97      	ldr	r3, [pc, #604]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004864:	689b      	ldr	r3, [r3, #8]
 8004866:	f003 030c 	and.w	r3, r3, #12
 800486a:	61bb      	str	r3, [r7, #24]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 800486c:	4b94      	ldr	r3, [pc, #592]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 800486e:	68db      	ldr	r3, [r3, #12]
 8004870:	f003 0303 	and.w	r3, r3, #3
 8004874:	617b      	str	r3, [r7, #20]

  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	f003 0310 	and.w	r3, r3, #16
 800487e:	2b00      	cmp	r3, #0
 8004880:	f000 80e4 	beq.w	8004a4c <HAL_RCC_OscConfig+0x1fc>
    assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));
    assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
    assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

    /* Check if MSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8004884:	69bb      	ldr	r3, [r7, #24]
 8004886:	2b00      	cmp	r3, #0
 8004888:	d007      	beq.n	800489a <HAL_RCC_OscConfig+0x4a>
 800488a:	69bb      	ldr	r3, [r7, #24]
 800488c:	2b0c      	cmp	r3, #12
 800488e:	f040 808b 	bne.w	80049a8 <HAL_RCC_OscConfig+0x158>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 8004892:	697b      	ldr	r3, [r7, #20]
 8004894:	2b01      	cmp	r3, #1
 8004896:	f040 8087 	bne.w	80049a8 <HAL_RCC_OscConfig+0x158>
    {
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 800489a:	4b89      	ldr	r3, [pc, #548]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f003 0302 	and.w	r3, r3, #2
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d005      	beq.n	80048b2 <HAL_RCC_OscConfig+0x62>
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	699b      	ldr	r3, [r3, #24]
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d101      	bne.n	80048b2 <HAL_RCC_OscConfig+0x62>
      {
        return HAL_ERROR;
 80048ae:	2301      	movs	r3, #1
 80048b0:	e3a2      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      else
      {
        /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
           must be correctly programmed according to the frequency of the CPU clock
           (HCLK) and the supply voltage of the device. */
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	6a1a      	ldr	r2, [r3, #32]
 80048b6:	4b82      	ldr	r3, [pc, #520]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	f003 0308 	and.w	r3, r3, #8
 80048be:	2b00      	cmp	r3, #0
 80048c0:	d004      	beq.n	80048cc <HAL_RCC_OscConfig+0x7c>
 80048c2:	4b7f      	ldr	r3, [pc, #508]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80048c4:	681b      	ldr	r3, [r3, #0]
 80048c6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80048ca:	e005      	b.n	80048d8 <HAL_RCC_OscConfig+0x88>
 80048cc:	4b7c      	ldr	r3, [pc, #496]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80048ce:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80048d2:	091b      	lsrs	r3, r3, #4
 80048d4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80048d8:	4293      	cmp	r3, r2
 80048da:	d223      	bcs.n	8004924 <HAL_RCC_OscConfig+0xd4>
        {
          /* First increase number of wait states update if necessary */
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	6a1b      	ldr	r3, [r3, #32]
 80048e0:	4618      	mov	r0, r3
 80048e2:	f000 fd55 	bl	8005390 <RCC_SetFlashLatencyFromMSIRange>
 80048e6:	4603      	mov	r3, r0
 80048e8:	2b00      	cmp	r3, #0
 80048ea:	d001      	beq.n	80048f0 <HAL_RCC_OscConfig+0xa0>
          {
            return HAL_ERROR;
 80048ec:	2301      	movs	r3, #1
 80048ee:	e383      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
          }

          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80048f0:	4b73      	ldr	r3, [pc, #460]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	4a72      	ldr	r2, [pc, #456]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80048f6:	f043 0308 	orr.w	r3, r3, #8
 80048fa:	6013      	str	r3, [r2, #0]
 80048fc:	4b70      	ldr	r3, [pc, #448]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	6a1b      	ldr	r3, [r3, #32]
 8004908:	496d      	ldr	r1, [pc, #436]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 800490a:	4313      	orrs	r3, r2
 800490c:	600b      	str	r3, [r1, #0]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 800490e:	4b6c      	ldr	r3, [pc, #432]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004910:	685b      	ldr	r3, [r3, #4]
 8004912:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	69db      	ldr	r3, [r3, #28]
 800491a:	021b      	lsls	r3, r3, #8
 800491c:	4968      	ldr	r1, [pc, #416]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 800491e:	4313      	orrs	r3, r2
 8004920:	604b      	str	r3, [r1, #4]
 8004922:	e025      	b.n	8004970 <HAL_RCC_OscConfig+0x120>
        }
        else
        {
          /* Else, keep current flash latency while decreasing applies */
          /* Selects the Multiple Speed oscillator (MSI) clock range .*/
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8004924:	4b66      	ldr	r3, [pc, #408]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004926:	681b      	ldr	r3, [r3, #0]
 8004928:	4a65      	ldr	r2, [pc, #404]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 800492a:	f043 0308 	orr.w	r3, r3, #8
 800492e:	6013      	str	r3, [r2, #0]
 8004930:	4b63      	ldr	r3, [pc, #396]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	6a1b      	ldr	r3, [r3, #32]
 800493c:	4960      	ldr	r1, [pc, #384]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 800493e:	4313      	orrs	r3, r2
 8004940:	600b      	str	r3, [r1, #0]
          /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8004942:	4b5f      	ldr	r3, [pc, #380]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004944:	685b      	ldr	r3, [r3, #4]
 8004946:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	69db      	ldr	r3, [r3, #28]
 800494e:	021b      	lsls	r3, r3, #8
 8004950:	495b      	ldr	r1, [pc, #364]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004952:	4313      	orrs	r3, r2
 8004954:	604b      	str	r3, [r1, #4]

          /* Decrease number of wait states update if necessary */
          /* Only possible when MSI is the System clock source  */
          if(sysclk_source == RCC_CFGR_SWS_MSI)
 8004956:	69bb      	ldr	r3, [r7, #24]
 8004958:	2b00      	cmp	r3, #0
 800495a:	d109      	bne.n	8004970 <HAL_RCC_OscConfig+0x120>
          {
            if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	6a1b      	ldr	r3, [r3, #32]
 8004960:	4618      	mov	r0, r3
 8004962:	f000 fd15 	bl	8005390 <RCC_SetFlashLatencyFromMSIRange>
 8004966:	4603      	mov	r3, r0
 8004968:	2b00      	cmp	r3, #0
 800496a:	d001      	beq.n	8004970 <HAL_RCC_OscConfig+0x120>
            {
              return HAL_ERROR;
 800496c:	2301      	movs	r3, #1
 800496e:	e343      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
            }
          }
        }

        /* Update the SystemCoreClock global variable */
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8004970:	f000 fc4a 	bl	8005208 <HAL_RCC_GetSysClockFreq>
 8004974:	4602      	mov	r2, r0
 8004976:	4b52      	ldr	r3, [pc, #328]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004978:	689b      	ldr	r3, [r3, #8]
 800497a:	091b      	lsrs	r3, r3, #4
 800497c:	f003 030f 	and.w	r3, r3, #15
 8004980:	4950      	ldr	r1, [pc, #320]	; (8004ac4 <HAL_RCC_OscConfig+0x274>)
 8004982:	5ccb      	ldrb	r3, [r1, r3]
 8004984:	f003 031f 	and.w	r3, r3, #31
 8004988:	fa22 f303 	lsr.w	r3, r2, r3
 800498c:	4a4e      	ldr	r2, [pc, #312]	; (8004ac8 <HAL_RCC_OscConfig+0x278>)
 800498e:	6013      	str	r3, [r2, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick(uwTickPrio);
 8004990:	4b4e      	ldr	r3, [pc, #312]	; (8004acc <HAL_RCC_OscConfig+0x27c>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	4618      	mov	r0, r3
 8004996:	f7fe ff29 	bl	80037ec <HAL_InitTick>
 800499a:	4603      	mov	r3, r0
 800499c:	73fb      	strb	r3, [r7, #15]
        if(status != HAL_OK)
 800499e:	7bfb      	ldrb	r3, [r7, #15]
 80049a0:	2b00      	cmp	r3, #0
 80049a2:	d052      	beq.n	8004a4a <HAL_RCC_OscConfig+0x1fa>
        {
          return status;
 80049a4:	7bfb      	ldrb	r3, [r7, #15]
 80049a6:	e327      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      }
    }
    else
    {
      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	699b      	ldr	r3, [r3, #24]
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d032      	beq.n	8004a16 <HAL_RCC_OscConfig+0x1c6>
      {
        /* Enable the Internal High Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 80049b0:	4b43      	ldr	r3, [pc, #268]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	4a42      	ldr	r2, [pc, #264]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049b6:	f043 0301 	orr.w	r3, r3, #1
 80049ba:	6013      	str	r3, [r2, #0]

        /* Get timeout */
        tickstart = HAL_GetTick();
 80049bc:	f7fe ff66 	bl	800388c <HAL_GetTick>
 80049c0:	6138      	str	r0, [r7, #16]

        /* Wait till MSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 80049c2:	e008      	b.n	80049d6 <HAL_RCC_OscConfig+0x186>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80049c4:	f7fe ff62 	bl	800388c <HAL_GetTick>
 80049c8:	4602      	mov	r2, r0
 80049ca:	693b      	ldr	r3, [r7, #16]
 80049cc:	1ad3      	subs	r3, r2, r3
 80049ce:	2b02      	cmp	r3, #2
 80049d0:	d901      	bls.n	80049d6 <HAL_RCC_OscConfig+0x186>
          {
            return HAL_TIMEOUT;
 80049d2:	2303      	movs	r3, #3
 80049d4:	e310      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 80049d6:	4b3a      	ldr	r3, [pc, #232]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	f003 0302 	and.w	r3, r3, #2
 80049de:	2b00      	cmp	r3, #0
 80049e0:	d0f0      	beq.n	80049c4 <HAL_RCC_OscConfig+0x174>
          }
        }
         /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80049e2:	4b37      	ldr	r3, [pc, #220]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	4a36      	ldr	r2, [pc, #216]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049e8:	f043 0308 	orr.w	r3, r3, #8
 80049ec:	6013      	str	r3, [r2, #0]
 80049ee:	4b34      	ldr	r3, [pc, #208]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	6a1b      	ldr	r3, [r3, #32]
 80049fa:	4931      	ldr	r1, [pc, #196]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 80049fc:	4313      	orrs	r3, r2
 80049fe:	600b      	str	r3, [r1, #0]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8004a00:	4b2f      	ldr	r3, [pc, #188]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a02:	685b      	ldr	r3, [r3, #4]
 8004a04:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	69db      	ldr	r3, [r3, #28]
 8004a0c:	021b      	lsls	r3, r3, #8
 8004a0e:	492c      	ldr	r1, [pc, #176]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a10:	4313      	orrs	r3, r2
 8004a12:	604b      	str	r3, [r1, #4]
 8004a14:	e01a      	b.n	8004a4c <HAL_RCC_OscConfig+0x1fc>

      }
      else
      {
        /* Disable the Internal High Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8004a16:	4b2a      	ldr	r3, [pc, #168]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a18:	681b      	ldr	r3, [r3, #0]
 8004a1a:	4a29      	ldr	r2, [pc, #164]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a1c:	f023 0301 	bic.w	r3, r3, #1
 8004a20:	6013      	str	r3, [r2, #0]

        /* Get timeout */
        tickstart = HAL_GetTick();
 8004a22:	f7fe ff33 	bl	800388c <HAL_GetTick>
 8004a26:	6138      	str	r0, [r7, #16]

        /* Wait till MSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 8004a28:	e008      	b.n	8004a3c <HAL_RCC_OscConfig+0x1ec>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8004a2a:	f7fe ff2f 	bl	800388c <HAL_GetTick>
 8004a2e:	4602      	mov	r2, r0
 8004a30:	693b      	ldr	r3, [r7, #16]
 8004a32:	1ad3      	subs	r3, r2, r3
 8004a34:	2b02      	cmp	r3, #2
 8004a36:	d901      	bls.n	8004a3c <HAL_RCC_OscConfig+0x1ec>
          {
            return HAL_TIMEOUT;
 8004a38:	2303      	movs	r3, #3
 8004a3a:	e2dd      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 8004a3c:	4b20      	ldr	r3, [pc, #128]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	f003 0302 	and.w	r3, r3, #2
 8004a44:	2b00      	cmp	r3, #0
 8004a46:	d1f0      	bne.n	8004a2a <HAL_RCC_OscConfig+0x1da>
 8004a48:	e000      	b.n	8004a4c <HAL_RCC_OscConfig+0x1fc>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8004a4a:	bf00      	nop
        }
      }
    }
  }
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	681b      	ldr	r3, [r3, #0]
 8004a50:	f003 0301 	and.w	r3, r3, #1
 8004a54:	2b00      	cmp	r3, #0
 8004a56:	d074      	beq.n	8004b42 <HAL_RCC_OscConfig+0x2f2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 8004a58:	69bb      	ldr	r3, [r7, #24]
 8004a5a:	2b08      	cmp	r3, #8
 8004a5c:	d005      	beq.n	8004a6a <HAL_RCC_OscConfig+0x21a>
 8004a5e:	69bb      	ldr	r3, [r7, #24]
 8004a60:	2b0c      	cmp	r3, #12
 8004a62:	d10e      	bne.n	8004a82 <HAL_RCC_OscConfig+0x232>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 8004a64:	697b      	ldr	r3, [r7, #20]
 8004a66:	2b03      	cmp	r3, #3
 8004a68:	d10b      	bne.n	8004a82 <HAL_RCC_OscConfig+0x232>
    {
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004a6a:	4b15      	ldr	r3, [pc, #84]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	d064      	beq.n	8004b40 <HAL_RCC_OscConfig+0x2f0>
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	685b      	ldr	r3, [r3, #4]
 8004a7a:	2b00      	cmp	r3, #0
 8004a7c:	d160      	bne.n	8004b40 <HAL_RCC_OscConfig+0x2f0>
      {
        return HAL_ERROR;
 8004a7e:	2301      	movs	r3, #1
 8004a80:	e2ba      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	685b      	ldr	r3, [r3, #4]
 8004a86:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004a8a:	d106      	bne.n	8004a9a <HAL_RCC_OscConfig+0x24a>
 8004a8c:	4b0c      	ldr	r3, [pc, #48]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	4a0b      	ldr	r2, [pc, #44]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004a92:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004a96:	6013      	str	r3, [r2, #0]
 8004a98:	e026      	b.n	8004ae8 <HAL_RCC_OscConfig+0x298>
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	685b      	ldr	r3, [r3, #4]
 8004a9e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004aa2:	d115      	bne.n	8004ad0 <HAL_RCC_OscConfig+0x280>
 8004aa4:	4b06      	ldr	r3, [pc, #24]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	4a05      	ldr	r2, [pc, #20]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004aaa:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004aae:	6013      	str	r3, [r2, #0]
 8004ab0:	4b03      	ldr	r3, [pc, #12]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004ab2:	681b      	ldr	r3, [r3, #0]
 8004ab4:	4a02      	ldr	r2, [pc, #8]	; (8004ac0 <HAL_RCC_OscConfig+0x270>)
 8004ab6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004aba:	6013      	str	r3, [r2, #0]
 8004abc:	e014      	b.n	8004ae8 <HAL_RCC_OscConfig+0x298>
 8004abe:	bf00      	nop
 8004ac0:	40021000 	.word	0x40021000
 8004ac4:	08020d5c 	.word	0x08020d5c
 8004ac8:	20000000 	.word	0x20000000
 8004acc:	20000004 	.word	0x20000004
 8004ad0:	4ba0      	ldr	r3, [pc, #640]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004ad2:	681b      	ldr	r3, [r3, #0]
 8004ad4:	4a9f      	ldr	r2, [pc, #636]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004ad6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004ada:	6013      	str	r3, [r2, #0]
 8004adc:	4b9d      	ldr	r3, [pc, #628]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	4a9c      	ldr	r2, [pc, #624]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004ae2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004ae6:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	685b      	ldr	r3, [r3, #4]
 8004aec:	2b00      	cmp	r3, #0
 8004aee:	d013      	beq.n	8004b18 <HAL_RCC_OscConfig+0x2c8>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004af0:	f7fe fecc 	bl	800388c <HAL_GetTick>
 8004af4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004af6:	e008      	b.n	8004b0a <HAL_RCC_OscConfig+0x2ba>
        {
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004af8:	f7fe fec8 	bl	800388c <HAL_GetTick>
 8004afc:	4602      	mov	r2, r0
 8004afe:	693b      	ldr	r3, [r7, #16]
 8004b00:	1ad3      	subs	r3, r2, r3
 8004b02:	2b64      	cmp	r3, #100	; 0x64
 8004b04:	d901      	bls.n	8004b0a <HAL_RCC_OscConfig+0x2ba>
          {
            return HAL_TIMEOUT;
 8004b06:	2303      	movs	r3, #3
 8004b08:	e276      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8004b0a:	4b92      	ldr	r3, [pc, #584]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	d0f0      	beq.n	8004af8 <HAL_RCC_OscConfig+0x2a8>
 8004b16:	e014      	b.n	8004b42 <HAL_RCC_OscConfig+0x2f2>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004b18:	f7fe feb8 	bl	800388c <HAL_GetTick>
 8004b1c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8004b1e:	e008      	b.n	8004b32 <HAL_RCC_OscConfig+0x2e2>
        {
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004b20:	f7fe feb4 	bl	800388c <HAL_GetTick>
 8004b24:	4602      	mov	r2, r0
 8004b26:	693b      	ldr	r3, [r7, #16]
 8004b28:	1ad3      	subs	r3, r2, r3
 8004b2a:	2b64      	cmp	r3, #100	; 0x64
 8004b2c:	d901      	bls.n	8004b32 <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 8004b2e:	2303      	movs	r3, #3
 8004b30:	e262      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8004b32:	4b88      	ldr	r3, [pc, #544]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004b3a:	2b00      	cmp	r3, #0
 8004b3c:	d1f0      	bne.n	8004b20 <HAL_RCC_OscConfig+0x2d0>
 8004b3e:	e000      	b.n	8004b42 <HAL_RCC_OscConfig+0x2f2>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004b40:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	f003 0302 	and.w	r3, r3, #2
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	d060      	beq.n	8004c10 <HAL_RCC_OscConfig+0x3c0>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 8004b4e:	69bb      	ldr	r3, [r7, #24]
 8004b50:	2b04      	cmp	r3, #4
 8004b52:	d005      	beq.n	8004b60 <HAL_RCC_OscConfig+0x310>
 8004b54:	69bb      	ldr	r3, [r7, #24]
 8004b56:	2b0c      	cmp	r3, #12
 8004b58:	d119      	bne.n	8004b8e <HAL_RCC_OscConfig+0x33e>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 8004b5a:	697b      	ldr	r3, [r7, #20]
 8004b5c:	2b02      	cmp	r3, #2
 8004b5e:	d116      	bne.n	8004b8e <HAL_RCC_OscConfig+0x33e>
    {
      /* When HSI is used as system clock it will not be disabled */
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8004b60:	4b7c      	ldr	r3, [pc, #496]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004b68:	2b00      	cmp	r3, #0
 8004b6a:	d005      	beq.n	8004b78 <HAL_RCC_OscConfig+0x328>
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	68db      	ldr	r3, [r3, #12]
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d101      	bne.n	8004b78 <HAL_RCC_OscConfig+0x328>
      {
        return HAL_ERROR;
 8004b74:	2301      	movs	r3, #1
 8004b76:	e23f      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004b78:	4b76      	ldr	r3, [pc, #472]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b7a:	685b      	ldr	r3, [r3, #4]
 8004b7c:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	691b      	ldr	r3, [r3, #16]
 8004b84:	061b      	lsls	r3, r3, #24
 8004b86:	4973      	ldr	r1, [pc, #460]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b88:	4313      	orrs	r3, r2
 8004b8a:	604b      	str	r3, [r1, #4]
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8004b8c:	e040      	b.n	8004c10 <HAL_RCC_OscConfig+0x3c0>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	68db      	ldr	r3, [r3, #12]
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	d023      	beq.n	8004bde <HAL_RCC_OscConfig+0x38e>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004b96:	4b6f      	ldr	r3, [pc, #444]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b98:	681b      	ldr	r3, [r3, #0]
 8004b9a:	4a6e      	ldr	r2, [pc, #440]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004b9c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004ba0:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004ba2:	f7fe fe73 	bl	800388c <HAL_GetTick>
 8004ba6:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8004ba8:	e008      	b.n	8004bbc <HAL_RCC_OscConfig+0x36c>
        {
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004baa:	f7fe fe6f 	bl	800388c <HAL_GetTick>
 8004bae:	4602      	mov	r2, r0
 8004bb0:	693b      	ldr	r3, [r7, #16]
 8004bb2:	1ad3      	subs	r3, r2, r3
 8004bb4:	2b02      	cmp	r3, #2
 8004bb6:	d901      	bls.n	8004bbc <HAL_RCC_OscConfig+0x36c>
          {
            return HAL_TIMEOUT;
 8004bb8:	2303      	movs	r3, #3
 8004bba:	e21d      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8004bbc:	4b65      	ldr	r3, [pc, #404]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	d0f0      	beq.n	8004baa <HAL_RCC_OscConfig+0x35a>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004bc8:	4b62      	ldr	r3, [pc, #392]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004bca:	685b      	ldr	r3, [r3, #4]
 8004bcc:	f023 52f8 	bic.w	r2, r3, #520093696	; 0x1f000000
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	691b      	ldr	r3, [r3, #16]
 8004bd4:	061b      	lsls	r3, r3, #24
 8004bd6:	495f      	ldr	r1, [pc, #380]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004bd8:	4313      	orrs	r3, r2
 8004bda:	604b      	str	r3, [r1, #4]
 8004bdc:	e018      	b.n	8004c10 <HAL_RCC_OscConfig+0x3c0>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004bde:	4b5d      	ldr	r3, [pc, #372]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004be0:	681b      	ldr	r3, [r3, #0]
 8004be2:	4a5c      	ldr	r2, [pc, #368]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004be4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004be8:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004bea:	f7fe fe4f 	bl	800388c <HAL_GetTick>
 8004bee:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8004bf0:	e008      	b.n	8004c04 <HAL_RCC_OscConfig+0x3b4>
        {
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8004bf2:	f7fe fe4b 	bl	800388c <HAL_GetTick>
 8004bf6:	4602      	mov	r2, r0
 8004bf8:	693b      	ldr	r3, [r7, #16]
 8004bfa:	1ad3      	subs	r3, r2, r3
 8004bfc:	2b02      	cmp	r3, #2
 8004bfe:	d901      	bls.n	8004c04 <HAL_RCC_OscConfig+0x3b4>
          {
            return HAL_TIMEOUT;
 8004c00:	2303      	movs	r3, #3
 8004c02:	e1f9      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 8004c04:	4b53      	ldr	r3, [pc, #332]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c06:	681b      	ldr	r3, [r3, #0]
 8004c08:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004c0c:	2b00      	cmp	r3, #0
 8004c0e:	d1f0      	bne.n	8004bf2 <HAL_RCC_OscConfig+0x3a2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	681b      	ldr	r3, [r3, #0]
 8004c14:	f003 0308 	and.w	r3, r3, #8
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	d03c      	beq.n	8004c96 <HAL_RCC_OscConfig+0x446>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	695b      	ldr	r3, [r3, #20]
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	d01c      	beq.n	8004c5e <HAL_RCC_OscConfig+0x40e>
        MODIFY_REG(RCC->CSR, RCC_CSR_LSIPREDIV, RCC_OscInitStruct->LSIDiv);
      }
#endif /* RCC_CSR_LSIPREDIV */

      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004c24:	4b4b      	ldr	r3, [pc, #300]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c26:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004c2a:	4a4a      	ldr	r2, [pc, #296]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c2c:	f043 0301 	orr.w	r3, r3, #1
 8004c30:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004c34:	f7fe fe2a 	bl	800388c <HAL_GetTick>
 8004c38:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8004c3a:	e008      	b.n	8004c4e <HAL_RCC_OscConfig+0x3fe>
      {
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004c3c:	f7fe fe26 	bl	800388c <HAL_GetTick>
 8004c40:	4602      	mov	r2, r0
 8004c42:	693b      	ldr	r3, [r7, #16]
 8004c44:	1ad3      	subs	r3, r2, r3
 8004c46:	2b02      	cmp	r3, #2
 8004c48:	d901      	bls.n	8004c4e <HAL_RCC_OscConfig+0x3fe>
        {
          return HAL_TIMEOUT;
 8004c4a:	2303      	movs	r3, #3
 8004c4c:	e1d4      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 8004c4e:	4b41      	ldr	r3, [pc, #260]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c50:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004c54:	f003 0302 	and.w	r3, r3, #2
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	d0ef      	beq.n	8004c3c <HAL_RCC_OscConfig+0x3ec>
 8004c5c:	e01b      	b.n	8004c96 <HAL_RCC_OscConfig+0x446>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004c5e:	4b3d      	ldr	r3, [pc, #244]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c60:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004c64:	4a3b      	ldr	r2, [pc, #236]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c66:	f023 0301 	bic.w	r3, r3, #1
 8004c6a:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004c6e:	f7fe fe0d 	bl	800388c <HAL_GetTick>
 8004c72:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8004c74:	e008      	b.n	8004c88 <HAL_RCC_OscConfig+0x438>
      {
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8004c76:	f7fe fe09 	bl	800388c <HAL_GetTick>
 8004c7a:	4602      	mov	r2, r0
 8004c7c:	693b      	ldr	r3, [r7, #16]
 8004c7e:	1ad3      	subs	r3, r2, r3
 8004c80:	2b02      	cmp	r3, #2
 8004c82:	d901      	bls.n	8004c88 <HAL_RCC_OscConfig+0x438>
        {
          return HAL_TIMEOUT;
 8004c84:	2303      	movs	r3, #3
 8004c86:	e1b7      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 8004c88:	4b32      	ldr	r3, [pc, #200]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004c8a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004c8e:	f003 0302 	and.w	r3, r3, #2
 8004c92:	2b00      	cmp	r3, #0
 8004c94:	d1ef      	bne.n	8004c76 <HAL_RCC_OscConfig+0x426>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	681b      	ldr	r3, [r3, #0]
 8004c9a:	f003 0304 	and.w	r3, r3, #4
 8004c9e:	2b00      	cmp	r3, #0
 8004ca0:	f000 80a6 	beq.w	8004df0 <HAL_RCC_OscConfig+0x5a0>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004ca4:	2300      	movs	r3, #0
 8004ca6:	77fb      	strb	r3, [r7, #31]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 8004ca8:	4b2a      	ldr	r3, [pc, #168]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004caa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004cac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d10d      	bne.n	8004cd0 <HAL_RCC_OscConfig+0x480>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004cb4:	4b27      	ldr	r3, [pc, #156]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004cb6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004cb8:	4a26      	ldr	r2, [pc, #152]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004cba:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004cbe:	6593      	str	r3, [r2, #88]	; 0x58
 8004cc0:	4b24      	ldr	r3, [pc, #144]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004cc2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004cc4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004cc8:	60bb      	str	r3, [r7, #8]
 8004cca:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8004ccc:	2301      	movs	r3, #1
 8004cce:	77fb      	strb	r3, [r7, #31]
    }

    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8004cd0:	4b21      	ldr	r3, [pc, #132]	; (8004d58 <HAL_RCC_OscConfig+0x508>)
 8004cd2:	681b      	ldr	r3, [r3, #0]
 8004cd4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004cd8:	2b00      	cmp	r3, #0
 8004cda:	d118      	bne.n	8004d0e <HAL_RCC_OscConfig+0x4be>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8004cdc:	4b1e      	ldr	r3, [pc, #120]	; (8004d58 <HAL_RCC_OscConfig+0x508>)
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	4a1d      	ldr	r2, [pc, #116]	; (8004d58 <HAL_RCC_OscConfig+0x508>)
 8004ce2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004ce6:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004ce8:	f7fe fdd0 	bl	800388c <HAL_GetTick>
 8004cec:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8004cee:	e008      	b.n	8004d02 <HAL_RCC_OscConfig+0x4b2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004cf0:	f7fe fdcc 	bl	800388c <HAL_GetTick>
 8004cf4:	4602      	mov	r2, r0
 8004cf6:	693b      	ldr	r3, [r7, #16]
 8004cf8:	1ad3      	subs	r3, r2, r3
 8004cfa:	2b02      	cmp	r3, #2
 8004cfc:	d901      	bls.n	8004d02 <HAL_RCC_OscConfig+0x4b2>
        {
          return HAL_TIMEOUT;
 8004cfe:	2303      	movs	r3, #3
 8004d00:	e17a      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8004d02:	4b15      	ldr	r3, [pc, #84]	; (8004d58 <HAL_RCC_OscConfig+0x508>)
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004d0a:	2b00      	cmp	r3, #0
 8004d0c:	d0f0      	beq.n	8004cf0 <HAL_RCC_OscConfig+0x4a0>
    {
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
    }
#else
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	689b      	ldr	r3, [r3, #8]
 8004d12:	2b01      	cmp	r3, #1
 8004d14:	d108      	bne.n	8004d28 <HAL_RCC_OscConfig+0x4d8>
 8004d16:	4b0f      	ldr	r3, [pc, #60]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004d18:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d1c:	4a0d      	ldr	r2, [pc, #52]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004d1e:	f043 0301 	orr.w	r3, r3, #1
 8004d22:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004d26:	e029      	b.n	8004d7c <HAL_RCC_OscConfig+0x52c>
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	689b      	ldr	r3, [r3, #8]
 8004d2c:	2b05      	cmp	r3, #5
 8004d2e:	d115      	bne.n	8004d5c <HAL_RCC_OscConfig+0x50c>
 8004d30:	4b08      	ldr	r3, [pc, #32]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004d32:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d36:	4a07      	ldr	r2, [pc, #28]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004d38:	f043 0304 	orr.w	r3, r3, #4
 8004d3c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004d40:	4b04      	ldr	r3, [pc, #16]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004d42:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d46:	4a03      	ldr	r2, [pc, #12]	; (8004d54 <HAL_RCC_OscConfig+0x504>)
 8004d48:	f043 0301 	orr.w	r3, r3, #1
 8004d4c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004d50:	e014      	b.n	8004d7c <HAL_RCC_OscConfig+0x52c>
 8004d52:	bf00      	nop
 8004d54:	40021000 	.word	0x40021000
 8004d58:	40007000 	.word	0x40007000
 8004d5c:	4b9c      	ldr	r3, [pc, #624]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004d5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d62:	4a9b      	ldr	r2, [pc, #620]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004d64:	f023 0301 	bic.w	r3, r3, #1
 8004d68:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8004d6c:	4b98      	ldr	r3, [pc, #608]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004d6e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004d72:	4a97      	ldr	r2, [pc, #604]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004d74:	f023 0304 	bic.w	r3, r3, #4
 8004d78:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
#endif /* RCC_BDCR_LSESYSDIS */

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	689b      	ldr	r3, [r3, #8]
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d016      	beq.n	8004db2 <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004d84:	f7fe fd82 	bl	800388c <HAL_GetTick>
 8004d88:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004d8a:	e00a      	b.n	8004da2 <HAL_RCC_OscConfig+0x552>
      {
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004d8c:	f7fe fd7e 	bl	800388c <HAL_GetTick>
 8004d90:	4602      	mov	r2, r0
 8004d92:	693b      	ldr	r3, [r7, #16]
 8004d94:	1ad3      	subs	r3, r2, r3
 8004d96:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d9a:	4293      	cmp	r3, r2
 8004d9c:	d901      	bls.n	8004da2 <HAL_RCC_OscConfig+0x552>
        {
          return HAL_TIMEOUT;
 8004d9e:	2303      	movs	r3, #3
 8004da0:	e12a      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8004da2:	4b8b      	ldr	r3, [pc, #556]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004da4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004da8:	f003 0302 	and.w	r3, r3, #2
 8004dac:	2b00      	cmp	r3, #0
 8004dae:	d0ed      	beq.n	8004d8c <HAL_RCC_OscConfig+0x53c>
 8004db0:	e015      	b.n	8004dde <HAL_RCC_OscConfig+0x58e>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8004db2:	f7fe fd6b 	bl	800388c <HAL_GetTick>
 8004db6:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004db8:	e00a      	b.n	8004dd0 <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8004dba:	f7fe fd67 	bl	800388c <HAL_GetTick>
 8004dbe:	4602      	mov	r2, r0
 8004dc0:	693b      	ldr	r3, [r7, #16]
 8004dc2:	1ad3      	subs	r3, r2, r3
 8004dc4:	f241 3288 	movw	r2, #5000	; 0x1388
 8004dc8:	4293      	cmp	r3, r2
 8004dca:	d901      	bls.n	8004dd0 <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 8004dcc:	2303      	movs	r3, #3
 8004dce:	e113      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 8004dd0:	4b7f      	ldr	r3, [pc, #508]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004dd2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004dd6:	f003 0302 	and.w	r3, r3, #2
 8004dda:	2b00      	cmp	r3, #0
 8004ddc:	d1ed      	bne.n	8004dba <HAL_RCC_OscConfig+0x56a>
      CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSESYSDIS);
#endif /* RCC_BDCR_LSESYSDIS */
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8004dde:	7ffb      	ldrb	r3, [r7, #31]
 8004de0:	2b01      	cmp	r3, #1
 8004de2:	d105      	bne.n	8004df0 <HAL_RCC_OscConfig+0x5a0>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004de4:	4b7a      	ldr	r3, [pc, #488]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004de6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004de8:	4a79      	ldr	r2, [pc, #484]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004dea:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004dee:	6593      	str	r3, [r2, #88]	; 0x58
#endif /* RCC_HSI48_SUPPORT */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));

  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004df4:	2b00      	cmp	r3, #0
 8004df6:	f000 80fe 	beq.w	8004ff6 <HAL_RCC_OscConfig+0x7a6>
  {
    /* PLL On ? */
    if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004dfe:	2b02      	cmp	r3, #2
 8004e00:	f040 80d0 	bne.w	8004fa4 <HAL_RCC_OscConfig+0x754>
#endif /* RCC_PLLP_SUPPORT */
      assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
      assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

      /* Do nothing if PLL configuration is the unchanged */
      pll_config = RCC->PLLCFGR;
 8004e04:	4b72      	ldr	r3, [pc, #456]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004e06:	68db      	ldr	r3, [r3, #12]
 8004e08:	617b      	str	r3, [r7, #20]
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004e0a:	697b      	ldr	r3, [r7, #20]
 8004e0c:	f003 0203 	and.w	r2, r3, #3
 8004e10:	687b      	ldr	r3, [r7, #4]
 8004e12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e14:	429a      	cmp	r2, r3
 8004e16:	d130      	bne.n	8004e7a <HAL_RCC_OscConfig+0x62a>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 8004e18:	697b      	ldr	r3, [r7, #20]
 8004e1a:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e22:	3b01      	subs	r3, #1
 8004e24:	011b      	lsls	r3, r3, #4
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004e26:	429a      	cmp	r2, r3
 8004e28:	d127      	bne.n	8004e7a <HAL_RCC_OscConfig+0x62a>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004e2a:	697b      	ldr	r3, [r7, #20]
 8004e2c:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004e34:	021b      	lsls	r3, r3, #8
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 8004e36:	429a      	cmp	r2, r3
 8004e38:	d11f      	bne.n	8004e7a <HAL_RCC_OscConfig+0x62a>
#if defined(RCC_PLLP_SUPPORT)
#if defined(RCC_PLLP_DIV_2_31_SUPPORT)
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLPDIV) != (RCC_OscInitStruct->PLL.PLLP << RCC_PLLCFGR_PLLPDIV_Pos)) ||
#else
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8004e3a:	697b      	ldr	r3, [r7, #20]
 8004e3c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004e40:	687a      	ldr	r2, [r7, #4]
 8004e42:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004e44:	2a07      	cmp	r2, #7
 8004e46:	bf14      	ite	ne
 8004e48:	2201      	movne	r2, #1
 8004e4a:	2200      	moveq	r2, #0
 8004e4c:	b2d2      	uxtb	r2, r2
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8004e4e:	4293      	cmp	r3, r2
 8004e50:	d113      	bne.n	8004e7a <HAL_RCC_OscConfig+0x62a>
#endif
#endif
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8004e52:	697b      	ldr	r3, [r7, #20]
 8004e54:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004e5c:	085b      	lsrs	r3, r3, #1
 8004e5e:	3b01      	subs	r3, #1
 8004e60:	055b      	lsls	r3, r3, #21
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8004e62:	429a      	cmp	r2, r3
 8004e64:	d109      	bne.n	8004e7a <HAL_RCC_OscConfig+0x62a>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U) << RCC_PLLCFGR_PLLR_Pos)))
 8004e66:	697b      	ldr	r3, [r7, #20]
 8004e68:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e70:	085b      	lsrs	r3, r3, #1
 8004e72:	3b01      	subs	r3, #1
 8004e74:	065b      	lsls	r3, r3, #25
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8004e76:	429a      	cmp	r2, r3
 8004e78:	d06e      	beq.n	8004f58 <HAL_RCC_OscConfig+0x708>
      {
        /* Check if the PLL is used as system clock or not */
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 8004e7a:	69bb      	ldr	r3, [r7, #24]
 8004e7c:	2b0c      	cmp	r3, #12
 8004e7e:	d069      	beq.n	8004f54 <HAL_RCC_OscConfig+0x704>
        {
#if defined(RCC_PLLSAI1_SUPPORT) || defined(RCC_PLLSAI2_SUPPORT)
          /* Check if main PLL can be updated */
          /* Not possible if the source is shared by other enabled PLLSAIx */
          if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 8004e80:	4b53      	ldr	r3, [pc, #332]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004e82:	681b      	ldr	r3, [r3, #0]
 8004e84:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d105      	bne.n	8004e98 <HAL_RCC_OscConfig+0x648>
#if defined(RCC_PLLSAI2_SUPPORT)
             || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 8004e8c:	4b50      	ldr	r3, [pc, #320]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d001      	beq.n	8004e9c <HAL_RCC_OscConfig+0x64c>
#endif
            )
          {
            return HAL_ERROR;
 8004e98:	2301      	movs	r3, #1
 8004e9a:	e0ad      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
          }
          else
#endif /* RCC_PLLSAI1_SUPPORT || RCC_PLLSAI2_SUPPORT */
          {
            /* Disable the main PLL. */
            __HAL_RCC_PLL_DISABLE();
 8004e9c:	4b4c      	ldr	r3, [pc, #304]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	4a4b      	ldr	r2, [pc, #300]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004ea2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004ea6:	6013      	str	r3, [r2, #0]

            /* Get Start Tick*/
            tickstart = HAL_GetTick();
 8004ea8:	f7fe fcf0 	bl	800388c <HAL_GetTick>
 8004eac:	6138      	str	r0, [r7, #16]

            /* Wait till PLL is ready */
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004eae:	e008      	b.n	8004ec2 <HAL_RCC_OscConfig+0x672>
            {
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004eb0:	f7fe fcec 	bl	800388c <HAL_GetTick>
 8004eb4:	4602      	mov	r2, r0
 8004eb6:	693b      	ldr	r3, [r7, #16]
 8004eb8:	1ad3      	subs	r3, r2, r3
 8004eba:	2b02      	cmp	r3, #2
 8004ebc:	d901      	bls.n	8004ec2 <HAL_RCC_OscConfig+0x672>
              {
                return HAL_TIMEOUT;
 8004ebe:	2303      	movs	r3, #3
 8004ec0:	e09a      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004ec2:	4b43      	ldr	r3, [pc, #268]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004ec4:	681b      	ldr	r3, [r3, #0]
 8004ec6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004eca:	2b00      	cmp	r3, #0
 8004ecc:	d1f0      	bne.n	8004eb0 <HAL_RCC_OscConfig+0x660>
              }
            }

            /* Configure the main PLL clock source, multiplication and division factors. */
#if defined(RCC_PLLP_SUPPORT)
            __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004ece:	4b40      	ldr	r3, [pc, #256]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004ed0:	68da      	ldr	r2, [r3, #12]
 8004ed2:	4b40      	ldr	r3, [pc, #256]	; (8004fd4 <HAL_RCC_OscConfig+0x784>)
 8004ed4:	4013      	ands	r3, r2
 8004ed6:	687a      	ldr	r2, [r7, #4]
 8004ed8:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8004eda:	687a      	ldr	r2, [r7, #4]
 8004edc:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8004ede:	3a01      	subs	r2, #1
 8004ee0:	0112      	lsls	r2, r2, #4
 8004ee2:	4311      	orrs	r1, r2
 8004ee4:	687a      	ldr	r2, [r7, #4]
 8004ee6:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8004ee8:	0212      	lsls	r2, r2, #8
 8004eea:	4311      	orrs	r1, r2
 8004eec:	687a      	ldr	r2, [r7, #4]
 8004eee:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004ef0:	0852      	lsrs	r2, r2, #1
 8004ef2:	3a01      	subs	r2, #1
 8004ef4:	0552      	lsls	r2, r2, #21
 8004ef6:	4311      	orrs	r1, r2
 8004ef8:	687a      	ldr	r2, [r7, #4]
 8004efa:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8004efc:	0852      	lsrs	r2, r2, #1
 8004efe:	3a01      	subs	r2, #1
 8004f00:	0652      	lsls	r2, r2, #25
 8004f02:	4311      	orrs	r1, r2
 8004f04:	687a      	ldr	r2, [r7, #4]
 8004f06:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004f08:	0912      	lsrs	r2, r2, #4
 8004f0a:	0452      	lsls	r2, r2, #17
 8004f0c:	430a      	orrs	r2, r1
 8004f0e:	4930      	ldr	r1, [pc, #192]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f10:	4313      	orrs	r3, r2
 8004f12:	60cb      	str	r3, [r1, #12]
                                 RCC_OscInitStruct->PLL.PLLQ,
                                 RCC_OscInitStruct->PLL.PLLR);
#endif

            /* Enable the main PLL. */
            __HAL_RCC_PLL_ENABLE();
 8004f14:	4b2e      	ldr	r3, [pc, #184]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	4a2d      	ldr	r2, [pc, #180]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f1a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004f1e:	6013      	str	r3, [r2, #0]

            /* Enable PLL System Clock output. */
            __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8004f20:	4b2b      	ldr	r3, [pc, #172]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f22:	68db      	ldr	r3, [r3, #12]
 8004f24:	4a2a      	ldr	r2, [pc, #168]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f26:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004f2a:	60d3      	str	r3, [r2, #12]

            /* Get Start Tick*/
            tickstart = HAL_GetTick();
 8004f2c:	f7fe fcae 	bl	800388c <HAL_GetTick>
 8004f30:	6138      	str	r0, [r7, #16]

            /* Wait till PLL is ready */
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004f32:	e008      	b.n	8004f46 <HAL_RCC_OscConfig+0x6f6>
            {
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004f34:	f7fe fcaa 	bl	800388c <HAL_GetTick>
 8004f38:	4602      	mov	r2, r0
 8004f3a:	693b      	ldr	r3, [r7, #16]
 8004f3c:	1ad3      	subs	r3, r2, r3
 8004f3e:	2b02      	cmp	r3, #2
 8004f40:	d901      	bls.n	8004f46 <HAL_RCC_OscConfig+0x6f6>
              {
                return HAL_TIMEOUT;
 8004f42:	2303      	movs	r3, #3
 8004f44:	e058      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004f46:	4b22      	ldr	r3, [pc, #136]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f4e:	2b00      	cmp	r3, #0
 8004f50:	d0f0      	beq.n	8004f34 <HAL_RCC_OscConfig+0x6e4>
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 8004f52:	e050      	b.n	8004ff6 <HAL_RCC_OscConfig+0x7a6>
          }
        }
        else
        {
          /* PLL is already used as System core clock */
          return HAL_ERROR;
 8004f54:	2301      	movs	r3, #1
 8004f56:	e04f      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      }
      else
      {
        /* PLL configuration is unchanged */
        /* Re-enable PLL if it was disabled (ie. low power mode) */
        if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004f58:	4b1d      	ldr	r3, [pc, #116]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f60:	2b00      	cmp	r3, #0
 8004f62:	d148      	bne.n	8004ff6 <HAL_RCC_OscConfig+0x7a6>
        {
          /* Enable the main PLL. */
          __HAL_RCC_PLL_ENABLE();
 8004f64:	4b1a      	ldr	r3, [pc, #104]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f66:	681b      	ldr	r3, [r3, #0]
 8004f68:	4a19      	ldr	r2, [pc, #100]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f6a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004f6e:	6013      	str	r3, [r2, #0]

          /* Enable PLL System Clock output. */
          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8004f70:	4b17      	ldr	r3, [pc, #92]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f72:	68db      	ldr	r3, [r3, #12]
 8004f74:	4a16      	ldr	r2, [pc, #88]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f76:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8004f7a:	60d3      	str	r3, [r2, #12]

          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 8004f7c:	f7fe fc86 	bl	800388c <HAL_GetTick>
 8004f80:	6138      	str	r0, [r7, #16]

          /* Wait till PLL is ready */
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004f82:	e008      	b.n	8004f96 <HAL_RCC_OscConfig+0x746>
          {
            if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004f84:	f7fe fc82 	bl	800388c <HAL_GetTick>
 8004f88:	4602      	mov	r2, r0
 8004f8a:	693b      	ldr	r3, [r7, #16]
 8004f8c:	1ad3      	subs	r3, r2, r3
 8004f8e:	2b02      	cmp	r3, #2
 8004f90:	d901      	bls.n	8004f96 <HAL_RCC_OscConfig+0x746>
            {
              return HAL_TIMEOUT;
 8004f92:	2303      	movs	r3, #3
 8004f94:	e030      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8004f96:	4b0e      	ldr	r3, [pc, #56]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d0f0      	beq.n	8004f84 <HAL_RCC_OscConfig+0x734>
 8004fa2:	e028      	b.n	8004ff6 <HAL_RCC_OscConfig+0x7a6>
      }
    }
    else
    {
      /* Check that PLL is not used as system clock or not */
      if(sysclk_source != RCC_CFGR_SWS_PLL)
 8004fa4:	69bb      	ldr	r3, [r7, #24]
 8004fa6:	2b0c      	cmp	r3, #12
 8004fa8:	d023      	beq.n	8004ff2 <HAL_RCC_OscConfig+0x7a2>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004faa:	4b09      	ldr	r3, [pc, #36]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	4a08      	ldr	r2, [pc, #32]	; (8004fd0 <HAL_RCC_OscConfig+0x780>)
 8004fb0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8004fb4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004fb6:	f7fe fc69 	bl	800388c <HAL_GetTick>
 8004fba:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004fbc:	e00c      	b.n	8004fd8 <HAL_RCC_OscConfig+0x788>
        {
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8004fbe:	f7fe fc65 	bl	800388c <HAL_GetTick>
 8004fc2:	4602      	mov	r2, r0
 8004fc4:	693b      	ldr	r3, [r7, #16]
 8004fc6:	1ad3      	subs	r3, r2, r3
 8004fc8:	2b02      	cmp	r3, #2
 8004fca:	d905      	bls.n	8004fd8 <HAL_RCC_OscConfig+0x788>
          {
            return HAL_TIMEOUT;
 8004fcc:	2303      	movs	r3, #3
 8004fce:	e013      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
 8004fd0:	40021000 	.word	0x40021000
 8004fd4:	f99d808c 	.word	0xf99d808c
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8004fd8:	4b09      	ldr	r3, [pc, #36]	; (8005000 <HAL_RCC_OscConfig+0x7b0>)
 8004fda:	681b      	ldr	r3, [r3, #0]
 8004fdc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004fe0:	2b00      	cmp	r3, #0
 8004fe2:	d1ec      	bne.n	8004fbe <HAL_RCC_OscConfig+0x76e>
          }
        }
        /* Unselect main PLL clock source and disable main PLL outputs to save power */
#if defined(RCC_PLLSAI2_SUPPORT)
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 8004fe4:	4b06      	ldr	r3, [pc, #24]	; (8005000 <HAL_RCC_OscConfig+0x7b0>)
 8004fe6:	68da      	ldr	r2, [r3, #12]
 8004fe8:	4905      	ldr	r1, [pc, #20]	; (8005000 <HAL_RCC_OscConfig+0x7b0>)
 8004fea:	4b06      	ldr	r3, [pc, #24]	; (8005004 <HAL_RCC_OscConfig+0x7b4>)
 8004fec:	4013      	ands	r3, r2
 8004fee:	60cb      	str	r3, [r1, #12]
 8004ff0:	e001      	b.n	8004ff6 <HAL_RCC_OscConfig+0x7a6>
#endif /* RCC_PLLSAI2_SUPPORT */
      }
      else
      {
        /* PLL is already used as System core clock */
        return HAL_ERROR;
 8004ff2:	2301      	movs	r3, #1
 8004ff4:	e000      	b.n	8004ff8 <HAL_RCC_OscConfig+0x7a8>
      }
    }
  }
  return HAL_OK;
 8004ff6:	2300      	movs	r3, #0
}
 8004ff8:	4618      	mov	r0, r3
 8004ffa:	3720      	adds	r7, #32
 8004ffc:	46bd      	mov	sp, r7
 8004ffe:	bd80      	pop	{r7, pc}
 8005000:	40021000 	.word	0x40021000
 8005004:	feeefffc 	.word	0xfeeefffc

08005008 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005008:	b580      	push	{r7, lr}
 800500a:	b084      	sub	sp, #16
 800500c:	af00      	add	r7, sp, #0
 800500e:	6078      	str	r0, [r7, #4]
 8005010:	6039      	str	r1, [r7, #0]
  uint32_t hpre = RCC_SYSCLK_DIV1;
#endif
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	2b00      	cmp	r3, #0
 8005016:	d101      	bne.n	800501c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005018:	2301      	movs	r3, #1
 800501a:	e0e7      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800501c:	4b75      	ldr	r3, [pc, #468]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	f003 0307 	and.w	r3, r3, #7
 8005024:	683a      	ldr	r2, [r7, #0]
 8005026:	429a      	cmp	r2, r3
 8005028:	d910      	bls.n	800504c <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800502a:	4b72      	ldr	r3, [pc, #456]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	f023 0207 	bic.w	r2, r3, #7
 8005032:	4970      	ldr	r1, [pc, #448]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 8005034:	683b      	ldr	r3, [r7, #0]
 8005036:	4313      	orrs	r3, r2
 8005038:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800503a:	4b6e      	ldr	r3, [pc, #440]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	f003 0307 	and.w	r3, r3, #7
 8005042:	683a      	ldr	r2, [r7, #0]
 8005044:	429a      	cmp	r2, r3
 8005046:	d001      	beq.n	800504c <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 8005048:	2301      	movs	r3, #1
 800504a:	e0cf      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
    }
  }

  /*----------------- HCLK Configuration prior to SYSCLK----------------------*/
  /* Apply higher HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is increased */
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f003 0302 	and.w	r3, r3, #2
 8005054:	2b00      	cmp	r3, #0
 8005056:	d010      	beq.n	800507a <HAL_RCC_ClockConfig+0x72>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));

    if(RCC_ClkInitStruct->AHBCLKDivider > READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	689a      	ldr	r2, [r3, #8]
 800505c:	4b66      	ldr	r3, [pc, #408]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 800505e:	689b      	ldr	r3, [r3, #8]
 8005060:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005064:	429a      	cmp	r2, r3
 8005066:	d908      	bls.n	800507a <HAL_RCC_ClockConfig+0x72>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005068:	4b63      	ldr	r3, [pc, #396]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 800506a:	689b      	ldr	r3, [r3, #8]
 800506c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	689b      	ldr	r3, [r3, #8]
 8005074:	4960      	ldr	r1, [pc, #384]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 8005076:	4313      	orrs	r3, r2
 8005078:	608b      	str	r3, [r1, #8]
    }
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	f003 0301 	and.w	r3, r3, #1
 8005082:	2b00      	cmp	r3, #0
 8005084:	d04c      	beq.n	8005120 <HAL_RCC_ClockConfig+0x118>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* PLL is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	685b      	ldr	r3, [r3, #4]
 800508a:	2b03      	cmp	r3, #3
 800508c:	d107      	bne.n	800509e <HAL_RCC_ClockConfig+0x96>
    {
      /* Check the PLL ready flag */
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 800508e:	4b5a      	ldr	r3, [pc, #360]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005096:	2b00      	cmp	r3, #0
 8005098:	d121      	bne.n	80050de <HAL_RCC_ClockConfig+0xd6>
      {
        return HAL_ERROR;
 800509a:	2301      	movs	r3, #1
 800509c:	e0a6      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
#endif
    }
    else
    {
      /* HSE is selected as System Clock Source */
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	685b      	ldr	r3, [r3, #4]
 80050a2:	2b02      	cmp	r3, #2
 80050a4:	d107      	bne.n	80050b6 <HAL_RCC_ClockConfig+0xae>
      {
        /* Check the HSE ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80050a6:	4b54      	ldr	r3, [pc, #336]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80050a8:	681b      	ldr	r3, [r3, #0]
 80050aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80050ae:	2b00      	cmp	r3, #0
 80050b0:	d115      	bne.n	80050de <HAL_RCC_ClockConfig+0xd6>
        {
          return HAL_ERROR;
 80050b2:	2301      	movs	r3, #1
 80050b4:	e09a      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
        }
      }
      /* MSI is selected as System Clock Source */
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	685b      	ldr	r3, [r3, #4]
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	d107      	bne.n	80050ce <HAL_RCC_ClockConfig+0xc6>
      {
        /* Check the MSI ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 80050be:	4b4e      	ldr	r3, [pc, #312]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	f003 0302 	and.w	r3, r3, #2
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d109      	bne.n	80050de <HAL_RCC_ClockConfig+0xd6>
        {
          return HAL_ERROR;
 80050ca:	2301      	movs	r3, #1
 80050cc:	e08e      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
      }
      /* HSI is selected as System Clock Source */
      else
      {
        /* Check the HSI ready flag */
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 80050ce:	4b4a      	ldr	r3, [pc, #296]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80050d0:	681b      	ldr	r3, [r3, #0]
 80050d2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d101      	bne.n	80050de <HAL_RCC_ClockConfig+0xd6>
        {
          return HAL_ERROR;
 80050da:	2301      	movs	r3, #1
 80050dc:	e086      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
      }
#endif

    }

    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 80050de:	4b46      	ldr	r3, [pc, #280]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80050e0:	689b      	ldr	r3, [r3, #8]
 80050e2:	f023 0203 	bic.w	r2, r3, #3
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	685b      	ldr	r3, [r3, #4]
 80050ea:	4943      	ldr	r1, [pc, #268]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80050ec:	4313      	orrs	r3, r2
 80050ee:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80050f0:	f7fe fbcc 	bl	800388c <HAL_GetTick>
 80050f4:	60f8      	str	r0, [r7, #12]

    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80050f6:	e00a      	b.n	800510e <HAL_RCC_ClockConfig+0x106>
    {
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80050f8:	f7fe fbc8 	bl	800388c <HAL_GetTick>
 80050fc:	4602      	mov	r2, r0
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	1ad3      	subs	r3, r2, r3
 8005102:	f241 3288 	movw	r2, #5000	; 0x1388
 8005106:	4293      	cmp	r3, r2
 8005108:	d901      	bls.n	800510e <HAL_RCC_ClockConfig+0x106>
      {
        return HAL_TIMEOUT;
 800510a:	2303      	movs	r3, #3
 800510c:	e06e      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800510e:	4b3a      	ldr	r3, [pc, #232]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 8005110:	689b      	ldr	r3, [r3, #8]
 8005112:	f003 020c 	and.w	r2, r3, #12
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	685b      	ldr	r3, [r3, #4]
 800511a:	009b      	lsls	r3, r3, #2
 800511c:	429a      	cmp	r2, r3
 800511e:	d1eb      	bne.n	80050f8 <HAL_RCC_ClockConfig+0xf0>
  }
#endif

  /*----------------- HCLK Configuration after SYSCLK-------------------------*/
  /* Apply lower HCLK prescaler request here to ensure CPU clock is not of of spec when SYSCLK is set */
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	f003 0302 	and.w	r3, r3, #2
 8005128:	2b00      	cmp	r3, #0
 800512a:	d010      	beq.n	800514e <HAL_RCC_ClockConfig+0x146>
  {
    if(RCC_ClkInitStruct->AHBCLKDivider < READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	689a      	ldr	r2, [r3, #8]
 8005130:	4b31      	ldr	r3, [pc, #196]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 8005132:	689b      	ldr	r3, [r3, #8]
 8005134:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8005138:	429a      	cmp	r2, r3
 800513a:	d208      	bcs.n	800514e <HAL_RCC_ClockConfig+0x146>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800513c:	4b2e      	ldr	r3, [pc, #184]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 800513e:	689b      	ldr	r3, [r3, #8]
 8005140:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	689b      	ldr	r3, [r3, #8]
 8005148:	492b      	ldr	r1, [pc, #172]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 800514a:	4313      	orrs	r3, r2
 800514c:	608b      	str	r3, [r1, #8]
    }
  }

  /* Allow decreasing of the number of wait states (because of lower CPU frequency expected) */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800514e:	4b29      	ldr	r3, [pc, #164]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f003 0307 	and.w	r3, r3, #7
 8005156:	683a      	ldr	r2, [r7, #0]
 8005158:	429a      	cmp	r2, r3
 800515a:	d210      	bcs.n	800517e <HAL_RCC_ClockConfig+0x176>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800515c:	4b25      	ldr	r3, [pc, #148]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 800515e:	681b      	ldr	r3, [r3, #0]
 8005160:	f023 0207 	bic.w	r2, r3, #7
 8005164:	4923      	ldr	r1, [pc, #140]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 8005166:	683b      	ldr	r3, [r7, #0]
 8005168:	4313      	orrs	r3, r2
 800516a:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800516c:	4b21      	ldr	r3, [pc, #132]	; (80051f4 <HAL_RCC_ClockConfig+0x1ec>)
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	f003 0307 	and.w	r3, r3, #7
 8005174:	683a      	ldr	r2, [r7, #0]
 8005176:	429a      	cmp	r2, r3
 8005178:	d001      	beq.n	800517e <HAL_RCC_ClockConfig+0x176>
    {
      return HAL_ERROR;
 800517a:	2301      	movs	r3, #1
 800517c:	e036      	b.n	80051ec <HAL_RCC_ClockConfig+0x1e4>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	f003 0304 	and.w	r3, r3, #4
 8005186:	2b00      	cmp	r3, #0
 8005188:	d008      	beq.n	800519c <HAL_RCC_ClockConfig+0x194>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800518a:	4b1b      	ldr	r3, [pc, #108]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 800518c:	689b      	ldr	r3, [r3, #8]
 800518e:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	68db      	ldr	r3, [r3, #12]
 8005196:	4918      	ldr	r1, [pc, #96]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 8005198:	4313      	orrs	r3, r2
 800519a:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	f003 0308 	and.w	r3, r3, #8
 80051a4:	2b00      	cmp	r3, #0
 80051a6:	d009      	beq.n	80051bc <HAL_RCC_ClockConfig+0x1b4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80051a8:	4b13      	ldr	r3, [pc, #76]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	691b      	ldr	r3, [r3, #16]
 80051b4:	00db      	lsls	r3, r3, #3
 80051b6:	4910      	ldr	r1, [pc, #64]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80051b8:	4313      	orrs	r3, r2
 80051ba:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 80051bc:	f000 f824 	bl	8005208 <HAL_RCC_GetSysClockFreq>
 80051c0:	4602      	mov	r2, r0
 80051c2:	4b0d      	ldr	r3, [pc, #52]	; (80051f8 <HAL_RCC_ClockConfig+0x1f0>)
 80051c4:	689b      	ldr	r3, [r3, #8]
 80051c6:	091b      	lsrs	r3, r3, #4
 80051c8:	f003 030f 	and.w	r3, r3, #15
 80051cc:	490b      	ldr	r1, [pc, #44]	; (80051fc <HAL_RCC_ClockConfig+0x1f4>)
 80051ce:	5ccb      	ldrb	r3, [r1, r3]
 80051d0:	f003 031f 	and.w	r3, r3, #31
 80051d4:	fa22 f303 	lsr.w	r3, r2, r3
 80051d8:	4a09      	ldr	r2, [pc, #36]	; (8005200 <HAL_RCC_ClockConfig+0x1f8>)
 80051da:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 80051dc:	4b09      	ldr	r3, [pc, #36]	; (8005204 <HAL_RCC_ClockConfig+0x1fc>)
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	4618      	mov	r0, r3
 80051e2:	f7fe fb03 	bl	80037ec <HAL_InitTick>
 80051e6:	4603      	mov	r3, r0
 80051e8:	72fb      	strb	r3, [r7, #11]

  return status;
 80051ea:	7afb      	ldrb	r3, [r7, #11]
}
 80051ec:	4618      	mov	r0, r3
 80051ee:	3710      	adds	r7, #16
 80051f0:	46bd      	mov	sp, r7
 80051f2:	bd80      	pop	{r7, pc}
 80051f4:	40022000 	.word	0x40022000
 80051f8:	40021000 	.word	0x40021000
 80051fc:	08020d5c 	.word	0x08020d5c
 8005200:	20000000 	.word	0x20000000
 8005204:	20000004 	.word	0x20000004

08005208 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005208:	b480      	push	{r7}
 800520a:	b089      	sub	sp, #36	; 0x24
 800520c:	af00      	add	r7, sp, #0
  uint32_t msirange = 0U, sysclockfreq = 0U;
 800520e:	2300      	movs	r3, #0
 8005210:	61fb      	str	r3, [r7, #28]
 8005212:	2300      	movs	r3, #0
 8005214:	61bb      	str	r3, [r7, #24]
  uint32_t pllvco, pllsource, pllr, pllm;    /* no init needed */
  uint32_t sysclk_source, pll_oscsource;

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8005216:	4b3e      	ldr	r3, [pc, #248]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 8005218:	689b      	ldr	r3, [r3, #8]
 800521a:	f003 030c 	and.w	r3, r3, #12
 800521e:	613b      	str	r3, [r7, #16]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 8005220:	4b3b      	ldr	r3, [pc, #236]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 8005222:	68db      	ldr	r3, [r3, #12]
 8005224:	f003 0303 	and.w	r3, r3, #3
 8005228:	60fb      	str	r3, [r7, #12]

  if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 800522a:	693b      	ldr	r3, [r7, #16]
 800522c:	2b00      	cmp	r3, #0
 800522e:	d005      	beq.n	800523c <HAL_RCC_GetSysClockFreq+0x34>
 8005230:	693b      	ldr	r3, [r7, #16]
 8005232:	2b0c      	cmp	r3, #12
 8005234:	d121      	bne.n	800527a <HAL_RCC_GetSysClockFreq+0x72>
     ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 8005236:	68fb      	ldr	r3, [r7, #12]
 8005238:	2b01      	cmp	r3, #1
 800523a:	d11e      	bne.n	800527a <HAL_RCC_GetSysClockFreq+0x72>
  {
    /* MSI or PLL with MSI source used as system clock source */

    /* Get SYSCLK source */
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 800523c:	4b34      	ldr	r3, [pc, #208]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	f003 0308 	and.w	r3, r3, #8
 8005244:	2b00      	cmp	r3, #0
 8005246:	d107      	bne.n	8005258 <HAL_RCC_GetSysClockFreq+0x50>
    { /* MSISRANGE from RCC_CSR applies */
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 8005248:	4b31      	ldr	r3, [pc, #196]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 800524a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800524e:	0a1b      	lsrs	r3, r3, #8
 8005250:	f003 030f 	and.w	r3, r3, #15
 8005254:	61fb      	str	r3, [r7, #28]
 8005256:	e005      	b.n	8005264 <HAL_RCC_GetSysClockFreq+0x5c>
    }
    else
    { /* MSIRANGE from RCC_CR applies */
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 8005258:	4b2d      	ldr	r3, [pc, #180]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	091b      	lsrs	r3, r3, #4
 800525e:	f003 030f 	and.w	r3, r3, #15
 8005262:	61fb      	str	r3, [r7, #28]
    }
    /*MSI frequency range in HZ*/
    msirange = MSIRangeTable[msirange];
 8005264:	4a2b      	ldr	r2, [pc, #172]	; (8005314 <HAL_RCC_GetSysClockFreq+0x10c>)
 8005266:	69fb      	ldr	r3, [r7, #28]
 8005268:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800526c:	61fb      	str	r3, [r7, #28]

    if(sysclk_source == RCC_CFGR_SWS_MSI)
 800526e:	693b      	ldr	r3, [r7, #16]
 8005270:	2b00      	cmp	r3, #0
 8005272:	d10d      	bne.n	8005290 <HAL_RCC_GetSysClockFreq+0x88>
    {
      /* MSI used as system clock source */
      sysclockfreq = msirange;
 8005274:	69fb      	ldr	r3, [r7, #28]
 8005276:	61bb      	str	r3, [r7, #24]
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8005278:	e00a      	b.n	8005290 <HAL_RCC_GetSysClockFreq+0x88>
    }
  }
  else if(sysclk_source == RCC_CFGR_SWS_HSI)
 800527a:	693b      	ldr	r3, [r7, #16]
 800527c:	2b04      	cmp	r3, #4
 800527e:	d102      	bne.n	8005286 <HAL_RCC_GetSysClockFreq+0x7e>
  {
    /* HSI used as system clock source */
    sysclockfreq = HSI_VALUE;
 8005280:	4b25      	ldr	r3, [pc, #148]	; (8005318 <HAL_RCC_GetSysClockFreq+0x110>)
 8005282:	61bb      	str	r3, [r7, #24]
 8005284:	e004      	b.n	8005290 <HAL_RCC_GetSysClockFreq+0x88>
  }
  else if(sysclk_source == RCC_CFGR_SWS_HSE)
 8005286:	693b      	ldr	r3, [r7, #16]
 8005288:	2b08      	cmp	r3, #8
 800528a:	d101      	bne.n	8005290 <HAL_RCC_GetSysClockFreq+0x88>
  {
    /* HSE used as system clock source */
    sysclockfreq = HSE_VALUE;
 800528c:	4b23      	ldr	r3, [pc, #140]	; (800531c <HAL_RCC_GetSysClockFreq+0x114>)
 800528e:	61bb      	str	r3, [r7, #24]
  else
  {
    /* unexpected case: sysclockfreq at 0 */
  }

  if(sysclk_source == RCC_CFGR_SWS_PLL)
 8005290:	693b      	ldr	r3, [r7, #16]
 8005292:	2b0c      	cmp	r3, #12
 8005294:	d134      	bne.n	8005300 <HAL_RCC_GetSysClockFreq+0xf8>
    /* PLL used as system clock  source */

    /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE) * PLLN / PLLM
    SYSCLK = PLL_VCO / PLLR
    */
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 8005296:	4b1e      	ldr	r3, [pc, #120]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 8005298:	68db      	ldr	r3, [r3, #12]
 800529a:	f003 0303 	and.w	r3, r3, #3
 800529e:	60bb      	str	r3, [r7, #8]

    switch (pllsource)
 80052a0:	68bb      	ldr	r3, [r7, #8]
 80052a2:	2b02      	cmp	r3, #2
 80052a4:	d003      	beq.n	80052ae <HAL_RCC_GetSysClockFreq+0xa6>
 80052a6:	68bb      	ldr	r3, [r7, #8]
 80052a8:	2b03      	cmp	r3, #3
 80052aa:	d003      	beq.n	80052b4 <HAL_RCC_GetSysClockFreq+0xac>
 80052ac:	e005      	b.n	80052ba <HAL_RCC_GetSysClockFreq+0xb2>
    {
    case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
      pllvco = HSI_VALUE;
 80052ae:	4b1a      	ldr	r3, [pc, #104]	; (8005318 <HAL_RCC_GetSysClockFreq+0x110>)
 80052b0:	617b      	str	r3, [r7, #20]
      break;
 80052b2:	e005      	b.n	80052c0 <HAL_RCC_GetSysClockFreq+0xb8>

    case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
      pllvco = HSE_VALUE;
 80052b4:	4b19      	ldr	r3, [pc, #100]	; (800531c <HAL_RCC_GetSysClockFreq+0x114>)
 80052b6:	617b      	str	r3, [r7, #20]
      break;
 80052b8:	e002      	b.n	80052c0 <HAL_RCC_GetSysClockFreq+0xb8>

    case RCC_PLLSOURCE_MSI:  /* MSI used as PLL clock source */
    default:
      pllvco = msirange;
 80052ba:	69fb      	ldr	r3, [r7, #28]
 80052bc:	617b      	str	r3, [r7, #20]
      break;
 80052be:	bf00      	nop
    }
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 80052c0:	4b13      	ldr	r3, [pc, #76]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 80052c2:	68db      	ldr	r3, [r3, #12]
 80052c4:	091b      	lsrs	r3, r3, #4
 80052c6:	f003 0307 	and.w	r3, r3, #7
 80052ca:	3301      	adds	r3, #1
 80052cc:	607b      	str	r3, [r7, #4]
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 80052ce:	4b10      	ldr	r3, [pc, #64]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 80052d0:	68db      	ldr	r3, [r3, #12]
 80052d2:	0a1b      	lsrs	r3, r3, #8
 80052d4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80052d8:	697a      	ldr	r2, [r7, #20]
 80052da:	fb03 f202 	mul.w	r2, r3, r2
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80052e4:	617b      	str	r3, [r7, #20]
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 80052e6:	4b0a      	ldr	r3, [pc, #40]	; (8005310 <HAL_RCC_GetSysClockFreq+0x108>)
 80052e8:	68db      	ldr	r3, [r3, #12]
 80052ea:	0e5b      	lsrs	r3, r3, #25
 80052ec:	f003 0303 	and.w	r3, r3, #3
 80052f0:	3301      	adds	r3, #1
 80052f2:	005b      	lsls	r3, r3, #1
 80052f4:	603b      	str	r3, [r7, #0]
    sysclockfreq = pllvco / pllr;
 80052f6:	697a      	ldr	r2, [r7, #20]
 80052f8:	683b      	ldr	r3, [r7, #0]
 80052fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80052fe:	61bb      	str	r3, [r7, #24]
  }

  return sysclockfreq;
 8005300:	69bb      	ldr	r3, [r7, #24]
}
 8005302:	4618      	mov	r0, r3
 8005304:	3724      	adds	r7, #36	; 0x24
 8005306:	46bd      	mov	sp, r7
 8005308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800530c:	4770      	bx	lr
 800530e:	bf00      	nop
 8005310:	40021000 	.word	0x40021000
 8005314:	08020d74 	.word	0x08020d74
 8005318:	00f42400 	.word	0x00f42400
 800531c:	007a1200 	.word	0x007a1200

08005320 <HAL_RCC_GetHCLKFreq>:
  *
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency in Hz
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005320:	b480      	push	{r7}
 8005322:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005324:	4b03      	ldr	r3, [pc, #12]	; (8005334 <HAL_RCC_GetHCLKFreq+0x14>)
 8005326:	681b      	ldr	r3, [r3, #0]
}
 8005328:	4618      	mov	r0, r3
 800532a:	46bd      	mov	sp, r7
 800532c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005330:	4770      	bx	lr
 8005332:	bf00      	nop
 8005334:	20000000 	.word	0x20000000

08005338 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005338:	b580      	push	{r7, lr}
 800533a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos] & 0x1FU));
 800533c:	f7ff fff0 	bl	8005320 <HAL_RCC_GetHCLKFreq>
 8005340:	4602      	mov	r2, r0
 8005342:	4b06      	ldr	r3, [pc, #24]	; (800535c <HAL_RCC_GetPCLK1Freq+0x24>)
 8005344:	689b      	ldr	r3, [r3, #8]
 8005346:	0a1b      	lsrs	r3, r3, #8
 8005348:	f003 0307 	and.w	r3, r3, #7
 800534c:	4904      	ldr	r1, [pc, #16]	; (8005360 <HAL_RCC_GetPCLK1Freq+0x28>)
 800534e:	5ccb      	ldrb	r3, [r1, r3]
 8005350:	f003 031f 	and.w	r3, r3, #31
 8005354:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005358:	4618      	mov	r0, r3
 800535a:	bd80      	pop	{r7, pc}
 800535c:	40021000 	.word	0x40021000
 8005360:	08020d6c 	.word	0x08020d6c

08005364 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency in Hz
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8005364:	b580      	push	{r7, lr}
 8005366:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos] & 0x1FU));
 8005368:	f7ff ffda 	bl	8005320 <HAL_RCC_GetHCLKFreq>
 800536c:	4602      	mov	r2, r0
 800536e:	4b06      	ldr	r3, [pc, #24]	; (8005388 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005370:	689b      	ldr	r3, [r3, #8]
 8005372:	0adb      	lsrs	r3, r3, #11
 8005374:	f003 0307 	and.w	r3, r3, #7
 8005378:	4904      	ldr	r1, [pc, #16]	; (800538c <HAL_RCC_GetPCLK2Freq+0x28>)
 800537a:	5ccb      	ldrb	r3, [r1, r3]
 800537c:	f003 031f 	and.w	r3, r3, #31
 8005380:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005384:	4618      	mov	r0, r3
 8005386:	bd80      	pop	{r7, pc}
 8005388:	40021000 	.word	0x40021000
 800538c:	08020d6c 	.word	0x08020d6c

08005390 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8005390:	b580      	push	{r7, lr}
 8005392:	b086      	sub	sp, #24
 8005394:	af00      	add	r7, sp, #0
 8005396:	6078      	str	r0, [r7, #4]
  uint32_t vos;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 8005398:	2300      	movs	r3, #0
 800539a:	613b      	str	r3, [r7, #16]

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 800539c:	4b2a      	ldr	r3, [pc, #168]	; (8005448 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800539e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80053a0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80053a4:	2b00      	cmp	r3, #0
 80053a6:	d003      	beq.n	80053b0 <RCC_SetFlashLatencyFromMSIRange+0x20>
  {
    vos = HAL_PWREx_GetVoltageRange();
 80053a8:	f7ff f922 	bl	80045f0 <HAL_PWREx_GetVoltageRange>
 80053ac:	6178      	str	r0, [r7, #20]
 80053ae:	e014      	b.n	80053da <RCC_SetFlashLatencyFromMSIRange+0x4a>
  }
  else
  {
    __HAL_RCC_PWR_CLK_ENABLE();
 80053b0:	4b25      	ldr	r3, [pc, #148]	; (8005448 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80053b2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80053b4:	4a24      	ldr	r2, [pc, #144]	; (8005448 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80053b6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80053ba:	6593      	str	r3, [r2, #88]	; 0x58
 80053bc:	4b22      	ldr	r3, [pc, #136]	; (8005448 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80053be:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80053c0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80053c4:	60fb      	str	r3, [r7, #12]
 80053c6:	68fb      	ldr	r3, [r7, #12]
    vos = HAL_PWREx_GetVoltageRange();
 80053c8:	f7ff f912 	bl	80045f0 <HAL_PWREx_GetVoltageRange>
 80053cc:	6178      	str	r0, [r7, #20]
    __HAL_RCC_PWR_CLK_DISABLE();
 80053ce:	4b1e      	ldr	r3, [pc, #120]	; (8005448 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80053d0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80053d2:	4a1d      	ldr	r2, [pc, #116]	; (8005448 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80053d4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80053d8:	6593      	str	r3, [r2, #88]	; 0x58
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 80053da:	697b      	ldr	r3, [r7, #20]
 80053dc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80053e0:	d10b      	bne.n	80053fa <RCC_SetFlashLatencyFromMSIRange+0x6a>
  {
    if(msirange > RCC_MSIRANGE_8)
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	2b80      	cmp	r3, #128	; 0x80
 80053e6:	d919      	bls.n	800541c <RCC_SetFlashLatencyFromMSIRange+0x8c>
    {
      /* MSI > 16Mhz */
      if(msirange > RCC_MSIRANGE_10)
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	2ba0      	cmp	r3, #160	; 0xa0
 80053ec:	d902      	bls.n	80053f4 <RCC_SetFlashLatencyFromMSIRange+0x64>
      {
        /* MSI 48Mhz */
        latency = FLASH_LATENCY_2; /* 2WS */
 80053ee:	2302      	movs	r3, #2
 80053f0:	613b      	str	r3, [r7, #16]
 80053f2:	e013      	b.n	800541c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      }
      else
      {
        /* MSI 24Mhz or 32Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 80053f4:	2301      	movs	r3, #1
 80053f6:	613b      	str	r3, [r7, #16]
 80053f8:	e010      	b.n	800541c <RCC_SetFlashLatencyFromMSIRange+0x8c>
        latency = FLASH_LATENCY_1; /* 1WS */
      }
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#else
    if(msirange > RCC_MSIRANGE_8)
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	2b80      	cmp	r3, #128	; 0x80
 80053fe:	d902      	bls.n	8005406 <RCC_SetFlashLatencyFromMSIRange+0x76>
    {
      /* MSI > 16Mhz */
      latency = FLASH_LATENCY_3; /* 3WS */
 8005400:	2303      	movs	r3, #3
 8005402:	613b      	str	r3, [r7, #16]
 8005404:	e00a      	b.n	800541c <RCC_SetFlashLatencyFromMSIRange+0x8c>
    }
    else
    {
      if(msirange == RCC_MSIRANGE_8)
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	2b80      	cmp	r3, #128	; 0x80
 800540a:	d102      	bne.n	8005412 <RCC_SetFlashLatencyFromMSIRange+0x82>
      {
        /* MSI 16Mhz */
        latency = FLASH_LATENCY_2; /* 2WS */
 800540c:	2302      	movs	r3, #2
 800540e:	613b      	str	r3, [r7, #16]
 8005410:	e004      	b.n	800541c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      }
      else if(msirange == RCC_MSIRANGE_7)
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	2b70      	cmp	r3, #112	; 0x70
 8005416:	d101      	bne.n	800541c <RCC_SetFlashLatencyFromMSIRange+0x8c>
      {
        /* MSI 8Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 8005418:	2301      	movs	r3, #1
 800541a:	613b      	str	r3, [r7, #16]
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 800541c:	4b0b      	ldr	r3, [pc, #44]	; (800544c <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	f023 0207 	bic.w	r2, r3, #7
 8005424:	4909      	ldr	r1, [pc, #36]	; (800544c <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8005426:	693b      	ldr	r3, [r7, #16]
 8005428:	4313      	orrs	r3, r2
 800542a:	600b      	str	r3, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(__HAL_FLASH_GET_LATENCY() != latency)
 800542c:	4b07      	ldr	r3, [pc, #28]	; (800544c <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	f003 0307 	and.w	r3, r3, #7
 8005434:	693a      	ldr	r2, [r7, #16]
 8005436:	429a      	cmp	r2, r3
 8005438:	d001      	beq.n	800543e <RCC_SetFlashLatencyFromMSIRange+0xae>
  {
    return HAL_ERROR;
 800543a:	2301      	movs	r3, #1
 800543c:	e000      	b.n	8005440 <RCC_SetFlashLatencyFromMSIRange+0xb0>
  }

  return HAL_OK;
 800543e:	2300      	movs	r3, #0
}
 8005440:	4618      	mov	r0, r3
 8005442:	3718      	adds	r7, #24
 8005444:	46bd      	mov	sp, r7
 8005446:	bd80      	pop	{r7, pc}
 8005448:	40021000 	.word	0x40021000
 800544c:	40022000 	.word	0x40022000

08005450 <HAL_RCCEx_PeriphCLKConfig>:
  *         the RTC clock source: in this case the access to Backup domain is enabled.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005450:	b580      	push	{r7, lr}
 8005452:	b086      	sub	sp, #24
 8005454:	af00      	add	r7, sp, #0
 8005456:	6078      	str	r0, [r7, #4]
  uint32_t tmpregister, tickstart;     /* no init needed */
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8005458:	2300      	movs	r3, #0
 800545a:	74fb      	strb	r3, [r7, #19]
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 800545c:	2300      	movs	r3, #0
 800545e:	74bb      	strb	r3, [r7, #18]
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

#if defined(SAI1)

  /*-------------------------- SAI1 clock source configuration ---------------------*/
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1))
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005468:	2b00      	cmp	r3, #0
 800546a:	d041      	beq.n	80054f0 <HAL_RCCEx_PeriphCLKConfig+0xa0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLK(PeriphClkInit->Sai1ClockSelection));

    switch(PeriphClkInit->Sai1ClockSelection)
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005470:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8005474:	d02a      	beq.n	80054cc <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8005476:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 800547a:	d824      	bhi.n	80054c6 <HAL_RCCEx_PeriphCLKConfig+0x76>
 800547c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8005480:	d008      	beq.n	8005494 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8005482:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8005486:	d81e      	bhi.n	80054c6 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8005488:	2b00      	cmp	r3, #0
 800548a:	d00a      	beq.n	80054a2 <HAL_RCCEx_PeriphCLKConfig+0x52>
 800548c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005490:	d010      	beq.n	80054b4 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8005492:	e018      	b.n	80054c6 <HAL_RCCEx_PeriphCLKConfig+0x76>
    {
    case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
      /* Enable SAI Clock output generated from System PLL . */
#if defined(RCC_PLLSAI2_SUPPORT)
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 8005494:	4b86      	ldr	r3, [pc, #536]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005496:	68db      	ldr	r3, [r3, #12]
 8005498:	4a85      	ldr	r2, [pc, #532]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800549a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800549e:	60d3      	str	r3, [r2, #12]
#else
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI2CLK);
#endif /* RCC_PLLSAI2_SUPPORT */
      /* SAI1 clock source config set later after clock selection check */
      break;
 80054a0:	e015      	b.n	80054ce <HAL_RCCEx_PeriphCLKConfig+0x7e>

    case RCC_SAI1CLKSOURCE_PLLSAI1:  /* PLLSAI1 is used as clock source for SAI1*/
      /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	3304      	adds	r3, #4
 80054a6:	2100      	movs	r1, #0
 80054a8:	4618      	mov	r0, r3
 80054aa:	f000 facb 	bl	8005a44 <RCCEx_PLLSAI1_Config>
 80054ae:	4603      	mov	r3, r0
 80054b0:	74fb      	strb	r3, [r7, #19]
      /* SAI1 clock source config set later after clock selection check */
      break;
 80054b2:	e00c      	b.n	80054ce <HAL_RCCEx_PeriphCLKConfig+0x7e>

#if defined(RCC_PLLSAI2_SUPPORT)

    case RCC_SAI1CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI1*/
      /* PLLSAI2 input clock, parameters M, N & P configuration clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	3320      	adds	r3, #32
 80054b8:	2100      	movs	r1, #0
 80054ba:	4618      	mov	r0, r3
 80054bc:	f000 fbb6 	bl	8005c2c <RCCEx_PLLSAI2_Config>
 80054c0:	4603      	mov	r3, r0
 80054c2:	74fb      	strb	r3, [r7, #19]
      /* SAI1 clock source config set later after clock selection check */
      break;
 80054c4:	e003      	b.n	80054ce <HAL_RCCEx_PeriphCLKConfig+0x7e>
#endif /* STM32L4P5xx || STM32L4Q5xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
      /* SAI1 clock source config set later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
 80054c6:	2301      	movs	r3, #1
 80054c8:	74fb      	strb	r3, [r7, #19]
      break;
 80054ca:	e000      	b.n	80054ce <HAL_RCCEx_PeriphCLKConfig+0x7e>
      break;
 80054cc:	bf00      	nop
    }

    if(ret == HAL_OK)
 80054ce:	7cfb      	ldrb	r3, [r7, #19]
 80054d0:	2b00      	cmp	r3, #0
 80054d2:	d10b      	bne.n	80054ec <HAL_RCCEx_PeriphCLKConfig+0x9c>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 80054d4:	4b76      	ldr	r3, [pc, #472]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80054d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80054da:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80054e2:	4973      	ldr	r1, [pc, #460]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80054e4:	4313      	orrs	r3, r2
 80054e6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80054ea:	e001      	b.n	80054f0 <HAL_RCCEx_PeriphCLKConfig+0xa0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80054ec:	7cfb      	ldrb	r3, [r7, #19]
 80054ee:	74bb      	strb	r3, [r7, #18]
#endif /* SAI1 */

#if defined(SAI2)

  /*-------------------------- SAI2 clock source configuration ---------------------*/
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2))
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80054f8:	2b00      	cmp	r3, #0
 80054fa:	d041      	beq.n	8005580 <HAL_RCCEx_PeriphCLKConfig+0x130>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLK(PeriphClkInit->Sai2ClockSelection));

    switch(PeriphClkInit->Sai2ClockSelection)
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005500:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8005504:	d02a      	beq.n	800555c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005506:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 800550a:	d824      	bhi.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x106>
 800550c:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8005510:	d008      	beq.n	8005524 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8005512:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8005516:	d81e      	bhi.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8005518:	2b00      	cmp	r3, #0
 800551a:	d00a      	beq.n	8005532 <HAL_RCCEx_PeriphCLKConfig+0xe2>
 800551c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005520:	d010      	beq.n	8005544 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8005522:	e018      	b.n	8005556 <HAL_RCCEx_PeriphCLKConfig+0x106>
    {
    case RCC_SAI2CLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
      /* Enable SAI Clock output generated from System PLL . */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
 8005524:	4b62      	ldr	r3, [pc, #392]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005526:	68db      	ldr	r3, [r3, #12]
 8005528:	4a61      	ldr	r2, [pc, #388]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800552a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800552e:	60d3      	str	r3, [r2, #12]
      /* SAI2 clock source config set later after clock selection check */
      break;
 8005530:	e015      	b.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x10e>

    case RCC_SAI2CLKSOURCE_PLLSAI1: /* PLLSAI1 is used as clock source for SAI2*/
      /* PLLSAI1 input clock, parameters M, N & P configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_P_UPDATE);
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	3304      	adds	r3, #4
 8005536:	2100      	movs	r1, #0
 8005538:	4618      	mov	r0, r3
 800553a:	f000 fa83 	bl	8005a44 <RCCEx_PLLSAI1_Config>
 800553e:	4603      	mov	r3, r0
 8005540:	74fb      	strb	r3, [r7, #19]
      /* SAI2 clock source config set later after clock selection check */
      break;
 8005542:	e00c      	b.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x10e>

    case RCC_SAI2CLKSOURCE_PLLSAI2:  /* PLLSAI2 is used as clock source for SAI2*/
      /* PLLSAI2 input clock, parameters M, N & P configuration and clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_P_UPDATE);
 8005544:	687b      	ldr	r3, [r7, #4]
 8005546:	3320      	adds	r3, #32
 8005548:	2100      	movs	r1, #0
 800554a:	4618      	mov	r0, r3
 800554c:	f000 fb6e 	bl	8005c2c <RCCEx_PLLSAI2_Config>
 8005550:	4603      	mov	r3, r0
 8005552:	74fb      	strb	r3, [r7, #19]
      /* SAI2 clock source config set later after clock selection check */
      break;
 8005554:	e003      	b.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x10e>
#endif /* STM32L4P5xx || STM32L4Q5xx || STM32L4R5xx || STM32L4R7xx || STM32L4R9xx || STM32L4S5xx || STM32L4S7xx || STM32L4S9xx */
      /* SAI2 clock source config set later after clock selection check */
      break;

    default:
      ret = HAL_ERROR;
 8005556:	2301      	movs	r3, #1
 8005558:	74fb      	strb	r3, [r7, #19]
      break;
 800555a:	e000      	b.n	800555e <HAL_RCCEx_PeriphCLKConfig+0x10e>
      break;
 800555c:	bf00      	nop
    }

    if(ret == HAL_OK)
 800555e:	7cfb      	ldrb	r3, [r7, #19]
 8005560:	2b00      	cmp	r3, #0
 8005562:	d10b      	bne.n	800557c <HAL_RCCEx_PeriphCLKConfig+0x12c>
    {
      /* Set the source of SAI2 clock*/
      __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8005564:	4b52      	ldr	r3, [pc, #328]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005566:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800556a:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005572:	494f      	ldr	r1, [pc, #316]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005574:	4313      	orrs	r3, r2
 8005576:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800557a:	e001      	b.n	8005580 <HAL_RCCEx_PeriphCLKConfig+0x130>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800557c:	7cfb      	ldrb	r3, [r7, #19]
 800557e:	74bb      	strb	r3, [r7, #18]
    }
  }
#endif /* SAI2 */

  /*-------------------------- RTC clock source configuration ----------------------*/
  if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	681b      	ldr	r3, [r3, #0]
 8005584:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005588:	2b00      	cmp	r3, #0
 800558a:	f000 80a0 	beq.w	80056ce <HAL_RCCEx_PeriphCLKConfig+0x27e>
  {
    FlagStatus       pwrclkchanged = RESET;
 800558e:	2300      	movs	r3, #0
 8005590:	747b      	strb	r3, [r7, #17]

    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 8005592:	4b47      	ldr	r3, [pc, #284]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005594:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005596:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800559a:	2b00      	cmp	r3, #0
 800559c:	d101      	bne.n	80055a2 <HAL_RCCEx_PeriphCLKConfig+0x152>
 800559e:	2301      	movs	r3, #1
 80055a0:	e000      	b.n	80055a4 <HAL_RCCEx_PeriphCLKConfig+0x154>
 80055a2:	2300      	movs	r3, #0
 80055a4:	2b00      	cmp	r3, #0
 80055a6:	d00d      	beq.n	80055c4 <HAL_RCCEx_PeriphCLKConfig+0x174>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80055a8:	4b41      	ldr	r3, [pc, #260]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80055aa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80055ac:	4a40      	ldr	r2, [pc, #256]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80055ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80055b2:	6593      	str	r3, [r2, #88]	; 0x58
 80055b4:	4b3e      	ldr	r3, [pc, #248]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80055b6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80055b8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80055bc:	60bb      	str	r3, [r7, #8]
 80055be:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80055c0:	2301      	movs	r3, #1
 80055c2:	747b      	strb	r3, [r7, #17]
    }

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80055c4:	4b3b      	ldr	r3, [pc, #236]	; (80056b4 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	4a3a      	ldr	r2, [pc, #232]	; (80056b4 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80055ca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80055ce:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80055d0:	f7fe f95c 	bl	800388c <HAL_GetTick>
 80055d4:	60f8      	str	r0, [r7, #12]

    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 80055d6:	e009      	b.n	80055ec <HAL_RCCEx_PeriphCLKConfig+0x19c>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80055d8:	f7fe f958 	bl	800388c <HAL_GetTick>
 80055dc:	4602      	mov	r2, r0
 80055de:	68fb      	ldr	r3, [r7, #12]
 80055e0:	1ad3      	subs	r3, r2, r3
 80055e2:	2b02      	cmp	r3, #2
 80055e4:	d902      	bls.n	80055ec <HAL_RCCEx_PeriphCLKConfig+0x19c>
      {
        ret = HAL_TIMEOUT;
 80055e6:	2303      	movs	r3, #3
 80055e8:	74fb      	strb	r3, [r7, #19]
        break;
 80055ea:	e005      	b.n	80055f8 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    while(READ_BIT(PWR->CR1, PWR_CR1_DBP) == 0U)
 80055ec:	4b31      	ldr	r3, [pc, #196]	; (80056b4 <HAL_RCCEx_PeriphCLKConfig+0x264>)
 80055ee:	681b      	ldr	r3, [r3, #0]
 80055f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	d0ef      	beq.n	80055d8 <HAL_RCCEx_PeriphCLKConfig+0x188>
      }
    }

    if(ret == HAL_OK)
 80055f8:	7cfb      	ldrb	r3, [r7, #19]
 80055fa:	2b00      	cmp	r3, #0
 80055fc:	d15c      	bne.n	80056b8 <HAL_RCCEx_PeriphCLKConfig+0x268>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified from default */
      tmpregister = READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL);
 80055fe:	4b2c      	ldr	r3, [pc, #176]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005600:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005604:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005608:	617b      	str	r3, [r7, #20]

      if((tmpregister != RCC_RTCCLKSOURCE_NONE) && (tmpregister != PeriphClkInit->RTCClockSelection))
 800560a:	697b      	ldr	r3, [r7, #20]
 800560c:	2b00      	cmp	r3, #0
 800560e:	d01f      	beq.n	8005650 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8005610:	687b      	ldr	r3, [r7, #4]
 8005612:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005616:	697a      	ldr	r2, [r7, #20]
 8005618:	429a      	cmp	r2, r3
 800561a:	d019      	beq.n	8005650 <HAL_RCCEx_PeriphCLKConfig+0x200>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpregister = READ_BIT(RCC->BDCR, ~(RCC_BDCR_RTCSEL));
 800561c:	4b24      	ldr	r3, [pc, #144]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800561e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005622:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005626:	617b      	str	r3, [r7, #20]
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 8005628:	4b21      	ldr	r3, [pc, #132]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800562a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800562e:	4a20      	ldr	r2, [pc, #128]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005630:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005634:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
        __HAL_RCC_BACKUPRESET_RELEASE();
 8005638:	4b1d      	ldr	r3, [pc, #116]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800563a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800563e:	4a1c      	ldr	r2, [pc, #112]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005640:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005644:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpregister;
 8005648:	4a19      	ldr	r2, [pc, #100]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800564a:	697b      	ldr	r3, [r7, #20]
 800564c:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
      }

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(tmpregister, RCC_BDCR_LSEON))
 8005650:	697b      	ldr	r3, [r7, #20]
 8005652:	f003 0301 	and.w	r3, r3, #1
 8005656:	2b00      	cmp	r3, #0
 8005658:	d016      	beq.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x238>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800565a:	f7fe f917 	bl	800388c <HAL_GetTick>
 800565e:	60f8      	str	r0, [r7, #12]

        /* Wait till LSE is ready */
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8005660:	e00b      	b.n	800567a <HAL_RCCEx_PeriphCLKConfig+0x22a>
        {
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005662:	f7fe f913 	bl	800388c <HAL_GetTick>
 8005666:	4602      	mov	r2, r0
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	1ad3      	subs	r3, r2, r3
 800566c:	f241 3288 	movw	r2, #5000	; 0x1388
 8005670:	4293      	cmp	r3, r2
 8005672:	d902      	bls.n	800567a <HAL_RCCEx_PeriphCLKConfig+0x22a>
          {
            ret = HAL_TIMEOUT;
 8005674:	2303      	movs	r3, #3
 8005676:	74fb      	strb	r3, [r7, #19]
            break;
 8005678:	e006      	b.n	8005688 <HAL_RCCEx_PeriphCLKConfig+0x238>
        while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 800567a:	4b0d      	ldr	r3, [pc, #52]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 800567c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005680:	f003 0302 	and.w	r3, r3, #2
 8005684:	2b00      	cmp	r3, #0
 8005686:	d0ec      	beq.n	8005662 <HAL_RCCEx_PeriphCLKConfig+0x212>
          }
        }
      }

      if(ret == HAL_OK)
 8005688:	7cfb      	ldrb	r3, [r7, #19]
 800568a:	2b00      	cmp	r3, #0
 800568c:	d10c      	bne.n	80056a8 <HAL_RCCEx_PeriphCLKConfig+0x258>
      {
        /* Apply new RTC clock source selection */
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800568e:	4b08      	ldr	r3, [pc, #32]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8005690:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005694:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800569e:	4904      	ldr	r1, [pc, #16]	; (80056b0 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 80056a0:	4313      	orrs	r3, r2
 80056a2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80056a6:	e009      	b.n	80056bc <HAL_RCCEx_PeriphCLKConfig+0x26c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 80056a8:	7cfb      	ldrb	r3, [r7, #19]
 80056aa:	74bb      	strb	r3, [r7, #18]
 80056ac:	e006      	b.n	80056bc <HAL_RCCEx_PeriphCLKConfig+0x26c>
 80056ae:	bf00      	nop
 80056b0:	40021000 	.word	0x40021000
 80056b4:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 80056b8:	7cfb      	ldrb	r3, [r7, #19]
 80056ba:	74bb      	strb	r3, [r7, #18]
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 80056bc:	7c7b      	ldrb	r3, [r7, #17]
 80056be:	2b01      	cmp	r3, #1
 80056c0:	d105      	bne.n	80056ce <HAL_RCCEx_PeriphCLKConfig+0x27e>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80056c2:	4b9e      	ldr	r3, [pc, #632]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80056c4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80056c6:	4a9d      	ldr	r2, [pc, #628]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80056c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80056cc:	6593      	str	r3, [r2, #88]	; 0x58
    }
  }

  /*-------------------------- USART1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	f003 0301 	and.w	r3, r3, #1
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d00a      	beq.n	80056f0 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 80056da:	4b98      	ldr	r3, [pc, #608]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80056dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80056e0:	f023 0203 	bic.w	r2, r3, #3
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80056e8:	4994      	ldr	r1, [pc, #592]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80056ea:	4313      	orrs	r3, r2
 80056ec:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- USART2 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	f003 0302 	and.w	r3, r3, #2
 80056f8:	2b00      	cmp	r3, #0
 80056fa:	d00a      	beq.n	8005712 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 80056fc:	4b8f      	ldr	r3, [pc, #572]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80056fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005702:	f023 020c 	bic.w	r2, r3, #12
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800570a:	498c      	ldr	r1, [pc, #560]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800570c:	4313      	orrs	r3, r2
 800570e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(USART3)

  /*-------------------------- USART3 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	f003 0304 	and.w	r3, r3, #4
 800571a:	2b00      	cmp	r3, #0
 800571c:	d00a      	beq.n	8005734 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 800571e:	4b87      	ldr	r3, [pc, #540]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005720:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005724:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800572c:	4983      	ldr	r1, [pc, #524]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800572e:	4313      	orrs	r3, r2
 8005730:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* USART3 */

#if defined(UART4)

  /*-------------------------- UART4 clock source configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	681b      	ldr	r3, [r3, #0]
 8005738:	f003 0308 	and.w	r3, r3, #8
 800573c:	2b00      	cmp	r3, #0
 800573e:	d00a      	beq.n	8005756 <HAL_RCCEx_PeriphCLKConfig+0x306>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8005740:	4b7e      	ldr	r3, [pc, #504]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005742:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005746:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800574e:	497b      	ldr	r1, [pc, #492]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005750:	4313      	orrs	r3, r2
 8005752:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* UART4 */

#if defined(UART5)

  /*-------------------------- UART5 clock source configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8005756:	687b      	ldr	r3, [r7, #4]
 8005758:	681b      	ldr	r3, [r3, #0]
 800575a:	f003 0310 	and.w	r3, r3, #16
 800575e:	2b00      	cmp	r3, #0
 8005760:	d00a      	beq.n	8005778 <HAL_RCCEx_PeriphCLKConfig+0x328>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8005762:	4b76      	ldr	r3, [pc, #472]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005764:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005768:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005770:	4972      	ldr	r1, [pc, #456]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005772:	4313      	orrs	r3, r2
 8005774:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#endif /* UART5 */

  /*-------------------------- LPUART1 clock source configuration ------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	f003 0320 	and.w	r3, r3, #32
 8005780:	2b00      	cmp	r3, #0
 8005782:	d00a      	beq.n	800579a <HAL_RCCEx_PeriphCLKConfig+0x34a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUART1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8005784:	4b6d      	ldr	r3, [pc, #436]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005786:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800578a:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005792:	496a      	ldr	r1, [pc, #424]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005794:	4313      	orrs	r3, r2
 8005796:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- LPTIM1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 800579a:	687b      	ldr	r3, [r7, #4]
 800579c:	681b      	ldr	r3, [r3, #0]
 800579e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80057a2:	2b00      	cmp	r3, #0
 80057a4:	d00a      	beq.n	80057bc <HAL_RCCEx_PeriphCLKConfig+0x36c>
  {
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80057a6:	4b65      	ldr	r3, [pc, #404]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80057a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80057ac:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 80057b0:	687b      	ldr	r3, [r7, #4]
 80057b2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80057b4:	4961      	ldr	r1, [pc, #388]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80057b6:	4313      	orrs	r3, r2
 80057b8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- LPTIM2 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == (RCC_PERIPHCLK_LPTIM2))
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80057c4:	2b00      	cmp	r3, #0
 80057c6:	d00a      	beq.n	80057de <HAL_RCCEx_PeriphCLKConfig+0x38e>
  {
    assert_param(IS_RCC_LPTIM2CLK(PeriphClkInit->Lptim2ClockSelection));
    __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 80057c8:	4b5c      	ldr	r3, [pc, #368]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80057ca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80057ce:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80057d6:	4959      	ldr	r1, [pc, #356]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80057d8:	4313      	orrs	r3, r2
 80057da:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

  /*-------------------------- I2C1 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80057e6:	2b00      	cmp	r3, #0
 80057e8:	d00a      	beq.n	8005800 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80057ea:	4b54      	ldr	r3, [pc, #336]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80057ec:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80057f0:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80057f8:	4950      	ldr	r1, [pc, #320]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80057fa:	4313      	orrs	r3, r2
 80057fc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#if defined(I2C2)

  /*-------------------------- I2C2 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	681b      	ldr	r3, [r3, #0]
 8005804:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005808:	2b00      	cmp	r3, #0
 800580a:	d00a      	beq.n	8005822 <HAL_RCCEx_PeriphCLKConfig+0x3d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800580c:	4b4b      	ldr	r3, [pc, #300]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800580e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005812:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800581a:	4948      	ldr	r1, [pc, #288]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800581c:	4313      	orrs	r3, r2
 800581e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
  }

#endif /* I2C2 */

  /*-------------------------- I2C3 clock source configuration ---------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800582a:	2b00      	cmp	r3, #0
 800582c:	d00a      	beq.n	8005844 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 800582e:	4b43      	ldr	r3, [pc, #268]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005830:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005834:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005838:	687b      	ldr	r3, [r7, #4]
 800583a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800583c:	493f      	ldr	r1, [pc, #252]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800583e:	4313      	orrs	r3, r2
 8005840:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* I2C4 */

#if defined(USB_OTG_FS) || defined(USB)

  /*-------------------------- USB clock source configuration ----------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	681b      	ldr	r3, [r3, #0]
 8005848:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800584c:	2b00      	cmp	r3, #0
 800584e:	d028      	beq.n	80058a2 <HAL_RCCEx_PeriphCLKConfig+0x452>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8005850:	4b3a      	ldr	r3, [pc, #232]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005852:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005856:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800585e:	4937      	ldr	r1, [pc, #220]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005860:	4313      	orrs	r3, r2
 8005862:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLL)
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800586a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800586e:	d106      	bne.n	800587e <HAL_RCCEx_PeriphCLKConfig+0x42e>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 8005870:	4b32      	ldr	r3, [pc, #200]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005872:	68db      	ldr	r3, [r3, #12]
 8005874:	4a31      	ldr	r2, [pc, #196]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005876:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800587a:	60d3      	str	r3, [r2, #12]
 800587c:	e011      	b.n	80058a2 <HAL_RCCEx_PeriphCLKConfig+0x452>
    }
    else
    {
#if defined(RCC_PLLSAI1_SUPPORT)
      if(PeriphClkInit->UsbClockSelection == RCC_USBCLKSOURCE_PLLSAI1)
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005882:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8005886:	d10c      	bne.n	80058a2 <HAL_RCCEx_PeriphCLKConfig+0x452>
      {
        /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
        ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	3304      	adds	r3, #4
 800588c:	2101      	movs	r1, #1
 800588e:	4618      	mov	r0, r3
 8005890:	f000 f8d8 	bl	8005a44 <RCCEx_PLLSAI1_Config>
 8005894:	4603      	mov	r3, r0
 8005896:	74fb      	strb	r3, [r7, #19]

        if(ret != HAL_OK)
 8005898:	7cfb      	ldrb	r3, [r7, #19]
 800589a:	2b00      	cmp	r3, #0
 800589c:	d001      	beq.n	80058a2 <HAL_RCCEx_PeriphCLKConfig+0x452>
        {
          /* set overall return value */
          status = ret;
 800589e:	7cfb      	ldrb	r3, [r7, #19]
 80058a0:	74bb      	strb	r3, [r7, #18]
#endif /* USB_OTG_FS || USB */

#if defined(SDMMC1)

  /*-------------------------- SDMMC1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == (RCC_PERIPHCLK_SDMMC1))
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80058aa:	2b00      	cmp	r3, #0
 80058ac:	d028      	beq.n	8005900 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
  {
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 80058ae:	4b23      	ldr	r3, [pc, #140]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80058b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80058b4:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80058bc:	491f      	ldr	r1, [pc, #124]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80058be:	4313      	orrs	r3, r2
 80058c0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLL)   /* PLL "Q" ? */
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80058c8:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80058cc:	d106      	bne.n	80058dc <HAL_RCCEx_PeriphCLKConfig+0x48c>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 80058ce:	4b1b      	ldr	r3, [pc, #108]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80058d0:	68db      	ldr	r3, [r3, #12]
 80058d2:	4a1a      	ldr	r2, [pc, #104]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 80058d4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80058d8:	60d3      	str	r3, [r2, #12]
 80058da:	e011      	b.n	8005900 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
    {
      /* Enable PLLSAI3CLK output */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SAI3CLK);
    }
#endif
    else if(PeriphClkInit->Sdmmc1ClockSelection == RCC_SDMMC1CLKSOURCE_PLLSAI1)
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80058e0:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80058e4:	d10c      	bne.n	8005900 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
    {
      /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	3304      	adds	r3, #4
 80058ea:	2101      	movs	r1, #1
 80058ec:	4618      	mov	r0, r3
 80058ee:	f000 f8a9 	bl	8005a44 <RCCEx_PLLSAI1_Config>
 80058f2:	4603      	mov	r3, r0
 80058f4:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 80058f6:	7cfb      	ldrb	r3, [r7, #19]
 80058f8:	2b00      	cmp	r3, #0
 80058fa:	d001      	beq.n	8005900 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
      {
        /* set overall return value */
        status = ret;
 80058fc:	7cfb      	ldrb	r3, [r7, #19]
 80058fe:	74bb      	strb	r3, [r7, #18]
  }

#endif /* SDMMC1 */

  /*-------------------------- RNG clock source configuration ----------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == (RCC_PERIPHCLK_RNG))
 8005900:	687b      	ldr	r3, [r7, #4]
 8005902:	681b      	ldr	r3, [r3, #0]
 8005904:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005908:	2b00      	cmp	r3, #0
 800590a:	d02b      	beq.n	8005964 <HAL_RCCEx_PeriphCLKConfig+0x514>
  {
    assert_param(IS_RCC_RNGCLKSOURCE(PeriphClkInit->RngClockSelection));
    __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 800590c:	4b0b      	ldr	r3, [pc, #44]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800590e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005912:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800591a:	4908      	ldr	r1, [pc, #32]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800591c:	4313      	orrs	r3, r2
 800591e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

    if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLL)
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005926:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800592a:	d109      	bne.n	8005940 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    {
      /* Enable PLL48M1CLK output clock */
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_48M1CLK);
 800592c:	4b03      	ldr	r3, [pc, #12]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800592e:	68db      	ldr	r3, [r3, #12]
 8005930:	4a02      	ldr	r2, [pc, #8]	; (800593c <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 8005932:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8005936:	60d3      	str	r3, [r2, #12]
 8005938:	e014      	b.n	8005964 <HAL_RCCEx_PeriphCLKConfig+0x514>
 800593a:	bf00      	nop
 800593c:	40021000 	.word	0x40021000
    }
#if defined(RCC_PLLSAI1_SUPPORT)
    else if(PeriphClkInit->RngClockSelection == RCC_RNGCLKSOURCE_PLLSAI1)
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005944:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8005948:	d10c      	bne.n	8005964 <HAL_RCCEx_PeriphCLKConfig+0x514>
    {
      /* PLLSAI1 input clock, parameters M, N & Q configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_Q_UPDATE);
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	3304      	adds	r3, #4
 800594e:	2101      	movs	r1, #1
 8005950:	4618      	mov	r0, r3
 8005952:	f000 f877 	bl	8005a44 <RCCEx_PLLSAI1_Config>
 8005956:	4603      	mov	r3, r0
 8005958:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 800595a:	7cfb      	ldrb	r3, [r7, #19]
 800595c:	2b00      	cmp	r3, #0
 800595e:	d001      	beq.n	8005964 <HAL_RCCEx_PeriphCLKConfig+0x514>
      {
        /* set overall return value */
        status = ret;
 8005960:	7cfb      	ldrb	r3, [r7, #19]
 8005962:	74bb      	strb	r3, [r7, #18]
    }
  }

  /*-------------------------- ADC clock source configuration ----------------------*/
#if !defined(STM32L412xx) && !defined(STM32L422xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8005964:	687b      	ldr	r3, [r7, #4]
 8005966:	681b      	ldr	r3, [r3, #0]
 8005968:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800596c:	2b00      	cmp	r3, #0
 800596e:	d02f      	beq.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x580>
  {
    /* Check the parameters */
    assert_param(IS_RCC_ADCCLKSOURCE(PeriphClkInit->AdcClockSelection));

    /* Configure the ADC interface clock source */
    __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8005970:	4b2b      	ldr	r3, [pc, #172]	; (8005a20 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8005972:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005976:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800597e:	4928      	ldr	r1, [pc, #160]	; (8005a20 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8005980:	4313      	orrs	r3, r2
 8005982:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

#if defined(RCC_PLLSAI1_SUPPORT)
    if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI1)
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800598a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800598e:	d10d      	bne.n	80059ac <HAL_RCCEx_PeriphCLKConfig+0x55c>
    {
      /* PLLSAI1 input clock, parameters M, N & R configuration and clock output (PLLSAI1ClockOut) */
      ret = RCCEx_PLLSAI1_Config(&(PeriphClkInit->PLLSAI1), DIVIDER_R_UPDATE);
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	3304      	adds	r3, #4
 8005994:	2102      	movs	r1, #2
 8005996:	4618      	mov	r0, r3
 8005998:	f000 f854 	bl	8005a44 <RCCEx_PLLSAI1_Config>
 800599c:	4603      	mov	r3, r0
 800599e:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 80059a0:	7cfb      	ldrb	r3, [r7, #19]
 80059a2:	2b00      	cmp	r3, #0
 80059a4:	d014      	beq.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x580>
      {
        /* set overall return value */
        status = ret;
 80059a6:	7cfb      	ldrb	r3, [r7, #19]
 80059a8:	74bb      	strb	r3, [r7, #18]
 80059aa:	e011      	b.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x580>
    }
#endif /* RCC_PLLSAI1_SUPPORT */

#if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) || defined(STM32L486xx) || defined(STM32L496xx) || defined(STM32L4A6xx)

    else if(PeriphClkInit->AdcClockSelection == RCC_ADCCLKSOURCE_PLLSAI2)
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80059b0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80059b4:	d10c      	bne.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x580>
    {
      /* PLLSAI2 input clock, parameters M, N & R configuration and clock output (PLLSAI2ClockOut) */
      ret = RCCEx_PLLSAI2_Config(&(PeriphClkInit->PLLSAI2), DIVIDER_R_UPDATE);
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	3320      	adds	r3, #32
 80059ba:	2102      	movs	r1, #2
 80059bc:	4618      	mov	r0, r3
 80059be:	f000 f935 	bl	8005c2c <RCCEx_PLLSAI2_Config>
 80059c2:	4603      	mov	r3, r0
 80059c4:	74fb      	strb	r3, [r7, #19]

      if(ret != HAL_OK)
 80059c6:	7cfb      	ldrb	r3, [r7, #19]
 80059c8:	2b00      	cmp	r3, #0
 80059ca:	d001      	beq.n	80059d0 <HAL_RCCEx_PeriphCLKConfig+0x580>
      {
        /* set overall return value */
        status = ret;
 80059cc:	7cfb      	ldrb	r3, [r7, #19]
 80059ce:	74bb      	strb	r3, [r7, #18]
#endif /* !STM32L412xx && !STM32L422xx */

#if defined(SWPMI1)

  /*-------------------------- SWPMI1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 80059d0:	687b      	ldr	r3, [r7, #4]
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d00a      	beq.n	80059f2 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 80059dc:	4b10      	ldr	r3, [pc, #64]	; (8005a20 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80059de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80059e2:	f023 4280 	bic.w	r2, r3, #1073741824	; 0x40000000
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80059ea:	490d      	ldr	r1, [pc, #52]	; (8005a20 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 80059ec:	4313      	orrs	r3, r2
 80059ee:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
#endif /* SWPMI1 */

#if defined(DFSDM1_Filter0)

  /*-------------------------- DFSDM1 clock source configuration -------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	681b      	ldr	r3, [r3, #0]
 80059f6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d00b      	beq.n	8005a16 <HAL_RCCEx_PeriphCLKConfig+0x5c6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 80059fe:	4b08      	ldr	r3, [pc, #32]	; (8005a20 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8005a00:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005a04:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8005a0e:	4904      	ldr	r1, [pc, #16]	; (8005a20 <HAL_RCCEx_PeriphCLKConfig+0x5d0>)
 8005a10:	4313      	orrs	r3, r2
 8005a12:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }
  }

#endif /* OCTOSPI1 || OCTOSPI2 */

  return status;
 8005a16:	7cbb      	ldrb	r3, [r7, #18]
}
 8005a18:	4618      	mov	r0, r3
 8005a1a:	3718      	adds	r7, #24
 8005a1c:	46bd      	mov	sp, r7
 8005a1e:	bd80      	pop	{r7, pc}
 8005a20:	40021000 	.word	0x40021000

08005a24 <HAL_RCCEx_EnableMSIPLLMode>:
  * @note   Prior to enable the PLL-mode of the MSI for automatic hardware
  *         calibration LSE oscillator is to be enabled with HAL_RCC_OscConfig().
  * @retval None
  */
void HAL_RCCEx_EnableMSIPLLMode(void)
{
 8005a24:	b480      	push	{r7}
 8005a26:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_MSIPLLEN) ;
 8005a28:	4b05      	ldr	r3, [pc, #20]	; (8005a40 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 8005a2a:	681b      	ldr	r3, [r3, #0]
 8005a2c:	4a04      	ldr	r2, [pc, #16]	; (8005a40 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 8005a2e:	f043 0304 	orr.w	r3, r3, #4
 8005a32:	6013      	str	r3, [r2, #0]
}
 8005a34:	bf00      	nop
 8005a36:	46bd      	mov	sp, r7
 8005a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a3c:	4770      	bx	lr
 8005a3e:	bf00      	nop
 8005a40:	40021000 	.word	0x40021000

08005a44 <RCCEx_PLLSAI1_Config>:
  * @note   PLLSAI1 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI1_Config(RCC_PLLSAI1InitTypeDef *PllSai1, uint32_t Divider)
{
 8005a44:	b580      	push	{r7, lr}
 8005a46:	b084      	sub	sp, #16
 8005a48:	af00      	add	r7, sp, #0
 8005a4a:	6078      	str	r0, [r7, #4]
 8005a4c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8005a4e:	2300      	movs	r3, #0
 8005a50:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLLSAI1M_VALUE(PllSai1->PLLSAI1M));
  assert_param(IS_RCC_PLLSAI1N_VALUE(PllSai1->PLLSAI1N));
  assert_param(IS_RCC_PLLSAI1CLOCKOUT_VALUE(PllSai1->PLLSAI1ClockOut));

  /* Check that PLLSAI1 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8005a52:	4b75      	ldr	r3, [pc, #468]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005a54:	68db      	ldr	r3, [r3, #12]
 8005a56:	f003 0303 	and.w	r3, r3, #3
 8005a5a:	2b00      	cmp	r3, #0
 8005a5c:	d018      	beq.n	8005a90 <RCCEx_PLLSAI1_Config+0x4c>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai1->PLLSAI1Source)
 8005a5e:	4b72      	ldr	r3, [pc, #456]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005a60:	68db      	ldr	r3, [r3, #12]
 8005a62:	f003 0203 	and.w	r2, r3, #3
 8005a66:	687b      	ldr	r3, [r7, #4]
 8005a68:	681b      	ldr	r3, [r3, #0]
 8005a6a:	429a      	cmp	r2, r3
 8005a6c:	d10d      	bne.n	8005a8a <RCCEx_PLLSAI1_Config+0x46>
       ||
       (PllSai1->PLLSAI1Source == RCC_PLLSOURCE_NONE)
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	681b      	ldr	r3, [r3, #0]
       ||
 8005a72:	2b00      	cmp	r3, #0
 8005a74:	d009      	beq.n	8005a8a <RCCEx_PLLSAI1_Config+0x46>
#if !defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai1->PLLSAI1M)
 8005a76:	4b6c      	ldr	r3, [pc, #432]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005a78:	68db      	ldr	r3, [r3, #12]
 8005a7a:	091b      	lsrs	r3, r3, #4
 8005a7c:	f003 0307 	and.w	r3, r3, #7
 8005a80:	1c5a      	adds	r2, r3, #1
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	685b      	ldr	r3, [r3, #4]
       ||
 8005a86:	429a      	cmp	r2, r3
 8005a88:	d047      	beq.n	8005b1a <RCCEx_PLLSAI1_Config+0xd6>
#endif
      )
    {
      status = HAL_ERROR;
 8005a8a:	2301      	movs	r3, #1
 8005a8c:	73fb      	strb	r3, [r7, #15]
 8005a8e:	e044      	b.n	8005b1a <RCCEx_PLLSAI1_Config+0xd6>
    }
  }
  else
  {
    /* Check PLLSAI1 clock source availability */
    switch(PllSai1->PLLSAI1Source)
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	681b      	ldr	r3, [r3, #0]
 8005a94:	2b03      	cmp	r3, #3
 8005a96:	d018      	beq.n	8005aca <RCCEx_PLLSAI1_Config+0x86>
 8005a98:	2b03      	cmp	r3, #3
 8005a9a:	d825      	bhi.n	8005ae8 <RCCEx_PLLSAI1_Config+0xa4>
 8005a9c:	2b01      	cmp	r3, #1
 8005a9e:	d002      	beq.n	8005aa6 <RCCEx_PLLSAI1_Config+0x62>
 8005aa0:	2b02      	cmp	r3, #2
 8005aa2:	d009      	beq.n	8005ab8 <RCCEx_PLLSAI1_Config+0x74>
 8005aa4:	e020      	b.n	8005ae8 <RCCEx_PLLSAI1_Config+0xa4>
    {
    case RCC_PLLSOURCE_MSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8005aa6:	4b60      	ldr	r3, [pc, #384]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	f003 0302 	and.w	r3, r3, #2
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d11d      	bne.n	8005aee <RCCEx_PLLSAI1_Config+0xaa>
      {
        status = HAL_ERROR;
 8005ab2:	2301      	movs	r3, #1
 8005ab4:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8005ab6:	e01a      	b.n	8005aee <RCCEx_PLLSAI1_Config+0xaa>
    case RCC_PLLSOURCE_HSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8005ab8:	4b5b      	ldr	r3, [pc, #364]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005ac0:	2b00      	cmp	r3, #0
 8005ac2:	d116      	bne.n	8005af2 <RCCEx_PLLSAI1_Config+0xae>
      {
        status = HAL_ERROR;
 8005ac4:	2301      	movs	r3, #1
 8005ac6:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8005ac8:	e013      	b.n	8005af2 <RCCEx_PLLSAI1_Config+0xae>
    case RCC_PLLSOURCE_HSE:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 8005aca:	4b57      	ldr	r3, [pc, #348]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005acc:	681b      	ldr	r3, [r3, #0]
 8005ace:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005ad2:	2b00      	cmp	r3, #0
 8005ad4:	d10f      	bne.n	8005af6 <RCCEx_PLLSAI1_Config+0xb2>
      {
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8005ad6:	4b54      	ldr	r3, [pc, #336]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005ade:	2b00      	cmp	r3, #0
 8005ae0:	d109      	bne.n	8005af6 <RCCEx_PLLSAI1_Config+0xb2>
        {
          status = HAL_ERROR;
 8005ae2:	2301      	movs	r3, #1
 8005ae4:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 8005ae6:	e006      	b.n	8005af6 <RCCEx_PLLSAI1_Config+0xb2>
    default:
      status = HAL_ERROR;
 8005ae8:	2301      	movs	r3, #1
 8005aea:	73fb      	strb	r3, [r7, #15]
      break;
 8005aec:	e004      	b.n	8005af8 <RCCEx_PLLSAI1_Config+0xb4>
      break;
 8005aee:	bf00      	nop
 8005af0:	e002      	b.n	8005af8 <RCCEx_PLLSAI1_Config+0xb4>
      break;
 8005af2:	bf00      	nop
 8005af4:	e000      	b.n	8005af8 <RCCEx_PLLSAI1_Config+0xb4>
      break;
 8005af6:	bf00      	nop
    }

    if(status == HAL_OK)
 8005af8:	7bfb      	ldrb	r3, [r7, #15]
 8005afa:	2b00      	cmp	r3, #0
 8005afc:	d10d      	bne.n	8005b1a <RCCEx_PLLSAI1_Config+0xd6>
#if defined(RCC_PLLSAI1M_DIV_1_16_SUPPORT)
      /* Set PLLSAI1 clock source */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai1->PLLSAI1Source);
#else
      /* Set PLLSAI1 clock source and divider M */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai1->PLLSAI1Source | (PllSai1->PLLSAI1M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8005afe:	4b4a      	ldr	r3, [pc, #296]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b00:	68db      	ldr	r3, [r3, #12]
 8005b02:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8005b06:	687b      	ldr	r3, [r7, #4]
 8005b08:	6819      	ldr	r1, [r3, #0]
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	685b      	ldr	r3, [r3, #4]
 8005b0e:	3b01      	subs	r3, #1
 8005b10:	011b      	lsls	r3, r3, #4
 8005b12:	430b      	orrs	r3, r1
 8005b14:	4944      	ldr	r1, [pc, #272]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b16:	4313      	orrs	r3, r2
 8005b18:	60cb      	str	r3, [r1, #12]
#endif
    }
  }

  if(status == HAL_OK)
 8005b1a:	7bfb      	ldrb	r3, [r7, #15]
 8005b1c:	2b00      	cmp	r3, #0
 8005b1e:	d17d      	bne.n	8005c1c <RCCEx_PLLSAI1_Config+0x1d8>
  {
    /* Disable the PLLSAI1 */
    __HAL_RCC_PLLSAI1_DISABLE();
 8005b20:	4b41      	ldr	r3, [pc, #260]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	4a40      	ldr	r2, [pc, #256]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b26:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8005b2a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005b2c:	f7fd feae 	bl	800388c <HAL_GetTick>
 8005b30:	60b8      	str	r0, [r7, #8]

    /* Wait till PLLSAI1 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8005b32:	e009      	b.n	8005b48 <RCCEx_PLLSAI1_Config+0x104>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8005b34:	f7fd feaa 	bl	800388c <HAL_GetTick>
 8005b38:	4602      	mov	r2, r0
 8005b3a:	68bb      	ldr	r3, [r7, #8]
 8005b3c:	1ad3      	subs	r3, r2, r3
 8005b3e:	2b02      	cmp	r3, #2
 8005b40:	d902      	bls.n	8005b48 <RCCEx_PLLSAI1_Config+0x104>
      {
        status = HAL_TIMEOUT;
 8005b42:	2303      	movs	r3, #3
 8005b44:	73fb      	strb	r3, [r7, #15]
        break;
 8005b46:	e005      	b.n	8005b54 <RCCEx_PLLSAI1_Config+0x110>
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) != 0U)
 8005b48:	4b37      	ldr	r3, [pc, #220]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	d1ef      	bne.n	8005b34 <RCCEx_PLLSAI1_Config+0xf0>
      }
    }

    if(status == HAL_OK)
 8005b54:	7bfb      	ldrb	r3, [r7, #15]
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d160      	bne.n	8005c1c <RCCEx_PLLSAI1_Config+0x1d8>
    {
      if(Divider == DIVIDER_P_UPDATE)
 8005b5a:	683b      	ldr	r3, [r7, #0]
 8005b5c:	2b00      	cmp	r3, #0
 8005b5e:	d111      	bne.n	8005b84 <RCCEx_PLLSAI1_Config+0x140>
        MODIFY_REG(RCC->PLLSAI1CFGR,
                   RCC_PLLSAI1CFGR_PLLSAI1N | RCC_PLLSAI1CFGR_PLLSAI1PDIV,
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (PllSai1->PLLSAI1P << RCC_PLLSAI1CFGR_PLLSAI1PDIV_Pos));
#else
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8005b60:	4b31      	ldr	r3, [pc, #196]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b62:	691b      	ldr	r3, [r3, #16]
 8005b64:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8005b68:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005b6c:	687a      	ldr	r2, [r7, #4]
 8005b6e:	6892      	ldr	r2, [r2, #8]
 8005b70:	0211      	lsls	r1, r2, #8
 8005b72:	687a      	ldr	r2, [r7, #4]
 8005b74:	68d2      	ldr	r2, [r2, #12]
 8005b76:	0912      	lsrs	r2, r2, #4
 8005b78:	0452      	lsls	r2, r2, #17
 8005b7a:	430a      	orrs	r2, r1
 8005b7c:	492a      	ldr	r1, [pc, #168]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b7e:	4313      	orrs	r3, r2
 8005b80:	610b      	str	r3, [r1, #16]
 8005b82:	e027      	b.n	8005bd4 <RCCEx_PLLSAI1_Config+0x190>
                   ((PllSai1->PLLSAI1P >> 4U) << RCC_PLLSAI1CFGR_PLLSAI1P_Pos));
#endif /* RCC_PLLSAI1P_DIV_2_31_SUPPORT */

#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }
      else if(Divider == DIVIDER_Q_UPDATE)
 8005b84:	683b      	ldr	r3, [r7, #0]
 8005b86:	2b01      	cmp	r3, #1
 8005b88:	d112      	bne.n	8005bb0 <RCCEx_PLLSAI1_Config+0x16c>
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1Q >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1Q_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor Q and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8005b8a:	4b27      	ldr	r3, [pc, #156]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005b8c:	691b      	ldr	r3, [r3, #16]
 8005b8e:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8005b92:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005b96:	687a      	ldr	r2, [r7, #4]
 8005b98:	6892      	ldr	r2, [r2, #8]
 8005b9a:	0211      	lsls	r1, r2, #8
 8005b9c:	687a      	ldr	r2, [r7, #4]
 8005b9e:	6912      	ldr	r2, [r2, #16]
 8005ba0:	0852      	lsrs	r2, r2, #1
 8005ba2:	3a01      	subs	r2, #1
 8005ba4:	0552      	lsls	r2, r2, #21
 8005ba6:	430a      	orrs	r2, r1
 8005ba8:	491f      	ldr	r1, [pc, #124]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005baa:	4313      	orrs	r3, r2
 8005bac:	610b      	str	r3, [r1, #16]
 8005bae:	e011      	b.n	8005bd4 <RCCEx_PLLSAI1_Config+0x190>
                   (PllSai1->PLLSAI1N << RCC_PLLSAI1CFGR_PLLSAI1N_Pos) |
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos) |
                   ((PllSai1->PLLSAI1M - 1U) << RCC_PLLSAI1CFGR_PLLSAI1M_Pos));
#else
        /* Configure the PLLSAI1 Division factor R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI1CFGR,
 8005bb0:	4b1d      	ldr	r3, [pc, #116]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005bb2:	691b      	ldr	r3, [r3, #16]
 8005bb4:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8005bb8:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005bbc:	687a      	ldr	r2, [r7, #4]
 8005bbe:	6892      	ldr	r2, [r2, #8]
 8005bc0:	0211      	lsls	r1, r2, #8
 8005bc2:	687a      	ldr	r2, [r7, #4]
 8005bc4:	6952      	ldr	r2, [r2, #20]
 8005bc6:	0852      	lsrs	r2, r2, #1
 8005bc8:	3a01      	subs	r2, #1
 8005bca:	0652      	lsls	r2, r2, #25
 8005bcc:	430a      	orrs	r2, r1
 8005bce:	4916      	ldr	r1, [pc, #88]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005bd0:	4313      	orrs	r3, r2
 8005bd2:	610b      	str	r3, [r1, #16]
                   (((PllSai1->PLLSAI1R >> 1U) - 1U) << RCC_PLLSAI1CFGR_PLLSAI1R_Pos));
#endif /* RCC_PLLSAI1M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI1 again by setting PLLSAI1ON to 1*/
      __HAL_RCC_PLLSAI1_ENABLE();
 8005bd4:	4b14      	ldr	r3, [pc, #80]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	4a13      	ldr	r2, [pc, #76]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005bda:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005bde:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005be0:	f7fd fe54 	bl	800388c <HAL_GetTick>
 8005be4:	60b8      	str	r0, [r7, #8]

      /* Wait till PLLSAI1 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8005be6:	e009      	b.n	8005bfc <RCCEx_PLLSAI1_Config+0x1b8>
      {
        if((HAL_GetTick() - tickstart) > PLLSAI1_TIMEOUT_VALUE)
 8005be8:	f7fd fe50 	bl	800388c <HAL_GetTick>
 8005bec:	4602      	mov	r2, r0
 8005bee:	68bb      	ldr	r3, [r7, #8]
 8005bf0:	1ad3      	subs	r3, r2, r3
 8005bf2:	2b02      	cmp	r3, #2
 8005bf4:	d902      	bls.n	8005bfc <RCCEx_PLLSAI1_Config+0x1b8>
        {
          status = HAL_TIMEOUT;
 8005bf6:	2303      	movs	r3, #3
 8005bf8:	73fb      	strb	r3, [r7, #15]
          break;
 8005bfa:	e005      	b.n	8005c08 <RCCEx_PLLSAI1_Config+0x1c4>
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI1RDY) == 0U)
 8005bfc:	4b0a      	ldr	r3, [pc, #40]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005bfe:	681b      	ldr	r3, [r3, #0]
 8005c00:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005c04:	2b00      	cmp	r3, #0
 8005c06:	d0ef      	beq.n	8005be8 <RCCEx_PLLSAI1_Config+0x1a4>
        }
      }

      if(status == HAL_OK)
 8005c08:	7bfb      	ldrb	r3, [r7, #15]
 8005c0a:	2b00      	cmp	r3, #0
 8005c0c:	d106      	bne.n	8005c1c <RCCEx_PLLSAI1_Config+0x1d8>
      {
        /* Configure the PLLSAI1 Clock output(s) */
        __HAL_RCC_PLLSAI1CLKOUT_ENABLE(PllSai1->PLLSAI1ClockOut);
 8005c0e:	4b06      	ldr	r3, [pc, #24]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005c10:	691a      	ldr	r2, [r3, #16]
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	699b      	ldr	r3, [r3, #24]
 8005c16:	4904      	ldr	r1, [pc, #16]	; (8005c28 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005c18:	4313      	orrs	r3, r2
 8005c1a:	610b      	str	r3, [r1, #16]
      }
    }
  }

  return status;
 8005c1c:	7bfb      	ldrb	r3, [r7, #15]
}
 8005c1e:	4618      	mov	r0, r3
 8005c20:	3710      	adds	r7, #16
 8005c22:	46bd      	mov	sp, r7
 8005c24:	bd80      	pop	{r7, pc}
 8005c26:	bf00      	nop
 8005c28:	40021000 	.word	0x40021000

08005c2c <RCCEx_PLLSAI2_Config>:
  * @note   PLLSAI2 is temporary disable to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLLSAI2_Config(RCC_PLLSAI2InitTypeDef *PllSai2, uint32_t Divider)
{
 8005c2c:	b580      	push	{r7, lr}
 8005c2e:	b084      	sub	sp, #16
 8005c30:	af00      	add	r7, sp, #0
 8005c32:	6078      	str	r0, [r7, #4]
 8005c34:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 8005c36:	2300      	movs	r3, #0
 8005c38:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLLSAI2M_VALUE(PllSai2->PLLSAI2M));
  assert_param(IS_RCC_PLLSAI2N_VALUE(PllSai2->PLLSAI2N));
  assert_param(IS_RCC_PLLSAI2CLOCKOUT_VALUE(PllSai2->PLLSAI2ClockOut));

  /* Check that PLLSAI2 clock source and divider M can be applied */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_NONE)
 8005c3a:	4b6a      	ldr	r3, [pc, #424]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005c3c:	68db      	ldr	r3, [r3, #12]
 8005c3e:	f003 0303 	and.w	r3, r3, #3
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d018      	beq.n	8005c78 <RCCEx_PLLSAI2_Config+0x4c>
  {
    /* PLL clock source and divider M already set, check that no request for change  */
    if((__HAL_RCC_GET_PLL_OSCSOURCE() != PllSai2->PLLSAI2Source)
 8005c46:	4b67      	ldr	r3, [pc, #412]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005c48:	68db      	ldr	r3, [r3, #12]
 8005c4a:	f003 0203 	and.w	r2, r3, #3
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	429a      	cmp	r2, r3
 8005c54:	d10d      	bne.n	8005c72 <RCCEx_PLLSAI2_Config+0x46>
       ||
       (PllSai2->PLLSAI2Source == RCC_PLLSOURCE_NONE)
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
       ||
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d009      	beq.n	8005c72 <RCCEx_PLLSAI2_Config+0x46>
#if !defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
       ||
       (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U) != PllSai2->PLLSAI2M)
 8005c5e:	4b61      	ldr	r3, [pc, #388]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005c60:	68db      	ldr	r3, [r3, #12]
 8005c62:	091b      	lsrs	r3, r3, #4
 8005c64:	f003 0307 	and.w	r3, r3, #7
 8005c68:	1c5a      	adds	r2, r3, #1
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	685b      	ldr	r3, [r3, #4]
       ||
 8005c6e:	429a      	cmp	r2, r3
 8005c70:	d047      	beq.n	8005d02 <RCCEx_PLLSAI2_Config+0xd6>
#endif
      )
    {
      status = HAL_ERROR;
 8005c72:	2301      	movs	r3, #1
 8005c74:	73fb      	strb	r3, [r7, #15]
 8005c76:	e044      	b.n	8005d02 <RCCEx_PLLSAI2_Config+0xd6>
    }
  }
  else
  {
    /* Check PLLSAI2 clock source availability */
    switch(PllSai2->PLLSAI2Source)
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	681b      	ldr	r3, [r3, #0]
 8005c7c:	2b03      	cmp	r3, #3
 8005c7e:	d018      	beq.n	8005cb2 <RCCEx_PLLSAI2_Config+0x86>
 8005c80:	2b03      	cmp	r3, #3
 8005c82:	d825      	bhi.n	8005cd0 <RCCEx_PLLSAI2_Config+0xa4>
 8005c84:	2b01      	cmp	r3, #1
 8005c86:	d002      	beq.n	8005c8e <RCCEx_PLLSAI2_Config+0x62>
 8005c88:	2b02      	cmp	r3, #2
 8005c8a:	d009      	beq.n	8005ca0 <RCCEx_PLLSAI2_Config+0x74>
 8005c8c:	e020      	b.n	8005cd0 <RCCEx_PLLSAI2_Config+0xa4>
    {
    case RCC_PLLSOURCE_MSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_MSIRDY))
 8005c8e:	4b55      	ldr	r3, [pc, #340]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	f003 0302 	and.w	r3, r3, #2
 8005c96:	2b00      	cmp	r3, #0
 8005c98:	d11d      	bne.n	8005cd6 <RCCEx_PLLSAI2_Config+0xaa>
      {
        status = HAL_ERROR;
 8005c9a:	2301      	movs	r3, #1
 8005c9c:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8005c9e:	e01a      	b.n	8005cd6 <RCCEx_PLLSAI2_Config+0xaa>
    case RCC_PLLSOURCE_HSI:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSIRDY))
 8005ca0:	4b50      	ldr	r3, [pc, #320]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005ca2:	681b      	ldr	r3, [r3, #0]
 8005ca4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005ca8:	2b00      	cmp	r3, #0
 8005caa:	d116      	bne.n	8005cda <RCCEx_PLLSAI2_Config+0xae>
      {
        status = HAL_ERROR;
 8005cac:	2301      	movs	r3, #1
 8005cae:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8005cb0:	e013      	b.n	8005cda <RCCEx_PLLSAI2_Config+0xae>
    case RCC_PLLSOURCE_HSE:
      if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSERDY))
 8005cb2:	4b4c      	ldr	r3, [pc, #304]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005cb4:	681b      	ldr	r3, [r3, #0]
 8005cb6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005cba:	2b00      	cmp	r3, #0
 8005cbc:	d10f      	bne.n	8005cde <RCCEx_PLLSAI2_Config+0xb2>
      {
        if(HAL_IS_BIT_CLR(RCC->CR, RCC_CR_HSEBYP))
 8005cbe:	4b49      	ldr	r3, [pc, #292]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d109      	bne.n	8005cde <RCCEx_PLLSAI2_Config+0xb2>
        {
          status = HAL_ERROR;
 8005cca:	2301      	movs	r3, #1
 8005ccc:	73fb      	strb	r3, [r7, #15]
        }
      }
      break;
 8005cce:	e006      	b.n	8005cde <RCCEx_PLLSAI2_Config+0xb2>
    default:
      status = HAL_ERROR;
 8005cd0:	2301      	movs	r3, #1
 8005cd2:	73fb      	strb	r3, [r7, #15]
      break;
 8005cd4:	e004      	b.n	8005ce0 <RCCEx_PLLSAI2_Config+0xb4>
      break;
 8005cd6:	bf00      	nop
 8005cd8:	e002      	b.n	8005ce0 <RCCEx_PLLSAI2_Config+0xb4>
      break;
 8005cda:	bf00      	nop
 8005cdc:	e000      	b.n	8005ce0 <RCCEx_PLLSAI2_Config+0xb4>
      break;
 8005cde:	bf00      	nop
    }

    if(status == HAL_OK)
 8005ce0:	7bfb      	ldrb	r3, [r7, #15]
 8005ce2:	2b00      	cmp	r3, #0
 8005ce4:	d10d      	bne.n	8005d02 <RCCEx_PLLSAI2_Config+0xd6>
#if defined(RCC_PLLSAI2M_DIV_1_16_SUPPORT)
      /* Set PLLSAI2 clock source */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, PllSai2->PLLSAI2Source);
#else
      /* Set PLLSAI2 clock source and divider M */
      MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC | RCC_PLLCFGR_PLLM, PllSai2->PLLSAI2Source | (PllSai2->PLLSAI2M - 1U) << RCC_PLLCFGR_PLLM_Pos);
 8005ce6:	4b3f      	ldr	r3, [pc, #252]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005ce8:	68db      	ldr	r3, [r3, #12]
 8005cea:	f023 0273 	bic.w	r2, r3, #115	; 0x73
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	6819      	ldr	r1, [r3, #0]
 8005cf2:	687b      	ldr	r3, [r7, #4]
 8005cf4:	685b      	ldr	r3, [r3, #4]
 8005cf6:	3b01      	subs	r3, #1
 8005cf8:	011b      	lsls	r3, r3, #4
 8005cfa:	430b      	orrs	r3, r1
 8005cfc:	4939      	ldr	r1, [pc, #228]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005cfe:	4313      	orrs	r3, r2
 8005d00:	60cb      	str	r3, [r1, #12]
#endif
    }
  }

  if(status == HAL_OK)
 8005d02:	7bfb      	ldrb	r3, [r7, #15]
 8005d04:	2b00      	cmp	r3, #0
 8005d06:	d167      	bne.n	8005dd8 <RCCEx_PLLSAI2_Config+0x1ac>
  {
    /* Disable the PLLSAI2 */
    __HAL_RCC_PLLSAI2_DISABLE();
 8005d08:	4b36      	ldr	r3, [pc, #216]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d0a:	681b      	ldr	r3, [r3, #0]
 8005d0c:	4a35      	ldr	r2, [pc, #212]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d0e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005d12:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005d14:	f7fd fdba 	bl	800388c <HAL_GetTick>
 8005d18:	60b8      	str	r0, [r7, #8]

    /* Wait till PLLSAI2 is ready to be updated */
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 8005d1a:	e009      	b.n	8005d30 <RCCEx_PLLSAI2_Config+0x104>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8005d1c:	f7fd fdb6 	bl	800388c <HAL_GetTick>
 8005d20:	4602      	mov	r2, r0
 8005d22:	68bb      	ldr	r3, [r7, #8]
 8005d24:	1ad3      	subs	r3, r2, r3
 8005d26:	2b02      	cmp	r3, #2
 8005d28:	d902      	bls.n	8005d30 <RCCEx_PLLSAI2_Config+0x104>
      {
        status = HAL_TIMEOUT;
 8005d2a:	2303      	movs	r3, #3
 8005d2c:	73fb      	strb	r3, [r7, #15]
        break;
 8005d2e:	e005      	b.n	8005d3c <RCCEx_PLLSAI2_Config+0x110>
    while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) != 0U)
 8005d30:	4b2c      	ldr	r3, [pc, #176]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d32:	681b      	ldr	r3, [r3, #0]
 8005d34:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005d38:	2b00      	cmp	r3, #0
 8005d3a:	d1ef      	bne.n	8005d1c <RCCEx_PLLSAI2_Config+0xf0>
      }
    }

    if(status == HAL_OK)
 8005d3c:	7bfb      	ldrb	r3, [r7, #15]
 8005d3e:	2b00      	cmp	r3, #0
 8005d40:	d14a      	bne.n	8005dd8 <RCCEx_PLLSAI2_Config+0x1ac>
    {
      if(Divider == DIVIDER_P_UPDATE)
 8005d42:	683b      	ldr	r3, [r7, #0]
 8005d44:	2b00      	cmp	r3, #0
 8005d46:	d111      	bne.n	8005d6c <RCCEx_PLLSAI2_Config+0x140>
        MODIFY_REG(RCC->PLLSAI2CFGR,
                   RCC_PLLSAI2CFGR_PLLSAI2N | RCC_PLLSAI2CFGR_PLLSAI2PDIV,
                   (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
                   (PllSai2->PLLSAI2P << RCC_PLLSAI2CFGR_PLLSAI2PDIV_Pos));
#else
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8005d48:	4b26      	ldr	r3, [pc, #152]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d4a:	695b      	ldr	r3, [r3, #20]
 8005d4c:	f423 331f 	bic.w	r3, r3, #162816	; 0x27c00
 8005d50:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005d54:	687a      	ldr	r2, [r7, #4]
 8005d56:	6892      	ldr	r2, [r2, #8]
 8005d58:	0211      	lsls	r1, r2, #8
 8005d5a:	687a      	ldr	r2, [r7, #4]
 8005d5c:	68d2      	ldr	r2, [r2, #12]
 8005d5e:	0912      	lsrs	r2, r2, #4
 8005d60:	0452      	lsls	r2, r2, #17
 8005d62:	430a      	orrs	r2, r1
 8005d64:	491f      	ldr	r1, [pc, #124]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d66:	4313      	orrs	r3, r2
 8005d68:	614b      	str	r3, [r1, #20]
 8005d6a:	e011      	b.n	8005d90 <RCCEx_PLLSAI2_Config+0x164>
                   (PllSai2->PLLSAI2N << RCC_PLLSAI2CFGR_PLLSAI2N_Pos) |
                   (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos) |
                   ((PllSai2->PLLSAI2M - 1U) << RCC_PLLSAI2CFGR_PLLSAI2M_Pos));
#else
        /* Configure the PLLSAI2 Division factor R and Multiplication factor N*/
        MODIFY_REG(RCC->PLLSAI2CFGR,
 8005d6c:	4b1d      	ldr	r3, [pc, #116]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d6e:	695b      	ldr	r3, [r3, #20]
 8005d70:	f023 63c0 	bic.w	r3, r3, #100663296	; 0x6000000
 8005d74:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
 8005d78:	687a      	ldr	r2, [r7, #4]
 8005d7a:	6892      	ldr	r2, [r2, #8]
 8005d7c:	0211      	lsls	r1, r2, #8
 8005d7e:	687a      	ldr	r2, [r7, #4]
 8005d80:	6912      	ldr	r2, [r2, #16]
 8005d82:	0852      	lsrs	r2, r2, #1
 8005d84:	3a01      	subs	r2, #1
 8005d86:	0652      	lsls	r2, r2, #25
 8005d88:	430a      	orrs	r2, r1
 8005d8a:	4916      	ldr	r1, [pc, #88]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d8c:	4313      	orrs	r3, r2
 8005d8e:	614b      	str	r3, [r1, #20]
                   (((PllSai2->PLLSAI2R >> 1U) - 1U) << RCC_PLLSAI2CFGR_PLLSAI2R_Pos));
#endif /* RCC_PLLSAI2M_DIV_1_16_SUPPORT */
      }

      /* Enable the PLLSAI2 again by setting PLLSAI2ON to 1*/
      __HAL_RCC_PLLSAI2_ENABLE();
 8005d90:	4b14      	ldr	r3, [pc, #80]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	4a13      	ldr	r2, [pc, #76]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005d96:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005d9a:	6013      	str	r3, [r2, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005d9c:	f7fd fd76 	bl	800388c <HAL_GetTick>
 8005da0:	60b8      	str	r0, [r7, #8]

      /* Wait till PLLSAI2 is ready */
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 8005da2:	e009      	b.n	8005db8 <RCCEx_PLLSAI2_Config+0x18c>
      {
        if((HAL_GetTick() - tickstart) > PLLSAI2_TIMEOUT_VALUE)
 8005da4:	f7fd fd72 	bl	800388c <HAL_GetTick>
 8005da8:	4602      	mov	r2, r0
 8005daa:	68bb      	ldr	r3, [r7, #8]
 8005dac:	1ad3      	subs	r3, r2, r3
 8005dae:	2b02      	cmp	r3, #2
 8005db0:	d902      	bls.n	8005db8 <RCCEx_PLLSAI2_Config+0x18c>
        {
          status = HAL_TIMEOUT;
 8005db2:	2303      	movs	r3, #3
 8005db4:	73fb      	strb	r3, [r7, #15]
          break;
 8005db6:	e005      	b.n	8005dc4 <RCCEx_PLLSAI2_Config+0x198>
      while(READ_BIT(RCC->CR, RCC_CR_PLLSAI2RDY) == 0U)
 8005db8:	4b0a      	ldr	r3, [pc, #40]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d0ef      	beq.n	8005da4 <RCCEx_PLLSAI2_Config+0x178>
        }
      }

      if(status == HAL_OK)
 8005dc4:	7bfb      	ldrb	r3, [r7, #15]
 8005dc6:	2b00      	cmp	r3, #0
 8005dc8:	d106      	bne.n	8005dd8 <RCCEx_PLLSAI2_Config+0x1ac>
      {
        /* Configure the PLLSAI2 Clock output(s) */
        __HAL_RCC_PLLSAI2CLKOUT_ENABLE(PllSai2->PLLSAI2ClockOut);
 8005dca:	4b06      	ldr	r3, [pc, #24]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005dcc:	695a      	ldr	r2, [r3, #20]
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	695b      	ldr	r3, [r3, #20]
 8005dd2:	4904      	ldr	r1, [pc, #16]	; (8005de4 <RCCEx_PLLSAI2_Config+0x1b8>)
 8005dd4:	4313      	orrs	r3, r2
 8005dd6:	614b      	str	r3, [r1, #20]
      }
    }
  }

  return status;
 8005dd8:	7bfb      	ldrb	r3, [r7, #15]
}
 8005dda:	4618      	mov	r0, r3
 8005ddc:	3710      	adds	r7, #16
 8005dde:	46bd      	mov	sp, r7
 8005de0:	bd80      	pop	{r7, pc}
 8005de2:	bf00      	nop
 8005de4:	40021000 	.word	0x40021000

08005de8 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005de8:	b580      	push	{r7, lr}
 8005dea:	b084      	sub	sp, #16
 8005dec:	af00      	add	r7, sp, #0
 8005dee:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005df0:	687b      	ldr	r3, [r7, #4]
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	d101      	bne.n	8005dfa <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005df6:	2301      	movs	r3, #1
 8005df8:	e095      	b.n	8005f26 <HAL_SPI_Init+0x13e>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005dfa:	687b      	ldr	r3, [r7, #4]
 8005dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005dfe:	2b00      	cmp	r3, #0
 8005e00:	d108      	bne.n	8005e14 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	685b      	ldr	r3, [r3, #4]
 8005e06:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005e0a:	d009      	beq.n	8005e20 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	2200      	movs	r2, #0
 8005e10:	61da      	str	r2, [r3, #28]
 8005e12:	e005      	b.n	8005e20 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	2200      	movs	r2, #0
 8005e18:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	2200      	movs	r2, #0
 8005e1e:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	2200      	movs	r2, #0
 8005e24:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005e26:	687b      	ldr	r3, [r7, #4]
 8005e28:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8005e2c:	b2db      	uxtb	r3, r3
 8005e2e:	2b00      	cmp	r3, #0
 8005e30:	d106      	bne.n	8005e40 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005e32:	687b      	ldr	r3, [r7, #4]
 8005e34:	2200      	movs	r2, #0
 8005e36:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005e3a:	6878      	ldr	r0, [r7, #4]
 8005e3c:	f7fd fa02 	bl	8003244 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2202      	movs	r2, #2
 8005e44:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	681a      	ldr	r2, [r3, #0]
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005e56:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8005e58:	687b      	ldr	r3, [r7, #4]
 8005e5a:	68db      	ldr	r3, [r3, #12]
 8005e5c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8005e60:	d902      	bls.n	8005e68 <HAL_SPI_Init+0x80>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 8005e62:	2300      	movs	r3, #0
 8005e64:	60fb      	str	r3, [r7, #12]
 8005e66:	e002      	b.n	8005e6e <HAL_SPI_Init+0x86>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8005e68:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005e6c:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8005e6e:	687b      	ldr	r3, [r7, #4]
 8005e70:	68db      	ldr	r3, [r3, #12]
 8005e72:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8005e76:	d007      	beq.n	8005e88 <HAL_SPI_Init+0xa0>
 8005e78:	687b      	ldr	r3, [r7, #4]
 8005e7a:	68db      	ldr	r3, [r3, #12]
 8005e7c:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8005e80:	d002      	beq.n	8005e88 <HAL_SPI_Init+0xa0>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005e82:	687b      	ldr	r3, [r7, #4]
 8005e84:	2200      	movs	r2, #0
 8005e86:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	685b      	ldr	r3, [r3, #4]
 8005e8c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	689b      	ldr	r3, [r3, #8]
 8005e94:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8005e98:	431a      	orrs	r2, r3
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	691b      	ldr	r3, [r3, #16]
 8005e9e:	f003 0302 	and.w	r3, r3, #2
 8005ea2:	431a      	orrs	r2, r3
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	695b      	ldr	r3, [r3, #20]
 8005ea8:	f003 0301 	and.w	r3, r3, #1
 8005eac:	431a      	orrs	r2, r3
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	699b      	ldr	r3, [r3, #24]
 8005eb2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005eb6:	431a      	orrs	r2, r3
 8005eb8:	687b      	ldr	r3, [r7, #4]
 8005eba:	69db      	ldr	r3, [r3, #28]
 8005ebc:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005ec0:	431a      	orrs	r2, r3
 8005ec2:	687b      	ldr	r3, [r7, #4]
 8005ec4:	6a1b      	ldr	r3, [r3, #32]
 8005ec6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005eca:	ea42 0103 	orr.w	r1, r2, r3
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005ed2:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8005ed6:	687b      	ldr	r3, [r7, #4]
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	430a      	orrs	r2, r1
 8005edc:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	699b      	ldr	r3, [r3, #24]
 8005ee2:	0c1b      	lsrs	r3, r3, #16
 8005ee4:	f003 0204 	and.w	r2, r3, #4
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005eec:	f003 0310 	and.w	r3, r3, #16
 8005ef0:	431a      	orrs	r2, r3
 8005ef2:	687b      	ldr	r3, [r7, #4]
 8005ef4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005ef6:	f003 0308 	and.w	r3, r3, #8
 8005efa:	431a      	orrs	r2, r3
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	68db      	ldr	r3, [r3, #12]
 8005f00:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8005f04:	ea42 0103 	orr.w	r1, r2, r3
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	430a      	orrs	r2, r1
 8005f14:	605a      	str	r2, [r3, #4]
#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005f16:	687b      	ldr	r3, [r7, #4]
 8005f18:	2200      	movs	r2, #0
 8005f1a:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	2201      	movs	r2, #1
 8005f20:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  return HAL_OK;
 8005f24:	2300      	movs	r3, #0
}
 8005f26:	4618      	mov	r0, r3
 8005f28:	3710      	adds	r7, #16
 8005f2a:	46bd      	mov	sp, r7
 8005f2c:	bd80      	pop	{r7, pc}

08005f2e <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8005f2e:	b580      	push	{r7, lr}
 8005f30:	b082      	sub	sp, #8
 8005f32:	af00      	add	r7, sp, #0
 8005f34:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d101      	bne.n	8005f40 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8005f3c:	2301      	movs	r3, #1
 8005f3e:	e040      	b.n	8005fc2 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8005f40:	687b      	ldr	r3, [r7, #4]
 8005f42:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005f44:	2b00      	cmp	r3, #0
 8005f46:	d106      	bne.n	8005f56 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8005f48:	687b      	ldr	r3, [r7, #4]
 8005f4a:	2200      	movs	r2, #0
 8005f4c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8005f50:	6878      	ldr	r0, [r7, #4]
 8005f52:	f7fd f9bb 	bl	80032cc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	2224      	movs	r2, #36	; 0x24
 8005f5a:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8005f5c:	687b      	ldr	r3, [r7, #4]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	681a      	ldr	r2, [r3, #0]
 8005f62:	687b      	ldr	r3, [r7, #4]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	f022 0201 	bic.w	r2, r2, #1
 8005f6a:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8005f6c:	6878      	ldr	r0, [r7, #4]
 8005f6e:	f000 f8c1 	bl	80060f4 <UART_SetConfig>
 8005f72:	4603      	mov	r3, r0
 8005f74:	2b01      	cmp	r3, #1
 8005f76:	d101      	bne.n	8005f7c <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 8005f78:	2301      	movs	r3, #1
 8005f7a:	e022      	b.n	8005fc2 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8005f7c:	687b      	ldr	r3, [r7, #4]
 8005f7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f80:	2b00      	cmp	r3, #0
 8005f82:	d002      	beq.n	8005f8a <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8005f84:	6878      	ldr	r0, [r7, #4]
 8005f86:	f000 fb6d 	bl	8006664 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8005f8a:	687b      	ldr	r3, [r7, #4]
 8005f8c:	681b      	ldr	r3, [r3, #0]
 8005f8e:	685a      	ldr	r2, [r3, #4]
 8005f90:	687b      	ldr	r3, [r7, #4]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8005f98:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8005f9a:	687b      	ldr	r3, [r7, #4]
 8005f9c:	681b      	ldr	r3, [r3, #0]
 8005f9e:	689a      	ldr	r2, [r3, #8]
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8005fa8:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8005faa:	687b      	ldr	r3, [r7, #4]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	681a      	ldr	r2, [r3, #0]
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	f042 0201 	orr.w	r2, r2, #1
 8005fb8:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8005fba:	6878      	ldr	r0, [r7, #4]
 8005fbc:	f000 fbf4 	bl	80067a8 <UART_CheckIdleState>
 8005fc0:	4603      	mov	r3, r0
}
 8005fc2:	4618      	mov	r0, r3
 8005fc4:	3708      	adds	r7, #8
 8005fc6:	46bd      	mov	sp, r7
 8005fc8:	bd80      	pop	{r7, pc}

08005fca <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005fca:	b580      	push	{r7, lr}
 8005fcc:	b08a      	sub	sp, #40	; 0x28
 8005fce:	af02      	add	r7, sp, #8
 8005fd0:	60f8      	str	r0, [r7, #12]
 8005fd2:	60b9      	str	r1, [r7, #8]
 8005fd4:	603b      	str	r3, [r7, #0]
 8005fd6:	4613      	mov	r3, r2
 8005fd8:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8005fda:	68fb      	ldr	r3, [r7, #12]
 8005fdc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005fde:	2b20      	cmp	r3, #32
 8005fe0:	f040 8082 	bne.w	80060e8 <HAL_UART_Transmit+0x11e>
  {
    if ((pData == NULL) || (Size == 0U))
 8005fe4:	68bb      	ldr	r3, [r7, #8]
 8005fe6:	2b00      	cmp	r3, #0
 8005fe8:	d002      	beq.n	8005ff0 <HAL_UART_Transmit+0x26>
 8005fea:	88fb      	ldrh	r3, [r7, #6]
 8005fec:	2b00      	cmp	r3, #0
 8005fee:	d101      	bne.n	8005ff4 <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 8005ff0:	2301      	movs	r3, #1
 8005ff2:	e07a      	b.n	80060ea <HAL_UART_Transmit+0x120>
    }

    __HAL_LOCK(huart);
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8005ffa:	2b01      	cmp	r3, #1
 8005ffc:	d101      	bne.n	8006002 <HAL_UART_Transmit+0x38>
 8005ffe:	2302      	movs	r3, #2
 8006000:	e073      	b.n	80060ea <HAL_UART_Transmit+0x120>
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	2201      	movs	r2, #1
 8006006:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	2200      	movs	r2, #0
 800600e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8006012:	68fb      	ldr	r3, [r7, #12]
 8006014:	2221      	movs	r2, #33	; 0x21
 8006016:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8006018:	f7fd fc38 	bl	800388c <HAL_GetTick>
 800601c:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	88fa      	ldrh	r2, [r7, #6]
 8006022:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 8006026:	68fb      	ldr	r3, [r7, #12]
 8006028:	88fa      	ldrh	r2, [r7, #6]
 800602a:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	689b      	ldr	r3, [r3, #8]
 8006032:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006036:	d108      	bne.n	800604a <HAL_UART_Transmit+0x80>
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	691b      	ldr	r3, [r3, #16]
 800603c:	2b00      	cmp	r3, #0
 800603e:	d104      	bne.n	800604a <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 8006040:	2300      	movs	r3, #0
 8006042:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 8006044:	68bb      	ldr	r3, [r7, #8]
 8006046:	61bb      	str	r3, [r7, #24]
 8006048:	e003      	b.n	8006052 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 800604a:	68bb      	ldr	r3, [r7, #8]
 800604c:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 800604e:	2300      	movs	r3, #0
 8006050:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	2200      	movs	r2, #0
 8006056:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 800605a:	e02d      	b.n	80060b8 <HAL_UART_Transmit+0xee>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800605c:	683b      	ldr	r3, [r7, #0]
 800605e:	9300      	str	r3, [sp, #0]
 8006060:	697b      	ldr	r3, [r7, #20]
 8006062:	2200      	movs	r2, #0
 8006064:	2180      	movs	r1, #128	; 0x80
 8006066:	68f8      	ldr	r0, [r7, #12]
 8006068:	f000 fbe7 	bl	800683a <UART_WaitOnFlagUntilTimeout>
 800606c:	4603      	mov	r3, r0
 800606e:	2b00      	cmp	r3, #0
 8006070:	d001      	beq.n	8006076 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 8006072:	2303      	movs	r3, #3
 8006074:	e039      	b.n	80060ea <HAL_UART_Transmit+0x120>
      }
      if (pdata8bits == NULL)
 8006076:	69fb      	ldr	r3, [r7, #28]
 8006078:	2b00      	cmp	r3, #0
 800607a:	d10b      	bne.n	8006094 <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 800607c:	69bb      	ldr	r3, [r7, #24]
 800607e:	881a      	ldrh	r2, [r3, #0]
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	681b      	ldr	r3, [r3, #0]
 8006084:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8006088:	b292      	uxth	r2, r2
 800608a:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 800608c:	69bb      	ldr	r3, [r7, #24]
 800608e:	3302      	adds	r3, #2
 8006090:	61bb      	str	r3, [r7, #24]
 8006092:	e008      	b.n	80060a6 <HAL_UART_Transmit+0xdc>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8006094:	69fb      	ldr	r3, [r7, #28]
 8006096:	781a      	ldrb	r2, [r3, #0]
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	b292      	uxth	r2, r2
 800609e:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 80060a0:	69fb      	ldr	r3, [r7, #28]
 80060a2:	3301      	adds	r3, #1
 80060a4:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80060a6:	68fb      	ldr	r3, [r7, #12]
 80060a8:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80060ac:	b29b      	uxth	r3, r3
 80060ae:	3b01      	subs	r3, #1
 80060b0:	b29a      	uxth	r2, r3
 80060b2:	68fb      	ldr	r3, [r7, #12]
 80060b4:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 80060b8:	68fb      	ldr	r3, [r7, #12]
 80060ba:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 80060be:	b29b      	uxth	r3, r3
 80060c0:	2b00      	cmp	r3, #0
 80060c2:	d1cb      	bne.n	800605c <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80060c4:	683b      	ldr	r3, [r7, #0]
 80060c6:	9300      	str	r3, [sp, #0]
 80060c8:	697b      	ldr	r3, [r7, #20]
 80060ca:	2200      	movs	r2, #0
 80060cc:	2140      	movs	r1, #64	; 0x40
 80060ce:	68f8      	ldr	r0, [r7, #12]
 80060d0:	f000 fbb3 	bl	800683a <UART_WaitOnFlagUntilTimeout>
 80060d4:	4603      	mov	r3, r0
 80060d6:	2b00      	cmp	r3, #0
 80060d8:	d001      	beq.n	80060de <HAL_UART_Transmit+0x114>
    {
      return HAL_TIMEOUT;
 80060da:	2303      	movs	r3, #3
 80060dc:	e005      	b.n	80060ea <HAL_UART_Transmit+0x120>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80060de:	68fb      	ldr	r3, [r7, #12]
 80060e0:	2220      	movs	r2, #32
 80060e2:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 80060e4:	2300      	movs	r3, #0
 80060e6:	e000      	b.n	80060ea <HAL_UART_Transmit+0x120>
  }
  else
  {
    return HAL_BUSY;
 80060e8:	2302      	movs	r3, #2
  }
}
 80060ea:	4618      	mov	r0, r3
 80060ec:	3720      	adds	r7, #32
 80060ee:	46bd      	mov	sp, r7
 80060f0:	bd80      	pop	{r7, pc}
	...

080060f4 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80060f4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80060f8:	b08a      	sub	sp, #40	; 0x28
 80060fa:	af00      	add	r7, sp, #0
 80060fc:	60f8      	str	r0, [r7, #12]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80060fe:	2300      	movs	r3, #0
 8006100:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8006104:	68fb      	ldr	r3, [r7, #12]
 8006106:	689a      	ldr	r2, [r3, #8]
 8006108:	68fb      	ldr	r3, [r7, #12]
 800610a:	691b      	ldr	r3, [r3, #16]
 800610c:	431a      	orrs	r2, r3
 800610e:	68fb      	ldr	r3, [r7, #12]
 8006110:	695b      	ldr	r3, [r3, #20]
 8006112:	431a      	orrs	r2, r3
 8006114:	68fb      	ldr	r3, [r7, #12]
 8006116:	69db      	ldr	r3, [r3, #28]
 8006118:	4313      	orrs	r3, r2
 800611a:	627b      	str	r3, [r7, #36]	; 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	681b      	ldr	r3, [r3, #0]
 8006120:	681a      	ldr	r2, [r3, #0]
 8006122:	4ba4      	ldr	r3, [pc, #656]	; (80063b4 <UART_SetConfig+0x2c0>)
 8006124:	4013      	ands	r3, r2
 8006126:	68fa      	ldr	r2, [r7, #12]
 8006128:	6812      	ldr	r2, [r2, #0]
 800612a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800612c:	430b      	orrs	r3, r1
 800612e:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	685b      	ldr	r3, [r3, #4]
 8006136:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800613a:	68fb      	ldr	r3, [r7, #12]
 800613c:	68da      	ldr	r2, [r3, #12]
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	681b      	ldr	r3, [r3, #0]
 8006142:	430a      	orrs	r2, r1
 8006144:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	699b      	ldr	r3, [r3, #24]
 800614a:	627b      	str	r3, [r7, #36]	; 0x24

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	4a99      	ldr	r2, [pc, #612]	; (80063b8 <UART_SetConfig+0x2c4>)
 8006152:	4293      	cmp	r3, r2
 8006154:	d004      	beq.n	8006160 <UART_SetConfig+0x6c>
  {
    tmpreg |= huart->Init.OneBitSampling;
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	6a1b      	ldr	r3, [r3, #32]
 800615a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800615c:	4313      	orrs	r3, r2
 800615e:	627b      	str	r3, [r7, #36]	; 0x24
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	681b      	ldr	r3, [r3, #0]
 8006164:	689b      	ldr	r3, [r3, #8]
 8006166:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 800616a:	68fb      	ldr	r3, [r7, #12]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006170:	430a      	orrs	r2, r1
 8006172:	609a      	str	r2, [r3, #8]
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
#endif /* USART_PRESC_PRESCALER */

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	4a90      	ldr	r2, [pc, #576]	; (80063bc <UART_SetConfig+0x2c8>)
 800617a:	4293      	cmp	r3, r2
 800617c:	d126      	bne.n	80061cc <UART_SetConfig+0xd8>
 800617e:	4b90      	ldr	r3, [pc, #576]	; (80063c0 <UART_SetConfig+0x2cc>)
 8006180:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006184:	f003 0303 	and.w	r3, r3, #3
 8006188:	2b03      	cmp	r3, #3
 800618a:	d81b      	bhi.n	80061c4 <UART_SetConfig+0xd0>
 800618c:	a201      	add	r2, pc, #4	; (adr r2, 8006194 <UART_SetConfig+0xa0>)
 800618e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006192:	bf00      	nop
 8006194:	080061a5 	.word	0x080061a5
 8006198:	080061b5 	.word	0x080061b5
 800619c:	080061ad 	.word	0x080061ad
 80061a0:	080061bd 	.word	0x080061bd
 80061a4:	2301      	movs	r3, #1
 80061a6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80061aa:	e116      	b.n	80063da <UART_SetConfig+0x2e6>
 80061ac:	2302      	movs	r3, #2
 80061ae:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80061b2:	e112      	b.n	80063da <UART_SetConfig+0x2e6>
 80061b4:	2304      	movs	r3, #4
 80061b6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80061ba:	e10e      	b.n	80063da <UART_SetConfig+0x2e6>
 80061bc:	2308      	movs	r3, #8
 80061be:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80061c2:	e10a      	b.n	80063da <UART_SetConfig+0x2e6>
 80061c4:	2310      	movs	r3, #16
 80061c6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80061ca:	e106      	b.n	80063da <UART_SetConfig+0x2e6>
 80061cc:	68fb      	ldr	r3, [r7, #12]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	4a7c      	ldr	r2, [pc, #496]	; (80063c4 <UART_SetConfig+0x2d0>)
 80061d2:	4293      	cmp	r3, r2
 80061d4:	d138      	bne.n	8006248 <UART_SetConfig+0x154>
 80061d6:	4b7a      	ldr	r3, [pc, #488]	; (80063c0 <UART_SetConfig+0x2cc>)
 80061d8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80061dc:	f003 030c 	and.w	r3, r3, #12
 80061e0:	2b0c      	cmp	r3, #12
 80061e2:	d82d      	bhi.n	8006240 <UART_SetConfig+0x14c>
 80061e4:	a201      	add	r2, pc, #4	; (adr r2, 80061ec <UART_SetConfig+0xf8>)
 80061e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80061ea:	bf00      	nop
 80061ec:	08006221 	.word	0x08006221
 80061f0:	08006241 	.word	0x08006241
 80061f4:	08006241 	.word	0x08006241
 80061f8:	08006241 	.word	0x08006241
 80061fc:	08006231 	.word	0x08006231
 8006200:	08006241 	.word	0x08006241
 8006204:	08006241 	.word	0x08006241
 8006208:	08006241 	.word	0x08006241
 800620c:	08006229 	.word	0x08006229
 8006210:	08006241 	.word	0x08006241
 8006214:	08006241 	.word	0x08006241
 8006218:	08006241 	.word	0x08006241
 800621c:	08006239 	.word	0x08006239
 8006220:	2300      	movs	r3, #0
 8006222:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006226:	e0d8      	b.n	80063da <UART_SetConfig+0x2e6>
 8006228:	2302      	movs	r3, #2
 800622a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800622e:	e0d4      	b.n	80063da <UART_SetConfig+0x2e6>
 8006230:	2304      	movs	r3, #4
 8006232:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006236:	e0d0      	b.n	80063da <UART_SetConfig+0x2e6>
 8006238:	2308      	movs	r3, #8
 800623a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800623e:	e0cc      	b.n	80063da <UART_SetConfig+0x2e6>
 8006240:	2310      	movs	r3, #16
 8006242:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006246:	e0c8      	b.n	80063da <UART_SetConfig+0x2e6>
 8006248:	68fb      	ldr	r3, [r7, #12]
 800624a:	681b      	ldr	r3, [r3, #0]
 800624c:	4a5e      	ldr	r2, [pc, #376]	; (80063c8 <UART_SetConfig+0x2d4>)
 800624e:	4293      	cmp	r3, r2
 8006250:	d125      	bne.n	800629e <UART_SetConfig+0x1aa>
 8006252:	4b5b      	ldr	r3, [pc, #364]	; (80063c0 <UART_SetConfig+0x2cc>)
 8006254:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006258:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800625c:	2b30      	cmp	r3, #48	; 0x30
 800625e:	d016      	beq.n	800628e <UART_SetConfig+0x19a>
 8006260:	2b30      	cmp	r3, #48	; 0x30
 8006262:	d818      	bhi.n	8006296 <UART_SetConfig+0x1a2>
 8006264:	2b20      	cmp	r3, #32
 8006266:	d00a      	beq.n	800627e <UART_SetConfig+0x18a>
 8006268:	2b20      	cmp	r3, #32
 800626a:	d814      	bhi.n	8006296 <UART_SetConfig+0x1a2>
 800626c:	2b00      	cmp	r3, #0
 800626e:	d002      	beq.n	8006276 <UART_SetConfig+0x182>
 8006270:	2b10      	cmp	r3, #16
 8006272:	d008      	beq.n	8006286 <UART_SetConfig+0x192>
 8006274:	e00f      	b.n	8006296 <UART_SetConfig+0x1a2>
 8006276:	2300      	movs	r3, #0
 8006278:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800627c:	e0ad      	b.n	80063da <UART_SetConfig+0x2e6>
 800627e:	2302      	movs	r3, #2
 8006280:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006284:	e0a9      	b.n	80063da <UART_SetConfig+0x2e6>
 8006286:	2304      	movs	r3, #4
 8006288:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800628c:	e0a5      	b.n	80063da <UART_SetConfig+0x2e6>
 800628e:	2308      	movs	r3, #8
 8006290:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006294:	e0a1      	b.n	80063da <UART_SetConfig+0x2e6>
 8006296:	2310      	movs	r3, #16
 8006298:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800629c:	e09d      	b.n	80063da <UART_SetConfig+0x2e6>
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	681b      	ldr	r3, [r3, #0]
 80062a2:	4a4a      	ldr	r2, [pc, #296]	; (80063cc <UART_SetConfig+0x2d8>)
 80062a4:	4293      	cmp	r3, r2
 80062a6:	d125      	bne.n	80062f4 <UART_SetConfig+0x200>
 80062a8:	4b45      	ldr	r3, [pc, #276]	; (80063c0 <UART_SetConfig+0x2cc>)
 80062aa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80062ae:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 80062b2:	2bc0      	cmp	r3, #192	; 0xc0
 80062b4:	d016      	beq.n	80062e4 <UART_SetConfig+0x1f0>
 80062b6:	2bc0      	cmp	r3, #192	; 0xc0
 80062b8:	d818      	bhi.n	80062ec <UART_SetConfig+0x1f8>
 80062ba:	2b80      	cmp	r3, #128	; 0x80
 80062bc:	d00a      	beq.n	80062d4 <UART_SetConfig+0x1e0>
 80062be:	2b80      	cmp	r3, #128	; 0x80
 80062c0:	d814      	bhi.n	80062ec <UART_SetConfig+0x1f8>
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d002      	beq.n	80062cc <UART_SetConfig+0x1d8>
 80062c6:	2b40      	cmp	r3, #64	; 0x40
 80062c8:	d008      	beq.n	80062dc <UART_SetConfig+0x1e8>
 80062ca:	e00f      	b.n	80062ec <UART_SetConfig+0x1f8>
 80062cc:	2300      	movs	r3, #0
 80062ce:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80062d2:	e082      	b.n	80063da <UART_SetConfig+0x2e6>
 80062d4:	2302      	movs	r3, #2
 80062d6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80062da:	e07e      	b.n	80063da <UART_SetConfig+0x2e6>
 80062dc:	2304      	movs	r3, #4
 80062de:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80062e2:	e07a      	b.n	80063da <UART_SetConfig+0x2e6>
 80062e4:	2308      	movs	r3, #8
 80062e6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80062ea:	e076      	b.n	80063da <UART_SetConfig+0x2e6>
 80062ec:	2310      	movs	r3, #16
 80062ee:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80062f2:	e072      	b.n	80063da <UART_SetConfig+0x2e6>
 80062f4:	68fb      	ldr	r3, [r7, #12]
 80062f6:	681b      	ldr	r3, [r3, #0]
 80062f8:	4a35      	ldr	r2, [pc, #212]	; (80063d0 <UART_SetConfig+0x2dc>)
 80062fa:	4293      	cmp	r3, r2
 80062fc:	d12a      	bne.n	8006354 <UART_SetConfig+0x260>
 80062fe:	4b30      	ldr	r3, [pc, #192]	; (80063c0 <UART_SetConfig+0x2cc>)
 8006300:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006304:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006308:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800630c:	d01a      	beq.n	8006344 <UART_SetConfig+0x250>
 800630e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006312:	d81b      	bhi.n	800634c <UART_SetConfig+0x258>
 8006314:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8006318:	d00c      	beq.n	8006334 <UART_SetConfig+0x240>
 800631a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800631e:	d815      	bhi.n	800634c <UART_SetConfig+0x258>
 8006320:	2b00      	cmp	r3, #0
 8006322:	d003      	beq.n	800632c <UART_SetConfig+0x238>
 8006324:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006328:	d008      	beq.n	800633c <UART_SetConfig+0x248>
 800632a:	e00f      	b.n	800634c <UART_SetConfig+0x258>
 800632c:	2300      	movs	r3, #0
 800632e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006332:	e052      	b.n	80063da <UART_SetConfig+0x2e6>
 8006334:	2302      	movs	r3, #2
 8006336:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800633a:	e04e      	b.n	80063da <UART_SetConfig+0x2e6>
 800633c:	2304      	movs	r3, #4
 800633e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006342:	e04a      	b.n	80063da <UART_SetConfig+0x2e6>
 8006344:	2308      	movs	r3, #8
 8006346:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800634a:	e046      	b.n	80063da <UART_SetConfig+0x2e6>
 800634c:	2310      	movs	r3, #16
 800634e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006352:	e042      	b.n	80063da <UART_SetConfig+0x2e6>
 8006354:	68fb      	ldr	r3, [r7, #12]
 8006356:	681b      	ldr	r3, [r3, #0]
 8006358:	4a17      	ldr	r2, [pc, #92]	; (80063b8 <UART_SetConfig+0x2c4>)
 800635a:	4293      	cmp	r3, r2
 800635c:	d13a      	bne.n	80063d4 <UART_SetConfig+0x2e0>
 800635e:	4b18      	ldr	r3, [pc, #96]	; (80063c0 <UART_SetConfig+0x2cc>)
 8006360:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006364:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 8006368:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800636c:	d01a      	beq.n	80063a4 <UART_SetConfig+0x2b0>
 800636e:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8006372:	d81b      	bhi.n	80063ac <UART_SetConfig+0x2b8>
 8006374:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006378:	d00c      	beq.n	8006394 <UART_SetConfig+0x2a0>
 800637a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800637e:	d815      	bhi.n	80063ac <UART_SetConfig+0x2b8>
 8006380:	2b00      	cmp	r3, #0
 8006382:	d003      	beq.n	800638c <UART_SetConfig+0x298>
 8006384:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006388:	d008      	beq.n	800639c <UART_SetConfig+0x2a8>
 800638a:	e00f      	b.n	80063ac <UART_SetConfig+0x2b8>
 800638c:	2300      	movs	r3, #0
 800638e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006392:	e022      	b.n	80063da <UART_SetConfig+0x2e6>
 8006394:	2302      	movs	r3, #2
 8006396:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800639a:	e01e      	b.n	80063da <UART_SetConfig+0x2e6>
 800639c:	2304      	movs	r3, #4
 800639e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80063a2:	e01a      	b.n	80063da <UART_SetConfig+0x2e6>
 80063a4:	2308      	movs	r3, #8
 80063a6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80063aa:	e016      	b.n	80063da <UART_SetConfig+0x2e6>
 80063ac:	2310      	movs	r3, #16
 80063ae:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80063b2:	e012      	b.n	80063da <UART_SetConfig+0x2e6>
 80063b4:	efff69f3 	.word	0xefff69f3
 80063b8:	40008000 	.word	0x40008000
 80063bc:	40013800 	.word	0x40013800
 80063c0:	40021000 	.word	0x40021000
 80063c4:	40004400 	.word	0x40004400
 80063c8:	40004800 	.word	0x40004800
 80063cc:	40004c00 	.word	0x40004c00
 80063d0:	40005000 	.word	0x40005000
 80063d4:	2310      	movs	r3, #16
 80063d6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 80063da:	68fb      	ldr	r3, [r7, #12]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	4a9f      	ldr	r2, [pc, #636]	; (800665c <UART_SetConfig+0x568>)
 80063e0:	4293      	cmp	r3, r2
 80063e2:	d17a      	bne.n	80064da <UART_SetConfig+0x3e6>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 80063e4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80063e8:	2b08      	cmp	r3, #8
 80063ea:	d824      	bhi.n	8006436 <UART_SetConfig+0x342>
 80063ec:	a201      	add	r2, pc, #4	; (adr r2, 80063f4 <UART_SetConfig+0x300>)
 80063ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80063f2:	bf00      	nop
 80063f4:	08006419 	.word	0x08006419
 80063f8:	08006437 	.word	0x08006437
 80063fc:	08006421 	.word	0x08006421
 8006400:	08006437 	.word	0x08006437
 8006404:	08006427 	.word	0x08006427
 8006408:	08006437 	.word	0x08006437
 800640c:	08006437 	.word	0x08006437
 8006410:	08006437 	.word	0x08006437
 8006414:	0800642f 	.word	0x0800642f
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8006418:	f7fe ff8e 	bl	8005338 <HAL_RCC_GetPCLK1Freq>
 800641c:	61f8      	str	r0, [r7, #28]
        break;
 800641e:	e010      	b.n	8006442 <UART_SetConfig+0x34e>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8006420:	4b8f      	ldr	r3, [pc, #572]	; (8006660 <UART_SetConfig+0x56c>)
 8006422:	61fb      	str	r3, [r7, #28]
        break;
 8006424:	e00d      	b.n	8006442 <UART_SetConfig+0x34e>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 8006426:	f7fe feef 	bl	8005208 <HAL_RCC_GetSysClockFreq>
 800642a:	61f8      	str	r0, [r7, #28]
        break;
 800642c:	e009      	b.n	8006442 <UART_SetConfig+0x34e>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800642e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8006432:	61fb      	str	r3, [r7, #28]
        break;
 8006434:	e005      	b.n	8006442 <UART_SetConfig+0x34e>
      default:
        pclk = 0U;
 8006436:	2300      	movs	r3, #0
 8006438:	61fb      	str	r3, [r7, #28]
        ret = HAL_ERROR;
 800643a:	2301      	movs	r3, #1
 800643c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
        break;
 8006440:	bf00      	nop
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 8006442:	69fb      	ldr	r3, [r7, #28]
 8006444:	2b00      	cmp	r3, #0
 8006446:	f000 80fb 	beq.w	8006640 <UART_SetConfig+0x54c>
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
#else
      /* No Prescaler applicable */
      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 800644a:	68fb      	ldr	r3, [r7, #12]
 800644c:	685a      	ldr	r2, [r3, #4]
 800644e:	4613      	mov	r3, r2
 8006450:	005b      	lsls	r3, r3, #1
 8006452:	4413      	add	r3, r2
 8006454:	69fa      	ldr	r2, [r7, #28]
 8006456:	429a      	cmp	r2, r3
 8006458:	d305      	bcc.n	8006466 <UART_SetConfig+0x372>
          (pclk > (4096U * huart->Init.BaudRate)))
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	685b      	ldr	r3, [r3, #4]
 800645e:	031b      	lsls	r3, r3, #12
      if ((pclk < (3U * huart->Init.BaudRate)) ||
 8006460:	69fa      	ldr	r2, [r7, #28]
 8006462:	429a      	cmp	r2, r3
 8006464:	d903      	bls.n	800646e <UART_SetConfig+0x37a>
      {
        ret = HAL_ERROR;
 8006466:	2301      	movs	r3, #1
 8006468:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800646c:	e0e8      	b.n	8006640 <UART_SetConfig+0x54c>
      }
      else
      {
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate));
 800646e:	69fb      	ldr	r3, [r7, #28]
 8006470:	2200      	movs	r2, #0
 8006472:	461c      	mov	r4, r3
 8006474:	4615      	mov	r5, r2
 8006476:	f04f 0200 	mov.w	r2, #0
 800647a:	f04f 0300 	mov.w	r3, #0
 800647e:	022b      	lsls	r3, r5, #8
 8006480:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8006484:	0222      	lsls	r2, r4, #8
 8006486:	68f9      	ldr	r1, [r7, #12]
 8006488:	6849      	ldr	r1, [r1, #4]
 800648a:	0849      	lsrs	r1, r1, #1
 800648c:	2000      	movs	r0, #0
 800648e:	4688      	mov	r8, r1
 8006490:	4681      	mov	r9, r0
 8006492:	eb12 0a08 	adds.w	sl, r2, r8
 8006496:	eb43 0b09 	adc.w	fp, r3, r9
 800649a:	68fb      	ldr	r3, [r7, #12]
 800649c:	685b      	ldr	r3, [r3, #4]
 800649e:	2200      	movs	r2, #0
 80064a0:	603b      	str	r3, [r7, #0]
 80064a2:	607a      	str	r2, [r7, #4]
 80064a4:	e9d7 2300 	ldrd	r2, r3, [r7]
 80064a8:	4650      	mov	r0, sl
 80064aa:	4659      	mov	r1, fp
 80064ac:	f7fa fc26 	bl	8000cfc <__aeabi_uldivmod>
 80064b0:	4602      	mov	r2, r0
 80064b2:	460b      	mov	r3, r1
 80064b4:	4613      	mov	r3, r2
 80064b6:	61bb      	str	r3, [r7, #24]
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 80064b8:	69bb      	ldr	r3, [r7, #24]
 80064ba:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80064be:	d308      	bcc.n	80064d2 <UART_SetConfig+0x3de>
 80064c0:	69bb      	ldr	r3, [r7, #24]
 80064c2:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80064c6:	d204      	bcs.n	80064d2 <UART_SetConfig+0x3de>
        {
          huart->Instance->BRR = usartdiv;
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	69ba      	ldr	r2, [r7, #24]
 80064ce:	60da      	str	r2, [r3, #12]
 80064d0:	e0b6      	b.n	8006640 <UART_SetConfig+0x54c>
        }
        else
        {
          ret = HAL_ERROR;
 80064d2:	2301      	movs	r3, #1
 80064d4:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80064d8:	e0b2      	b.n	8006640 <UART_SetConfig+0x54c>
      } /* if ( (pclk < (3 * huart->Init.BaudRate) ) || (pclk > (4096 * huart->Init.BaudRate) )) */
#endif /* USART_PRESC_PRESCALER */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80064da:	68fb      	ldr	r3, [r7, #12]
 80064dc:	69db      	ldr	r3, [r3, #28]
 80064de:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80064e2:	d15e      	bne.n	80065a2 <UART_SetConfig+0x4ae>
  {
    switch (clocksource)
 80064e4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80064e8:	2b08      	cmp	r3, #8
 80064ea:	d828      	bhi.n	800653e <UART_SetConfig+0x44a>
 80064ec:	a201      	add	r2, pc, #4	; (adr r2, 80064f4 <UART_SetConfig+0x400>)
 80064ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80064f2:	bf00      	nop
 80064f4:	08006519 	.word	0x08006519
 80064f8:	08006521 	.word	0x08006521
 80064fc:	08006529 	.word	0x08006529
 8006500:	0800653f 	.word	0x0800653f
 8006504:	0800652f 	.word	0x0800652f
 8006508:	0800653f 	.word	0x0800653f
 800650c:	0800653f 	.word	0x0800653f
 8006510:	0800653f 	.word	0x0800653f
 8006514:	08006537 	.word	0x08006537
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8006518:	f7fe ff0e 	bl	8005338 <HAL_RCC_GetPCLK1Freq>
 800651c:	61f8      	str	r0, [r7, #28]
        break;
 800651e:	e014      	b.n	800654a <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 8006520:	f7fe ff20 	bl	8005364 <HAL_RCC_GetPCLK2Freq>
 8006524:	61f8      	str	r0, [r7, #28]
        break;
 8006526:	e010      	b.n	800654a <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8006528:	4b4d      	ldr	r3, [pc, #308]	; (8006660 <UART_SetConfig+0x56c>)
 800652a:	61fb      	str	r3, [r7, #28]
        break;
 800652c:	e00d      	b.n	800654a <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800652e:	f7fe fe6b 	bl	8005208 <HAL_RCC_GetSysClockFreq>
 8006532:	61f8      	str	r0, [r7, #28]
        break;
 8006534:	e009      	b.n	800654a <UART_SetConfig+0x456>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8006536:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800653a:	61fb      	str	r3, [r7, #28]
        break;
 800653c:	e005      	b.n	800654a <UART_SetConfig+0x456>
      default:
        pclk = 0U;
 800653e:	2300      	movs	r3, #0
 8006540:	61fb      	str	r3, [r7, #28]
        ret = HAL_ERROR;
 8006542:	2301      	movs	r3, #1
 8006544:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
        break;
 8006548:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800654a:	69fb      	ldr	r3, [r7, #28]
 800654c:	2b00      	cmp	r3, #0
 800654e:	d077      	beq.n	8006640 <UART_SetConfig+0x54c>
    {
#if defined(USART_PRESC_PRESCALER)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
#else
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8006550:	69fb      	ldr	r3, [r7, #28]
 8006552:	005a      	lsls	r2, r3, #1
 8006554:	68fb      	ldr	r3, [r7, #12]
 8006556:	685b      	ldr	r3, [r3, #4]
 8006558:	085b      	lsrs	r3, r3, #1
 800655a:	441a      	add	r2, r3
 800655c:	68fb      	ldr	r3, [r7, #12]
 800655e:	685b      	ldr	r3, [r3, #4]
 8006560:	fbb2 f3f3 	udiv	r3, r2, r3
 8006564:	61bb      	str	r3, [r7, #24]
#endif /* USART_PRESC_PRESCALER */
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8006566:	69bb      	ldr	r3, [r7, #24]
 8006568:	2b0f      	cmp	r3, #15
 800656a:	d916      	bls.n	800659a <UART_SetConfig+0x4a6>
 800656c:	69bb      	ldr	r3, [r7, #24]
 800656e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006572:	d212      	bcs.n	800659a <UART_SetConfig+0x4a6>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8006574:	69bb      	ldr	r3, [r7, #24]
 8006576:	b29b      	uxth	r3, r3
 8006578:	f023 030f 	bic.w	r3, r3, #15
 800657c:	82fb      	strh	r3, [r7, #22]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800657e:	69bb      	ldr	r3, [r7, #24]
 8006580:	085b      	lsrs	r3, r3, #1
 8006582:	b29b      	uxth	r3, r3
 8006584:	f003 0307 	and.w	r3, r3, #7
 8006588:	b29a      	uxth	r2, r3
 800658a:	8afb      	ldrh	r3, [r7, #22]
 800658c:	4313      	orrs	r3, r2
 800658e:	82fb      	strh	r3, [r7, #22]
        huart->Instance->BRR = brrtemp;
 8006590:	68fb      	ldr	r3, [r7, #12]
 8006592:	681b      	ldr	r3, [r3, #0]
 8006594:	8afa      	ldrh	r2, [r7, #22]
 8006596:	60da      	str	r2, [r3, #12]
 8006598:	e052      	b.n	8006640 <UART_SetConfig+0x54c>
      }
      else
      {
        ret = HAL_ERROR;
 800659a:	2301      	movs	r3, #1
 800659c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 80065a0:	e04e      	b.n	8006640 <UART_SetConfig+0x54c>
      }
    }
  }
  else
  {
    switch (clocksource)
 80065a2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80065a6:	2b08      	cmp	r3, #8
 80065a8:	d827      	bhi.n	80065fa <UART_SetConfig+0x506>
 80065aa:	a201      	add	r2, pc, #4	; (adr r2, 80065b0 <UART_SetConfig+0x4bc>)
 80065ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80065b0:	080065d5 	.word	0x080065d5
 80065b4:	080065dd 	.word	0x080065dd
 80065b8:	080065e5 	.word	0x080065e5
 80065bc:	080065fb 	.word	0x080065fb
 80065c0:	080065eb 	.word	0x080065eb
 80065c4:	080065fb 	.word	0x080065fb
 80065c8:	080065fb 	.word	0x080065fb
 80065cc:	080065fb 	.word	0x080065fb
 80065d0:	080065f3 	.word	0x080065f3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80065d4:	f7fe feb0 	bl	8005338 <HAL_RCC_GetPCLK1Freq>
 80065d8:	61f8      	str	r0, [r7, #28]
        break;
 80065da:	e014      	b.n	8006606 <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 80065dc:	f7fe fec2 	bl	8005364 <HAL_RCC_GetPCLK2Freq>
 80065e0:	61f8      	str	r0, [r7, #28]
        break;
 80065e2:	e010      	b.n	8006606 <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80065e4:	4b1e      	ldr	r3, [pc, #120]	; (8006660 <UART_SetConfig+0x56c>)
 80065e6:	61fb      	str	r3, [r7, #28]
        break;
 80065e8:	e00d      	b.n	8006606 <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80065ea:	f7fe fe0d 	bl	8005208 <HAL_RCC_GetSysClockFreq>
 80065ee:	61f8      	str	r0, [r7, #28]
        break;
 80065f0:	e009      	b.n	8006606 <UART_SetConfig+0x512>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80065f2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80065f6:	61fb      	str	r3, [r7, #28]
        break;
 80065f8:	e005      	b.n	8006606 <UART_SetConfig+0x512>
      default:
        pclk = 0U;
 80065fa:	2300      	movs	r3, #0
 80065fc:	61fb      	str	r3, [r7, #28]
        ret = HAL_ERROR;
 80065fe:	2301      	movs	r3, #1
 8006600:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
        break;
 8006604:	bf00      	nop
    }

    if (pclk != 0U)
 8006606:	69fb      	ldr	r3, [r7, #28]
 8006608:	2b00      	cmp	r3, #0
 800660a:	d019      	beq.n	8006640 <UART_SetConfig+0x54c>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
#if defined(USART_PRESC_PRESCALER)
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
#else
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 800660c:	68fb      	ldr	r3, [r7, #12]
 800660e:	685b      	ldr	r3, [r3, #4]
 8006610:	085a      	lsrs	r2, r3, #1
 8006612:	69fb      	ldr	r3, [r7, #28]
 8006614:	441a      	add	r2, r3
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	685b      	ldr	r3, [r3, #4]
 800661a:	fbb2 f3f3 	udiv	r3, r2, r3
 800661e:	61bb      	str	r3, [r7, #24]
#endif /* USART_PRESC_PRESCALER */
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8006620:	69bb      	ldr	r3, [r7, #24]
 8006622:	2b0f      	cmp	r3, #15
 8006624:	d909      	bls.n	800663a <UART_SetConfig+0x546>
 8006626:	69bb      	ldr	r3, [r7, #24]
 8006628:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800662c:	d205      	bcs.n	800663a <UART_SetConfig+0x546>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 800662e:	69bb      	ldr	r3, [r7, #24]
 8006630:	b29a      	uxth	r2, r3
 8006632:	68fb      	ldr	r3, [r7, #12]
 8006634:	681b      	ldr	r3, [r3, #0]
 8006636:	60da      	str	r2, [r3, #12]
 8006638:	e002      	b.n	8006640 <UART_SetConfig+0x54c>
      }
      else
      {
        ret = HAL_ERROR;
 800663a:	2301      	movs	r3, #1
 800663c:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;
#endif /* USART_CR1_FIFOEN */

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	2200      	movs	r2, #0
 8006644:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8006646:	68fb      	ldr	r3, [r7, #12]
 8006648:	2200      	movs	r2, #0
 800664a:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 800664c:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
}
 8006650:	4618      	mov	r0, r3
 8006652:	3728      	adds	r7, #40	; 0x28
 8006654:	46bd      	mov	sp, r7
 8006656:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800665a:	bf00      	nop
 800665c:	40008000 	.word	0x40008000
 8006660:	00f42400 	.word	0x00f42400

08006664 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8006664:	b480      	push	{r7}
 8006666:	b083      	sub	sp, #12
 8006668:	af00      	add	r7, sp, #0
 800666a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006670:	f003 0301 	and.w	r3, r3, #1
 8006674:	2b00      	cmp	r3, #0
 8006676:	d00a      	beq.n	800668e <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	681b      	ldr	r3, [r3, #0]
 800667c:	685b      	ldr	r3, [r3, #4]
 800667e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	430a      	orrs	r2, r1
 800668c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006692:	f003 0302 	and.w	r3, r3, #2
 8006696:	2b00      	cmp	r3, #0
 8006698:	d00a      	beq.n	80066b0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	685b      	ldr	r3, [r3, #4]
 80066a0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	430a      	orrs	r2, r1
 80066ae:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80066b4:	f003 0304 	and.w	r3, r3, #4
 80066b8:	2b00      	cmp	r3, #0
 80066ba:	d00a      	beq.n	80066d2 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	685b      	ldr	r3, [r3, #4]
 80066c2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	430a      	orrs	r2, r1
 80066d0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80066d6:	f003 0308 	and.w	r3, r3, #8
 80066da:	2b00      	cmp	r3, #0
 80066dc:	d00a      	beq.n	80066f4 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	685b      	ldr	r3, [r3, #4]
 80066e4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	430a      	orrs	r2, r1
 80066f2:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80066f4:	687b      	ldr	r3, [r7, #4]
 80066f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80066f8:	f003 0310 	and.w	r3, r3, #16
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d00a      	beq.n	8006716 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	689b      	ldr	r3, [r3, #8]
 8006706:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800670a:	687b      	ldr	r3, [r7, #4]
 800670c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	430a      	orrs	r2, r1
 8006714:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800671a:	f003 0320 	and.w	r3, r3, #32
 800671e:	2b00      	cmp	r3, #0
 8006720:	d00a      	beq.n	8006738 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	689b      	ldr	r3, [r3, #8]
 8006728:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	681b      	ldr	r3, [r3, #0]
 8006734:	430a      	orrs	r2, r1
 8006736:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800673c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006740:	2b00      	cmp	r3, #0
 8006742:	d01a      	beq.n	800677a <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	685b      	ldr	r3, [r3, #4]
 800674a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006752:	687b      	ldr	r3, [r7, #4]
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	430a      	orrs	r2, r1
 8006758:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800675e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8006762:	d10a      	bne.n	800677a <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	681b      	ldr	r3, [r3, #0]
 8006768:	685b      	ldr	r3, [r3, #4]
 800676a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	430a      	orrs	r2, r1
 8006778:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800677e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006782:	2b00      	cmp	r3, #0
 8006784:	d00a      	beq.n	800679c <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	681b      	ldr	r3, [r3, #0]
 800678a:	685b      	ldr	r3, [r3, #4]
 800678c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	430a      	orrs	r2, r1
 800679a:	605a      	str	r2, [r3, #4]
  }
}
 800679c:	bf00      	nop
 800679e:	370c      	adds	r7, #12
 80067a0:	46bd      	mov	sp, r7
 80067a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067a6:	4770      	bx	lr

080067a8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 80067a8:	b580      	push	{r7, lr}
 80067aa:	b086      	sub	sp, #24
 80067ac:	af02      	add	r7, sp, #8
 80067ae:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	2200      	movs	r2, #0
 80067b4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 80067b8:	f7fd f868 	bl	800388c <HAL_GetTick>
 80067bc:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	f003 0308 	and.w	r3, r3, #8
 80067c8:	2b08      	cmp	r3, #8
 80067ca:	d10e      	bne.n	80067ea <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80067cc:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80067d0:	9300      	str	r3, [sp, #0]
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	2200      	movs	r2, #0
 80067d6:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 80067da:	6878      	ldr	r0, [r7, #4]
 80067dc:	f000 f82d 	bl	800683a <UART_WaitOnFlagUntilTimeout>
 80067e0:	4603      	mov	r3, r0
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	d001      	beq.n	80067ea <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80067e6:	2303      	movs	r3, #3
 80067e8:	e023      	b.n	8006832 <UART_CheckIdleState+0x8a>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	681b      	ldr	r3, [r3, #0]
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	f003 0304 	and.w	r3, r3, #4
 80067f4:	2b04      	cmp	r3, #4
 80067f6:	d10e      	bne.n	8006816 <UART_CheckIdleState+0x6e>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80067f8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 80067fc:	9300      	str	r3, [sp, #0]
 80067fe:	68fb      	ldr	r3, [r7, #12]
 8006800:	2200      	movs	r2, #0
 8006802:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8006806:	6878      	ldr	r0, [r7, #4]
 8006808:	f000 f817 	bl	800683a <UART_WaitOnFlagUntilTimeout>
 800680c:	4603      	mov	r3, r0
 800680e:	2b00      	cmp	r3, #0
 8006810:	d001      	beq.n	8006816 <UART_CheckIdleState+0x6e>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8006812:	2303      	movs	r3, #3
 8006814:	e00d      	b.n	8006832 <UART_CheckIdleState+0x8a>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	2220      	movs	r2, #32
 800681a:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	2220      	movs	r2, #32
 8006820:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	2200      	movs	r2, #0
 8006826:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	2200      	movs	r2, #0
 800682c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 8006830:	2300      	movs	r3, #0
}
 8006832:	4618      	mov	r0, r3
 8006834:	3710      	adds	r7, #16
 8006836:	46bd      	mov	sp, r7
 8006838:	bd80      	pop	{r7, pc}

0800683a <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800683a:	b580      	push	{r7, lr}
 800683c:	b09c      	sub	sp, #112	; 0x70
 800683e:	af00      	add	r7, sp, #0
 8006840:	60f8      	str	r0, [r7, #12]
 8006842:	60b9      	str	r1, [r7, #8]
 8006844:	603b      	str	r3, [r7, #0]
 8006846:	4613      	mov	r3, r2
 8006848:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800684a:	e0a5      	b.n	8006998 <UART_WaitOnFlagUntilTimeout+0x15e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800684c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800684e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006852:	f000 80a1 	beq.w	8006998 <UART_WaitOnFlagUntilTimeout+0x15e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006856:	f7fd f819 	bl	800388c <HAL_GetTick>
 800685a:	4602      	mov	r2, r0
 800685c:	683b      	ldr	r3, [r7, #0]
 800685e:	1ad3      	subs	r3, r2, r3
 8006860:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8006862:	429a      	cmp	r2, r3
 8006864:	d302      	bcc.n	800686c <UART_WaitOnFlagUntilTimeout+0x32>
 8006866:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8006868:	2b00      	cmp	r3, #0
 800686a:	d13e      	bne.n	80068ea <UART_WaitOnFlagUntilTimeout+0xb0>
           interrupts for the interrupt process */
#if defined(USART_CR1_FIFOEN)
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
                                                USART_CR1_TXEIE_TXFNFIE));
#else
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 800686c:	68fb      	ldr	r3, [r7, #12]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	653b      	str	r3, [r7, #80]	; 0x50
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006872:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8006874:	e853 3f00 	ldrex	r3, [r3]
 8006878:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 800687a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800687c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006880:	667b      	str	r3, [r7, #100]	; 0x64
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	461a      	mov	r2, r3
 8006888:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800688a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800688c:	65ba      	str	r2, [r7, #88]	; 0x58
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800688e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8006890:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8006892:	e841 2300 	strex	r3, r2, [r1]
 8006896:	657b      	str	r3, [r7, #84]	; 0x54
   return(result);
 8006898:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800689a:	2b00      	cmp	r3, #0
 800689c:	d1e6      	bne.n	800686c <UART_WaitOnFlagUntilTimeout+0x32>
#endif /* USART_CR1_FIFOEN */
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800689e:	68fb      	ldr	r3, [r7, #12]
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	3308      	adds	r3, #8
 80068a4:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80068a6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80068a8:	e853 3f00 	ldrex	r3, [r3]
 80068ac:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 80068ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80068b0:	f023 0301 	bic.w	r3, r3, #1
 80068b4:	663b      	str	r3, [r7, #96]	; 0x60
 80068b6:	68fb      	ldr	r3, [r7, #12]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	3308      	adds	r3, #8
 80068bc:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 80068be:	64ba      	str	r2, [r7, #72]	; 0x48
 80068c0:	647b      	str	r3, [r7, #68]	; 0x44
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80068c2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 80068c4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80068c6:	e841 2300 	strex	r3, r2, [r1]
 80068ca:	643b      	str	r3, [r7, #64]	; 0x40
   return(result);
 80068cc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80068ce:	2b00      	cmp	r3, #0
 80068d0:	d1e5      	bne.n	800689e <UART_WaitOnFlagUntilTimeout+0x64>

        huart->gState = HAL_UART_STATE_READY;
 80068d2:	68fb      	ldr	r3, [r7, #12]
 80068d4:	2220      	movs	r2, #32
 80068d6:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 80068d8:	68fb      	ldr	r3, [r7, #12]
 80068da:	2220      	movs	r2, #32
 80068dc:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	2200      	movs	r2, #0
 80068e2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 80068e6:	2303      	movs	r3, #3
 80068e8:	e067      	b.n	80069ba <UART_WaitOnFlagUntilTimeout+0x180>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 80068ea:	68fb      	ldr	r3, [r7, #12]
 80068ec:	681b      	ldr	r3, [r3, #0]
 80068ee:	681b      	ldr	r3, [r3, #0]
 80068f0:	f003 0304 	and.w	r3, r3, #4
 80068f4:	2b00      	cmp	r3, #0
 80068f6:	d04f      	beq.n	8006998 <UART_WaitOnFlagUntilTimeout+0x15e>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	681b      	ldr	r3, [r3, #0]
 80068fc:	69db      	ldr	r3, [r3, #28]
 80068fe:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006902:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006906:	d147      	bne.n	8006998 <UART_WaitOnFlagUntilTimeout+0x15e>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8006908:	68fb      	ldr	r3, [r7, #12]
 800690a:	681b      	ldr	r3, [r3, #0]
 800690c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006910:	621a      	str	r2, [r3, #32]
             interrupts for the interrupt process */
#if defined(USART_CR1_FIFOEN)
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE |
                                                  USART_CR1_TXEIE_TXFNFIE));
#else
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8006912:	68fb      	ldr	r3, [r7, #12]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8006918:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800691a:	e853 3f00 	ldrex	r3, [r3]
 800691e:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 8006920:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006922:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006926:	66fb      	str	r3, [r7, #108]	; 0x6c
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	681b      	ldr	r3, [r3, #0]
 800692c:	461a      	mov	r2, r3
 800692e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006930:	637b      	str	r3, [r7, #52]	; 0x34
 8006932:	633a      	str	r2, [r7, #48]	; 0x30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006934:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006936:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8006938:	e841 2300 	strex	r3, r2, [r1]
 800693c:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 800693e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006940:	2b00      	cmp	r3, #0
 8006942:	d1e6      	bne.n	8006912 <UART_WaitOnFlagUntilTimeout+0xd8>
#endif /* USART_CR1_FIFOEN */
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	3308      	adds	r3, #8
 800694a:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800694c:	697b      	ldr	r3, [r7, #20]
 800694e:	e853 3f00 	ldrex	r3, [r3]
 8006952:	613b      	str	r3, [r7, #16]
   return(result);
 8006954:	693b      	ldr	r3, [r7, #16]
 8006956:	f023 0301 	bic.w	r3, r3, #1
 800695a:	66bb      	str	r3, [r7, #104]	; 0x68
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	681b      	ldr	r3, [r3, #0]
 8006960:	3308      	adds	r3, #8
 8006962:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8006964:	623a      	str	r2, [r7, #32]
 8006966:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8006968:	69f9      	ldr	r1, [r7, #28]
 800696a:	6a3a      	ldr	r2, [r7, #32]
 800696c:	e841 2300 	strex	r3, r2, [r1]
 8006970:	61bb      	str	r3, [r7, #24]
   return(result);
 8006972:	69bb      	ldr	r3, [r7, #24]
 8006974:	2b00      	cmp	r3, #0
 8006976:	d1e5      	bne.n	8006944 <UART_WaitOnFlagUntilTimeout+0x10a>

          huart->gState = HAL_UART_STATE_READY;
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	2220      	movs	r2, #32
 800697c:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	2220      	movs	r2, #32
 8006982:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8006984:	68fb      	ldr	r3, [r7, #12]
 8006986:	2220      	movs	r2, #32
 8006988:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	2200      	movs	r2, #0
 8006990:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 8006994:	2303      	movs	r3, #3
 8006996:	e010      	b.n	80069ba <UART_WaitOnFlagUntilTimeout+0x180>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8006998:	68fb      	ldr	r3, [r7, #12]
 800699a:	681b      	ldr	r3, [r3, #0]
 800699c:	69da      	ldr	r2, [r3, #28]
 800699e:	68bb      	ldr	r3, [r7, #8]
 80069a0:	4013      	ands	r3, r2
 80069a2:	68ba      	ldr	r2, [r7, #8]
 80069a4:	429a      	cmp	r2, r3
 80069a6:	bf0c      	ite	eq
 80069a8:	2301      	moveq	r3, #1
 80069aa:	2300      	movne	r3, #0
 80069ac:	b2db      	uxtb	r3, r3
 80069ae:	461a      	mov	r2, r3
 80069b0:	79fb      	ldrb	r3, [r7, #7]
 80069b2:	429a      	cmp	r2, r3
 80069b4:	f43f af4a 	beq.w	800684c <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80069b8:	2300      	movs	r3, #0
}
 80069ba:	4618      	mov	r0, r3
 80069bc:	3770      	adds	r7, #112	; 0x70
 80069be:	46bd      	mov	sp, r7
 80069c0:	bd80      	pop	{r7, pc}

080069c2 <USB_CoreInit>:
  * @param  cfg pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_CoreInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
 80069c2:	b084      	sub	sp, #16
 80069c4:	b580      	push	{r7, lr}
 80069c6:	b084      	sub	sp, #16
 80069c8:	af00      	add	r7, sp, #0
 80069ca:	6078      	str	r0, [r7, #4]
 80069cc:	f107 001c 	add.w	r0, r7, #28
 80069d0:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret;

  /* Select FS Embedded PHY */
  USBx->GUSBCFG |= USB_OTG_GUSBCFG_PHYSEL;
 80069d4:	687b      	ldr	r3, [r7, #4]
 80069d6:	68db      	ldr	r3, [r3, #12]
 80069d8:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80069dc:	687b      	ldr	r3, [r7, #4]
 80069de:	60da      	str	r2, [r3, #12]

  /* Reset after a PHY select */
  ret = USB_CoreReset(USBx);
 80069e0:	6878      	ldr	r0, [r7, #4]
 80069e2:	f000 fa6f 	bl	8006ec4 <USB_CoreReset>
 80069e6:	4603      	mov	r3, r0
 80069e8:	73fb      	strb	r3, [r7, #15]

  if (cfg.battery_charging_enable == 0U)
 80069ea:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80069ec:	2b00      	cmp	r3, #0
 80069ee:	d106      	bne.n	80069fe <USB_CoreInit+0x3c>
  {
    /* Activate the USB Transceiver */
    USBx->GCCFG |= USB_OTG_GCCFG_PWRDWN;
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80069f4:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	639a      	str	r2, [r3, #56]	; 0x38
 80069fc:	e005      	b.n	8006a0a <USB_CoreInit+0x48>
  }
  else
  {
    /* Deactivate the USB Transceiver */
    USBx->GCCFG &= ~(USB_OTG_GCCFG_PWRDWN);
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006a02:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	639a      	str	r2, [r3, #56]	; 0x38
  }

  return ret;
 8006a0a:	7bfb      	ldrb	r3, [r7, #15]
}
 8006a0c:	4618      	mov	r0, r3
 8006a0e:	3710      	adds	r7, #16
 8006a10:	46bd      	mov	sp, r7
 8006a12:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8006a16:	b004      	add	sp, #16
 8006a18:	4770      	bx	lr

08006a1a <USB_DisableGlobalInt>:
  *         Disable the controller's Global Int in the AHB Config reg
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DisableGlobalInt(USB_OTG_GlobalTypeDef *USBx)
{
 8006a1a:	b480      	push	{r7}
 8006a1c:	b083      	sub	sp, #12
 8006a1e:	af00      	add	r7, sp, #0
 8006a20:	6078      	str	r0, [r7, #4]
  USBx->GAHBCFG &= ~USB_OTG_GAHBCFG_GINT;
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	689b      	ldr	r3, [r3, #8]
 8006a26:	f023 0201 	bic.w	r2, r3, #1
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	609a      	str	r2, [r3, #8]
  return HAL_OK;
 8006a2e:	2300      	movs	r3, #0
}
 8006a30:	4618      	mov	r0, r3
 8006a32:	370c      	adds	r7, #12
 8006a34:	46bd      	mov	sp, r7
 8006a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a3a:	4770      	bx	lr

08006a3c <USB_SetCurrentMode>:
  *            @arg USB_DEVICE_MODE Peripheral mode
  *            @arg USB_HOST_MODE Host mode
  * @retval HAL status
  */
HAL_StatusTypeDef USB_SetCurrentMode(USB_OTG_GlobalTypeDef *USBx, USB_ModeTypeDef mode)
{
 8006a3c:	b580      	push	{r7, lr}
 8006a3e:	b084      	sub	sp, #16
 8006a40:	af00      	add	r7, sp, #0
 8006a42:	6078      	str	r0, [r7, #4]
 8006a44:	460b      	mov	r3, r1
 8006a46:	70fb      	strb	r3, [r7, #3]
  uint32_t ms = 0U;
 8006a48:	2300      	movs	r3, #0
 8006a4a:	60fb      	str	r3, [r7, #12]

  USBx->GUSBCFG &= ~(USB_OTG_GUSBCFG_FHMOD | USB_OTG_GUSBCFG_FDMOD);
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	68db      	ldr	r3, [r3, #12]
 8006a50:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	60da      	str	r2, [r3, #12]

  if (mode == USB_HOST_MODE)
 8006a58:	78fb      	ldrb	r3, [r7, #3]
 8006a5a:	2b01      	cmp	r3, #1
 8006a5c:	d115      	bne.n	8006a8a <USB_SetCurrentMode+0x4e>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FHMOD;
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	68db      	ldr	r3, [r3, #12]
 8006a62:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	60da      	str	r2, [r3, #12]

    do
    {
      HAL_Delay(1U);
 8006a6a:	2001      	movs	r0, #1
 8006a6c:	f7fc ff1a 	bl	80038a4 <HAL_Delay>
      ms++;
 8006a70:	68fb      	ldr	r3, [r7, #12]
 8006a72:	3301      	adds	r3, #1
 8006a74:	60fb      	str	r3, [r7, #12]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_HOST_MODE) && (ms < 50U));
 8006a76:	6878      	ldr	r0, [r7, #4]
 8006a78:	f000 fa16 	bl	8006ea8 <USB_GetMode>
 8006a7c:	4603      	mov	r3, r0
 8006a7e:	2b01      	cmp	r3, #1
 8006a80:	d01e      	beq.n	8006ac0 <USB_SetCurrentMode+0x84>
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	2b31      	cmp	r3, #49	; 0x31
 8006a86:	d9f0      	bls.n	8006a6a <USB_SetCurrentMode+0x2e>
 8006a88:	e01a      	b.n	8006ac0 <USB_SetCurrentMode+0x84>
  }
  else if (mode == USB_DEVICE_MODE)
 8006a8a:	78fb      	ldrb	r3, [r7, #3]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	d115      	bne.n	8006abc <USB_SetCurrentMode+0x80>
  {
    USBx->GUSBCFG |= USB_OTG_GUSBCFG_FDMOD;
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	68db      	ldr	r3, [r3, #12]
 8006a94:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	60da      	str	r2, [r3, #12]

    do
    {
      HAL_Delay(1U);
 8006a9c:	2001      	movs	r0, #1
 8006a9e:	f7fc ff01 	bl	80038a4 <HAL_Delay>
      ms++;
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	3301      	adds	r3, #1
 8006aa6:	60fb      	str	r3, [r7, #12]
    } while ((USB_GetMode(USBx) != (uint32_t)USB_DEVICE_MODE) && (ms < 50U));
 8006aa8:	6878      	ldr	r0, [r7, #4]
 8006aaa:	f000 f9fd 	bl	8006ea8 <USB_GetMode>
 8006aae:	4603      	mov	r3, r0
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	d005      	beq.n	8006ac0 <USB_SetCurrentMode+0x84>
 8006ab4:	68fb      	ldr	r3, [r7, #12]
 8006ab6:	2b31      	cmp	r3, #49	; 0x31
 8006ab8:	d9f0      	bls.n	8006a9c <USB_SetCurrentMode+0x60>
 8006aba:	e001      	b.n	8006ac0 <USB_SetCurrentMode+0x84>
  }
  else
  {
    return HAL_ERROR;
 8006abc:	2301      	movs	r3, #1
 8006abe:	e005      	b.n	8006acc <USB_SetCurrentMode+0x90>
  }

  if (ms == 50U)
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	2b32      	cmp	r3, #50	; 0x32
 8006ac4:	d101      	bne.n	8006aca <USB_SetCurrentMode+0x8e>
  {
    return HAL_ERROR;
 8006ac6:	2301      	movs	r3, #1
 8006ac8:	e000      	b.n	8006acc <USB_SetCurrentMode+0x90>
  }

  return HAL_OK;
 8006aca:	2300      	movs	r3, #0
}
 8006acc:	4618      	mov	r0, r3
 8006ace:	3710      	adds	r7, #16
 8006ad0:	46bd      	mov	sp, r7
 8006ad2:	bd80      	pop	{r7, pc}

08006ad4 <USB_DevInit>:
  * @param  cfg   pointer to a USB_OTG_CfgTypeDef structure that contains
  *         the configuration information for the specified USBx peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef USB_DevInit(USB_OTG_GlobalTypeDef *USBx, USB_OTG_CfgTypeDef cfg)
{
 8006ad4:	b084      	sub	sp, #16
 8006ad6:	b580      	push	{r7, lr}
 8006ad8:	b086      	sub	sp, #24
 8006ada:	af00      	add	r7, sp, #0
 8006adc:	6078      	str	r0, [r7, #4]
 8006ade:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8006ae2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  HAL_StatusTypeDef ret = HAL_OK;
 8006ae6:	2300      	movs	r3, #0
 8006ae8:	75fb      	strb	r3, [r7, #23]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	60fb      	str	r3, [r7, #12]
  uint32_t i;

  for (i = 0U; i < 15U; i++)
 8006aee:	2300      	movs	r3, #0
 8006af0:	613b      	str	r3, [r7, #16]
 8006af2:	e009      	b.n	8006b08 <USB_DevInit+0x34>
  {
    USBx->DIEPTXF[i] = 0U;
 8006af4:	687a      	ldr	r2, [r7, #4]
 8006af6:	693b      	ldr	r3, [r7, #16]
 8006af8:	3340      	adds	r3, #64	; 0x40
 8006afa:	009b      	lsls	r3, r3, #2
 8006afc:	4413      	add	r3, r2
 8006afe:	2200      	movs	r2, #0
 8006b00:	605a      	str	r2, [r3, #4]
  for (i = 0U; i < 15U; i++)
 8006b02:	693b      	ldr	r3, [r7, #16]
 8006b04:	3301      	adds	r3, #1
 8006b06:	613b      	str	r3, [r7, #16]
 8006b08:	693b      	ldr	r3, [r7, #16]
 8006b0a:	2b0e      	cmp	r3, #14
 8006b0c:	d9f2      	bls.n	8006af4 <USB_DevInit+0x20>
  }

  /* VBUS Sensing setup */
  if (cfg.vbus_sensing_enable == 0U)
 8006b0e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006b10:	2b00      	cmp	r3, #0
 8006b12:	d11c      	bne.n	8006b4e <USB_DevInit+0x7a>
  {
    USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006b14:	68fb      	ldr	r3, [r7, #12]
 8006b16:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006b1a:	685b      	ldr	r3, [r3, #4]
 8006b1c:	68fa      	ldr	r2, [r7, #12]
 8006b1e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006b22:	f043 0302 	orr.w	r3, r3, #2
 8006b26:	6053      	str	r3, [r2, #4]

    /* Deactivate VBUS Sensing B */
    USBx->GCCFG &= ~USB_OTG_GCCFG_VBDEN;
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b2c:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	639a      	str	r2, [r3, #56]	; 0x38

    /* B-peripheral session valid override enable */
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOEN;
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	681b      	ldr	r3, [r3, #0]
 8006b38:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	601a      	str	r2, [r3, #0]
    USBx->GOTGCTL |= USB_OTG_GOTGCTL_BVALOVAL;
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	601a      	str	r2, [r3, #0]
 8006b4c:	e005      	b.n	8006b5a <USB_DevInit+0x86>
  }
  else
  {
    /* Enable HW VBUS sensing */
    USBx->GCCFG |= USB_OTG_GCCFG_VBDEN;
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b52:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8006b56:	687b      	ldr	r3, [r7, #4]
 8006b58:	639a      	str	r2, [r3, #56]	; 0x38
  }

  /* Restart the Phy Clock */
  USBx_PCGCCTL = 0U;
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8006b60:	461a      	mov	r2, r3
 8006b62:	2300      	movs	r3, #0
 8006b64:	6013      	str	r3, [r2, #0]

  /* Device mode configuration */
  USBx_DEVICE->DCFG |= DCFG_FRAME_INTERVAL_80;
 8006b66:	68fb      	ldr	r3, [r7, #12]
 8006b68:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006b6c:	4619      	mov	r1, r3
 8006b6e:	68fb      	ldr	r3, [r7, #12]
 8006b70:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006b74:	461a      	mov	r2, r3
 8006b76:	680b      	ldr	r3, [r1, #0]
 8006b78:	6013      	str	r3, [r2, #0]

  /* Set Core speed to Full speed mode */
  (void)USB_SetDevSpeed(USBx, USB_OTG_SPEED_FULL);
 8006b7a:	2103      	movs	r1, #3
 8006b7c:	6878      	ldr	r0, [r7, #4]
 8006b7e:	f000 f959 	bl	8006e34 <USB_SetDevSpeed>

  /* Flush the FIFOs */
  if (USB_FlushTxFifo(USBx, 0x10U) != HAL_OK) /* all Tx FIFOs */
 8006b82:	2110      	movs	r1, #16
 8006b84:	6878      	ldr	r0, [r7, #4]
 8006b86:	f000 f8f1 	bl	8006d6c <USB_FlushTxFifo>
 8006b8a:	4603      	mov	r3, r0
 8006b8c:	2b00      	cmp	r3, #0
 8006b8e:	d001      	beq.n	8006b94 <USB_DevInit+0xc0>
  {
    ret = HAL_ERROR;
 8006b90:	2301      	movs	r3, #1
 8006b92:	75fb      	strb	r3, [r7, #23]
  }

  if (USB_FlushRxFifo(USBx) != HAL_OK)
 8006b94:	6878      	ldr	r0, [r7, #4]
 8006b96:	f000 f91d 	bl	8006dd4 <USB_FlushRxFifo>
 8006b9a:	4603      	mov	r3, r0
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d001      	beq.n	8006ba4 <USB_DevInit+0xd0>
  {
    ret = HAL_ERROR;
 8006ba0:	2301      	movs	r3, #1
 8006ba2:	75fb      	strb	r3, [r7, #23]
  }

  /* Clear all pending Device Interrupts */
  USBx_DEVICE->DIEPMSK = 0U;
 8006ba4:	68fb      	ldr	r3, [r7, #12]
 8006ba6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006baa:	461a      	mov	r2, r3
 8006bac:	2300      	movs	r3, #0
 8006bae:	6113      	str	r3, [r2, #16]
  USBx_DEVICE->DOEPMSK = 0U;
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006bb6:	461a      	mov	r2, r3
 8006bb8:	2300      	movs	r3, #0
 8006bba:	6153      	str	r3, [r2, #20]
  USBx_DEVICE->DAINTMSK = 0U;
 8006bbc:	68fb      	ldr	r3, [r7, #12]
 8006bbe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006bc2:	461a      	mov	r2, r3
 8006bc4:	2300      	movs	r3, #0
 8006bc6:	61d3      	str	r3, [r2, #28]

  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006bc8:	2300      	movs	r3, #0
 8006bca:	613b      	str	r3, [r7, #16]
 8006bcc:	e043      	b.n	8006c56 <USB_DevInit+0x182>
  {
    if ((USBx_INEP(i)->DIEPCTL & USB_OTG_DIEPCTL_EPENA) == USB_OTG_DIEPCTL_EPENA)
 8006bce:	693b      	ldr	r3, [r7, #16]
 8006bd0:	015a      	lsls	r2, r3, #5
 8006bd2:	68fb      	ldr	r3, [r7, #12]
 8006bd4:	4413      	add	r3, r2
 8006bd6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8006be0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8006be4:	d118      	bne.n	8006c18 <USB_DevInit+0x144>
    {
      if (i == 0U)
 8006be6:	693b      	ldr	r3, [r7, #16]
 8006be8:	2b00      	cmp	r3, #0
 8006bea:	d10a      	bne.n	8006c02 <USB_DevInit+0x12e>
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_SNAK;
 8006bec:	693b      	ldr	r3, [r7, #16]
 8006bee:	015a      	lsls	r2, r3, #5
 8006bf0:	68fb      	ldr	r3, [r7, #12]
 8006bf2:	4413      	add	r3, r2
 8006bf4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006bf8:	461a      	mov	r2, r3
 8006bfa:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8006bfe:	6013      	str	r3, [r2, #0]
 8006c00:	e013      	b.n	8006c2a <USB_DevInit+0x156>
      }
      else
      {
        USBx_INEP(i)->DIEPCTL = USB_OTG_DIEPCTL_EPDIS | USB_OTG_DIEPCTL_SNAK;
 8006c02:	693b      	ldr	r3, [r7, #16]
 8006c04:	015a      	lsls	r2, r3, #5
 8006c06:	68fb      	ldr	r3, [r7, #12]
 8006c08:	4413      	add	r3, r2
 8006c0a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006c0e:	461a      	mov	r2, r3
 8006c10:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8006c14:	6013      	str	r3, [r2, #0]
 8006c16:	e008      	b.n	8006c2a <USB_DevInit+0x156>
      }
    }
    else
    {
      USBx_INEP(i)->DIEPCTL = 0U;
 8006c18:	693b      	ldr	r3, [r7, #16]
 8006c1a:	015a      	lsls	r2, r3, #5
 8006c1c:	68fb      	ldr	r3, [r7, #12]
 8006c1e:	4413      	add	r3, r2
 8006c20:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006c24:	461a      	mov	r2, r3
 8006c26:	2300      	movs	r3, #0
 8006c28:	6013      	str	r3, [r2, #0]
    }

    USBx_INEP(i)->DIEPTSIZ = 0U;
 8006c2a:	693b      	ldr	r3, [r7, #16]
 8006c2c:	015a      	lsls	r2, r3, #5
 8006c2e:	68fb      	ldr	r3, [r7, #12]
 8006c30:	4413      	add	r3, r2
 8006c32:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006c36:	461a      	mov	r2, r3
 8006c38:	2300      	movs	r3, #0
 8006c3a:	6113      	str	r3, [r2, #16]
    USBx_INEP(i)->DIEPINT  = 0xFB7FU;
 8006c3c:	693b      	ldr	r3, [r7, #16]
 8006c3e:	015a      	lsls	r2, r3, #5
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	4413      	add	r3, r2
 8006c44:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8006c48:	461a      	mov	r2, r3
 8006c4a:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8006c4e:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c50:	693b      	ldr	r3, [r7, #16]
 8006c52:	3301      	adds	r3, #1
 8006c54:	613b      	str	r3, [r7, #16]
 8006c56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006c58:	693a      	ldr	r2, [r7, #16]
 8006c5a:	429a      	cmp	r2, r3
 8006c5c:	d3b7      	bcc.n	8006bce <USB_DevInit+0xfa>
  }

  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006c5e:	2300      	movs	r3, #0
 8006c60:	613b      	str	r3, [r7, #16]
 8006c62:	e043      	b.n	8006cec <USB_DevInit+0x218>
  {
    if ((USBx_OUTEP(i)->DOEPCTL & USB_OTG_DOEPCTL_EPENA) == USB_OTG_DOEPCTL_EPENA)
 8006c64:	693b      	ldr	r3, [r7, #16]
 8006c66:	015a      	lsls	r2, r3, #5
 8006c68:	68fb      	ldr	r3, [r7, #12]
 8006c6a:	4413      	add	r3, r2
 8006c6c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006c70:	681b      	ldr	r3, [r3, #0]
 8006c72:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8006c76:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8006c7a:	d118      	bne.n	8006cae <USB_DevInit+0x1da>
    {
      if (i == 0U)
 8006c7c:	693b      	ldr	r3, [r7, #16]
 8006c7e:	2b00      	cmp	r3, #0
 8006c80:	d10a      	bne.n	8006c98 <USB_DevInit+0x1c4>
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_SNAK;
 8006c82:	693b      	ldr	r3, [r7, #16]
 8006c84:	015a      	lsls	r2, r3, #5
 8006c86:	68fb      	ldr	r3, [r7, #12]
 8006c88:	4413      	add	r3, r2
 8006c8a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006c8e:	461a      	mov	r2, r3
 8006c90:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8006c94:	6013      	str	r3, [r2, #0]
 8006c96:	e013      	b.n	8006cc0 <USB_DevInit+0x1ec>
      }
      else
      {
        USBx_OUTEP(i)->DOEPCTL = USB_OTG_DOEPCTL_EPDIS | USB_OTG_DOEPCTL_SNAK;
 8006c98:	693b      	ldr	r3, [r7, #16]
 8006c9a:	015a      	lsls	r2, r3, #5
 8006c9c:	68fb      	ldr	r3, [r7, #12]
 8006c9e:	4413      	add	r3, r2
 8006ca0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006ca4:	461a      	mov	r2, r3
 8006ca6:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8006caa:	6013      	str	r3, [r2, #0]
 8006cac:	e008      	b.n	8006cc0 <USB_DevInit+0x1ec>
      }
    }
    else
    {
      USBx_OUTEP(i)->DOEPCTL = 0U;
 8006cae:	693b      	ldr	r3, [r7, #16]
 8006cb0:	015a      	lsls	r2, r3, #5
 8006cb2:	68fb      	ldr	r3, [r7, #12]
 8006cb4:	4413      	add	r3, r2
 8006cb6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006cba:	461a      	mov	r2, r3
 8006cbc:	2300      	movs	r3, #0
 8006cbe:	6013      	str	r3, [r2, #0]
    }

    USBx_OUTEP(i)->DOEPTSIZ = 0U;
 8006cc0:	693b      	ldr	r3, [r7, #16]
 8006cc2:	015a      	lsls	r2, r3, #5
 8006cc4:	68fb      	ldr	r3, [r7, #12]
 8006cc6:	4413      	add	r3, r2
 8006cc8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006ccc:	461a      	mov	r2, r3
 8006cce:	2300      	movs	r3, #0
 8006cd0:	6113      	str	r3, [r2, #16]
    USBx_OUTEP(i)->DOEPINT  = 0xFB7FU;
 8006cd2:	693b      	ldr	r3, [r7, #16]
 8006cd4:	015a      	lsls	r2, r3, #5
 8006cd6:	68fb      	ldr	r3, [r7, #12]
 8006cd8:	4413      	add	r3, r2
 8006cda:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8006cde:	461a      	mov	r2, r3
 8006ce0:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8006ce4:	6093      	str	r3, [r2, #8]
  for (i = 0U; i < cfg.dev_endpoints; i++)
 8006ce6:	693b      	ldr	r3, [r7, #16]
 8006ce8:	3301      	adds	r3, #1
 8006cea:	613b      	str	r3, [r7, #16]
 8006cec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006cee:	693a      	ldr	r2, [r7, #16]
 8006cf0:	429a      	cmp	r2, r3
 8006cf2:	d3b7      	bcc.n	8006c64 <USB_DevInit+0x190>
  }

  USBx_DEVICE->DIEPMSK &= ~(USB_OTG_DIEPMSK_TXFURM);
 8006cf4:	68fb      	ldr	r3, [r7, #12]
 8006cf6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006cfa:	691b      	ldr	r3, [r3, #16]
 8006cfc:	68fa      	ldr	r2, [r7, #12]
 8006cfe:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006d02:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006d06:	6113      	str	r3, [r2, #16]

  /* Disable all interrupts. */
  USBx->GINTMSK = 0U;
 8006d08:	687b      	ldr	r3, [r7, #4]
 8006d0a:	2200      	movs	r2, #0
 8006d0c:	619a      	str	r2, [r3, #24]

  /* Clear any pending interrupts */
  USBx->GINTSTS = 0xBFFFFFFFU;
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 8006d14:	615a      	str	r2, [r3, #20]

  /* Enable the common interrupts */
  USBx->GINTMSK |= USB_OTG_GINTMSK_RXFLVLM;
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	699b      	ldr	r3, [r3, #24]
 8006d1a:	f043 0210 	orr.w	r2, r3, #16
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	619a      	str	r2, [r3, #24]

  /* Enable interrupts matching to the Device mode ONLY */
  USBx->GINTMSK |= USB_OTG_GINTMSK_USBSUSPM | USB_OTG_GINTMSK_USBRST |
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	699a      	ldr	r2, [r3, #24]
 8006d26:	4b10      	ldr	r3, [pc, #64]	; (8006d68 <USB_DevInit+0x294>)
 8006d28:	4313      	orrs	r3, r2
 8006d2a:	687a      	ldr	r2, [r7, #4]
 8006d2c:	6193      	str	r3, [r2, #24]
                   USB_OTG_GINTMSK_ENUMDNEM | USB_OTG_GINTMSK_IEPINT |
                   USB_OTG_GINTMSK_OEPINT   | USB_OTG_GINTMSK_IISOIXFRM |
                   USB_OTG_GINTMSK_PXFRM_IISOOXFRM | USB_OTG_GINTMSK_WUIM;

  if (cfg.Sof_enable != 0U)
 8006d2e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d005      	beq.n	8006d40 <USB_DevInit+0x26c>
  {
    USBx->GINTMSK |= USB_OTG_GINTMSK_SOFM;
 8006d34:	687b      	ldr	r3, [r7, #4]
 8006d36:	699b      	ldr	r3, [r3, #24]
 8006d38:	f043 0208 	orr.w	r2, r3, #8
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	619a      	str	r2, [r3, #24]
  }

  if (cfg.vbus_sensing_enable == 1U)
 8006d40:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8006d42:	2b01      	cmp	r3, #1
 8006d44:	d107      	bne.n	8006d56 <USB_DevInit+0x282>
  {
    USBx->GINTMSK |= (USB_OTG_GINTMSK_SRQIM | USB_OTG_GINTMSK_OTGINT);
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	699b      	ldr	r3, [r3, #24]
 8006d4a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8006d4e:	f043 0304 	orr.w	r3, r3, #4
 8006d52:	687a      	ldr	r2, [r7, #4]
 8006d54:	6193      	str	r3, [r2, #24]
  }

  return ret;
 8006d56:	7dfb      	ldrb	r3, [r7, #23]
}
 8006d58:	4618      	mov	r0, r3
 8006d5a:	3718      	adds	r7, #24
 8006d5c:	46bd      	mov	sp, r7
 8006d5e:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8006d62:	b004      	add	sp, #16
 8006d64:	4770      	bx	lr
 8006d66:	bf00      	nop
 8006d68:	803c3800 	.word	0x803c3800

08006d6c <USB_FlushTxFifo>:
  *         This parameter can be a value from 1 to 15
            15 means Flush all Tx FIFOs
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushTxFifo(USB_OTG_GlobalTypeDef *USBx, uint32_t num)
{
 8006d6c:	b480      	push	{r7}
 8006d6e:	b085      	sub	sp, #20
 8006d70:	af00      	add	r7, sp, #0
 8006d72:	6078      	str	r0, [r7, #4]
 8006d74:	6039      	str	r1, [r7, #0]
  __IO uint32_t count = 0U;
 8006d76:	2300      	movs	r3, #0
 8006d78:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	3301      	adds	r3, #1
 8006d7e:	60fb      	str	r3, [r7, #12]

    if (count > 200000U)
 8006d80:	68fb      	ldr	r3, [r7, #12]
 8006d82:	4a13      	ldr	r2, [pc, #76]	; (8006dd0 <USB_FlushTxFifo+0x64>)
 8006d84:	4293      	cmp	r3, r2
 8006d86:	d901      	bls.n	8006d8c <USB_FlushTxFifo+0x20>
    {
      return HAL_TIMEOUT;
 8006d88:	2303      	movs	r3, #3
 8006d8a:	e01b      	b.n	8006dc4 <USB_FlushTxFifo+0x58>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	691b      	ldr	r3, [r3, #16]
 8006d90:	2b00      	cmp	r3, #0
 8006d92:	daf2      	bge.n	8006d7a <USB_FlushTxFifo+0xe>

  /* Flush TX Fifo */
  count = 0U;
 8006d94:	2300      	movs	r3, #0
 8006d96:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL = (USB_OTG_GRSTCTL_TXFFLSH | (num << 6));
 8006d98:	683b      	ldr	r3, [r7, #0]
 8006d9a:	019b      	lsls	r3, r3, #6
 8006d9c:	f043 0220 	orr.w	r2, r3, #32
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	3301      	adds	r3, #1
 8006da8:	60fb      	str	r3, [r7, #12]

    if (count > 200000U)
 8006daa:	68fb      	ldr	r3, [r7, #12]
 8006dac:	4a08      	ldr	r2, [pc, #32]	; (8006dd0 <USB_FlushTxFifo+0x64>)
 8006dae:	4293      	cmp	r3, r2
 8006db0:	d901      	bls.n	8006db6 <USB_FlushTxFifo+0x4a>
    {
      return HAL_TIMEOUT;
 8006db2:	2303      	movs	r3, #3
 8006db4:	e006      	b.n	8006dc4 <USB_FlushTxFifo+0x58>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_TXFFLSH) == USB_OTG_GRSTCTL_TXFFLSH);
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	691b      	ldr	r3, [r3, #16]
 8006dba:	f003 0320 	and.w	r3, r3, #32
 8006dbe:	2b20      	cmp	r3, #32
 8006dc0:	d0f0      	beq.n	8006da4 <USB_FlushTxFifo+0x38>

  return HAL_OK;
 8006dc2:	2300      	movs	r3, #0
}
 8006dc4:	4618      	mov	r0, r3
 8006dc6:	3714      	adds	r7, #20
 8006dc8:	46bd      	mov	sp, r7
 8006dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dce:	4770      	bx	lr
 8006dd0:	00030d40 	.word	0x00030d40

08006dd4 <USB_FlushRxFifo>:
  * @brief  USB_FlushRxFifo  Flush Rx FIFO
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef USB_FlushRxFifo(USB_OTG_GlobalTypeDef *USBx)
{
 8006dd4:	b480      	push	{r7}
 8006dd6:	b085      	sub	sp, #20
 8006dd8:	af00      	add	r7, sp, #0
 8006dda:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 8006ddc:	2300      	movs	r3, #0
 8006dde:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8006de0:	68fb      	ldr	r3, [r7, #12]
 8006de2:	3301      	adds	r3, #1
 8006de4:	60fb      	str	r3, [r7, #12]

    if (count > 200000U)
 8006de6:	68fb      	ldr	r3, [r7, #12]
 8006de8:	4a11      	ldr	r2, [pc, #68]	; (8006e30 <USB_FlushRxFifo+0x5c>)
 8006dea:	4293      	cmp	r3, r2
 8006dec:	d901      	bls.n	8006df2 <USB_FlushRxFifo+0x1e>
    {
      return HAL_TIMEOUT;
 8006dee:	2303      	movs	r3, #3
 8006df0:	e018      	b.n	8006e24 <USB_FlushRxFifo+0x50>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	691b      	ldr	r3, [r3, #16]
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	daf2      	bge.n	8006de0 <USB_FlushRxFifo+0xc>

  /* Flush RX Fifo */
  count = 0U;
 8006dfa:	2300      	movs	r3, #0
 8006dfc:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL = USB_OTG_GRSTCTL_RXFFLSH;
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	2210      	movs	r2, #16
 8006e02:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	3301      	adds	r3, #1
 8006e08:	60fb      	str	r3, [r7, #12]

    if (count > 200000U)
 8006e0a:	68fb      	ldr	r3, [r7, #12]
 8006e0c:	4a08      	ldr	r2, [pc, #32]	; (8006e30 <USB_FlushRxFifo+0x5c>)
 8006e0e:	4293      	cmp	r3, r2
 8006e10:	d901      	bls.n	8006e16 <USB_FlushRxFifo+0x42>
    {
      return HAL_TIMEOUT;
 8006e12:	2303      	movs	r3, #3
 8006e14:	e006      	b.n	8006e24 <USB_FlushRxFifo+0x50>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_RXFFLSH) == USB_OTG_GRSTCTL_RXFFLSH);
 8006e16:	687b      	ldr	r3, [r7, #4]
 8006e18:	691b      	ldr	r3, [r3, #16]
 8006e1a:	f003 0310 	and.w	r3, r3, #16
 8006e1e:	2b10      	cmp	r3, #16
 8006e20:	d0f0      	beq.n	8006e04 <USB_FlushRxFifo+0x30>

  return HAL_OK;
 8006e22:	2300      	movs	r3, #0
}
 8006e24:	4618      	mov	r0, r3
 8006e26:	3714      	adds	r7, #20
 8006e28:	46bd      	mov	sp, r7
 8006e2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e2e:	4770      	bx	lr
 8006e30:	00030d40 	.word	0x00030d40

08006e34 <USB_SetDevSpeed>:
  *          This parameter can be one of these values:
  *            @arg USB_OTG_SPEED_FULL: Full speed mode
  * @retval  Hal status
  */
HAL_StatusTypeDef USB_SetDevSpeed(USB_OTG_GlobalTypeDef *USBx, uint8_t speed)
{
 8006e34:	b480      	push	{r7}
 8006e36:	b085      	sub	sp, #20
 8006e38:	af00      	add	r7, sp, #0
 8006e3a:	6078      	str	r0, [r7, #4]
 8006e3c:	460b      	mov	r3, r1
 8006e3e:	70fb      	strb	r3, [r7, #3]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	60fb      	str	r3, [r7, #12]

  USBx_DEVICE->DCFG |= speed;
 8006e44:	68fb      	ldr	r3, [r7, #12]
 8006e46:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006e4a:	681a      	ldr	r2, [r3, #0]
 8006e4c:	78fb      	ldrb	r3, [r7, #3]
 8006e4e:	68f9      	ldr	r1, [r7, #12]
 8006e50:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8006e54:	4313      	orrs	r3, r2
 8006e56:	600b      	str	r3, [r1, #0]
  return HAL_OK;
 8006e58:	2300      	movs	r3, #0
}
 8006e5a:	4618      	mov	r0, r3
 8006e5c:	3714      	adds	r7, #20
 8006e5e:	46bd      	mov	sp, r7
 8006e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e64:	4770      	bx	lr

08006e66 <USB_DevDisconnect>:
  * @brief  USB_DevDisconnect : Disconnect the USB device by disabling Rpu
  * @param  USBx  Selected device
  * @retval HAL status
  */
HAL_StatusTypeDef  USB_DevDisconnect(USB_OTG_GlobalTypeDef *USBx)
{
 8006e66:	b480      	push	{r7}
 8006e68:	b085      	sub	sp, #20
 8006e6a:	af00      	add	r7, sp, #0
 8006e6c:	6078      	str	r0, [r7, #4]
  uint32_t USBx_BASE = (uint32_t)USBx;
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	60fb      	str	r3, [r7, #12]

  /* In case phy is stopped, ensure to ungate and restore the phy CLK */
  USBx_PCGCCTL &= ~(USB_OTG_PCGCCTL_STOPCLK | USB_OTG_PCGCCTL_GATECLK);
 8006e72:	68fb      	ldr	r3, [r7, #12]
 8006e74:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8006e78:	681b      	ldr	r3, [r3, #0]
 8006e7a:	68fa      	ldr	r2, [r7, #12]
 8006e7c:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 8006e80:	f023 0303 	bic.w	r3, r3, #3
 8006e84:	6013      	str	r3, [r2, #0]

  USBx_DEVICE->DCTL |= USB_OTG_DCTL_SDIS;
 8006e86:	68fb      	ldr	r3, [r7, #12]
 8006e88:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8006e8c:	685b      	ldr	r3, [r3, #4]
 8006e8e:	68fa      	ldr	r2, [r7, #12]
 8006e90:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8006e94:	f043 0302 	orr.w	r3, r3, #2
 8006e98:	6053      	str	r3, [r2, #4]

  return HAL_OK;
 8006e9a:	2300      	movs	r3, #0
}
 8006e9c:	4618      	mov	r0, r3
 8006e9e:	3714      	adds	r7, #20
 8006ea0:	46bd      	mov	sp, r7
 8006ea2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ea6:	4770      	bx	lr

08006ea8 <USB_GetMode>:
  *          This parameter can be one of these values:
  *           0 : Host
  *           1 : Device
  */
uint32_t USB_GetMode(USB_OTG_GlobalTypeDef *USBx)
{
 8006ea8:	b480      	push	{r7}
 8006eaa:	b083      	sub	sp, #12
 8006eac:	af00      	add	r7, sp, #0
 8006eae:	6078      	str	r0, [r7, #4]
  return ((USBx->GINTSTS) & 0x1U);
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	695b      	ldr	r3, [r3, #20]
 8006eb4:	f003 0301 	and.w	r3, r3, #1
}
 8006eb8:	4618      	mov	r0, r3
 8006eba:	370c      	adds	r7, #12
 8006ebc:	46bd      	mov	sp, r7
 8006ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ec2:	4770      	bx	lr

08006ec4 <USB_CoreReset>:
  * @brief  Reset the USB Core (needed after USB clock settings change)
  * @param  USBx  Selected device
  * @retval HAL status
  */
static HAL_StatusTypeDef USB_CoreReset(USB_OTG_GlobalTypeDef *USBx)
{
 8006ec4:	b480      	push	{r7}
 8006ec6:	b085      	sub	sp, #20
 8006ec8:	af00      	add	r7, sp, #0
 8006eca:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 8006ecc:	2300      	movs	r3, #0
 8006ece:	60fb      	str	r3, [r7, #12]

  /* Wait for AHB master IDLE state. */
  do
  {
    count++;
 8006ed0:	68fb      	ldr	r3, [r7, #12]
 8006ed2:	3301      	adds	r3, #1
 8006ed4:	60fb      	str	r3, [r7, #12]

    if (count > 200000U)
 8006ed6:	68fb      	ldr	r3, [r7, #12]
 8006ed8:	4a13      	ldr	r2, [pc, #76]	; (8006f28 <USB_CoreReset+0x64>)
 8006eda:	4293      	cmp	r3, r2
 8006edc:	d901      	bls.n	8006ee2 <USB_CoreReset+0x1e>
    {
      return HAL_TIMEOUT;
 8006ede:	2303      	movs	r3, #3
 8006ee0:	e01b      	b.n	8006f1a <USB_CoreReset+0x56>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_AHBIDL) == 0U);
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	691b      	ldr	r3, [r3, #16]
 8006ee6:	2b00      	cmp	r3, #0
 8006ee8:	daf2      	bge.n	8006ed0 <USB_CoreReset+0xc>

  /* Core Soft Reset */
  count = 0U;
 8006eea:	2300      	movs	r3, #0
 8006eec:	60fb      	str	r3, [r7, #12]
  USBx->GRSTCTL |= USB_OTG_GRSTCTL_CSRST;
 8006eee:	687b      	ldr	r3, [r7, #4]
 8006ef0:	691b      	ldr	r3, [r3, #16]
 8006ef2:	f043 0201 	orr.w	r2, r3, #1
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	611a      	str	r2, [r3, #16]

  do
  {
    count++;
 8006efa:	68fb      	ldr	r3, [r7, #12]
 8006efc:	3301      	adds	r3, #1
 8006efe:	60fb      	str	r3, [r7, #12]

    if (count > 200000U)
 8006f00:	68fb      	ldr	r3, [r7, #12]
 8006f02:	4a09      	ldr	r2, [pc, #36]	; (8006f28 <USB_CoreReset+0x64>)
 8006f04:	4293      	cmp	r3, r2
 8006f06:	d901      	bls.n	8006f0c <USB_CoreReset+0x48>
    {
      return HAL_TIMEOUT;
 8006f08:	2303      	movs	r3, #3
 8006f0a:	e006      	b.n	8006f1a <USB_CoreReset+0x56>
    }
  } while ((USBx->GRSTCTL & USB_OTG_GRSTCTL_CSRST) == USB_OTG_GRSTCTL_CSRST);
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	691b      	ldr	r3, [r3, #16]
 8006f10:	f003 0301 	and.w	r3, r3, #1
 8006f14:	2b01      	cmp	r3, #1
 8006f16:	d0f0      	beq.n	8006efa <USB_CoreReset+0x36>

  return HAL_OK;
 8006f18:	2300      	movs	r3, #0
}
 8006f1a:	4618      	mov	r0, r3
 8006f1c:	3714      	adds	r7, #20
 8006f1e:	46bd      	mov	sp, r7
 8006f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f24:	4770      	bx	lr
 8006f26:	bf00      	nop
 8006f28:	00030d40 	.word	0x00030d40

08006f2c <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0>:
 8006f2c:	b510      	push	{r4, lr}
 8006f2e:	4694      	mov	ip, r2
 8006f30:	4a1d      	ldr	r2, [pc, #116]	; (8006fa8 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x7c>)
 8006f32:	b082      	sub	sp, #8
 8006f34:	6812      	ldr	r2, [r2, #0]
 8006f36:	9201      	str	r2, [sp, #4]
 8006f38:	f04f 0200 	mov.w	r2, #0
 8006f3c:	b320      	cbz	r0, 8006f88 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x5c>
 8006f3e:	6804      	ldr	r4, [r0, #0]
 8006f40:	2c08      	cmp	r4, #8
 8006f42:	d81a      	bhi.n	8006f7a <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x4e>
 8006f44:	b17c      	cbz	r4, 8006f66 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x3a>
 8006f46:	1d02      	adds	r2, r0, #4
 8006f48:	eb01 0c84 	add.w	ip, r1, r4, lsl #2
 8006f4c:	2300      	movs	r3, #0
 8006f4e:	e002      	b.n	8006f56 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x2a>
 8006f50:	6804      	ldr	r4, [r0, #0]
 8006f52:	429c      	cmp	r4, r3
 8006f54:	d91f      	bls.n	8006f96 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x6a>
 8006f56:	f852 4b04 	ldr.w	r4, [r2], #4
 8006f5a:	f841 4b04 	str.w	r4, [r1], #4
 8006f5e:	4561      	cmp	r1, ip
 8006f60:	f103 0301 	add.w	r3, r3, #1
 8006f64:	d1f4      	bne.n	8006f50 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x24>
 8006f66:	2000      	movs	r0, #0
 8006f68:	4b0f      	ldr	r3, [pc, #60]	; (8006fa8 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x7c>)
 8006f6a:	681a      	ldr	r2, [r3, #0]
 8006f6c:	9b01      	ldr	r3, [sp, #4]
 8006f6e:	405a      	eors	r2, r3
 8006f70:	f04f 0300 	mov.w	r3, #0
 8006f74:	d115      	bne.n	8006fa2 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x76>
 8006f76:	b002      	add	sp, #8
 8006f78:	bd10      	pop	{r4, pc}
 8006f7a:	490c      	ldr	r1, [pc, #48]	; (8006fac <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x80>)
 8006f7c:	461a      	mov	r2, r3
 8006f7e:	4660      	mov	r0, ip
 8006f80:	f007 fb0e 	bl	800e5a0 <_ZN6tflite13ErrorReporter6ReportEPKcz>
 8006f84:	2001      	movs	r0, #1
 8006f86:	e7ef      	b.n	8006f68 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x3c>
 8006f88:	4909      	ldr	r1, [pc, #36]	; (8006fb0 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x84>)
 8006f8a:	461a      	mov	r2, r3
 8006f8c:	4660      	mov	r0, ip
 8006f8e:	f007 fb07 	bl	800e5a0 <_ZN6tflite13ErrorReporter6ReportEPKcz>
 8006f92:	2001      	movs	r0, #1
 8006f94:	e7e8      	b.n	8006f68 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x3c>
 8006f96:	4b07      	ldr	r3, [pc, #28]	; (8006fb4 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x88>)
 8006f98:	4a07      	ldr	r2, [pc, #28]	; (8006fb8 <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x8c>)
 8006f9a:	4808      	ldr	r0, [pc, #32]	; (8006fbc <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0+0x90>)
 8006f9c:	21b0      	movs	r1, #176	; 0xb0
 8006f9e:	f015 fd0f 	bl	801c9c0 <__assert_func>
 8006fa2:	f016 fccb 	bl	801d93c <__stack_chk_fail>
 8006fa6:	bf00      	nop
 8006fa8:	20011294 	.word	0x20011294
 8006fac:	080246f0 	.word	0x080246f0
 8006fb0:	080246c0 	.word	0x080246c0
 8006fb4:	08024734 	.word	0x08024734
 8006fb8:	08024740 	.word	0x08024740
 8006fbc:	08024804 	.word	0x08024804

08006fc0 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE>:
 8006fc0:	b500      	push	{lr}
 8006fc2:	4613      	mov	r3, r2
 8006fc4:	4a3a      	ldr	r2, [pc, #232]	; (80070b0 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0xf0>)
 8006fc6:	b083      	sub	sp, #12
 8006fc8:	468c      	mov	ip, r1
 8006fca:	6812      	ldr	r2, [r2, #0]
 8006fcc:	9201      	str	r2, [sp, #4]
 8006fce:	f04f 0200 	mov.w	r2, #0
 8006fd2:	2812      	cmp	r0, #18
 8006fd4:	d862      	bhi.n	800709c <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0xdc>
 8006fd6:	e8df f000 	tbb	[pc, r0]
 8006fda:	575b      	.short	0x575b
 8006fdc:	474b4f53 	.word	0x474b4f53
 8006fe0:	373b3f43 	.word	0x373b3f43
 8006fe4:	272b2f33 	.word	0x272b2f33
 8006fe8:	171b1f23 	.word	0x171b1f23
 8006fec:	0a          	.byte	0x0a
 8006fed:	00          	.byte	0x00
 8006fee:	2313      	movs	r3, #19
 8006ff0:	700b      	strb	r3, [r1, #0]
 8006ff2:	2000      	movs	r0, #0
 8006ff4:	4b2e      	ldr	r3, [pc, #184]	; (80070b0 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0xf0>)
 8006ff6:	681a      	ldr	r2, [r3, #0]
 8006ff8:	9b01      	ldr	r3, [sp, #4]
 8006ffa:	405a      	eors	r2, r3
 8006ffc:	f04f 0300 	mov.w	r3, #0
 8007000:	d14a      	bne.n	8007098 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0xd8>
 8007002:	b003      	add	sp, #12
 8007004:	f85d fb04 	ldr.w	pc, [sp], #4
 8007008:	2312      	movs	r3, #18
 800700a:	700b      	strb	r3, [r1, #0]
 800700c:	2000      	movs	r0, #0
 800700e:	e7f1      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007010:	2311      	movs	r3, #17
 8007012:	700b      	strb	r3, [r1, #0]
 8007014:	2000      	movs	r0, #0
 8007016:	e7ed      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007018:	2310      	movs	r3, #16
 800701a:	700b      	strb	r3, [r1, #0]
 800701c:	2000      	movs	r0, #0
 800701e:	e7e9      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007020:	230f      	movs	r3, #15
 8007022:	700b      	strb	r3, [r1, #0]
 8007024:	2000      	movs	r0, #0
 8007026:	e7e5      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007028:	230e      	movs	r3, #14
 800702a:	700b      	strb	r3, [r1, #0]
 800702c:	2000      	movs	r0, #0
 800702e:	e7e1      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007030:	230d      	movs	r3, #13
 8007032:	700b      	strb	r3, [r1, #0]
 8007034:	2000      	movs	r0, #0
 8007036:	e7dd      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007038:	230c      	movs	r3, #12
 800703a:	700b      	strb	r3, [r1, #0]
 800703c:	2000      	movs	r0, #0
 800703e:	e7d9      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007040:	230b      	movs	r3, #11
 8007042:	700b      	strb	r3, [r1, #0]
 8007044:	2000      	movs	r0, #0
 8007046:	e7d5      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007048:	2309      	movs	r3, #9
 800704a:	700b      	strb	r3, [r1, #0]
 800704c:	2000      	movs	r0, #0
 800704e:	e7d1      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007050:	2308      	movs	r3, #8
 8007052:	700b      	strb	r3, [r1, #0]
 8007054:	2000      	movs	r0, #0
 8007056:	e7cd      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007058:	2307      	movs	r3, #7
 800705a:	700b      	strb	r3, [r1, #0]
 800705c:	2000      	movs	r0, #0
 800705e:	e7c9      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007060:	2306      	movs	r3, #6
 8007062:	700b      	strb	r3, [r1, #0]
 8007064:	2000      	movs	r0, #0
 8007066:	e7c5      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007068:	2305      	movs	r3, #5
 800706a:	700b      	strb	r3, [r1, #0]
 800706c:	2000      	movs	r0, #0
 800706e:	e7c1      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007070:	2304      	movs	r3, #4
 8007072:	700b      	strb	r3, [r1, #0]
 8007074:	2000      	movs	r0, #0
 8007076:	e7bd      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007078:	2303      	movs	r3, #3
 800707a:	700b      	strb	r3, [r1, #0]
 800707c:	2000      	movs	r0, #0
 800707e:	e7b9      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007080:	2302      	movs	r3, #2
 8007082:	700b      	strb	r3, [r1, #0]
 8007084:	2000      	movs	r0, #0
 8007086:	e7b5      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007088:	230a      	movs	r3, #10
 800708a:	700b      	strb	r3, [r1, #0]
 800708c:	2000      	movs	r0, #0
 800708e:	e7b1      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007090:	2301      	movs	r3, #1
 8007092:	700b      	strb	r3, [r1, #0]
 8007094:	2000      	movs	r0, #0
 8007096:	e7ad      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 8007098:	f016 fc50 	bl	801d93c <__stack_chk_fail>
 800709c:	2200      	movs	r2, #0
 800709e:	f88c 2000 	strb.w	r2, [ip]
 80070a2:	4904      	ldr	r1, [pc, #16]	; (80070b4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0xf4>)
 80070a4:	4602      	mov	r2, r0
 80070a6:	4618      	mov	r0, r3
 80070a8:	f007 fa7a 	bl	800e5a0 <_ZN6tflite13ErrorReporter6ReportEPKcz>
 80070ac:	2001      	movs	r0, #1
 80070ae:	e7a1      	b.n	8006ff4 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE+0x34>
 80070b0:	20011294 	.word	0x20011294
 80070b4:	080248a8 	.word	0x080248a8

080070b8 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 80070b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80070bc:	4698      	mov	r8, r3
 80070be:	4b56      	ldr	r3, [pc, #344]	; (8007218 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x160>)
 80070c0:	b083      	sub	sp, #12
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	9301      	str	r3, [sp, #4]
 80070c6:	f04f 0300 	mov.w	r3, #0
 80070ca:	2800      	cmp	r0, #0
 80070cc:	f000 80a1 	beq.w	8007212 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x15a>
 80070d0:	4689      	mov	r9, r1
 80070d2:	2900      	cmp	r1, #0
 80070d4:	f000 809d 	beq.w	8007212 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x15a>
 80070d8:	4616      	mov	r6, r2
 80070da:	2a00      	cmp	r2, #0
 80070dc:	f000 8099 	beq.w	8007212 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x15a>
 80070e0:	f1b8 0f00 	cmp.w	r8, #0
 80070e4:	f000 8095 	beq.w	8007212 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x15a>
 80070e8:	6813      	ldr	r3, [r2, #0]
 80070ea:	4607      	mov	r7, r0
 80070ec:	681b      	ldr	r3, [r3, #0]
 80070ee:	2204      	movs	r2, #4
 80070f0:	211c      	movs	r1, #28
 80070f2:	4630      	mov	r0, r6
 80070f4:	4798      	blx	r3
 80070f6:	683b      	ldr	r3, [r7, #0]
 80070f8:	1afb      	subs	r3, r7, r3
 80070fa:	2500      	movs	r5, #0
 80070fc:	881a      	ldrh	r2, [r3, #0]
 80070fe:	6185      	str	r5, [r0, #24]
 8007100:	2a0a      	cmp	r2, #10
 8007102:	e9c0 5500 	strd	r5, r5, [r0]
 8007106:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800710a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 800710e:	4604      	mov	r4, r0
 8007110:	d941      	bls.n	8007196 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xde>
 8007112:	8959      	ldrh	r1, [r3, #10]
 8007114:	2900      	cmp	r1, #0
 8007116:	d03e      	beq.n	8007196 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xde>
 8007118:	5c78      	ldrb	r0, [r7, r1]
 800711a:	2801      	cmp	r0, #1
 800711c:	d13b      	bne.n	8007196 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xde>
 800711e:	2a0c      	cmp	r2, #12
 8007120:	d939      	bls.n	8007196 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xde>
 8007122:	899b      	ldrh	r3, [r3, #12]
 8007124:	18f9      	adds	r1, r7, r3
 8007126:	2b00      	cmp	r3, #0
 8007128:	d035      	beq.n	8007196 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xde>
 800712a:	58fa      	ldr	r2, [r7, r3]
 800712c:	588b      	ldr	r3, [r1, r2]
 800712e:	440a      	add	r2, r1
 8007130:	1ad3      	subs	r3, r2, r3
 8007132:	881d      	ldrh	r5, [r3, #0]
 8007134:	2d04      	cmp	r5, #4
 8007136:	d956      	bls.n	80071e6 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x12e>
 8007138:	8899      	ldrh	r1, [r3, #4]
 800713a:	b129      	cbz	r1, 8007148 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x90>
 800713c:	5651      	ldrsb	r1, [r2, r1]
 800713e:	b119      	cbz	r1, 8007148 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x90>
 8007140:	2901      	cmp	r1, #1
 8007142:	bf14      	ite	ne
 8007144:	2000      	movne	r0, #0
 8007146:	2002      	moveq	r0, #2
 8007148:	2d06      	cmp	r5, #6
 800714a:	7020      	strb	r0, [r4, #0]
 800714c:	d90d      	bls.n	800716a <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb2>
 800714e:	88d9      	ldrh	r1, [r3, #6]
 8007150:	2900      	cmp	r1, #0
 8007152:	d14f      	bne.n	80071f4 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x13c>
 8007154:	2d08      	cmp	r5, #8
 8007156:	6061      	str	r1, [r4, #4]
 8007158:	d907      	bls.n	800716a <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb2>
 800715a:	8919      	ldrh	r1, [r3, #8]
 800715c:	2900      	cmp	r1, #0
 800715e:	d147      	bne.n	80071f0 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x138>
 8007160:	2d0a      	cmp	r5, #10
 8007162:	60a1      	str	r1, [r4, #8]
 8007164:	d901      	bls.n	800716a <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb2>
 8007166:	8959      	ldrh	r1, [r3, #10]
 8007168:	bb19      	cbnz	r1, 80071b2 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xfa>
 800716a:	2100      	movs	r1, #0
 800716c:	2d0c      	cmp	r5, #12
 800716e:	7321      	strb	r1, [r4, #12]
 8007170:	d926      	bls.n	80071c0 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x108>
 8007172:	8999      	ldrh	r1, [r3, #12]
 8007174:	2900      	cmp	r1, #0
 8007176:	d139      	bne.n	80071ec <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x134>
 8007178:	2101      	movs	r1, #1
 800717a:	2d0e      	cmp	r5, #14
 800717c:	6121      	str	r1, [r4, #16]
 800717e:	d921      	bls.n	80071c4 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x10c>
 8007180:	89d9      	ldrh	r1, [r3, #14]
 8007182:	2900      	cmp	r1, #0
 8007184:	d038      	beq.n	80071f8 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x140>
 8007186:	5851      	ldr	r1, [r2, r1]
 8007188:	6161      	str	r1, [r4, #20]
 800718a:	2d10      	cmp	r5, #16
 800718c:	d938      	bls.n	8007200 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x148>
 800718e:	8a18      	ldrh	r0, [r3, #16]
 8007190:	b1d8      	cbz	r0, 80071ca <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x112>
 8007192:	5610      	ldrsb	r0, [r2, r0]
 8007194:	e019      	b.n	80071ca <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x112>
 8007196:	f8c8 4000 	str.w	r4, [r8]
 800719a:	2500      	movs	r5, #0
 800719c:	4b1e      	ldr	r3, [pc, #120]	; (8007218 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x160>)
 800719e:	681a      	ldr	r2, [r3, #0]
 80071a0:	9b01      	ldr	r3, [sp, #4]
 80071a2:	405a      	eors	r2, r3
 80071a4:	f04f 0300 	mov.w	r3, #0
 80071a8:	d128      	bne.n	80071fc <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x144>
 80071aa:	4628      	mov	r0, r5
 80071ac:	b003      	add	sp, #12
 80071ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80071b2:	5c51      	ldrb	r1, [r2, r1]
 80071b4:	1e48      	subs	r0, r1, #1
 80071b6:	2804      	cmp	r0, #4
 80071b8:	d8d7      	bhi.n	800716a <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb2>
 80071ba:	2d0c      	cmp	r5, #12
 80071bc:	7321      	strb	r1, [r4, #12]
 80071be:	d8d8      	bhi.n	8007172 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xba>
 80071c0:	2301      	movs	r3, #1
 80071c2:	6123      	str	r3, [r4, #16]
 80071c4:	2301      	movs	r3, #1
 80071c6:	6163      	str	r3, [r4, #20]
 80071c8:	2000      	movs	r0, #0
 80071ca:	464a      	mov	r2, r9
 80071cc:	f104 0118 	add.w	r1, r4, #24
 80071d0:	f7ff fef6 	bl	8006fc0 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE>
 80071d4:	4605      	mov	r5, r0
 80071d6:	2800      	cmp	r0, #0
 80071d8:	d0dd      	beq.n	8007196 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xde>
 80071da:	6833      	ldr	r3, [r6, #0]
 80071dc:	4621      	mov	r1, r4
 80071de:	685b      	ldr	r3, [r3, #4]
 80071e0:	4630      	mov	r0, r6
 80071e2:	4798      	blx	r3
 80071e4:	e7da      	b.n	800719c <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xe4>
 80071e6:	2101      	movs	r1, #1
 80071e8:	7021      	strb	r1, [r4, #0]
 80071ea:	e7be      	b.n	800716a <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb2>
 80071ec:	5851      	ldr	r1, [r2, r1]
 80071ee:	e7c4      	b.n	800717a <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc2>
 80071f0:	5851      	ldr	r1, [r2, r1]
 80071f2:	e7b5      	b.n	8007160 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa8>
 80071f4:	5851      	ldr	r1, [r2, r1]
 80071f6:	e7ad      	b.n	8007154 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x9c>
 80071f8:	2101      	movs	r1, #1
 80071fa:	e7c5      	b.n	8007188 <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 80071fc:	f016 fb9e 	bl	801d93c <__stack_chk_fail>
 8007200:	2000      	movs	r0, #0
 8007202:	e7e2      	b.n	80071ca <_ZN6tflite11ParseConv2DEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x112>
 8007204:	6833      	ldr	r3, [r6, #0]
 8007206:	4621      	mov	r1, r4
 8007208:	685b      	ldr	r3, [r3, #4]
 800720a:	4630      	mov	r0, r6
 800720c:	4798      	blx	r3
 800720e:	f013 fd2d 	bl	801ac6c <__cxa_end_cleanup>
 8007212:	f015 fbcd 	bl	801c9b0 <abort>
 8007216:	bf00      	nop
 8007218:	20011294 	.word	0x20011294

0800721c <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 800721c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007220:	4698      	mov	r8, r3
 8007222:	4b52      	ldr	r3, [pc, #328]	; (800736c <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x150>)
 8007224:	b083      	sub	sp, #12
 8007226:	681b      	ldr	r3, [r3, #0]
 8007228:	9301      	str	r3, [sp, #4]
 800722a:	f04f 0300 	mov.w	r3, #0
 800722e:	2800      	cmp	r0, #0
 8007230:	f000 8093 	beq.w	800735a <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x13e>
 8007234:	460f      	mov	r7, r1
 8007236:	2900      	cmp	r1, #0
 8007238:	f000 808f 	beq.w	800735a <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x13e>
 800723c:	4615      	mov	r5, r2
 800723e:	2a00      	cmp	r2, #0
 8007240:	f000 808b 	beq.w	800735a <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x13e>
 8007244:	f1b8 0f00 	cmp.w	r8, #0
 8007248:	f000 8087 	beq.w	800735a <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x13e>
 800724c:	6813      	ldr	r3, [r2, #0]
 800724e:	4606      	mov	r6, r0
 8007250:	681b      	ldr	r3, [r3, #0]
 8007252:	2201      	movs	r2, #1
 8007254:	2105      	movs	r1, #5
 8007256:	4628      	mov	r0, r5
 8007258:	4798      	blx	r3
 800725a:	6832      	ldr	r2, [r6, #0]
 800725c:	1ab2      	subs	r2, r6, r2
 800725e:	2300      	movs	r3, #0
 8007260:	6003      	str	r3, [r0, #0]
 8007262:	7103      	strb	r3, [r0, #4]
 8007264:	8813      	ldrh	r3, [r2, #0]
 8007266:	2b0a      	cmp	r3, #10
 8007268:	4604      	mov	r4, r0
 800726a:	d93a      	bls.n	80072e2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc6>
 800726c:	8951      	ldrh	r1, [r2, #10]
 800726e:	2900      	cmp	r1, #0
 8007270:	d037      	beq.n	80072e2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc6>
 8007272:	5c71      	ldrb	r1, [r6, r1]
 8007274:	2908      	cmp	r1, #8
 8007276:	d134      	bne.n	80072e2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc6>
 8007278:	2b0c      	cmp	r3, #12
 800727a:	d932      	bls.n	80072e2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc6>
 800727c:	8993      	ldrh	r3, [r2, #12]
 800727e:	eb06 0a03 	add.w	sl, r6, r3
 8007282:	b373      	cbz	r3, 80072e2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc6>
 8007284:	f856 b003 	ldr.w	fp, [r6, r3]
 8007288:	f85a 300b 	ldr.w	r3, [sl, fp]
 800728c:	eb0a 090b 	add.w	r9, sl, fp
 8007290:	eba9 0303 	sub.w	r3, r9, r3
 8007294:	8819      	ldrh	r1, [r3, #0]
 8007296:	2904      	cmp	r1, #4
 8007298:	d913      	bls.n	80072c2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa6>
 800729a:	889a      	ldrh	r2, [r3, #4]
 800729c:	bb7a      	cbnz	r2, 80072fe <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xe2>
 800729e:	2908      	cmp	r1, #8
 80072a0:	7022      	strb	r2, [r4, #0]
 80072a2:	d90e      	bls.n	80072c2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa6>
 80072a4:	891a      	ldrh	r2, [r3, #8]
 80072a6:	2a00      	cmp	r2, #0
 80072a8:	d14d      	bne.n	8007346 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x12a>
 80072aa:	290a      	cmp	r1, #10
 80072ac:	70a2      	strb	r2, [r4, #2]
 80072ae:	d908      	bls.n	80072c2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa6>
 80072b0:	895a      	ldrh	r2, [r3, #10]
 80072b2:	2a00      	cmp	r2, #0
 80072b4:	d141      	bne.n	800733a <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x11e>
 80072b6:	290c      	cmp	r1, #12
 80072b8:	70e2      	strb	r2, [r4, #3]
 80072ba:	d902      	bls.n	80072c2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa6>
 80072bc:	899b      	ldrh	r3, [r3, #12]
 80072be:	2b00      	cmp	r3, #0
 80072c0:	d138      	bne.n	8007334 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x118>
 80072c2:	2000      	movs	r0, #0
 80072c4:	463a      	mov	r2, r7
 80072c6:	1d21      	adds	r1, r4, #4
 80072c8:	f7ff fe7a 	bl	8006fc0 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE>
 80072cc:	4606      	mov	r6, r0
 80072ce:	bb58      	cbnz	r0, 8007328 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x10c>
 80072d0:	f85a 300b 	ldr.w	r3, [sl, fp]
 80072d4:	eba9 0303 	sub.w	r3, r9, r3
 80072d8:	881a      	ldrh	r2, [r3, #0]
 80072da:	2a06      	cmp	r2, #6
 80072dc:	d816      	bhi.n	800730c <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xf0>
 80072de:	2300      	movs	r3, #0
 80072e0:	7063      	strb	r3, [r4, #1]
 80072e2:	f8c8 4000 	str.w	r4, [r8]
 80072e6:	2600      	movs	r6, #0
 80072e8:	4b20      	ldr	r3, [pc, #128]	; (800736c <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x150>)
 80072ea:	681a      	ldr	r2, [r3, #0]
 80072ec:	9b01      	ldr	r3, [sp, #4]
 80072ee:	405a      	eors	r2, r3
 80072f0:	f04f 0300 	mov.w	r3, #0
 80072f4:	d12f      	bne.n	8007356 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x13a>
 80072f6:	4630      	mov	r0, r6
 80072f8:	b003      	add	sp, #12
 80072fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072fe:	f819 2002 	ldrb.w	r2, [r9, r2]
 8007302:	1e50      	subs	r0, r2, #1
 8007304:	2804      	cmp	r0, #4
 8007306:	bf88      	it	hi
 8007308:	2200      	movhi	r2, #0
 800730a:	e7c8      	b.n	800729e <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x82>
 800730c:	88db      	ldrh	r3, [r3, #6]
 800730e:	2b00      	cmp	r3, #0
 8007310:	d0e5      	beq.n	80072de <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc2>
 8007312:	f919 3003 	ldrsb.w	r3, [r9, r3]
 8007316:	2b00      	cmp	r3, #0
 8007318:	d0e1      	beq.n	80072de <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc2>
 800731a:	2b01      	cmp	r3, #1
 800731c:	d019      	beq.n	8007352 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x136>
 800731e:	4914      	ldr	r1, [pc, #80]	; (8007370 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x154>)
 8007320:	4638      	mov	r0, r7
 8007322:	f007 f93d 	bl	800e5a0 <_ZN6tflite13ErrorReporter6ReportEPKcz>
 8007326:	2601      	movs	r6, #1
 8007328:	682b      	ldr	r3, [r5, #0]
 800732a:	4621      	mov	r1, r4
 800732c:	685b      	ldr	r3, [r3, #4]
 800732e:	4628      	mov	r0, r5
 8007330:	4798      	blx	r3
 8007332:	e7d9      	b.n	80072e8 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xcc>
 8007334:	f919 0003 	ldrsb.w	r0, [r9, r3]
 8007338:	e7c4      	b.n	80072c4 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa8>
 800733a:	f819 2002 	ldrb.w	r2, [r9, r2]
 800733e:	3a00      	subs	r2, #0
 8007340:	bf18      	it	ne
 8007342:	2201      	movne	r2, #1
 8007344:	e7b7      	b.n	80072b6 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x9a>
 8007346:	f819 2002 	ldrb.w	r2, [r9, r2]
 800734a:	3a00      	subs	r2, #0
 800734c:	bf18      	it	ne
 800734e:	2201      	movne	r2, #1
 8007350:	e7ab      	b.n	80072aa <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 8007352:	7063      	strb	r3, [r4, #1]
 8007354:	e7c5      	b.n	80072e2 <_ZN6tflite19ParseFullyConnectedEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xc6>
 8007356:	f016 faf1 	bl	801d93c <__stack_chk_fail>
 800735a:	f015 fb29 	bl	801c9b0 <abort>
 800735e:	682b      	ldr	r3, [r5, #0]
 8007360:	4621      	mov	r1, r4
 8007362:	685b      	ldr	r3, [r3, #4]
 8007364:	4628      	mov	r0, r5
 8007366:	4798      	blx	r3
 8007368:	f013 fc80 	bl	801ac6c <__cxa_end_cleanup>
 800736c:	20011294 	.word	0x20011294
 8007370:	080248cc 	.word	0x080248cc

08007374 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 8007374:	b570      	push	{r4, r5, r6, lr}
 8007376:	461e      	mov	r6, r3
 8007378:	4b3a      	ldr	r3, [pc, #232]	; (8007464 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xf0>)
 800737a:	b082      	sub	sp, #8
 800737c:	681b      	ldr	r3, [r3, #0]
 800737e:	9301      	str	r3, [sp, #4]
 8007380:	f04f 0300 	mov.w	r3, #0
 8007384:	2800      	cmp	r0, #0
 8007386:	d06a      	beq.n	800745e <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xea>
 8007388:	2900      	cmp	r1, #0
 800738a:	d068      	beq.n	800745e <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xea>
 800738c:	4615      	mov	r5, r2
 800738e:	2a00      	cmp	r2, #0
 8007390:	d065      	beq.n	800745e <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xea>
 8007392:	2e00      	cmp	r6, #0
 8007394:	d063      	beq.n	800745e <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xea>
 8007396:	6813      	ldr	r3, [r2, #0]
 8007398:	4604      	mov	r4, r0
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	2204      	movs	r2, #4
 800739e:	4628      	mov	r0, r5
 80073a0:	2128      	movs	r1, #40	; 0x28
 80073a2:	4798      	blx	r3
 80073a4:	2228      	movs	r2, #40	; 0x28
 80073a6:	2100      	movs	r1, #0
 80073a8:	4605      	mov	r5, r0
 80073aa:	f015 fb9b 	bl	801cae4 <memset>
 80073ae:	6823      	ldr	r3, [r4, #0]
 80073b0:	1ae3      	subs	r3, r4, r3
 80073b2:	881a      	ldrh	r2, [r3, #0]
 80073b4:	2a0a      	cmp	r2, #10
 80073b6:	d938      	bls.n	800742a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb6>
 80073b8:	8959      	ldrh	r1, [r3, #10]
 80073ba:	2900      	cmp	r1, #0
 80073bc:	d035      	beq.n	800742a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb6>
 80073be:	5c61      	ldrb	r1, [r4, r1]
 80073c0:	2905      	cmp	r1, #5
 80073c2:	d132      	bne.n	800742a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb6>
 80073c4:	2a0c      	cmp	r2, #12
 80073c6:	d930      	bls.n	800742a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb6>
 80073c8:	899b      	ldrh	r3, [r3, #12]
 80073ca:	18e1      	adds	r1, r4, r3
 80073cc:	2b00      	cmp	r3, #0
 80073ce:	d02c      	beq.n	800742a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb6>
 80073d0:	58e3      	ldr	r3, [r4, r3]
 80073d2:	18ca      	adds	r2, r1, r3
 80073d4:	58cb      	ldr	r3, [r1, r3]
 80073d6:	1ad3      	subs	r3, r2, r3
 80073d8:	8818      	ldrh	r0, [r3, #0]
 80073da:	2804      	cmp	r0, #4
 80073dc:	d930      	bls.n	8007440 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xcc>
 80073de:	8899      	ldrh	r1, [r3, #4]
 80073e0:	2900      	cmp	r1, #0
 80073e2:	d132      	bne.n	800744a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd6>
 80073e4:	2101      	movs	r1, #1
 80073e6:	2806      	cmp	r0, #6
 80073e8:	7029      	strb	r1, [r5, #0]
 80073ea:	d92b      	bls.n	8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 80073ec:	88d9      	ldrh	r1, [r3, #6]
 80073ee:	b101      	cbz	r1, 80073f2 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7e>
 80073f0:	5851      	ldr	r1, [r2, r1]
 80073f2:	6069      	str	r1, [r5, #4]
 80073f4:	2808      	cmp	r0, #8
 80073f6:	d925      	bls.n	8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 80073f8:	8919      	ldrh	r1, [r3, #8]
 80073fa:	b101      	cbz	r1, 80073fe <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8a>
 80073fc:	5851      	ldr	r1, [r2, r1]
 80073fe:	60a9      	str	r1, [r5, #8]
 8007400:	280a      	cmp	r0, #10
 8007402:	d91f      	bls.n	8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 8007404:	8959      	ldrh	r1, [r3, #10]
 8007406:	b101      	cbz	r1, 800740a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x96>
 8007408:	5851      	ldr	r1, [r2, r1]
 800740a:	60e9      	str	r1, [r5, #12]
 800740c:	280c      	cmp	r0, #12
 800740e:	d919      	bls.n	8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 8007410:	8999      	ldrh	r1, [r3, #12]
 8007412:	b101      	cbz	r1, 8007416 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa2>
 8007414:	5851      	ldr	r1, [r2, r1]
 8007416:	6129      	str	r1, [r5, #16]
 8007418:	280e      	cmp	r0, #14
 800741a:	d913      	bls.n	8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 800741c:	89db      	ldrh	r3, [r3, #14]
 800741e:	b18b      	cbz	r3, 8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 8007420:	5cd3      	ldrb	r3, [r2, r3]
 8007422:	1e5a      	subs	r2, r3, #1
 8007424:	2a04      	cmp	r2, #4
 8007426:	d80d      	bhi.n	8007444 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>
 8007428:	752b      	strb	r3, [r5, #20]
 800742a:	4b0e      	ldr	r3, [pc, #56]	; (8007464 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xf0>)
 800742c:	6035      	str	r5, [r6, #0]
 800742e:	681a      	ldr	r2, [r3, #0]
 8007430:	9b01      	ldr	r3, [sp, #4]
 8007432:	405a      	eors	r2, r3
 8007434:	f04f 0300 	mov.w	r3, #0
 8007438:	d10f      	bne.n	800745a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xe6>
 800743a:	2000      	movs	r0, #0
 800743c:	b002      	add	sp, #8
 800743e:	bd70      	pop	{r4, r5, r6, pc}
 8007440:	2301      	movs	r3, #1
 8007442:	702b      	strb	r3, [r5, #0]
 8007444:	2300      	movs	r3, #0
 8007446:	752b      	strb	r3, [r5, #20]
 8007448:	e7ef      	b.n	800742a <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb6>
 800744a:	5651      	ldrsb	r1, [r2, r1]
 800744c:	2900      	cmp	r1, #0
 800744e:	d0c9      	beq.n	80073e4 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x70>
 8007450:	2901      	cmp	r1, #1
 8007452:	bf14      	ite	ne
 8007454:	2100      	movne	r1, #0
 8007456:	2102      	moveq	r1, #2
 8007458:	e7c5      	b.n	80073e6 <_ZN6tflite9ParsePoolEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x72>
 800745a:	f016 fa6f 	bl	801d93c <__stack_chk_fail>
 800745e:	f015 faa7 	bl	801c9b0 <abort>
 8007462:	bf00      	nop
 8007464:	20011294 	.word	0x20011294

08007468 <_ZN6tflite13ParseQuantizeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 8007468:	b500      	push	{lr}
 800746a:	4b09      	ldr	r3, [pc, #36]	; (8007490 <_ZN6tflite13ParseQuantizeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x28>)
 800746c:	b083      	sub	sp, #12
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	9301      	str	r3, [sp, #4]
 8007472:	f04f 0300 	mov.w	r3, #0
 8007476:	4b06      	ldr	r3, [pc, #24]	; (8007490 <_ZN6tflite13ParseQuantizeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x28>)
 8007478:	681a      	ldr	r2, [r3, #0]
 800747a:	9b01      	ldr	r3, [sp, #4]
 800747c:	405a      	eors	r2, r3
 800747e:	f04f 0300 	mov.w	r3, #0
 8007482:	d103      	bne.n	800748c <_ZN6tflite13ParseQuantizeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x24>
 8007484:	2000      	movs	r0, #0
 8007486:	b003      	add	sp, #12
 8007488:	f85d fb04 	ldr.w	pc, [sp], #4
 800748c:	f016 fa56 	bl	801d93c <__stack_chk_fail>
 8007490:	20011294 	.word	0x20011294

08007494 <_ZN6tflite9ParseReluEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 8007494:	b500      	push	{lr}
 8007496:	4b09      	ldr	r3, [pc, #36]	; (80074bc <_ZN6tflite9ParseReluEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x28>)
 8007498:	b083      	sub	sp, #12
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	9301      	str	r3, [sp, #4]
 800749e:	f04f 0300 	mov.w	r3, #0
 80074a2:	4b06      	ldr	r3, [pc, #24]	; (80074bc <_ZN6tflite9ParseReluEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x28>)
 80074a4:	681a      	ldr	r2, [r3, #0]
 80074a6:	9b01      	ldr	r3, [sp, #4]
 80074a8:	405a      	eors	r2, r3
 80074aa:	f04f 0300 	mov.w	r3, #0
 80074ae:	d103      	bne.n	80074b8 <_ZN6tflite9ParseReluEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x24>
 80074b0:	2000      	movs	r0, #0
 80074b2:	b003      	add	sp, #12
 80074b4:	f85d fb04 	ldr.w	pc, [sp], #4
 80074b8:	f016 fa40 	bl	801d93c <__stack_chk_fail>
 80074bc:	20011294 	.word	0x20011294

080074c0 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 80074c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80074c4:	461f      	mov	r7, r3
 80074c6:	4b31      	ldr	r3, [pc, #196]	; (800758c <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xcc>)
 80074c8:	b082      	sub	sp, #8
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	9301      	str	r3, [sp, #4]
 80074ce:	f04f 0300 	mov.w	r3, #0
 80074d2:	2800      	cmp	r0, #0
 80074d4:	d050      	beq.n	8007578 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb8>
 80074d6:	4688      	mov	r8, r1
 80074d8:	2900      	cmp	r1, #0
 80074da:	d04d      	beq.n	8007578 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb8>
 80074dc:	4614      	mov	r4, r2
 80074de:	2a00      	cmp	r2, #0
 80074e0:	d04a      	beq.n	8007578 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb8>
 80074e2:	2f00      	cmp	r7, #0
 80074e4:	d048      	beq.n	8007578 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb8>
 80074e6:	6813      	ldr	r3, [r2, #0]
 80074e8:	4605      	mov	r5, r0
 80074ea:	681b      	ldr	r3, [r3, #0]
 80074ec:	2204      	movs	r2, #4
 80074ee:	2124      	movs	r1, #36	; 0x24
 80074f0:	4620      	mov	r0, r4
 80074f2:	4798      	blx	r3
 80074f4:	2224      	movs	r2, #36	; 0x24
 80074f6:	2100      	movs	r1, #0
 80074f8:	4606      	mov	r6, r0
 80074fa:	f015 faf3 	bl	801cae4 <memset>
 80074fe:	682b      	ldr	r3, [r5, #0]
 8007500:	1aeb      	subs	r3, r5, r3
 8007502:	881a      	ldrh	r2, [r3, #0]
 8007504:	2a0a      	cmp	r2, #10
 8007506:	d922      	bls.n	800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 8007508:	8959      	ldrh	r1, [r3, #10]
 800750a:	b301      	cbz	r1, 800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 800750c:	5c69      	ldrb	r1, [r5, r1]
 800750e:	2911      	cmp	r1, #17
 8007510:	d11d      	bne.n	800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 8007512:	2a0c      	cmp	r2, #12
 8007514:	d91b      	bls.n	800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 8007516:	899a      	ldrh	r2, [r3, #12]
 8007518:	18ab      	adds	r3, r5, r2
 800751a:	b1c2      	cbz	r2, 800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 800751c:	58a9      	ldr	r1, [r5, r2]
 800751e:	585a      	ldr	r2, [r3, r1]
 8007520:	440b      	add	r3, r1
 8007522:	1a9a      	subs	r2, r3, r2
 8007524:	8811      	ldrh	r1, [r2, #0]
 8007526:	2904      	cmp	r1, #4
 8007528:	d911      	bls.n	800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 800752a:	8892      	ldrh	r2, [r2, #4]
 800752c:	eb03 0902 	add.w	r9, r3, r2
 8007530:	b16a      	cbz	r2, 800754e <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8e>
 8007532:	f853 a002 	ldr.w	sl, [r3, r2]
 8007536:	4b16      	ldr	r3, [pc, #88]	; (8007590 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xd0>)
 8007538:	4642      	mov	r2, r8
 800753a:	4631      	mov	r1, r6
 800753c:	eb09 000a 	add.w	r0, r9, sl
 8007540:	f7ff fcf4 	bl	8006f2c <_ZN6tflite12_GLOBAL__N_1L26FlatBufferIntVectorToArrayIlEE12TfLiteStatusiPKN11flatbuffers6VectorIT_mEEPS5_PNS_13ErrorReporterEPKc.constprop.0>
 8007544:	4605      	mov	r5, r0
 8007546:	b978      	cbnz	r0, 8007568 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa8>
 8007548:	f859 300a 	ldr.w	r3, [r9, sl]
 800754c:	6233      	str	r3, [r6, #32]
 800754e:	603e      	str	r6, [r7, #0]
 8007550:	2500      	movs	r5, #0
 8007552:	4b0e      	ldr	r3, [pc, #56]	; (800758c <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xcc>)
 8007554:	681a      	ldr	r2, [r3, #0]
 8007556:	9b01      	ldr	r3, [sp, #4]
 8007558:	405a      	eors	r2, r3
 800755a:	f04f 0300 	mov.w	r3, #0
 800755e:	d109      	bne.n	8007574 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xb4>
 8007560:	4628      	mov	r0, r5
 8007562:	b002      	add	sp, #8
 8007564:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007568:	6823      	ldr	r3, [r4, #0]
 800756a:	4631      	mov	r1, r6
 800756c:	685b      	ldr	r3, [r3, #4]
 800756e:	4620      	mov	r0, r4
 8007570:	4798      	blx	r3
 8007572:	e7ee      	b.n	8007552 <_ZN6tflite12ParseReshapeEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x92>
 8007574:	f016 f9e2 	bl	801d93c <__stack_chk_fail>
 8007578:	f015 fa1a 	bl	801c9b0 <abort>
 800757c:	6823      	ldr	r3, [r4, #0]
 800757e:	4631      	mov	r1, r6
 8007580:	685b      	ldr	r3, [r3, #4]
 8007582:	4620      	mov	r0, r4
 8007584:	4798      	blx	r3
 8007586:	f013 fb71 	bl	801ac6c <__cxa_end_cleanup>
 800758a:	bf00      	nop
 800758c:	20011294 	.word	0x20011294
 8007590:	080248f8 	.word	0x080248f8

08007594 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 8007594:	b570      	push	{r4, r5, r6, lr}
 8007596:	461e      	mov	r6, r3
 8007598:	4b28      	ldr	r3, [pc, #160]	; (800763c <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa8>)
 800759a:	b082      	sub	sp, #8
 800759c:	681b      	ldr	r3, [r3, #0]
 800759e:	9301      	str	r3, [sp, #4]
 80075a0:	f04f 0300 	mov.w	r3, #0
 80075a4:	2800      	cmp	r0, #0
 80075a6:	d047      	beq.n	8007638 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa4>
 80075a8:	2900      	cmp	r1, #0
 80075aa:	d045      	beq.n	8007638 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa4>
 80075ac:	4615      	mov	r5, r2
 80075ae:	2a00      	cmp	r2, #0
 80075b0:	d042      	beq.n	8007638 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa4>
 80075b2:	2e00      	cmp	r6, #0
 80075b4:	d040      	beq.n	8007638 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa4>
 80075b6:	6813      	ldr	r3, [r2, #0]
 80075b8:	4604      	mov	r4, r0
 80075ba:	681b      	ldr	r3, [r3, #0]
 80075bc:	2201      	movs	r2, #1
 80075be:	4628      	mov	r0, r5
 80075c0:	2102      	movs	r1, #2
 80075c2:	4798      	blx	r3
 80075c4:	6823      	ldr	r3, [r4, #0]
 80075c6:	1ae3      	subs	r3, r4, r3
 80075c8:	2200      	movs	r2, #0
 80075ca:	7002      	strb	r2, [r0, #0]
 80075cc:	7042      	strb	r2, [r0, #1]
 80075ce:	881a      	ldrh	r2, [r3, #0]
 80075d0:	2a0a      	cmp	r2, #10
 80075d2:	d91c      	bls.n	800760e <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7a>
 80075d4:	8959      	ldrh	r1, [r3, #10]
 80075d6:	b1d1      	cbz	r1, 800760e <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7a>
 80075d8:	5c61      	ldrb	r1, [r4, r1]
 80075da:	290f      	cmp	r1, #15
 80075dc:	d117      	bne.n	800760e <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7a>
 80075de:	2a0c      	cmp	r2, #12
 80075e0:	d915      	bls.n	800760e <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7a>
 80075e2:	899b      	ldrh	r3, [r3, #12]
 80075e4:	18e2      	adds	r2, r4, r3
 80075e6:	b193      	cbz	r3, 800760e <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7a>
 80075e8:	58e3      	ldr	r3, [r4, r3]
 80075ea:	18d4      	adds	r4, r2, r3
 80075ec:	58d3      	ldr	r3, [r2, r3]
 80075ee:	1ae3      	subs	r3, r4, r3
 80075f0:	8819      	ldrh	r1, [r3, #0]
 80075f2:	2908      	cmp	r1, #8
 80075f4:	d916      	bls.n	8007624 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x90>
 80075f6:	891a      	ldrh	r2, [r3, #8]
 80075f8:	b9ba      	cbnz	r2, 800762a <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x96>
 80075fa:	290a      	cmp	r1, #10
 80075fc:	7002      	strb	r2, [r0, #0]
 80075fe:	d911      	bls.n	8007624 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x90>
 8007600:	895b      	ldrh	r3, [r3, #10]
 8007602:	b17b      	cbz	r3, 8007624 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x90>
 8007604:	5ce3      	ldrb	r3, [r4, r3]
 8007606:	3b00      	subs	r3, #0
 8007608:	bf18      	it	ne
 800760a:	2301      	movne	r3, #1
 800760c:	7043      	strb	r3, [r0, #1]
 800760e:	4b0b      	ldr	r3, [pc, #44]	; (800763c <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa8>)
 8007610:	6030      	str	r0, [r6, #0]
 8007612:	681a      	ldr	r2, [r3, #0]
 8007614:	9b01      	ldr	r3, [sp, #4]
 8007616:	405a      	eors	r2, r3
 8007618:	f04f 0300 	mov.w	r3, #0
 800761c:	d10a      	bne.n	8007634 <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0xa0>
 800761e:	2000      	movs	r0, #0
 8007620:	b002      	add	sp, #8
 8007622:	bd70      	pop	{r4, r5, r6, pc}
 8007624:	2300      	movs	r3, #0
 8007626:	7043      	strb	r3, [r0, #1]
 8007628:	e7f1      	b.n	800760e <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7a>
 800762a:	5ca2      	ldrb	r2, [r4, r2]
 800762c:	3a00      	subs	r2, #0
 800762e:	bf18      	it	ne
 8007630:	2201      	movne	r2, #1
 8007632:	e7e2      	b.n	80075fa <_ZN6tflite19ParseResizeBilinearEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x66>
 8007634:	f016 f982 	bl	801d93c <__stack_chk_fail>
 8007638:	f015 f9ba 	bl	801c9b0 <abort>
 800763c:	20011294 	.word	0x20011294

08007640 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv>:
 8007640:	b570      	push	{r4, r5, r6, lr}
 8007642:	461e      	mov	r6, r3
 8007644:	4b21      	ldr	r3, [pc, #132]	; (80076cc <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8c>)
 8007646:	b082      	sub	sp, #8
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	9301      	str	r3, [sp, #4]
 800764c:	f04f 0300 	mov.w	r3, #0
 8007650:	2800      	cmp	r0, #0
 8007652:	d039      	beq.n	80076c8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x88>
 8007654:	2900      	cmp	r1, #0
 8007656:	d037      	beq.n	80076c8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x88>
 8007658:	4615      	mov	r5, r2
 800765a:	2a00      	cmp	r2, #0
 800765c:	d034      	beq.n	80076c8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x88>
 800765e:	2e00      	cmp	r6, #0
 8007660:	d032      	beq.n	80076c8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x88>
 8007662:	6813      	ldr	r3, [r2, #0]
 8007664:	4604      	mov	r4, r0
 8007666:	2204      	movs	r2, #4
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	4611      	mov	r1, r2
 800766c:	4628      	mov	r0, r5
 800766e:	4798      	blx	r3
 8007670:	6823      	ldr	r3, [r4, #0]
 8007672:	1ae3      	subs	r3, r4, r3
 8007674:	2200      	movs	r2, #0
 8007676:	6002      	str	r2, [r0, #0]
 8007678:	881a      	ldrh	r2, [r3, #0]
 800767a:	2a0a      	cmp	r2, #10
 800767c:	d914      	bls.n	80076a8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x68>
 800767e:	8959      	ldrh	r1, [r3, #10]
 8007680:	b191      	cbz	r1, 80076a8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x68>
 8007682:	5c61      	ldrb	r1, [r4, r1]
 8007684:	2909      	cmp	r1, #9
 8007686:	d10f      	bne.n	80076a8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x68>
 8007688:	2a0c      	cmp	r2, #12
 800768a:	d90d      	bls.n	80076a8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x68>
 800768c:	899b      	ldrh	r3, [r3, #12]
 800768e:	18e1      	adds	r1, r4, r3
 8007690:	b153      	cbz	r3, 80076a8 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x68>
 8007692:	58e3      	ldr	r3, [r4, r3]
 8007694:	18ca      	adds	r2, r1, r3
 8007696:	58cb      	ldr	r3, [r1, r3]
 8007698:	1ad3      	subs	r3, r2, r3
 800769a:	8819      	ldrh	r1, [r3, #0]
 800769c:	2904      	cmp	r1, #4
 800769e:	d901      	bls.n	80076a4 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x64>
 80076a0:	889b      	ldrh	r3, [r3, #4]
 80076a2:	b963      	cbnz	r3, 80076be <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x7e>
 80076a4:	2300      	movs	r3, #0
 80076a6:	6003      	str	r3, [r0, #0]
 80076a8:	4b08      	ldr	r3, [pc, #32]	; (80076cc <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x8c>)
 80076aa:	6030      	str	r0, [r6, #0]
 80076ac:	681a      	ldr	r2, [r3, #0]
 80076ae:	9b01      	ldr	r3, [sp, #4]
 80076b0:	405a      	eors	r2, r3
 80076b2:	f04f 0300 	mov.w	r3, #0
 80076b6:	d105      	bne.n	80076c4 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x84>
 80076b8:	2000      	movs	r0, #0
 80076ba:	b002      	add	sp, #8
 80076bc:	bd70      	pop	{r4, r5, r6, pc}
 80076be:	441a      	add	r2, r3
 80076c0:	6813      	ldr	r3, [r2, #0]
 80076c2:	e7f0      	b.n	80076a6 <_ZN6tflite12ParseSoftmaxEPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPv+0x66>
 80076c4:	f016 f93a 	bl	801d93c <__stack_chk_fail>
 80076c8:	f015 f972 	bl	801c9b0 <abort>
 80076cc:	20011294 	.word	0x20011294

080076d0 <_ZN6tflite12_GLOBAL__N_18ReluInitEP13TfLiteContextPKcj>:
 80076d0:	b500      	push	{lr}
 80076d2:	4b0c      	ldr	r3, [pc, #48]	; (8007704 <_ZN6tflite12_GLOBAL__N_18ReluInitEP13TfLiteContextPKcj+0x34>)
 80076d4:	b083      	sub	sp, #12
 80076d6:	681b      	ldr	r3, [r3, #0]
 80076d8:	9301      	str	r3, [sp, #4]
 80076da:	f04f 0300 	mov.w	r3, #0
 80076de:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80076e0:	b16b      	cbz	r3, 80076fe <_ZN6tflite12_GLOBAL__N_18ReluInitEP13TfLiteContextPKcj+0x2e>
 80076e2:	4a08      	ldr	r2, [pc, #32]	; (8007704 <_ZN6tflite12_GLOBAL__N_18ReluInitEP13TfLiteContextPKcj+0x34>)
 80076e4:	6811      	ldr	r1, [r2, #0]
 80076e6:	9a01      	ldr	r2, [sp, #4]
 80076e8:	4051      	eors	r1, r2
 80076ea:	f04f 0200 	mov.w	r2, #0
 80076ee:	d104      	bne.n	80076fa <_ZN6tflite12_GLOBAL__N_18ReluInitEP13TfLiteContextPKcj+0x2a>
 80076f0:	211c      	movs	r1, #28
 80076f2:	b003      	add	sp, #12
 80076f4:	f85d eb04 	ldr.w	lr, [sp], #4
 80076f8:	4718      	bx	r3
 80076fa:	f016 f91f 	bl	801d93c <__stack_chk_fail>
 80076fe:	f015 f957 	bl	801c9b0 <abort>
 8007702:	bf00      	nop
 8007704:	20011294 	.word	0x20011294

08007708 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode>:
 8007708:	b5f0      	push	{r4, r5, r6, r7, lr}
 800770a:	4b2b      	ldr	r3, [pc, #172]	; (80077b8 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xb0>)
 800770c:	690f      	ldr	r7, [r1, #16]
 800770e:	b0a1      	sub	sp, #132	; 0x84
 8007710:	681b      	ldr	r3, [r3, #0]
 8007712:	931f      	str	r3, [sp, #124]	; 0x7c
 8007714:	f04f 0300 	mov.w	r3, #0
 8007718:	2f00      	cmp	r7, #0
 800771a:	d04a      	beq.n	80077b2 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xaa>
 800771c:	4b27      	ldr	r3, [pc, #156]	; (80077bc <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xb4>)
 800771e:	681a      	ldr	r2, [r3, #0]
 8007720:	460d      	mov	r5, r1
 8007722:	4606      	mov	r6, r0
 8007724:	f002 fc72 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 8007728:	4b25      	ldr	r3, [pc, #148]	; (80077c0 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xb8>)
 800772a:	4604      	mov	r4, r0
 800772c:	681a      	ldr	r2, [r3, #0]
 800772e:	4629      	mov	r1, r5
 8007730:	4630      	mov	r0, r6
 8007732:	f002 fca1 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 8007736:	7a23      	ldrb	r3, [r4, #8]
 8007738:	2b01      	cmp	r3, #1
 800773a:	4605      	mov	r5, r0
 800773c:	d012      	beq.n	8007764 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0x5c>
 800773e:	2b09      	cmp	r3, #9
 8007740:	d022      	beq.n	8007788 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0x80>
 8007742:	4618      	mov	r0, r3
 8007744:	f006 ff66 	bl	800e614 <TfLiteTypeGetName>
 8007748:	4601      	mov	r1, r0
 800774a:	481e      	ldr	r0, [pc, #120]	; (80077c4 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xbc>)
 800774c:	f006 fd60 	bl	800e210 <_Z11MicroPrintfPKcz>
 8007750:	2001      	movs	r0, #1
 8007752:	4b19      	ldr	r3, [pc, #100]	; (80077b8 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xb0>)
 8007754:	681a      	ldr	r2, [r3, #0]
 8007756:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007758:	405a      	eors	r2, r3
 800775a:	f04f 0300 	mov.w	r3, #0
 800775e:	d126      	bne.n	80077ae <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xa6>
 8007760:	b021      	add	sp, #132	; 0x84
 8007762:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007764:	4621      	mov	r1, r4
 8007766:	a803      	add	r0, sp, #12
 8007768:	f002 fcac 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800776c:	4629      	mov	r1, r5
 800776e:	a80a      	add	r0, sp, #40	; 0x28
 8007770:	6824      	ldr	r4, [r4, #0]
 8007772:	f002 fca7 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8007776:	b1e5      	cbz	r5, 80077b2 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xaa>
 8007778:	a803      	add	r0, sp, #12
 800777a:	682b      	ldr	r3, [r5, #0]
 800777c:	aa0a      	add	r2, sp, #40	; 0x28
 800777e:	4621      	mov	r1, r4
 8007780:	f000 f8a0 	bl	80078c4 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf>
 8007784:	2000      	movs	r0, #0
 8007786:	e7e4      	b.n	8007752 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0x4a>
 8007788:	4621      	mov	r1, r4
 800778a:	a811      	add	r0, sp, #68	; 0x44
 800778c:	f002 fc9a 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8007790:	4629      	mov	r1, r5
 8007792:	a818      	add	r0, sp, #96	; 0x60
 8007794:	f002 fc96 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8007798:	6823      	ldr	r3, [r4, #0]
 800779a:	b155      	cbz	r5, 80077b2 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0xaa>
 800779c:	682a      	ldr	r2, [r5, #0]
 800779e:	9200      	str	r2, [sp, #0]
 80077a0:	4638      	mov	r0, r7
 80077a2:	aa18      	add	r2, sp, #96	; 0x60
 80077a4:	a911      	add	r1, sp, #68	; 0x44
 80077a6:	f000 f833 	bl	8007810 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa>
 80077aa:	2000      	movs	r0, #0
 80077ac:	e7d1      	b.n	8007752 <_ZN6tflite12_GLOBAL__N_18ReluEvalEP13TfLiteContextP10TfLiteNode+0x4a>
 80077ae:	f016 f8c5 	bl	801d93c <__stack_chk_fail>
 80077b2:	f015 f8fd 	bl	801c9b0 <abort>
 80077b6:	bf00      	nop
 80077b8:	20011294 	.word	0x20011294
 80077bc:	080249f0 	.word	0x080249f0
 80077c0:	080249f4 	.word	0x080249f4
 80077c4:	08024900 	.word	0x08024900

080077c8 <_ZN6tflite13Register_RELUEv>:
 80077c8:	b510      	push	{r4, lr}
 80077ca:	2100      	movs	r1, #0
 80077cc:	b084      	sub	sp, #16
 80077ce:	e9cd 1100 	strd	r1, r1, [sp]
 80077d2:	490b      	ldr	r1, [pc, #44]	; (8007800 <_ZN6tflite13Register_RELUEv+0x38>)
 80077d4:	4b0b      	ldr	r3, [pc, #44]	; (8007804 <_ZN6tflite13Register_RELUEv+0x3c>)
 80077d6:	4a0c      	ldr	r2, [pc, #48]	; (8007808 <_ZN6tflite13Register_RELUEv+0x40>)
 80077d8:	6809      	ldr	r1, [r1, #0]
 80077da:	9103      	str	r1, [sp, #12]
 80077dc:	f04f 0100 	mov.w	r1, #0
 80077e0:	490a      	ldr	r1, [pc, #40]	; (800780c <_ZN6tflite13Register_RELUEv+0x44>)
 80077e2:	4604      	mov	r4, r0
 80077e4:	f002 fbf2 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 80077e8:	4b05      	ldr	r3, [pc, #20]	; (8007800 <_ZN6tflite13Register_RELUEv+0x38>)
 80077ea:	681a      	ldr	r2, [r3, #0]
 80077ec:	9b03      	ldr	r3, [sp, #12]
 80077ee:	405a      	eors	r2, r3
 80077f0:	f04f 0300 	mov.w	r3, #0
 80077f4:	d102      	bne.n	80077fc <_ZN6tflite13Register_RELUEv+0x34>
 80077f6:	4620      	mov	r0, r4
 80077f8:	b004      	add	sp, #16
 80077fa:	bd10      	pop	{r4, pc}
 80077fc:	f016 f89e 	bl	801d93c <__stack_chk_fail>
 8007800:	20011294 	.word	0x20011294
 8007804:	08007709 	.word	0x08007709
 8007808:	08007961 	.word	0x08007961
 800780c:	080076d1 	.word	0x080076d1

08007810 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa>:
 8007810:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007814:	4605      	mov	r5, r0
 8007816:	4698      	mov	r8, r3
 8007818:	6808      	ldr	r0, [r1, #0]
 800781a:	6813      	ldr	r3, [r2, #0]
 800781c:	4c28      	ldr	r4, [pc, #160]	; (80078c0 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0xb0>)
 800781e:	b082      	sub	sp, #8
 8007820:	4298      	cmp	r0, r3
 8007822:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8007826:	6824      	ldr	r4, [r4, #0]
 8007828:	9401      	str	r4, [sp, #4]
 800782a:	f04f 0400 	mov.w	r4, #0
 800782e:	d145      	bne.n	80078bc <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0xac>
 8007830:	2800      	cmp	r0, #0
 8007832:	dd3f      	ble.n	80078b4 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0xa4>
 8007834:	3204      	adds	r2, #4
 8007836:	1d0c      	adds	r4, r1, #4
 8007838:	2300      	movs	r3, #0
 800783a:	f854 6b04 	ldr.w	r6, [r4], #4
 800783e:	f852 7b04 	ldr.w	r7, [r2], #4
 8007842:	42b7      	cmp	r7, r6
 8007844:	d13a      	bne.n	80078bc <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0xac>
 8007846:	3301      	adds	r3, #1
 8007848:	4298      	cmp	r0, r3
 800784a:	d1f6      	bne.n	800783a <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0x2a>
 800784c:	eb01 0080 	add.w	r0, r1, r0, lsl #2
 8007850:	2601      	movs	r6, #1
 8007852:	f851 3f04 	ldr.w	r3, [r1, #4]!
 8007856:	4288      	cmp	r0, r1
 8007858:	fb03 f606 	mul.w	r6, r3, r6
 800785c:	d1f9      	bne.n	8007852 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0x42>
 800785e:	2e00      	cmp	r6, #0
 8007860:	dd1e      	ble.n	80078a0 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0x90>
 8007862:	f108 37ff 	add.w	r7, r8, #4294967295
 8007866:	f109 39ff 	add.w	r9, r9, #4294967295
 800786a:	68eb      	ldr	r3, [r5, #12]
 800786c:	692c      	ldr	r4, [r5, #16]
 800786e:	46ba      	mov	sl, r7
 8007870:	f917 0f01 	ldrsb.w	r0, [r7, #1]!
 8007874:	e9d5 1205 	ldrd	r1, r2, [r5, #20]
 8007878:	1ac0      	subs	r0, r0, r3
 800787a:	f006 feeb 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800787e:	e9d5 2301 	ldrd	r2, r3, [r5, #4]
 8007882:	4404      	add	r4, r0
 8007884:	4294      	cmp	r4, r2
 8007886:	bfb8      	it	lt
 8007888:	4614      	movlt	r4, r2
 800788a:	f10a 0a02 	add.w	sl, sl, #2
 800788e:	429c      	cmp	r4, r3
 8007890:	ebaa 0a08 	sub.w	sl, sl, r8
 8007894:	bfa8      	it	ge
 8007896:	461c      	movge	r4, r3
 8007898:	45b2      	cmp	sl, r6
 800789a:	f809 4f01 	strb.w	r4, [r9, #1]!
 800789e:	dbe4      	blt.n	800786a <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0x5a>
 80078a0:	4b07      	ldr	r3, [pc, #28]	; (80078c0 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0xb0>)
 80078a2:	681a      	ldr	r2, [r3, #0]
 80078a4:	9b01      	ldr	r3, [sp, #4]
 80078a6:	405a      	eors	r2, r3
 80078a8:	f04f 0300 	mov.w	r3, #0
 80078ac:	d104      	bne.n	80078b8 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0xa8>
 80078ae:	b002      	add	sp, #8
 80078b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80078b4:	2601      	movs	r6, #1
 80078b6:	e7d4      	b.n	8007862 <_ZN6tflite13ReluQuantizedERKNS_10ReluOpDataERKNS_12RuntimeShapeES5_PKaPa+0x52>
 80078b8:	f016 f840 	bl	801d93c <__stack_chk_fail>
 80078bc:	f015 f878 	bl	801c9b0 <abort>
 80078c0:	20011294 	.word	0x20011294

080078c4 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf>:
 80078c4:	b570      	push	{r4, r5, r6, lr}
 80078c6:	6804      	ldr	r4, [r0, #0]
 80078c8:	4d23      	ldr	r5, [pc, #140]	; (8007958 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x94>)
 80078ca:	468e      	mov	lr, r1
 80078cc:	6811      	ldr	r1, [r2, #0]
 80078ce:	b082      	sub	sp, #8
 80078d0:	428c      	cmp	r4, r1
 80078d2:	682d      	ldr	r5, [r5, #0]
 80078d4:	9501      	str	r5, [sp, #4]
 80078d6:	f04f 0500 	mov.w	r5, #0
 80078da:	d13a      	bne.n	8007952 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x8e>
 80078dc:	2c00      	cmp	r4, #0
 80078de:	dd34      	ble.n	800794a <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x86>
 80078e0:	f102 0c04 	add.w	ip, r2, #4
 80078e4:	1d01      	adds	r1, r0, #4
 80078e6:	2200      	movs	r2, #0
 80078e8:	f851 5b04 	ldr.w	r5, [r1], #4
 80078ec:	f85c 6b04 	ldr.w	r6, [ip], #4
 80078f0:	42ae      	cmp	r6, r5
 80078f2:	d12e      	bne.n	8007952 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x8e>
 80078f4:	3201      	adds	r2, #1
 80078f6:	4294      	cmp	r4, r2
 80078f8:	d1f6      	bne.n	80078e8 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x24>
 80078fa:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 80078fe:	2201      	movs	r2, #1
 8007900:	f850 1f04 	ldr.w	r1, [r0, #4]!
 8007904:	4284      	cmp	r4, r0
 8007906:	fb01 f202 	mul.w	r2, r1, r2
 800790a:	d1f9      	bne.n	8007900 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x3c>
 800790c:	2a00      	cmp	r2, #0
 800790e:	dd13      	ble.n	8007938 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x74>
 8007910:	ed9f 7a12 	vldr	s14, [pc, #72]	; 800795c <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x98>
 8007914:	4619      	mov	r1, r3
 8007916:	4670      	mov	r0, lr
 8007918:	2300      	movs	r3, #0
 800791a:	ecf0 7a01 	vldmia	r0!, {s15}
 800791e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007926:	f103 0301 	add.w	r3, r3, #1
 800792a:	bf48      	it	mi
 800792c:	eef0 7a47 	vmovmi.f32	s15, s14
 8007930:	429a      	cmp	r2, r3
 8007932:	ece1 7a01 	vstmia	r1!, {s15}
 8007936:	dcf0      	bgt.n	800791a <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x56>
 8007938:	4b07      	ldr	r3, [pc, #28]	; (8007958 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x94>)
 800793a:	681a      	ldr	r2, [r3, #0]
 800793c:	9b01      	ldr	r3, [sp, #4]
 800793e:	405a      	eors	r2, r3
 8007940:	f04f 0300 	mov.w	r3, #0
 8007944:	d103      	bne.n	800794e <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x8a>
 8007946:	b002      	add	sp, #8
 8007948:	bd70      	pop	{r4, r5, r6, pc}
 800794a:	2201      	movs	r2, #1
 800794c:	e7e0      	b.n	8007910 <_ZN6tflite9ReluFloatERKNS_12RuntimeShapeEPKfS2_Pf+0x4c>
 800794e:	f015 fff5 	bl	801d93c <__stack_chk_fail>
 8007952:	f015 f82d 	bl	801c9b0 <abort>
 8007956:	bf00      	nop
 8007958:	20011294 	.word	0x20011294
 800795c:	00000000 	.word	0x00000000

08007960 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode>:
 8007960:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007964:	ed2d 8b02 	vpush	{d8}
 8007968:	4b43      	ldr	r3, [pc, #268]	; (8007a78 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x118>)
 800796a:	f8d1 8010 	ldr.w	r8, [r1, #16]
 800796e:	b092      	sub	sp, #72	; 0x48
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	9311      	str	r3, [sp, #68]	; 0x44
 8007974:	f04f 0300 	mov.w	r3, #0
 8007978:	f1b8 0f00 	cmp.w	r8, #0
 800797c:	d07a      	beq.n	8007a74 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x114>
 800797e:	68c7      	ldr	r7, [r0, #12]
 8007980:	4605      	mov	r5, r0
 8007982:	2200      	movs	r2, #0
 8007984:	4638      	mov	r0, r7
 8007986:	460e      	mov	r6, r1
 8007988:	f005 f846 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 800798c:	4604      	mov	r4, r0
 800798e:	b308      	cbz	r0, 80079d4 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x74>
 8007990:	4631      	mov	r1, r6
 8007992:	2200      	movs	r2, #0
 8007994:	4638      	mov	r0, r7
 8007996:	f005 f86d 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 800799a:	4606      	mov	r6, r0
 800799c:	2800      	cmp	r0, #0
 800799e:	d05d      	beq.n	8007a5c <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0xfc>
 80079a0:	7823      	ldrb	r3, [r4, #0]
 80079a2:	2b09      	cmp	r3, #9
 80079a4:	d020      	beq.n	80079e8 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x88>
 80079a6:	683b      	ldr	r3, [r7, #0]
 80079a8:	4621      	mov	r1, r4
 80079aa:	699b      	ldr	r3, [r3, #24]
 80079ac:	4638      	mov	r0, r7
 80079ae:	4798      	blx	r3
 80079b0:	683b      	ldr	r3, [r7, #0]
 80079b2:	4638      	mov	r0, r7
 80079b4:	699b      	ldr	r3, [r3, #24]
 80079b6:	4631      	mov	r1, r6
 80079b8:	4798      	blx	r3
 80079ba:	2000      	movs	r0, #0
 80079bc:	4b2e      	ldr	r3, [pc, #184]	; (8007a78 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x118>)
 80079be:	681a      	ldr	r2, [r3, #0]
 80079c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80079c2:	405a      	eors	r2, r3
 80079c4:	f04f 0300 	mov.w	r3, #0
 80079c8:	d152      	bne.n	8007a70 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x110>
 80079ca:	b012      	add	sp, #72	; 0x48
 80079cc:	ecbd 8b02 	vpop	{d8}
 80079d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80079d4:	4b29      	ldr	r3, [pc, #164]	; (8007a7c <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x11c>)
 80079d6:	696c      	ldr	r4, [r5, #20]
 80079d8:	4a29      	ldr	r2, [pc, #164]	; (8007a80 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x120>)
 80079da:	9300      	str	r3, [sp, #0]
 80079dc:	4628      	mov	r0, r5
 80079de:	4929      	ldr	r1, [pc, #164]	; (8007a84 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x124>)
 80079e0:	237b      	movs	r3, #123	; 0x7b
 80079e2:	47a0      	blx	r4
 80079e4:	2001      	movs	r0, #1
 80079e6:	e7e9      	b.n	80079bc <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x5c>
 80079e8:	ed94 7a03 	vldr	s14, [r4, #12]
 80079ec:	edd0 7a03 	vldr	s15, [r0, #12]
 80079f0:	eec7 7a27 	vdiv.f32	s15, s14, s15
 80079f4:	ee17 0a90 	vmov	r0, s15
 80079f8:	f7f8 fdb0 	bl	800055c <__aeabi_f2d>
 80079fc:	ec41 0b18 	vmov	d8, r0, r1
 8007a00:	4621      	mov	r1, r4
 8007a02:	a803      	add	r0, sp, #12
 8007a04:	f006 ffc6 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 8007a08:	4631      	mov	r1, r6
 8007a0a:	a80a      	add	r0, sp, #40	; 0x28
 8007a0c:	f006 ffc2 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 8007a10:	eeb0 0a48 	vmov.f32	s0, s16
 8007a14:	eef0 0a68 	vmov.f32	s1, s17
 8007a18:	f108 0118 	add.w	r1, r8, #24
 8007a1c:	f108 0014 	add.w	r0, r8, #20
 8007a20:	f006 fed0 	bl	800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>
 8007a24:	edd6 7a03 	vldr	s15, [r6, #12]
 8007a28:	ed9f 0a17 	vldr	s0, [pc, #92]	; 8007a88 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x128>
 8007a2c:	6935      	ldr	r5, [r6, #16]
 8007a2e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8007a32:	f014 f993 	bl	801bd5c <roundf>
 8007a36:	f06f 027f 	mvn.w	r2, #127	; 0x7f
 8007a3a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8007a3e:	ee17 3a90 	vmov	r3, s15
 8007a42:	442b      	add	r3, r5
 8007a44:	4293      	cmp	r3, r2
 8007a46:	bfb8      	it	lt
 8007a48:	4613      	movlt	r3, r2
 8007a4a:	f8c8 3004 	str.w	r3, [r8, #4]
 8007a4e:	6923      	ldr	r3, [r4, #16]
 8007a50:	e9c8 3503 	strd	r3, r5, [r8, #12]
 8007a54:	237f      	movs	r3, #127	; 0x7f
 8007a56:	f8c8 3008 	str.w	r3, [r8, #8]
 8007a5a:	e7a4      	b.n	80079a6 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x46>
 8007a5c:	4b0b      	ldr	r3, [pc, #44]	; (8007a8c <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x12c>)
 8007a5e:	696c      	ldr	r4, [r5, #20]
 8007a60:	4a07      	ldr	r2, [pc, #28]	; (8007a80 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x120>)
 8007a62:	9300      	str	r3, [sp, #0]
 8007a64:	4628      	mov	r0, r5
 8007a66:	4907      	ldr	r1, [pc, #28]	; (8007a84 <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x124>)
 8007a68:	237e      	movs	r3, #126	; 0x7e
 8007a6a:	47a0      	blx	r4
 8007a6c:	2001      	movs	r0, #1
 8007a6e:	e7a5      	b.n	80079bc <_ZN6tflite11ReluPrepareEP13TfLiteContextP10TfLiteNode+0x5c>
 8007a70:	f015 ff64 	bl	801d93c <__stack_chk_fail>
 8007a74:	f014 ff9c 	bl	801c9b0 <abort>
 8007a78:	20011294 	.word	0x20011294
 8007a7c:	080249c8 	.word	0x080249c8
 8007a80:	0802492c 	.word	0x0802492c
 8007a84:	080249b0 	.word	0x080249b0
 8007a88:	00000000 	.word	0x00000000
 8007a8c:	080249dc 	.word	0x080249dc

08007a90 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj>:
 8007a90:	b500      	push	{lr}
 8007a92:	4b0c      	ldr	r3, [pc, #48]	; (8007ac4 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 8007a94:	b083      	sub	sp, #12
 8007a96:	681b      	ldr	r3, [r3, #0]
 8007a98:	9301      	str	r3, [sp, #4]
 8007a9a:	f04f 0300 	mov.w	r3, #0
 8007a9e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8007aa0:	b16b      	cbz	r3, 8007abe <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2e>
 8007aa2:	4a08      	ldr	r2, [pc, #32]	; (8007ac4 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 8007aa4:	6811      	ldr	r1, [r2, #0]
 8007aa6:	9a01      	ldr	r2, [sp, #4]
 8007aa8:	4051      	eors	r1, r2
 8007aaa:	f04f 0200 	mov.w	r2, #0
 8007aae:	d104      	bne.n	8007aba <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2a>
 8007ab0:	213c      	movs	r1, #60	; 0x3c
 8007ab2:	b003      	add	sp, #12
 8007ab4:	f85d eb04 	ldr.w	lr, [sp], #4
 8007ab8:	4718      	bx	r3
 8007aba:	f015 ff3f 	bl	801d93c <__stack_chk_fail>
 8007abe:	f014 ff77 	bl	801c9b0 <abort>
 8007ac2:	bf00      	nop
 8007ac4:	20011294 	.word	0x20011294

08007ac8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode>:
 8007ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007acc:	ed2d 8b02 	vpush	{d8}
 8007ad0:	4b95      	ldr	r3, [pc, #596]	; (8007d28 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x260>)
 8007ad2:	f8d1 8010 	ldr.w	r8, [r1, #16]
 8007ad6:	b0b1      	sub	sp, #196	; 0xc4
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	932f      	str	r3, [sp, #188]	; 0xbc
 8007adc:	f04f 0300 	mov.w	r3, #0
 8007ae0:	f1b8 0f00 	cmp.w	r8, #0
 8007ae4:	f000 825a 	beq.w	8007f9c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d4>
 8007ae8:	f8d1 9014 	ldr.w	r9, [r1, #20]
 8007aec:	460c      	mov	r4, r1
 8007aee:	f1b9 0f00 	cmp.w	r9, #0
 8007af2:	f000 8253 	beq.w	8007f9c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d4>
 8007af6:	68c7      	ldr	r7, [r0, #12]
 8007af8:	4b8c      	ldr	r3, [pc, #560]	; (8007d2c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x264>)
 8007afa:	4605      	mov	r5, r0
 8007afc:	681a      	ldr	r2, [r3, #0]
 8007afe:	4638      	mov	r0, r7
 8007b00:	f004 ff8a 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 8007b04:	4606      	mov	r6, r0
 8007b06:	2800      	cmp	r0, #0
 8007b08:	d04a      	beq.n	8007ba0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xd8>
 8007b0a:	4b89      	ldr	r3, [pc, #548]	; (8007d30 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x268>)
 8007b0c:	4621      	mov	r1, r4
 8007b0e:	681a      	ldr	r2, [r3, #0]
 8007b10:	4638      	mov	r0, r7
 8007b12:	f004 ff81 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 8007b16:	4683      	mov	fp, r0
 8007b18:	b358      	cbz	r0, 8007b72 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xaa>
 8007b1a:	4b86      	ldr	r3, [pc, #536]	; (8007d34 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x26c>)
 8007b1c:	4621      	mov	r1, r4
 8007b1e:	681a      	ldr	r2, [r3, #0]
 8007b20:	4638      	mov	r0, r7
 8007b22:	f004 ffa7 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 8007b26:	4682      	mov	sl, r0
 8007b28:	2800      	cmp	r0, #0
 8007b2a:	d051      	beq.n	8007bd0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x108>
 8007b2c:	4b82      	ldr	r3, [pc, #520]	; (8007d38 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x270>)
 8007b2e:	4621      	mov	r1, r4
 8007b30:	681a      	ldr	r2, [r3, #0]
 8007b32:	4638      	mov	r0, r7
 8007b34:	f004 ff9e 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 8007b38:	9009      	str	r0, [sp, #36]	; 0x24
 8007b3a:	2800      	cmp	r0, #0
 8007b3c:	d052      	beq.n	8007be4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11c>
 8007b3e:	7803      	ldrb	r3, [r0, #0]
 8007b40:	930a      	str	r3, [sp, #40]	; 0x28
 8007b42:	7830      	ldrb	r0, [r6, #0]
 8007b44:	f89a 3000 	ldrb.w	r3, [sl]
 8007b48:	9008      	str	r0, [sp, #32]
 8007b4a:	4298      	cmp	r0, r3
 8007b4c:	d132      	bne.n	8007bb4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xec>
 8007b4e:	f89b 3000 	ldrb.w	r3, [fp]
 8007b52:	9a08      	ldr	r2, [sp, #32]
 8007b54:	429a      	cmp	r2, r3
 8007b56:	d04a      	beq.n	8007bee <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x126>
 8007b58:	2a07      	cmp	r2, #7
 8007b5a:	d046      	beq.n	8007bea <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x122>
 8007b5c:	9a08      	ldr	r2, [sp, #32]
 8007b5e:	2a09      	cmp	r2, #9
 8007b60:	d101      	bne.n	8007b66 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x9e>
 8007b62:	2b12      	cmp	r3, #18
 8007b64:	d043      	beq.n	8007bee <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x126>
 8007b66:	696b      	ldr	r3, [r5, #20]
 8007b68:	4974      	ldr	r1, [pc, #464]	; (8007d3c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x274>)
 8007b6a:	4628      	mov	r0, r5
 8007b6c:	4798      	blx	r3
 8007b6e:	2401      	movs	r4, #1
 8007b70:	e008      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007b72:	4b73      	ldr	r3, [pc, #460]	; (8007d40 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x278>)
 8007b74:	696c      	ldr	r4, [r5, #20]
 8007b76:	4a73      	ldr	r2, [pc, #460]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007b78:	9300      	str	r3, [sp, #0]
 8007b7a:	4973      	ldr	r1, [pc, #460]	; (8007d48 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x280>)
 8007b7c:	233d      	movs	r3, #61	; 0x3d
 8007b7e:	4628      	mov	r0, r5
 8007b80:	47a0      	blx	r4
 8007b82:	2401      	movs	r4, #1
 8007b84:	4b68      	ldr	r3, [pc, #416]	; (8007d28 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x260>)
 8007b86:	681a      	ldr	r2, [r3, #0]
 8007b88:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8007b8a:	405a      	eors	r2, r3
 8007b8c:	f04f 0300 	mov.w	r3, #0
 8007b90:	f040 81c3 	bne.w	8007f1a <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x452>
 8007b94:	4620      	mov	r0, r4
 8007b96:	b031      	add	sp, #196	; 0xc4
 8007b98:	ecbd 8b02 	vpop	{d8}
 8007b9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007ba0:	4b6a      	ldr	r3, [pc, #424]	; (8007d4c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x284>)
 8007ba2:	696c      	ldr	r4, [r5, #20]
 8007ba4:	4a67      	ldr	r2, [pc, #412]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007ba6:	9300      	str	r3, [sp, #0]
 8007ba8:	4967      	ldr	r1, [pc, #412]	; (8007d48 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x280>)
 8007baa:	233a      	movs	r3, #58	; 0x3a
 8007bac:	4628      	mov	r0, r5
 8007bae:	47a0      	blx	r4
 8007bb0:	2401      	movs	r4, #1
 8007bb2:	e7e7      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007bb4:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8007bb8:	4965      	ldr	r1, [pc, #404]	; (8007d50 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x288>)
 8007bba:	4a66      	ldr	r2, [pc, #408]	; (8007d54 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x28c>)
 8007bbc:	696c      	ldr	r4, [r5, #20]
 8007bbe:	2345      	movs	r3, #69	; 0x45
 8007bc0:	e9cd 2100 	strd	r2, r1, [sp]
 8007bc4:	4628      	mov	r0, r5
 8007bc6:	4a5f      	ldr	r2, [pc, #380]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007bc8:	4963      	ldr	r1, [pc, #396]	; (8007d58 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x290>)
 8007bca:	47a0      	blx	r4
 8007bcc:	2401      	movs	r4, #1
 8007bce:	e7d9      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007bd0:	4b62      	ldr	r3, [pc, #392]	; (8007d5c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x294>)
 8007bd2:	696c      	ldr	r4, [r5, #20]
 8007bd4:	4a5b      	ldr	r2, [pc, #364]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007bd6:	9300      	str	r3, [sp, #0]
 8007bd8:	495b      	ldr	r1, [pc, #364]	; (8007d48 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x280>)
 8007bda:	2340      	movs	r3, #64	; 0x40
 8007bdc:	4628      	mov	r0, r5
 8007bde:	47a0      	blx	r4
 8007be0:	2401      	movs	r4, #1
 8007be2:	e7cf      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007be4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007be6:	930a      	str	r3, [sp, #40]	; 0x28
 8007be8:	e7ab      	b.n	8007b42 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x7a>
 8007bea:	2b09      	cmp	r3, #9
 8007bec:	d1bb      	bne.n	8007b66 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x9e>
 8007bee:	68b3      	ldr	r3, [r6, #8]
 8007bf0:	930b      	str	r3, [sp, #44]	; 0x2c
 8007bf2:	681b      	ldr	r3, [r3, #0]
 8007bf4:	2b04      	cmp	r3, #4
 8007bf6:	d113      	bne.n	8007c20 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x158>
 8007bf8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8007bfc:	920c      	str	r2, [sp, #48]	; 0x30
 8007bfe:	6812      	ldr	r2, [r2, #0]
 8007c00:	2a04      	cmp	r2, #4
 8007c02:	d01c      	beq.n	8007c3e <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x176>
 8007c04:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8007c08:	4855      	ldr	r0, [pc, #340]	; (8007d60 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x298>)
 8007c0a:	4956      	ldr	r1, [pc, #344]	; (8007d64 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x29c>)
 8007c0c:	696c      	ldr	r4, [r5, #20]
 8007c0e:	4a4d      	ldr	r2, [pc, #308]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007c10:	e9cd 1000 	strd	r1, r0, [sp]
 8007c14:	2350      	movs	r3, #80	; 0x50
 8007c16:	4950      	ldr	r1, [pc, #320]	; (8007d58 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x290>)
 8007c18:	4628      	mov	r0, r5
 8007c1a:	47a0      	blx	r4
 8007c1c:	2401      	movs	r4, #1
 8007c1e:	e7b1      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007c20:	4a4f      	ldr	r2, [pc, #316]	; (8007d60 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x298>)
 8007c22:	4851      	ldr	r0, [pc, #324]	; (8007d68 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2a0>)
 8007c24:	2104      	movs	r1, #4
 8007c26:	9103      	str	r1, [sp, #12]
 8007c28:	696c      	ldr	r4, [r5, #20]
 8007c2a:	494b      	ldr	r1, [pc, #300]	; (8007d58 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x290>)
 8007c2c:	9000      	str	r0, [sp, #0]
 8007c2e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007c32:	4628      	mov	r0, r5
 8007c34:	4a43      	ldr	r2, [pc, #268]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007c36:	234f      	movs	r3, #79	; 0x4f
 8007c38:	47a0      	blx	r4
 8007c3a:	2401      	movs	r4, #1
 8007c3c:	e7a2      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007c3e:	f8da 3008 	ldr.w	r3, [sl, #8]
 8007c42:	930d      	str	r3, [sp, #52]	; 0x34
 8007c44:	6819      	ldr	r1, [r3, #0]
 8007c46:	2904      	cmp	r1, #4
 8007c48:	d00d      	beq.n	8007c66 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x19e>
 8007c4a:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8007c4e:	4844      	ldr	r0, [pc, #272]	; (8007d60 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x298>)
 8007c50:	4b46      	ldr	r3, [pc, #280]	; (8007d6c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2a4>)
 8007c52:	696c      	ldr	r4, [r5, #20]
 8007c54:	4a3b      	ldr	r2, [pc, #236]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007c56:	4940      	ldr	r1, [pc, #256]	; (8007d58 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x290>)
 8007c58:	e9cd 3000 	strd	r3, r0, [sp]
 8007c5c:	2351      	movs	r3, #81	; 0x51
 8007c5e:	4628      	mov	r0, r5
 8007c60:	47a0      	blx	r4
 8007c62:	2401      	movs	r4, #1
 8007c64:	e78e      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007c66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007c68:	6858      	ldr	r0, [r3, #4]
 8007c6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8007c6c:	900f      	str	r0, [sp, #60]	; 0x3c
 8007c6e:	685b      	ldr	r3, [r3, #4]
 8007c70:	930e      	str	r3, [sp, #56]	; 0x38
 8007c72:	4298      	cmp	r0, r3
 8007c74:	d00e      	beq.n	8007c94 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1cc>
 8007c76:	990e      	ldr	r1, [sp, #56]	; 0x38
 8007c78:	4a3d      	ldr	r2, [pc, #244]	; (8007d70 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2a8>)
 8007c7a:	4b3e      	ldr	r3, [pc, #248]	; (8007d74 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2ac>)
 8007c7c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007c80:	4935      	ldr	r1, [pc, #212]	; (8007d58 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x290>)
 8007c82:	696c      	ldr	r4, [r5, #20]
 8007c84:	4628      	mov	r0, r5
 8007c86:	e9cd 3200 	strd	r3, r2, [sp]
 8007c8a:	4a2e      	ldr	r2, [pc, #184]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007c8c:	2353      	movs	r3, #83	; 0x53
 8007c8e:	47a0      	blx	r4
 8007c90:	2401      	movs	r4, #1
 8007c92:	e777      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007c94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007c96:	691b      	ldr	r3, [r3, #16]
 8007c98:	9310      	str	r3, [sp, #64]	; 0x40
 8007c9a:	2b00      	cmp	r3, #0
 8007c9c:	dd2a      	ble.n	8007cf4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x22c>
 8007c9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007ca0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8007ca2:	691a      	ldr	r2, [r3, #16]
 8007ca4:	9211      	str	r2, [sp, #68]	; 0x44
 8007ca6:	fb92 f3f0 	sdiv	r3, r2, r0
 8007caa:	fb00 2213 	mls	r2, r0, r3, r2
 8007cae:	2a00      	cmp	r2, #0
 8007cb0:	f040 80e4 	bne.w	8007e7c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x3b4>
 8007cb4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007cb6:	6910      	ldr	r0, [r2, #16]
 8007cb8:	fb90 f2f3 	sdiv	r2, r0, r3
 8007cbc:	fb03 0312 	mls	r3, r3, r2, r0
 8007cc0:	9012      	str	r0, [sp, #72]	; 0x48
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	f040 816a 	bne.w	8007f9c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d4>
 8007cc8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007cca:	2a00      	cmp	r2, #0
 8007ccc:	f000 8081 	beq.w	8007dd2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x30a>
 8007cd0:	6892      	ldr	r2, [r2, #8]
 8007cd2:	6810      	ldr	r0, [r2, #0]
 8007cd4:	2804      	cmp	r0, #4
 8007cd6:	d017      	beq.n	8007d08 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x240>
 8007cd8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8007cdc:	4a20      	ldr	r2, [pc, #128]	; (8007d60 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x298>)
 8007cde:	4b26      	ldr	r3, [pc, #152]	; (8007d78 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b0>)
 8007ce0:	696c      	ldr	r4, [r5, #20]
 8007ce2:	491d      	ldr	r1, [pc, #116]	; (8007d58 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x290>)
 8007ce4:	e9cd 3200 	strd	r3, r2, [sp]
 8007ce8:	4628      	mov	r0, r5
 8007cea:	4a16      	ldr	r2, [pc, #88]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007cec:	235c      	movs	r3, #92	; 0x5c
 8007cee:	47a0      	blx	r4
 8007cf0:	2401      	movs	r4, #1
 8007cf2:	e747      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007cf4:	4b21      	ldr	r3, [pc, #132]	; (8007d7c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 8007cf6:	696c      	ldr	r4, [r5, #20]
 8007cf8:	4a12      	ldr	r2, [pc, #72]	; (8007d44 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x27c>)
 8007cfa:	9300      	str	r3, [sp, #0]
 8007cfc:	4912      	ldr	r1, [pc, #72]	; (8007d48 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x280>)
 8007cfe:	2355      	movs	r3, #85	; 0x55
 8007d00:	4628      	mov	r0, r5
 8007d02:	47a0      	blx	r4
 8007d04:	2401      	movs	r4, #1
 8007d06:	e73d      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007d08:	1d11      	adds	r1, r2, #4
 8007d0a:	f102 0014 	add.w	r0, r2, #20
 8007d0e:	2201      	movs	r2, #1
 8007d10:	e9cd 8913 	strd	r8, r9, [sp, #76]	; 0x4c
 8007d14:	e9cd 5416 	strd	r5, r4, [sp, #88]	; 0x58
 8007d18:	ee08 7a10 	vmov	s16, r7
 8007d1c:	9615      	str	r6, [sp, #84]	; 0x54
 8007d1e:	4607      	mov	r7, r0
 8007d20:	4689      	mov	r9, r1
 8007d22:	4615      	mov	r5, r2
 8007d24:	461e      	mov	r6, r3
 8007d26:	e02f      	b.n	8007d88 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2c0>
 8007d28:	20011294 	.word	0x20011294
 8007d2c:	080253d8 	.word	0x080253d8
 8007d30:	080253e0 	.word	0x080253e0
 8007d34:	080253dc 	.word	0x080253dc
 8007d38:	080253d4 	.word	0x080253d4
 8007d3c:	08024ac4 	.word	0x08024ac4
 8007d40:	08024a78 	.word	0x08024a78
 8007d44:	080249f8 	.word	0x080249f8
 8007d48:	080249b0 	.word	0x080249b0
 8007d4c:	080249c8 	.word	0x080249c8
 8007d50:	08024aa8 	.word	0x08024aa8
 8007d54:	08024ab8 	.word	0x08024ab8
 8007d58:	08024a8c 	.word	0x08024a8c
 8007d5c:	080249dc 	.word	0x080249dc
 8007d60:	08026614 	.word	0x08026614
 8007d64:	08024b88 	.word	0x08024b88
 8007d68:	08024b74 	.word	0x08024b74
 8007d6c:	08024b9c 	.word	0x08024b9c
 8007d70:	08024bb0 	.word	0x08024bb0
 8007d74:	08024bc8 	.word	0x08024bc8
 8007d78:	08024c2c 	.word	0x08024c2c
 8007d7c:	08024be0 	.word	0x08024be0
 8007d80:	2d01      	cmp	r5, #1
 8007d82:	f176 0300 	sbcs.w	r3, r6, #0
 8007d86:	db18      	blt.n	8007dba <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2f2>
 8007d88:	4633      	mov	r3, r6
 8007d8a:	462a      	mov	r2, r5
 8007d8c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8007d90:	2100      	movs	r1, #0
 8007d92:	f7f8 ff63 	bl	8000c5c <__aeabi_ldivmod>
 8007d96:	f859 4b04 	ldr.w	r4, [r9], #4
 8007d9a:	ea4f 78e4 	mov.w	r8, r4, asr #31
 8007d9e:	4284      	cmp	r4, r0
 8007da0:	eb78 0301 	sbcs.w	r3, r8, r1
 8007da4:	f280 80f6 	bge.w	8007f94 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4cc>
 8007da8:	fb05 f108 	mul.w	r1, r5, r8
 8007dac:	fb04 1106 	mla	r1, r4, r6, r1
 8007db0:	454f      	cmp	r7, r9
 8007db2:	fba5 5604 	umull	r5, r6, r5, r4
 8007db6:	440e      	add	r6, r1
 8007db8:	d1e2      	bne.n	8007d80 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b8>
 8007dba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007dbc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8007dbe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8007dc0:	462a      	mov	r2, r5
 8007dc2:	4293      	cmp	r3, r2
 8007dc4:	e9dd 8913 	ldrd	r8, r9, [sp, #76]	; 0x4c
 8007dc8:	ee18 7a10 	vmov	r7, s16
 8007dcc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8007dce:	f040 80e5 	bne.w	8007f9c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d4>
 8007dd2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007dd4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007dd6:	9319      	str	r3, [sp, #100]	; 0x64
 8007dd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007dda:	9321      	str	r3, [sp, #132]	; 0x84
 8007ddc:	6893      	ldr	r3, [r2, #8]
 8007dde:	931a      	str	r3, [sp, #104]	; 0x68
 8007de0:	68d3      	ldr	r3, [r2, #12]
 8007de2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007de4:	931b      	str	r3, [sp, #108]	; 0x6c
 8007de6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007de8:	931c      	str	r3, [sp, #112]	; 0x70
 8007dea:	6893      	ldr	r3, [r2, #8]
 8007dec:	931e      	str	r3, [sp, #120]	; 0x78
 8007dee:	68d3      	ldr	r3, [r2, #12]
 8007df0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8007df2:	931f      	str	r3, [sp, #124]	; 0x7c
 8007df4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007df6:	9320      	str	r3, [sp, #128]	; 0x80
 8007df8:	6893      	ldr	r3, [r2, #8]
 8007dfa:	9322      	str	r3, [sp, #136]	; 0x88
 8007dfc:	68d3      	ldr	r3, [r2, #12]
 8007dfe:	9323      	str	r3, [sp, #140]	; 0x8c
 8007e00:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007e02:	9324      	str	r3, [sp, #144]	; 0x90
 8007e04:	2301      	movs	r3, #1
 8007e06:	931d      	str	r3, [sp, #116]	; 0x74
 8007e08:	9b08      	ldr	r3, [sp, #32]
 8007e0a:	2b09      	cmp	r3, #9
 8007e0c:	d045      	beq.n	8007e9a <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x3d2>
 8007e0e:	2b07      	cmp	r3, #7
 8007e10:	d043      	beq.n	8007e9a <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x3d2>
 8007e12:	f8cd 8018 	str.w	r8, [sp, #24]
 8007e16:	7833      	ldrb	r3, [r6, #0]
 8007e18:	9305      	str	r3, [sp, #20]
 8007e1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8007e1c:	9304      	str	r3, [sp, #16]
 8007e1e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007e20:	9303      	str	r3, [sp, #12]
 8007e22:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8007e24:	9302      	str	r3, [sp, #8]
 8007e26:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007e28:	9301      	str	r3, [sp, #4]
 8007e2a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8007e2c:	9300      	str	r3, [sp, #0]
 8007e2e:	4621      	mov	r1, r4
 8007e30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007e32:	464a      	mov	r2, r9
 8007e34:	4628      	mov	r0, r5
 8007e36:	f001 fed5 	bl	8009be4 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE>
 8007e3a:	4604      	mov	r4, r0
 8007e3c:	2800      	cmp	r0, #0
 8007e3e:	f47f aea1 	bne.w	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007e42:	7832      	ldrb	r2, [r6, #0]
 8007e44:	2a09      	cmp	r2, #9
 8007e46:	d040      	beq.n	8007eca <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x402>
 8007e48:	2a07      	cmp	r2, #7
 8007e4a:	d03a      	beq.n	8007ec2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x3fa>
 8007e4c:	683b      	ldr	r3, [r7, #0]
 8007e4e:	4651      	mov	r1, sl
 8007e50:	699b      	ldr	r3, [r3, #24]
 8007e52:	4638      	mov	r0, r7
 8007e54:	4798      	blx	r3
 8007e56:	683b      	ldr	r3, [r7, #0]
 8007e58:	4631      	mov	r1, r6
 8007e5a:	699b      	ldr	r3, [r3, #24]
 8007e5c:	4638      	mov	r0, r7
 8007e5e:	4798      	blx	r3
 8007e60:	683b      	ldr	r3, [r7, #0]
 8007e62:	4659      	mov	r1, fp
 8007e64:	699b      	ldr	r3, [r3, #24]
 8007e66:	4638      	mov	r0, r7
 8007e68:	4798      	blx	r3
 8007e6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007e6c:	2900      	cmp	r1, #0
 8007e6e:	f43f ae89 	beq.w	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007e72:	683b      	ldr	r3, [r7, #0]
 8007e74:	4638      	mov	r0, r7
 8007e76:	699b      	ldr	r3, [r3, #24]
 8007e78:	4798      	blx	r3
 8007e7a:	e683      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007e7c:	4948      	ldr	r1, [pc, #288]	; (8007fa0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d8>)
 8007e7e:	4b49      	ldr	r3, [pc, #292]	; (8007fa4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4dc>)
 8007e80:	2000      	movs	r0, #0
 8007e82:	9003      	str	r0, [sp, #12]
 8007e84:	696c      	ldr	r4, [r5, #20]
 8007e86:	9300      	str	r3, [sp, #0]
 8007e88:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8007e8c:	2356      	movs	r3, #86	; 0x56
 8007e8e:	4a46      	ldr	r2, [pc, #280]	; (8007fa8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e0>)
 8007e90:	4946      	ldr	r1, [pc, #280]	; (8007fac <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e4>)
 8007e92:	4628      	mov	r0, r5
 8007e94:	47a0      	blx	r4
 8007e96:	2401      	movs	r4, #1
 8007e98:	e674      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007e9a:	4b45      	ldr	r3, [pc, #276]	; (8007fb0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e8>)
 8007e9c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007e9e:	681b      	ldr	r3, [r3, #0]
 8007ea0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8007ea4:	4628      	mov	r0, r5
 8007ea6:	6859      	ldr	r1, [r3, #4]
 8007ea8:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8007eaa:	0089      	lsls	r1, r1, #2
 8007eac:	9108      	str	r1, [sp, #32]
 8007eae:	4798      	blx	r3
 8007eb0:	9908      	ldr	r1, [sp, #32]
 8007eb2:	f8c8 0024 	str.w	r0, [r8, #36]	; 0x24
 8007eb6:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8007eb8:	4628      	mov	r0, r5
 8007eba:	4798      	blx	r3
 8007ebc:	f8c8 0028 	str.w	r0, [r8, #40]	; 0x28
 8007ec0:	e7a7      	b.n	8007e12 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x34a>
 8007ec2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007ec4:	f013 0ffb 	tst.w	r3, #251	; 0xfb
 8007ec8:	d1c0      	bne.n	8007e4c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x384>
 8007eca:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8007ece:	f8d9 1008 	ldr.w	r1, [r9, #8]
 8007ed2:	9027      	str	r0, [sp, #156]	; 0x9c
 8007ed4:	f8d9 0014 	ldr.w	r0, [r9, #20]
 8007ed8:	6933      	ldr	r3, [r6, #16]
 8007eda:	9128      	str	r1, [sp, #160]	; 0xa0
 8007edc:	f8da 1010 	ldr.w	r1, [sl, #16]
 8007ee0:	902c      	str	r0, [sp, #176]	; 0xb0
 8007ee2:	f8d9 0010 	ldr.w	r0, [r9, #16]
 8007ee6:	902b      	str	r0, [sp, #172]	; 0xac
 8007ee8:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8007eec:	902a      	str	r0, [sp, #168]	; 0xa8
 8007eee:	f8d8 0000 	ldr.w	r0, [r8]
 8007ef2:	9029      	str	r0, [sp, #164]	; 0xa4
 8007ef4:	f8d8 002c 	ldr.w	r0, [r8, #44]	; 0x2c
 8007ef8:	902d      	str	r0, [sp, #180]	; 0xb4
 8007efa:	f8d8 0030 	ldr.w	r0, [r8, #48]	; 0x30
 8007efe:	902e      	str	r0, [sp, #184]	; 0xb8
 8007f00:	2a09      	cmp	r2, #9
 8007f02:	f1c3 0000 	rsb	r0, r3, #0
 8007f06:	9126      	str	r1, [sp, #152]	; 0x98
 8007f08:	9025      	str	r0, [sp, #148]	; 0x94
 8007f0a:	d019      	beq.n	8007f40 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x478>
 8007f0c:	2a07      	cmp	r2, #7
 8007f0e:	d006      	beq.n	8007f1e <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x456>
 8007f10:	f04f 33ff 	mov.w	r3, #4294967295
 8007f14:	f8c8 3038 	str.w	r3, [r8, #56]	; 0x38
 8007f18:	e798      	b.n	8007e4c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x384>
 8007f1a:	f015 fd0f 	bl	801d93c <__stack_chk_fail>
 8007f1e:	bb4b      	cbnz	r3, 8007f74 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4ac>
 8007f20:	b309      	cbz	r1, 8007f66 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x49e>
 8007f22:	e9cd 1302 	strd	r1, r3, [sp, #8]
 8007f26:	481e      	ldr	r0, [pc, #120]	; (8007fa0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d8>)
 8007f28:	4a22      	ldr	r2, [pc, #136]	; (8007fb4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4ec>)
 8007f2a:	696c      	ldr	r4, [r5, #20]
 8007f2c:	491f      	ldr	r1, [pc, #124]	; (8007fac <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e4>)
 8007f2e:	e9cd 2000 	strd	r2, r0, [sp]
 8007f32:	2399      	movs	r3, #153	; 0x99
 8007f34:	4628      	mov	r0, r5
 8007f36:	4a1c      	ldr	r2, [pc, #112]	; (8007fa8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e0>)
 8007f38:	47a0      	blx	r4
 8007f3a:	2001      	movs	r0, #1
 8007f3c:	4604      	mov	r4, r0
 8007f3e:	e621      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007f40:	ab21      	add	r3, sp, #132	; 0x84
 8007f42:	aa1d      	add	r2, sp, #116	; 0x74
 8007f44:	a919      	add	r1, sp, #100	; 0x64
 8007f46:	a825      	add	r0, sp, #148	; 0x94
 8007f48:	f00a f8c2 	bl	80120d0 <arm_convolve_wrapper_s8_get_buffer_size>
 8007f4c:	2800      	cmp	r0, #0
 8007f4e:	dddf      	ble.n	8007f10 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x448>
 8007f50:	4601      	mov	r1, r0
 8007f52:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8007f54:	f108 0238 	add.w	r2, r8, #56	; 0x38
 8007f58:	4628      	mov	r0, r5
 8007f5a:	4798      	blx	r3
 8007f5c:	2800      	cmp	r0, #0
 8007f5e:	f43f af75 	beq.w	8007e4c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x384>
 8007f62:	4604      	mov	r4, r0
 8007f64:	e60e      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007f66:	ab21      	add	r3, sp, #132	; 0x84
 8007f68:	aa1d      	add	r2, sp, #116	; 0x74
 8007f6a:	a919      	add	r1, sp, #100	; 0x64
 8007f6c:	a825      	add	r0, sp, #148	; 0x94
 8007f6e:	f00a f973 	bl	8012258 <arm_convolve_wrapper_s16_get_buffer_size>
 8007f72:	e7eb      	b.n	8007f4c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x484>
 8007f74:	4a0a      	ldr	r2, [pc, #40]	; (8007fa0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4d8>)
 8007f76:	4810      	ldr	r0, [pc, #64]	; (8007fb8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4f0>)
 8007f78:	2100      	movs	r1, #0
 8007f7a:	9103      	str	r1, [sp, #12]
 8007f7c:	696c      	ldr	r4, [r5, #20]
 8007f7e:	490b      	ldr	r1, [pc, #44]	; (8007fac <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e4>)
 8007f80:	9000      	str	r0, [sp, #0]
 8007f82:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007f86:	4628      	mov	r0, r5
 8007f88:	4a07      	ldr	r2, [pc, #28]	; (8007fa8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4e0>)
 8007f8a:	2398      	movs	r3, #152	; 0x98
 8007f8c:	47a0      	blx	r4
 8007f8e:	2001      	movs	r0, #1
 8007f90:	4604      	mov	r4, r0
 8007f92:	e5f7      	b.n	8007b84 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xbc>
 8007f94:	4909      	ldr	r1, [pc, #36]	; (8007fbc <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4f4>)
 8007f96:	480a      	ldr	r0, [pc, #40]	; (8007fc0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x4f8>)
 8007f98:	f006 f93a 	bl	800e210 <_Z11MicroPrintfPKcz>
 8007f9c:	f014 fd08 	bl	801c9b0 <abort>
 8007fa0:	08024bf8 	.word	0x08024bf8
 8007fa4:	08024bfc 	.word	0x08024bfc
 8007fa8:	080249f8 	.word	0x080249f8
 8007fac:	08024a8c 	.word	0x08024a8c
 8007fb0:	080253e4 	.word	0x080253e4
 8007fb4:	08024c94 	.word	0x08024c94
 8007fb8:	08024c78 	.word	0x08024c78
 8007fbc:	08024c40 	.word	0x08024c40
 8007fc0:	08024c74 	.word	0x08024c74

08007fc4 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>:
 8007fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007fc8:	461c      	mov	r4, r3
 8007fca:	4b3c      	ldr	r3, [pc, #240]	; (80080bc <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf8>)
 8007fcc:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8007fd0:	b0aa      	sub	sp, #168	; 0xa8
 8007fd2:	681b      	ldr	r3, [r3, #0]
 8007fd4:	9329      	str	r3, [sp, #164]	; 0xa4
 8007fd6:	f04f 0300 	mov.w	r3, #0
 8007fda:	6913      	ldr	r3, [r2, #16]
 8007fdc:	9f30      	ldr	r7, [sp, #192]	; 0xc0
 8007fde:	9e32      	ldr	r6, [sp, #200]	; 0xc8
 8007fe0:	425b      	negs	r3, r3
 8007fe2:	931f      	str	r3, [sp, #124]	; 0x7c
 8007fe4:	694b      	ldr	r3, [r1, #20]
 8007fe6:	9326      	str	r3, [sp, #152]	; 0x98
 8007fe8:	690b      	ldr	r3, [r1, #16]
 8007fea:	9325      	str	r3, [sp, #148]	; 0x94
 8007fec:	6993      	ldr	r3, [r2, #24]
 8007fee:	9320      	str	r3, [sp, #128]	; 0x80
 8007ff0:	688b      	ldr	r3, [r1, #8]
 8007ff2:	9322      	str	r3, [sp, #136]	; 0x88
 8007ff4:	684b      	ldr	r3, [r1, #4]
 8007ff6:	9321      	str	r3, [sp, #132]	; 0x84
 8007ff8:	6853      	ldr	r3, [r2, #4]
 8007ffa:	9324      	str	r3, [sp, #144]	; 0x90
 8007ffc:	6813      	ldr	r3, [r2, #0]
 8007ffe:	9323      	str	r3, [sp, #140]	; 0x8c
 8008000:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008002:	9327      	str	r3, [sp, #156]	; 0x9c
 8008004:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8008006:	9328      	str	r3, [sp, #160]	; 0xa0
 8008008:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800800a:	9309      	str	r3, [sp, #36]	; 0x24
 800800c:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800800e:	930a      	str	r3, [sp, #40]	; 0x28
 8008010:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8008014:	930f      	str	r3, [sp, #60]	; 0x3c
 8008016:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800801a:	f8d8 100c 	ldr.w	r1, [r8, #12]
 800801e:	f8d2 e038 	ldr.w	lr, [r2, #56]	; 0x38
 8008022:	687a      	ldr	r2, [r7, #4]
 8008024:	9310      	str	r3, [sp, #64]	; 0x40
 8008026:	9111      	str	r1, [sp, #68]	; 0x44
 8008028:	6873      	ldr	r3, [r6, #4]
 800802a:	f8d8 1010 	ldr.w	r1, [r8, #16]
 800802e:	9112      	str	r1, [sp, #72]	; 0x48
 8008030:	6891      	ldr	r1, [r2, #8]
 8008032:	9114      	str	r1, [sp, #80]	; 0x50
 8008034:	6859      	ldr	r1, [r3, #4]
 8008036:	911b      	str	r1, [sp, #108]	; 0x6c
 8008038:	68d1      	ldr	r1, [r2, #12]
 800803a:	6912      	ldr	r2, [r2, #16]
 800803c:	9216      	str	r2, [sp, #88]	; 0x58
 800803e:	2201      	movs	r2, #1
 8008040:	e9cd 2217 	strd	r2, r2, [sp, #92]	; 0x5c
 8008044:	9213      	str	r2, [sp, #76]	; 0x4c
 8008046:	9219      	str	r2, [sp, #100]	; 0x64
 8008048:	689a      	ldr	r2, [r3, #8]
 800804a:	921c      	str	r2, [sp, #112]	; 0x70
 800804c:	e9d3 3203 	ldrd	r3, r2, [r3, #12]
 8008050:	931d      	str	r3, [sp, #116]	; 0x74
 8008052:	2300      	movs	r3, #0
 8008054:	459e      	cmp	lr, r3
 8008056:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 800805a:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 800805c:	9115      	str	r1, [sp, #84]	; 0x54
 800805e:	921a      	str	r2, [sp, #104]	; 0x68
 8008060:	921e      	str	r2, [sp, #120]	; 0x78
 8008062:	db03      	blt.n	800806c <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xa8>
 8008064:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008066:	4671      	mov	r1, lr
 8008068:	4798      	blx	r3
 800806a:	900b      	str	r0, [sp, #44]	; 0x2c
 800806c:	6823      	ldr	r3, [r4, #0]
 800806e:	6839      	ldr	r1, [r7, #0]
 8008070:	b105      	cbz	r5, 8008074 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xb0>
 8008072:	682d      	ldr	r5, [r5, #0]
 8008074:	6832      	ldr	r2, [r6, #0]
 8008076:	9206      	str	r2, [sp, #24]
 8008078:	aa1b      	add	r2, sp, #108	; 0x6c
 800807a:	9205      	str	r2, [sp, #20]
 800807c:	aa0d      	add	r2, sp, #52	; 0x34
 800807e:	9204      	str	r2, [sp, #16]
 8008080:	aa17      	add	r2, sp, #92	; 0x5c
 8008082:	2001      	movs	r0, #1
 8008084:	9203      	str	r2, [sp, #12]
 8008086:	aa13      	add	r2, sp, #76	; 0x4c
 8008088:	e9cd 2101 	strd	r2, r1, [sp, #4]
 800808c:	e9cd 500d 	strd	r5, r0, [sp, #52]	; 0x34
 8008090:	9300      	str	r3, [sp, #0]
 8008092:	aa09      	add	r2, sp, #36	; 0x24
 8008094:	ab0f      	add	r3, sp, #60	; 0x3c
 8008096:	a91f      	add	r1, sp, #124	; 0x7c
 8008098:	a80b      	add	r0, sp, #44	; 0x2c
 800809a:	f00a f8e9 	bl	8012270 <arm_convolve_wrapper_s16>
 800809e:	b958      	cbnz	r0, 80080b8 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf4>
 80080a0:	4b06      	ldr	r3, [pc, #24]	; (80080bc <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf8>)
 80080a2:	681a      	ldr	r2, [r3, #0]
 80080a4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80080a6:	405a      	eors	r2, r3
 80080a8:	f04f 0300 	mov.w	r3, #0
 80080ac:	d102      	bne.n	80080b4 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf0>
 80080ae:	b02a      	add	sp, #168	; 0xa8
 80080b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80080b4:	f015 fc42 	bl	801d93c <__stack_chk_fail>
 80080b8:	f014 fc7a 	bl	801c9b0 <abort>
 80080bc:	20011294 	.word	0x20011294

080080c0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>:
 80080c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080c4:	461c      	mov	r4, r3
 80080c6:	4b3c      	ldr	r3, [pc, #240]	; (80081b8 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf8>)
 80080c8:	f8d4 8004 	ldr.w	r8, [r4, #4]
 80080cc:	b0aa      	sub	sp, #168	; 0xa8
 80080ce:	681b      	ldr	r3, [r3, #0]
 80080d0:	9329      	str	r3, [sp, #164]	; 0xa4
 80080d2:	f04f 0300 	mov.w	r3, #0
 80080d6:	6913      	ldr	r3, [r2, #16]
 80080d8:	9f30      	ldr	r7, [sp, #192]	; 0xc0
 80080da:	9e32      	ldr	r6, [sp, #200]	; 0xc8
 80080dc:	425b      	negs	r3, r3
 80080de:	931f      	str	r3, [sp, #124]	; 0x7c
 80080e0:	694b      	ldr	r3, [r1, #20]
 80080e2:	9326      	str	r3, [sp, #152]	; 0x98
 80080e4:	690b      	ldr	r3, [r1, #16]
 80080e6:	9325      	str	r3, [sp, #148]	; 0x94
 80080e8:	6993      	ldr	r3, [r2, #24]
 80080ea:	9320      	str	r3, [sp, #128]	; 0x80
 80080ec:	688b      	ldr	r3, [r1, #8]
 80080ee:	9322      	str	r3, [sp, #136]	; 0x88
 80080f0:	684b      	ldr	r3, [r1, #4]
 80080f2:	9321      	str	r3, [sp, #132]	; 0x84
 80080f4:	6853      	ldr	r3, [r2, #4]
 80080f6:	9324      	str	r3, [sp, #144]	; 0x90
 80080f8:	6813      	ldr	r3, [r2, #0]
 80080fa:	9323      	str	r3, [sp, #140]	; 0x8c
 80080fc:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80080fe:	9327      	str	r3, [sp, #156]	; 0x9c
 8008100:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8008102:	9328      	str	r3, [sp, #160]	; 0xa0
 8008104:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8008106:	9309      	str	r3, [sp, #36]	; 0x24
 8008108:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800810a:	930a      	str	r3, [sp, #40]	; 0x28
 800810c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8008110:	930f      	str	r3, [sp, #60]	; 0x3c
 8008112:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8008116:	f8d8 100c 	ldr.w	r1, [r8, #12]
 800811a:	f8d2 e038 	ldr.w	lr, [r2, #56]	; 0x38
 800811e:	687a      	ldr	r2, [r7, #4]
 8008120:	9310      	str	r3, [sp, #64]	; 0x40
 8008122:	9111      	str	r1, [sp, #68]	; 0x44
 8008124:	6873      	ldr	r3, [r6, #4]
 8008126:	f8d8 1010 	ldr.w	r1, [r8, #16]
 800812a:	9112      	str	r1, [sp, #72]	; 0x48
 800812c:	6891      	ldr	r1, [r2, #8]
 800812e:	9114      	str	r1, [sp, #80]	; 0x50
 8008130:	6859      	ldr	r1, [r3, #4]
 8008132:	911b      	str	r1, [sp, #108]	; 0x6c
 8008134:	68d1      	ldr	r1, [r2, #12]
 8008136:	6912      	ldr	r2, [r2, #16]
 8008138:	9216      	str	r2, [sp, #88]	; 0x58
 800813a:	2201      	movs	r2, #1
 800813c:	e9cd 2217 	strd	r2, r2, [sp, #92]	; 0x5c
 8008140:	9213      	str	r2, [sp, #76]	; 0x4c
 8008142:	9219      	str	r2, [sp, #100]	; 0x64
 8008144:	689a      	ldr	r2, [r3, #8]
 8008146:	921c      	str	r2, [sp, #112]	; 0x70
 8008148:	e9d3 3203 	ldrd	r3, r2, [r3, #12]
 800814c:	931d      	str	r3, [sp, #116]	; 0x74
 800814e:	2300      	movs	r3, #0
 8008150:	459e      	cmp	lr, r3
 8008152:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 8008156:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8008158:	9115      	str	r1, [sp, #84]	; 0x54
 800815a:	921a      	str	r2, [sp, #104]	; 0x68
 800815c:	921e      	str	r2, [sp, #120]	; 0x78
 800815e:	db03      	blt.n	8008168 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xa8>
 8008160:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008162:	4671      	mov	r1, lr
 8008164:	4798      	blx	r3
 8008166:	900b      	str	r0, [sp, #44]	; 0x2c
 8008168:	6823      	ldr	r3, [r4, #0]
 800816a:	6839      	ldr	r1, [r7, #0]
 800816c:	b105      	cbz	r5, 8008170 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xb0>
 800816e:	682d      	ldr	r5, [r5, #0]
 8008170:	6832      	ldr	r2, [r6, #0]
 8008172:	9206      	str	r2, [sp, #24]
 8008174:	aa1b      	add	r2, sp, #108	; 0x6c
 8008176:	9205      	str	r2, [sp, #20]
 8008178:	aa0d      	add	r2, sp, #52	; 0x34
 800817a:	9204      	str	r2, [sp, #16]
 800817c:	aa17      	add	r2, sp, #92	; 0x5c
 800817e:	2000      	movs	r0, #0
 8008180:	9203      	str	r2, [sp, #12]
 8008182:	aa13      	add	r2, sp, #76	; 0x4c
 8008184:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8008188:	e9cd 500d 	strd	r5, r0, [sp, #52]	; 0x34
 800818c:	9300      	str	r3, [sp, #0]
 800818e:	aa09      	add	r2, sp, #36	; 0x24
 8008190:	ab0f      	add	r3, sp, #60	; 0x3c
 8008192:	a91f      	add	r1, sp, #124	; 0x7c
 8008194:	a80b      	add	r0, sp, #44	; 0x2c
 8008196:	f00a f86b 	bl	8012270 <arm_convolve_wrapper_s16>
 800819a:	b958      	cbnz	r0, 80081b4 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf4>
 800819c:	4b06      	ldr	r3, [pc, #24]	; (80081b8 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf8>)
 800819e:	681a      	ldr	r2, [r3, #0]
 80081a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80081a2:	405a      	eors	r2, r3
 80081a4:	f04f 0300 	mov.w	r3, #0
 80081a8:	d102      	bne.n	80081b0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf0>
 80081aa:	b02a      	add	sp, #168	; 0xa8
 80081ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80081b0:	f015 fbc4 	bl	801d93c <__stack_chk_fail>
 80081b4:	f014 fbfc 	bl	801c9b0 <abort>
 80081b8:	20011294 	.word	0x20011294

080081bc <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>:
 80081bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081c0:	461c      	mov	r4, r3
 80081c2:	4b3a      	ldr	r3, [pc, #232]	; (80082ac <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf0>)
 80081c4:	f8d4 8004 	ldr.w	r8, [r4, #4]
 80081c8:	b0a8      	sub	sp, #160	; 0xa0
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	9327      	str	r3, [sp, #156]	; 0x9c
 80081ce:	f04f 0300 	mov.w	r3, #0
 80081d2:	6913      	ldr	r3, [r2, #16]
 80081d4:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80081d6:	9e30      	ldr	r6, [sp, #192]	; 0xc0
 80081d8:	425b      	negs	r3, r3
 80081da:	931d      	str	r3, [sp, #116]	; 0x74
 80081dc:	694b      	ldr	r3, [r1, #20]
 80081de:	9324      	str	r3, [sp, #144]	; 0x90
 80081e0:	690b      	ldr	r3, [r1, #16]
 80081e2:	9323      	str	r3, [sp, #140]	; 0x8c
 80081e4:	6993      	ldr	r3, [r2, #24]
 80081e6:	931e      	str	r3, [sp, #120]	; 0x78
 80081e8:	688b      	ldr	r3, [r1, #8]
 80081ea:	9320      	str	r3, [sp, #128]	; 0x80
 80081ec:	684b      	ldr	r3, [r1, #4]
 80081ee:	931f      	str	r3, [sp, #124]	; 0x7c
 80081f0:	6853      	ldr	r3, [r2, #4]
 80081f2:	9322      	str	r3, [sp, #136]	; 0x88
 80081f4:	6813      	ldr	r3, [r2, #0]
 80081f6:	9321      	str	r3, [sp, #132]	; 0x84
 80081f8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80081fa:	9325      	str	r3, [sp, #148]	; 0x94
 80081fc:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80081fe:	9326      	str	r3, [sp, #152]	; 0x98
 8008200:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8008202:	9309      	str	r3, [sp, #36]	; 0x24
 8008204:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8008206:	930a      	str	r3, [sp, #40]	; 0x28
 8008208:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800820c:	930d      	str	r3, [sp, #52]	; 0x34
 800820e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8008212:	f8d8 100c 	ldr.w	r1, [r8, #12]
 8008216:	f8d2 e038 	ldr.w	lr, [r2, #56]	; 0x38
 800821a:	687a      	ldr	r2, [r7, #4]
 800821c:	930e      	str	r3, [sp, #56]	; 0x38
 800821e:	910f      	str	r1, [sp, #60]	; 0x3c
 8008220:	6873      	ldr	r3, [r6, #4]
 8008222:	f8d8 1010 	ldr.w	r1, [r8, #16]
 8008226:	9110      	str	r1, [sp, #64]	; 0x40
 8008228:	6891      	ldr	r1, [r2, #8]
 800822a:	9112      	str	r1, [sp, #72]	; 0x48
 800822c:	6859      	ldr	r1, [r3, #4]
 800822e:	9119      	str	r1, [sp, #100]	; 0x64
 8008230:	68d1      	ldr	r1, [r2, #12]
 8008232:	6912      	ldr	r2, [r2, #16]
 8008234:	9214      	str	r2, [sp, #80]	; 0x50
 8008236:	2201      	movs	r2, #1
 8008238:	e9cd 2215 	strd	r2, r2, [sp, #84]	; 0x54
 800823c:	9211      	str	r2, [sp, #68]	; 0x44
 800823e:	9217      	str	r2, [sp, #92]	; 0x5c
 8008240:	689a      	ldr	r2, [r3, #8]
 8008242:	921a      	str	r2, [sp, #104]	; 0x68
 8008244:	e9d3 3203 	ldrd	r3, r2, [r3, #12]
 8008248:	931b      	str	r3, [sp, #108]	; 0x6c
 800824a:	2300      	movs	r3, #0
 800824c:	459e      	cmp	lr, r3
 800824e:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 8008252:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 8008254:	9113      	str	r1, [sp, #76]	; 0x4c
 8008256:	9218      	str	r2, [sp, #96]	; 0x60
 8008258:	921c      	str	r2, [sp, #112]	; 0x70
 800825a:	db03      	blt.n	8008264 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xa8>
 800825c:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800825e:	4671      	mov	r1, lr
 8008260:	4798      	blx	r3
 8008262:	900b      	str	r0, [sp, #44]	; 0x2c
 8008264:	6823      	ldr	r3, [r4, #0]
 8008266:	6839      	ldr	r1, [r7, #0]
 8008268:	b105      	cbz	r5, 800826c <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xb0>
 800826a:	682d      	ldr	r5, [r5, #0]
 800826c:	6830      	ldr	r0, [r6, #0]
 800826e:	9300      	str	r3, [sp, #0]
 8008270:	aa19      	add	r2, sp, #100	; 0x64
 8008272:	e9cd 2005 	strd	r2, r0, [sp, #20]
 8008276:	a815      	add	r0, sp, #84	; 0x54
 8008278:	aa11      	add	r2, sp, #68	; 0x44
 800827a:	e9cd 2101 	strd	r2, r1, [sp, #4]
 800827e:	e9cd 0503 	strd	r0, r5, [sp, #12]
 8008282:	ab0d      	add	r3, sp, #52	; 0x34
 8008284:	aa09      	add	r2, sp, #36	; 0x24
 8008286:	a91d      	add	r1, sp, #116	; 0x74
 8008288:	a80b      	add	r0, sp, #44	; 0x2c
 800828a:	f009 ff69 	bl	8012160 <arm_convolve_wrapper_s8>
 800828e:	b958      	cbnz	r0, 80082a8 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xec>
 8008290:	4b06      	ldr	r3, [pc, #24]	; (80082ac <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf0>)
 8008292:	681a      	ldr	r2, [r3, #0]
 8008294:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8008296:	405a      	eors	r2, r3
 8008298:	f04f 0300 	mov.w	r3, #0
 800829c:	d102      	bne.n	80082a4 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xe8>
 800829e:	b028      	add	sp, #160	; 0xa0
 80082a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80082a4:	f015 fb4a 	bl	801d93c <__stack_chk_fail>
 80082a8:	f014 fb82 	bl	801c9b0 <abort>
 80082ac:	20011294 	.word	0x20011294

080082b0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>:
 80082b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80082b4:	461c      	mov	r4, r3
 80082b6:	4b3a      	ldr	r3, [pc, #232]	; (80083a0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf0>)
 80082b8:	f8d4 8004 	ldr.w	r8, [r4, #4]
 80082bc:	b0a8      	sub	sp, #160	; 0xa0
 80082be:	681b      	ldr	r3, [r3, #0]
 80082c0:	9327      	str	r3, [sp, #156]	; 0x9c
 80082c2:	f04f 0300 	mov.w	r3, #0
 80082c6:	6913      	ldr	r3, [r2, #16]
 80082c8:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 80082ca:	9e30      	ldr	r6, [sp, #192]	; 0xc0
 80082cc:	425b      	negs	r3, r3
 80082ce:	931d      	str	r3, [sp, #116]	; 0x74
 80082d0:	694b      	ldr	r3, [r1, #20]
 80082d2:	9324      	str	r3, [sp, #144]	; 0x90
 80082d4:	690b      	ldr	r3, [r1, #16]
 80082d6:	9323      	str	r3, [sp, #140]	; 0x8c
 80082d8:	6993      	ldr	r3, [r2, #24]
 80082da:	931e      	str	r3, [sp, #120]	; 0x78
 80082dc:	688b      	ldr	r3, [r1, #8]
 80082de:	9320      	str	r3, [sp, #128]	; 0x80
 80082e0:	684b      	ldr	r3, [r1, #4]
 80082e2:	931f      	str	r3, [sp, #124]	; 0x7c
 80082e4:	6853      	ldr	r3, [r2, #4]
 80082e6:	9322      	str	r3, [sp, #136]	; 0x88
 80082e8:	6813      	ldr	r3, [r2, #0]
 80082ea:	9321      	str	r3, [sp, #132]	; 0x84
 80082ec:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80082ee:	9325      	str	r3, [sp, #148]	; 0x94
 80082f0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80082f2:	9326      	str	r3, [sp, #152]	; 0x98
 80082f4:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80082f6:	9309      	str	r3, [sp, #36]	; 0x24
 80082f8:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80082fa:	930a      	str	r3, [sp, #40]	; 0x28
 80082fc:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8008300:	930d      	str	r3, [sp, #52]	; 0x34
 8008302:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8008306:	f8d8 100c 	ldr.w	r1, [r8, #12]
 800830a:	f8d2 e038 	ldr.w	lr, [r2, #56]	; 0x38
 800830e:	687a      	ldr	r2, [r7, #4]
 8008310:	930e      	str	r3, [sp, #56]	; 0x38
 8008312:	910f      	str	r1, [sp, #60]	; 0x3c
 8008314:	6873      	ldr	r3, [r6, #4]
 8008316:	f8d8 1010 	ldr.w	r1, [r8, #16]
 800831a:	9110      	str	r1, [sp, #64]	; 0x40
 800831c:	6891      	ldr	r1, [r2, #8]
 800831e:	9112      	str	r1, [sp, #72]	; 0x48
 8008320:	6859      	ldr	r1, [r3, #4]
 8008322:	9119      	str	r1, [sp, #100]	; 0x64
 8008324:	68d1      	ldr	r1, [r2, #12]
 8008326:	6912      	ldr	r2, [r2, #16]
 8008328:	9214      	str	r2, [sp, #80]	; 0x50
 800832a:	2201      	movs	r2, #1
 800832c:	e9cd 2215 	strd	r2, r2, [sp, #84]	; 0x54
 8008330:	9211      	str	r2, [sp, #68]	; 0x44
 8008332:	9217      	str	r2, [sp, #92]	; 0x5c
 8008334:	689a      	ldr	r2, [r3, #8]
 8008336:	921a      	str	r2, [sp, #104]	; 0x68
 8008338:	e9d3 3203 	ldrd	r3, r2, [r3, #12]
 800833c:	931b      	str	r3, [sp, #108]	; 0x6c
 800833e:	2300      	movs	r3, #0
 8008340:	459e      	cmp	lr, r3
 8008342:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 8008346:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 8008348:	9113      	str	r1, [sp, #76]	; 0x4c
 800834a:	9218      	str	r2, [sp, #96]	; 0x60
 800834c:	921c      	str	r2, [sp, #112]	; 0x70
 800834e:	db03      	blt.n	8008358 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xa8>
 8008350:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008352:	4671      	mov	r1, lr
 8008354:	4798      	blx	r3
 8008356:	900b      	str	r0, [sp, #44]	; 0x2c
 8008358:	6823      	ldr	r3, [r4, #0]
 800835a:	6839      	ldr	r1, [r7, #0]
 800835c:	b105      	cbz	r5, 8008360 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xb0>
 800835e:	682d      	ldr	r5, [r5, #0]
 8008360:	6830      	ldr	r0, [r6, #0]
 8008362:	9300      	str	r3, [sp, #0]
 8008364:	aa19      	add	r2, sp, #100	; 0x64
 8008366:	e9cd 2005 	strd	r2, r0, [sp, #20]
 800836a:	a815      	add	r0, sp, #84	; 0x54
 800836c:	aa11      	add	r2, sp, #68	; 0x44
 800836e:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8008372:	e9cd 0503 	strd	r0, r5, [sp, #12]
 8008376:	ab0d      	add	r3, sp, #52	; 0x34
 8008378:	aa09      	add	r2, sp, #36	; 0x24
 800837a:	a91d      	add	r1, sp, #116	; 0x74
 800837c:	a80b      	add	r0, sp, #44	; 0x2c
 800837e:	f009 fdf7 	bl	8011f70 <arm_convolve_wrapper_s4>
 8008382:	b958      	cbnz	r0, 800839c <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xec>
 8008384:	4b06      	ldr	r3, [pc, #24]	; (80083a0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xf0>)
 8008386:	681a      	ldr	r2, [r3, #0]
 8008388:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800838a:	405a      	eors	r2, r3
 800838c:	f04f 0300 	mov.w	r3, #0
 8008390:	d102      	bne.n	8008398 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0+0xe8>
 8008392:	b028      	add	sp, #160	; 0xa0
 8008394:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008398:	f015 fad0 	bl	801d93c <__stack_chk_fail>
 800839c:	f014 fb08 	bl	801c9b0 <abort>
 80083a0:	20011294 	.word	0x20011294

080083a4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode>:
 80083a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80083a8:	4b4a      	ldr	r3, [pc, #296]	; (80084d4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x130>)
 80083aa:	681a      	ldr	r2, [r3, #0]
 80083ac:	4b4a      	ldr	r3, [pc, #296]	; (80084d8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x134>)
 80083ae:	b0e5      	sub	sp, #404	; 0x194
 80083b0:	460d      	mov	r5, r1
 80083b2:	4604      	mov	r4, r0
 80083b4:	681b      	ldr	r3, [r3, #0]
 80083b6:	9363      	str	r3, [sp, #396]	; 0x18c
 80083b8:	f04f 0300 	mov.w	r3, #0
 80083bc:	f001 fe26 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 80083c0:	4b46      	ldr	r3, [pc, #280]	; (80084dc <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x138>)
 80083c2:	9004      	str	r0, [sp, #16]
 80083c4:	681a      	ldr	r2, [r3, #0]
 80083c6:	4629      	mov	r1, r5
 80083c8:	4620      	mov	r0, r4
 80083ca:	f001 fe1f 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 80083ce:	f8d5 b000 	ldr.w	fp, [r5]
 80083d2:	9b04      	ldr	r3, [sp, #16]
 80083d4:	4606      	mov	r6, r0
 80083d6:	f1bb 0f00 	cmp.w	fp, #0
 80083da:	d005      	beq.n	80083e8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x44>
 80083dc:	f8db 2000 	ldr.w	r2, [fp]
 80083e0:	2a03      	cmp	r2, #3
 80083e2:	d047      	beq.n	8008474 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xd0>
 80083e4:	f04f 0b00 	mov.w	fp, #0
 80083e8:	4a3d      	ldr	r2, [pc, #244]	; (80084e0 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x13c>)
 80083ea:	9304      	str	r3, [sp, #16]
 80083ec:	4629      	mov	r1, r5
 80083ee:	6812      	ldr	r2, [r2, #0]
 80083f0:	4620      	mov	r0, r4
 80083f2:	f001 fe41 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 80083f6:	6969      	ldr	r1, [r5, #20]
 80083f8:	9b04      	ldr	r3, [sp, #16]
 80083fa:	4607      	mov	r7, r0
 80083fc:	2900      	cmp	r1, #0
 80083fe:	f000 81c4 	beq.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008402:	692a      	ldr	r2, [r5, #16]
 8008404:	2a00      	cmp	r2, #0
 8008406:	f000 81c0 	beq.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 800840a:	7a1d      	ldrb	r5, [r3, #8]
 800840c:	7a00      	ldrb	r0, [r0, #8]
 800840e:	4285      	cmp	r5, r0
 8008410:	d018      	beq.n	8008444 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xa0>
 8008412:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8008416:	4a33      	ldr	r2, [pc, #204]	; (80084e4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x140>)
 8008418:	4b33      	ldr	r3, [pc, #204]	; (80084e8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x144>)
 800841a:	6965      	ldr	r5, [r4, #20]
 800841c:	4933      	ldr	r1, [pc, #204]	; (80084ec <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x148>)
 800841e:	e9cd 3200 	strd	r3, r2, [sp]
 8008422:	4620      	mov	r0, r4
 8008424:	4a32      	ldr	r2, [pc, #200]	; (80084f0 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x14c>)
 8008426:	f44f 73ce 	mov.w	r3, #412	; 0x19c
 800842a:	47a8      	blx	r5
 800842c:	2001      	movs	r0, #1
 800842e:	4b2a      	ldr	r3, [pc, #168]	; (80084d8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x134>)
 8008430:	681a      	ldr	r2, [r3, #0]
 8008432:	9b63      	ldr	r3, [sp, #396]	; 0x18c
 8008434:	405a      	eors	r2, r3
 8008436:	f04f 0300 	mov.w	r3, #0
 800843a:	f040 8227 	bne.w	800888c <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4e8>
 800843e:	b065      	add	sp, #404	; 0x194
 8008440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008444:	7a30      	ldrb	r0, [r6, #8]
 8008446:	4285      	cmp	r5, r0
 8008448:	d01d      	beq.n	8008486 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xe2>
 800844a:	2d07      	cmp	r5, #7
 800844c:	d00a      	beq.n	8008464 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xc0>
 800844e:	2d09      	cmp	r5, #9
 8008450:	d10a      	bne.n	8008468 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xc4>
 8008452:	2812      	cmp	r0, #18
 8008454:	d108      	bne.n	8008468 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xc4>
 8008456:	e9cd b701 	strd	fp, r7, [sp, #4]
 800845a:	9600      	str	r6, [sp, #0]
 800845c:	4620      	mov	r0, r4
 800845e:	f7ff ff27 	bl	80082b0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType18EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>
 8008462:	e7e4      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 8008464:	2809      	cmp	r0, #9
 8008466:	d022      	beq.n	80084ae <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x10a>
 8008468:	4620      	mov	r0, r4
 800846a:	6963      	ldr	r3, [r4, #20]
 800846c:	4921      	ldr	r1, [pc, #132]	; (80084f4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x150>)
 800846e:	4798      	blx	r3
 8008470:	2001      	movs	r0, #1
 8008472:	e7dc      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 8008474:	4a20      	ldr	r2, [pc, #128]	; (80084f8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x154>)
 8008476:	4629      	mov	r1, r5
 8008478:	6812      	ldr	r2, [r2, #0]
 800847a:	4620      	mov	r0, r4
 800847c:	f001 fdc6 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 8008480:	9b04      	ldr	r3, [sp, #16]
 8008482:	4683      	mov	fp, r0
 8008484:	e7b0      	b.n	80083e8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x44>
 8008486:	2d01      	cmp	r5, #1
 8008488:	d03c      	beq.n	8008504 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x160>
 800848a:	b125      	cbz	r5, 8008496 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xf2>
 800848c:	2d07      	cmp	r5, #7
 800848e:	d00e      	beq.n	80084ae <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x10a>
 8008490:	2d09      	cmp	r5, #9
 8008492:	f000 81fd 	beq.w	8008890 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4ec>
 8008496:	4628      	mov	r0, r5
 8008498:	9304      	str	r3, [sp, #16]
 800849a:	f006 f8bb 	bl	800e614 <TfLiteTypeGetName>
 800849e:	9b04      	ldr	r3, [sp, #16]
 80084a0:	4601      	mov	r1, r0
 80084a2:	7a1a      	ldrb	r2, [r3, #8]
 80084a4:	4815      	ldr	r0, [pc, #84]	; (80084fc <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x158>)
 80084a6:	f005 feb3 	bl	800e210 <_Z11MicroPrintfPKcz>
 80084aa:	2001      	movs	r0, #1
 80084ac:	e7bf      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 80084ae:	f1bb 0f00 	cmp.w	fp, #0
 80084b2:	f000 81f6 	beq.w	80088a2 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4fe>
 80084b6:	f89b 0008 	ldrb.w	r0, [fp, #8]
 80084ba:	2802      	cmp	r0, #2
 80084bc:	f000 81f1 	beq.w	80088a2 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4fe>
 80084c0:	2804      	cmp	r0, #4
 80084c2:	f040 81f5 	bne.w	80088b0 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x50c>
 80084c6:	e9cd b701 	strd	fp, r7, [sp, #4]
 80084ca:	9600      	str	r6, [sp, #0]
 80084cc:	4620      	mov	r0, r4
 80084ce:	f7ff fdf7 	bl	80080c0 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIsxL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>
 80084d2:	e7ac      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 80084d4:	080253d8 	.word	0x080253d8
 80084d8:	20011294 	.word	0x20011294
 80084dc:	080253e0 	.word	0x080253e0
 80084e0:	080253dc 	.word	0x080253dc
 80084e4:	08024aa8 	.word	0x08024aa8
 80084e8:	08024ab8 	.word	0x08024ab8
 80084ec:	08024a8c 	.word	0x08024a8c
 80084f0:	080249f8 	.word	0x080249f8
 80084f4:	08024ac4 	.word	0x08024ac4
 80084f8:	080253d4 	.word	0x080253d4
 80084fc:	08024cf8 	.word	0x08024cf8
 8008500:	00000000 	.word	0x00000000
 8008504:	a832      	add	r0, sp, #200	; 0xc8
 8008506:	9304      	str	r3, [sp, #16]
 8008508:	f001 fb24 	bl	8009b54 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE>
 800850c:	9b04      	ldr	r3, [sp, #16]
 800850e:	a840      	add	r0, sp, #256	; 0x100
 8008510:	4619      	mov	r1, r3
 8008512:	f001 fdd7 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008516:	9b04      	ldr	r3, [sp, #16]
 8008518:	4631      	mov	r1, r6
 800851a:	681b      	ldr	r3, [r3, #0]
 800851c:	9323      	str	r3, [sp, #140]	; 0x8c
 800851e:	a847      	add	r0, sp, #284	; 0x11c
 8008520:	f001 fdd0 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008524:	6833      	ldr	r3, [r6, #0]
 8008526:	9324      	str	r3, [sp, #144]	; 0x90
 8008528:	4659      	mov	r1, fp
 800852a:	a84e      	add	r0, sp, #312	; 0x138
 800852c:	f001 fdca 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008530:	f1bb 0f00 	cmp.w	fp, #0
 8008534:	d001      	beq.n	800853a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x196>
 8008536:	f8db b000 	ldr.w	fp, [fp]
 800853a:	4639      	mov	r1, r7
 800853c:	a855      	add	r0, sp, #340	; 0x154
 800853e:	f001 fdc1 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008542:	683b      	ldr	r3, [r7, #0]
 8008544:	9325      	str	r3, [sp, #148]	; 0x94
 8008546:	2100      	movs	r1, #0
 8008548:	a85c      	add	r0, sp, #368	; 0x170
 800854a:	f001 fdbb 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800854e:	f9bd 20d2 	ldrsh.w	r2, [sp, #210]	; 0xd2
 8008552:	9215      	str	r2, [sp, #84]	; 0x54
 8008554:	f9bd 20d4 	ldrsh.w	r2, [sp, #212]	; 0xd4
 8008558:	9216      	str	r2, [sp, #88]	; 0x58
 800855a:	f9bd 20d6 	ldrsh.w	r2, [sp, #214]	; 0xd6
 800855e:	9b40      	ldr	r3, [sp, #256]	; 0x100
 8008560:	9217      	str	r2, [sp, #92]	; 0x5c
 8008562:	f9bd 20d8 	ldrsh.w	r2, [sp, #216]	; 0xd8
 8008566:	9218      	str	r2, [sp, #96]	; 0x60
 8008568:	f9bd 20ca 	ldrsh.w	r2, [sp, #202]	; 0xca
 800856c:	9219      	str	r2, [sp, #100]	; 0x64
 800856e:	2b04      	cmp	r3, #4
 8008570:	f9bd 20cc 	ldrsh.w	r2, [sp, #204]	; 0xcc
 8008574:	eddd 5a3e 	vldr	s11, [sp, #248]	; 0xf8
 8008578:	ed9d 5a3f 	vldr	s10, [sp, #252]	; 0xfc
 800857c:	921a      	str	r2, [sp, #104]	; 0x68
 800857e:	f040 8104 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008582:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8008584:	2b04      	cmp	r3, #4
 8008586:	f040 8100 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 800858a:	9b55      	ldr	r3, [sp, #340]	; 0x154
 800858c:	2b04      	cmp	r3, #4
 800858e:	f040 80fc 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008592:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8008594:	9320      	str	r3, [sp, #128]	; 0x80
 8008596:	461a      	mov	r2, r3
 8008598:	9b56      	ldr	r3, [sp, #344]	; 0x158
 800859a:	4293      	cmp	r3, r2
 800859c:	f040 80f5 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 80085a0:	9b48      	ldr	r3, [sp, #288]	; 0x120
 80085a2:	9a59      	ldr	r2, [sp, #356]	; 0x164
 80085a4:	f8dd 8110 	ldr.w	r8, [sp, #272]	; 0x110
 80085a8:	9306      	str	r3, [sp, #24]
 80085aa:	429a      	cmp	r2, r3
 80085ac:	9221      	str	r2, [sp, #132]	; 0x84
 80085ae:	f040 80ec 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 80085b2:	f1bb 0f00 	cmp.w	fp, #0
 80085b6:	d011      	beq.n	80085dc <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x238>
 80085b8:	994e      	ldr	r1, [sp, #312]	; 0x138
 80085ba:	2900      	cmp	r1, #0
 80085bc:	f340 816f 	ble.w	800889e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4fa>
 80085c0:	ab4e      	add	r3, sp, #312	; 0x138
 80085c2:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 80085c6:	2201      	movs	r2, #1
 80085c8:	f853 0f04 	ldr.w	r0, [r3, #4]!
 80085cc:	428b      	cmp	r3, r1
 80085ce:	fb00 f202 	mul.w	r2, r0, r2
 80085d2:	d1f9      	bne.n	80085c8 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x224>
 80085d4:	9b06      	ldr	r3, [sp, #24]
 80085d6:	4293      	cmp	r3, r2
 80085d8:	f040 80d7 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 80085dc:	9b42      	ldr	r3, [sp, #264]	; 0x108
 80085de:	931b      	str	r3, [sp, #108]	; 0x6c
 80085e0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 80085e2:	9305      	str	r3, [sp, #20]
 80085e4:	9b49      	ldr	r3, [sp, #292]	; 0x124
 80085e6:	9308      	str	r3, [sp, #32]
 80085e8:	9b4a      	ldr	r3, [sp, #296]	; 0x128
 80085ea:	9f4b      	ldr	r7, [sp, #300]	; 0x12c
 80085ec:	9309      	str	r3, [sp, #36]	; 0x24
 80085ee:	fb98 f2f7 	sdiv	r2, r8, r7
 80085f2:	2a00      	cmp	r2, #0
 80085f4:	f000 80c9 	beq.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 80085f8:	fb07 8312 	mls	r3, r7, r2, r8
 80085fc:	2b00      	cmp	r3, #0
 80085fe:	f040 80c4 	bne.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008602:	9906      	ldr	r1, [sp, #24]
 8008604:	fb91 f2f2 	sdiv	r2, r1, r2
 8008608:	9226      	str	r2, [sp, #152]	; 0x98
 800860a:	2a00      	cmp	r2, #0
 800860c:	f000 80bd 	beq.w	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008610:	9a57      	ldr	r2, [sp, #348]	; 0x15c
 8008612:	920a      	str	r2, [sp, #40]	; 0x28
 8008614:	9a58      	ldr	r2, [sp, #352]	; 0x160
 8008616:	920b      	str	r2, [sp, #44]	; 0x2c
 8008618:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800861a:	2a00      	cmp	r2, #0
 800861c:	f340 8123 	ble.w	8008866 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4c2>
 8008620:	9a05      	ldr	r2, [sp, #20]
 8008622:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008624:	931f      	str	r3, [sp, #124]	; 0x7c
 8008626:	461e      	mov	r6, r3
 8008628:	fb02 f301 	mul.w	r3, r2, r1
 800862c:	9919      	ldr	r1, [sp, #100]	; 0x64
 800862e:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8008630:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8008632:	ed1f 6a4d 	vldr	s12, [pc, #-308]	; 8008500 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x15c>
 8008636:	f8cd b0c4 	str.w	fp, [sp, #196]	; 0xc4
 800863a:	425b      	negs	r3, r3
 800863c:	1a5b      	subs	r3, r3, r1
 800863e:	fb08 f103 	mul.w	r1, r8, r3
 8008642:	9113      	str	r1, [sp, #76]	; 0x4c
 8008644:	fb08 f302 	mul.w	r3, r8, r2
 8008648:	4611      	mov	r1, r2
 800864a:	e9dd 200a 	ldrd	r2, r0, [sp, #40]	; 0x28
 800864e:	fb00 f202 	mul.w	r2, r0, r2
 8008652:	fb04 f202 	mul.w	r2, r4, r2
 8008656:	922f      	str	r2, [sp, #188]	; 0xbc
 8008658:	fb01 f205 	mul.w	r2, r1, r5
 800865c:	fb08 f202 	mul.w	r2, r8, r2
 8008660:	9230      	str	r2, [sp, #192]	; 0xc0
 8008662:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8008666:	fb01 f202 	mul.w	r2, r1, r2
 800866a:	fb07 f202 	mul.w	r2, r7, r2
 800866e:	922b      	str	r2, [sp, #172]	; 0xac
 8008670:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008672:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8008674:	9612      	str	r6, [sp, #72]	; 0x48
 8008676:	fb02 f203 	mul.w	r2, r2, r3
 800867a:	fb05 f503 	mul.w	r5, r5, r3
 800867e:	0092      	lsls	r2, r2, #2
 8008680:	fb07 f301 	mul.w	r3, r7, r1
 8008684:	9229      	str	r2, [sp, #164]	; 0xa4
 8008686:	009a      	lsls	r2, r3, #2
 8008688:	922a      	str	r2, [sp, #168]	; 0xa8
 800868a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800868c:	952e      	str	r5, [sp, #184]	; 0xb8
 800868e:	fb08 f302 	mul.w	r3, r8, r2
 8008692:	009a      	lsls	r2, r3, #2
 8008694:	9228      	str	r2, [sp, #160]	; 0xa0
 8008696:	fb04 f200 	mul.w	r2, r4, r0
 800869a:	922d      	str	r2, [sp, #180]	; 0xb4
 800869c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800869e:	f8cd 801c 	str.w	r8, [sp, #28]
 80086a2:	fb08 f202 	mul.w	r2, r8, r2
 80086a6:	922c      	str	r2, [sp, #176]	; 0xb0
 80086a8:	00ba      	lsls	r2, r7, #2
 80086aa:	9227      	str	r2, [sp, #156]	; 0x9c
 80086ac:	46bb      	mov	fp, r7
 80086ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80086b0:	2b00      	cmp	r3, #0
 80086b2:	f340 80c9 	ble.w	8008848 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4a4>
 80086b6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80086b8:	425b      	negs	r3, r3
 80086ba:	930f      	str	r3, [sp, #60]	; 0x3c
 80086bc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80086be:	9311      	str	r3, [sp, #68]	; 0x44
 80086c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80086c2:	9310      	str	r3, [sp, #64]	; 0x40
 80086c4:	2300      	movs	r3, #0
 80086c6:	931e      	str	r3, [sp, #120]	; 0x78
 80086c8:	46da      	mov	sl, fp
 80086ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80086cc:	2b00      	cmp	r3, #0
 80086ce:	f340 80a7 	ble.w	8008820 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x47c>
 80086d2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80086d4:	f1c3 0b00 	rsb	fp, r3, #0
 80086d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80086da:	930e      	str	r3, [sp, #56]	; 0x38
 80086dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80086de:	930d      	str	r3, [sp, #52]	; 0x34
 80086e0:	2300      	movs	r3, #0
 80086e2:	931d      	str	r3, [sp, #116]	; 0x74
 80086e4:	46d1      	mov	r9, sl
 80086e6:	9b06      	ldr	r3, [sp, #24]
 80086e8:	2b00      	cmp	r3, #0
 80086ea:	f340 8087 	ble.w	80087fc <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x458>
 80086ee:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80086f0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80086f2:	f04f 0a00 	mov.w	sl, #0
 80086f6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80086fa:	9322      	str	r3, [sp, #136]	; 0x88
 80086fc:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8008700:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8008702:	fb9a f7f3 	sdiv	r7, sl, r3
 8008706:	9b08      	ldr	r3, [sp, #32]
 8008708:	2b00      	cmp	r3, #0
 800870a:	dd51      	ble.n	80087b0 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x40c>
 800870c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800870e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008710:	ed1f 7a85 	vldr	s14, [pc, #-532]	; 8008500 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x15c>
 8008714:	f8dd c03c 	ldr.w	ip, [sp, #60]	; 0x3c
 8008718:	fb09 f707 	mul.w	r7, r9, r7
 800871c:	18f9      	adds	r1, r7, r3
 800871e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008720:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 8008724:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8008726:	eb03 0e82 	add.w	lr, r3, r2, lsl #2
 800872a:	2300      	movs	r3, #0
 800872c:	931c      	str	r3, [sp, #112]	; 0x70
 800872e:	eb07 0309 	add.w	r3, r7, r9
 8008732:	9314      	str	r3, [sp, #80]	; 0x50
 8008734:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008736:	2b00      	cmp	r3, #0
 8008738:	f340 809a 	ble.w	8008870 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4cc>
 800873c:	4674      	mov	r4, lr
 800873e:	4608      	mov	r0, r1
 8008740:	465a      	mov	r2, fp
 8008742:	f04f 0800 	mov.w	r8, #0
 8008746:	e00b      	b.n	8008760 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3bc>
 8008748:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800874a:	441a      	add	r2, r3
 800874c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800874e:	4418      	add	r0, r3
 8008750:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8008752:	441c      	add	r4, r3
 8008754:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008756:	f108 0801 	add.w	r8, r8, #1
 800875a:	4543      	cmp	r3, r8
 800875c:	f000 8088 	beq.w	8008870 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4cc>
 8008760:	2a00      	cmp	r2, #0
 8008762:	dbf1      	blt.n	8008748 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3a4>
 8008764:	9b05      	ldr	r3, [sp, #20]
 8008766:	4293      	cmp	r3, r2
 8008768:	ddee      	ble.n	8008748 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3a4>
 800876a:	f1bc 0f00 	cmp.w	ip, #0
 800876e:	dbeb      	blt.n	8008748 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3a4>
 8008770:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8008772:	4563      	cmp	r3, ip
 8008774:	dde8      	ble.n	8008748 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3a4>
 8008776:	f1b9 0f00 	cmp.w	r9, #0
 800877a:	dde5      	ble.n	8008748 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3a4>
 800877c:	463b      	mov	r3, r7
 800877e:	4626      	mov	r6, r4
 8008780:	4605      	mov	r5, r0
 8008782:	9204      	str	r2, [sp, #16]
 8008784:	9a07      	ldr	r2, [sp, #28]
 8008786:	b912      	cbnz	r2, 800878e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3ea>
 8008788:	b133      	cbz	r3, 8008798 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3f4>
 800878a:	f014 f911 	bl	801c9b0 <abort>
 800878e:	2b00      	cmp	r3, #0
 8008790:	dbfb      	blt.n	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008792:	9a07      	ldr	r2, [sp, #28]
 8008794:	429a      	cmp	r2, r3
 8008796:	ddf8      	ble.n	800878a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e6>
 8008798:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800879a:	ecf5 6a01 	vldmia	r5!, {s13}
 800879e:	ecf6 7a01 	vldmia	r6!, {s15}
 80087a2:	3301      	adds	r3, #1
 80087a4:	429a      	cmp	r2, r3
 80087a6:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80087aa:	d1eb      	bne.n	8008784 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3e0>
 80087ac:	9a04      	ldr	r2, [sp, #16]
 80087ae:	e7cb      	b.n	8008748 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x3a4>
 80087b0:	ed1f 7aad 	vldr	s14, [pc, #-692]	; 8008500 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x15c>
 80087b4:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80087b6:	2b00      	cmp	r3, #0
 80087b8:	d057      	beq.n	800886a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x4c6>
 80087ba:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 80087be:	edd3 7a00 	vldr	s15, [r3]
 80087c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80087c4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80087c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80087ca:	f10a 0a01 	add.w	sl, sl, #1
 80087ce:	eef4 5a67 	vcmp.f32	s11, s15
 80087d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80087d6:	bfc8      	it	gt
 80087d8:	eef0 7a65 	vmovgt.f32	s15, s11
 80087dc:	eeb4 5a67 	vcmp.f32	s10, s15
 80087e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80087e4:	bf48      	it	mi
 80087e6:	eef0 7a45 	vmovmi.f32	s15, s10
 80087ea:	ece3 7a01 	vstmia	r3!, {s15}
 80087ee:	9322      	str	r3, [sp, #136]	; 0x88
 80087f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80087f2:	4413      	add	r3, r2
 80087f4:	930c      	str	r3, [sp, #48]	; 0x30
 80087f6:	9b06      	ldr	r3, [sp, #24]
 80087f8:	459a      	cmp	sl, r3
 80087fa:	d181      	bne.n	8008700 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x35c>
 80087fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80087fe:	9921      	ldr	r1, [sp, #132]	; 0x84
 8008800:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8008802:	440a      	add	r2, r1
 8008804:	920d      	str	r2, [sp, #52]	; 0x34
 8008806:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8008808:	992c      	ldr	r1, [sp, #176]	; 0xb0
 800880a:	4493      	add	fp, r2
 800880c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800880e:	440a      	add	r2, r1
 8008810:	920e      	str	r2, [sp, #56]	; 0x38
 8008812:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008814:	3301      	adds	r3, #1
 8008816:	429a      	cmp	r2, r3
 8008818:	931d      	str	r3, [sp, #116]	; 0x74
 800881a:	f47f af64 	bne.w	80086e6 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x342>
 800881e:	46ca      	mov	sl, r9
 8008820:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8008822:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008824:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008826:	440a      	add	r2, r1
 8008828:	920f      	str	r2, [sp, #60]	; 0x3c
 800882a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800882c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800882e:	440a      	add	r2, r1
 8008830:	9210      	str	r2, [sp, #64]	; 0x40
 8008832:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8008834:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8008836:	440a      	add	r2, r1
 8008838:	9211      	str	r2, [sp, #68]	; 0x44
 800883a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800883c:	3301      	adds	r3, #1
 800883e:	429a      	cmp	r2, r3
 8008840:	931e      	str	r3, [sp, #120]	; 0x78
 8008842:	f47f af42 	bne.w	80086ca <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x326>
 8008846:	46d3      	mov	fp, sl
 8008848:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800884a:	992f      	ldr	r1, [sp, #188]	; 0xbc
 800884c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800884e:	440a      	add	r2, r1
 8008850:	9212      	str	r2, [sp, #72]	; 0x48
 8008852:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8008854:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8008856:	440a      	add	r2, r1
 8008858:	9213      	str	r2, [sp, #76]	; 0x4c
 800885a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800885c:	3301      	adds	r3, #1
 800885e:	4293      	cmp	r3, r2
 8008860:	931f      	str	r3, [sp, #124]	; 0x7c
 8008862:	f47f af24 	bne.w	80086ae <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x30a>
 8008866:	2000      	movs	r0, #0
 8008868:	e5e1      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 800886a:	eef0 7a46 	vmov.f32	s15, s12
 800886e:	e7a8      	b.n	80087c2 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x41e>
 8008870:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008872:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008874:	4494      	add	ip, r2
 8008876:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8008878:	4411      	add	r1, r2
 800887a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 800887c:	4496      	add	lr, r2
 800887e:	9a08      	ldr	r2, [sp, #32]
 8008880:	3301      	adds	r3, #1
 8008882:	429a      	cmp	r2, r3
 8008884:	931c      	str	r3, [sp, #112]	; 0x70
 8008886:	f47f af55 	bne.w	8008734 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x390>
 800888a:	e793      	b.n	80087b4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x410>
 800888c:	f015 f856 	bl	801d93c <__stack_chk_fail>
 8008890:	e9cd b701 	strd	fp, r7, [sp, #4]
 8008894:	9600      	str	r6, [sp, #0]
 8008896:	4620      	mov	r0, r4
 8008898:	f7ff fc90 	bl	80081bc <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIalL10TfLiteType9EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>
 800889c:	e5c7      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 800889e:	2201      	movs	r2, #1
 80088a0:	e698      	b.n	80085d4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x230>
 80088a2:	e9cd b701 	strd	fp, r7, [sp, #4]
 80088a6:	9600      	str	r6, [sp, #0]
 80088a8:	4620      	mov	r0, r4
 80088aa:	f7ff fb8b 	bl	8007fc4 <_ZN6tflite12_GLOBAL__N_123EvalQuantizedPerChannelIslL10TfLiteType7EEE12TfLiteStatusP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsRKNS0_6OpDataEPK16TfLiteEvalTensorSG_SG_PSE_.constprop.0>
 80088ae:	e5be      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 80088b0:	f005 feb0 	bl	800e614 <TfLiteTypeGetName>
 80088b4:	f89b 2008 	ldrb.w	r2, [fp, #8]
 80088b8:	4601      	mov	r1, r0
 80088ba:	4802      	ldr	r0, [pc, #8]	; (80088c4 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x520>)
 80088bc:	f005 fca8 	bl	800e210 <_Z11MicroPrintfPKcz>
 80088c0:	2001      	movs	r0, #1
 80088c2:	e5b4      	b.n	800842e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x8a>
 80088c4:	08024cb0 	.word	0x08024cb0

080088c8 <_ZN6tflite16Register_CONV_2DEv>:
 80088c8:	b510      	push	{r4, lr}
 80088ca:	2100      	movs	r1, #0
 80088cc:	b084      	sub	sp, #16
 80088ce:	e9cd 1100 	strd	r1, r1, [sp]
 80088d2:	490b      	ldr	r1, [pc, #44]	; (8008900 <_ZN6tflite16Register_CONV_2DEv+0x38>)
 80088d4:	4b0b      	ldr	r3, [pc, #44]	; (8008904 <_ZN6tflite16Register_CONV_2DEv+0x3c>)
 80088d6:	4a0c      	ldr	r2, [pc, #48]	; (8008908 <_ZN6tflite16Register_CONV_2DEv+0x40>)
 80088d8:	6809      	ldr	r1, [r1, #0]
 80088da:	9103      	str	r1, [sp, #12]
 80088dc:	f04f 0100 	mov.w	r1, #0
 80088e0:	490a      	ldr	r1, [pc, #40]	; (800890c <_ZN6tflite16Register_CONV_2DEv+0x44>)
 80088e2:	4604      	mov	r4, r0
 80088e4:	f001 fb72 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 80088e8:	4b05      	ldr	r3, [pc, #20]	; (8008900 <_ZN6tflite16Register_CONV_2DEv+0x38>)
 80088ea:	681a      	ldr	r2, [r3, #0]
 80088ec:	9b03      	ldr	r3, [sp, #12]
 80088ee:	405a      	eors	r2, r3
 80088f0:	f04f 0300 	mov.w	r3, #0
 80088f4:	d102      	bne.n	80088fc <_ZN6tflite16Register_CONV_2DEv+0x34>
 80088f6:	4620      	mov	r0, r4
 80088f8:	b004      	add	sp, #16
 80088fa:	bd10      	pop	{r4, pc}
 80088fc:	f015 f81e 	bl	801d93c <__stack_chk_fail>
 8008900:	20011294 	.word	0x20011294
 8008904:	080083a5 	.word	0x080083a5
 8008908:	08007ac9 	.word	0x08007ac9
 800890c:	08007a91 	.word	0x08007a91

08008910 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj>:
 8008910:	b500      	push	{lr}
 8008912:	4b0c      	ldr	r3, [pc, #48]	; (8008944 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 8008914:	b083      	sub	sp, #12
 8008916:	681b      	ldr	r3, [r3, #0]
 8008918:	9301      	str	r3, [sp, #4]
 800891a:	f04f 0300 	mov.w	r3, #0
 800891e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8008920:	b16b      	cbz	r3, 800893e <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2e>
 8008922:	4a08      	ldr	r2, [pc, #32]	; (8008944 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 8008924:	6811      	ldr	r1, [r2, #0]
 8008926:	9a01      	ldr	r2, [sp, #4]
 8008928:	4051      	eors	r1, r2
 800892a:	f04f 0200 	mov.w	r2, #0
 800892e:	d104      	bne.n	800893a <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2a>
 8008930:	2140      	movs	r1, #64	; 0x40
 8008932:	b003      	add	sp, #12
 8008934:	f85d eb04 	ldr.w	lr, [sp], #4
 8008938:	4718      	bx	r3
 800893a:	f014 ffff 	bl	801d93c <__stack_chk_fail>
 800893e:	f014 f837 	bl	801c9b0 <abort>
 8008942:	bf00      	nop
 8008944:	20011294 	.word	0x20011294

08008948 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0>:
 8008948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800894c:	b0b7      	sub	sp, #220	; 0xdc
 800894e:	461e      	mov	r6, r3
 8008950:	f8dd a104 	ldr.w	sl, [sp, #260]	; 0x104
 8008954:	4b8d      	ldr	r3, [pc, #564]	; (8008b8c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x244>)
 8008956:	f8dd 8100 	ldr.w	r8, [sp, #256]	; 0x100
 800895a:	4681      	mov	r9, r0
 800895c:	460c      	mov	r4, r1
 800895e:	a82e      	add	r0, sp, #184	; 0xb8
 8008960:	4651      	mov	r1, sl
 8008962:	681b      	ldr	r3, [r3, #0]
 8008964:	9335      	str	r3, [sp, #212]	; 0xd4
 8008966:	f04f 0300 	mov.w	r3, #0
 800896a:	4617      	mov	r7, r2
 800896c:	f001 fbaa 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008970:	f8dd b0b8 	ldr.w	fp, [sp, #184]	; 0xb8
 8008974:	f1ab 0302 	sub.w	r3, fp, #2
 8008978:	2b02      	cmp	r3, #2
 800897a:	f200 8105 	bhi.w	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 800897e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008980:	9316      	str	r3, [sp, #88]	; 0x58
 8008982:	931a      	str	r3, [sp, #104]	; 0x68
 8008984:	931e      	str	r3, [sp, #120]	; 0x78
 8008986:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008988:	930f      	str	r3, [sp, #60]	; 0x3c
 800898a:	931b      	str	r3, [sp, #108]	; 0x6c
 800898c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800898e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008990:	e9cd 3312 	strd	r3, r3, [sp, #72]	; 0x48
 8008994:	2300      	movs	r3, #0
 8008996:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 800899a:	6823      	ldr	r3, [r4, #0]
 800899c:	9309      	str	r3, [sp, #36]	; 0x24
 800899e:	2501      	movs	r5, #1
 80089a0:	6863      	ldr	r3, [r4, #4]
 80089a2:	9519      	str	r5, [sp, #100]	; 0x64
 80089a4:	2900      	cmp	r1, #0
 80089a6:	e9cd 5510 	strd	r5, r5, [sp, #64]	; 0x40
 80089aa:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 80089ae:	e9cd 5517 	strd	r5, r5, [sp, #92]	; 0x5c
 80089b2:	e9cd 551c 	strd	r5, r5, [sp, #112]	; 0x70
 80089b6:	930a      	str	r3, [sp, #40]	; 0x28
 80089b8:	db04      	blt.n	80089c4 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x7c>
 80089ba:	f8d9 3044 	ldr.w	r3, [r9, #68]	; 0x44
 80089be:	4648      	mov	r0, r9
 80089c0:	4798      	blx	r3
 80089c2:	900b      	str	r0, [sp, #44]	; 0x2c
 80089c4:	f1b8 0f00 	cmp.w	r8, #0
 80089c8:	d001      	beq.n	80089ce <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x86>
 80089ca:	f8d8 8000 	ldr.w	r8, [r8]
 80089ce:	f1bb 0f02 	cmp.w	fp, #2
 80089d2:	d06c      	beq.n	8008aae <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x166>
 80089d4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80089d6:	f011 0103 	ands.w	r1, r1, #3
 80089da:	d168      	bne.n	8008aae <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x166>
 80089dc:	6963      	ldr	r3, [r4, #20]
 80089de:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80089e0:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80089e2:	900d      	str	r0, [sp, #52]	; 0x34
 80089e4:	425b      	negs	r3, r3
 80089e6:	9324      	str	r3, [sp, #144]	; 0x90
 80089e8:	2301      	movs	r3, #1
 80089ea:	e9cd 332a 	strd	r3, r3, [sp, #168]	; 0xa8
 80089ee:	e9cd 3326 	strd	r3, r3, [sp, #152]	; 0x98
 80089f2:	69e3      	ldr	r3, [r4, #28]
 80089f4:	9325      	str	r3, [sp, #148]	; 0x94
 80089f6:	68a3      	ldr	r3, [r4, #8]
 80089f8:	932c      	str	r3, [sp, #176]	; 0xb0
 80089fa:	68e3      	ldr	r3, [r4, #12]
 80089fc:	932d      	str	r3, [sp, #180]	; 0xb4
 80089fe:	2a00      	cmp	r2, #0
 8008a00:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008a02:	930e      	str	r3, [sp, #56]	; 0x38
 8008a04:	e9cd 1128 	strd	r1, r1, [sp, #160]	; 0xa0
 8008a08:	dd0b      	ble.n	8008a22 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0xda>
 8008a0a:	3804      	subs	r0, #4
 8008a0c:	3b04      	subs	r3, #4
 8008a0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008a10:	f840 2f04 	str.w	r2, [r0, #4]!
 8008a14:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008a16:	f843 2f04 	str.w	r2, [r3, #4]!
 8008a1a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008a1c:	3101      	adds	r1, #1
 8008a1e:	428a      	cmp	r2, r1
 8008a20:	dcf5      	bgt.n	8008a0e <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0xc6>
 8008a22:	2f00      	cmp	r7, #0
 8008a24:	f000 80b0 	beq.w	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008a28:	683b      	ldr	r3, [r7, #0]
 8008a2a:	2e00      	cmp	r6, #0
 8008a2c:	f000 80ac 	beq.w	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008a30:	6832      	ldr	r2, [r6, #0]
 8008a32:	f1ba 0f00 	cmp.w	sl, #0
 8008a36:	f000 80a7 	beq.w	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008a3a:	9202      	str	r2, [sp, #8]
 8008a3c:	9300      	str	r3, [sp, #0]
 8008a3e:	f8cd 8010 	str.w	r8, [sp, #16]
 8008a42:	f8da 3000 	ldr.w	r3, [sl]
 8008a46:	9306      	str	r3, [sp, #24]
 8008a48:	ab1b      	add	r3, sp, #108	; 0x6c
 8008a4a:	9305      	str	r3, [sp, #20]
 8008a4c:	ab17      	add	r3, sp, #92	; 0x5c
 8008a4e:	9303      	str	r3, [sp, #12]
 8008a50:	ab13      	add	r3, sp, #76	; 0x4c
 8008a52:	9301      	str	r3, [sp, #4]
 8008a54:	aa0d      	add	r2, sp, #52	; 0x34
 8008a56:	ab0f      	add	r3, sp, #60	; 0x3c
 8008a58:	a924      	add	r1, sp, #144	; 0x90
 8008a5a:	a80b      	add	r0, sp, #44	; 0x2c
 8008a5c:	f009 fafe 	bl	801205c <arm_convolve_1x1_s8_fast>
 8008a60:	2800      	cmp	r0, #0
 8008a62:	d050      	beq.n	8008b06 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x1be>
 8008a64:	ab1b      	add	r3, sp, #108	; 0x6c
 8008a66:	e9cd 8304 	strd	r8, r3, [sp, #16]
 8008a6a:	ab17      	add	r3, sp, #92	; 0x5c
 8008a6c:	9303      	str	r3, [sp, #12]
 8008a6e:	ab13      	add	r3, sp, #76	; 0x4c
 8008a70:	9301      	str	r3, [sp, #4]
 8008a72:	f8da 3000 	ldr.w	r3, [sl]
 8008a76:	9306      	str	r3, [sp, #24]
 8008a78:	6833      	ldr	r3, [r6, #0]
 8008a7a:	9302      	str	r3, [sp, #8]
 8008a7c:	683b      	ldr	r3, [r7, #0]
 8008a7e:	9300      	str	r3, [sp, #0]
 8008a80:	aa0d      	add	r2, sp, #52	; 0x34
 8008a82:	ab0f      	add	r3, sp, #60	; 0x3c
 8008a84:	a924      	add	r1, sp, #144	; 0x90
 8008a86:	a80b      	add	r0, sp, #44	; 0x2c
 8008a88:	f8d9 4014 	ldr.w	r4, [r9, #20]
 8008a8c:	f009 fae6 	bl	801205c <arm_convolve_1x1_s8_fast>
 8008a90:	493f      	ldr	r1, [pc, #252]	; (8008b90 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x248>)
 8008a92:	4b40      	ldr	r3, [pc, #256]	; (8008b94 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x24c>)
 8008a94:	2200      	movs	r2, #0
 8008a96:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8008a9a:	e9cd 3100 	strd	r3, r1, [sp]
 8008a9e:	4648      	mov	r0, r9
 8008aa0:	4a3d      	ldr	r2, [pc, #244]	; (8008b98 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x250>)
 8008aa2:	493e      	ldr	r1, [pc, #248]	; (8008b9c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x254>)
 8008aa4:	f44f 7391 	mov.w	r3, #290	; 0x122
 8008aa8:	47a0      	blx	r4
 8008aaa:	2001      	movs	r0, #1
 8008aac:	e02b      	b.n	8008b06 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x1be>
 8008aae:	6963      	ldr	r3, [r4, #20]
 8008ab0:	69e2      	ldr	r2, [r4, #28]
 8008ab2:	9221      	str	r2, [sp, #132]	; 0x84
 8008ab4:	425b      	negs	r3, r3
 8008ab6:	931f      	str	r3, [sp, #124]	; 0x7c
 8008ab8:	69a3      	ldr	r3, [r4, #24]
 8008aba:	68a2      	ldr	r2, [r4, #8]
 8008abc:	9222      	str	r2, [sp, #136]	; 0x88
 8008abe:	425b      	negs	r3, r3
 8008ac0:	9320      	str	r3, [sp, #128]	; 0x80
 8008ac2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008ac4:	68e2      	ldr	r2, [r4, #12]
 8008ac6:	9223      	str	r2, [sp, #140]	; 0x8c
 8008ac8:	b33b      	cbz	r3, 8008b1a <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x1d2>
 8008aca:	930b      	str	r3, [sp, #44]	; 0x2c
 8008acc:	2f00      	cmp	r7, #0
 8008ace:	d05b      	beq.n	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008ad0:	683a      	ldr	r2, [r7, #0]
 8008ad2:	2e00      	cmp	r6, #0
 8008ad4:	d058      	beq.n	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008ad6:	6833      	ldr	r3, [r6, #0]
 8008ad8:	f1ba 0f00 	cmp.w	sl, #0
 8008adc:	d054      	beq.n	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008ade:	9200      	str	r2, [sp, #0]
 8008ae0:	9302      	str	r3, [sp, #8]
 8008ae2:	f8cd 8010 	str.w	r8, [sp, #16]
 8008ae6:	f8da 3000 	ldr.w	r3, [sl]
 8008aea:	9306      	str	r3, [sp, #24]
 8008aec:	ab1b      	add	r3, sp, #108	; 0x6c
 8008aee:	9305      	str	r3, [sp, #20]
 8008af0:	ab17      	add	r3, sp, #92	; 0x5c
 8008af2:	9303      	str	r3, [sp, #12]
 8008af4:	ab13      	add	r3, sp, #76	; 0x4c
 8008af6:	9301      	str	r3, [sp, #4]
 8008af8:	aa09      	add	r2, sp, #36	; 0x24
 8008afa:	ab0f      	add	r3, sp, #60	; 0x3c
 8008afc:	a91f      	add	r1, sp, #124	; 0x7c
 8008afe:	a80b      	add	r0, sp, #44	; 0x2c
 8008b00:	f009 f988 	bl	8011e14 <arm_fully_connected_s8>
 8008b04:	b9c8      	cbnz	r0, 8008b3a <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x1f2>
 8008b06:	4b21      	ldr	r3, [pc, #132]	; (8008b8c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x244>)
 8008b08:	681a      	ldr	r2, [r3, #0]
 8008b0a:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8008b0c:	405a      	eors	r2, r3
 8008b0e:	f04f 0300 	mov.w	r3, #0
 8008b12:	d137      	bne.n	8008b84 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x23c>
 8008b14:	b037      	add	sp, #220	; 0xdc
 8008b16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b1a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008b1c:	2800      	cmp	r0, #0
 8008b1e:	d0d5      	beq.n	8008acc <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x184>
 8008b20:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8008b22:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8008b24:	2e00      	cmp	r6, #0
 8008b26:	d02f      	beq.n	8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008b28:	9301      	str	r3, [sp, #4]
 8008b2a:	2301      	movs	r3, #1
 8008b2c:	9300      	str	r3, [sp, #0]
 8008b2e:	6833      	ldr	r3, [r6, #0]
 8008b30:	f009 f9ac 	bl	8011e8c <arm_vector_sum_s8>
 8008b34:	b347      	cbz	r7, 8008b88 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x240>
 8008b36:	683a      	ldr	r2, [r7, #0]
 8008b38:	e7cd      	b.n	8008ad6 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x18e>
 8008b3a:	ab1b      	add	r3, sp, #108	; 0x6c
 8008b3c:	e9cd 8304 	strd	r8, r3, [sp, #16]
 8008b40:	ab17      	add	r3, sp, #92	; 0x5c
 8008b42:	9303      	str	r3, [sp, #12]
 8008b44:	ab13      	add	r3, sp, #76	; 0x4c
 8008b46:	9301      	str	r3, [sp, #4]
 8008b48:	f8da 3000 	ldr.w	r3, [sl]
 8008b4c:	9306      	str	r3, [sp, #24]
 8008b4e:	6833      	ldr	r3, [r6, #0]
 8008b50:	9302      	str	r3, [sp, #8]
 8008b52:	683b      	ldr	r3, [r7, #0]
 8008b54:	9300      	str	r3, [sp, #0]
 8008b56:	aa09      	add	r2, sp, #36	; 0x24
 8008b58:	ab0f      	add	r3, sp, #60	; 0x3c
 8008b5a:	a91f      	add	r1, sp, #124	; 0x7c
 8008b5c:	a80b      	add	r0, sp, #44	; 0x2c
 8008b5e:	f8d9 4014 	ldr.w	r4, [r9, #20]
 8008b62:	f009 f957 	bl	8011e14 <arm_fully_connected_s8>
 8008b66:	490a      	ldr	r1, [pc, #40]	; (8008b90 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x248>)
 8008b68:	4b0d      	ldr	r3, [pc, #52]	; (8008ba0 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x258>)
 8008b6a:	2200      	movs	r2, #0
 8008b6c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8008b70:	e9cd 3100 	strd	r3, r1, [sp]
 8008b74:	4648      	mov	r0, r9
 8008b76:	4a08      	ldr	r2, [pc, #32]	; (8008b98 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x250>)
 8008b78:	4908      	ldr	r1, [pc, #32]	; (8008b9c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x254>)
 8008b7a:	f240 133b 	movw	r3, #315	; 0x13b
 8008b7e:	47a0      	blx	r4
 8008b80:	2001      	movs	r0, #1
 8008b82:	e7c0      	b.n	8008b06 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x1be>
 8008b84:	f014 feda 	bl	801d93c <__stack_chk_fail>
 8008b88:	f013 ff12 	bl	801c9b0 <abort>
 8008b8c:	20011294 	.word	0x20011294
 8008b90:	08024d9c 	.word	0x08024d9c
 8008b94:	08024db4 	.word	0x08024db4
 8008b98:	08024d14 	.word	0x08024d14
 8008b9c:	08024a8c 	.word	0x08024a8c
 8008ba0:	08024ec8 	.word	0x08024ec8

08008ba4 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0>:
 8008ba4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008ba8:	460c      	mov	r4, r1
 8008baa:	b0a3      	sub	sp, #140	; 0x8c
 8008bac:	4942      	ldr	r1, [pc, #264]	; (8008cb8 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x114>)
 8008bae:	461f      	mov	r7, r3
 8008bb0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008bb2:	6809      	ldr	r1, [r1, #0]
 8008bb4:	9121      	str	r1, [sp, #132]	; 0x84
 8008bb6:	f04f 0100 	mov.w	r1, #0
 8008bba:	9313      	str	r3, [sp, #76]	; 0x4c
 8008bbc:	9317      	str	r3, [sp, #92]	; 0x5c
 8008bbe:	931b      	str	r3, [sp, #108]	; 0x6c
 8008bc0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008bc2:	930c      	str	r3, [sp, #48]	; 0x30
 8008bc4:	9318      	str	r3, [sp, #96]	; 0x60
 8008bc6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008bc8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008bca:	e9cd 330f 	strd	r3, r3, [sp, #60]	; 0x3c
 8008bce:	2300      	movs	r3, #0
 8008bd0:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8008bd4:	6823      	ldr	r3, [r4, #0]
 8008bd6:	9308      	str	r3, [sp, #32]
 8008bd8:	2501      	movs	r5, #1
 8008bda:	6863      	ldr	r3, [r4, #4]
 8008bdc:	9516      	str	r5, [sp, #88]	; 0x58
 8008bde:	2900      	cmp	r1, #0
 8008be0:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
 8008be4:	e9cd 5511 	strd	r5, r5, [sp, #68]	; 0x44
 8008be8:	e9cd 5514 	strd	r5, r5, [sp, #80]	; 0x50
 8008bec:	e9cd 5519 	strd	r5, r5, [sp, #100]	; 0x64
 8008bf0:	4680      	mov	r8, r0
 8008bf2:	e9dd 592a 	ldrd	r5, r9, [sp, #168]	; 0xa8
 8008bf6:	4616      	mov	r6, r2
 8008bf8:	9309      	str	r3, [sp, #36]	; 0x24
 8008bfa:	db02      	blt.n	8008c02 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x5e>
 8008bfc:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008bfe:	4798      	blx	r3
 8008c00:	900a      	str	r0, [sp, #40]	; 0x28
 8008c02:	b105      	cbz	r5, 8008c06 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x62>
 8008c04:	682d      	ldr	r5, [r5, #0]
 8008c06:	6963      	ldr	r3, [r4, #20]
 8008c08:	425b      	negs	r3, r3
 8008c0a:	931c      	str	r3, [sp, #112]	; 0x70
 8008c0c:	69e3      	ldr	r3, [r4, #28]
 8008c0e:	931e      	str	r3, [sp, #120]	; 0x78
 8008c10:	68a3      	ldr	r3, [r4, #8]
 8008c12:	931f      	str	r3, [sp, #124]	; 0x7c
 8008c14:	68e3      	ldr	r3, [r4, #12]
 8008c16:	9320      	str	r3, [sp, #128]	; 0x80
 8008c18:	2400      	movs	r4, #0
 8008c1a:	941d      	str	r4, [sp, #116]	; 0x74
 8008c1c:	2e00      	cmp	r6, #0
 8008c1e:	d049      	beq.n	8008cb4 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x110>
 8008c20:	6833      	ldr	r3, [r6, #0]
 8008c22:	2f00      	cmp	r7, #0
 8008c24:	d046      	beq.n	8008cb4 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x110>
 8008c26:	683a      	ldr	r2, [r7, #0]
 8008c28:	f1b9 0f00 	cmp.w	r9, #0
 8008c2c:	d042      	beq.n	8008cb4 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x110>
 8008c2e:	9202      	str	r2, [sp, #8]
 8008c30:	9300      	str	r3, [sp, #0]
 8008c32:	9504      	str	r5, [sp, #16]
 8008c34:	f8d9 3000 	ldr.w	r3, [r9]
 8008c38:	9306      	str	r3, [sp, #24]
 8008c3a:	ab18      	add	r3, sp, #96	; 0x60
 8008c3c:	9305      	str	r3, [sp, #20]
 8008c3e:	ab14      	add	r3, sp, #80	; 0x50
 8008c40:	9303      	str	r3, [sp, #12]
 8008c42:	ab10      	add	r3, sp, #64	; 0x40
 8008c44:	9301      	str	r3, [sp, #4]
 8008c46:	aa08      	add	r2, sp, #32
 8008c48:	ab0c      	add	r3, sp, #48	; 0x30
 8008c4a:	a91c      	add	r1, sp, #112	; 0x70
 8008c4c:	a80a      	add	r0, sp, #40	; 0x28
 8008c4e:	f009 f94f 	bl	8011ef0 <arm_fully_connected_s16>
 8008c52:	b948      	cbnz	r0, 8008c68 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0xc4>
 8008c54:	4b18      	ldr	r3, [pc, #96]	; (8008cb8 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x114>)
 8008c56:	681a      	ldr	r2, [r3, #0]
 8008c58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008c5a:	405a      	eors	r2, r3
 8008c5c:	f04f 0300 	mov.w	r3, #0
 8008c60:	d126      	bne.n	8008cb0 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x10c>
 8008c62:	b023      	add	sp, #140	; 0x8c
 8008c64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008c68:	ab18      	add	r3, sp, #96	; 0x60
 8008c6a:	e9cd 5304 	strd	r5, r3, [sp, #16]
 8008c6e:	ab14      	add	r3, sp, #80	; 0x50
 8008c70:	9303      	str	r3, [sp, #12]
 8008c72:	ab10      	add	r3, sp, #64	; 0x40
 8008c74:	9301      	str	r3, [sp, #4]
 8008c76:	f8d9 3000 	ldr.w	r3, [r9]
 8008c7a:	9306      	str	r3, [sp, #24]
 8008c7c:	683b      	ldr	r3, [r7, #0]
 8008c7e:	9302      	str	r3, [sp, #8]
 8008c80:	6833      	ldr	r3, [r6, #0]
 8008c82:	9300      	str	r3, [sp, #0]
 8008c84:	aa08      	add	r2, sp, #32
 8008c86:	ab0c      	add	r3, sp, #48	; 0x30
 8008c88:	a91c      	add	r1, sp, #112	; 0x70
 8008c8a:	a80a      	add	r0, sp, #40	; 0x28
 8008c8c:	f8d8 5014 	ldr.w	r5, [r8, #20]
 8008c90:	f009 f92e 	bl	8011ef0 <arm_fully_connected_s16>
 8008c94:	4909      	ldr	r1, [pc, #36]	; (8008cbc <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x118>)
 8008c96:	4b0a      	ldr	r3, [pc, #40]	; (8008cc0 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x11c>)
 8008c98:	4a0a      	ldr	r2, [pc, #40]	; (8008cc4 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x120>)
 8008c9a:	e9cd 3100 	strd	r3, r1, [sp]
 8008c9e:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008ca2:	4909      	ldr	r1, [pc, #36]	; (8008cc8 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x124>)
 8008ca4:	4640      	mov	r0, r8
 8008ca6:	f240 1361 	movw	r3, #353	; 0x161
 8008caa:	47a8      	blx	r5
 8008cac:	2001      	movs	r0, #1
 8008cae:	e7d1      	b.n	8008c54 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0xb0>
 8008cb0:	f014 fe44 	bl	801d93c <__stack_chk_fail>
 8008cb4:	f013 fe7c 	bl	801c9b0 <abort>
 8008cb8:	20011294 	.word	0x20011294
 8008cbc:	08024d9c 	.word	0x08024d9c
 8008cc0:	08024fcc 	.word	0x08024fcc
 8008cc4:	08024d14 	.word	0x08024d14
 8008cc8:	08024a8c 	.word	0x08024a8c

08008ccc <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0>:
 8008ccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008cd0:	b0aa      	sub	sp, #168	; 0xa8
 8008cd2:	461f      	mov	r7, r3
 8008cd4:	f8dd a0cc 	ldr.w	sl, [sp, #204]	; 0xcc
 8008cd8:	4b49      	ldr	r3, [pc, #292]	; (8008e00 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x134>)
 8008cda:	f8dd 80c8 	ldr.w	r8, [sp, #200]	; 0xc8
 8008cde:	4681      	mov	r9, r0
 8008ce0:	460c      	mov	r4, r1
 8008ce2:	a822      	add	r0, sp, #136	; 0x88
 8008ce4:	4651      	mov	r1, sl
 8008ce6:	681b      	ldr	r3, [r3, #0]
 8008ce8:	9329      	str	r3, [sp, #164]	; 0xa4
 8008cea:	f04f 0300 	mov.w	r3, #0
 8008cee:	4616      	mov	r6, r2
 8008cf0:	f001 f9e8 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008cf4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008cf6:	3b02      	subs	r3, #2
 8008cf8:	2b02      	cmp	r3, #2
 8008cfa:	d87e      	bhi.n	8008dfa <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x12e>
 8008cfc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8008cfe:	9314      	str	r3, [sp, #80]	; 0x50
 8008d00:	9318      	str	r3, [sp, #96]	; 0x60
 8008d02:	931c      	str	r3, [sp, #112]	; 0x70
 8008d04:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008d06:	930d      	str	r3, [sp, #52]	; 0x34
 8008d08:	9319      	str	r3, [sp, #100]	; 0x64
 8008d0a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008d0c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008d0e:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 8008d12:	2300      	movs	r3, #0
 8008d14:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 8008d18:	6823      	ldr	r3, [r4, #0]
 8008d1a:	9309      	str	r3, [sp, #36]	; 0x24
 8008d1c:	2501      	movs	r5, #1
 8008d1e:	6863      	ldr	r3, [r4, #4]
 8008d20:	9517      	str	r5, [sp, #92]	; 0x5c
 8008d22:	2900      	cmp	r1, #0
 8008d24:	e9cd 550e 	strd	r5, r5, [sp, #56]	; 0x38
 8008d28:	e9cd 5512 	strd	r5, r5, [sp, #72]	; 0x48
 8008d2c:	e9cd 5515 	strd	r5, r5, [sp, #84]	; 0x54
 8008d30:	e9cd 551a 	strd	r5, r5, [sp, #104]	; 0x68
 8008d34:	930a      	str	r3, [sp, #40]	; 0x28
 8008d36:	db04      	blt.n	8008d42 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x76>
 8008d38:	f8d9 3044 	ldr.w	r3, [r9, #68]	; 0x44
 8008d3c:	4648      	mov	r0, r9
 8008d3e:	4798      	blx	r3
 8008d40:	900b      	str	r0, [sp, #44]	; 0x2c
 8008d42:	f1b8 0f00 	cmp.w	r8, #0
 8008d46:	d001      	beq.n	8008d4c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x80>
 8008d48:	f8d8 8000 	ldr.w	r8, [r8]
 8008d4c:	6963      	ldr	r3, [r4, #20]
 8008d4e:	425b      	negs	r3, r3
 8008d50:	931d      	str	r3, [sp, #116]	; 0x74
 8008d52:	69e3      	ldr	r3, [r4, #28]
 8008d54:	931f      	str	r3, [sp, #124]	; 0x7c
 8008d56:	68a3      	ldr	r3, [r4, #8]
 8008d58:	9320      	str	r3, [sp, #128]	; 0x80
 8008d5a:	68e3      	ldr	r3, [r4, #12]
 8008d5c:	9321      	str	r3, [sp, #132]	; 0x84
 8008d5e:	2400      	movs	r4, #0
 8008d60:	941e      	str	r4, [sp, #120]	; 0x78
 8008d62:	2e00      	cmp	r6, #0
 8008d64:	d049      	beq.n	8008dfa <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x12e>
 8008d66:	6833      	ldr	r3, [r6, #0]
 8008d68:	2f00      	cmp	r7, #0
 8008d6a:	d046      	beq.n	8008dfa <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x12e>
 8008d6c:	683a      	ldr	r2, [r7, #0]
 8008d6e:	f1ba 0f00 	cmp.w	sl, #0
 8008d72:	d042      	beq.n	8008dfa <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x12e>
 8008d74:	9202      	str	r2, [sp, #8]
 8008d76:	9300      	str	r3, [sp, #0]
 8008d78:	f8cd 8010 	str.w	r8, [sp, #16]
 8008d7c:	f8da 3000 	ldr.w	r3, [sl]
 8008d80:	9306      	str	r3, [sp, #24]
 8008d82:	ab19      	add	r3, sp, #100	; 0x64
 8008d84:	9305      	str	r3, [sp, #20]
 8008d86:	ab15      	add	r3, sp, #84	; 0x54
 8008d88:	9303      	str	r3, [sp, #12]
 8008d8a:	ab11      	add	r3, sp, #68	; 0x44
 8008d8c:	9301      	str	r3, [sp, #4]
 8008d8e:	aa09      	add	r2, sp, #36	; 0x24
 8008d90:	ab0d      	add	r3, sp, #52	; 0x34
 8008d92:	a91d      	add	r1, sp, #116	; 0x74
 8008d94:	a80b      	add	r0, sp, #44	; 0x2c
 8008d96:	f009 f807 	bl	8011da8 <arm_fully_connected_s4>
 8008d9a:	b948      	cbnz	r0, 8008db0 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0xe4>
 8008d9c:	4b18      	ldr	r3, [pc, #96]	; (8008e00 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x134>)
 8008d9e:	681a      	ldr	r2, [r3, #0]
 8008da0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8008da2:	405a      	eors	r2, r3
 8008da4:	f04f 0300 	mov.w	r3, #0
 8008da8:	d125      	bne.n	8008df6 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x12a>
 8008daa:	b02a      	add	sp, #168	; 0xa8
 8008dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008db0:	ab19      	add	r3, sp, #100	; 0x64
 8008db2:	e9cd 8304 	strd	r8, r3, [sp, #16]
 8008db6:	ab15      	add	r3, sp, #84	; 0x54
 8008db8:	9303      	str	r3, [sp, #12]
 8008dba:	ab11      	add	r3, sp, #68	; 0x44
 8008dbc:	9301      	str	r3, [sp, #4]
 8008dbe:	f8da 3000 	ldr.w	r3, [sl]
 8008dc2:	9306      	str	r3, [sp, #24]
 8008dc4:	683b      	ldr	r3, [r7, #0]
 8008dc6:	9302      	str	r3, [sp, #8]
 8008dc8:	6833      	ldr	r3, [r6, #0]
 8008dca:	9300      	str	r3, [sp, #0]
 8008dcc:	aa09      	add	r2, sp, #36	; 0x24
 8008dce:	ab0d      	add	r3, sp, #52	; 0x34
 8008dd0:	a91d      	add	r1, sp, #116	; 0x74
 8008dd2:	a80b      	add	r0, sp, #44	; 0x2c
 8008dd4:	f8d9 5014 	ldr.w	r5, [r9, #20]
 8008dd8:	f008 ffe6 	bl	8011da8 <arm_fully_connected_s4>
 8008ddc:	4909      	ldr	r1, [pc, #36]	; (8008e04 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x138>)
 8008dde:	4b0a      	ldr	r3, [pc, #40]	; (8008e08 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x13c>)
 8008de0:	4a0a      	ldr	r2, [pc, #40]	; (8008e0c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x140>)
 8008de2:	e9cd 3100 	strd	r3, r1, [sp]
 8008de6:	e9cd 0402 	strd	r0, r4, [sp, #8]
 8008dea:	4909      	ldr	r1, [pc, #36]	; (8008e10 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0x144>)
 8008dec:	4648      	mov	r0, r9
 8008dee:	23e6      	movs	r3, #230	; 0xe6
 8008df0:	47a8      	blx	r5
 8008df2:	2001      	movs	r0, #1
 8008df4:	e7d2      	b.n	8008d9c <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0+0xd0>
 8008df6:	f014 fda1 	bl	801d93c <__stack_chk_fail>
 8008dfa:	f013 fdd9 	bl	801c9b0 <abort>
 8008dfe:	bf00      	nop
 8008e00:	20011294 	.word	0x20011294
 8008e04:	08024d9c 	.word	0x08024d9c
 8008e08:	080250d4 	.word	0x080250d4
 8008e0c:	08024d14 	.word	0x08024d14
 8008e10:	08024a8c 	.word	0x08024a8c

08008e14 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode>:
 8008e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e18:	4b92      	ldr	r3, [pc, #584]	; (8009064 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x250>)
 8008e1a:	f8d1 a014 	ldr.w	sl, [r1, #20]
 8008e1e:	b0b1      	sub	sp, #196	; 0xc4
 8008e20:	681b      	ldr	r3, [r3, #0]
 8008e22:	932f      	str	r3, [sp, #188]	; 0xbc
 8008e24:	f04f 0300 	mov.w	r3, #0
 8008e28:	f1ba 0f00 	cmp.w	sl, #0
 8008e2c:	f000 8117 	beq.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008e30:	4b8d      	ldr	r3, [pc, #564]	; (8009068 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x254>)
 8008e32:	681a      	ldr	r2, [r3, #0]
 8008e34:	460c      	mov	r4, r1
 8008e36:	4605      	mov	r5, r0
 8008e38:	f001 f8e8 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 8008e3c:	4b8b      	ldr	r3, [pc, #556]	; (800906c <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x258>)
 8008e3e:	4621      	mov	r1, r4
 8008e40:	681a      	ldr	r2, [r3, #0]
 8008e42:	4607      	mov	r7, r0
 8008e44:	4628      	mov	r0, r5
 8008e46:	f001 f8e1 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 8008e4a:	4b89      	ldr	r3, [pc, #548]	; (8009070 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x25c>)
 8008e4c:	4621      	mov	r1, r4
 8008e4e:	681a      	ldr	r2, [r3, #0]
 8008e50:	4680      	mov	r8, r0
 8008e52:	4628      	mov	r0, r5
 8008e54:	f001 f8da 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 8008e58:	4b86      	ldr	r3, [pc, #536]	; (8009074 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x260>)
 8008e5a:	4621      	mov	r1, r4
 8008e5c:	681a      	ldr	r2, [r3, #0]
 8008e5e:	4681      	mov	r9, r0
 8008e60:	4628      	mov	r0, r5
 8008e62:	f001 f909 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 8008e66:	6921      	ldr	r1, [r4, #16]
 8008e68:	4604      	mov	r4, r0
 8008e6a:	2900      	cmp	r1, #0
 8008e6c:	f000 80f7 	beq.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008e70:	7a38      	ldrb	r0, [r7, #8]
 8008e72:	2807      	cmp	r0, #7
 8008e74:	d017      	beq.n	8008ea6 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x92>
 8008e76:	2809      	cmp	r0, #9
 8008e78:	f000 80ca 	beq.w	8009010 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x1fc>
 8008e7c:	2801      	cmp	r0, #1
 8008e7e:	d01a      	beq.n	8008eb6 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xa2>
 8008e80:	f005 fbc8 	bl	800e614 <TfLiteTypeGetName>
 8008e84:	7a3a      	ldrb	r2, [r7, #8]
 8008e86:	4601      	mov	r1, r0
 8008e88:	487b      	ldr	r0, [pc, #492]	; (8009078 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x264>)
 8008e8a:	f005 f9c1 	bl	800e210 <_Z11MicroPrintfPKcz>
 8008e8e:	2001      	movs	r0, #1
 8008e90:	4b74      	ldr	r3, [pc, #464]	; (8009064 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x250>)
 8008e92:	681a      	ldr	r2, [r3, #0]
 8008e94:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8008e96:	405a      	eors	r2, r3
 8008e98:	f04f 0300 	mov.w	r3, #0
 8008e9c:	f040 80dd 	bne.w	800905a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x246>
 8008ea0:	b031      	add	sp, #196	; 0xc4
 8008ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ea6:	e9cd 9400 	strd	r9, r4, [sp]
 8008eaa:	4643      	mov	r3, r8
 8008eac:	463a      	mov	r2, r7
 8008eae:	4628      	mov	r0, r5
 8008eb0:	f7ff fe78 	bl	8008ba4 <_ZN6tflite12_GLOBAL__N_118EvalQuantizedInt16EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0>
 8008eb4:	e7ec      	b.n	8008e90 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x7c>
 8008eb6:	f1b9 0f00 	cmp.w	r9, #0
 8008eba:	f000 80c9 	beq.w	8009050 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x23c>
 8008ebe:	f8d9 6000 	ldr.w	r6, [r9]
 8008ec2:	f89a 1000 	ldrb.w	r1, [sl]
 8008ec6:	a809      	add	r0, sp, #36	; 0x24
 8008ec8:	f000 ffda 	bl	8009e80 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation>
 8008ecc:	4639      	mov	r1, r7
 8008ece:	a813      	add	r0, sp, #76	; 0x4c
 8008ed0:	f001 f8f8 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008ed4:	683b      	ldr	r3, [r7, #0]
 8008ed6:	9307      	str	r3, [sp, #28]
 8008ed8:	4641      	mov	r1, r8
 8008eda:	a81a      	add	r0, sp, #104	; 0x68
 8008edc:	f001 f8f2 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008ee0:	f1b8 0f00 	cmp.w	r8, #0
 8008ee4:	f000 80bb 	beq.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008ee8:	4649      	mov	r1, r9
 8008eea:	a821      	add	r0, sp, #132	; 0x84
 8008eec:	f8d8 7000 	ldr.w	r7, [r8]
 8008ef0:	f001 f8e8 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008ef4:	4621      	mov	r1, r4
 8008ef6:	a828      	add	r0, sp, #160	; 0xa0
 8008ef8:	f001 f8e4 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8008efc:	2c00      	cmp	r4, #0
 8008efe:	f000 80ae 	beq.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008f02:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8008f04:	6823      	ldr	r3, [r4, #0]
 8008f06:	eddd 6a10 	vldr	s13, [sp, #64]	; 0x40
 8008f0a:	ed9d 6a11 	vldr	s12, [sp, #68]	; 0x44
 8008f0e:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8008f10:	9305      	str	r3, [sp, #20]
 8008f12:	1e41      	subs	r1, r0, #1
 8008f14:	f100 80a3 	bmi.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008f18:	2800      	cmp	r0, #0
 8008f1a:	f340 809b 	ble.w	8009054 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x240>
 8008f1e:	2201      	movs	r2, #1
 8008f20:	2300      	movs	r3, #0
 8008f22:	4299      	cmp	r1, r3
 8008f24:	d005      	beq.n	8008f32 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x11e>
 8008f26:	ad28      	add	r5, sp, #160	; 0xa0
 8008f28:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8008f2c:	686d      	ldr	r5, [r5, #4]
 8008f2e:	fb05 f202 	mul.w	r2, r5, r2
 8008f32:	3301      	adds	r3, #1
 8008f34:	4298      	cmp	r0, r3
 8008f36:	d1f4      	bne.n	8008f22 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x10e>
 8008f38:	9204      	str	r2, [sp, #16]
 8008f3a:	1ea3      	subs	r3, r4, #2
 8008f3c:	f100 808f 	bmi.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008f40:	aa30      	add	r2, sp, #192	; 0xc0
 8008f42:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008f46:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 8008f4a:	f853 2c54 	ldr.w	r2, [r3, #-84]
 8008f4e:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 8008f52:	9203      	str	r2, [sp, #12]
 8008f54:	4293      	cmp	r3, r2
 8008f56:	f040 8082 	bne.w	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008f5a:	1e63      	subs	r3, r4, #1
 8008f5c:	d47f      	bmi.n	800905e <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x24a>
 8008f5e:	aa30      	add	r2, sp, #192	; 0xc0
 8008f60:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8008f64:	f853 0c54 	ldr.w	r0, [r3, #-84]
 8008f68:	9b04      	ldr	r3, [sp, #16]
 8008f6a:	2b00      	cmp	r3, #0
 8008f6c:	dd4b      	ble.n	8009006 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x1f2>
 8008f6e:	9b03      	ldr	r3, [sp, #12]
 8008f70:	ed9f 5a42 	vldr	s10, [pc, #264]	; 800907c <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x268>
 8008f74:	009a      	lsls	r2, r3, #2
 8008f76:	9206      	str	r2, [sp, #24]
 8008f78:	9a05      	ldr	r2, [sp, #20]
 8008f7a:	2400      	movs	r4, #0
 8008f7c:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8008f80:	46a2      	mov	sl, r4
 8008f82:	46a1      	mov	r9, r4
 8008f84:	9b03      	ldr	r3, [sp, #12]
 8008f86:	2b00      	cmp	r3, #0
 8008f88:	eb04 0b00 	add.w	fp, r4, r0
 8008f8c:	dd31      	ble.n	8008ff2 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x1de>
 8008f8e:	9a07      	ldr	r2, [sp, #28]
 8008f90:	9b05      	ldr	r3, [sp, #20]
 8008f92:	eb02 0e84 	add.w	lr, r2, r4, lsl #2
 8008f96:	eb02 088b 	add.w	r8, r2, fp, lsl #2
 8008f9a:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8008f9e:	4631      	mov	r1, r6
 8008fa0:	2200      	movs	r2, #0
 8008fa2:	2800      	cmp	r0, #0
 8008fa4:	ed9f 7a35 	vldr	s14, [pc, #212]	; 800907c <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x268>
 8008fa8:	dd0a      	ble.n	8008fc0 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x1ac>
 8008faa:	eb07 0c82 	add.w	ip, r7, r2, lsl #2
 8008fae:	4674      	mov	r4, lr
 8008fb0:	ecf4 5a01 	vldmia	r4!, {s11}
 8008fb4:	ecfc 7a01 	vldmia	ip!, {s15}
 8008fb8:	4544      	cmp	r4, r8
 8008fba:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8008fbe:	d1f7      	bne.n	8008fb0 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x19c>
 8008fc0:	b31e      	cbz	r6, 800900a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x1f6>
 8008fc2:	edd1 7a00 	vldr	s15, [r1]
 8008fc6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fca:	3104      	adds	r1, #4
 8008fcc:	eef4 6a67 	vcmp.f32	s13, s15
 8008fd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fd4:	bfc8      	it	gt
 8008fd6:	eef0 7a66 	vmovgt.f32	s15, s13
 8008fda:	eeb4 6a67 	vcmp.f32	s12, s15
 8008fde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fe2:	bf48      	it	mi
 8008fe4:	eef0 7a46 	vmovmi.f32	s15, s12
 8008fe8:	ece3 7a01 	vstmia	r3!, {s15}
 8008fec:	429d      	cmp	r5, r3
 8008fee:	4402      	add	r2, r0
 8008ff0:	d1d7      	bne.n	8008fa2 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x18e>
 8008ff2:	9b06      	ldr	r3, [sp, #24]
 8008ff4:	441d      	add	r5, r3
 8008ff6:	9b03      	ldr	r3, [sp, #12]
 8008ff8:	449a      	add	sl, r3
 8008ffa:	9b04      	ldr	r3, [sp, #16]
 8008ffc:	f109 0901 	add.w	r9, r9, #1
 8009000:	4599      	cmp	r9, r3
 8009002:	465c      	mov	r4, fp
 8009004:	d1be      	bne.n	8008f84 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x170>
 8009006:	2000      	movs	r0, #0
 8009008:	e742      	b.n	8008e90 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x7c>
 800900a:	eef0 7a45 	vmov.f32	s15, s10
 800900e:	e7da      	b.n	8008fc6 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x1b2>
 8009010:	f898 0008 	ldrb.w	r0, [r8, #8]
 8009014:	2809      	cmp	r0, #9
 8009016:	d013      	beq.n	8009040 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x22c>
 8009018:	2812      	cmp	r0, #18
 800901a:	d009      	beq.n	8009030 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x21c>
 800901c:	f005 fafa 	bl	800e614 <TfLiteTypeGetName>
 8009020:	f898 2008 	ldrb.w	r2, [r8, #8]
 8009024:	4601      	mov	r1, r0
 8009026:	4816      	ldr	r0, [pc, #88]	; (8009080 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x26c>)
 8009028:	f005 f8f2 	bl	800e210 <_Z11MicroPrintfPKcz>
 800902c:	2001      	movs	r0, #1
 800902e:	e72f      	b.n	8008e90 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x7c>
 8009030:	e9cd 9400 	strd	r9, r4, [sp]
 8009034:	4643      	mov	r3, r8
 8009036:	463a      	mov	r2, r7
 8009038:	4628      	mov	r0, r5
 800903a:	f7ff fe47 	bl	8008ccc <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt4EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0>
 800903e:	e727      	b.n	8008e90 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x7c>
 8009040:	e9cd 9400 	strd	r9, r4, [sp]
 8009044:	4643      	mov	r3, r8
 8009046:	463a      	mov	r2, r7
 8009048:	4628      	mov	r0, r5
 800904a:	f7ff fc7d 	bl	8008948 <_ZN6tflite12_GLOBAL__N_117EvalQuantizedInt8EP13TfLiteContextP10TfLiteNodeRKNS0_6OpDataEPK16TfLiteEvalTensorSA_SA_PS8_.constprop.0>
 800904e:	e71f      	b.n	8008e90 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x7c>
 8009050:	464e      	mov	r6, r9
 8009052:	e736      	b.n	8008ec2 <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0xae>
 8009054:	2301      	movs	r3, #1
 8009056:	9304      	str	r3, [sp, #16]
 8009058:	e76f      	b.n	8008f3a <_ZN6tflite12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode+0x126>
 800905a:	f014 fc6f 	bl	801d93c <__stack_chk_fail>
 800905e:	f013 fca7 	bl	801c9b0 <abort>
 8009062:	bf00      	nop
 8009064:	20011294 	.word	0x20011294
 8009068:	080255b0 	.word	0x080255b0
 800906c:	080255b8 	.word	0x080255b8
 8009070:	080255ac 	.word	0x080255ac
 8009074:	080255b4 	.word	0x080255b4
 8009078:	08024cf8 	.word	0x08024cf8
 800907c:	00000000 	.word	0x00000000
 8009080:	080251d8 	.word	0x080251d8

08009084 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode>:
 8009084:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009088:	4ba5      	ldr	r3, [pc, #660]	; (8009320 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x29c>)
 800908a:	f8d1 8010 	ldr.w	r8, [r1, #16]
 800908e:	b0a5      	sub	sp, #148	; 0x94
 8009090:	681b      	ldr	r3, [r3, #0]
 8009092:	9323      	str	r3, [sp, #140]	; 0x8c
 8009094:	f04f 0300 	mov.w	r3, #0
 8009098:	f1b8 0f00 	cmp.w	r8, #0
 800909c:	f000 8182 	beq.w	80093a4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x320>
 80090a0:	f8d1 a014 	ldr.w	sl, [r1, #20]
 80090a4:	4689      	mov	r9, r1
 80090a6:	f1ba 0f00 	cmp.w	sl, #0
 80090aa:	f000 817b 	beq.w	80093a4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x320>
 80090ae:	68c6      	ldr	r6, [r0, #12]
 80090b0:	4b9c      	ldr	r3, [pc, #624]	; (8009324 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2a0>)
 80090b2:	4604      	mov	r4, r0
 80090b4:	681a      	ldr	r2, [r3, #0]
 80090b6:	4630      	mov	r0, r6
 80090b8:	f003 fcae 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 80090bc:	4605      	mov	r5, r0
 80090be:	2800      	cmp	r0, #0
 80090c0:	f000 809b 	beq.w	80091fa <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x176>
 80090c4:	4b98      	ldr	r3, [pc, #608]	; (8009328 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2a4>)
 80090c6:	4649      	mov	r1, r9
 80090c8:	681a      	ldr	r2, [r3, #0]
 80090ca:	4630      	mov	r0, r6
 80090cc:	f003 fca4 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 80090d0:	4607      	mov	r7, r0
 80090d2:	2800      	cmp	r0, #0
 80090d4:	d07b      	beq.n	80091ce <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x14a>
 80090d6:	4b95      	ldr	r3, [pc, #596]	; (800932c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2a8>)
 80090d8:	4649      	mov	r1, r9
 80090da:	681a      	ldr	r2, [r3, #0]
 80090dc:	4630      	mov	r0, r6
 80090de:	f003 fc9b 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 80090e2:	4b93      	ldr	r3, [pc, #588]	; (8009330 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2ac>)
 80090e4:	9004      	str	r0, [sp, #16]
 80090e6:	4649      	mov	r1, r9
 80090e8:	681a      	ldr	r2, [r3, #0]
 80090ea:	4630      	mov	r0, r6
 80090ec:	f003 fcc2 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 80090f0:	4681      	mov	r9, r0
 80090f2:	2800      	cmp	r0, #0
 80090f4:	f000 80a2 	beq.w	800923c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1b8>
 80090f8:	7828      	ldrb	r0, [r5, #0]
 80090fa:	f899 3000 	ldrb.w	r3, [r9]
 80090fe:	4283      	cmp	r3, r0
 8009100:	f040 8086 	bne.w	8009210 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x18c>
 8009104:	4639      	mov	r1, r7
 8009106:	a80e      	add	r0, sp, #56	; 0x38
 8009108:	f005 fc44 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 800910c:	4649      	mov	r1, r9
 800910e:	a815      	add	r0, sp, #84	; 0x54
 8009110:	f005 fc40 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 8009114:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009116:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
 800911a:	3b01      	subs	r3, #1
 800911c:	f100 8142 	bmi.w	80093a4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x320>
 8009120:	aa24      	add	r2, sp, #144	; 0x90
 8009122:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8009126:	f1bb 0001 	subs.w	r0, fp, #1
 800912a:	f853 3c54 	ldr.w	r3, [r3, #-84]
 800912e:	9306      	str	r3, [sp, #24]
 8009130:	f04f 0201 	mov.w	r2, #1
 8009134:	e9cd 2207 	strd	r2, r2, [sp, #28]
 8009138:	f100 8134 	bmi.w	80093a4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x320>
 800913c:	f8c8 3038 	str.w	r3, [r8, #56]	; 0x38
 8009140:	ab24      	add	r3, sp, #144	; 0x90
 8009142:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8009146:	f1bb 0f00 	cmp.w	fp, #0
 800914a:	f853 cc38 	ldr.w	ip, [r3, #-56]
 800914e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
 8009152:	dd0b      	ble.n	800916c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xe8>
 8009154:	2300      	movs	r3, #0
 8009156:	4298      	cmp	r0, r3
 8009158:	d005      	beq.n	8009166 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xe2>
 800915a:	a915      	add	r1, sp, #84	; 0x54
 800915c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8009160:	6849      	ldr	r1, [r1, #4]
 8009162:	fb01 f202 	mul.w	r2, r1, r2
 8009166:	3301      	adds	r3, #1
 8009168:	459b      	cmp	fp, r3
 800916a:	d1f4      	bne.n	8009156 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xd2>
 800916c:	f04f 33ff 	mov.w	r3, #4294967295
 8009170:	f89a 1000 	ldrb.w	r1, [sl]
 8009174:	f8c8 2034 	str.w	r2, [r8, #52]	; 0x34
 8009178:	782a      	ldrb	r2, [r5, #0]
 800917a:	f8c8 302c 	str.w	r3, [r8, #44]	; 0x2c
 800917e:	9b04      	ldr	r3, [sp, #16]
 8009180:	f8c8 c03c 	str.w	ip, [r8, #60]	; 0x3c
 8009184:	4620      	mov	r0, r4
 8009186:	e9cd 7300 	strd	r7, r3, [sp]
 800918a:	e9cd 9802 	strd	r9, r8, [sp, #8]
 800918e:	462b      	mov	r3, r5
 8009190:	f000 feaa 	bl	8009ee8 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE>
 8009194:	4682      	mov	sl, r0
 8009196:	bb20      	cbnz	r0, 80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 8009198:	782b      	ldrb	r3, [r5, #0]
 800919a:	2b07      	cmp	r3, #7
 800919c:	d059      	beq.n	8009252 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1ce>
 800919e:	2b09      	cmp	r3, #9
 80091a0:	d06d      	beq.n	800927e <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1fa>
 80091a2:	6833      	ldr	r3, [r6, #0]
 80091a4:	4649      	mov	r1, r9
 80091a6:	699b      	ldr	r3, [r3, #24]
 80091a8:	4630      	mov	r0, r6
 80091aa:	4798      	blx	r3
 80091ac:	6833      	ldr	r3, [r6, #0]
 80091ae:	4629      	mov	r1, r5
 80091b0:	699b      	ldr	r3, [r3, #24]
 80091b2:	4630      	mov	r0, r6
 80091b4:	4798      	blx	r3
 80091b6:	6833      	ldr	r3, [r6, #0]
 80091b8:	4639      	mov	r1, r7
 80091ba:	699b      	ldr	r3, [r3, #24]
 80091bc:	4630      	mov	r0, r6
 80091be:	4798      	blx	r3
 80091c0:	9904      	ldr	r1, [sp, #16]
 80091c2:	b171      	cbz	r1, 80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 80091c4:	6833      	ldr	r3, [r6, #0]
 80091c6:	4630      	mov	r0, r6
 80091c8:	699b      	ldr	r3, [r3, #24]
 80091ca:	4798      	blx	r3
 80091cc:	e009      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 80091ce:	4b59      	ldr	r3, [pc, #356]	; (8009334 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b0>)
 80091d0:	6965      	ldr	r5, [r4, #20]
 80091d2:	4a59      	ldr	r2, [pc, #356]	; (8009338 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 80091d4:	9300      	str	r3, [sp, #0]
 80091d6:	4959      	ldr	r1, [pc, #356]	; (800933c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b8>)
 80091d8:	2348      	movs	r3, #72	; 0x48
 80091da:	4620      	mov	r0, r4
 80091dc:	47a8      	blx	r5
 80091de:	f04f 0a01 	mov.w	sl, #1
 80091e2:	4b4f      	ldr	r3, [pc, #316]	; (8009320 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x29c>)
 80091e4:	681a      	ldr	r2, [r3, #0]
 80091e6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80091e8:	405a      	eors	r2, r3
 80091ea:	f04f 0300 	mov.w	r3, #0
 80091ee:	f040 80d7 	bne.w	80093a0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x31c>
 80091f2:	4650      	mov	r0, sl
 80091f4:	b025      	add	sp, #148	; 0x94
 80091f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091fa:	4b51      	ldr	r3, [pc, #324]	; (8009340 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2bc>)
 80091fc:	6965      	ldr	r5, [r4, #20]
 80091fe:	4a4e      	ldr	r2, [pc, #312]	; (8009338 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 8009200:	9300      	str	r3, [sp, #0]
 8009202:	494e      	ldr	r1, [pc, #312]	; (800933c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b8>)
 8009204:	2345      	movs	r3, #69	; 0x45
 8009206:	4620      	mov	r0, r4
 8009208:	47a8      	blx	r5
 800920a:	f04f 0a01 	mov.w	sl, #1
 800920e:	e7e8      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 8009210:	6966      	ldr	r6, [r4, #20]
 8009212:	f005 f9ff 	bl	800e614 <TfLiteTypeGetName>
 8009216:	4605      	mov	r5, r0
 8009218:	f899 0000 	ldrb.w	r0, [r9]
 800921c:	f005 f9fa 	bl	800e614 <TfLiteTypeGetName>
 8009220:	4948      	ldr	r1, [pc, #288]	; (8009344 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2c0>)
 8009222:	4b49      	ldr	r3, [pc, #292]	; (8009348 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2c4>)
 8009224:	4a44      	ldr	r2, [pc, #272]	; (8009338 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 8009226:	e9cd 3100 	strd	r3, r1, [sp]
 800922a:	e9cd 5002 	strd	r5, r0, [sp, #8]
 800922e:	4947      	ldr	r1, [pc, #284]	; (800934c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2c8>)
 8009230:	234f      	movs	r3, #79	; 0x4f
 8009232:	4620      	mov	r0, r4
 8009234:	47b0      	blx	r6
 8009236:	f04f 0a01 	mov.w	sl, #1
 800923a:	e7d2      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 800923c:	4b44      	ldr	r3, [pc, #272]	; (8009350 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2cc>)
 800923e:	6965      	ldr	r5, [r4, #20]
 8009240:	4a3d      	ldr	r2, [pc, #244]	; (8009338 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 8009242:	9300      	str	r3, [sp, #0]
 8009244:	493d      	ldr	r1, [pc, #244]	; (800933c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b8>)
 8009246:	234d      	movs	r3, #77	; 0x4d
 8009248:	4620      	mov	r0, r4
 800924a:	47a8      	blx	r5
 800924c:	f04f 0a01 	mov.w	sl, #1
 8009250:	e7c7      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 8009252:	692b      	ldr	r3, [r5, #16]
 8009254:	2b00      	cmp	r3, #0
 8009256:	d14f      	bne.n	80092f8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x274>
 8009258:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800925c:	2b00      	cmp	r3, #0
 800925e:	d05a      	beq.n	8009316 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x292>
 8009260:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8009264:	493b      	ldr	r1, [pc, #236]	; (8009354 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2d0>)
 8009266:	4a3c      	ldr	r2, [pc, #240]	; (8009358 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2d4>)
 8009268:	6965      	ldr	r5, [r4, #20]
 800926a:	2369      	movs	r3, #105	; 0x69
 800926c:	e9cd 2100 	strd	r2, r1, [sp]
 8009270:	4620      	mov	r0, r4
 8009272:	4a31      	ldr	r2, [pc, #196]	; (8009338 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 8009274:	4939      	ldr	r1, [pc, #228]	; (800935c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2d8>)
 8009276:	47a8      	blx	r5
 8009278:	f04f 0a01 	mov.w	sl, #1
 800927c:	e7b1      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 800927e:	783b      	ldrb	r3, [r7, #0]
 8009280:	2b12      	cmp	r3, #18
 8009282:	d08e      	beq.n	80091a2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11e>
 8009284:	4629      	mov	r1, r5
 8009286:	a81c      	add	r0, sp, #112	; 0x70
 8009288:	f005 fb84 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 800928c:	f1ab 0302 	sub.w	r3, fp, #2
 8009290:	2b02      	cmp	r3, #2
 8009292:	f200 8087 	bhi.w	80093a4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x320>
 8009296:	f1bb 0f02 	cmp.w	fp, #2
 800929a:	d063      	beq.n	8009364 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2e0>
 800929c:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 80092a0:	079b      	lsls	r3, r3, #30
 80092a2:	d15f      	bne.n	8009364 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2e0>
 80092a4:	f8d8 103c 	ldr.w	r1, [r8, #60]	; 0x3c
 80092a8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80092aa:	0089      	lsls	r1, r1, #2
 80092ac:	4620      	mov	r0, r4
 80092ae:	4798      	blx	r3
 80092b0:	f8d8 103c 	ldr.w	r1, [r8, #60]	; 0x3c
 80092b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80092b6:	f8c8 0024 	str.w	r0, [r8, #36]	; 0x24
 80092ba:	0089      	lsls	r1, r1, #2
 80092bc:	4620      	mov	r0, r4
 80092be:	4798      	blx	r3
 80092c0:	f8d8 3034 	ldr.w	r3, [r8, #52]	; 0x34
 80092c4:	930a      	str	r3, [sp, #40]	; 0x28
 80092c6:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
 80092ca:	f8c8 0028 	str.w	r0, [r8, #40]	; 0x28
 80092ce:	930d      	str	r3, [sp, #52]	; 0x34
 80092d0:	a80a      	add	r0, sp, #40	; 0x28
 80092d2:	2301      	movs	r3, #1
 80092d4:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 80092d8:	f008 fef8 	bl	80120cc <arm_convolve_1x1_s8_fast_get_buffer_size>
 80092dc:	4601      	mov	r1, r0
 80092de:	2900      	cmp	r1, #0
 80092e0:	f77f af5f 	ble.w	80091a2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11e>
 80092e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80092e6:	f108 022c 	add.w	r2, r8, #44	; 0x2c
 80092ea:	4620      	mov	r0, r4
 80092ec:	4798      	blx	r3
 80092ee:	2800      	cmp	r0, #0
 80092f0:	f43f af57 	beq.w	80091a2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11e>
 80092f4:	4682      	mov	sl, r0
 80092f6:	e774      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 80092f8:	e9cd 3002 	strd	r3, r0, [sp, #8]
 80092fc:	4915      	ldr	r1, [pc, #84]	; (8009354 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2d0>)
 80092fe:	4a18      	ldr	r2, [pc, #96]	; (8009360 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2dc>)
 8009300:	6965      	ldr	r5, [r4, #20]
 8009302:	2368      	movs	r3, #104	; 0x68
 8009304:	e9cd 2100 	strd	r2, r1, [sp]
 8009308:	4620      	mov	r0, r4
 800930a:	4a0b      	ldr	r2, [pc, #44]	; (8009338 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2b4>)
 800930c:	4913      	ldr	r1, [pc, #76]	; (800935c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x2d8>)
 800930e:	47a8      	blx	r5
 8009310:	f04f 0a01 	mov.w	sl, #1
 8009314:	e765      	b.n	80091e2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x15e>
 8009316:	a806      	add	r0, sp, #24
 8009318:	f008 fde8 	bl	8011eec <arm_fully_connected_s16_get_buffer_size>
 800931c:	4601      	mov	r1, r0
 800931e:	e7de      	b.n	80092de <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x25a>
 8009320:	20011294 	.word	0x20011294
 8009324:	080255b0 	.word	0x080255b0
 8009328:	080255b8 	.word	0x080255b8
 800932c:	080255ac 	.word	0x080255ac
 8009330:	080255b4 	.word	0x080255b4
 8009334:	08024a78 	.word	0x08024a78
 8009338:	08024d14 	.word	0x08024d14
 800933c:	080249b0 	.word	0x080249b0
 8009340:	080249c8 	.word	0x080249c8
 8009344:	08024aa8 	.word	0x08024aa8
 8009348:	08024ab8 	.word	0x08024ab8
 800934c:	080251fc 	.word	0x080251fc
 8009350:	080249dc 	.word	0x080249dc
 8009354:	08024bf8 	.word	0x08024bf8
 8009358:	08024c94 	.word	0x08024c94
 800935c:	08024a8c 	.word	0x08024a8c
 8009360:	08024c78 	.word	0x08024c78
 8009364:	a806      	add	r0, sp, #24
 8009366:	f008 fd53 	bl	8011e10 <arm_fully_connected_s8_get_buffer_size>
 800936a:	f04f 0b00 	mov.w	fp, #0
 800936e:	1e01      	subs	r1, r0, #0
 8009370:	687b      	ldr	r3, [r7, #4]
 8009372:	f8c8 b030 	str.w	fp, [r8, #48]	; 0x30
 8009376:	f77f af14 	ble.w	80091a2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11e>
 800937a:	9305      	str	r3, [sp, #20]
 800937c:	2b00      	cmp	r3, #0
 800937e:	d0ae      	beq.n	80092de <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x25a>
 8009380:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009382:	4620      	mov	r0, r4
 8009384:	4790      	blx	r2
 8009386:	2101      	movs	r1, #1
 8009388:	f8d8 203c 	ldr.w	r2, [r8, #60]	; 0x3c
 800938c:	f8c8 0030 	str.w	r0, [r8, #48]	; 0x30
 8009390:	9b05      	ldr	r3, [sp, #20]
 8009392:	9100      	str	r1, [sp, #0]
 8009394:	f8cd b004 	str.w	fp, [sp, #4]
 8009398:	9906      	ldr	r1, [sp, #24]
 800939a:	f008 fd77 	bl	8011e8c <arm_vector_sum_s8>
 800939e:	e700      	b.n	80091a2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11e>
 80093a0:	f014 facc 	bl	801d93c <__stack_chk_fail>
 80093a4:	f013 fb04 	bl	801c9b0 <abort>

080093a8 <_ZN6tflite24Register_FULLY_CONNECTEDEv>:
 80093a8:	b510      	push	{r4, lr}
 80093aa:	2100      	movs	r1, #0
 80093ac:	b084      	sub	sp, #16
 80093ae:	e9cd 1100 	strd	r1, r1, [sp]
 80093b2:	490b      	ldr	r1, [pc, #44]	; (80093e0 <_ZN6tflite24Register_FULLY_CONNECTEDEv+0x38>)
 80093b4:	4b0b      	ldr	r3, [pc, #44]	; (80093e4 <_ZN6tflite24Register_FULLY_CONNECTEDEv+0x3c>)
 80093b6:	4a0c      	ldr	r2, [pc, #48]	; (80093e8 <_ZN6tflite24Register_FULLY_CONNECTEDEv+0x40>)
 80093b8:	6809      	ldr	r1, [r1, #0]
 80093ba:	9103      	str	r1, [sp, #12]
 80093bc:	f04f 0100 	mov.w	r1, #0
 80093c0:	490a      	ldr	r1, [pc, #40]	; (80093ec <_ZN6tflite24Register_FULLY_CONNECTEDEv+0x44>)
 80093c2:	4604      	mov	r4, r0
 80093c4:	f000 fe02 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 80093c8:	4b05      	ldr	r3, [pc, #20]	; (80093e0 <_ZN6tflite24Register_FULLY_CONNECTEDEv+0x38>)
 80093ca:	681a      	ldr	r2, [r3, #0]
 80093cc:	9b03      	ldr	r3, [sp, #12]
 80093ce:	405a      	eors	r2, r3
 80093d0:	f04f 0300 	mov.w	r3, #0
 80093d4:	d102      	bne.n	80093dc <_ZN6tflite24Register_FULLY_CONNECTEDEv+0x34>
 80093d6:	4620      	mov	r0, r4
 80093d8:	b004      	add	sp, #16
 80093da:	bd10      	pop	{r4, pc}
 80093dc:	f014 faae 	bl	801d93c <__stack_chk_fail>
 80093e0:	20011294 	.word	0x20011294
 80093e4:	08008e15 	.word	0x08008e15
 80093e8:	08009085 	.word	0x08009085
 80093ec:	08008911 	.word	0x08008911

080093f0 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj>:
 80093f0:	b500      	push	{lr}
 80093f2:	4b0c      	ldr	r3, [pc, #48]	; (8009424 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 80093f4:	b083      	sub	sp, #12
 80093f6:	681b      	ldr	r3, [r3, #0]
 80093f8:	9301      	str	r3, [sp, #4]
 80093fa:	f04f 0300 	mov.w	r3, #0
 80093fe:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8009400:	b16b      	cbz	r3, 800941e <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2e>
 8009402:	4a08      	ldr	r2, [pc, #32]	; (8009424 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 8009404:	6811      	ldr	r1, [r2, #0]
 8009406:	9a01      	ldr	r2, [sp, #4]
 8009408:	4051      	eors	r1, r2
 800940a:	f04f 0200 	mov.w	r2, #0
 800940e:	d104      	bne.n	800941a <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2a>
 8009410:	2124      	movs	r1, #36	; 0x24
 8009412:	b003      	add	sp, #12
 8009414:	f85d eb04 	ldr.w	lr, [sp], #4
 8009418:	4718      	bx	r3
 800941a:	f014 fa8f 	bl	801d93c <__stack_chk_fail>
 800941e:	f013 fac7 	bl	801c9b0 <abort>
 8009422:	bf00      	nop
 8009424:	20011294 	.word	0x20011294

08009428 <_ZN6tflite12_GLOBAL__N_110MaxPrepareEP13TfLiteContextP10TfLiteNode>:
 8009428:	b510      	push	{r4, lr}
 800942a:	4b0c      	ldr	r3, [pc, #48]	; (800945c <_ZN6tflite12_GLOBAL__N_110MaxPrepareEP13TfLiteContextP10TfLiteNode+0x34>)
 800942c:	b082      	sub	sp, #8
 800942e:	460c      	mov	r4, r1
 8009430:	681b      	ldr	r3, [r3, #0]
 8009432:	9301      	str	r3, [sp, #4]
 8009434:	f04f 0300 	mov.w	r3, #0
 8009438:	f001 f85e 	bl	800a4f8 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode>
 800943c:	b918      	cbnz	r0, 8009446 <_ZN6tflite12_GLOBAL__N_110MaxPrepareEP13TfLiteContextP10TfLiteNode+0x1e>
 800943e:	6923      	ldr	r3, [r4, #16]
 8009440:	f04f 32ff 	mov.w	r2, #4294967295
 8009444:	621a      	str	r2, [r3, #32]
 8009446:	4b05      	ldr	r3, [pc, #20]	; (800945c <_ZN6tflite12_GLOBAL__N_110MaxPrepareEP13TfLiteContextP10TfLiteNode+0x34>)
 8009448:	681a      	ldr	r2, [r3, #0]
 800944a:	9b01      	ldr	r3, [sp, #4]
 800944c:	405a      	eors	r2, r3
 800944e:	f04f 0300 	mov.w	r3, #0
 8009452:	d101      	bne.n	8009458 <_ZN6tflite12_GLOBAL__N_110MaxPrepareEP13TfLiteContextP10TfLiteNode+0x30>
 8009454:	b002      	add	sp, #8
 8009456:	bd10      	pop	{r4, pc}
 8009458:	f014 fa70 	bl	801d93c <__stack_chk_fail>
 800945c:	20011294 	.word	0x20011294

08009460 <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams>:
 8009460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009464:	b089      	sub	sp, #36	; 0x24
 8009466:	4c31      	ldr	r4, [pc, #196]	; (800952c <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xcc>)
 8009468:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
 800946c:	f8d8 6000 	ldr.w	r6, [r8]
 8009470:	2e03      	cmp	r6, #3
 8009472:	6824      	ldr	r4, [r4, #0]
 8009474:	9407      	str	r4, [sp, #28]
 8009476:	f04f 0400 	mov.w	r4, #0
 800947a:	e9dd 7512 	ldrd	r7, r5, [sp, #72]	; 0x48
 800947e:	e9dd eb16 	ldrd	lr, fp, [sp, #88]	; 0x58
 8009482:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8009484:	9005      	str	r0, [sp, #20]
 8009486:	dd4e      	ble.n	8009526 <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xc6>
 8009488:	f8de 6000 	ldr.w	r6, [lr]
 800948c:	f8d8 9010 	ldr.w	r9, [r8, #16]
 8009490:	2e03      	cmp	r6, #3
 8009492:	dd48      	ble.n	8009526 <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xc6>
 8009494:	f8de c010 	ldr.w	ip, [lr, #16]
 8009498:	45cc      	cmp	ip, r9
 800949a:	d144      	bne.n	8009526 <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xc6>
 800949c:	f8d8 6008 	ldr.w	r6, [r8, #8]
 80094a0:	604e      	str	r6, [r1, #4]
 80094a2:	f8d8 600c 	ldr.w	r6, [r8, #12]
 80094a6:	f8d4 8014 	ldr.w	r8, [r4, #20]
 80094aa:	e9c1 6c02 	strd	r6, ip, [r1, #8]
 80094ae:	f8db 6008 	ldr.w	r6, [fp, #8]
 80094b2:	9600      	str	r6, [sp, #0]
 80094b4:	f8db 6004 	ldr.w	r6, [fp, #4]
 80094b8:	9601      	str	r6, [sp, #4]
 80094ba:	6866      	ldr	r6, [r4, #4]
 80094bc:	9602      	str	r6, [sp, #8]
 80094be:	e9de a902 	ldrd	sl, r9, [lr, #8]
 80094c2:	6826      	ldr	r6, [r4, #0]
 80094c4:	9603      	str	r6, [sp, #12]
 80094c6:	6926      	ldr	r6, [r4, #16]
 80094c8:	9604      	str	r6, [sp, #16]
 80094ca:	2601      	movs	r6, #1
 80094cc:	e9db be03 	ldrd	fp, lr, [fp, #12]
 80094d0:	600e      	str	r6, [r1, #0]
 80094d2:	e9c2 a901 	strd	sl, r9, [r2, #4]
 80094d6:	f8c2 c00c 	str.w	ip, [r2, #12]
 80094da:	6016      	str	r6, [r2, #0]
 80094dc:	9a00      	ldr	r2, [sp, #0]
 80094de:	605a      	str	r2, [r3, #4]
 80094e0:	9a01      	ldr	r2, [sp, #4]
 80094e2:	601a      	str	r2, [r3, #0]
 80094e4:	9a02      	ldr	r2, [sp, #8]
 80094e6:	60da      	str	r2, [r3, #12]
 80094e8:	9a03      	ldr	r2, [sp, #12]
 80094ea:	609a      	str	r2, [r3, #8]
 80094ec:	9a04      	ldr	r2, [sp, #16]
 80094ee:	6a21      	ldr	r1, [r4, #32]
 80094f0:	e9c3 2804 	strd	r2, r8, [r3, #16]
 80094f4:	2300      	movs	r3, #0
 80094f6:	4299      	cmp	r1, r3
 80094f8:	e9c5 eb01 	strd	lr, fp, [r5, #4]
 80094fc:	602e      	str	r6, [r5, #0]
 80094fe:	60ee      	str	r6, [r5, #12]
 8009500:	e9c7 3300 	strd	r3, r3, [r7]
 8009504:	db03      	blt.n	800950e <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xae>
 8009506:	9b05      	ldr	r3, [sp, #20]
 8009508:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800950a:	4798      	blx	r3
 800950c:	6038      	str	r0, [r7, #0]
 800950e:	4b07      	ldr	r3, [pc, #28]	; (800952c <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xcc>)
 8009510:	681a      	ldr	r2, [r3, #0]
 8009512:	9b07      	ldr	r3, [sp, #28]
 8009514:	405a      	eors	r2, r3
 8009516:	f04f 0300 	mov.w	r3, #0
 800951a:	d102      	bne.n	8009522 <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams+0xc2>
 800951c:	b009      	add	sp, #36	; 0x24
 800951e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009522:	f014 fa0b 	bl	801d93c <__stack_chk_fail>
 8009526:	f013 fa43 	bl	801c9b0 <abort>
 800952a:	bf00      	nop
 800952c:	20011294 	.word	0x20011294

08009530 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0>:
 8009530:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009534:	461c      	mov	r4, r3
 8009536:	4b2d      	ldr	r3, [pc, #180]	; (80095ec <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xbc>)
 8009538:	b0aa      	sub	sp, #168	; 0xa8
 800953a:	681b      	ldr	r3, [r3, #0]
 800953c:	9329      	str	r3, [sp, #164]	; 0xa4
 800953e:	f04f 0300 	mov.w	r3, #0
 8009542:	7a23      	ldrb	r3, [r4, #8]
 8009544:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8009546:	2b09      	cmp	r3, #9
 8009548:	4606      	mov	r6, r0
 800954a:	460f      	mov	r7, r1
 800954c:	4690      	mov	r8, r2
 800954e:	d001      	beq.n	8009554 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0x24>
 8009550:	2b07      	cmp	r3, #7
 8009552:	d147      	bne.n	80095e4 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb4>
 8009554:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
 8009558:	4621      	mov	r1, r4
 800955a:	4648      	mov	r0, r9
 800955c:	f000 fdb2 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8009560:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8009562:	2b04      	cmp	r3, #4
 8009564:	d13e      	bne.n	80095e4 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb4>
 8009566:	f10d 0a88 	add.w	sl, sp, #136	; 0x88
 800956a:	4629      	mov	r1, r5
 800956c:	4650      	mov	r0, sl
 800956e:	f000 fda9 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8009572:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8009574:	2b04      	cmp	r3, #4
 8009576:	d135      	bne.n	80095e4 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb4>
 8009578:	e9cd a704 	strd	sl, r7, [sp, #16]
 800957c:	af11      	add	r7, sp, #68	; 0x44
 800957e:	e9cd 7801 	strd	r7, r8, [sp, #4]
 8009582:	4630      	mov	r0, r6
 8009584:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 8009588:	ae07      	add	r6, sp, #28
 800958a:	ab15      	add	r3, sp, #84	; 0x54
 800958c:	f8cd 900c 	str.w	r9, [sp, #12]
 8009590:	9600      	str	r6, [sp, #0]
 8009592:	4642      	mov	r2, r8
 8009594:	a909      	add	r1, sp, #36	; 0x24
 8009596:	f7ff ff63 	bl	8009460 <_ZN6tflite12_GLOBAL__N_120PopulateCommonParamsEP13TfLiteContextP13cmsis_nn_dimsS4_P20cmsis_nn_pool_paramsP16cmsis_nn_contextS4_RKNS0_6OpDataERKNS_12RuntimeShapeESE_PK16TfLitePoolParams>
 800959a:	7a23      	ldrb	r3, [r4, #8]
 800959c:	2b09      	cmp	r3, #9
 800959e:	6823      	ldr	r3, [r4, #0]
 80095a0:	d014      	beq.n	80095cc <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0x9c>
 80095a2:	b1fd      	cbz	r5, 80095e4 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb4>
 80095a4:	e9cd 7800 	strd	r7, r8, [sp]
 80095a8:	682a      	ldr	r2, [r5, #0]
 80095aa:	9202      	str	r2, [sp, #8]
 80095ac:	a915      	add	r1, sp, #84	; 0x54
 80095ae:	aa09      	add	r2, sp, #36	; 0x24
 80095b0:	4630      	mov	r0, r6
 80095b2:	f009 f81f 	bl	80125f4 <arm_max_pool_s16>
 80095b6:	b9a8      	cbnz	r0, 80095e4 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb4>
 80095b8:	4b0c      	ldr	r3, [pc, #48]	; (80095ec <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xbc>)
 80095ba:	681a      	ldr	r2, [r3, #0]
 80095bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80095be:	405a      	eors	r2, r3
 80095c0:	f04f 0300 	mov.w	r3, #0
 80095c4:	d110      	bne.n	80095e8 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb8>
 80095c6:	b02a      	add	sp, #168	; 0xa8
 80095c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80095cc:	b155      	cbz	r5, 80095e4 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0xb4>
 80095ce:	e9cd 7800 	strd	r7, r8, [sp]
 80095d2:	682a      	ldr	r2, [r5, #0]
 80095d4:	9202      	str	r2, [sp, #8]
 80095d6:	a915      	add	r1, sp, #84	; 0x54
 80095d8:	aa09      	add	r2, sp, #36	; 0x24
 80095da:	4630      	mov	r0, r6
 80095dc:	f008 fe4a 	bl	8012274 <arm_max_pool_s8>
 80095e0:	2800      	cmp	r0, #0
 80095e2:	d0e9      	beq.n	80095b8 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0+0x88>
 80095e4:	f013 f9e4 	bl	801c9b0 <abort>
 80095e8:	f014 f9a8 	bl	801d93c <__stack_chk_fail>
 80095ec:	20011294 	.word	0x20011294

080095f0 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode>:
 80095f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80095f4:	4b25      	ldr	r3, [pc, #148]	; (800968c <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x9c>)
 80095f6:	694f      	ldr	r7, [r1, #20]
 80095f8:	b084      	sub	sp, #16
 80095fa:	681b      	ldr	r3, [r3, #0]
 80095fc:	9303      	str	r3, [sp, #12]
 80095fe:	f04f 0300 	mov.w	r3, #0
 8009602:	2f00      	cmp	r7, #0
 8009604:	d03f      	beq.n	8009686 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009606:	f8d1 8010 	ldr.w	r8, [r1, #16]
 800960a:	460c      	mov	r4, r1
 800960c:	f1b8 0f00 	cmp.w	r8, #0
 8009610:	d039      	beq.n	8009686 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009612:	4b1f      	ldr	r3, [pc, #124]	; (8009690 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0xa0>)
 8009614:	681a      	ldr	r2, [r3, #0]
 8009616:	4605      	mov	r5, r0
 8009618:	f000 fcf8 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 800961c:	4b1d      	ldr	r3, [pc, #116]	; (8009694 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0xa4>)
 800961e:	4606      	mov	r6, r0
 8009620:	681a      	ldr	r2, [r3, #0]
 8009622:	4621      	mov	r1, r4
 8009624:	4628      	mov	r0, r5
 8009626:	f000 fd27 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 800962a:	7a33      	ldrb	r3, [r6, #8]
 800962c:	2b01      	cmp	r3, #1
 800962e:	d01e      	beq.n	800966e <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x7e>
 8009630:	2b09      	cmp	r3, #9
 8009632:	d001      	beq.n	8009638 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x48>
 8009634:	2b07      	cmp	r3, #7
 8009636:	d111      	bne.n	800965c <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x6c>
 8009638:	9000      	str	r0, [sp, #0]
 800963a:	4633      	mov	r3, r6
 800963c:	4628      	mov	r0, r5
 800963e:	4642      	mov	r2, r8
 8009640:	4639      	mov	r1, r7
 8009642:	f7ff ff75 	bl	8009530 <_ZN6tflite12_GLOBAL__N_116MaxEvalQuantizedEP13TfLiteContextPK10TfLiteNodePK16TfLitePoolParamsRKNS0_6OpDataEPK16TfLiteEvalTensorPSC_.constprop.0.isra.0>
 8009646:	2000      	movs	r0, #0
 8009648:	4b10      	ldr	r3, [pc, #64]	; (800968c <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x9c>)
 800964a:	681a      	ldr	r2, [r3, #0]
 800964c:	9b03      	ldr	r3, [sp, #12]
 800964e:	405a      	eors	r2, r3
 8009650:	f04f 0300 	mov.w	r3, #0
 8009654:	d115      	bne.n	8009682 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x92>
 8009656:	b004      	add	sp, #16
 8009658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800965c:	4618      	mov	r0, r3
 800965e:	f004 ffd9 	bl	800e614 <TfLiteTypeGetName>
 8009662:	4601      	mov	r1, r0
 8009664:	480c      	ldr	r0, [pc, #48]	; (8009698 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0xa8>)
 8009666:	f004 fdd3 	bl	800e210 <_Z11MicroPrintfPKcz>
 800966a:	2001      	movs	r0, #1
 800966c:	e7ec      	b.n	8009648 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x58>
 800966e:	e9cd 6000 	strd	r6, r0, [sp]
 8009672:	4643      	mov	r3, r8
 8009674:	4628      	mov	r0, r5
 8009676:	463a      	mov	r2, r7
 8009678:	4621      	mov	r1, r4
 800967a:	f000 ffef 	bl	800a65c <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_>
 800967e:	2000      	movs	r0, #0
 8009680:	e7e2      	b.n	8009648 <_ZN6tflite12_GLOBAL__N_17MaxEvalEP13TfLiteContextP10TfLiteNode+0x58>
 8009682:	f014 f95b 	bl	801d93c <__stack_chk_fail>
 8009686:	f013 f993 	bl	801c9b0 <abort>
 800968a:	bf00      	nop
 800968c:	20011294 	.word	0x20011294
 8009690:	08025714 	.word	0x08025714
 8009694:	08025718 	.word	0x08025718
 8009698:	08025218 	.word	0x08025218

0800969c <_ZN6tflite20Register_MAX_POOL_2DEv>:
 800969c:	b510      	push	{r4, lr}
 800969e:	2100      	movs	r1, #0
 80096a0:	b084      	sub	sp, #16
 80096a2:	e9cd 1100 	strd	r1, r1, [sp]
 80096a6:	490b      	ldr	r1, [pc, #44]	; (80096d4 <_ZN6tflite20Register_MAX_POOL_2DEv+0x38>)
 80096a8:	4b0b      	ldr	r3, [pc, #44]	; (80096d8 <_ZN6tflite20Register_MAX_POOL_2DEv+0x3c>)
 80096aa:	4a0c      	ldr	r2, [pc, #48]	; (80096dc <_ZN6tflite20Register_MAX_POOL_2DEv+0x40>)
 80096ac:	6809      	ldr	r1, [r1, #0]
 80096ae:	9103      	str	r1, [sp, #12]
 80096b0:	f04f 0100 	mov.w	r1, #0
 80096b4:	490a      	ldr	r1, [pc, #40]	; (80096e0 <_ZN6tflite20Register_MAX_POOL_2DEv+0x44>)
 80096b6:	4604      	mov	r4, r0
 80096b8:	f000 fc88 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 80096bc:	4b05      	ldr	r3, [pc, #20]	; (80096d4 <_ZN6tflite20Register_MAX_POOL_2DEv+0x38>)
 80096be:	681a      	ldr	r2, [r3, #0]
 80096c0:	9b03      	ldr	r3, [sp, #12]
 80096c2:	405a      	eors	r2, r3
 80096c4:	f04f 0300 	mov.w	r3, #0
 80096c8:	d102      	bne.n	80096d0 <_ZN6tflite20Register_MAX_POOL_2DEv+0x34>
 80096ca:	4620      	mov	r0, r4
 80096cc:	b004      	add	sp, #16
 80096ce:	bd10      	pop	{r4, pc}
 80096d0:	f014 f934 	bl	801d93c <__stack_chk_fail>
 80096d4:	20011294 	.word	0x20011294
 80096d8:	080095f1 	.word	0x080095f1
 80096dc:	08009429 	.word	0x08009429
 80096e0:	080093f1 	.word	0x080093f1

080096e4 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj>:
 80096e4:	b500      	push	{lr}
 80096e6:	4b0c      	ldr	r3, [pc, #48]	; (8009718 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 80096e8:	b083      	sub	sp, #12
 80096ea:	681b      	ldr	r3, [r3, #0]
 80096ec:	9301      	str	r3, [sp, #4]
 80096ee:	f04f 0300 	mov.w	r3, #0
 80096f2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80096f4:	b16b      	cbz	r3, 8009712 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2e>
 80096f6:	4a08      	ldr	r2, [pc, #32]	; (8009718 <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x34>)
 80096f8:	6811      	ldr	r1, [r2, #0]
 80096fa:	9a01      	ldr	r2, [sp, #4]
 80096fc:	4051      	eors	r1, r2
 80096fe:	f04f 0200 	mov.w	r2, #0
 8009702:	d104      	bne.n	800970e <_ZN6tflite12_GLOBAL__N_14InitEP13TfLiteContextPKcj+0x2a>
 8009704:	2140      	movs	r1, #64	; 0x40
 8009706:	b003      	add	sp, #12
 8009708:	f85d eb04 	ldr.w	lr, [sp], #4
 800970c:	4718      	bx	r3
 800970e:	f014 f915 	bl	801d93c <__stack_chk_fail>
 8009712:	f013 f94d 	bl	801c9b0 <abort>
 8009716:	bf00      	nop
 8009718:	20011294 	.word	0x20011294

0800971c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode>:
 800971c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009720:	4a65      	ldr	r2, [pc, #404]	; (80098b8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x19c>)
 8009722:	680b      	ldr	r3, [r1, #0]
 8009724:	b094      	sub	sp, #80	; 0x50
 8009726:	4604      	mov	r4, r0
 8009728:	6812      	ldr	r2, [r2, #0]
 800972a:	9213      	str	r2, [sp, #76]	; 0x4c
 800972c:	f04f 0200 	mov.w	r2, #0
 8009730:	b113      	cbz	r3, 8009738 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1c>
 8009732:	681b      	ldr	r3, [r3, #0]
 8009734:	2b01      	cmp	r3, #1
 8009736:	d019      	beq.n	800976c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x50>
 8009738:	2101      	movs	r1, #1
 800973a:	6965      	ldr	r5, [r4, #20]
 800973c:	4a5f      	ldr	r2, [pc, #380]	; (80098bc <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1a0>)
 800973e:	9201      	str	r2, [sp, #4]
 8009740:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8009744:	4b5e      	ldr	r3, [pc, #376]	; (80098c0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1a4>)
 8009746:	9300      	str	r3, [sp, #0]
 8009748:	4620      	mov	r0, r4
 800974a:	4a5e      	ldr	r2, [pc, #376]	; (80098c4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1a8>)
 800974c:	460c      	mov	r4, r1
 800974e:	232f      	movs	r3, #47	; 0x2f
 8009750:	495d      	ldr	r1, [pc, #372]	; (80098c8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1ac>)
 8009752:	47a8      	blx	r5
 8009754:	4b58      	ldr	r3, [pc, #352]	; (80098b8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x19c>)
 8009756:	681a      	ldr	r2, [r3, #0]
 8009758:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800975a:	405a      	eors	r2, r3
 800975c:	f04f 0300 	mov.w	r3, #0
 8009760:	f040 80a5 	bne.w	80098ae <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x192>
 8009764:	4620      	mov	r0, r4
 8009766:	b014      	add	sp, #80	; 0x50
 8009768:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800976c:	684e      	ldr	r6, [r1, #4]
 800976e:	460d      	mov	r5, r1
 8009770:	b116      	cbz	r6, 8009778 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x5c>
 8009772:	6836      	ldr	r6, [r6, #0]
 8009774:	2e01      	cmp	r6, #1
 8009776:	d00e      	beq.n	8009796 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x7a>
 8009778:	4b50      	ldr	r3, [pc, #320]	; (80098bc <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1a0>)
 800977a:	6965      	ldr	r5, [r4, #20]
 800977c:	9301      	str	r3, [sp, #4]
 800977e:	2101      	movs	r1, #1
 8009780:	4b52      	ldr	r3, [pc, #328]	; (80098cc <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1b0>)
 8009782:	9300      	str	r3, [sp, #0]
 8009784:	e9cd 6102 	strd	r6, r1, [sp, #8]
 8009788:	4620      	mov	r0, r4
 800978a:	4a4e      	ldr	r2, [pc, #312]	; (80098c4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1a8>)
 800978c:	460c      	mov	r4, r1
 800978e:	2330      	movs	r3, #48	; 0x30
 8009790:	494d      	ldr	r1, [pc, #308]	; (80098c8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1ac>)
 8009792:	47a8      	blx	r5
 8009794:	e7de      	b.n	8009754 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x38>
 8009796:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800979a:	2200      	movs	r2, #0
 800979c:	4640      	mov	r0, r8
 800979e:	f003 f93b 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 80097a2:	4607      	mov	r7, r0
 80097a4:	2800      	cmp	r0, #0
 80097a6:	d06f      	beq.n	8009888 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x16c>
 80097a8:	6883      	ldr	r3, [r0, #8]
 80097aa:	681b      	ldr	r3, [r3, #0]
 80097ac:	2b00      	cmp	r3, #0
 80097ae:	dd61      	ble.n	8009874 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x158>
 80097b0:	2200      	movs	r2, #0
 80097b2:	4629      	mov	r1, r5
 80097b4:	4640      	mov	r0, r8
 80097b6:	f003 f95d 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 80097ba:	4682      	mov	sl, r0
 80097bc:	2800      	cmp	r0, #0
 80097be:	d06d      	beq.n	800989c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x180>
 80097c0:	f8d5 9010 	ldr.w	r9, [r5, #16]
 80097c4:	f1b9 0f00 	cmp.w	r9, #0
 80097c8:	d063      	beq.n	8009892 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x176>
 80097ca:	696b      	ldr	r3, [r5, #20]
 80097cc:	f8cd 9000 	str.w	r9, [sp]
 80097d0:	4652      	mov	r2, sl
 80097d2:	4620      	mov	r0, r4
 80097d4:	4639      	mov	r1, r7
 80097d6:	f002 ffd7 	bl	800c788 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE>
 80097da:	4639      	mov	r1, r7
 80097dc:	4604      	mov	r4, r0
 80097de:	a805      	add	r0, sp, #20
 80097e0:	f005 f8d8 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 80097e4:	4651      	mov	r1, sl
 80097e6:	a80c      	add	r0, sp, #48	; 0x30
 80097e8:	f005 f8d4 	bl	800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>
 80097ec:	9805      	ldr	r0, [sp, #20]
 80097ee:	2800      	cmp	r0, #0
 80097f0:	f100 31ff 	add.w	r1, r0, #4294967295
 80097f4:	dd57      	ble.n	80098a6 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x18a>
 80097f6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80097f8:	2300      	movs	r3, #0
 80097fa:	4299      	cmp	r1, r3
 80097fc:	d00e      	beq.n	800981c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x100>
 80097fe:	aa05      	add	r2, sp, #20
 8009800:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8009804:	42ab      	cmp	r3, r5
 8009806:	f8d2 c004 	ldr.w	ip, [r2, #4]
 800980a:	ea4f 0283 	mov.w	r2, r3, lsl #2
 800980e:	da50      	bge.n	80098b2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x196>
 8009810:	f10d 0e30 	add.w	lr, sp, #48	; 0x30
 8009814:	4472      	add	r2, lr
 8009816:	6852      	ldr	r2, [r2, #4]
 8009818:	4562      	cmp	r2, ip
 800981a:	d14a      	bne.n	80098b2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x196>
 800981c:	3301      	adds	r3, #1
 800981e:	4298      	cmp	r0, r3
 8009820:	d1eb      	bne.n	80097fa <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0xde>
 8009822:	2900      	cmp	r1, #0
 8009824:	bfa8      	it	ge
 8009826:	2300      	movge	r3, #0
 8009828:	db43      	blt.n	80098b2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x196>
 800982a:	4299      	cmp	r1, r3
 800982c:	d005      	beq.n	800983a <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x11e>
 800982e:	aa05      	add	r2, sp, #20
 8009830:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8009834:	6852      	ldr	r2, [r2, #4]
 8009836:	fb02 f606 	mul.w	r6, r2, r6
 800983a:	3301      	adds	r3, #1
 800983c:	4298      	cmp	r0, r3
 800983e:	d1f4      	bne.n	800982a <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x10e>
 8009840:	ab14      	add	r3, sp, #80	; 0x50
 8009842:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8009846:	42a9      	cmp	r1, r5
 8009848:	f853 2c38 	ldr.w	r2, [r3, #-56]
 800984c:	da31      	bge.n	80098b2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x196>
 800984e:	f853 3c1c 	ldr.w	r3, [r3, #-28]
 8009852:	4293      	cmp	r3, r2
 8009854:	d12d      	bne.n	80098b2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x196>
 8009856:	e9c9 630e 	strd	r6, r3, [r9, #56]	; 0x38
 800985a:	f8d8 3000 	ldr.w	r3, [r8]
 800985e:	4639      	mov	r1, r7
 8009860:	4640      	mov	r0, r8
 8009862:	699b      	ldr	r3, [r3, #24]
 8009864:	4798      	blx	r3
 8009866:	f8d8 3000 	ldr.w	r3, [r8]
 800986a:	4651      	mov	r1, sl
 800986c:	699b      	ldr	r3, [r3, #24]
 800986e:	4640      	mov	r0, r8
 8009870:	4798      	blx	r3
 8009872:	e76f      	b.n	8009754 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x38>
 8009874:	4b16      	ldr	r3, [pc, #88]	; (80098d0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1b4>)
 8009876:	6965      	ldr	r5, [r4, #20]
 8009878:	9300      	str	r3, [sp, #0]
 800987a:	2333      	movs	r3, #51	; 0x33
 800987c:	4620      	mov	r0, r4
 800987e:	4a11      	ldr	r2, [pc, #68]	; (80098c4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1a8>)
 8009880:	4914      	ldr	r1, [pc, #80]	; (80098d4 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1b8>)
 8009882:	4634      	mov	r4, r6
 8009884:	47a8      	blx	r5
 8009886:	e765      	b.n	8009754 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x38>
 8009888:	4b13      	ldr	r3, [pc, #76]	; (80098d8 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1bc>)
 800988a:	6965      	ldr	r5, [r4, #20]
 800988c:	9300      	str	r3, [sp, #0]
 800988e:	2332      	movs	r3, #50	; 0x32
 8009890:	e7f4      	b.n	800987c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x160>
 8009892:	4b12      	ldr	r3, [pc, #72]	; (80098dc <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1c0>)
 8009894:	6965      	ldr	r5, [r4, #20]
 8009896:	9300      	str	r3, [sp, #0]
 8009898:	2337      	movs	r3, #55	; 0x37
 800989a:	e7ef      	b.n	800987c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x160>
 800989c:	4b10      	ldr	r3, [pc, #64]	; (80098e0 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x1c4>)
 800989e:	6965      	ldr	r5, [r4, #20]
 80098a0:	9300      	str	r3, [sp, #0]
 80098a2:	2335      	movs	r3, #53	; 0x35
 80098a4:	e7ea      	b.n	800987c <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x160>
 80098a6:	2900      	cmp	r1, #0
 80098a8:	db03      	blt.n	80098b2 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x196>
 80098aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80098ac:	e7c8      	b.n	8009840 <_ZN6tflite12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode+0x124>
 80098ae:	f014 f845 	bl	801d93c <__stack_chk_fail>
 80098b2:	f013 f87d 	bl	801c9b0 <abort>
 80098b6:	bf00      	nop
 80098b8:	20011294 	.word	0x20011294
 80098bc:	0802580c 	.word	0x0802580c
 80098c0:	080252c4 	.word	0x080252c4
 80098c4:	08025244 	.word	0x08025244
 80098c8:	08024a8c 	.word	0x08024a8c
 80098cc:	080252d4 	.word	0x080252d4
 80098d0:	080252e8 	.word	0x080252e8
 80098d4:	080249b0 	.word	0x080249b0
 80098d8:	080249c8 	.word	0x080249c8
 80098dc:	08025304 	.word	0x08025304
 80098e0:	080249dc 	.word	0x080249dc

080098e4 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode>:
 80098e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80098e8:	ed2d 8b06 	vpush	{d8-d10}
 80098ec:	4b83      	ldr	r3, [pc, #524]	; (8009afc <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x218>)
 80098ee:	b09b      	sub	sp, #108	; 0x6c
 80098f0:	2200      	movs	r2, #0
 80098f2:	460c      	mov	r4, r1
 80098f4:	4606      	mov	r6, r0
 80098f6:	681b      	ldr	r3, [r3, #0]
 80098f8:	9319      	str	r3, [sp, #100]	; 0x64
 80098fa:	f04f 0300 	mov.w	r3, #0
 80098fe:	f000 fb85 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 8009902:	4621      	mov	r1, r4
 8009904:	4605      	mov	r5, r0
 8009906:	2200      	movs	r2, #0
 8009908:	4630      	mov	r0, r6
 800990a:	f000 fbb5 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 800990e:	6924      	ldr	r4, [r4, #16]
 8009910:	2c00      	cmp	r4, #0
 8009912:	d032      	beq.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009914:	7a2f      	ldrb	r7, [r5, #8]
 8009916:	2f07      	cmp	r7, #7
 8009918:	e9d4 3c02 	ldrd	r3, ip, [r4, #8]
 800991c:	e9d4 120e 	ldrd	r1, r2, [r4, #56]	; 0x38
 8009920:	4606      	mov	r6, r0
 8009922:	d01a      	beq.n	800995a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x76>
 8009924:	2f09      	cmp	r7, #9
 8009926:	f000 80c4 	beq.w	8009ab2 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1ce>
 800992a:	2f01      	cmp	r7, #1
 800992c:	d027      	beq.n	800997e <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x9a>
 800992e:	4638      	mov	r0, r7
 8009930:	f004 fe70 	bl	800e614 <TfLiteTypeGetName>
 8009934:	7a2a      	ldrb	r2, [r5, #8]
 8009936:	4601      	mov	r1, r0
 8009938:	4871      	ldr	r0, [pc, #452]	; (8009b00 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x21c>)
 800993a:	f004 fc69 	bl	800e210 <_Z11MicroPrintfPKcz>
 800993e:	2001      	movs	r0, #1
 8009940:	4b6e      	ldr	r3, [pc, #440]	; (8009afc <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x218>)
 8009942:	681a      	ldr	r2, [r3, #0]
 8009944:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8009946:	405a      	eors	r2, r3
 8009948:	f04f 0300 	mov.w	r3, #0
 800994c:	f040 80d3 	bne.w	8009af6 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x212>
 8009950:	b01b      	add	sp, #108	; 0x6c
 8009952:	ecbd 8b06 	vpop	{d8-d10}
 8009956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800995a:	6828      	ldr	r0, [r5, #0]
 800995c:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
 800995e:	6aa4      	ldr	r4, [r4, #40]	; 0x28
 8009960:	950a      	str	r5, [sp, #40]	; 0x28
 8009962:	9409      	str	r4, [sp, #36]	; 0x24
 8009964:	b14e      	cbz	r6, 800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009966:	6834      	ldr	r4, [r6, #0]
 8009968:	9402      	str	r4, [sp, #8]
 800996a:	ac09      	add	r4, sp, #36	; 0x24
 800996c:	f8cd c000 	str.w	ip, [sp]
 8009970:	9401      	str	r4, [sp, #4]
 8009972:	f008 ffd9 	bl	8012928 <arm_softmax_s16>
 8009976:	2800      	cmp	r0, #0
 8009978:	d0e2      	beq.n	8009940 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x5c>
 800997a:	f013 f819 	bl	801c9b0 <abort>
 800997e:	ed94 7b00 	vldr	d7, [r4]
 8009982:	4629      	mov	r1, r5
 8009984:	a80b      	add	r0, sp, #44	; 0x2c
 8009986:	eeb0 aa47 	vmov.f32	s20, s14
 800998a:	eef0 aa67 	vmov.f32	s21, s15
 800998e:	f000 fb99 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 8009992:	682b      	ldr	r3, [r5, #0]
 8009994:	9304      	str	r3, [sp, #16]
 8009996:	4631      	mov	r1, r6
 8009998:	a812      	add	r0, sp, #72	; 0x48
 800999a:	f000 fb93 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800999e:	2e00      	cmp	r6, #0
 80099a0:	d0eb      	beq.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 80099a2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80099a4:	6833      	ldr	r3, [r6, #0]
 80099a6:	9305      	str	r3, [sp, #20]
 80099a8:	2800      	cmp	r0, #0
 80099aa:	f100 31ff 	add.w	r1, r0, #4294967295
 80099ae:	f340 8091 	ble.w	8009ad4 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1f0>
 80099b2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80099b4:	2300      	movs	r3, #0
 80099b6:	4299      	cmp	r1, r3
 80099b8:	d00c      	beq.n	80099d4 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0xf0>
 80099ba:	aa0b      	add	r2, sp, #44	; 0x2c
 80099bc:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80099c0:	42a3      	cmp	r3, r4
 80099c2:	6855      	ldr	r5, [r2, #4]
 80099c4:	ea4f 0283 	mov.w	r2, r3, lsl #2
 80099c8:	dad7      	bge.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 80099ca:	ae12      	add	r6, sp, #72	; 0x48
 80099cc:	4432      	add	r2, r6
 80099ce:	6852      	ldr	r2, [r2, #4]
 80099d0:	42aa      	cmp	r2, r5
 80099d2:	d1d2      	bne.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 80099d4:	3301      	adds	r3, #1
 80099d6:	4298      	cmp	r0, r3
 80099d8:	d1ed      	bne.n	80099b6 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0xd2>
 80099da:	2900      	cmp	r1, #0
 80099dc:	dbcd      	blt.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 80099de:	2701      	movs	r7, #1
 80099e0:	2300      	movs	r3, #0
 80099e2:	4299      	cmp	r1, r3
 80099e4:	d005      	beq.n	80099f2 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x10e>
 80099e6:	aa0b      	add	r2, sp, #44	; 0x2c
 80099e8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 80099ec:	6852      	ldr	r2, [r2, #4]
 80099ee:	fb02 f707 	mul.w	r7, r2, r7
 80099f2:	3301      	adds	r3, #1
 80099f4:	4298      	cmp	r0, r3
 80099f6:	d1f4      	bne.n	80099e2 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0xfe>
 80099f8:	ab1a      	add	r3, sp, #104	; 0x68
 80099fa:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80099fe:	42a1      	cmp	r1, r4
 8009a00:	f853 2c38 	ldr.w	r2, [r3, #-56]
 8009a04:	4610      	mov	r0, r2
 8009a06:	dab8      	bge.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009a08:	f853 3c1c 	ldr.w	r3, [r3, #-28]
 8009a0c:	4293      	cmp	r3, r2
 8009a0e:	d1b4      	bne.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009a10:	2f00      	cmp	r7, #0
 8009a12:	dd4c      	ble.n	8009aae <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1ca>
 8009a14:	0082      	lsls	r2, r0, #2
 8009a16:	9206      	str	r2, [sp, #24]
 8009a18:	9a05      	ldr	r2, [sp, #20]
 8009a1a:	9707      	str	r7, [sp, #28]
 8009a1c:	eb02 0680 	add.w	r6, r2, r0, lsl #2
 8009a20:	9a04      	ldr	r2, [sp, #16]
 8009a22:	f04f 0800 	mov.w	r8, #0
 8009a26:	eb02 0b80 	add.w	fp, r2, r0, lsl #2
 8009a2a:	46c1      	mov	r9, r8
 8009a2c:	4682      	mov	sl, r0
 8009a2e:	f1ba 0f00 	cmp.w	sl, #0
 8009a32:	dd33      	ble.n	8009a9c <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1b8>
 8009a34:	9b04      	ldr	r3, [sp, #16]
 8009a36:	ed9f 8a33 	vldr	s16, [pc, #204]	; 8009b04 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x220>
 8009a3a:	eb03 0788 	add.w	r7, r3, r8, lsl #2
 8009a3e:	ea4f 0488 	mov.w	r4, r8, lsl #2
 8009a42:	4639      	mov	r1, r7
 8009a44:	ecf1 7a01 	vldmia	r1!, {s15}
 8009a48:	eef4 7a48 	vcmp.f32	s15, s16
 8009a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a50:	bfc8      	it	gt
 8009a52:	eeb0 8a67 	vmovgt.f32	s16, s15
 8009a56:	4559      	cmp	r1, fp
 8009a58:	d1f4      	bne.n	8009a44 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x160>
 8009a5a:	9b05      	ldr	r3, [sp, #20]
 8009a5c:	eddf 8a2a 	vldr	s17, [pc, #168]	; 8009b08 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x224>
 8009a60:	ec51 0b1a 	vmov	r0, r1, d10
 8009a64:	441c      	add	r4, r3
 8009a66:	f7f7 f8a9 	bl	8000bbc <__aeabi_d2f>
 8009a6a:	ee09 0a10 	vmov	s18, r0
 8009a6e:	4625      	mov	r5, r4
 8009a70:	ecb7 0a01 	vldmia	r7!, {s0}
 8009a74:	ee30 0a48 	vsub.f32	s0, s0, s16
 8009a78:	ee20 0a09 	vmul.f32	s0, s0, s18
 8009a7c:	f012 f992 	bl	801bda4 <expf>
 8009a80:	455f      	cmp	r7, fp
 8009a82:	ee78 8a80 	vadd.f32	s17, s17, s0
 8009a86:	eca5 0a01 	vstmia	r5!, {s0}
 8009a8a:	d1f1      	bne.n	8009a70 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x18c>
 8009a8c:	ed94 7a00 	vldr	s14, [r4]
 8009a90:	eec7 7a28 	vdiv.f32	s15, s14, s17
 8009a94:	ece4 7a01 	vstmia	r4!, {s15}
 8009a98:	42a6      	cmp	r6, r4
 8009a9a:	d1f7      	bne.n	8009a8c <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1a8>
 8009a9c:	9b06      	ldr	r3, [sp, #24]
 8009a9e:	441e      	add	r6, r3
 8009aa0:	449b      	add	fp, r3
 8009aa2:	9b07      	ldr	r3, [sp, #28]
 8009aa4:	f109 0901 	add.w	r9, r9, #1
 8009aa8:	4599      	cmp	r9, r3
 8009aaa:	44d0      	add	r8, sl
 8009aac:	dbbf      	blt.n	8009a2e <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x14a>
 8009aae:	2000      	movs	r0, #0
 8009ab0:	e746      	b.n	8009940 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x5c>
 8009ab2:	7a00      	ldrb	r0, [r0, #8]
 8009ab4:	69a4      	ldr	r4, [r4, #24]
 8009ab6:	2809      	cmp	r0, #9
 8009ab8:	6828      	ldr	r0, [r5, #0]
 8009aba:	6835      	ldr	r5, [r6, #0]
 8009abc:	f8cd c000 	str.w	ip, [sp]
 8009ac0:	e9cd 4501 	strd	r4, r5, [sp, #4]
 8009ac4:	d003      	beq.n	8009ace <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1ea>
 8009ac6:	f008 ff21 	bl	801290c <arm_softmax_s8_s16>
 8009aca:	2000      	movs	r0, #0
 8009acc:	e738      	b.n	8009940 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x5c>
 8009ace:	f008 ff0f 	bl	80128f0 <arm_softmax_s8>
 8009ad2:	e7ec      	b.n	8009aae <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x1ca>
 8009ad4:	2900      	cmp	r1, #0
 8009ad6:	f6ff af50 	blt.w	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009ada:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8009adc:	ab1a      	add	r3, sp, #104	; 0x68
 8009ade:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 8009ae2:	4291      	cmp	r1, r2
 8009ae4:	f853 0c38 	ldr.w	r0, [r3, #-56]
 8009ae8:	f6bf af47 	bge.w	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009aec:	f853 3c1c 	ldr.w	r3, [r3, #-28]
 8009af0:	4283      	cmp	r3, r0
 8009af2:	d08f      	beq.n	8009a14 <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x130>
 8009af4:	e741      	b.n	800997a <_ZN6tflite12_GLOBAL__N_111SoftmaxEvalEP13TfLiteContextP10TfLiteNode+0x96>
 8009af6:	f013 ff21 	bl	801d93c <__stack_chk_fail>
 8009afa:	bf00      	nop
 8009afc:	20011294 	.word	0x20011294
 8009b00:	08024cf8 	.word	0x08024cf8
 8009b04:	ff7fffff 	.word	0xff7fffff
 8009b08:	00000000 	.word	0x00000000

08009b0c <_ZN6tflite16Register_SOFTMAXEv>:
 8009b0c:	b510      	push	{r4, lr}
 8009b0e:	2100      	movs	r1, #0
 8009b10:	b084      	sub	sp, #16
 8009b12:	e9cd 1100 	strd	r1, r1, [sp]
 8009b16:	490b      	ldr	r1, [pc, #44]	; (8009b44 <_ZN6tflite16Register_SOFTMAXEv+0x38>)
 8009b18:	4b0b      	ldr	r3, [pc, #44]	; (8009b48 <_ZN6tflite16Register_SOFTMAXEv+0x3c>)
 8009b1a:	4a0c      	ldr	r2, [pc, #48]	; (8009b4c <_ZN6tflite16Register_SOFTMAXEv+0x40>)
 8009b1c:	6809      	ldr	r1, [r1, #0]
 8009b1e:	9103      	str	r1, [sp, #12]
 8009b20:	f04f 0100 	mov.w	r1, #0
 8009b24:	490a      	ldr	r1, [pc, #40]	; (8009b50 <_ZN6tflite16Register_SOFTMAXEv+0x44>)
 8009b26:	4604      	mov	r4, r0
 8009b28:	f000 fa50 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 8009b2c:	4b05      	ldr	r3, [pc, #20]	; (8009b44 <_ZN6tflite16Register_SOFTMAXEv+0x38>)
 8009b2e:	681a      	ldr	r2, [r3, #0]
 8009b30:	9b03      	ldr	r3, [sp, #12]
 8009b32:	405a      	eors	r2, r3
 8009b34:	f04f 0300 	mov.w	r3, #0
 8009b38:	d102      	bne.n	8009b40 <_ZN6tflite16Register_SOFTMAXEv+0x34>
 8009b3a:	4620      	mov	r0, r4
 8009b3c:	b004      	add	sp, #16
 8009b3e:	bd10      	pop	{r4, pc}
 8009b40:	f013 fefc 	bl	801d93c <__stack_chk_fail>
 8009b44:	20011294 	.word	0x20011294
 8009b48:	080098e5 	.word	0x080098e5
 8009b4c:	0800971d 	.word	0x0800971d
 8009b50:	080096e5 	.word	0x080096e5

08009b54 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE>:
 8009b54:	b570      	push	{r4, r5, r6, lr}
 8009b56:	7b0b      	ldrb	r3, [r1, #12]
 8009b58:	460d      	mov	r5, r1
 8009b5a:	491e      	ldr	r1, [pc, #120]	; (8009bd4 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x80>)
 8009b5c:	b082      	sub	sp, #8
 8009b5e:	2b01      	cmp	r3, #1
 8009b60:	6809      	ldr	r1, [r1, #0]
 8009b62:	9101      	str	r1, [sp, #4]
 8009b64:	f04f 0100 	mov.w	r1, #0
 8009b68:	4604      	mov	r4, r0
 8009b6a:	4616      	mov	r6, r2
 8009b6c:	d02a      	beq.n	8009bc4 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x70>
 8009b6e:	2b03      	cmp	r3, #3
 8009b70:	d023      	beq.n	8009bba <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x66>
 8009b72:	2b02      	cmp	r3, #2
 8009b74:	bf0b      	itete	eq
 8009b76:	4a18      	ldreq	r2, [pc, #96]	; (8009bd8 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x84>)
 8009b78:	4b18      	ldrne	r3, [pc, #96]	; (8009bdc <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x88>)
 8009b7a:	f04f 537e 	moveq.w	r3, #1065353216	; 0x3f800000
 8009b7e:	f46f 0200 	mvnne.w	r2, #8388608	; 0x800000
 8009b82:	6302      	str	r2, [r0, #48]	; 0x30
 8009b84:	6343      	str	r3, [r0, #52]	; 0x34
 8009b86:	7828      	ldrb	r0, [r5, #0]
 8009b88:	f000 fac4 	bl	800a114 <_ZN6tflite5micro18RuntimePaddingTypeE13TfLitePadding>
 8009b8c:	e9d6 3200 	ldrd	r3, r2, [r6]
 8009b90:	8063      	strh	r3, [r4, #2]
 8009b92:	e9d5 3101 	ldrd	r3, r1, [r5, #4]
 8009b96:	80a2      	strh	r2, [r4, #4]
 8009b98:	8163      	strh	r3, [r4, #10]
 8009b9a:	e9d5 2304 	ldrd	r2, r3, [r5, #16]
 8009b9e:	8223      	strh	r3, [r4, #16]
 8009ba0:	4b0c      	ldr	r3, [pc, #48]	; (8009bd4 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x80>)
 8009ba2:	7020      	strb	r0, [r4, #0]
 8009ba4:	81a1      	strh	r1, [r4, #12]
 8009ba6:	81e2      	strh	r2, [r4, #14]
 8009ba8:	681a      	ldr	r2, [r3, #0]
 8009baa:	9b01      	ldr	r3, [sp, #4]
 8009bac:	405a      	eors	r2, r3
 8009bae:	f04f 0300 	mov.w	r3, #0
 8009bb2:	d10c      	bne.n	8009bce <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x7a>
 8009bb4:	4620      	mov	r0, r4
 8009bb6:	b002      	add	sp, #8
 8009bb8:	bd70      	pop	{r4, r5, r6, pc}
 8009bba:	4b09      	ldr	r3, [pc, #36]	; (8009be0 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x8c>)
 8009bbc:	6343      	str	r3, [r0, #52]	; 0x34
 8009bbe:	2200      	movs	r2, #0
 8009bc0:	6302      	str	r2, [r0, #48]	; 0x30
 8009bc2:	e7e0      	b.n	8009b86 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x32>
 8009bc4:	4b05      	ldr	r3, [pc, #20]	; (8009bdc <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x88>)
 8009bc6:	6343      	str	r3, [r0, #52]	; 0x34
 8009bc8:	2200      	movs	r2, #0
 8009bca:	6302      	str	r2, [r0, #48]	; 0x30
 8009bcc:	e7db      	b.n	8009b86 <_ZN6tflite15ConvParamsFloatERK16TfLiteConvParamsRKNS_10OpDataConvE+0x32>
 8009bce:	f013 feb5 	bl	801d93c <__stack_chk_fail>
 8009bd2:	bf00      	nop
 8009bd4:	20011294 	.word	0x20011294
 8009bd8:	bf800000 	.word	0xbf800000
 8009bdc:	7f7fffff 	.word	0x7f7fffff
 8009be0:	40c00000 	.word	0x40c00000

08009be4 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE>:
 8009be4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009be8:	468a      	mov	sl, r1
 8009bea:	4615      	mov	r5, r2
 8009bec:	f8da 2000 	ldr.w	r2, [sl]
 8009bf0:	4999      	ldr	r1, [pc, #612]	; (8009e58 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x274>)
 8009bf2:	6812      	ldr	r2, [r2, #0]
 8009bf4:	b08f      	sub	sp, #60	; 0x3c
 8009bf6:	3a02      	subs	r2, #2
 8009bf8:	2a01      	cmp	r2, #1
 8009bfa:	6809      	ldr	r1, [r1, #0]
 8009bfc:	910d      	str	r1, [sp, #52]	; 0x34
 8009bfe:	f04f 0100 	mov.w	r1, #0
 8009c02:	e9dd 7c18 	ldrd	r7, ip, [sp, #96]	; 0x60
 8009c06:	991a      	ldr	r1, [sp, #104]	; 0x68
 8009c08:	f89d b074 	ldrb.w	fp, [sp, #116]	; 0x74
 8009c0c:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8009c0e:	4604      	mov	r4, r0
 8009c10:	d912      	bls.n	8009c38 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x54>
 8009c12:	4b92      	ldr	r3, [pc, #584]	; (8009e5c <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x278>)
 8009c14:	6944      	ldr	r4, [r0, #20]
 8009c16:	4a92      	ldr	r2, [pc, #584]	; (8009e60 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x27c>)
 8009c18:	9300      	str	r3, [sp, #0]
 8009c1a:	4992      	ldr	r1, [pc, #584]	; (8009e64 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x280>)
 8009c1c:	2357      	movs	r3, #87	; 0x57
 8009c1e:	47a0      	blx	r4
 8009c20:	2001      	movs	r0, #1
 8009c22:	4b8d      	ldr	r3, [pc, #564]	; (8009e58 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x274>)
 8009c24:	681a      	ldr	r2, [r3, #0]
 8009c26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009c28:	405a      	eors	r2, r3
 8009c2a:	f04f 0300 	mov.w	r3, #0
 8009c2e:	f040 8111 	bne.w	8009e54 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x270>
 8009c32:	b00f      	add	sp, #60	; 0x3c
 8009c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009c38:	f8da 2004 	ldr.w	r2, [sl, #4]
 8009c3c:	6812      	ldr	r2, [r2, #0]
 8009c3e:	2a01      	cmp	r2, #1
 8009c40:	d00d      	beq.n	8009c5e <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x7a>
 8009c42:	4b89      	ldr	r3, [pc, #548]	; (8009e68 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x284>)
 8009c44:	6944      	ldr	r4, [r0, #20]
 8009c46:	9301      	str	r3, [sp, #4]
 8009c48:	2501      	movs	r5, #1
 8009c4a:	4b88      	ldr	r3, [pc, #544]	; (8009e6c <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x288>)
 8009c4c:	9300      	str	r3, [sp, #0]
 8009c4e:	e9cd 2502 	strd	r2, r5, [sp, #8]
 8009c52:	4987      	ldr	r1, [pc, #540]	; (8009e70 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x28c>)
 8009c54:	4a82      	ldr	r2, [pc, #520]	; (8009e60 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x27c>)
 8009c56:	2358      	movs	r3, #88	; 0x58
 8009c58:	47a0      	blx	r4
 8009c5a:	4628      	mov	r0, r5
 8009c5c:	e7e1      	b.n	8009c22 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x3e>
 8009c5e:	692a      	ldr	r2, [r5, #16]
 8009c60:	f8d5 8004 	ldr.w	r8, [r5, #4]
 8009c64:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8009c68:	6968      	ldr	r0, [r5, #20]
 8009c6a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8009c6e:	fb02 fc0c 	mul.w	ip, r2, ip
 8009c72:	f10c 0c01 	add.w	ip, ip, #1
 8009c76:	782a      	ldrb	r2, [r5, #0]
 8009c78:	f1b8 0f00 	cmp.w	r8, #0
 8009c7c:	d01c      	beq.n	8009cb8 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0xd4>
 8009c7e:	2a01      	cmp	r2, #1
 8009c80:	f000 80bc 	beq.w	8009dfc <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x218>
 8009c84:	2a02      	cmp	r2, #2
 8009c86:	d12c      	bne.n	8009ce2 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0xfe>
 8009c88:	3901      	subs	r1, #1
 8009c8a:	fb00 f101 	mul.w	r1, r0, r1
 8009c8e:	eb08 0203 	add.w	r2, r8, r3
 8009c92:	eba2 020c 	sub.w	r2, r2, ip
 8009c96:	f101 0e01 	add.w	lr, r1, #1
 8009c9a:	fb92 f2f8 	sdiv	r2, r2, r8
 8009c9e:	3a01      	subs	r2, #1
 8009ca0:	f1b9 0f00 	cmp.w	r9, #0
 8009ca4:	f000 80b9 	beq.w	8009e1a <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x236>
 8009ca8:	eb09 0107 	add.w	r1, r9, r7
 8009cac:	eba1 010e 	sub.w	r1, r1, lr
 8009cb0:	fb91 f0f9 	sdiv	r0, r1, r9
 8009cb4:	1e41      	subs	r1, r0, #1
 8009cb6:	e01c      	b.n	8009cf2 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x10e>
 8009cb8:	3901      	subs	r1, #1
 8009cba:	fb00 f101 	mul.w	r1, r0, r1
 8009cbe:	f101 0e01 	add.w	lr, r1, #1
 8009cc2:	f1b9 0f00 	cmp.w	r9, #0
 8009cc6:	f000 8095 	beq.w	8009df4 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x210>
 8009cca:	2a01      	cmp	r2, #1
 8009ccc:	f040 80b2 	bne.w	8009e34 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x250>
 8009cd0:	f04f 32ff 	mov.w	r2, #4294967295
 8009cd4:	eb09 0107 	add.w	r1, r9, r7
 8009cd8:	3901      	subs	r1, #1
 8009cda:	fb91 f1f9 	sdiv	r1, r1, r9
 8009cde:	3901      	subs	r1, #1
 8009ce0:	e007      	b.n	8009cf2 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x10e>
 8009ce2:	3901      	subs	r1, #1
 8009ce4:	fb00 f101 	mul.w	r1, r0, r1
 8009ce8:	f04f 32ff 	mov.w	r2, #4294967295
 8009cec:	f101 0e01 	add.w	lr, r1, #1
 8009cf0:	4611      	mov	r1, r2
 8009cf2:	fb02 c208 	mla	r2, r2, r8, ip
 8009cf6:	fb01 e109 	mla	r1, r1, r9, lr
 8009cfa:	1ad3      	subs	r3, r2, r3
 8009cfc:	1bc9      	subs	r1, r1, r7
 8009cfe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8009d02:	68e7      	ldr	r7, [r4, #12]
 8009d04:	105a      	asrs	r2, r3, #1
 8009d06:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8009d0a:	f003 0301 	and.w	r3, r3, #1
 8009d0e:	60b3      	str	r3, [r6, #8]
 8009d10:	104b      	asrs	r3, r1, #1
 8009d12:	f001 0101 	and.w	r1, r1, #1
 8009d16:	6032      	str	r2, [r6, #0]
 8009d18:	60f1      	str	r1, [r6, #12]
 8009d1a:	6073      	str	r3, [r6, #4]
 8009d1c:	2200      	movs	r2, #0
 8009d1e:	4651      	mov	r1, sl
 8009d20:	4638      	mov	r0, r7
 8009d22:	f002 fe79 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 8009d26:	4680      	mov	r8, r0
 8009d28:	2800      	cmp	r0, #0
 8009d2a:	d039      	beq.n	8009da0 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x1bc>
 8009d2c:	2201      	movs	r2, #1
 8009d2e:	4651      	mov	r1, sl
 8009d30:	4638      	mov	r0, r7
 8009d32:	f002 fe71 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 8009d36:	4681      	mov	r9, r0
 8009d38:	2800      	cmp	r0, #0
 8009d3a:	d071      	beq.n	8009e20 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x23c>
 8009d3c:	4651      	mov	r1, sl
 8009d3e:	2202      	movs	r2, #2
 8009d40:	4638      	mov	r0, r7
 8009d42:	f002 fe69 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 8009d46:	4651      	mov	r1, sl
 8009d48:	900b      	str	r0, [sp, #44]	; 0x2c
 8009d4a:	2200      	movs	r2, #0
 8009d4c:	4638      	mov	r0, r7
 8009d4e:	f002 fe91 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 8009d52:	4682      	mov	sl, r0
 8009d54:	2800      	cmp	r0, #0
 8009d56:	d073      	beq.n	8009e40 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x25c>
 8009d58:	f1bb 0f01 	cmp.w	fp, #1
 8009d5c:	d12a      	bne.n	8009db4 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x1d0>
 8009d5e:	683b      	ldr	r3, [r7, #0]
 8009d60:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8009d64:	699b      	ldr	r3, [r3, #24]
 8009d66:	6132      	str	r2, [r6, #16]
 8009d68:	f8d9 2010 	ldr.w	r2, [r9, #16]
 8009d6c:	6172      	str	r2, [r6, #20]
 8009d6e:	f8da 2010 	ldr.w	r2, [sl, #16]
 8009d72:	61b2      	str	r2, [r6, #24]
 8009d74:	4651      	mov	r1, sl
 8009d76:	4638      	mov	r0, r7
 8009d78:	4798      	blx	r3
 8009d7a:	683b      	ldr	r3, [r7, #0]
 8009d7c:	4641      	mov	r1, r8
 8009d7e:	699b      	ldr	r3, [r3, #24]
 8009d80:	4638      	mov	r0, r7
 8009d82:	4798      	blx	r3
 8009d84:	683b      	ldr	r3, [r7, #0]
 8009d86:	4649      	mov	r1, r9
 8009d88:	699b      	ldr	r3, [r3, #24]
 8009d8a:	4638      	mov	r0, r7
 8009d8c:	4798      	blx	r3
 8009d8e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009d90:	b123      	cbz	r3, 8009d9c <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x1b8>
 8009d92:	683b      	ldr	r3, [r7, #0]
 8009d94:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009d96:	699b      	ldr	r3, [r3, #24]
 8009d98:	4638      	mov	r0, r7
 8009d9a:	4798      	blx	r3
 8009d9c:	2000      	movs	r0, #0
 8009d9e:	e740      	b.n	8009c22 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x3e>
 8009da0:	4b34      	ldr	r3, [pc, #208]	; (8009e74 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x290>)
 8009da2:	6965      	ldr	r5, [r4, #20]
 8009da4:	4a2e      	ldr	r2, [pc, #184]	; (8009e60 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x27c>)
 8009da6:	9300      	str	r3, [sp, #0]
 8009da8:	4620      	mov	r0, r4
 8009daa:	492e      	ldr	r1, [pc, #184]	; (8009e64 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x280>)
 8009dac:	2365      	movs	r3, #101	; 0x65
 8009dae:	47a8      	blx	r5
 8009db0:	2001      	movs	r0, #1
 8009db2:	e736      	b.n	8009c22 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x3e>
 8009db4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8009db8:	350c      	adds	r5, #12
 8009dba:	685b      	ldr	r3, [r3, #4]
 8009dbc:	9308      	str	r3, [sp, #32]
 8009dbe:	e9cd a500 	strd	sl, r5, [sp]
 8009dc2:	6ab3      	ldr	r3, [r6, #40]	; 0x28
 8009dc4:	9307      	str	r3, [sp, #28]
 8009dc6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8009dc8:	9306      	str	r3, [sp, #24]
 8009dca:	f106 0330 	add.w	r3, r6, #48	; 0x30
 8009dce:	9305      	str	r3, [sp, #20]
 8009dd0:	f106 032c 	add.w	r3, r6, #44	; 0x2c
 8009dd4:	9304      	str	r3, [sp, #16]
 8009dd6:	f106 0320 	add.w	r3, r6, #32
 8009dda:	9303      	str	r3, [sp, #12]
 8009ddc:	f106 031c 	add.w	r3, r6, #28
 8009de0:	9302      	str	r3, [sp, #8]
 8009de2:	4620      	mov	r0, r4
 8009de4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009de6:	464a      	mov	r2, r9
 8009de8:	4641      	mov	r1, r8
 8009dea:	f004 ff6d 	bl	800ecc8 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i>
 8009dee:	2800      	cmp	r0, #0
 8009df0:	d0b5      	beq.n	8009d5e <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x17a>
 8009df2:	e716      	b.n	8009c22 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x3e>
 8009df4:	f04f 32ff 	mov.w	r2, #4294967295
 8009df8:	4611      	mov	r1, r2
 8009dfa:	e77a      	b.n	8009cf2 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x10e>
 8009dfc:	3901      	subs	r1, #1
 8009dfe:	fb00 f101 	mul.w	r1, r0, r1
 8009e02:	eb08 0203 	add.w	r2, r8, r3
 8009e06:	3a01      	subs	r2, #1
 8009e08:	f101 0e01 	add.w	lr, r1, #1
 8009e0c:	fb92 f2f8 	sdiv	r2, r2, r8
 8009e10:	3a01      	subs	r2, #1
 8009e12:	f1b9 0f00 	cmp.w	r9, #0
 8009e16:	f47f af5d 	bne.w	8009cd4 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0xf0>
 8009e1a:	f04f 31ff 	mov.w	r1, #4294967295
 8009e1e:	e768      	b.n	8009cf2 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x10e>
 8009e20:	4b15      	ldr	r3, [pc, #84]	; (8009e78 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x294>)
 8009e22:	6965      	ldr	r5, [r4, #20]
 8009e24:	4a0e      	ldr	r2, [pc, #56]	; (8009e60 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x27c>)
 8009e26:	9300      	str	r3, [sp, #0]
 8009e28:	4620      	mov	r0, r4
 8009e2a:	490e      	ldr	r1, [pc, #56]	; (8009e64 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x280>)
 8009e2c:	2368      	movs	r3, #104	; 0x68
 8009e2e:	47a8      	blx	r5
 8009e30:	2001      	movs	r0, #1
 8009e32:	e6f6      	b.n	8009c22 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x3e>
 8009e34:	2a02      	cmp	r2, #2
 8009e36:	f04f 32ff 	mov.w	r2, #4294967295
 8009e3a:	f43f af35 	beq.w	8009ca8 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0xc4>
 8009e3e:	e7ec      	b.n	8009e1a <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x236>
 8009e40:	4b0e      	ldr	r3, [pc, #56]	; (8009e7c <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x298>)
 8009e42:	6965      	ldr	r5, [r4, #20]
 8009e44:	4a06      	ldr	r2, [pc, #24]	; (8009e60 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x27c>)
 8009e46:	9300      	str	r3, [sp, #0]
 8009e48:	4620      	mov	r0, r4
 8009e4a:	4906      	ldr	r1, [pc, #24]	; (8009e64 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x280>)
 8009e4c:	236d      	movs	r3, #109	; 0x6d
 8009e4e:	47a8      	blx	r5
 8009e50:	2001      	movs	r0, #1
 8009e52:	e6e6      	b.n	8009c22 <_ZN6tflite19CalculateOpDataConvEP13TfLiteContextP10TfLiteNodeRK16TfLiteConvParamsiiiiii10TfLiteTypePNS_10OpDataConvE+0x3e>
 8009e54:	f013 fd72 	bl	801d93c <__stack_chk_fail>
 8009e58:	20011294 	.word	0x20011294
 8009e5c:	0802539c 	.word	0x0802539c
 8009e60:	08025320 	.word	0x08025320
 8009e64:	080249b0 	.word	0x080249b0
 8009e68:	0802580c 	.word	0x0802580c
 8009e6c:	080253c0 	.word	0x080253c0
 8009e70:	08024a8c 	.word	0x08024a8c
 8009e74:	080249c8 	.word	0x080249c8
 8009e78:	08024a78 	.word	0x08024a78
 8009e7c:	080249dc 	.word	0x080249dc

08009e80 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation>:
 8009e80:	b500      	push	{lr}
 8009e82:	4b15      	ldr	r3, [pc, #84]	; (8009ed8 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x58>)
 8009e84:	b083      	sub	sp, #12
 8009e86:	2901      	cmp	r1, #1
 8009e88:	681b      	ldr	r3, [r3, #0]
 8009e8a:	9301      	str	r3, [sp, #4]
 8009e8c:	f04f 0300 	mov.w	r3, #0
 8009e90:	d01a      	beq.n	8009ec8 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x48>
 8009e92:	2903      	cmp	r1, #3
 8009e94:	d013      	beq.n	8009ebe <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x3e>
 8009e96:	2902      	cmp	r1, #2
 8009e98:	bf0b      	itete	eq
 8009e9a:	4a10      	ldreq	r2, [pc, #64]	; (8009edc <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x5c>)
 8009e9c:	4b10      	ldrne	r3, [pc, #64]	; (8009ee0 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x60>)
 8009e9e:	f04f 537e 	moveq.w	r3, #1065353216	; 0x3f800000
 8009ea2:	f46f 0200 	mvnne.w	r2, #8388608	; 0x800000
 8009ea6:	61c2      	str	r2, [r0, #28]
 8009ea8:	6203      	str	r3, [r0, #32]
 8009eaa:	4b0b      	ldr	r3, [pc, #44]	; (8009ed8 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x58>)
 8009eac:	681a      	ldr	r2, [r3, #0]
 8009eae:	9b01      	ldr	r3, [sp, #4]
 8009eb0:	405a      	eors	r2, r3
 8009eb2:	f04f 0300 	mov.w	r3, #0
 8009eb6:	d10c      	bne.n	8009ed2 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x52>
 8009eb8:	b003      	add	sp, #12
 8009eba:	f85d fb04 	ldr.w	pc, [sp], #4
 8009ebe:	4b09      	ldr	r3, [pc, #36]	; (8009ee4 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x64>)
 8009ec0:	6203      	str	r3, [r0, #32]
 8009ec2:	2200      	movs	r2, #0
 8009ec4:	61c2      	str	r2, [r0, #28]
 8009ec6:	e7f0      	b.n	8009eaa <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x2a>
 8009ec8:	4b05      	ldr	r3, [pc, #20]	; (8009ee0 <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x60>)
 8009eca:	6203      	str	r3, [r0, #32]
 8009ecc:	2200      	movs	r2, #0
 8009ece:	61c2      	str	r2, [r0, #28]
 8009ed0:	e7eb      	b.n	8009eaa <_ZN6tflite25FullyConnectedParamsFloatE21TfLiteFusedActivation+0x2a>
 8009ed2:	f013 fd33 	bl	801d93c <__stack_chk_fail>
 8009ed6:	bf00      	nop
 8009ed8:	20011294 	.word	0x20011294
 8009edc:	bf800000 	.word	0xbf800000
 8009ee0:	7f7fffff 	.word	0x7f7fffff
 8009ee4:	40c00000 	.word	0x40c00000

08009ee8 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE>:
 8009ee8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009eec:	b086      	sub	sp, #24
 8009eee:	4699      	mov	r9, r3
 8009ef0:	e9dd 630e 	ldrd	r6, r3, [sp, #56]	; 0x38
 8009ef4:	4c30      	ldr	r4, [pc, #192]	; (8009fb8 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xd0>)
 8009ef6:	6824      	ldr	r4, [r4, #0]
 8009ef8:	9405      	str	r4, [sp, #20]
 8009efa:	f04f 0400 	mov.w	r4, #0
 8009efe:	f896 4030 	ldrb.w	r4, [r6, #48]	; 0x30
 8009f02:	2c01      	cmp	r4, #1
 8009f04:	e9dd a710 	ldrd	sl, r7, [sp, #64]	; 0x40
 8009f08:	4605      	mov	r5, r0
 8009f0a:	4688      	mov	r8, r1
 8009f0c:	d038      	beq.n	8009f80 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x98>
 8009f0e:	2a01      	cmp	r2, #1
 8009f10:	d10b      	bne.n	8009f2a <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x42>
 8009f12:	2400      	movs	r4, #0
 8009f14:	4b28      	ldr	r3, [pc, #160]	; (8009fb8 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xd0>)
 8009f16:	681a      	ldr	r2, [r3, #0]
 8009f18:	9b05      	ldr	r3, [sp, #20]
 8009f1a:	405a      	eors	r2, r3
 8009f1c:	f04f 0300 	mov.w	r3, #0
 8009f20:	d142      	bne.n	8009fa8 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xc0>
 8009f22:	4620      	mov	r0, r4
 8009f24:	b006      	add	sp, #24
 8009f26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009f2a:	ed9f 7b21 	vldr	d7, [pc, #132]	; 8009fb0 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xc8>
 8009f2e:	aa02      	add	r2, sp, #8
 8009f30:	9201      	str	r2, [sp, #4]
 8009f32:	f8cd a000 	str.w	sl, [sp]
 8009f36:	4632      	mov	r2, r6
 8009f38:	4649      	mov	r1, r9
 8009f3a:	4628      	mov	r0, r5
 8009f3c:	ed8d 7b02 	vstr	d7, [sp, #8]
 8009f40:	f004 fd4e 	bl	800e9e0 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd>
 8009f44:	4604      	mov	r4, r0
 8009f46:	2800      	cmp	r0, #0
 8009f48:	d1e4      	bne.n	8009f14 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x2c>
 8009f4a:	ed9d 0b02 	vldr	d0, [sp, #8]
 8009f4e:	1d39      	adds	r1, r7, #4
 8009f50:	4638      	mov	r0, r7
 8009f52:	f004 fc37 	bl	800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>
 8009f56:	6933      	ldr	r3, [r6, #16]
 8009f58:	bb43      	cbnz	r3, 8009fac <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xc4>
 8009f5a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8009f5e:	e9c7 3405 	strd	r3, r4, [r7, #20]
 8009f62:	f8da 3010 	ldr.w	r3, [sl, #16]
 8009f66:	61fb      	str	r3, [r7, #28]
 8009f68:	f107 030c 	add.w	r3, r7, #12
 8009f6c:	9300      	str	r3, [sp, #0]
 8009f6e:	4652      	mov	r2, sl
 8009f70:	f107 0308 	add.w	r3, r7, #8
 8009f74:	4641      	mov	r1, r8
 8009f76:	4628      	mov	r0, r5
 8009f78:	f004 fdc4 	bl	800eb04 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_>
 8009f7c:	4604      	mov	r4, r0
 8009f7e:	e7c9      	b.n	8009f14 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x2c>
 8009f80:	6b71      	ldr	r1, [r6, #52]	; 0x34
 8009f82:	2900      	cmp	r1, #0
 8009f84:	d0c3      	beq.n	8009f0e <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x26>
 8009f86:	6809      	ldr	r1, [r1, #0]
 8009f88:	b131      	cbz	r1, 8009f98 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xb0>
 8009f8a:	6809      	ldr	r1, [r1, #0]
 8009f8c:	2901      	cmp	r1, #1
 8009f8e:	d0be      	beq.n	8009f0e <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x26>
 8009f90:	6943      	ldr	r3, [r0, #20]
 8009f92:	490a      	ldr	r1, [pc, #40]	; (8009fbc <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xd4>)
 8009f94:	4798      	blx	r3
 8009f96:	e7bd      	b.n	8009f14 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x2c>
 8009f98:	4b09      	ldr	r3, [pc, #36]	; (8009fc0 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xd8>)
 8009f9a:	6945      	ldr	r5, [r0, #20]
 8009f9c:	4a09      	ldr	r2, [pc, #36]	; (8009fc4 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xdc>)
 8009f9e:	9300      	str	r3, [sp, #0]
 8009fa0:	4909      	ldr	r1, [pc, #36]	; (8009fc8 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0xe0>)
 8009fa2:	2346      	movs	r3, #70	; 0x46
 8009fa4:	47a8      	blx	r5
 8009fa6:	e7b5      	b.n	8009f14 <_ZN6tflite29CalculateOpDataFullyConnectedEP13TfLiteContext21TfLiteFusedActivation10TfLiteTypePK12TfLiteTensorS6_S6_PS4_PNS_20OpDataFullyConnectedE+0x2c>
 8009fa8:	f013 fcc8 	bl	801d93c <__stack_chk_fail>
 8009fac:	f012 fd00 	bl	801c9b0 <abort>
	...
 8009fb8:	20011294 	.word	0x20011294
 8009fbc:	0802548c 	.word	0x0802548c
 8009fc0:	08025470 	.word	0x08025470
 8009fc4:	080253e8 	.word	0x080253e8
 8009fc8:	080249b0 	.word	0x080249b0

08009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>:
 8009fcc:	b500      	push	{lr}
 8009fce:	6001      	str	r1, [r0, #0]
 8009fd0:	2100      	movs	r1, #0
 8009fd2:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8009fd6:	e9c0 1105 	strd	r1, r1, [r0, #20]
 8009fda:	4b0b      	ldr	r3, [pc, #44]	; (800a008 <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_+0x3c>)
 8009fdc:	b083      	sub	sp, #12
 8009fde:	681b      	ldr	r3, [r3, #0]
 8009fe0:	9301      	str	r3, [sp, #4]
 8009fe2:	f04f 0300 	mov.w	r3, #0
 8009fe6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8009fea:	6103      	str	r3, [r0, #16]
 8009fec:	4b06      	ldr	r3, [pc, #24]	; (800a008 <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_+0x3c>)
 8009fee:	6042      	str	r2, [r0, #4]
 8009ff0:	681a      	ldr	r2, [r3, #0]
 8009ff2:	9b01      	ldr	r3, [sp, #4]
 8009ff4:	405a      	eors	r2, r3
 8009ff6:	f04f 0300 	mov.w	r3, #0
 8009ffa:	d102      	bne.n	800a002 <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_+0x36>
 8009ffc:	b003      	add	sp, #12
 8009ffe:	f85d fb04 	ldr.w	pc, [sp], #4
 800a002:	f013 fc9b 	bl	801d93c <__stack_chk_fail>
 800a006:	bf00      	nop
 800a008:	20011294 	.word	0x20011294

0800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>:
 800a00c:	b510      	push	{r4, lr}
 800a00e:	4c19      	ldr	r4, [pc, #100]	; (800a074 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x68>)
 800a010:	b082      	sub	sp, #8
 800a012:	6824      	ldr	r4, [r4, #0]
 800a014:	9401      	str	r4, [sp, #4]
 800a016:	f04f 0400 	mov.w	r4, #0
 800a01a:	b348      	cbz	r0, 800a070 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x64>
 800a01c:	b341      	cbz	r1, 800a070 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x64>
 800a01e:	6809      	ldr	r1, [r1, #0]
 800a020:	468c      	mov	ip, r1
 800a022:	2a00      	cmp	r2, #0
 800a024:	f85c 4b04 	ldr.w	r4, [ip], #4
 800a028:	db16      	blt.n	800a058 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x4c>
 800a02a:	42a2      	cmp	r2, r4
 800a02c:	da14      	bge.n	800a058 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x4c>
 800a02e:	f85c 4022 	ldr.w	r4, [ip, r2, lsl #2]
 800a032:	2c00      	cmp	r4, #0
 800a034:	db10      	blt.n	800a058 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x4c>
 800a036:	4c0f      	ldr	r4, [pc, #60]	; (800a074 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x68>)
 800a038:	f8d4 c000 	ldr.w	ip, [r4]
 800a03c:	9c01      	ldr	r4, [sp, #4]
 800a03e:	ea94 0c0c 	eors.w	ip, r4, ip
 800a042:	f04f 0400 	mov.w	r4, #0
 800a046:	d111      	bne.n	800a06c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x60>
 800a048:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800a04c:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800a04e:	6851      	ldr	r1, [r2, #4]
 800a050:	b002      	add	sp, #8
 800a052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a056:	4718      	bx	r3
 800a058:	4b06      	ldr	r3, [pc, #24]	; (800a074 <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x68>)
 800a05a:	681a      	ldr	r2, [r3, #0]
 800a05c:	9b01      	ldr	r3, [sp, #4]
 800a05e:	405a      	eors	r2, r3
 800a060:	f04f 0300 	mov.w	r3, #0
 800a064:	d102      	bne.n	800a06c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei+0x60>
 800a066:	2000      	movs	r0, #0
 800a068:	b002      	add	sp, #8
 800a06a:	bd10      	pop	{r4, pc}
 800a06c:	f013 fc66 	bl	801d93c <__stack_chk_fail>
 800a070:	f012 fc9e 	bl	801c9b0 <abort>
 800a074:	20011294 	.word	0x20011294

0800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>:
 800a078:	b500      	push	{lr}
 800a07a:	f8df c044 	ldr.w	ip, [pc, #68]	; 800a0c0 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei+0x48>
 800a07e:	b083      	sub	sp, #12
 800a080:	f8dc c000 	ldr.w	ip, [ip]
 800a084:	f8cd c004 	str.w	ip, [sp, #4]
 800a088:	f04f 0c00 	mov.w	ip, #0
 800a08c:	b1b0      	cbz	r0, 800a0bc <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei+0x44>
 800a08e:	b1a9      	cbz	r1, 800a0bc <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei+0x44>
 800a090:	f8df c02c 	ldr.w	ip, [pc, #44]	; 800a0c0 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei+0x48>
 800a094:	f8dc e000 	ldr.w	lr, [ip]
 800a098:	f8dd c004 	ldr.w	ip, [sp, #4]
 800a09c:	ea9c 0e0e 	eors.w	lr, ip, lr
 800a0a0:	f04f 0c00 	mov.w	ip, #0
 800a0a4:	d108      	bne.n	800a0b8 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei+0x40>
 800a0a6:	6849      	ldr	r1, [r1, #4]
 800a0a8:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800a0aa:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 800a0ae:	6851      	ldr	r1, [r2, #4]
 800a0b0:	b003      	add	sp, #12
 800a0b2:	f85d eb04 	ldr.w	lr, [sp], #4
 800a0b6:	4718      	bx	r3
 800a0b8:	f013 fc40 	bl	801d93c <__stack_chk_fail>
 800a0bc:	f012 fc78 	bl	801c9b0 <abort>
 800a0c0:	20011294 	.word	0x20011294

0800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>:
 800a0c4:	b510      	push	{r4, lr}
 800a0c6:	4b12      	ldr	r3, [pc, #72]	; (800a110 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x4c>)
 800a0c8:	b082      	sub	sp, #8
 800a0ca:	4604      	mov	r4, r0
 800a0cc:	681b      	ldr	r3, [r3, #0]
 800a0ce:	9301      	str	r3, [sp, #4]
 800a0d0:	f04f 0300 	mov.w	r3, #0
 800a0d4:	b159      	cbz	r1, 800a0ee <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x2a>
 800a0d6:	6849      	ldr	r1, [r1, #4]
 800a0d8:	b149      	cbz	r1, 800a0ee <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x2a>
 800a0da:	f851 2b04 	ldr.w	r2, [r1], #4
 800a0de:	6002      	str	r2, [r0, #0]
 800a0e0:	2a06      	cmp	r2, #6
 800a0e2:	dc12      	bgt.n	800a10a <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x46>
 800a0e4:	0092      	lsls	r2, r2, #2
 800a0e6:	3004      	adds	r0, #4
 800a0e8:	f012 fcd4 	bl	801ca94 <memcpy>
 800a0ec:	e001      	b.n	800a0f2 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x2e>
 800a0ee:	2300      	movs	r3, #0
 800a0f0:	6023      	str	r3, [r4, #0]
 800a0f2:	4b07      	ldr	r3, [pc, #28]	; (800a110 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x4c>)
 800a0f4:	681a      	ldr	r2, [r3, #0]
 800a0f6:	9b01      	ldr	r3, [sp, #4]
 800a0f8:	405a      	eors	r2, r3
 800a0fa:	f04f 0300 	mov.w	r3, #0
 800a0fe:	d102      	bne.n	800a106 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor+0x42>
 800a100:	4620      	mov	r0, r4
 800a102:	b002      	add	sp, #8
 800a104:	bd10      	pop	{r4, pc}
 800a106:	f013 fc19 	bl	801d93c <__stack_chk_fail>
 800a10a:	f012 fc51 	bl	801c9b0 <abort>
 800a10e:	bf00      	nop
 800a110:	20011294 	.word	0x20011294

0800a114 <_ZN6tflite5micro18RuntimePaddingTypeE13TfLitePadding>:
 800a114:	b500      	push	{lr}
 800a116:	4b0b      	ldr	r3, [pc, #44]	; (800a144 <_ZN6tflite5micro18RuntimePaddingTypeE13TfLitePadding+0x30>)
 800a118:	b083      	sub	sp, #12
 800a11a:	2801      	cmp	r0, #1
 800a11c:	681b      	ldr	r3, [r3, #0]
 800a11e:	9301      	str	r3, [sp, #4]
 800a120:	f04f 0300 	mov.w	r3, #0
 800a124:	d002      	beq.n	800a12c <_ZN6tflite5micro18RuntimePaddingTypeE13TfLitePadding+0x18>
 800a126:	2802      	cmp	r0, #2
 800a128:	bf18      	it	ne
 800a12a:	2000      	movne	r0, #0
 800a12c:	4b05      	ldr	r3, [pc, #20]	; (800a144 <_ZN6tflite5micro18RuntimePaddingTypeE13TfLitePadding+0x30>)
 800a12e:	681a      	ldr	r2, [r3, #0]
 800a130:	9b01      	ldr	r3, [sp, #4]
 800a132:	405a      	eors	r2, r3
 800a134:	f04f 0300 	mov.w	r3, #0
 800a138:	d102      	bne.n	800a140 <_ZN6tflite5micro18RuntimePaddingTypeE13TfLitePadding+0x2c>
 800a13a:	b003      	add	sp, #12
 800a13c:	f85d fb04 	ldr.w	pc, [sp], #4
 800a140:	f013 fbfc 	bl	801d93c <__stack_chk_fail>
 800a144:	20011294 	.word	0x20011294

0800a148 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor>:
 800a148:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a14a:	4b25      	ldr	r3, [pc, #148]	; (800a1e0 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x98>)
 800a14c:	b085      	sub	sp, #20
 800a14e:	4605      	mov	r5, r0
 800a150:	681b      	ldr	r3, [r3, #0]
 800a152:	9303      	str	r3, [sp, #12]
 800a154:	f04f 0300 	mov.w	r3, #0
 800a158:	2900      	cmp	r1, #0
 800a15a:	d02c      	beq.n	800a1b6 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x6e>
 800a15c:	4617      	mov	r7, r2
 800a15e:	2a00      	cmp	r2, #0
 800a160:	d032      	beq.n	800a1c8 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x80>
 800a162:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a164:	b1f3      	cbz	r3, 800a1a4 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x5c>
 800a166:	688b      	ldr	r3, [r1, #8]
 800a168:	681e      	ldr	r6, [r3, #0]
 800a16a:	4630      	mov	r0, r6
 800a16c:	460c      	mov	r4, r1
 800a16e:	f004 fa39 	bl	800e5e4 <TfLiteIntArrayGetSizeInBytes>
 800a172:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800a174:	4601      	mov	r1, r0
 800a176:	4628      	mov	r0, r5
 800a178:	4798      	blx	r3
 800a17a:	2e00      	cmp	r6, #0
 800a17c:	68a1      	ldr	r1, [r4, #8]
 800a17e:	6006      	str	r6, [r0, #0]
 800a180:	60a0      	str	r0, [r4, #8]
 800a182:	6078      	str	r0, [r7, #4]
 800a184:	dd04      	ble.n	800a190 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x48>
 800a186:	00b2      	lsls	r2, r6, #2
 800a188:	3104      	adds	r1, #4
 800a18a:	3004      	adds	r0, #4
 800a18c:	f012 fc90 	bl	801cab0 <memmove>
 800a190:	2000      	movs	r0, #0
 800a192:	4b13      	ldr	r3, [pc, #76]	; (800a1e0 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x98>)
 800a194:	681a      	ldr	r2, [r3, #0]
 800a196:	9b03      	ldr	r3, [sp, #12]
 800a198:	405a      	eors	r2, r3
 800a19a:	f04f 0300 	mov.w	r3, #0
 800a19e:	d11c      	bne.n	800a1da <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x92>
 800a1a0:	b005      	add	sp, #20
 800a1a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1a4:	4b0f      	ldr	r3, [pc, #60]	; (800a1e4 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x9c>)
 800a1a6:	6944      	ldr	r4, [r0, #20]
 800a1a8:	4a0f      	ldr	r2, [pc, #60]	; (800a1e8 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa0>)
 800a1aa:	9300      	str	r3, [sp, #0]
 800a1ac:	490f      	ldr	r1, [pc, #60]	; (800a1ec <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa4>)
 800a1ae:	2385      	movs	r3, #133	; 0x85
 800a1b0:	47a0      	blx	r4
 800a1b2:	2001      	movs	r0, #1
 800a1b4:	e7ed      	b.n	800a192 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x4a>
 800a1b6:	4b0e      	ldr	r3, [pc, #56]	; (800a1f0 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa8>)
 800a1b8:	6944      	ldr	r4, [r0, #20]
 800a1ba:	4a0b      	ldr	r2, [pc, #44]	; (800a1e8 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa0>)
 800a1bc:	9300      	str	r3, [sp, #0]
 800a1be:	490b      	ldr	r1, [pc, #44]	; (800a1ec <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa4>)
 800a1c0:	2383      	movs	r3, #131	; 0x83
 800a1c2:	47a0      	blx	r4
 800a1c4:	2001      	movs	r0, #1
 800a1c6:	e7e4      	b.n	800a192 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x4a>
 800a1c8:	4b0a      	ldr	r3, [pc, #40]	; (800a1f4 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xac>)
 800a1ca:	6944      	ldr	r4, [r0, #20]
 800a1cc:	4a06      	ldr	r2, [pc, #24]	; (800a1e8 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa0>)
 800a1ce:	9300      	str	r3, [sp, #0]
 800a1d0:	4906      	ldr	r1, [pc, #24]	; (800a1ec <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0xa4>)
 800a1d2:	2384      	movs	r3, #132	; 0x84
 800a1d4:	47a0      	blx	r4
 800a1d6:	2001      	movs	r0, #1
 800a1d8:	e7db      	b.n	800a192 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor+0x4a>
 800a1da:	f013 fbaf 	bl	801d93c <__stack_chk_fail>
 800a1de:	bf00      	nop
 800a1e0:	20011294 	.word	0x20011294
 800a1e4:	08025664 	.word	0x08025664
 800a1e8:	080255bc 	.word	0x080255bc
 800a1ec:	080249b0 	.word	0x080249b0
 800a1f0:	08025638 	.word	0x08025638
 800a1f4:	0802564c 	.word	0x0802564c

0800a1f8 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf>:
 800a1f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1fc:	4c88      	ldr	r4, [pc, #544]	; (800a420 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x228>)
 800a1fe:	b09d      	sub	sp, #116	; 0x74
 800a200:	6824      	ldr	r4, [r4, #0]
 800a202:	941b      	str	r4, [sp, #108]	; 0x6c
 800a204:	f04f 0400 	mov.w	r4, #0
 800a208:	9c26      	ldr	r4, [sp, #152]	; 0x98
 800a20a:	e9cd 2418 	strd	r2, r4, [sp, #96]	; 0x60
 800a20e:	680a      	ldr	r2, [r1, #0]
 800a210:	2a04      	cmp	r2, #4
 800a212:	f040 808c 	bne.w	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a216:	681a      	ldr	r2, [r3, #0]
 800a218:	2a04      	cmp	r2, #4
 800a21a:	f040 8088 	bne.w	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a21e:	684c      	ldr	r4, [r1, #4]
 800a220:	685a      	ldr	r2, [r3, #4]
 800a222:	9415      	str	r4, [sp, #84]	; 0x54
 800a224:	42a2      	cmp	r2, r4
 800a226:	f040 8082 	bne.w	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a22a:	691a      	ldr	r2, [r3, #16]
 800a22c:	4681      	mov	r9, r0
 800a22e:	6908      	ldr	r0, [r1, #16]
 800a230:	9004      	str	r0, [sp, #16]
 800a232:	4282      	cmp	r2, r0
 800a234:	d17b      	bne.n	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a236:	689d      	ldr	r5, [r3, #8]
 800a238:	68da      	ldr	r2, [r3, #12]
 800a23a:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800a23e:	9313      	str	r3, [sp, #76]	; 0x4c
 800a240:	2c00      	cmp	r4, #0
 800a242:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800a246:	950e      	str	r5, [sp, #56]	; 0x38
 800a248:	e9d1 6702 	ldrd	r6, r7, [r1, #8]
 800a24c:	920f      	str	r2, [sp, #60]	; 0x3c
 800a24e:	9314      	str	r3, [sp, #80]	; 0x50
 800a250:	f340 80d4 	ble.w	800a3fc <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x204>
 800a254:	fb02 f305 	mul.w	r3, r2, r5
 800a258:	fb00 f303 	mul.w	r3, r0, r3
 800a25c:	9317      	str	r3, [sp, #92]	; 0x5c
 800a25e:	fb00 f307 	mul.w	r3, r0, r7
 800a262:	ea4f 0a83 	mov.w	sl, r3, lsl #2
 800a266:	ea4f 0b80 	mov.w	fp, r0, lsl #2
 800a26a:	fb00 f302 	mul.w	r3, r0, r2
 800a26e:	2100      	movs	r1, #0
 800a270:	9316      	str	r3, [sp, #88]	; 0x58
 800a272:	465b      	mov	r3, fp
 800a274:	910d      	str	r1, [sp, #52]	; 0x34
 800a276:	46d3      	mov	fp, sl
 800a278:	910c      	str	r1, [sp, #48]	; 0x30
 800a27a:	9112      	str	r1, [sp, #72]	; 0x48
 800a27c:	469a      	mov	sl, r3
 800a27e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a280:	2b00      	cmp	r3, #0
 800a282:	f340 80ad 	ble.w	800a3e0 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x1e8>
 800a286:	2300      	movs	r3, #0
 800a288:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a28a:	930b      	str	r3, [sp, #44]	; 0x2c
 800a28c:	920a      	str	r2, [sp, #40]	; 0x28
 800a28e:	9311      	str	r3, [sp, #68]	; 0x44
 800a290:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a292:	2b00      	cmp	r3, #0
 800a294:	f340 8095 	ble.w	800a3c2 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x1ca>
 800a298:	2300      	movs	r3, #0
 800a29a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a29c:	9309      	str	r3, [sp, #36]	; 0x24
 800a29e:	9208      	str	r2, [sp, #32]
 800a2a0:	9310      	str	r3, [sp, #64]	; 0x40
 800a2a2:	9b04      	ldr	r3, [sp, #16]
 800a2a4:	2b00      	cmp	r3, #0
 800a2a6:	dd7d      	ble.n	800a3a4 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x1ac>
 800a2a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a2aa:	f9b9 3004 	ldrsh.w	r3, [r9, #4]
 800a2ae:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800a2b2:	9808      	ldr	r0, [sp, #32]
 800a2b4:	1ad1      	subs	r1, r2, r3
 800a2b6:	1a9b      	subs	r3, r3, r2
 800a2b8:	ea23 72e3 	bic.w	r2, r3, r3, asr #31
 800a2bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a2be:	9205      	str	r2, [sp, #20]
 800a2c0:	18cb      	adds	r3, r1, r3
 800a2c2:	4413      	add	r3, r2
 800a2c4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a2c6:	9107      	str	r1, [sp, #28]
 800a2c8:	eba2 0805 	sub.w	r8, r2, r5
 800a2cc:	1aad      	subs	r5, r5, r2
 800a2ce:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800a2d2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800a2d4:	fb07 8303 	mla	r3, r7, r3, r8
 800a2d8:	442b      	add	r3, r5
 800a2da:	fb0a 2303 	mla	r3, sl, r3, r2
 800a2de:	9301      	str	r3, [sp, #4]
 800a2e0:	e9d9 3205 	ldrd	r3, r2, [r9, #20]
 800a2e4:	eba7 0c08 	sub.w	ip, r7, r8
 800a2e8:	4594      	cmp	ip, r2
 800a2ea:	bfa8      	it	ge
 800a2ec:	4694      	movge	ip, r2
 800a2ee:	1a72      	subs	r2, r6, r1
 800a2f0:	429a      	cmp	r2, r3
 800a2f2:	bfa8      	it	ge
 800a2f4:	461a      	movge	r2, r3
 800a2f6:	4613      	mov	r3, r2
 800a2f8:	9206      	str	r2, [sp, #24]
 800a2fa:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800a2fc:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 800a300:	9203      	str	r2, [sp, #12]
 800a302:	2200      	movs	r2, #0
 800a304:	9202      	str	r2, [sp, #8]
 800a306:	eb03 0e01 	add.w	lr, r3, r1
 800a30a:	eb0c 0008 	add.w	r0, ip, r8
 800a30e:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800a312:	4293      	cmp	r3, r2
 800a314:	eddf 7a43 	vldr	s15, [pc, #268]	; 800a424 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x22c>
 800a318:	da25      	bge.n	800a366 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x16e>
 800a31a:	9a07      	ldr	r2, [sp, #28]
 800a31c:	9c01      	ldr	r4, [sp, #4]
 800a31e:	18d1      	adds	r1, r2, r3
 800a320:	45ac      	cmp	ip, r5
 800a322:	dd1c      	ble.n	800a35e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x166>
 800a324:	eb08 0305 	add.w	r3, r8, r5
 800a328:	4622      	mov	r2, r4
 800a32a:	b916      	cbnz	r6, 800a332 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x13a>
 800a32c:	b129      	cbz	r1, 800a33a <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x142>
 800a32e:	f012 fb3f 	bl	801c9b0 <abort>
 800a332:	2900      	cmp	r1, #0
 800a334:	dbfb      	blt.n	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a336:	428e      	cmp	r6, r1
 800a338:	ddf9      	ble.n	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a33a:	2f00      	cmp	r7, #0
 800a33c:	d168      	bne.n	800a410 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x218>
 800a33e:	2b00      	cmp	r3, #0
 800a340:	d1f5      	bne.n	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a342:	ed92 7a00 	vldr	s14, [r2]
 800a346:	eeb4 7a67 	vcmp.f32	s14, s15
 800a34a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a34e:	f103 0301 	add.w	r3, r3, #1
 800a352:	bfc8      	it	gt
 800a354:	eef0 7a47 	vmovgt.f32	s15, s14
 800a358:	4298      	cmp	r0, r3
 800a35a:	4452      	add	r2, sl
 800a35c:	d1e5      	bne.n	800a32a <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x132>
 800a35e:	3101      	adds	r1, #1
 800a360:	4571      	cmp	r1, lr
 800a362:	445c      	add	r4, fp
 800a364:	d1dc      	bne.n	800a320 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x128>
 800a366:	ed99 7a09 	vldr	s14, [r9, #36]	; 0x24
 800a36a:	edd9 6a0a 	vldr	s13, [r9, #40]	; 0x28
 800a36e:	9a03      	ldr	r2, [sp, #12]
 800a370:	9b02      	ldr	r3, [sp, #8]
 800a372:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a37a:	bfd8      	it	le
 800a37c:	eeb0 7a67 	vmovle.f32	s14, s15
 800a380:	eef4 6a47 	vcmp.f32	s13, s14
 800a384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a388:	bf48      	it	mi
 800a38a:	eeb0 7a66 	vmovmi.f32	s14, s13
 800a38e:	eca2 7a01 	vstmia	r2!, {s14}
 800a392:	9203      	str	r2, [sp, #12]
 800a394:	9a01      	ldr	r2, [sp, #4]
 800a396:	3204      	adds	r2, #4
 800a398:	9201      	str	r2, [sp, #4]
 800a39a:	9a04      	ldr	r2, [sp, #16]
 800a39c:	3301      	adds	r3, #1
 800a39e:	4293      	cmp	r3, r2
 800a3a0:	9302      	str	r3, [sp, #8]
 800a3a2:	d1b4      	bne.n	800a30e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x116>
 800a3a4:	9a08      	ldr	r2, [sp, #32]
 800a3a6:	9904      	ldr	r1, [sp, #16]
 800a3a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a3aa:	440a      	add	r2, r1
 800a3ac:	9208      	str	r2, [sp, #32]
 800a3ae:	9914      	ldr	r1, [sp, #80]	; 0x50
 800a3b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800a3b2:	440a      	add	r2, r1
 800a3b4:	9209      	str	r2, [sp, #36]	; 0x24
 800a3b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800a3b8:	3301      	adds	r3, #1
 800a3ba:	429a      	cmp	r2, r3
 800a3bc:	9310      	str	r3, [sp, #64]	; 0x40
 800a3be:	f47f af70 	bne.w	800a2a2 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0xaa>
 800a3c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a3c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 800a3c6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a3c8:	440a      	add	r2, r1
 800a3ca:	920a      	str	r2, [sp, #40]	; 0x28
 800a3cc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800a3ce:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a3d0:	440a      	add	r2, r1
 800a3d2:	920b      	str	r2, [sp, #44]	; 0x2c
 800a3d4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a3d6:	3301      	adds	r3, #1
 800a3d8:	429a      	cmp	r2, r3
 800a3da:	9311      	str	r3, [sp, #68]	; 0x44
 800a3dc:	f47f af58 	bne.w	800a290 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x98>
 800a3e0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800a3e2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800a3e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a3e6:	440a      	add	r2, r1
 800a3e8:	920c      	str	r2, [sp, #48]	; 0x30
 800a3ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800a3ec:	4432      	add	r2, r6
 800a3ee:	920d      	str	r2, [sp, #52]	; 0x34
 800a3f0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800a3f2:	3301      	adds	r3, #1
 800a3f4:	4293      	cmp	r3, r2
 800a3f6:	9312      	str	r3, [sp, #72]	; 0x48
 800a3f8:	f47f af41 	bne.w	800a27e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x86>
 800a3fc:	4b08      	ldr	r3, [pc, #32]	; (800a420 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x228>)
 800a3fe:	681a      	ldr	r2, [r3, #0]
 800a400:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800a402:	405a      	eors	r2, r3
 800a404:	f04f 0300 	mov.w	r3, #0
 800a408:	d107      	bne.n	800a41a <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x222>
 800a40a:	b01d      	add	sp, #116	; 0x74
 800a40c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a410:	2b00      	cmp	r3, #0
 800a412:	db8c      	blt.n	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a414:	42bb      	cmp	r3, r7
 800a416:	db94      	blt.n	800a342 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x14a>
 800a418:	e789      	b.n	800a32e <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf+0x136>
 800a41a:	f013 fa8f 	bl	801d93c <__stack_chk_fail>
 800a41e:	bf00      	nop
 800a420:	20011294 	.word	0x20011294
 800a424:	ff7fffff 	.word	0xff7fffff

0800a428 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE>:
 800a428:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a42a:	e9d1 7e01 	ldrd	r7, lr, [r1, #4]
 800a42e:	6893      	ldr	r3, [r2, #8]
 800a430:	4a30      	ldr	r2, [pc, #192]	; (800a4f4 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xcc>)
 800a432:	b083      	sub	sp, #12
 800a434:	e9d3 6502 	ldrd	r6, r5, [r3, #8]
 800a438:	6812      	ldr	r2, [r2, #0]
 800a43a:	9201      	str	r2, [sp, #4]
 800a43c:	f04f 0200 	mov.w	r2, #0
 800a440:	9c08      	ldr	r4, [sp, #32]
 800a442:	780b      	ldrb	r3, [r1, #0]
 800a444:	e9d1 0203 	ldrd	r0, r2, [r1, #12]
 800a448:	2f00      	cmp	r7, #0
 800a44a:	d045      	beq.n	800a4d8 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xb0>
 800a44c:	2b01      	cmp	r3, #1
 800a44e:	d033      	beq.n	800a4b8 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x90>
 800a450:	2b02      	cmp	r3, #2
 800a452:	d020      	beq.n	800a496 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x6e>
 800a454:	f04f 31ff 	mov.w	r1, #4294967295
 800a458:	460b      	mov	r3, r1
 800a45a:	fb03 230e 	mla	r3, r3, lr, r2
 800a45e:	fb01 0207 	mla	r2, r1, r7, r0
 800a462:	1b9b      	subs	r3, r3, r6
 800a464:	1b52      	subs	r2, r2, r5
 800a466:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800a46a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800a46e:	1050      	asrs	r0, r2, #1
 800a470:	1059      	asrs	r1, r3, #1
 800a472:	f002 0201 	and.w	r2, r2, #1
 800a476:	f003 0301 	and.w	r3, r3, #1
 800a47a:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800a47e:	e9c4 0100 	strd	r0, r1, [r4]
 800a482:	4b1c      	ldr	r3, [pc, #112]	; (800a4f4 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xcc>)
 800a484:	681a      	ldr	r2, [r3, #0]
 800a486:	9b01      	ldr	r3, [sp, #4]
 800a488:	405a      	eors	r2, r3
 800a48a:	f04f 0300 	mov.w	r3, #0
 800a48e:	d12f      	bne.n	800a4f0 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xc8>
 800a490:	2000      	movs	r0, #0
 800a492:	b003      	add	sp, #12
 800a494:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a496:	1979      	adds	r1, r7, r5
 800a498:	1a09      	subs	r1, r1, r0
 800a49a:	fb91 f1f7 	sdiv	r1, r1, r7
 800a49e:	3901      	subs	r1, #1
 800a4a0:	f1be 0f00 	cmp.w	lr, #0
 800a4a4:	d021      	beq.n	800a4ea <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xc2>
 800a4a6:	eb0e 0c06 	add.w	ip, lr, r6
 800a4aa:	ebac 0c02 	sub.w	ip, ip, r2
 800a4ae:	fb9c fcfe 	sdiv	ip, ip, lr
 800a4b2:	f10c 33ff 	add.w	r3, ip, #4294967295
 800a4b6:	e7d0      	b.n	800a45a <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x32>
 800a4b8:	1979      	adds	r1, r7, r5
 800a4ba:	3901      	subs	r1, #1
 800a4bc:	fb91 f1f7 	sdiv	r1, r1, r7
 800a4c0:	3901      	subs	r1, #1
 800a4c2:	f1be 0f00 	cmp.w	lr, #0
 800a4c6:	d010      	beq.n	800a4ea <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xc2>
 800a4c8:	eb0e 0306 	add.w	r3, lr, r6
 800a4cc:	3b01      	subs	r3, #1
 800a4ce:	fb93 fcfe 	sdiv	ip, r3, lr
 800a4d2:	f10c 33ff 	add.w	r3, ip, #4294967295
 800a4d6:	e7c0      	b.n	800a45a <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x32>
 800a4d8:	f1be 0f00 	cmp.w	lr, #0
 800a4dc:	d0ba      	beq.n	800a454 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x2c>
 800a4de:	2b01      	cmp	r3, #1
 800a4e0:	f04f 31ff 	mov.w	r1, #4294967295
 800a4e4:	d0f0      	beq.n	800a4c8 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0xa0>
 800a4e6:	2b02      	cmp	r3, #2
 800a4e8:	d0dd      	beq.n	800a4a6 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x7e>
 800a4ea:	f04f 33ff 	mov.w	r3, #4294967295
 800a4ee:	e7b4      	b.n	800a45a <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE+0x32>
 800a4f0:	f013 fa24 	bl	801d93c <__stack_chk_fail>
 800a4f4:	20011294 	.word	0x20011294

0800a4f8 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode>:
 800a4f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a4fc:	4b4e      	ldr	r3, [pc, #312]	; (800a638 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x140>)
 800a4fe:	f8d1 a014 	ldr.w	sl, [r1, #20]
 800a502:	b084      	sub	sp, #16
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	9303      	str	r3, [sp, #12]
 800a508:	f04f 0300 	mov.w	r3, #0
 800a50c:	f1ba 0f00 	cmp.w	sl, #0
 800a510:	f000 8090 	beq.w	800a634 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x13c>
 800a514:	f8d1 9010 	ldr.w	r9, [r1, #16]
 800a518:	460d      	mov	r5, r1
 800a51a:	f1b9 0f00 	cmp.w	r9, #0
 800a51e:	f000 8089 	beq.w	800a634 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x13c>
 800a522:	68c7      	ldr	r7, [r0, #12]
 800a524:	4604      	mov	r4, r0
 800a526:	2200      	movs	r2, #0
 800a528:	4638      	mov	r0, r7
 800a52a:	f002 fa75 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 800a52e:	4606      	mov	r6, r0
 800a530:	2800      	cmp	r0, #0
 800a532:	d042      	beq.n	800a5ba <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xc2>
 800a534:	4629      	mov	r1, r5
 800a536:	2200      	movs	r2, #0
 800a538:	4638      	mov	r0, r7
 800a53a:	f002 fa9b 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 800a53e:	4605      	mov	r5, r0
 800a540:	b330      	cbz	r0, 800a590 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x98>
 800a542:	4603      	mov	r3, r0
 800a544:	f8cd 9000 	str.w	r9, [sp]
 800a548:	4632      	mov	r2, r6
 800a54a:	4651      	mov	r1, sl
 800a54c:	4620      	mov	r0, r4
 800a54e:	f7ff ff6b 	bl	800a428 <_ZN6tflite22CalculateOpDataPoolingEPK13TfLiteContextPK16TfLitePoolParamsPK12TfLiteTensorS8_PNS_13OpDataPoolingE>
 800a552:	4680      	mov	r8, r0
 800a554:	bb30      	cbnz	r0, 800a5a4 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xac>
 800a556:	7830      	ldrb	r0, [r6, #0]
 800a558:	2801      	cmp	r0, #1
 800a55a:	d043      	beq.n	800a5e4 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xec>
 800a55c:	2809      	cmp	r0, #9
 800a55e:	d001      	beq.n	800a564 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x6c>
 800a560:	2807      	cmp	r0, #7
 800a562:	d135      	bne.n	800a5d0 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xd8>
 800a564:	f109 0314 	add.w	r3, r9, #20
 800a568:	f89a 1014 	ldrb.w	r1, [sl, #20]
 800a56c:	9300      	str	r3, [sp, #0]
 800a56e:	4620      	mov	r0, r4
 800a570:	f109 0310 	add.w	r3, r9, #16
 800a574:	462a      	mov	r2, r5
 800a576:	f004 fac5 	bl	800eb04 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_>
 800a57a:	683b      	ldr	r3, [r7, #0]
 800a57c:	4631      	mov	r1, r6
 800a57e:	4638      	mov	r0, r7
 800a580:	699b      	ldr	r3, [r3, #24]
 800a582:	4798      	blx	r3
 800a584:	683b      	ldr	r3, [r7, #0]
 800a586:	4629      	mov	r1, r5
 800a588:	699b      	ldr	r3, [r3, #24]
 800a58a:	4638      	mov	r0, r7
 800a58c:	4798      	blx	r3
 800a58e:	e009      	b.n	800a5a4 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xac>
 800a590:	4b2a      	ldr	r3, [pc, #168]	; (800a63c <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x144>)
 800a592:	6965      	ldr	r5, [r4, #20]
 800a594:	4a2a      	ldr	r2, [pc, #168]	; (800a640 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x148>)
 800a596:	9300      	str	r3, [sp, #0]
 800a598:	492a      	ldr	r1, [pc, #168]	; (800a644 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x14c>)
 800a59a:	2340      	movs	r3, #64	; 0x40
 800a59c:	4620      	mov	r0, r4
 800a59e:	47a8      	blx	r5
 800a5a0:	f04f 0801 	mov.w	r8, #1
 800a5a4:	4b24      	ldr	r3, [pc, #144]	; (800a638 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x140>)
 800a5a6:	681a      	ldr	r2, [r3, #0]
 800a5a8:	9b03      	ldr	r3, [sp, #12]
 800a5aa:	405a      	eors	r2, r3
 800a5ac:	f04f 0300 	mov.w	r3, #0
 800a5b0:	d13e      	bne.n	800a630 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x138>
 800a5b2:	4640      	mov	r0, r8
 800a5b4:	b004      	add	sp, #16
 800a5b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5ba:	4b23      	ldr	r3, [pc, #140]	; (800a648 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x150>)
 800a5bc:	6965      	ldr	r5, [r4, #20]
 800a5be:	4a20      	ldr	r2, [pc, #128]	; (800a640 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x148>)
 800a5c0:	9300      	str	r3, [sp, #0]
 800a5c2:	4920      	ldr	r1, [pc, #128]	; (800a644 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x14c>)
 800a5c4:	233d      	movs	r3, #61	; 0x3d
 800a5c6:	4620      	mov	r0, r4
 800a5c8:	47a8      	blx	r5
 800a5ca:	f04f 0801 	mov.w	r8, #1
 800a5ce:	e7e9      	b.n	800a5a4 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xac>
 800a5d0:	f004 f820 	bl	800e614 <TfLiteTypeGetName>
 800a5d4:	7832      	ldrb	r2, [r6, #0]
 800a5d6:	4601      	mov	r1, r0
 800a5d8:	481c      	ldr	r0, [pc, #112]	; (800a64c <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x154>)
 800a5da:	f003 fe19 	bl	800e210 <_Z11MicroPrintfPKcz>
 800a5de:	f04f 0801 	mov.w	r8, #1
 800a5e2:	e7df      	b.n	800a5a4 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0xac>
 800a5e4:	f89a 3014 	ldrb.w	r3, [sl, #20]
 800a5e8:	2b01      	cmp	r3, #1
 800a5ea:	d00b      	beq.n	800a604 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x10c>
 800a5ec:	2b03      	cmp	r3, #3
 800a5ee:	d010      	beq.n	800a612 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x11a>
 800a5f0:	2b02      	cmp	r3, #2
 800a5f2:	d015      	beq.n	800a620 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x128>
 800a5f4:	f46f 0300 	mvn.w	r3, #8388608	; 0x800000
 800a5f8:	f8c9 3018 	str.w	r3, [r9, #24]
 800a5fc:	4b14      	ldr	r3, [pc, #80]	; (800a650 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x158>)
 800a5fe:	f8c9 301c 	str.w	r3, [r9, #28]
 800a602:	e7ba      	b.n	800a57a <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x82>
 800a604:	2300      	movs	r3, #0
 800a606:	f8c9 3018 	str.w	r3, [r9, #24]
 800a60a:	4b11      	ldr	r3, [pc, #68]	; (800a650 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x158>)
 800a60c:	f8c9 301c 	str.w	r3, [r9, #28]
 800a610:	e7b3      	b.n	800a57a <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x82>
 800a612:	2300      	movs	r3, #0
 800a614:	f8c9 3018 	str.w	r3, [r9, #24]
 800a618:	4b0e      	ldr	r3, [pc, #56]	; (800a654 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x15c>)
 800a61a:	f8c9 301c 	str.w	r3, [r9, #28]
 800a61e:	e7ac      	b.n	800a57a <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x82>
 800a620:	4b0d      	ldr	r3, [pc, #52]	; (800a658 <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x160>)
 800a622:	f8c9 3018 	str.w	r3, [r9, #24]
 800a626:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800a62a:	f8c9 301c 	str.w	r3, [r9, #28]
 800a62e:	e7a4      	b.n	800a57a <_ZN6tflite14PoolingPrepareEP13TfLiteContextP10TfLiteNode+0x82>
 800a630:	f013 f984 	bl	801d93c <__stack_chk_fail>
 800a634:	f012 f9bc 	bl	801c9b0 <abort>
 800a638:	20011294 	.word	0x20011294
 800a63c:	080249dc 	.word	0x080249dc
 800a640:	08025694 	.word	0x08025694
 800a644:	080249b0 	.word	0x080249b0
 800a648:	080249c8 	.word	0x080249c8
 800a64c:	08024cf8 	.word	0x08024cf8
 800a650:	7f7fffff 	.word	0x7f7fffff
 800a654:	40c00000 	.word	0x40c00000
 800a658:	bf800000 	.word	0xbf800000

0800a65c <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_>:
 800a65c:	b530      	push	{r4, r5, lr}
 800a65e:	b09f      	sub	sp, #124	; 0x7c
 800a660:	6999      	ldr	r1, [r3, #24]
 800a662:	910d      	str	r1, [sp, #52]	; 0x34
 800a664:	69d9      	ldr	r1, [r3, #28]
 800a666:	6890      	ldr	r0, [r2, #8]
 800a668:	6854      	ldr	r4, [r2, #4]
 800a66a:	910e      	str	r1, [sp, #56]	; 0x38
 800a66c:	4919      	ldr	r1, [pc, #100]	; (800a6d4 <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_+0x78>)
 800a66e:	9408      	str	r4, [sp, #32]
 800a670:	9007      	str	r0, [sp, #28]
 800a672:	6809      	ldr	r1, [r1, #0]
 800a674:	911d      	str	r1, [sp, #116]	; 0x74
 800a676:	f04f 0100 	mov.w	r1, #0
 800a67a:	6911      	ldr	r1, [r2, #16]
 800a67c:	68d2      	ldr	r2, [r2, #12]
 800a67e:	9d22      	ldr	r5, [sp, #136]	; 0x88
 800a680:	920a      	str	r2, [sp, #40]	; 0x28
 800a682:	e9d3 3200 	ldrd	r3, r2, [r3]
 800a686:	9109      	str	r1, [sp, #36]	; 0x24
 800a688:	a80f      	add	r0, sp, #60	; 0x3c
 800a68a:	4629      	mov	r1, r5
 800a68c:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 800a68e:	f8ad 2014 	strh.w	r2, [sp, #20]
 800a692:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a696:	f7ff fd15 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800a69a:	b1cd      	cbz	r5, 800a6d0 <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_+0x74>
 800a69c:	682a      	ldr	r2, [r5, #0]
 800a69e:	9203      	str	r2, [sp, #12]
 800a6a0:	4621      	mov	r1, r4
 800a6a2:	a816      	add	r0, sp, #88	; 0x58
 800a6a4:	f7ff fd0e 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800a6a8:	b194      	cbz	r4, 800a6d0 <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_+0x74>
 800a6aa:	6823      	ldr	r3, [r4, #0]
 800a6ac:	9a03      	ldr	r2, [sp, #12]
 800a6ae:	9300      	str	r3, [sp, #0]
 800a6b0:	a90f      	add	r1, sp, #60	; 0x3c
 800a6b2:	ab16      	add	r3, sp, #88	; 0x58
 800a6b4:	a804      	add	r0, sp, #16
 800a6b6:	f7ff fd9f 	bl	800a1f8 <_ZN6tflite13reference_ops7MaxPoolERKNS_10PoolParamsERKNS_12RuntimeShapeEPKfS6_Pf>
 800a6ba:	4b06      	ldr	r3, [pc, #24]	; (800a6d4 <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_+0x78>)
 800a6bc:	681a      	ldr	r2, [r3, #0]
 800a6be:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800a6c0:	405a      	eors	r2, r3
 800a6c2:	f04f 0300 	mov.w	r3, #0
 800a6c6:	d101      	bne.n	800a6cc <_ZN6tflite19MaxPoolingEvalFloatEP13TfLiteContextP10TfLiteNodeP16TfLitePoolParamsPKNS_13OpDataPoolingEPK16TfLiteEvalTensorPS9_+0x70>
 800a6c8:	b01f      	add	sp, #124	; 0x7c
 800a6ca:	bd30      	pop	{r4, r5, pc}
 800a6cc:	f013 f936 	bl	801d93c <__stack_chk_fail>
 800a6d0:	f012 f96e 	bl	801c9b0 <abort>
 800a6d4:	20011294 	.word	0x20011294

0800a6d8 <_ZN6tflite12_GLOBAL__N_121InitQuantizeReferenceEP13TfLiteContextPKcj>:
 800a6d8:	b500      	push	{lr}
 800a6da:	4b0c      	ldr	r3, [pc, #48]	; (800a70c <_ZN6tflite12_GLOBAL__N_121InitQuantizeReferenceEP13TfLiteContextPKcj+0x34>)
 800a6dc:	b083      	sub	sp, #12
 800a6de:	681b      	ldr	r3, [r3, #0]
 800a6e0:	9301      	str	r3, [sp, #4]
 800a6e2:	f04f 0300 	mov.w	r3, #0
 800a6e6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a6e8:	b16b      	cbz	r3, 800a706 <_ZN6tflite12_GLOBAL__N_121InitQuantizeReferenceEP13TfLiteContextPKcj+0x2e>
 800a6ea:	4a08      	ldr	r2, [pc, #32]	; (800a70c <_ZN6tflite12_GLOBAL__N_121InitQuantizeReferenceEP13TfLiteContextPKcj+0x34>)
 800a6ec:	6811      	ldr	r1, [r2, #0]
 800a6ee:	9a01      	ldr	r2, [sp, #4]
 800a6f0:	4051      	eors	r1, r2
 800a6f2:	f04f 0200 	mov.w	r2, #0
 800a6f6:	d104      	bne.n	800a702 <_ZN6tflite12_GLOBAL__N_121InitQuantizeReferenceEP13TfLiteContextPKcj+0x2a>
 800a6f8:	2120      	movs	r1, #32
 800a6fa:	b003      	add	sp, #12
 800a6fc:	f85d eb04 	ldr.w	lr, [sp], #4
 800a700:	4718      	bx	r3
 800a702:	f013 f91b 	bl	801d93c <__stack_chk_fail>
 800a706:	f012 f953 	bl	801c9b0 <abort>
 800a70a:	bf00      	nop
 800a70c:	20011294 	.word	0x20011294

0800a710 <_ZN6tflite17Register_QUANTIZEEv>:
 800a710:	b510      	push	{r4, lr}
 800a712:	2100      	movs	r1, #0
 800a714:	b084      	sub	sp, #16
 800a716:	e9cd 1100 	strd	r1, r1, [sp]
 800a71a:	490b      	ldr	r1, [pc, #44]	; (800a748 <_ZN6tflite17Register_QUANTIZEEv+0x38>)
 800a71c:	4b0b      	ldr	r3, [pc, #44]	; (800a74c <_ZN6tflite17Register_QUANTIZEEv+0x3c>)
 800a71e:	4a0c      	ldr	r2, [pc, #48]	; (800a750 <_ZN6tflite17Register_QUANTIZEEv+0x40>)
 800a720:	6809      	ldr	r1, [r1, #0]
 800a722:	9103      	str	r1, [sp, #12]
 800a724:	f04f 0100 	mov.w	r1, #0
 800a728:	490a      	ldr	r1, [pc, #40]	; (800a754 <_ZN6tflite17Register_QUANTIZEEv+0x44>)
 800a72a:	4604      	mov	r4, r0
 800a72c:	f7ff fc4e 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 800a730:	4b05      	ldr	r3, [pc, #20]	; (800a748 <_ZN6tflite17Register_QUANTIZEEv+0x38>)
 800a732:	681a      	ldr	r2, [r3, #0]
 800a734:	9b03      	ldr	r3, [sp, #12]
 800a736:	405a      	eors	r2, r3
 800a738:	f04f 0300 	mov.w	r3, #0
 800a73c:	d102      	bne.n	800a744 <_ZN6tflite17Register_QUANTIZEEv+0x34>
 800a73e:	4620      	mov	r0, r4
 800a740:	b004      	add	sp, #16
 800a742:	bd10      	pop	{r4, pc}
 800a744:	f013 f8fa 	bl	801d93c <__stack_chk_fail>
 800a748:	20011294 	.word	0x20011294
 800a74c:	0800a9cd 	.word	0x0800a9cd
 800a750:	0800a759 	.word	0x0800a759
 800a754:	0800a6d9 	.word	0x0800a6d9

0800a758 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode>:
 800a758:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a75c:	4b8b      	ldr	r3, [pc, #556]	; (800a98c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x234>)
 800a75e:	690e      	ldr	r6, [r1, #16]
 800a760:	b086      	sub	sp, #24
 800a762:	681b      	ldr	r3, [r3, #0]
 800a764:	9305      	str	r3, [sp, #20]
 800a766:	f04f 0300 	mov.w	r3, #0
 800a76a:	2e00      	cmp	r6, #0
 800a76c:	f000 810b 	beq.w	800a986 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x22e>
 800a770:	680b      	ldr	r3, [r1, #0]
 800a772:	460c      	mov	r4, r1
 800a774:	4605      	mov	r5, r0
 800a776:	b113      	cbz	r3, 800a77e <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x26>
 800a778:	681b      	ldr	r3, [r3, #0]
 800a77a:	2b01      	cmp	r3, #1
 800a77c:	d018      	beq.n	800a7b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x58>
 800a77e:	2401      	movs	r4, #1
 800a780:	696e      	ldr	r6, [r5, #20]
 800a782:	4a83      	ldr	r2, [pc, #524]	; (800a990 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x238>)
 800a784:	9201      	str	r2, [sp, #4]
 800a786:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800a78a:	4b82      	ldr	r3, [pc, #520]	; (800a994 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x23c>)
 800a78c:	9300      	str	r3, [sp, #0]
 800a78e:	4a82      	ldr	r2, [pc, #520]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a790:	4982      	ldr	r1, [pc, #520]	; (800a99c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x244>)
 800a792:	2324      	movs	r3, #36	; 0x24
 800a794:	4628      	mov	r0, r5
 800a796:	47b0      	blx	r6
 800a798:	4b7c      	ldr	r3, [pc, #496]	; (800a98c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x234>)
 800a79a:	681a      	ldr	r2, [r3, #0]
 800a79c:	9b05      	ldr	r3, [sp, #20]
 800a79e:	405a      	eors	r2, r3
 800a7a0:	f04f 0300 	mov.w	r3, #0
 800a7a4:	f040 80e6 	bne.w	800a974 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x21c>
 800a7a8:	4620      	mov	r0, r4
 800a7aa:	b006      	add	sp, #24
 800a7ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a7b0:	684b      	ldr	r3, [r1, #4]
 800a7b2:	2b00      	cmp	r3, #0
 800a7b4:	d033      	beq.n	800a81e <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xc6>
 800a7b6:	f8d3 a000 	ldr.w	sl, [r3]
 800a7ba:	f1ba 0f01 	cmp.w	sl, #1
 800a7be:	d00d      	beq.n	800a7dc <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x84>
 800a7c0:	6946      	ldr	r6, [r0, #20]
 800a7c2:	4b73      	ldr	r3, [pc, #460]	; (800a990 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x238>)
 800a7c4:	9301      	str	r3, [sp, #4]
 800a7c6:	2401      	movs	r4, #1
 800a7c8:	4b75      	ldr	r3, [pc, #468]	; (800a9a0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x248>)
 800a7ca:	9300      	str	r3, [sp, #0]
 800a7cc:	e9cd a402 	strd	sl, r4, [sp, #8]
 800a7d0:	4a71      	ldr	r2, [pc, #452]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a7d2:	4972      	ldr	r1, [pc, #456]	; (800a99c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x244>)
 800a7d4:	2325      	movs	r3, #37	; 0x25
 800a7d6:	4628      	mov	r0, r5
 800a7d8:	47b0      	blx	r6
 800a7da:	e7dd      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a7dc:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800a7e0:	2200      	movs	r2, #0
 800a7e2:	4640      	mov	r0, r8
 800a7e4:	f002 f918 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 800a7e8:	4607      	mov	r7, r0
 800a7ea:	b328      	cbz	r0, 800a838 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xe0>
 800a7ec:	4621      	mov	r1, r4
 800a7ee:	2200      	movs	r2, #0
 800a7f0:	4640      	mov	r0, r8
 800a7f2:	f002 f93f 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 800a7f6:	4681      	mov	r9, r0
 800a7f8:	b1a0      	cbz	r0, 800a824 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xcc>
 800a7fa:	f890 4030 	ldrb.w	r4, [r0, #48]	; 0x30
 800a7fe:	2c01      	cmp	r4, #1
 800a800:	d01f      	beq.n	800a842 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xea>
 800a802:	e9cd 4a02 	strd	r4, sl, [sp, #8]
 800a806:	4a67      	ldr	r2, [pc, #412]	; (800a9a4 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x24c>)
 800a808:	9201      	str	r2, [sp, #4]
 800a80a:	4b67      	ldr	r3, [pc, #412]	; (800a9a8 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x250>)
 800a80c:	696e      	ldr	r6, [r5, #20]
 800a80e:	4a62      	ldr	r2, [pc, #392]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a810:	9300      	str	r3, [sp, #0]
 800a812:	4962      	ldr	r1, [pc, #392]	; (800a99c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x244>)
 800a814:	2330      	movs	r3, #48	; 0x30
 800a816:	4628      	mov	r0, r5
 800a818:	4654      	mov	r4, sl
 800a81a:	47b0      	blx	r6
 800a81c:	e7bc      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a81e:	6946      	ldr	r6, [r0, #20]
 800a820:	469a      	mov	sl, r3
 800a822:	e7ce      	b.n	800a7c2 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x6a>
 800a824:	4b61      	ldr	r3, [pc, #388]	; (800a9ac <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x254>)
 800a826:	696e      	ldr	r6, [r5, #20]
 800a828:	9300      	str	r3, [sp, #0]
 800a82a:	232c      	movs	r3, #44	; 0x2c
 800a82c:	4a5a      	ldr	r2, [pc, #360]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a82e:	4960      	ldr	r1, [pc, #384]	; (800a9b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x258>)
 800a830:	4628      	mov	r0, r5
 800a832:	4654      	mov	r4, sl
 800a834:	47b0      	blx	r6
 800a836:	e7af      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a838:	4b5e      	ldr	r3, [pc, #376]	; (800a9b4 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x25c>)
 800a83a:	696e      	ldr	r6, [r5, #20]
 800a83c:	9300      	str	r3, [sp, #0]
 800a83e:	232a      	movs	r3, #42	; 0x2a
 800a840:	e7f4      	b.n	800a82c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xd4>
 800a842:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800a844:	2b00      	cmp	r3, #0
 800a846:	d033      	beq.n	800a8b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x158>
 800a848:	681b      	ldr	r3, [r3, #0]
 800a84a:	2b00      	cmp	r3, #0
 800a84c:	d058      	beq.n	800a900 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1a8>
 800a84e:	681b      	ldr	r3, [r3, #0]
 800a850:	2b01      	cmp	r3, #1
 800a852:	d008      	beq.n	800a866 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x10e>
 800a854:	4b58      	ldr	r3, [pc, #352]	; (800a9b8 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x260>)
 800a856:	696e      	ldr	r6, [r5, #20]
 800a858:	4a4f      	ldr	r2, [pc, #316]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a85a:	9300      	str	r3, [sp, #0]
 800a85c:	4954      	ldr	r1, [pc, #336]	; (800a9b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x258>)
 800a85e:	2336      	movs	r3, #54	; 0x36
 800a860:	4628      	mov	r0, r5
 800a862:	47b0      	blx	r6
 800a864:	e798      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a866:	783b      	ldrb	r3, [r7, #0]
 800a868:	1e5a      	subs	r2, r3, #1
 800a86a:	2a01      	cmp	r2, #1
 800a86c:	d90e      	bls.n	800a88c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x134>
 800a86e:	2b07      	cmp	r3, #7
 800a870:	d077      	beq.n	800a962 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x20a>
 800a872:	2b09      	cmp	r3, #9
 800a874:	d00a      	beq.n	800a88c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x134>
 800a876:	2b03      	cmp	r3, #3
 800a878:	d008      	beq.n	800a88c <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x134>
 800a87a:	4b50      	ldr	r3, [pc, #320]	; (800a9bc <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x264>)
 800a87c:	696e      	ldr	r6, [r5, #20]
 800a87e:	4a46      	ldr	r2, [pc, #280]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a880:	9300      	str	r3, [sp, #0]
 800a882:	494b      	ldr	r1, [pc, #300]	; (800a9b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x258>)
 800a884:	2338      	movs	r3, #56	; 0x38
 800a886:	4628      	mov	r0, r5
 800a888:	47b0      	blx	r6
 800a88a:	e785      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a88c:	f899 2000 	ldrb.w	r2, [r9]
 800a890:	2a09      	cmp	r2, #9
 800a892:	d03e      	beq.n	800a912 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ba>
 800a894:	2a07      	cmp	r2, #7
 800a896:	d014      	beq.n	800a8c2 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x16a>
 800a898:	1e91      	subs	r1, r2, #2
 800a89a:	2901      	cmp	r1, #1
 800a89c:	d911      	bls.n	800a8c2 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x16a>
 800a89e:	4b48      	ldr	r3, [pc, #288]	; (800a9c0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x268>)
 800a8a0:	696e      	ldr	r6, [r5, #20]
 800a8a2:	4a3d      	ldr	r2, [pc, #244]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a8a4:	9300      	str	r3, [sp, #0]
 800a8a6:	4942      	ldr	r1, [pc, #264]	; (800a9b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x258>)
 800a8a8:	233c      	movs	r3, #60	; 0x3c
 800a8aa:	4628      	mov	r0, r5
 800a8ac:	47b0      	blx	r6
 800a8ae:	e773      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a8b0:	4b44      	ldr	r3, [pc, #272]	; (800a9c4 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x26c>)
 800a8b2:	696e      	ldr	r6, [r5, #20]
 800a8b4:	4a38      	ldr	r2, [pc, #224]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a8b6:	9300      	str	r3, [sp, #0]
 800a8b8:	493d      	ldr	r1, [pc, #244]	; (800a9b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x258>)
 800a8ba:	2334      	movs	r3, #52	; 0x34
 800a8bc:	4628      	mov	r0, r5
 800a8be:	47b0      	blx	r6
 800a8c0:	e76a      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a8c2:	2b07      	cmp	r3, #7
 800a8c4:	d051      	beq.n	800a96a <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x212>
 800a8c6:	2b09      	cmp	r3, #9
 800a8c8:	d045      	beq.n	800a956 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1fe>
 800a8ca:	2b03      	cmp	r3, #3
 800a8cc:	d154      	bne.n	800a978 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x220>
 800a8ce:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800a8d2:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800a8d6:	6033      	str	r3, [r6, #0]
 800a8d8:	f7f5 fe40 	bl	800055c <__aeabi_f2d>
 800a8dc:	693b      	ldr	r3, [r7, #16]
 800a8de:	61b3      	str	r3, [r6, #24]
 800a8e0:	f8d8 3000 	ldr.w	r3, [r8]
 800a8e4:	e9c6 0102 	strd	r0, r1, [r6, #8]
 800a8e8:	699b      	ldr	r3, [r3, #24]
 800a8ea:	4639      	mov	r1, r7
 800a8ec:	4640      	mov	r0, r8
 800a8ee:	4798      	blx	r3
 800a8f0:	f8d8 3000 	ldr.w	r3, [r8]
 800a8f4:	4649      	mov	r1, r9
 800a8f6:	699b      	ldr	r3, [r3, #24]
 800a8f8:	4640      	mov	r0, r8
 800a8fa:	4798      	blx	r3
 800a8fc:	2400      	movs	r4, #0
 800a8fe:	e74b      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a900:	4b31      	ldr	r3, [pc, #196]	; (800a9c8 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x270>)
 800a902:	696e      	ldr	r6, [r5, #20]
 800a904:	4a24      	ldr	r2, [pc, #144]	; (800a998 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x240>)
 800a906:	9300      	str	r3, [sp, #0]
 800a908:	4929      	ldr	r1, [pc, #164]	; (800a9b0 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x258>)
 800a90a:	2335      	movs	r3, #53	; 0x35
 800a90c:	4628      	mov	r0, r5
 800a90e:	47b0      	blx	r6
 800a910:	e742      	b.n	800a798 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800a912:	2b07      	cmp	r3, #7
 800a914:	d005      	beq.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a916:	2b09      	cmp	r3, #9
 800a918:	d003      	beq.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a91a:	2b03      	cmp	r3, #3
 800a91c:	d001      	beq.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a91e:	2b02      	cmp	r3, #2
 800a920:	d1d5      	bne.n	800a8ce <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x176>
 800a922:	68f8      	ldr	r0, [r7, #12]
 800a924:	f7f5 fe1a 	bl	800055c <__aeabi_f2d>
 800a928:	4604      	mov	r4, r0
 800a92a:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800a92e:	460d      	mov	r5, r1
 800a930:	f7f5 fe14 	bl	800055c <__aeabi_f2d>
 800a934:	4602      	mov	r2, r0
 800a936:	460b      	mov	r3, r1
 800a938:	4620      	mov	r0, r4
 800a93a:	4629      	mov	r1, r5
 800a93c:	f7f5 ff90 	bl	8000860 <__aeabi_ddiv>
 800a940:	f106 0a14 	add.w	sl, r6, #20
 800a944:	f106 0410 	add.w	r4, r6, #16
 800a948:	ec41 0b10 	vmov	d0, r0, r1
 800a94c:	4651      	mov	r1, sl
 800a94e:	4620      	mov	r0, r4
 800a950:	f003 ff38 	bl	800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>
 800a954:	e7bb      	b.n	800a8ce <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x176>
 800a956:	2a07      	cmp	r2, #7
 800a958:	d0e3      	beq.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a95a:	3a02      	subs	r2, #2
 800a95c:	2a01      	cmp	r2, #1
 800a95e:	d8b6      	bhi.n	800a8ce <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x176>
 800a960:	e7df      	b.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a962:	7802      	ldrb	r2, [r0, #0]
 800a964:	2a09      	cmp	r2, #9
 800a966:	d195      	bne.n	800a894 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x13c>
 800a968:	e7db      	b.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a96a:	2a07      	cmp	r2, #7
 800a96c:	d0d9      	beq.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a96e:	2a02      	cmp	r2, #2
 800a970:	d1ad      	bne.n	800a8ce <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x176>
 800a972:	e7d6      	b.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a974:	f012 ffe2 	bl	801d93c <__stack_chk_fail>
 800a978:	2b07      	cmp	r3, #7
 800a97a:	d0f6      	beq.n	800a96a <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x212>
 800a97c:	2b02      	cmp	r3, #2
 800a97e:	d1a6      	bne.n	800a8ce <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x176>
 800a980:	2a07      	cmp	r2, #7
 800a982:	d1a4      	bne.n	800a8ce <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x176>
 800a984:	e7cd      	b.n	800a922 <_ZN6tflite24PrepareQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1ca>
 800a986:	f012 f813 	bl	801c9b0 <abort>
 800a98a:	bf00      	nop
 800a98c:	20011294 	.word	0x20011294
 800a990:	0802580c 	.word	0x0802580c
 800a994:	080252c4 	.word	0x080252c4
 800a998:	0802571c 	.word	0x0802571c
 800a99c:	08024a8c 	.word	0x08024a8c
 800a9a0:	080252d4 	.word	0x080252d4
 800a9a4:	0802579c 	.word	0x0802579c
 800a9a8:	080257b8 	.word	0x080257b8
 800a9ac:	080249dc 	.word	0x080249dc
 800a9b0:	080249b0 	.word	0x080249b0
 800a9b4:	080249c8 	.word	0x080249c8
 800a9b8:	080257e8 	.word	0x080257e8
 800a9bc:	08025810 	.word	0x08025810
 800a9c0:	080258ac 	.word	0x080258ac
 800a9c4:	080257d4 	.word	0x080257d4
 800a9c8:	08025470 	.word	0x08025470

0800a9cc <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode>:
 800a9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a9d0:	ed2d 8b02 	vpush	{d8}
 800a9d4:	4bc8      	ldr	r3, [pc, #800]	; (800acf8 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x32c>)
 800a9d6:	f8d1 9010 	ldr.w	r9, [r1, #16]
 800a9da:	b0a1      	sub	sp, #132	; 0x84
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	931f      	str	r3, [sp, #124]	; 0x7c
 800a9e0:	f04f 0300 	mov.w	r3, #0
 800a9e4:	f1b9 0f00 	cmp.w	r9, #0
 800a9e8:	f000 82e5 	beq.w	800afb6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5ea>
 800a9ec:	2200      	movs	r2, #0
 800a9ee:	460c      	mov	r4, r1
 800a9f0:	4606      	mov	r6, r0
 800a9f2:	f7ff fb0b 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 800a9f6:	4605      	mov	r5, r0
 800a9f8:	4621      	mov	r1, r4
 800a9fa:	2200      	movs	r2, #0
 800a9fc:	4630      	mov	r0, r6
 800a9fe:	f7ff fb3b 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 800aa02:	7a2c      	ldrb	r4, [r5, #8]
 800aa04:	2c01      	cmp	r4, #1
 800aa06:	4680      	mov	r8, r0
 800aa08:	d03c      	beq.n	800aa84 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb8>
 800aa0a:	2c02      	cmp	r4, #2
 800aa0c:	f000 80d0 	beq.w	800abb0 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1e4>
 800aa10:	2c07      	cmp	r4, #7
 800aa12:	f000 80bd 	beq.w	800ab90 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1c4>
 800aa16:	2c09      	cmp	r4, #9
 800aa18:	f000 8151 	beq.w	800acbe <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x2f2>
 800aa1c:	2c03      	cmp	r4, #3
 800aa1e:	f040 80a8 	bne.w	800ab72 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1a6>
 800aa22:	6868      	ldr	r0, [r5, #4]
 800aa24:	f003 fca6 	bl	800e374 <_ZN6tflite12ElementCountERK14TfLiteIntArray>
 800aa28:	f898 3008 	ldrb.w	r3, [r8, #8]
 800aa2c:	2b09      	cmp	r3, #9
 800aa2e:	f040 80bd 	bne.w	800abac <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1e0>
 800aa32:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800aa36:	682c      	ldr	r4, [r5, #0]
 800aa38:	f8d8 5000 	ldr.w	r5, [r8]
 800aa3c:	f1b7 4f80 	cmp.w	r7, #1073741824	; 0x40000000
 800aa40:	e9d9 b805 	ldrd	fp, r8, [r9, #20]
 800aa44:	f8d9 9000 	ldr.w	r9, [r9]
 800aa48:	f000 8215 	beq.w	800ae76 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x4aa>
 800aa4c:	2800      	cmp	r0, #0
 800aa4e:	dd17      	ble.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800aa50:	3c01      	subs	r4, #1
 800aa52:	3d01      	subs	r5, #1
 800aa54:	1826      	adds	r6, r4, r0
 800aa56:	f06f 0a7f 	mvn.w	sl, #127	; 0x7f
 800aa5a:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 800aa5e:	465a      	mov	r2, fp
 800aa60:	eba0 0008 	sub.w	r0, r0, r8
 800aa64:	4639      	mov	r1, r7
 800aa66:	f003 fdf5 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800aa6a:	4448      	add	r0, r9
 800aa6c:	4550      	cmp	r0, sl
 800aa6e:	bfb8      	it	lt
 800aa70:	4650      	movlt	r0, sl
 800aa72:	287f      	cmp	r0, #127	; 0x7f
 800aa74:	bfa8      	it	ge
 800aa76:	207f      	movge	r0, #127	; 0x7f
 800aa78:	42b4      	cmp	r4, r6
 800aa7a:	f805 0f01 	strb.w	r0, [r5, #1]!
 800aa7e:	d1ec      	bne.n	800aa5a <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x8e>
 800aa80:	2400      	movs	r4, #0
 800aa82:	e068      	b.n	800ab56 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x18a>
 800aa84:	7a03      	ldrb	r3, [r0, #8]
 800aa86:	2b07      	cmp	r3, #7
 800aa88:	f000 80c2 	beq.w	800ac10 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x244>
 800aa8c:	2b09      	cmp	r3, #9
 800aa8e:	d155      	bne.n	800ab3c <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x170>
 800aa90:	4629      	mov	r1, r5
 800aa92:	a803      	add	r0, sp, #12
 800aa94:	f7ff fb16 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800aa98:	4641      	mov	r1, r8
 800aa9a:	a80a      	add	r0, sp, #40	; 0x28
 800aa9c:	682f      	ldr	r7, [r5, #0]
 800aa9e:	f7ff fb11 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800aaa2:	f8d8 5000 	ldr.w	r5, [r8]
 800aaa6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aaa8:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800aaac:	f8d9 6000 	ldr.w	r6, [r9]
 800aab0:	4598      	cmp	r8, r3
 800aab2:	e9d9 0102 	ldrd	r0, r1, [r9, #8]
 800aab6:	f040 827e 	bne.w	800afb6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5ea>
 800aaba:	f1b8 0f00 	cmp.w	r8, #0
 800aabe:	dd1a      	ble.n	800aaf6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x12a>
 800aac0:	f10d 0c0c 	add.w	ip, sp, #12
 800aac4:	aa0a      	add	r2, sp, #40	; 0x28
 800aac6:	4664      	mov	r4, ip
 800aac8:	2300      	movs	r3, #0
 800aaca:	f852 9f04 	ldr.w	r9, [r2, #4]!
 800aace:	f854 ef04 	ldr.w	lr, [r4, #4]!
 800aad2:	45f1      	cmp	r9, lr
 800aad4:	f040 826f 	bne.w	800afb6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5ea>
 800aad8:	3301      	adds	r3, #1
 800aada:	4598      	cmp	r8, r3
 800aadc:	d1f5      	bne.n	800aaca <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xfe>
 800aade:	ab03      	add	r3, sp, #12
 800aae0:	eb03 0888 	add.w	r8, r3, r8, lsl #2
 800aae4:	2401      	movs	r4, #1
 800aae6:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 800aaea:	45e0      	cmp	r8, ip
 800aaec:	fb03 f404 	mul.w	r4, r3, r4
 800aaf0:	d1f9      	bne.n	800aae6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x11a>
 800aaf2:	2c00      	cmp	r4, #0
 800aaf4:	ddc4      	ble.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800aaf6:	f7f6 f861 	bl	8000bbc <__aeabi_d2f>
 800aafa:	ee08 0a10 	vmov	s16, r0
 800aafe:	46b9      	mov	r9, r7
 800ab00:	f105 38ff 	add.w	r8, r5, #4294967295
 800ab04:	f06f 077f 	mvn.w	r7, #127	; 0x7f
 800ab08:	ecb9 0a01 	vldmia	r9!, {s0}
 800ab0c:	ee80 0a08 	vdiv.f32	s0, s0, s16
 800ab10:	f011 f924 	bl	801bd5c <roundf>
 800ab14:	4642      	mov	r2, r8
 800ab16:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ab1a:	ee17 3a90 	vmov	r3, s15
 800ab1e:	4433      	add	r3, r6
 800ab20:	2b7f      	cmp	r3, #127	; 0x7f
 800ab22:	bfa8      	it	ge
 800ab24:	237f      	movge	r3, #127	; 0x7f
 800ab26:	42bb      	cmp	r3, r7
 800ab28:	bfb8      	it	lt
 800ab2a:	463b      	movlt	r3, r7
 800ab2c:	f808 3f01 	strb.w	r3, [r8, #1]!
 800ab30:	1c93      	adds	r3, r2, #2
 800ab32:	1b5b      	subs	r3, r3, r5
 800ab34:	429c      	cmp	r4, r3
 800ab36:	dce7      	bgt.n	800ab08 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x13c>
 800ab38:	2400      	movs	r4, #0
 800ab3a:	e00c      	b.n	800ab56 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x18a>
 800ab3c:	4620      	mov	r0, r4
 800ab3e:	f003 fd69 	bl	800e614 <TfLiteTypeGetName>
 800ab42:	9001      	str	r0, [sp, #4]
 800ab44:	f898 0008 	ldrb.w	r0, [r8, #8]
 800ab48:	f003 fd64 	bl	800e614 <TfLiteTypeGetName>
 800ab4c:	9901      	ldr	r1, [sp, #4]
 800ab4e:	4602      	mov	r2, r0
 800ab50:	486a      	ldr	r0, [pc, #424]	; (800acfc <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x330>)
 800ab52:	f003 fb5d 	bl	800e210 <_Z11MicroPrintfPKcz>
 800ab56:	4b68      	ldr	r3, [pc, #416]	; (800acf8 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x32c>)
 800ab58:	681a      	ldr	r2, [r3, #0]
 800ab5a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800ab5c:	405a      	eors	r2, r3
 800ab5e:	f04f 0300 	mov.w	r3, #0
 800ab62:	f040 8226 	bne.w	800afb2 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5e6>
 800ab66:	4620      	mov	r0, r4
 800ab68:	b021      	add	sp, #132	; 0x84
 800ab6a:	ecbd 8b02 	vpop	{d8}
 800ab6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab72:	4620      	mov	r0, r4
 800ab74:	f003 fd4e 	bl	800e614 <TfLiteTypeGetName>
 800ab78:	9001      	str	r0, [sp, #4]
 800ab7a:	f898 0008 	ldrb.w	r0, [r8, #8]
 800ab7e:	f003 fd49 	bl	800e614 <TfLiteTypeGetName>
 800ab82:	9901      	ldr	r1, [sp, #4]
 800ab84:	4602      	mov	r2, r0
 800ab86:	485d      	ldr	r0, [pc, #372]	; (800acfc <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x330>)
 800ab88:	f003 fb42 	bl	800e210 <_Z11MicroPrintfPKcz>
 800ab8c:	2401      	movs	r4, #1
 800ab8e:	e7e2      	b.n	800ab56 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x18a>
 800ab90:	6868      	ldr	r0, [r5, #4]
 800ab92:	f003 fbef 	bl	800e374 <_ZN6tflite12ElementCountERK14TfLiteIntArray>
 800ab96:	f898 3008 	ldrb.w	r3, [r8, #8]
 800ab9a:	2b07      	cmp	r3, #7
 800ab9c:	f000 81c9 	beq.w	800af32 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x566>
 800aba0:	2b09      	cmp	r3, #9
 800aba2:	f000 819f 	beq.w	800aee4 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x518>
 800aba6:	2b02      	cmp	r3, #2
 800aba8:	f000 817d 	beq.w	800aea6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x4da>
 800abac:	7a28      	ldrb	r0, [r5, #8]
 800abae:	e7e1      	b.n	800ab74 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1a8>
 800abb0:	6868      	ldr	r0, [r5, #4]
 800abb2:	f003 fbdf 	bl	800e374 <_ZN6tflite12ElementCountERK14TfLiteIntArray>
 800abb6:	f898 3008 	ldrb.w	r3, [r8, #8]
 800abba:	2b07      	cmp	r3, #7
 800abbc:	f000 8132 	beq.w	800ae24 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x458>
 800abc0:	2b09      	cmp	r3, #9
 800abc2:	d1f3      	bne.n	800abac <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1e0>
 800abc4:	2800      	cmp	r0, #0
 800abc6:	682b      	ldr	r3, [r5, #0]
 800abc8:	f8d9 6010 	ldr.w	r6, [r9, #16]
 800abcc:	f8d8 5000 	ldr.w	r5, [r8]
 800abd0:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800abd4:	f8d9 9000 	ldr.w	r9, [r9]
 800abd8:	f77f af52 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800abdc:	3d01      	subs	r5, #1
 800abde:	f1a3 0b04 	sub.w	fp, r3, #4
 800abe2:	182c      	adds	r4, r5, r0
 800abe4:	f06f 0a7f 	mvn.w	sl, #127	; 0x7f
 800abe8:	f85b 0f04 	ldr.w	r0, [fp, #4]!
 800abec:	463a      	mov	r2, r7
 800abee:	eba0 0008 	sub.w	r0, r0, r8
 800abf2:	4631      	mov	r1, r6
 800abf4:	f003 fd2e 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800abf8:	4448      	add	r0, r9
 800abfa:	4550      	cmp	r0, sl
 800abfc:	bfb8      	it	lt
 800abfe:	4650      	movlt	r0, sl
 800ac00:	287f      	cmp	r0, #127	; 0x7f
 800ac02:	bfa8      	it	ge
 800ac04:	207f      	movge	r0, #127	; 0x7f
 800ac06:	f805 0f01 	strb.w	r0, [r5, #1]!
 800ac0a:	42ac      	cmp	r4, r5
 800ac0c:	d1ec      	bne.n	800abe8 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x21c>
 800ac0e:	e737      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ac10:	4629      	mov	r1, r5
 800ac12:	a811      	add	r0, sp, #68	; 0x44
 800ac14:	f7ff fa56 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800ac18:	4641      	mov	r1, r8
 800ac1a:	a818      	add	r0, sp, #96	; 0x60
 800ac1c:	682d      	ldr	r5, [r5, #0]
 800ac1e:	f7ff fa51 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800ac22:	f8d8 7000 	ldr.w	r7, [r8]
 800ac26:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800ac28:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 800ac2c:	f8d9 6000 	ldr.w	r6, [r9]
 800ac30:	4598      	cmp	r8, r3
 800ac32:	e9d9 0102 	ldrd	r0, r1, [r9, #8]
 800ac36:	f040 81be 	bne.w	800afb6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5ea>
 800ac3a:	f1b8 0f00 	cmp.w	r8, #0
 800ac3e:	dd1b      	ble.n	800ac78 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x2ac>
 800ac40:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ac44:	aa18      	add	r2, sp, #96	; 0x60
 800ac46:	4664      	mov	r4, ip
 800ac48:	2300      	movs	r3, #0
 800ac4a:	f852 9f04 	ldr.w	r9, [r2, #4]!
 800ac4e:	f854 ef04 	ldr.w	lr, [r4, #4]!
 800ac52:	45f1      	cmp	r9, lr
 800ac54:	f040 81af 	bne.w	800afb6 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5ea>
 800ac58:	3301      	adds	r3, #1
 800ac5a:	4598      	cmp	r8, r3
 800ac5c:	d1f5      	bne.n	800ac4a <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x27e>
 800ac5e:	ab11      	add	r3, sp, #68	; 0x44
 800ac60:	eb03 0888 	add.w	r8, r3, r8, lsl #2
 800ac64:	2401      	movs	r4, #1
 800ac66:	f85c 3f04 	ldr.w	r3, [ip, #4]!
 800ac6a:	45e0      	cmp	r8, ip
 800ac6c:	fb03 f404 	mul.w	r4, r3, r4
 800ac70:	d1f9      	bne.n	800ac66 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x29a>
 800ac72:	2c00      	cmp	r4, #0
 800ac74:	f77f af04 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ac78:	f7f5 ffa0 	bl	8000bbc <__aeabi_d2f>
 800ac7c:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800ad00 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x334>
 800ac80:	ee08 0a10 	vmov	s16, r0
 800ac84:	46aa      	mov	sl, r5
 800ac86:	3f02      	subs	r7, #2
 800ac88:	2500      	movs	r5, #0
 800ac8a:	f647 78ff 	movw	r8, #32767	; 0x7fff
 800ac8e:	ecba 0a01 	vldmia	sl!, {s0}
 800ac92:	ee80 0a08 	vdiv.f32	s0, s0, s16
 800ac96:	f011 f861 	bl	801bd5c <roundf>
 800ac9a:	3501      	adds	r5, #1
 800ac9c:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800aca0:	ee17 3a90 	vmov	r3, s15
 800aca4:	4433      	add	r3, r6
 800aca6:	4543      	cmp	r3, r8
 800aca8:	bfa8      	it	ge
 800acaa:	4643      	movge	r3, r8
 800acac:	454b      	cmp	r3, r9
 800acae:	bfb8      	it	lt
 800acb0:	464b      	movlt	r3, r9
 800acb2:	42a5      	cmp	r5, r4
 800acb4:	f827 3f02 	strh.w	r3, [r7, #2]!
 800acb8:	dbe9      	blt.n	800ac8e <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x2c2>
 800acba:	2400      	movs	r4, #0
 800acbc:	e74b      	b.n	800ab56 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x18a>
 800acbe:	6868      	ldr	r0, [r5, #4]
 800acc0:	f003 fb58 	bl	800e374 <_ZN6tflite12ElementCountERK14TfLiteIntArray>
 800acc4:	f898 3008 	ldrb.w	r3, [r8, #8]
 800acc8:	3b02      	subs	r3, #2
 800acca:	2b07      	cmp	r3, #7
 800accc:	f63f af6e 	bhi.w	800abac <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x1e0>
 800acd0:	a201      	add	r2, pc, #4	; (adr r2, 800acd8 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x30c>)
 800acd2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800acd6:	bf00      	nop
 800acd8:	0800ade9 	.word	0x0800ade9
 800acdc:	0800ada1 	.word	0x0800ada1
 800ace0:	0800abad 	.word	0x0800abad
 800ace4:	0800abad 	.word	0x0800abad
 800ace8:	0800abad 	.word	0x0800abad
 800acec:	0800ad51 	.word	0x0800ad51
 800acf0:	0800abad 	.word	0x0800abad
 800acf4:	0800ad05 	.word	0x0800ad05
 800acf8:	20011294 	.word	0x20011294
 800acfc:	08025928 	.word	0x08025928
 800ad00:	ffff8000 	.word	0xffff8000
 800ad04:	2800      	cmp	r0, #0
 800ad06:	f8d9 6010 	ldr.w	r6, [r9, #16]
 800ad0a:	f8d8 3000 	ldr.w	r3, [r8]
 800ad0e:	682d      	ldr	r5, [r5, #0]
 800ad10:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800ad14:	f8d9 9000 	ldr.w	r9, [r9]
 800ad18:	f77f aeb2 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ad1c:	3d01      	subs	r5, #1
 800ad1e:	f103 3bff 	add.w	fp, r3, #4294967295
 800ad22:	182c      	adds	r4, r5, r0
 800ad24:	f06f 0a7f 	mvn.w	sl, #127	; 0x7f
 800ad28:	f915 0f01 	ldrsb.w	r0, [r5, #1]!
 800ad2c:	463a      	mov	r2, r7
 800ad2e:	eba0 0008 	sub.w	r0, r0, r8
 800ad32:	4631      	mov	r1, r6
 800ad34:	f003 fc8e 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800ad38:	4448      	add	r0, r9
 800ad3a:	4550      	cmp	r0, sl
 800ad3c:	bfb8      	it	lt
 800ad3e:	4650      	movlt	r0, sl
 800ad40:	287f      	cmp	r0, #127	; 0x7f
 800ad42:	bfa8      	it	ge
 800ad44:	207f      	movge	r0, #127	; 0x7f
 800ad46:	42a5      	cmp	r5, r4
 800ad48:	f80b 0f01 	strb.w	r0, [fp, #1]!
 800ad4c:	d1ec      	bne.n	800ad28 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x35c>
 800ad4e:	e697      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ad50:	2800      	cmp	r0, #0
 800ad52:	f8d9 1010 	ldr.w	r1, [r9, #16]
 800ad56:	f8d8 6000 	ldr.w	r6, [r8]
 800ad5a:	682d      	ldr	r5, [r5, #0]
 800ad5c:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800ad60:	f8d9 9000 	ldr.w	r9, [r9]
 800ad64:	f77f ae8c 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ad68:	3d01      	subs	r5, #1
 800ad6a:	f8df b250 	ldr.w	fp, [pc, #592]	; 800afbc <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5f0>
 800ad6e:	3e02      	subs	r6, #2
 800ad70:	182c      	adds	r4, r5, r0
 800ad72:	f647 7aff 	movw	sl, #32767	; 0x7fff
 800ad76:	f915 0f01 	ldrsb.w	r0, [r5, #1]!
 800ad7a:	9101      	str	r1, [sp, #4]
 800ad7c:	eba0 0008 	sub.w	r0, r0, r8
 800ad80:	463a      	mov	r2, r7
 800ad82:	f003 fc67 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800ad86:	4448      	add	r0, r9
 800ad88:	4558      	cmp	r0, fp
 800ad8a:	bfb8      	it	lt
 800ad8c:	4658      	movlt	r0, fp
 800ad8e:	4550      	cmp	r0, sl
 800ad90:	bfa8      	it	ge
 800ad92:	4650      	movge	r0, sl
 800ad94:	42a5      	cmp	r5, r4
 800ad96:	f826 0f02 	strh.w	r0, [r6, #2]!
 800ad9a:	9901      	ldr	r1, [sp, #4]
 800ad9c:	d1eb      	bne.n	800ad76 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x3aa>
 800ad9e:	e66f      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ada0:	f8d9 6010 	ldr.w	r6, [r9, #16]
 800ada4:	f8d8 3000 	ldr.w	r3, [r8]
 800ada8:	682d      	ldr	r5, [r5, #0]
 800adaa:	f1b6 4f80 	cmp.w	r6, #1073741824	; 0x40000000
 800adae:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800adb2:	f8d9 9000 	ldr.w	r9, [r9]
 800adb6:	f000 80e5 	beq.w	800af84 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5b8>
 800adba:	2800      	cmp	r0, #0
 800adbc:	f77f ae60 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800adc0:	3d01      	subs	r5, #1
 800adc2:	f103 3aff 	add.w	sl, r3, #4294967295
 800adc6:	182c      	adds	r4, r5, r0
 800adc8:	f915 0f01 	ldrsb.w	r0, [r5, #1]!
 800adcc:	463a      	mov	r2, r7
 800adce:	eba0 0008 	sub.w	r0, r0, r8
 800add2:	4631      	mov	r1, r6
 800add4:	f003 fc3e 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800add8:	4448      	add	r0, r9
 800adda:	f380 0008 	usat	r0, #8, r0
 800adde:	42ac      	cmp	r4, r5
 800ade0:	f80a 0f01 	strb.w	r0, [sl, #1]!
 800ade4:	d1f0      	bne.n	800adc8 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x3fc>
 800ade6:	e64b      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ade8:	2800      	cmp	r0, #0
 800adea:	f8d9 6010 	ldr.w	r6, [r9, #16]
 800adee:	f8d8 3000 	ldr.w	r3, [r8]
 800adf2:	682d      	ldr	r5, [r5, #0]
 800adf4:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800adf8:	f8d9 9000 	ldr.w	r9, [r9]
 800adfc:	f77f ae40 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ae00:	3d01      	subs	r5, #1
 800ae02:	f1a3 0a04 	sub.w	sl, r3, #4
 800ae06:	182c      	adds	r4, r5, r0
 800ae08:	f915 0f01 	ldrsb.w	r0, [r5, #1]!
 800ae0c:	463a      	mov	r2, r7
 800ae0e:	eba0 0008 	sub.w	r0, r0, r8
 800ae12:	4631      	mov	r1, r6
 800ae14:	f003 fc1e 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800ae18:	42a5      	cmp	r5, r4
 800ae1a:	4448      	add	r0, r9
 800ae1c:	f84a 0f04 	str.w	r0, [sl, #4]!
 800ae20:	d1f2      	bne.n	800ae08 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x43c>
 800ae22:	e62d      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ae24:	2800      	cmp	r0, #0
 800ae26:	682e      	ldr	r6, [r5, #0]
 800ae28:	f8d9 1010 	ldr.w	r1, [r9, #16]
 800ae2c:	f8d8 5000 	ldr.w	r5, [r8]
 800ae30:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800ae34:	f8d9 9000 	ldr.w	r9, [r9]
 800ae38:	f77f ae22 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ae3c:	3d02      	subs	r5, #2
 800ae3e:	f8df b17c 	ldr.w	fp, [pc, #380]	; 800afbc <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5f0>
 800ae42:	3e04      	subs	r6, #4
 800ae44:	eb05 0440 	add.w	r4, r5, r0, lsl #1
 800ae48:	f647 7aff 	movw	sl, #32767	; 0x7fff
 800ae4c:	f856 0f04 	ldr.w	r0, [r6, #4]!
 800ae50:	9101      	str	r1, [sp, #4]
 800ae52:	eba0 0008 	sub.w	r0, r0, r8
 800ae56:	463a      	mov	r2, r7
 800ae58:	f003 fbfc 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800ae5c:	4448      	add	r0, r9
 800ae5e:	4558      	cmp	r0, fp
 800ae60:	bfb8      	it	lt
 800ae62:	4658      	movlt	r0, fp
 800ae64:	4550      	cmp	r0, sl
 800ae66:	bfa8      	it	ge
 800ae68:	4650      	movge	r0, sl
 800ae6a:	f825 0f02 	strh.w	r0, [r5, #2]!
 800ae6e:	42ac      	cmp	r4, r5
 800ae70:	9901      	ldr	r1, [sp, #4]
 800ae72:	d1eb      	bne.n	800ae4c <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x480>
 800ae74:	e604      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ae76:	f1bb 0f01 	cmp.w	fp, #1
 800ae7a:	f47f ade7 	bne.w	800aa4c <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x80>
 800ae7e:	eba8 0309 	sub.w	r3, r8, r9
 800ae82:	2b80      	cmp	r3, #128	; 0x80
 800ae84:	f47f ade2 	bne.w	800aa4c <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x80>
 800ae88:	2800      	cmp	r0, #0
 800ae8a:	f77f adf9 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800ae8e:	3c01      	subs	r4, #1
 800ae90:	3d01      	subs	r5, #1
 800ae92:	4420      	add	r0, r4
 800ae94:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800ae98:	f083 0380 	eor.w	r3, r3, #128	; 0x80
 800ae9c:	4284      	cmp	r4, r0
 800ae9e:	f805 3f01 	strb.w	r3, [r5, #1]!
 800aea2:	d1f7      	bne.n	800ae94 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x4c8>
 800aea4:	e5ec      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800aea6:	2800      	cmp	r0, #0
 800aea8:	f8d9 6010 	ldr.w	r6, [r9, #16]
 800aeac:	f8d8 3000 	ldr.w	r3, [r8]
 800aeb0:	682d      	ldr	r5, [r5, #0]
 800aeb2:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800aeb6:	f8d9 9000 	ldr.w	r9, [r9]
 800aeba:	f77f ade1 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800aebe:	3d02      	subs	r5, #2
 800aec0:	f1a3 0a04 	sub.w	sl, r3, #4
 800aec4:	eb05 0440 	add.w	r4, r5, r0, lsl #1
 800aec8:	f935 0f02 	ldrsh.w	r0, [r5, #2]!
 800aecc:	463a      	mov	r2, r7
 800aece:	eba0 0008 	sub.w	r0, r0, r8
 800aed2:	4631      	mov	r1, r6
 800aed4:	f003 fbbe 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800aed8:	42a5      	cmp	r5, r4
 800aeda:	4448      	add	r0, r9
 800aedc:	f84a 0f04 	str.w	r0, [sl, #4]!
 800aee0:	d1f2      	bne.n	800aec8 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x4fc>
 800aee2:	e5cd      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800aee4:	2800      	cmp	r0, #0
 800aee6:	f8d9 6010 	ldr.w	r6, [r9, #16]
 800aeea:	f8d8 3000 	ldr.w	r3, [r8]
 800aeee:	682d      	ldr	r5, [r5, #0]
 800aef0:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800aef4:	f8d9 9000 	ldr.w	r9, [r9]
 800aef8:	f77f adc2 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800aefc:	3d02      	subs	r5, #2
 800aefe:	f103 3bff 	add.w	fp, r3, #4294967295
 800af02:	eb05 0440 	add.w	r4, r5, r0, lsl #1
 800af06:	f06f 0a7f 	mvn.w	sl, #127	; 0x7f
 800af0a:	f935 0f02 	ldrsh.w	r0, [r5, #2]!
 800af0e:	463a      	mov	r2, r7
 800af10:	eba0 0008 	sub.w	r0, r0, r8
 800af14:	4631      	mov	r1, r6
 800af16:	f003 fb9d 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800af1a:	4448      	add	r0, r9
 800af1c:	4550      	cmp	r0, sl
 800af1e:	bfb8      	it	lt
 800af20:	4650      	movlt	r0, sl
 800af22:	287f      	cmp	r0, #127	; 0x7f
 800af24:	bfa8      	it	ge
 800af26:	207f      	movge	r0, #127	; 0x7f
 800af28:	42ac      	cmp	r4, r5
 800af2a:	f80b 0f01 	strb.w	r0, [fp, #1]!
 800af2e:	d1ec      	bne.n	800af0a <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x53e>
 800af30:	e5a6      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800af32:	2800      	cmp	r0, #0
 800af34:	f8d9 1010 	ldr.w	r1, [r9, #16]
 800af38:	f8d8 6000 	ldr.w	r6, [r8]
 800af3c:	682d      	ldr	r5, [r5, #0]
 800af3e:	e9d9 7805 	ldrd	r7, r8, [r9, #20]
 800af42:	f8d9 9000 	ldr.w	r9, [r9]
 800af46:	f77f ad9b 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800af4a:	3d02      	subs	r5, #2
 800af4c:	f8df b06c 	ldr.w	fp, [pc, #108]	; 800afbc <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5f0>
 800af50:	3e02      	subs	r6, #2
 800af52:	eb05 0440 	add.w	r4, r5, r0, lsl #1
 800af56:	f647 7aff 	movw	sl, #32767	; 0x7fff
 800af5a:	f935 0f02 	ldrsh.w	r0, [r5, #2]!
 800af5e:	9101      	str	r1, [sp, #4]
 800af60:	eba0 0008 	sub.w	r0, r0, r8
 800af64:	463a      	mov	r2, r7
 800af66:	f003 fb75 	bl	800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>
 800af6a:	4448      	add	r0, r9
 800af6c:	4558      	cmp	r0, fp
 800af6e:	bfb8      	it	lt
 800af70:	4658      	movlt	r0, fp
 800af72:	4550      	cmp	r0, sl
 800af74:	bfa8      	it	ge
 800af76:	4650      	movge	r0, sl
 800af78:	42ac      	cmp	r4, r5
 800af7a:	f826 0f02 	strh.w	r0, [r6, #2]!
 800af7e:	9901      	ldr	r1, [sp, #4]
 800af80:	d1eb      	bne.n	800af5a <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x58e>
 800af82:	e57d      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800af84:	2f01      	cmp	r7, #1
 800af86:	f47f af18 	bne.w	800adba <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x3ee>
 800af8a:	eba8 0209 	sub.w	r2, r8, r9
 800af8e:	3280      	adds	r2, #128	; 0x80
 800af90:	f47f af13 	bne.w	800adba <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x3ee>
 800af94:	2800      	cmp	r0, #0
 800af96:	f77f ad73 	ble.w	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800af9a:	3d01      	subs	r5, #1
 800af9c:	3b01      	subs	r3, #1
 800af9e:	182c      	adds	r4, r5, r0
 800afa0:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800afa4:	f082 0280 	eor.w	r2, r2, #128	; 0x80
 800afa8:	42ac      	cmp	r4, r5
 800afaa:	f803 2f01 	strb.w	r2, [r3, #1]!
 800afae:	d1f7      	bne.n	800afa0 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0x5d4>
 800afb0:	e566      	b.n	800aa80 <_ZN6tflite21EvalQuantizeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>
 800afb2:	f012 fcc3 	bl	801d93c <__stack_chk_fail>
 800afb6:	f011 fcfb 	bl	801c9b0 <abort>
 800afba:	bf00      	nop
 800afbc:	ffff8000 	.word	0xffff8000

0800afc0 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode>:
 800afc0:	b570      	push	{r4, r5, r6, lr}
 800afc2:	4b19      	ldr	r3, [pc, #100]	; (800b028 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x68>)
 800afc4:	b082      	sub	sp, #8
 800afc6:	2200      	movs	r2, #0
 800afc8:	4604      	mov	r4, r0
 800afca:	460e      	mov	r6, r1
 800afcc:	681b      	ldr	r3, [r3, #0]
 800afce:	9301      	str	r3, [sp, #4]
 800afd0:	f04f 0300 	mov.w	r3, #0
 800afd4:	f7ff f81a 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 800afd8:	4631      	mov	r1, r6
 800afda:	4605      	mov	r5, r0
 800afdc:	2200      	movs	r2, #0
 800afde:	4620      	mov	r0, r4
 800afe0:	f7ff f84a 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 800afe4:	4669      	mov	r1, sp
 800afe6:	4606      	mov	r6, r0
 800afe8:	7a28      	ldrb	r0, [r5, #8]
 800afea:	f001 fc51 	bl	800c890 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj>
 800afee:	4604      	mov	r4, r0
 800aff0:	b148      	cbz	r0, 800b006 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x46>
 800aff2:	4b0d      	ldr	r3, [pc, #52]	; (800b028 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x68>)
 800aff4:	681a      	ldr	r2, [r3, #0]
 800aff6:	9b01      	ldr	r3, [sp, #4]
 800aff8:	405a      	eors	r2, r3
 800affa:	f04f 0300 	mov.w	r3, #0
 800affe:	d111      	bne.n	800b024 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x64>
 800b000:	4620      	mov	r0, r4
 800b002:	b002      	add	sp, #8
 800b004:	bd70      	pop	{r4, r5, r6, pc}
 800b006:	6868      	ldr	r0, [r5, #4]
 800b008:	f003 f9b4 	bl	800e374 <_ZN6tflite12ElementCountERK14TfLiteIntArray>
 800b00c:	9a00      	ldr	r2, [sp, #0]
 800b00e:	6829      	ldr	r1, [r5, #0]
 800b010:	6833      	ldr	r3, [r6, #0]
 800b012:	fb00 f202 	mul.w	r2, r0, r2
 800b016:	4299      	cmp	r1, r3
 800b018:	9200      	str	r2, [sp, #0]
 800b01a:	d0ea      	beq.n	800aff2 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x32>
 800b01c:	4618      	mov	r0, r3
 800b01e:	f011 fd39 	bl	801ca94 <memcpy>
 800b022:	e7e6      	b.n	800aff2 <_ZN6tflite12_GLOBAL__N_120EvalReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x32>
 800b024:	f012 fc8a 	bl	801d93c <__stack_chk_fail>
 800b028:	20011294 	.word	0x20011294

0800b02c <_ZN6tflite16Register_RESHAPEEv>:
 800b02c:	b510      	push	{r4, lr}
 800b02e:	2100      	movs	r1, #0
 800b030:	b084      	sub	sp, #16
 800b032:	e9cd 1100 	strd	r1, r1, [sp]
 800b036:	f8df c038 	ldr.w	ip, [pc, #56]	; 800b070 <_ZN6tflite16Register_RESHAPEEv+0x44>
 800b03a:	4b0b      	ldr	r3, [pc, #44]	; (800b068 <_ZN6tflite16Register_RESHAPEEv+0x3c>)
 800b03c:	4a0b      	ldr	r2, [pc, #44]	; (800b06c <_ZN6tflite16Register_RESHAPEEv+0x40>)
 800b03e:	4604      	mov	r4, r0
 800b040:	f8dc c000 	ldr.w	ip, [ip]
 800b044:	f8cd c00c 	str.w	ip, [sp, #12]
 800b048:	f04f 0c00 	mov.w	ip, #0
 800b04c:	f7fe ffbe 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 800b050:	4b07      	ldr	r3, [pc, #28]	; (800b070 <_ZN6tflite16Register_RESHAPEEv+0x44>)
 800b052:	681a      	ldr	r2, [r3, #0]
 800b054:	9b03      	ldr	r3, [sp, #12]
 800b056:	405a      	eors	r2, r3
 800b058:	f04f 0300 	mov.w	r3, #0
 800b05c:	d102      	bne.n	800b064 <_ZN6tflite16Register_RESHAPEEv+0x38>
 800b05e:	4620      	mov	r0, r4
 800b060:	b004      	add	sp, #16
 800b062:	bd10      	pop	{r4, pc}
 800b064:	f012 fc6a 	bl	801d93c <__stack_chk_fail>
 800b068:	0800afc1 	.word	0x0800afc1
 800b06c:	0800b2c5 	.word	0x0800b2c5
 800b070:	20011294 	.word	0x20011294

0800b074 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode>:
 800b074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b078:	ed2d 8b02 	vpush	{d8}
 800b07c:	b08b      	sub	sp, #44	; 0x2c
 800b07e:	4b82      	ldr	r3, [pc, #520]	; (800b288 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x214>)
 800b080:	9105      	str	r1, [sp, #20]
 800b082:	4681      	mov	r9, r0
 800b084:	68c0      	ldr	r0, [r0, #12]
 800b086:	2200      	movs	r2, #0
 800b088:	ee08 0a10 	vmov	s16, r0
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	9309      	str	r3, [sp, #36]	; 0x24
 800b090:	f04f 0300 	mov.w	r3, #0
 800b094:	f001 fcc0 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 800b098:	9006      	str	r0, [sp, #24]
 800b09a:	2800      	cmp	r0, #0
 800b09c:	f000 809d 	beq.w	800b1da <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x166>
 800b0a0:	9905      	ldr	r1, [sp, #20]
 800b0a2:	ee18 0a10 	vmov	r0, s16
 800b0a6:	2200      	movs	r2, #0
 800b0a8:	f001 fce4 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 800b0ac:	9007      	str	r0, [sp, #28]
 800b0ae:	2800      	cmp	r0, #0
 800b0b0:	d07d      	beq.n	800b1ae <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x13a>
 800b0b2:	9b06      	ldr	r3, [sp, #24]
 800b0b4:	689f      	ldr	r7, [r3, #8]
 800b0b6:	f8d7 8000 	ldr.w	r8, [r7]
 800b0ba:	f1b8 0f00 	cmp.w	r8, #0
 800b0be:	f340 80d8 	ble.w	800b272 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x1fe>
 800b0c2:	f04f 0b00 	mov.w	fp, #0
 800b0c6:	f04f 0a01 	mov.w	sl, #1
 800b0ca:	465e      	mov	r6, fp
 800b0cc:	e004      	b.n	800b0d8 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x64>
 800b0ce:	f1ba 0f01 	cmp.w	sl, #1
 800b0d2:	f17b 0300 	sbcs.w	r3, fp, #0
 800b0d6:	db18      	blt.n	800b10a <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x96>
 800b0d8:	465b      	mov	r3, fp
 800b0da:	4652      	mov	r2, sl
 800b0dc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800b0e0:	2100      	movs	r1, #0
 800b0e2:	f7f5 fdbb 	bl	8000c5c <__aeabi_ldivmod>
 800b0e6:	f857 5f04 	ldr.w	r5, [r7, #4]!
 800b0ea:	17ec      	asrs	r4, r5, #31
 800b0ec:	4285      	cmp	r5, r0
 800b0ee:	eb74 0301 	sbcs.w	r3, r4, r1
 800b0f2:	f280 80c0 	bge.w	800b276 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x202>
 800b0f6:	fb0a f404 	mul.w	r4, sl, r4
 800b0fa:	3601      	adds	r6, #1
 800b0fc:	fb05 440b 	mla	r4, r5, fp, r4
 800b100:	45b0      	cmp	r8, r6
 800b102:	fbaa ab05 	umull	sl, fp, sl, r5
 800b106:	44a3      	add	fp, r4
 800b108:	d1e1      	bne.n	800b0ce <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x5a>
 800b10a:	4656      	mov	r6, sl
 800b10c:	9b05      	ldr	r3, [sp, #20]
 800b10e:	9a07      	ldr	r2, [sp, #28]
 800b110:	681b      	ldr	r3, [r3, #0]
 800b112:	6891      	ldr	r1, [r2, #8]
 800b114:	2b00      	cmp	r3, #0
 800b116:	d07b      	beq.n	800b210 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x19c>
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	6808      	ldr	r0, [r1, #0]
 800b11c:	2b01      	cmp	r3, #1
 800b11e:	f000 8088 	beq.w	800b232 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x1be>
 800b122:	2800      	cmp	r0, #0
 800b124:	f340 808d 	ble.w	800b242 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x1ce>
 800b128:	684a      	ldr	r2, [r1, #4]
 800b12a:	3104      	adds	r1, #4
 800b12c:	2300      	movs	r3, #0
 800b12e:	f04f 35ff 	mov.w	r5, #4294967295
 800b132:	2401      	movs	r4, #1
 800b134:	e006      	b.n	800b144 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xd0>
 800b136:	3301      	adds	r3, #1
 800b138:	4283      	cmp	r3, r0
 800b13a:	fb02 f404 	mul.w	r4, r2, r4
 800b13e:	da09      	bge.n	800b154 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xe0>
 800b140:	f851 2f04 	ldr.w	r2, [r1, #4]!
 800b144:	1c57      	adds	r7, r2, #1
 800b146:	d1f6      	bne.n	800b136 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xc2>
 800b148:	1c6f      	adds	r7, r5, #1
 800b14a:	d163      	bne.n	800b214 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x1a0>
 800b14c:	461d      	mov	r5, r3
 800b14e:	3301      	adds	r3, #1
 800b150:	4283      	cmp	r3, r0
 800b152:	dbf5      	blt.n	800b140 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xcc>
 800b154:	1c6b      	adds	r3, r5, #1
 800b156:	d013      	beq.n	800b180 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x10c>
 800b158:	9905      	ldr	r1, [sp, #20]
 800b15a:	2200      	movs	r2, #0
 800b15c:	4648      	mov	r0, r9
 800b15e:	f7fe ff8b 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 800b162:	9f07      	ldr	r7, [sp, #28]
 800b164:	4602      	mov	r2, r0
 800b166:	4639      	mov	r1, r7
 800b168:	4648      	mov	r0, r9
 800b16a:	f7fe ffed 	bl	800a148 <_ZN6tflite5micro32CreateWritableTensorDimsWithCopyEP13TfLiteContextP12TfLiteTensorP16TfLiteEvalTensor>
 800b16e:	bb40      	cbnz	r0, 800b1c2 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x14e>
 800b170:	fb96 f2f4 	sdiv	r2, r6, r4
 800b174:	68bb      	ldr	r3, [r7, #8]
 800b176:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 800b17a:	fb02 f404 	mul.w	r4, r2, r4
 800b17e:	605a      	str	r2, [r3, #4]
 800b180:	9b06      	ldr	r3, [sp, #24]
 800b182:	7818      	ldrb	r0, [r3, #0]
 800b184:	9b07      	ldr	r3, [sp, #28]
 800b186:	781b      	ldrb	r3, [r3, #0]
 800b188:	4283      	cmp	r3, r0
 800b18a:	d15c      	bne.n	800b246 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x1d2>
 800b18c:	42b4      	cmp	r4, r6
 800b18e:	d02f      	beq.n	800b1f0 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x17c>
 800b190:	e9cd 6402 	strd	r6, r4, [sp, #8]
 800b194:	4a3d      	ldr	r2, [pc, #244]	; (800b28c <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x218>)
 800b196:	4b3e      	ldr	r3, [pc, #248]	; (800b290 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x21c>)
 800b198:	f8d9 4014 	ldr.w	r4, [r9, #20]
 800b19c:	493d      	ldr	r1, [pc, #244]	; (800b294 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x220>)
 800b19e:	e9cd 3200 	strd	r3, r2, [sp]
 800b1a2:	4648      	mov	r0, r9
 800b1a4:	4a3c      	ldr	r2, [pc, #240]	; (800b298 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x224>)
 800b1a6:	234e      	movs	r3, #78	; 0x4e
 800b1a8:	47a0      	blx	r4
 800b1aa:	2001      	movs	r0, #1
 800b1ac:	e009      	b.n	800b1c2 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x14e>
 800b1ae:	4b3b      	ldr	r3, [pc, #236]	; (800b29c <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x228>)
 800b1b0:	f8d9 4014 	ldr.w	r4, [r9, #20]
 800b1b4:	4a38      	ldr	r2, [pc, #224]	; (800b298 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x224>)
 800b1b6:	9300      	str	r3, [sp, #0]
 800b1b8:	4648      	mov	r0, r9
 800b1ba:	4939      	ldr	r1, [pc, #228]	; (800b2a0 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x22c>)
 800b1bc:	2328      	movs	r3, #40	; 0x28
 800b1be:	47a0      	blx	r4
 800b1c0:	2001      	movs	r0, #1
 800b1c2:	4b31      	ldr	r3, [pc, #196]	; (800b288 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x214>)
 800b1c4:	681a      	ldr	r2, [r3, #0]
 800b1c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b1c8:	405a      	eors	r2, r3
 800b1ca:	f04f 0300 	mov.w	r3, #0
 800b1ce:	d158      	bne.n	800b282 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x20e>
 800b1d0:	b00b      	add	sp, #44	; 0x2c
 800b1d2:	ecbd 8b02 	vpop	{d8}
 800b1d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b1da:	4b32      	ldr	r3, [pc, #200]	; (800b2a4 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x230>)
 800b1dc:	f8d9 4014 	ldr.w	r4, [r9, #20]
 800b1e0:	4a2d      	ldr	r2, [pc, #180]	; (800b298 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x224>)
 800b1e2:	9300      	str	r3, [sp, #0]
 800b1e4:	4648      	mov	r0, r9
 800b1e6:	492e      	ldr	r1, [pc, #184]	; (800b2a0 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x22c>)
 800b1e8:	2325      	movs	r3, #37	; 0x25
 800b1ea:	47a0      	blx	r4
 800b1ec:	2001      	movs	r0, #1
 800b1ee:	e7e8      	b.n	800b1c2 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x14e>
 800b1f0:	ee18 4a10 	vmov	r4, s16
 800b1f4:	6823      	ldr	r3, [r4, #0]
 800b1f6:	9906      	ldr	r1, [sp, #24]
 800b1f8:	699b      	ldr	r3, [r3, #24]
 800b1fa:	ee18 0a10 	vmov	r0, s16
 800b1fe:	4798      	blx	r3
 800b200:	6823      	ldr	r3, [r4, #0]
 800b202:	9907      	ldr	r1, [sp, #28]
 800b204:	699b      	ldr	r3, [r3, #24]
 800b206:	ee18 0a10 	vmov	r0, s16
 800b20a:	4798      	blx	r3
 800b20c:	2000      	movs	r0, #0
 800b20e:	e7d8      	b.n	800b1c2 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x14e>
 800b210:	6808      	ldr	r0, [r1, #0]
 800b212:	e786      	b.n	800b122 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xae>
 800b214:	e9cd 5202 	strd	r5, r2, [sp, #8]
 800b218:	4923      	ldr	r1, [pc, #140]	; (800b2a8 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x234>)
 800b21a:	4b24      	ldr	r3, [pc, #144]	; (800b2ac <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x238>)
 800b21c:	f8d9 4014 	ldr.w	r4, [r9, #20]
 800b220:	4a1d      	ldr	r2, [pc, #116]	; (800b298 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x224>)
 800b222:	e9cd 3100 	strd	r3, r1, [sp]
 800b226:	4648      	mov	r0, r9
 800b228:	491a      	ldr	r1, [pc, #104]	; (800b294 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x220>)
 800b22a:	233d      	movs	r3, #61	; 0x3d
 800b22c:	47a0      	blx	r4
 800b22e:	2001      	movs	r0, #1
 800b230:	e7c7      	b.n	800b1c2 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x14e>
 800b232:	2801      	cmp	r0, #1
 800b234:	f47f af75 	bne.w	800b122 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xae>
 800b238:	684a      	ldr	r2, [r1, #4]
 800b23a:	2a00      	cmp	r2, #0
 800b23c:	f47f af75 	bne.w	800b12a <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0xb6>
 800b240:	600a      	str	r2, [r1, #0]
 800b242:	2401      	movs	r4, #1
 800b244:	e79c      	b.n	800b180 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x10c>
 800b246:	f8d9 5014 	ldr.w	r5, [r9, #20]
 800b24a:	f003 f9e3 	bl	800e614 <TfLiteTypeGetName>
 800b24e:	9b07      	ldr	r3, [sp, #28]
 800b250:	4604      	mov	r4, r0
 800b252:	7818      	ldrb	r0, [r3, #0]
 800b254:	f003 f9de 	bl	800e614 <TfLiteTypeGetName>
 800b258:	4915      	ldr	r1, [pc, #84]	; (800b2b0 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x23c>)
 800b25a:	4b16      	ldr	r3, [pc, #88]	; (800b2b4 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x240>)
 800b25c:	4a0e      	ldr	r2, [pc, #56]	; (800b298 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x224>)
 800b25e:	e9cd 3100 	strd	r3, r1, [sp]
 800b262:	e9cd 4002 	strd	r4, r0, [sp, #8]
 800b266:	4914      	ldr	r1, [pc, #80]	; (800b2b8 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x244>)
 800b268:	4648      	mov	r0, r9
 800b26a:	234d      	movs	r3, #77	; 0x4d
 800b26c:	47a8      	blx	r5
 800b26e:	2001      	movs	r0, #1
 800b270:	e7a7      	b.n	800b1c2 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x14e>
 800b272:	2601      	movs	r6, #1
 800b274:	e74a      	b.n	800b10c <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x98>
 800b276:	4911      	ldr	r1, [pc, #68]	; (800b2bc <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x248>)
 800b278:	4811      	ldr	r0, [pc, #68]	; (800b2c0 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode+0x24c>)
 800b27a:	f002 ffc9 	bl	800e210 <_Z11MicroPrintfPKcz>
 800b27e:	f011 fb97 	bl	801c9b0 <abort>
 800b282:	f012 fb5b 	bl	801d93c <__stack_chk_fail>
 800b286:	bf00      	nop
 800b288:	20011294 	.word	0x20011294
 800b28c:	080259dc 	.word	0x080259dc
 800b290:	080259f0 	.word	0x080259f0
 800b294:	08024a8c 	.word	0x08024a8c
 800b298:	0802594c 	.word	0x0802594c
 800b29c:	080249dc 	.word	0x080249dc
 800b2a0:	080249b0 	.word	0x080249b0
 800b2a4:	080249c8 	.word	0x080249c8
 800b2a8:	080259cc 	.word	0x080259cc
 800b2ac:	080259d0 	.word	0x080259d0
 800b2b0:	08024aa8 	.word	0x08024aa8
 800b2b4:	08024ab8 	.word	0x08024ab8
 800b2b8:	080251fc 	.word	0x080251fc
 800b2bc:	08024c40 	.word	0x08024c40
 800b2c0:	08024c74 	.word	0x08024c74

0800b2c4 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode>:
 800b2c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2c6:	4b26      	ldr	r3, [pc, #152]	; (800b360 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x9c>)
 800b2c8:	b087      	sub	sp, #28
 800b2ca:	681b      	ldr	r3, [r3, #0]
 800b2cc:	9305      	str	r3, [sp, #20]
 800b2ce:	f04f 0300 	mov.w	r3, #0
 800b2d2:	680b      	ldr	r3, [r1, #0]
 800b2d4:	4604      	mov	r4, r0
 800b2d6:	b11b      	cbz	r3, 800b2e0 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x1c>
 800b2d8:	681b      	ldr	r3, [r3, #0]
 800b2da:	3b01      	subs	r3, #1
 800b2dc:	2b01      	cmp	r3, #1
 800b2de:	d911      	bls.n	800b304 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x40>
 800b2e0:	4b20      	ldr	r3, [pc, #128]	; (800b364 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xa0>)
 800b2e2:	6965      	ldr	r5, [r4, #20]
 800b2e4:	4a20      	ldr	r2, [pc, #128]	; (800b368 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xa4>)
 800b2e6:	9300      	str	r3, [sp, #0]
 800b2e8:	4620      	mov	r0, r4
 800b2ea:	4920      	ldr	r1, [pc, #128]	; (800b36c <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xa8>)
 800b2ec:	2358      	movs	r3, #88	; 0x58
 800b2ee:	47a8      	blx	r5
 800b2f0:	2001      	movs	r0, #1
 800b2f2:	4b1b      	ldr	r3, [pc, #108]	; (800b360 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x9c>)
 800b2f4:	681a      	ldr	r2, [r3, #0]
 800b2f6:	9b05      	ldr	r3, [sp, #20]
 800b2f8:	405a      	eors	r2, r3
 800b2fa:	f04f 0300 	mov.w	r3, #0
 800b2fe:	d12d      	bne.n	800b35c <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x98>
 800b300:	b007      	add	sp, #28
 800b302:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b304:	684e      	ldr	r6, [r1, #4]
 800b306:	460d      	mov	r5, r1
 800b308:	b116      	cbz	r6, 800b310 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x4c>
 800b30a:	6836      	ldr	r6, [r6, #0]
 800b30c:	2e01      	cmp	r6, #1
 800b30e:	d00e      	beq.n	800b32e <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x6a>
 800b310:	4b17      	ldr	r3, [pc, #92]	; (800b370 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xac>)
 800b312:	6967      	ldr	r7, [r4, #20]
 800b314:	9301      	str	r3, [sp, #4]
 800b316:	2501      	movs	r5, #1
 800b318:	4b16      	ldr	r3, [pc, #88]	; (800b374 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xb0>)
 800b31a:	9300      	str	r3, [sp, #0]
 800b31c:	4620      	mov	r0, r4
 800b31e:	e9cd 6502 	strd	r6, r5, [sp, #8]
 800b322:	4a11      	ldr	r2, [pc, #68]	; (800b368 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xa4>)
 800b324:	4914      	ldr	r1, [pc, #80]	; (800b378 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>)
 800b326:	2359      	movs	r3, #89	; 0x59
 800b328:	47b8      	blx	r7
 800b32a:	4628      	mov	r0, r5
 800b32c:	e7e1      	b.n	800b2f2 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x2e>
 800b32e:	f7ff fea1 	bl	800b074 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode>
 800b332:	2800      	cmp	r0, #0
 800b334:	d0dd      	beq.n	800b2f2 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x2e>
 800b336:	4629      	mov	r1, r5
 800b338:	4620      	mov	r0, r4
 800b33a:	6965      	ldr	r5, [r4, #20]
 800b33c:	f7ff fe9a 	bl	800b074 <_ZN6tflite12_GLOBAL__N_113ReshapeOutputEP13TfLiteContextP10TfLiteNode>
 800b340:	2300      	movs	r3, #0
 800b342:	9303      	str	r3, [sp, #12]
 800b344:	4b0d      	ldr	r3, [pc, #52]	; (800b37c <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xb8>)
 800b346:	4a08      	ldr	r2, [pc, #32]	; (800b368 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xa4>)
 800b348:	490b      	ldr	r1, [pc, #44]	; (800b378 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xb4>)
 800b34a:	e9cd 3001 	strd	r3, r0, [sp, #4]
 800b34e:	4b0c      	ldr	r3, [pc, #48]	; (800b380 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0xbc>)
 800b350:	9300      	str	r3, [sp, #0]
 800b352:	4620      	mov	r0, r4
 800b354:	235a      	movs	r3, #90	; 0x5a
 800b356:	47a8      	blx	r5
 800b358:	4630      	mov	r0, r6
 800b35a:	e7ca      	b.n	800b2f2 <_ZN6tflite23PrepareReshapeReferenceEP13TfLiteContextP10TfLiteNode+0x2e>
 800b35c:	f012 faee 	bl	801d93c <__stack_chk_fail>
 800b360:	20011294 	.word	0x20011294
 800b364:	08025a04 	.word	0x08025a04
 800b368:	0802594c 	.word	0x0802594c
 800b36c:	080249b0 	.word	0x080249b0
 800b370:	0802580c 	.word	0x0802580c
 800b374:	080252d4 	.word	0x080252d4
 800b378:	08024a8c 	.word	0x08024a8c
 800b37c:	08025a34 	.word	0x08025a34
 800b380:	08025a40 	.word	0x08025a40

0800b384 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode>:
 800b384:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b388:	4b5a      	ldr	r3, [pc, #360]	; (800b4f4 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x170>)
 800b38a:	680d      	ldr	r5, [r1, #0]
 800b38c:	b089      	sub	sp, #36	; 0x24
 800b38e:	4606      	mov	r6, r0
 800b390:	681b      	ldr	r3, [r3, #0]
 800b392:	9307      	str	r3, [sp, #28]
 800b394:	f04f 0300 	mov.w	r3, #0
 800b398:	b115      	cbz	r5, 800b3a0 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x1c>
 800b39a:	682d      	ldr	r5, [r5, #0]
 800b39c:	2d02      	cmp	r5, #2
 800b39e:	d019      	beq.n	800b3d4 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x50>
 800b3a0:	4955      	ldr	r1, [pc, #340]	; (800b4f8 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x174>)
 800b3a2:	4b56      	ldr	r3, [pc, #344]	; (800b4fc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x178>)
 800b3a4:	6974      	ldr	r4, [r6, #20]
 800b3a6:	2202      	movs	r2, #2
 800b3a8:	e9cd 5202 	strd	r5, r2, [sp, #8]
 800b3ac:	e9cd 3100 	strd	r3, r1, [sp]
 800b3b0:	4a53      	ldr	r2, [pc, #332]	; (800b500 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x17c>)
 800b3b2:	4954      	ldr	r1, [pc, #336]	; (800b504 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x180>)
 800b3b4:	2324      	movs	r3, #36	; 0x24
 800b3b6:	4630      	mov	r0, r6
 800b3b8:	47a0      	blx	r4
 800b3ba:	2501      	movs	r5, #1
 800b3bc:	4b4d      	ldr	r3, [pc, #308]	; (800b4f4 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x170>)
 800b3be:	681a      	ldr	r2, [r3, #0]
 800b3c0:	9b07      	ldr	r3, [sp, #28]
 800b3c2:	405a      	eors	r2, r3
 800b3c4:	f04f 0300 	mov.w	r3, #0
 800b3c8:	f040 8092 	bne.w	800b4f0 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x16c>
 800b3cc:	4628      	mov	r0, r5
 800b3ce:	b009      	add	sp, #36	; 0x24
 800b3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b3d4:	684f      	ldr	r7, [r1, #4]
 800b3d6:	460c      	mov	r4, r1
 800b3d8:	b117      	cbz	r7, 800b3e0 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x5c>
 800b3da:	683f      	ldr	r7, [r7, #0]
 800b3dc:	2f01      	cmp	r7, #1
 800b3de:	d00d      	beq.n	800b3fc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x78>
 800b3e0:	4b49      	ldr	r3, [pc, #292]	; (800b508 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x184>)
 800b3e2:	6974      	ldr	r4, [r6, #20]
 800b3e4:	9301      	str	r3, [sp, #4]
 800b3e6:	2501      	movs	r5, #1
 800b3e8:	4b48      	ldr	r3, [pc, #288]	; (800b50c <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x188>)
 800b3ea:	9300      	str	r3, [sp, #0]
 800b3ec:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800b3f0:	4a43      	ldr	r2, [pc, #268]	; (800b500 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x17c>)
 800b3f2:	4944      	ldr	r1, [pc, #272]	; (800b504 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x180>)
 800b3f4:	2325      	movs	r3, #37	; 0x25
 800b3f6:	4630      	mov	r0, r6
 800b3f8:	47a0      	blx	r4
 800b3fa:	e7df      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b3fc:	f8d0 800c 	ldr.w	r8, [r0, #12]
 800b400:	2200      	movs	r2, #0
 800b402:	4640      	mov	r0, r8
 800b404:	f001 fb08 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 800b408:	463a      	mov	r2, r7
 800b40a:	4681      	mov	r9, r0
 800b40c:	4621      	mov	r1, r4
 800b40e:	4640      	mov	r0, r8
 800b410:	f001 fb02 	bl	800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>
 800b414:	2200      	movs	r2, #0
 800b416:	4683      	mov	fp, r0
 800b418:	4621      	mov	r1, r4
 800b41a:	4640      	mov	r0, r8
 800b41c:	f001 fb2a 	bl	800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>
 800b420:	f8d9 2008 	ldr.w	r2, [r9, #8]
 800b424:	6812      	ldr	r2, [r2, #0]
 800b426:	2a04      	cmp	r2, #4
 800b428:	4603      	mov	r3, r0
 800b42a:	d114      	bne.n	800b456 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0xd2>
 800b42c:	f8db 2008 	ldr.w	r2, [fp, #8]
 800b430:	f8d2 a000 	ldr.w	sl, [r2]
 800b434:	f1ba 0f01 	cmp.w	sl, #1
 800b438:	d01c      	beq.n	800b474 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0xf0>
 800b43a:	e9cd a702 	strd	sl, r7, [sp, #8]
 800b43e:	4a32      	ldr	r2, [pc, #200]	; (800b508 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x184>)
 800b440:	9201      	str	r2, [sp, #4]
 800b442:	4b33      	ldr	r3, [pc, #204]	; (800b510 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x18c>)
 800b444:	6974      	ldr	r4, [r6, #20]
 800b446:	4a2e      	ldr	r2, [pc, #184]	; (800b500 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x17c>)
 800b448:	9300      	str	r3, [sp, #0]
 800b44a:	492e      	ldr	r1, [pc, #184]	; (800b504 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x180>)
 800b44c:	232f      	movs	r3, #47	; 0x2f
 800b44e:	4630      	mov	r0, r6
 800b450:	463d      	mov	r5, r7
 800b452:	47a0      	blx	r4
 800b454:	e7b2      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b456:	2004      	movs	r0, #4
 800b458:	e9cd 2002 	strd	r2, r0, [sp, #8]
 800b45c:	492d      	ldr	r1, [pc, #180]	; (800b514 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x190>)
 800b45e:	4b2e      	ldr	r3, [pc, #184]	; (800b518 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x194>)
 800b460:	6974      	ldr	r4, [r6, #20]
 800b462:	4a27      	ldr	r2, [pc, #156]	; (800b500 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x17c>)
 800b464:	e9cd 3100 	strd	r3, r1, [sp]
 800b468:	4630      	mov	r0, r6
 800b46a:	4926      	ldr	r1, [pc, #152]	; (800b504 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x180>)
 800b46c:	232e      	movs	r3, #46	; 0x2e
 800b46e:	47a0      	blx	r4
 800b470:	463d      	mov	r5, r7
 800b472:	e7a3      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b474:	f89b 2000 	ldrb.w	r2, [fp]
 800b478:	2a02      	cmp	r2, #2
 800b47a:	d00d      	beq.n	800b498 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x114>
 800b47c:	e9cd 2502 	strd	r2, r5, [sp, #8]
 800b480:	4926      	ldr	r1, [pc, #152]	; (800b51c <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x198>)
 800b482:	4b27      	ldr	r3, [pc, #156]	; (800b520 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x19c>)
 800b484:	6974      	ldr	r4, [r6, #20]
 800b486:	4a1e      	ldr	r2, [pc, #120]	; (800b500 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x17c>)
 800b488:	e9cd 3100 	strd	r3, r1, [sp]
 800b48c:	4630      	mov	r0, r6
 800b48e:	491d      	ldr	r1, [pc, #116]	; (800b504 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x180>)
 800b490:	2331      	movs	r3, #49	; 0x31
 800b492:	47a0      	blx	r4
 800b494:	4655      	mov	r5, sl
 800b496:	e791      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b498:	f89b 5014 	ldrb.w	r5, [fp, #20]
 800b49c:	f899 2000 	ldrb.w	r2, [r9]
 800b4a0:	7002      	strb	r2, [r0, #0]
 800b4a2:	2d01      	cmp	r5, #1
 800b4a4:	d005      	beq.n	800b4b2 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x12e>
 800b4a6:	6973      	ldr	r3, [r6, #20]
 800b4a8:	491e      	ldr	r1, [pc, #120]	; (800b524 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x1a0>)
 800b4aa:	4630      	mov	r0, r6
 800b4ac:	4798      	blx	r3
 800b4ae:	4655      	mov	r5, sl
 800b4b0:	e784      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b4b2:	6962      	ldr	r2, [r4, #20]
 800b4b4:	7851      	ldrb	r1, [r2, #1]
 800b4b6:	b109      	cbz	r1, 800b4bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x138>
 800b4b8:	7812      	ldrb	r2, [r2, #0]
 800b4ba:	b9aa      	cbnz	r2, 800b4e8 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x164>
 800b4bc:	f8d8 2000 	ldr.w	r2, [r8]
 800b4c0:	9305      	str	r3, [sp, #20]
 800b4c2:	6992      	ldr	r2, [r2, #24]
 800b4c4:	4649      	mov	r1, r9
 800b4c6:	4640      	mov	r0, r8
 800b4c8:	4790      	blx	r2
 800b4ca:	f8d8 2000 	ldr.w	r2, [r8]
 800b4ce:	4659      	mov	r1, fp
 800b4d0:	6992      	ldr	r2, [r2, #24]
 800b4d2:	4640      	mov	r0, r8
 800b4d4:	4790      	blx	r2
 800b4d6:	9b05      	ldr	r3, [sp, #20]
 800b4d8:	f8d8 2000 	ldr.w	r2, [r8]
 800b4dc:	4619      	mov	r1, r3
 800b4de:	4640      	mov	r0, r8
 800b4e0:	6993      	ldr	r3, [r2, #24]
 800b4e2:	4798      	blx	r3
 800b4e4:	2500      	movs	r5, #0
 800b4e6:	e769      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b4e8:	480f      	ldr	r0, [pc, #60]	; (800b528 <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x1a4>)
 800b4ea:	f002 fe91 	bl	800e210 <_Z11MicroPrintfPKcz>
 800b4ee:	e765      	b.n	800b3bc <_ZN6tflite12_GLOBAL__N_121ResizeBilinearPrepareEP13TfLiteContextP10TfLiteNode+0x38>
 800b4f0:	f012 fa24 	bl	801d93c <__stack_chk_fail>
 800b4f4:	20011294 	.word	0x20011294
 800b4f8:	08026890 	.word	0x08026890
 800b4fc:	080252c4 	.word	0x080252c4
 800b500:	08025a60 	.word	0x08025a60
 800b504:	08024a8c 	.word	0x08024a8c
 800b508:	0802580c 	.word	0x0802580c
 800b50c:	080252d4 	.word	0x080252d4
 800b510:	08025af8 	.word	0x08025af8
 800b514:	08026614 	.word	0x08026614
 800b518:	08025ae0 	.word	0x08025ae0
 800b51c:	08025b0c 	.word	0x08025b0c
 800b520:	08025b1c 	.word	0x08025b1c
 800b524:	08025b28 	.word	0x08025b28
 800b528:	08025bd0 	.word	0x08025bd0

0800b52c <_ZN6tflite24Register_RESIZE_BILINEAREv>:
 800b52c:	b510      	push	{r4, lr}
 800b52e:	2100      	movs	r1, #0
 800b530:	b084      	sub	sp, #16
 800b532:	e9cd 1100 	strd	r1, r1, [sp]
 800b536:	f8df c038 	ldr.w	ip, [pc, #56]	; 800b570 <_ZN6tflite24Register_RESIZE_BILINEAREv+0x44>
 800b53a:	4b0b      	ldr	r3, [pc, #44]	; (800b568 <_ZN6tflite24Register_RESIZE_BILINEAREv+0x3c>)
 800b53c:	4a0b      	ldr	r2, [pc, #44]	; (800b56c <_ZN6tflite24Register_RESIZE_BILINEAREv+0x40>)
 800b53e:	4604      	mov	r4, r0
 800b540:	f8dc c000 	ldr.w	ip, [ip]
 800b544:	f8cd c00c 	str.w	ip, [sp, #12]
 800b548:	f04f 0c00 	mov.w	ip, #0
 800b54c:	f7fe fd3e 	bl	8009fcc <_ZN6tflite5micro10RegisterOpEPFPvP13TfLiteContextPKcjEPF12TfLiteStatusS3_P10TfLiteNodeESC_PFvS3_S1_ESE_>
 800b550:	4b07      	ldr	r3, [pc, #28]	; (800b570 <_ZN6tflite24Register_RESIZE_BILINEAREv+0x44>)
 800b552:	681a      	ldr	r2, [r3, #0]
 800b554:	9b03      	ldr	r3, [sp, #12]
 800b556:	405a      	eors	r2, r3
 800b558:	f04f 0300 	mov.w	r3, #0
 800b55c:	d102      	bne.n	800b564 <_ZN6tflite24Register_RESIZE_BILINEAREv+0x38>
 800b55e:	4620      	mov	r0, r4
 800b560:	b004      	add	sp, #16
 800b562:	bd10      	pop	{r4, pc}
 800b564:	f012 f9ea 	bl	801d93c <__stack_chk_fail>
 800b568:	0800c031 	.word	0x0800c031
 800b56c:	0800b385 	.word	0x0800b385
 800b570:	20011294 	.word	0x20011294

0800b574 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_>:
 800b574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b578:	ed2d 8b0a 	vpush	{d8-d12}
 800b57c:	b0af      	sub	sp, #188	; 0xbc
 800b57e:	461f      	mov	r7, r3
 800b580:	4b2c      	ldr	r3, [pc, #176]	; (800b634 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xc0>)
 800b582:	920d      	str	r2, [sp, #52]	; 0x34
 800b584:	e9dd 8243 	ldrd	r8, r2, [sp, #268]	; 0x10c
 800b588:	681b      	ldr	r3, [r3, #0]
 800b58a:	932d      	str	r3, [sp, #180]	; 0xb4
 800b58c:	f04f 0300 	mov.w	r3, #0
 800b590:	7843      	ldrb	r3, [r0, #1]
 800b592:	f8dd 9108 	ldr.w	r9, [sp, #264]	; 0x108
 800b596:	9308      	str	r3, [sp, #32]
 800b598:	4604      	mov	r4, r0
 800b59a:	920e      	str	r2, [sp, #56]	; 0x38
 800b59c:	b11b      	cbz	r3, 800b5a6 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x32>
 800b59e:	7803      	ldrb	r3, [r0, #0]
 800b5a0:	2b00      	cmp	r3, #0
 800b5a2:	f040 818d 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b5a6:	680a      	ldr	r2, [r1, #0]
 800b5a8:	2a04      	cmp	r2, #4
 800b5aa:	f300 8189 	bgt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b5ae:	683e      	ldr	r6, [r7, #0]
 800b5b0:	2e04      	cmp	r6, #4
 800b5b2:	f300 8185 	bgt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b5b6:	f8d8 5000 	ldr.w	r5, [r8]
 800b5ba:	2d04      	cmp	r5, #4
 800b5bc:	f300 8180 	bgt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b5c0:	2304      	movs	r3, #4
 800b5c2:	ebb3 0c02 	subs.w	ip, r3, r2
 800b5c6:	9318      	str	r3, [sp, #96]	; 0x60
 800b5c8:	a819      	add	r0, sp, #100	; 0x64
 800b5ca:	d00c      	beq.n	800b5e6 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x72>
 800b5cc:	4686      	mov	lr, r0
 800b5ce:	2300      	movs	r3, #0
 800b5d0:	f04f 0a01 	mov.w	sl, #1
 800b5d4:	e002      	b.n	800b5dc <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x68>
 800b5d6:	2b04      	cmp	r3, #4
 800b5d8:	f000 8172 	beq.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b5dc:	3301      	adds	r3, #1
 800b5de:	459c      	cmp	ip, r3
 800b5e0:	f84e ab04 	str.w	sl, [lr], #4
 800b5e4:	d1f7      	bne.n	800b5d6 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x62>
 800b5e6:	0092      	lsls	r2, r2, #2
 800b5e8:	eb00 008c 	add.w	r0, r0, ip, lsl #2
 800b5ec:	3104      	adds	r1, #4
 800b5ee:	f011 fa51 	bl	801ca94 <memcpy>
 800b5f2:	2304      	movs	r3, #4
 800b5f4:	1b98      	subs	r0, r3, r6
 800b5f6:	931f      	str	r3, [sp, #124]	; 0x7c
 800b5f8:	aa20      	add	r2, sp, #128	; 0x80
 800b5fa:	d00c      	beq.n	800b616 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xa2>
 800b5fc:	4611      	mov	r1, r2
 800b5fe:	2300      	movs	r3, #0
 800b600:	f04f 0c01 	mov.w	ip, #1
 800b604:	e002      	b.n	800b60c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x98>
 800b606:	2b04      	cmp	r3, #4
 800b608:	f000 815a 	beq.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b60c:	3301      	adds	r3, #1
 800b60e:	4298      	cmp	r0, r3
 800b610:	f841 cb04 	str.w	ip, [r1], #4
 800b614:	d1f7      	bne.n	800b606 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x92>
 800b616:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 800b61a:	1d39      	adds	r1, r7, #4
 800b61c:	00b2      	lsls	r2, r6, #2
 800b61e:	f011 fa39 	bl	801ca94 <memcpy>
 800b622:	2304      	movs	r3, #4
 800b624:	1b58      	subs	r0, r3, r5
 800b626:	9326      	str	r3, [sp, #152]	; 0x98
 800b628:	aa27      	add	r2, sp, #156	; 0x9c
 800b62a:	d00f      	beq.n	800b64c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xd8>
 800b62c:	4611      	mov	r1, r2
 800b62e:	2300      	movs	r3, #0
 800b630:	2601      	movs	r6, #1
 800b632:	e006      	b.n	800b642 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xce>
 800b634:	20011294 	.word	0x20011294
 800b638:	00000000 	.word	0x00000000
 800b63c:	2b04      	cmp	r3, #4
 800b63e:	f000 813f 	beq.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b642:	3301      	adds	r3, #1
 800b644:	4298      	cmp	r0, r3
 800b646:	f841 6b04 	str.w	r6, [r1], #4
 800b64a:	d1f7      	bne.n	800b63c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xc8>
 800b64c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 800b650:	f108 0104 	add.w	r1, r8, #4
 800b654:	00aa      	lsls	r2, r5, #2
 800b656:	f011 fa1d 	bl	801ca94 <memcpy>
 800b65a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800b65c:	930c      	str	r3, [sp, #48]	; 0x30
 800b65e:	2b00      	cmp	r3, #0
 800b660:	f340 812e 	ble.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b664:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800b666:	9919      	ldr	r1, [sp, #100]	; 0x64
 800b668:	9204      	str	r2, [sp, #16]
 800b66a:	2a00      	cmp	r2, #0
 800b66c:	9116      	str	r1, [sp, #88]	; 0x58
 800b66e:	f340 8127 	ble.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b672:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800b674:	428b      	cmp	r3, r1
 800b676:	f040 8123 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b67a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b67c:	2b01      	cmp	r3, #1
 800b67e:	f000 811f 	beq.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b682:	2b02      	cmp	r3, #2
 800b684:	9e1a      	ldr	r6, [sp, #104]	; 0x68
 800b686:	f000 811b 	beq.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b68a:	2b03      	cmp	r3, #3
 800b68c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 800b68e:	f000 8117 	beq.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b692:	2a03      	cmp	r2, #3
 800b694:	f8dd a070 	ldr.w	sl, [sp, #112]	; 0x70
 800b698:	f340 8112 	ble.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b69c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800b69e:	930a      	str	r3, [sp, #40]	; 0x28
 800b6a0:	4553      	cmp	r3, sl
 800b6a2:	f040 810d 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b6a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800b6a8:	2b04      	cmp	r3, #4
 800b6aa:	f040 8109 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b6ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800b6b0:	2b01      	cmp	r3, #1
 800b6b2:	f040 8105 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b6b6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b6b8:	2b01      	cmp	r3, #1
 800b6ba:	f040 8101 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b6be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800b6c0:	2b01      	cmp	r3, #1
 800b6c2:	f040 80fd 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b6c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800b6c8:	2b02      	cmp	r3, #2
 800b6ca:	f040 80f9 	bne.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b6ce:	f8d9 2000 	ldr.w	r2, [r9]
 800b6d2:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800b6d6:	7823      	ldrb	r3, [r4, #0]
 800b6d8:	9210      	str	r2, [sp, #64]	; 0x40
 800b6da:	ee07 2a90 	vmov	s15, r2
 800b6de:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800b6e2:	ee07 1a90 	vmov	s15, r1
 800b6e6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800b6ea:	ee07 6a90 	vmov	s15, r6
 800b6ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b6f2:	9107      	str	r1, [sp, #28]
 800b6f4:	ee87 aaa6 	vdiv.f32	s20, s15, s13
 800b6f8:	ee07 7a90 	vmov	s15, r7
 800b6fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b700:	eec7 8a87 	vdiv.f32	s17, s15, s14
 800b704:	b1f3      	cbz	r3, 800b744 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x1d0>
 800b706:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b708:	2b01      	cmp	r3, #1
 800b70a:	dd0b      	ble.n	800b724 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x1b0>
 800b70c:	1e72      	subs	r2, r6, #1
 800b70e:	3b01      	subs	r3, #1
 800b710:	ee07 2a10 	vmov	s14, r2
 800b714:	ee07 3a90 	vmov	s15, r3
 800b718:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b71c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b720:	ee87 aa27 	vdiv.f32	s20, s14, s15
 800b724:	9b07      	ldr	r3, [sp, #28]
 800b726:	2b01      	cmp	r3, #1
 800b728:	dd0c      	ble.n	800b744 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x1d0>
 800b72a:	1e7b      	subs	r3, r7, #1
 800b72c:	ee07 3a10 	vmov	s14, r3
 800b730:	9b07      	ldr	r3, [sp, #28]
 800b732:	3b01      	subs	r3, #1
 800b734:	ee07 3a90 	vmov	s15, r3
 800b738:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b73c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b740:	eec7 8a27 	vdiv.f32	s17, s14, s15
 800b744:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800b746:	2b00      	cmp	r3, #0
 800b748:	f340 8141 	ble.w	800b9ce <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x45a>
 800b74c:	e9dd 8928 	ldrd	r8, r9, [sp, #160]	; 0xa0
 800b750:	990a      	ldr	r1, [sp, #40]	; 0x28
 800b752:	fb09 f308 	mul.w	r3, r9, r8
 800b756:	fb01 f303 	mul.w	r3, r1, r3
 800b75a:	2200      	movs	r2, #0
 800b75c:	9317      	str	r3, [sp, #92]	; 0x5c
 800b75e:	fb01 f309 	mul.w	r3, r1, r9
 800b762:	e9cd 2311 	strd	r2, r3, [sp, #68]	; 0x44
 800b766:	ed1f ca4c 	vldr	s24, [pc, #-304]	; 800b638 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xc4>
 800b76a:	9214      	str	r2, [sp, #80]	; 0x50
 800b76c:	1e73      	subs	r3, r6, #1
 800b76e:	46d3      	mov	fp, sl
 800b770:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 800b774:	9215      	str	r2, [sp, #84]	; 0x54
 800b776:	9313      	str	r3, [sp, #76]	; 0x4c
 800b778:	46c2      	mov	sl, r8
 800b77a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b77c:	2b00      	cmp	r3, #0
 800b77e:	f340 8118 	ble.w	800b9b2 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x43e>
 800b782:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800b784:	930f      	str	r3, [sp, #60]	; 0x3c
 800b786:	2300      	movs	r3, #0
 800b788:	eef6 9a00 	vmov.f32	s19, #96	; 0x3f000000  0.5
 800b78c:	eebe 9a00 	vmov.f32	s18, #224	; 0xbf000000 -0.5
 800b790:	9301      	str	r3, [sp, #4]
 800b792:	eddd 7a01 	vldr	s15, [sp, #4]
 800b796:	9b08      	ldr	r3, [sp, #32]
 800b798:	eef8 bae7 	vcvt.f32.s32	s23, s15
 800b79c:	2b00      	cmp	r3, #0
 800b79e:	f000 8161 	beq.w	800ba64 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4f0>
 800b7a2:	ee7b 7aa9 	vadd.f32	s15, s23, s19
 800b7a6:	eef0 ba49 	vmov.f32	s23, s18
 800b7aa:	eee7 ba8a 	vfma.f32	s23, s15, s20
 800b7ae:	eeb0 0a6b 	vmov.f32	s0, s23
 800b7b2:	f010 fa91 	bl	801bcd8 <floorf>
 800b7b6:	eef0 7a40 	vmov.f32	s15, s0
 800b7ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b7be:	eeb0 0a6b 	vmov.f32	s0, s23
 800b7c2:	edcd 7a03 	vstr	s15, [sp, #12]
 800b7c6:	f010 fa01 	bl	801bbcc <ceilf>
 800b7ca:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800b7ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b7d0:	ee17 4a90 	vmov	r4, s15
 800b7d4:	429c      	cmp	r4, r3
 800b7d6:	bfa8      	it	ge
 800b7d8:	461c      	movge	r4, r3
 800b7da:	9b03      	ldr	r3, [sp, #12]
 800b7dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800b7e0:	ee08 3a10 	vmov	s16, r3
 800b7e4:	9b07      	ldr	r3, [sp, #28]
 800b7e6:	2b00      	cmp	r3, #0
 800b7e8:	f340 80d8 	ble.w	800b99c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x428>
 800b7ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800b7ee:	ee18 3a10 	vmov	r3, s16
 800b7f2:	4413      	add	r3, r2
 800b7f4:	fb07 f303 	mul.w	r3, r7, r3
 800b7f8:	9306      	str	r3, [sp, #24]
 800b7fa:	18a3      	adds	r3, r4, r2
 800b7fc:	fb07 f303 	mul.w	r3, r7, r3
 800b800:	930b      	str	r3, [sp, #44]	; 0x2c
 800b802:	1e7b      	subs	r3, r7, #1
 800b804:	9309      	str	r3, [sp, #36]	; 0x24
 800b806:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b808:	9305      	str	r3, [sp, #20]
 800b80a:	f04f 0800 	mov.w	r8, #0
 800b80e:	ee07 8a90 	vmov	s15, r8
 800b812:	9b08      	ldr	r3, [sp, #32]
 800b814:	eeb8 bae7 	vcvt.f32.s32	s22, s15
 800b818:	2b00      	cmp	r3, #0
 800b81a:	f000 8120 	beq.w	800ba5e <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4ea>
 800b81e:	ee7b 7a29 	vadd.f32	s15, s22, s19
 800b822:	eeb0 ba49 	vmov.f32	s22, s18
 800b826:	eea8 baa7 	vfma.f32	s22, s17, s15
 800b82a:	eeb0 0a4b 	vmov.f32	s0, s22
 800b82e:	f010 fa53 	bl	801bcd8 <floorf>
 800b832:	eef0 7a40 	vmov.f32	s15, s0
 800b836:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b83a:	eeb0 0a4b 	vmov.f32	s0, s22
 800b83e:	edcd 7a02 	vstr	s15, [sp, #8]
 800b842:	f010 f9c3 	bl	801bbcc <ceilf>
 800b846:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800b84a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b84c:	ee17 3a90 	vmov	r3, s15
 800b850:	4293      	cmp	r3, r2
 800b852:	bfa8      	it	ge
 800b854:	4613      	movge	r3, r2
 800b856:	9a02      	ldr	r2, [sp, #8]
 800b858:	f1bb 0f00 	cmp.w	fp, #0
 800b85c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800b860:	ee04 2a90 	vmov	s9, r2
 800b864:	f340 8090 	ble.w	800b988 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x414>
 800b868:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800b86a:	2a04      	cmp	r2, #4
 800b86c:	d128      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b86e:	9806      	ldr	r0, [sp, #24]
 800b870:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b872:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b874:	18c5      	adds	r5, r0, r3
 800b876:	fb0b f505 	mul.w	r5, fp, r5
 800b87a:	eb02 0085 	add.w	r0, r2, r5, lsl #2
 800b87e:	9000      	str	r0, [sp, #0]
 800b880:	ee14 0a90 	vmov	r0, s9
 800b884:	ee14 5a90 	vmov	r5, s9
 800b888:	eb01 0c03 	add.w	ip, r1, r3
 800b88c:	4408      	add	r0, r1
 800b88e:	9906      	ldr	r1, [sp, #24]
 800b890:	1869      	adds	r1, r5, r1
 800b892:	fb0b fc0c 	mul.w	ip, fp, ip
 800b896:	fb0b f000 	mul.w	r0, fp, r0
 800b89a:	fb0b f101 	mul.w	r1, fp, r1
 800b89e:	9d05      	ldr	r5, [sp, #20]
 800b8a0:	eb02 0181 	add.w	r1, r2, r1, lsl #2
 800b8a4:	eb02 0c8c 	add.w	ip, r2, ip, lsl #2
 800b8a8:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 800b8ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b8ae:	eb02 0e85 	add.w	lr, r2, r5, lsl #2
 800b8b2:	9d00      	ldr	r5, [sp, #0]
 800b8b4:	9100      	str	r1, [sp, #0]
 800b8b6:	2200      	movs	r2, #0
 800b8b8:	b926      	cbnz	r6, 800b8c4 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x350>
 800b8ba:	9903      	ldr	r1, [sp, #12]
 800b8bc:	2900      	cmp	r1, #0
 800b8be:	dd05      	ble.n	800b8cc <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x358>
 800b8c0:	f011 f876 	bl	801c9b0 <abort>
 800b8c4:	ee18 1a10 	vmov	r1, s16
 800b8c8:	428e      	cmp	r6, r1
 800b8ca:	ddf9      	ble.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b8cc:	2f00      	cmp	r7, #0
 800b8ce:	f040 80b9 	bne.w	800ba44 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4d0>
 800b8d2:	9902      	ldr	r1, [sp, #8]
 800b8d4:	2900      	cmp	r1, #0
 800b8d6:	dcf3      	bgt.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b8d8:	eeb8 7ac8 	vcvt.f32.s32	s14, s16
 800b8dc:	9900      	ldr	r1, [sp, #0]
 800b8de:	ee3b 7ac7 	vsub.f32	s14, s23, s14
 800b8e2:	eef8 6ae4 	vcvt.f32.s32	s13, s9
 800b8e6:	ecf1 7a01 	vldmia	r1!, {s15}
 800b8ea:	ee3a 6ac7 	vsub.f32	s12, s21, s14
 800b8ee:	ee7b 6a66 	vsub.f32	s13, s22, s13
 800b8f2:	ee67 7a86 	vmul.f32	s15, s15, s12
 800b8f6:	ee3a 5ae6 	vsub.f32	s10, s21, s13
 800b8fa:	9100      	str	r1, [sp, #0]
 800b8fc:	ee67 7a85 	vmul.f32	s15, s15, s10
 800b900:	2e00      	cmp	r6, #0
 800b902:	f040 80a5 	bne.w	800ba50 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4dc>
 800b906:	2c00      	cmp	r4, #0
 800b908:	d1da      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b90a:	2f00      	cmp	r7, #0
 800b90c:	f040 8094 	bne.w	800ba38 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4c4>
 800b910:	9902      	ldr	r1, [sp, #8]
 800b912:	2900      	cmp	r1, #0
 800b914:	dcd4      	bgt.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b916:	ecf0 5a01 	vldmia	r0!, {s11}
 800b91a:	ee67 5a25 	vmul.f32	s11, s14, s11
 800b91e:	eee5 7a25 	vfma.f32	s15, s10, s11
 800b922:	2e00      	cmp	r6, #0
 800b924:	d165      	bne.n	800b9f2 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x47e>
 800b926:	9903      	ldr	r1, [sp, #12]
 800b928:	2900      	cmp	r1, #0
 800b92a:	dcc9      	bgt.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b92c:	2f00      	cmp	r7, #0
 800b92e:	d167      	bne.n	800ba00 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x48c>
 800b930:	2b00      	cmp	r3, #0
 800b932:	d1c5      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b934:	ecf5 5a01 	vldmia	r5!, {s11}
 800b938:	ee26 6a25 	vmul.f32	s12, s12, s11
 800b93c:	eee6 7a86 	vfma.f32	s15, s13, s12
 800b940:	2e00      	cmp	r6, #0
 800b942:	d16b      	bne.n	800ba1c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4a8>
 800b944:	2c00      	cmp	r4, #0
 800b946:	d1bb      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b948:	2f00      	cmp	r7, #0
 800b94a:	d16f      	bne.n	800ba2c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4b8>
 800b94c:	2b00      	cmp	r3, #0
 800b94e:	d1b7      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b950:	ecbc 6a01 	vldmia	ip!, {s12}
 800b954:	9904      	ldr	r1, [sp, #16]
 800b956:	ee27 7a06 	vmul.f32	s14, s14, s12
 800b95a:	2904      	cmp	r1, #4
 800b95c:	eee6 7a87 	vfma.f32	s15, s13, s14
 800b960:	ee77 7a8c 	vadd.f32	s15, s15, s24
 800b964:	d1ac      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b966:	9901      	ldr	r1, [sp, #4]
 800b968:	f1ba 0f00 	cmp.w	sl, #0
 800b96c:	d13e      	bne.n	800b9ec <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x478>
 800b96e:	2900      	cmp	r1, #0
 800b970:	d1a6      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b972:	f1b9 0f00 	cmp.w	r9, #0
 800b976:	d136      	bne.n	800b9e6 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x472>
 800b978:	f1b8 0f00 	cmp.w	r8, #0
 800b97c:	d1a0      	bne.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b97e:	3201      	adds	r2, #1
 800b980:	455a      	cmp	r2, fp
 800b982:	ecee 7a01 	vstmia	lr!, {s15}
 800b986:	d197      	bne.n	800b8b8 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x344>
 800b988:	9b05      	ldr	r3, [sp, #20]
 800b98a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b98c:	4413      	add	r3, r2
 800b98e:	9305      	str	r3, [sp, #20]
 800b990:	9b07      	ldr	r3, [sp, #28]
 800b992:	f108 0801 	add.w	r8, r8, #1
 800b996:	4543      	cmp	r3, r8
 800b998:	f47f af39 	bne.w	800b80e <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x29a>
 800b99c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800b99e:	9912      	ldr	r1, [sp, #72]	; 0x48
 800b9a0:	9b01      	ldr	r3, [sp, #4]
 800b9a2:	440a      	add	r2, r1
 800b9a4:	920f      	str	r2, [sp, #60]	; 0x3c
 800b9a6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b9a8:	3301      	adds	r3, #1
 800b9aa:	4293      	cmp	r3, r2
 800b9ac:	9301      	str	r3, [sp, #4]
 800b9ae:	f47f aef0 	bne.w	800b792 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x21e>
 800b9b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800b9b4:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800b9b6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800b9b8:	4432      	add	r2, r6
 800b9ba:	9211      	str	r2, [sp, #68]	; 0x44
 800b9bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800b9be:	440a      	add	r2, r1
 800b9c0:	9214      	str	r2, [sp, #80]	; 0x50
 800b9c2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800b9c4:	3301      	adds	r3, #1
 800b9c6:	4293      	cmp	r3, r2
 800b9c8:	9315      	str	r3, [sp, #84]	; 0x54
 800b9ca:	f47f aed6 	bne.w	800b77a <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x206>
 800b9ce:	4b28      	ldr	r3, [pc, #160]	; (800ba70 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4fc>)
 800b9d0:	681a      	ldr	r2, [r3, #0]
 800b9d2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800b9d4:	405a      	eors	r2, r3
 800b9d6:	f04f 0300 	mov.w	r3, #0
 800b9da:	d146      	bne.n	800ba6a <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4f6>
 800b9dc:	b02f      	add	sp, #188	; 0xbc
 800b9de:	ecbd 8b0a 	vpop	{d8-d12}
 800b9e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b9e6:	45c1      	cmp	r9, r8
 800b9e8:	dcc9      	bgt.n	800b97e <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x40a>
 800b9ea:	e769      	b.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b9ec:	458a      	cmp	sl, r1
 800b9ee:	dcc0      	bgt.n	800b972 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3fe>
 800b9f0:	e766      	b.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b9f2:	ee18 1a10 	vmov	r1, s16
 800b9f6:	428e      	cmp	r6, r1
 800b9f8:	f77f af62 	ble.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800b9fc:	2f00      	cmp	r7, #0
 800b9fe:	d097      	beq.n	800b930 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3bc>
 800ba00:	2b00      	cmp	r3, #0
 800ba02:	f6ff af5d 	blt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba06:	429f      	cmp	r7, r3
 800ba08:	f77f af5a 	ble.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba0c:	ecf5 5a01 	vldmia	r5!, {s11}
 800ba10:	ee26 6a25 	vmul.f32	s12, s12, s11
 800ba14:	eee6 7a86 	vfma.f32	s15, s13, s12
 800ba18:	2e00      	cmp	r6, #0
 800ba1a:	d093      	beq.n	800b944 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3d0>
 800ba1c:	2c00      	cmp	r4, #0
 800ba1e:	f6ff af4f 	blt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba22:	42a6      	cmp	r6, r4
 800ba24:	f77f af4c 	ble.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba28:	2f00      	cmp	r7, #0
 800ba2a:	d08f      	beq.n	800b94c <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3d8>
 800ba2c:	2b00      	cmp	r3, #0
 800ba2e:	f6ff af47 	blt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba32:	429f      	cmp	r7, r3
 800ba34:	dc8c      	bgt.n	800b950 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3dc>
 800ba36:	e743      	b.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba38:	ee14 1a90 	vmov	r1, s9
 800ba3c:	428f      	cmp	r7, r1
 800ba3e:	f73f af6a 	bgt.w	800b916 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3a2>
 800ba42:	e73d      	b.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba44:	ee14 1a90 	vmov	r1, s9
 800ba48:	428f      	cmp	r7, r1
 800ba4a:	f73f af45 	bgt.w	800b8d8 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x364>
 800ba4e:	e737      	b.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba50:	2c00      	cmp	r4, #0
 800ba52:	f6ff af35 	blt.w	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba56:	42a6      	cmp	r6, r4
 800ba58:	f73f af57 	bgt.w	800b90a <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x396>
 800ba5c:	e730      	b.n	800b8c0 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x34c>
 800ba5e:	ee2b ba28 	vmul.f32	s22, s22, s17
 800ba62:	e6e2      	b.n	800b82a <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x2b6>
 800ba64:	ee6b ba8a 	vmul.f32	s23, s23, s20
 800ba68:	e6a1      	b.n	800b7ae <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x23a>
 800ba6a:	f011 ff67 	bl	801d93c <__stack_chk_fail>
 800ba6e:	bf00      	nop
 800ba70:	20011294 	.word	0x20011294

0800ba74 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_>:
 800ba74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba78:	b0c3      	sub	sp, #268	; 0x10c
 800ba7a:	461f      	mov	r7, r3
 800ba7c:	4b2b      	ldr	r3, [pc, #172]	; (800bb2c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xb8>)
 800ba7e:	901b      	str	r0, [sp, #108]	; 0x6c
 800ba80:	921e      	str	r2, [sp, #120]	; 0x78
 800ba82:	681b      	ldr	r3, [r3, #0]
 800ba84:	9341      	str	r3, [sp, #260]	; 0x104
 800ba86:	f04f 0300 	mov.w	r3, #0
 800ba8a:	7843      	ldrb	r3, [r0, #1]
 800ba8c:	9c4c      	ldr	r4, [sp, #304]	; 0x130
 800ba8e:	e9dd 8a4d 	ldrd	r8, sl, [sp, #308]	; 0x134
 800ba92:	b11b      	cbz	r3, 800ba9c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x28>
 800ba94:	7803      	ldrb	r3, [r0, #0]
 800ba96:	2b00      	cmp	r3, #0
 800ba98:	f040 8186 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800ba9c:	680a      	ldr	r2, [r1, #0]
 800ba9e:	2a04      	cmp	r2, #4
 800baa0:	f300 8182 	bgt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800baa4:	683e      	ldr	r6, [r7, #0]
 800baa6:	2e04      	cmp	r6, #4
 800baa8:	f300 817e 	bgt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800baac:	f8d8 5000 	ldr.w	r5, [r8]
 800bab0:	2d04      	cmp	r5, #4
 800bab2:	f300 8179 	bgt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bab6:	2304      	movs	r3, #4
 800bab8:	ebb3 0c02 	subs.w	ip, r3, r2
 800babc:	932c      	str	r3, [sp, #176]	; 0xb0
 800babe:	a82d      	add	r0, sp, #180	; 0xb4
 800bac0:	d00c      	beq.n	800badc <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x68>
 800bac2:	4686      	mov	lr, r0
 800bac4:	2300      	movs	r3, #0
 800bac6:	f04f 0901 	mov.w	r9, #1
 800baca:	e002      	b.n	800bad2 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x5e>
 800bacc:	2b04      	cmp	r3, #4
 800bace:	f000 816b 	beq.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bad2:	3301      	adds	r3, #1
 800bad4:	459c      	cmp	ip, r3
 800bad6:	f84e 9b04 	str.w	r9, [lr], #4
 800bada:	d1f7      	bne.n	800bacc <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x58>
 800badc:	0092      	lsls	r2, r2, #2
 800bade:	eb00 008c 	add.w	r0, r0, ip, lsl #2
 800bae2:	3104      	adds	r1, #4
 800bae4:	f010 ffd6 	bl	801ca94 <memcpy>
 800bae8:	2304      	movs	r3, #4
 800baea:	1b98      	subs	r0, r3, r6
 800baec:	9333      	str	r3, [sp, #204]	; 0xcc
 800baee:	aa34      	add	r2, sp, #208	; 0xd0
 800baf0:	d00c      	beq.n	800bb0c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x98>
 800baf2:	4611      	mov	r1, r2
 800baf4:	2300      	movs	r3, #0
 800baf6:	f04f 0c01 	mov.w	ip, #1
 800bafa:	e002      	b.n	800bb02 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x8e>
 800bafc:	2b04      	cmp	r3, #4
 800bafe:	f000 8153 	beq.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb02:	3301      	adds	r3, #1
 800bb04:	4298      	cmp	r0, r3
 800bb06:	f841 cb04 	str.w	ip, [r1], #4
 800bb0a:	d1f7      	bne.n	800bafc <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x88>
 800bb0c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 800bb10:	1d39      	adds	r1, r7, #4
 800bb12:	00b2      	lsls	r2, r6, #2
 800bb14:	f010 ffbe 	bl	801ca94 <memcpy>
 800bb18:	2304      	movs	r3, #4
 800bb1a:	1b58      	subs	r0, r3, r5
 800bb1c:	933a      	str	r3, [sp, #232]	; 0xe8
 800bb1e:	aa3b      	add	r2, sp, #236	; 0xec
 800bb20:	d00e      	beq.n	800bb40 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xcc>
 800bb22:	4611      	mov	r1, r2
 800bb24:	2300      	movs	r3, #0
 800bb26:	2601      	movs	r6, #1
 800bb28:	e005      	b.n	800bb36 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xc2>
 800bb2a:	bf00      	nop
 800bb2c:	20011294 	.word	0x20011294
 800bb30:	2b04      	cmp	r3, #4
 800bb32:	f000 8139 	beq.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb36:	3301      	adds	r3, #1
 800bb38:	4298      	cmp	r0, r3
 800bb3a:	f841 6b04 	str.w	r6, [r1], #4
 800bb3e:	d1f7      	bne.n	800bb30 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0xbc>
 800bb40:	eb02 0080 	add.w	r0, r2, r0, lsl #2
 800bb44:	f108 0104 	add.w	r1, r8, #4
 800bb48:	00aa      	lsls	r2, r5, #2
 800bb4a:	f010 ffa3 	bl	801ca94 <memcpy>
 800bb4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800bb50:	931d      	str	r3, [sp, #116]	; 0x74
 800bb52:	2b00      	cmp	r3, #0
 800bb54:	f340 8128 	ble.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb58:	9a3a      	ldr	r2, [sp, #232]	; 0xe8
 800bb5a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bb5c:	9212      	str	r2, [sp, #72]	; 0x48
 800bb5e:	2a00      	cmp	r2, #0
 800bb60:	912a      	str	r1, [sp, #168]	; 0xa8
 800bb62:	f340 8121 	ble.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb66:	9b3b      	ldr	r3, [sp, #236]	; 0xec
 800bb68:	428b      	cmp	r3, r1
 800bb6a:	f040 811d 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb6e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800bb70:	2b01      	cmp	r3, #1
 800bb72:	f000 8119 	beq.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb76:	2b02      	cmp	r3, #2
 800bb78:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800bb7a:	f000 8115 	beq.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb7e:	2b03      	cmp	r3, #3
 800bb80:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 800bb82:	f000 8111 	beq.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb86:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 800bb88:	9315      	str	r3, [sp, #84]	; 0x54
 800bb8a:	2a03      	cmp	r2, #3
 800bb8c:	f340 810c 	ble.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb90:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 800bb92:	921a      	str	r2, [sp, #104]	; 0x68
 800bb94:	429a      	cmp	r2, r3
 800bb96:	f040 8107 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bb9a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 800bb9c:	2b04      	cmp	r3, #4
 800bb9e:	f040 8103 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bba2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 800bba4:	2b01      	cmp	r3, #1
 800bba6:	f040 80ff 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bbaa:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 800bbac:	2b01      	cmp	r3, #1
 800bbae:	f040 80fb 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bbb2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 800bbb4:	2b01      	cmp	r3, #1
 800bbb6:	f040 80f7 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bbba:	9b37      	ldr	r3, [sp, #220]	; 0xdc
 800bbbc:	2b02      	cmp	r3, #2
 800bbbe:	f040 80f3 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bbc2:	6822      	ldr	r2, [r4, #0]
 800bbc4:	6861      	ldr	r1, [r4, #4]
 800bbc6:	9223      	str	r2, [sp, #140]	; 0x8c
 800bbc8:	eb02 73d2 	add.w	r3, r2, r2, lsr #31
 800bbcc:	105b      	asrs	r3, r3, #1
 800bbce:	eb03 2387 	add.w	r3, r3, r7, lsl #10
 800bbd2:	fb93 f3f2 	sdiv	r3, r3, r2
 800bbd6:	9322      	str	r3, [sp, #136]	; 0x88
 800bbd8:	eb01 73d1 	add.w	r3, r1, r1, lsr #31
 800bbdc:	105b      	asrs	r3, r3, #1
 800bbde:	eb03 2386 	add.w	r3, r3, r6, lsl #10
 800bbe2:	fb93 f3f1 	sdiv	r3, r3, r1
 800bbe6:	9319      	str	r3, [sp, #100]	; 0x64
 800bbe8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800bbea:	9117      	str	r1, [sp, #92]	; 0x5c
 800bbec:	781a      	ldrb	r2, [r3, #0]
 800bbee:	02b1      	lsls	r1, r6, #10
 800bbf0:	02bb      	lsls	r3, r7, #10
 800bbf2:	b1b2      	cbz	r2, 800bc22 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x1ae>
 800bbf4:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800bbf6:	2a01      	cmp	r2, #1
 800bbf8:	dd07      	ble.n	800bc0a <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x196>
 800bbfa:	3a01      	subs	r2, #1
 800bbfc:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 800bc00:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800bc04:	fb93 f3f2 	sdiv	r3, r3, r2
 800bc08:	9322      	str	r3, [sp, #136]	; 0x88
 800bc0a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800bc0c:	2b01      	cmp	r3, #1
 800bc0e:	dd08      	ble.n	800bc22 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x1ae>
 800bc10:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800bc12:	f5a1 6380 	sub.w	r3, r1, #1024	; 0x400
 800bc16:	3a01      	subs	r2, #1
 800bc18:	eb03 0362 	add.w	r3, r3, r2, asr #1
 800bc1c:	fb93 f3f2 	sdiv	r3, r3, r2
 800bc20:	9319      	str	r3, [sp, #100]	; 0x64
 800bc22:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 800bc24:	2b00      	cmp	r3, #0
 800bc26:	f340 81e5 	ble.w	800bff4 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x580>
 800bc2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800bc2c:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
 800bc2e:	993c      	ldr	r1, [sp, #240]	; 0xf0
 800bc30:	910d      	str	r1, [sp, #52]	; 0x34
 800bc32:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800bc36:	105b      	asrs	r3, r3, #1
 800bc38:	9327      	str	r3, [sp, #156]	; 0x9c
 800bc3a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800bc3c:	920e      	str	r2, [sp, #56]	; 0x38
 800bc3e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 800bc42:	105b      	asrs	r3, r3, #1
 800bc44:	931f      	str	r3, [sp, #124]	; 0x7c
 800bc46:	fb02 f301 	mul.w	r3, r2, r1
 800bc4a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800bc4c:	f8cd a0a0 	str.w	sl, [sp, #160]	; 0xa0
 800bc50:	fb01 f303 	mul.w	r3, r1, r3
 800bc54:	932b      	str	r3, [sp, #172]	; 0xac
 800bc56:	fb02 f201 	mul.w	r2, r2, r1
 800bc5a:	2300      	movs	r3, #0
 800bc5c:	9324      	str	r3, [sp, #144]	; 0x90
 800bc5e:	9226      	str	r2, [sp, #152]	; 0x98
 800bc60:	9329      	str	r3, [sp, #164]	; 0xa4
 800bc62:	46be      	mov	lr, r7
 800bc64:	46b0      	mov	r8, r6
 800bc66:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800bc68:	2b00      	cmp	r3, #0
 800bc6a:	f340 81b5 	ble.w	800bfd8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x564>
 800bc6e:	f10e 33ff 	add.w	r3, lr, #4294967295
 800bc72:	9325      	str	r3, [sp, #148]	; 0x94
 800bc74:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800bc76:	f5a3 7300 	sub.w	r3, r3, #512	; 0x200
 800bc7a:	9321      	str	r3, [sp, #132]	; 0x84
 800bc7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800bc7e:	9320      	str	r3, [sp, #128]	; 0x80
 800bc80:	2300      	movs	r3, #0
 800bc82:	9310      	str	r3, [sp, #64]	; 0x40
 800bc84:	46f1      	mov	r9, lr
 800bc86:	4647      	mov	r7, r8
 800bc88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800bc8a:	785b      	ldrb	r3, [r3, #1]
 800bc8c:	2b00      	cmp	r3, #0
 800bc8e:	f000 81bb 	beq.w	800c008 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x594>
 800bc92:	9921      	ldr	r1, [sp, #132]	; 0x84
 800bc94:	4ab6      	ldr	r2, [pc, #728]	; (800bf70 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4fc>)
 800bc96:	4291      	cmp	r1, r2
 800bc98:	f2c0 81bf 	blt.w	800c01a <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x5a6>
 800bc9c:	f201 32ff 	addw	r2, r1, #1023	; 0x3ff
 800bca0:	2900      	cmp	r1, #0
 800bca2:	4608      	mov	r0, r1
 800bca4:	bfb8      	it	lt
 800bca6:	4610      	movlt	r0, r2
 800bca8:	1280      	asrs	r0, r0, #10
 800bcaa:	9001      	str	r0, [sp, #4]
 800bcac:	2a00      	cmp	r2, #0
 800bcae:	9825      	ldr	r0, [sp, #148]	; 0x94
 800bcb0:	bfb8      	it	lt
 800bcb2:	f201 72fe 	addwlt	r2, r1, #2046	; 0x7fe
 800bcb6:	1292      	asrs	r2, r2, #10
 800bcb8:	4290      	cmp	r0, r2
 800bcba:	bfa8      	it	ge
 800bcbc:	4610      	movge	r0, r2
 800bcbe:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800bcc0:	2a00      	cmp	r2, #0
 800bcc2:	4684      	mov	ip, r0
 800bcc4:	f340 8177 	ble.w	800bfb6 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x542>
 800bcc8:	9801      	ldr	r0, [sp, #4]
 800bcca:	9c24      	ldr	r4, [sp, #144]	; 0x90
 800bccc:	1902      	adds	r2, r0, r4
 800bcce:	fb07 f202 	mul.w	r2, r7, r2
 800bcd2:	921c      	str	r2, [sp, #112]	; 0x70
 800bcd4:	ebc1 2280 	rsb	r2, r1, r0, lsl #10
 800bcd8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800bcdc:	9209      	str	r2, [sp, #36]	; 0x24
 800bcde:	eb0c 0204 	add.w	r2, ip, r4
 800bce2:	fb07 f202 	mul.w	r2, r7, r2
 800bce6:	9216      	str	r2, [sp, #88]	; 0x58
 800bce8:	1e7a      	subs	r2, r7, #1
 800bcea:	9218      	str	r2, [sp, #96]	; 0x60
 800bcec:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 800bcee:	f5a2 7200 	sub.w	r2, r2, #512	; 0x200
 800bcf2:	9213      	str	r2, [sp, #76]	; 0x4c
 800bcf4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800bcf6:	9214      	str	r2, [sp, #80]	; 0x50
 800bcf8:	eba1 2180 	sub.w	r1, r1, r0, lsl #10
 800bcfc:	2200      	movs	r2, #0
 800bcfe:	9108      	str	r1, [sp, #32]
 800bd00:	920f      	str	r2, [sp, #60]	; 0x3c
 800bd02:	464d      	mov	r5, r9
 800bd04:	46e0      	mov	r8, ip
 800bd06:	2b00      	cmp	r3, #0
 800bd08:	f000 8108 	beq.w	800bf1c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4a8>
 800bd0c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800bd0e:	4b98      	ldr	r3, [pc, #608]	; (800bf70 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4fc>)
 800bd10:	4298      	cmp	r0, r3
 800bd12:	f2c0 810c 	blt.w	800bf2e <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4ba>
 800bd16:	f200 3eff 	addw	lr, r0, #1023	; 0x3ff
 800bd1a:	2800      	cmp	r0, #0
 800bd1c:	4682      	mov	sl, r0
 800bd1e:	bfb8      	it	lt
 800bd20:	46f2      	movlt	sl, lr
 800bd22:	ea4f 2aaa 	mov.w	sl, sl, asr #10
 800bd26:	f1be 0f00 	cmp.w	lr, #0
 800bd2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800bd2c:	bfb8      	it	lt
 800bd2e:	f200 7efe 	addwlt	lr, r0, #2046	; 0x7fe
 800bd32:	ea4f 2eae 	mov.w	lr, lr, asr #10
 800bd36:	459e      	cmp	lr, r3
 800bd38:	bfa8      	it	ge
 800bd3a:	469e      	movge	lr, r3
 800bd3c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bd3e:	2b00      	cmp	r3, #0
 800bd40:	f340 80d9 	ble.w	800bef6 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x482>
 800bd44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800bd46:	2b04      	cmp	r3, #4
 800bd48:	d12e      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bd4a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800bd4c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800bd4e:	991e      	ldr	r1, [sp, #120]	; 0x78
 800bd50:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800bd52:	4473      	add	r3, lr
 800bd54:	fb02 1303 	mla	r3, r2, r3, r1
 800bd58:	f103 3cff 	add.w	ip, r3, #4294967295
 800bd5c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800bd5e:	f8cd c014 	str.w	ip, [sp, #20]
 800bd62:	4453      	add	r3, sl
 800bd64:	fb02 1303 	mla	r3, r2, r3, r1
 800bd68:	3b01      	subs	r3, #1
 800bd6a:	9302      	str	r3, [sp, #8]
 800bd6c:	eb04 030a 	add.w	r3, r4, sl
 800bd70:	fb02 1303 	mla	r3, r2, r3, r1
 800bd74:	3b01      	subs	r3, #1
 800bd76:	eb04 090e 	add.w	r9, r4, lr
 800bd7a:	ebc0 268a 	rsb	r6, r0, sl, lsl #10
 800bd7e:	fb02 f909 	mul.w	r9, r2, r9
 800bd82:	9303      	str	r3, [sp, #12]
 800bd84:	188b      	adds	r3, r1, r2
 800bd86:	444b      	add	r3, r9
 800bd88:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 800bd8c:	eba0 208a 	sub.w	r0, r0, sl, lsl #10
 800bd90:	9311      	str	r3, [sp, #68]	; 0x44
 800bd92:	17f3      	asrs	r3, r6, #31
 800bd94:	9306      	str	r3, [sp, #24]
 800bd96:	17c3      	asrs	r3, r0, #31
 800bd98:	9307      	str	r3, [sp, #28]
 800bd9a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800bd9c:	3b01      	subs	r3, #1
 800bd9e:	4489      	add	r9, r1
 800bda0:	9304      	str	r3, [sp, #16]
 800bda2:	9b01      	ldr	r3, [sp, #4]
 800bda4:	b915      	cbnz	r5, 800bdac <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x338>
 800bda6:	b11b      	cbz	r3, 800bdb0 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x33c>
 800bda8:	f010 fe02 	bl	801c9b0 <abort>
 800bdac:	429d      	cmp	r5, r3
 800bdae:	ddfb      	ble.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bdb0:	2f00      	cmp	r7, #0
 800bdb2:	f040 80e3 	bne.w	800bf7c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x508>
 800bdb6:	f1ba 0f00 	cmp.w	sl, #0
 800bdba:	d1f5      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bdbc:	9a03      	ldr	r2, [sp, #12]
 800bdbe:	9906      	ldr	r1, [sp, #24]
 800bdc0:	f912 3f01 	ldrsb.w	r3, [r2, #1]!
 800bdc4:	9203      	str	r2, [sp, #12]
 800bdc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bdc8:	fb83 3202 	smull	r3, r2, r3, r2
 800bdcc:	fb03 f101 	mul.w	r1, r3, r1
 800bdd0:	fb06 1202 	mla	r2, r6, r2, r1
 800bdd4:	fba3 1306 	umull	r1, r3, r3, r6
 800bdd8:	910a      	str	r1, [sp, #40]	; 0x28
 800bdda:	4413      	add	r3, r2
 800bddc:	2d00      	cmp	r5, #0
 800bdde:	f040 80d1 	bne.w	800bf84 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x510>
 800bde2:	f1b8 0f00 	cmp.w	r8, #0
 800bde6:	d1df      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bde8:	2f00      	cmp	r7, #0
 800bdea:	f040 80bd 	bne.w	800bf68 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4f4>
 800bdee:	f1ba 0f00 	cmp.w	sl, #0
 800bdf2:	d1d9      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bdf4:	9902      	ldr	r1, [sp, #8]
 800bdf6:	f911 2f01 	ldrsb.w	r2, [r1, #1]!
 800bdfa:	9102      	str	r1, [sp, #8]
 800bdfc:	9908      	ldr	r1, [sp, #32]
 800bdfe:	fb82 2401 	smull	r2, r4, r2, r1
 800be02:	9906      	ldr	r1, [sp, #24]
 800be04:	fb02 f101 	mul.w	r1, r2, r1
 800be08:	fb06 1404 	mla	r4, r6, r4, r1
 800be0c:	fba2 2106 	umull	r2, r1, r2, r6
 800be10:	920b      	str	r2, [sp, #44]	; 0x2c
 800be12:	4421      	add	r1, r4
 800be14:	9a01      	ldr	r2, [sp, #4]
 800be16:	2d00      	cmp	r5, #0
 800be18:	f040 8098 	bne.w	800bf4c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4d8>
 800be1c:	2a00      	cmp	r2, #0
 800be1e:	d1c3      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800be20:	2f00      	cmp	r7, #0
 800be22:	f040 8099 	bne.w	800bf58 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4e4>
 800be26:	f1be 0f00 	cmp.w	lr, #0
 800be2a:	d1bd      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800be2c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800be2e:	f919 4b01 	ldrsb.w	r4, [r9], #1
 800be32:	fb84 4c02 	smull	r4, ip, r4, r2
 800be36:	9a07      	ldr	r2, [sp, #28]
 800be38:	fb04 fb02 	mul.w	fp, r4, r2
 800be3c:	fb00 bc0c 	mla	ip, r0, ip, fp
 800be40:	fba4 2b00 	umull	r2, fp, r4, r0
 800be44:	920c      	str	r2, [sp, #48]	; 0x30
 800be46:	44e3      	add	fp, ip
 800be48:	2d00      	cmp	r5, #0
 800be4a:	f040 80ab 	bne.w	800bfa4 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x530>
 800be4e:	f1b8 0f00 	cmp.w	r8, #0
 800be52:	d1a9      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800be54:	2f00      	cmp	r7, #0
 800be56:	f040 809d 	bne.w	800bf94 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x520>
 800be5a:	f1be 0f00 	cmp.w	lr, #0
 800be5e:	d1a3      	bne.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800be60:	e9dd 240a 	ldrd	r2, r4, [sp, #40]	; 0x28
 800be64:	1912      	adds	r2, r2, r4
 800be66:	eb43 0301 	adc.w	r3, r3, r1
 800be6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800be6c:	1854      	adds	r4, r2, r1
 800be6e:	eb4b 0b03 	adc.w	fp, fp, r3
 800be72:	9b05      	ldr	r3, [sp, #20]
 800be74:	9a07      	ldr	r2, [sp, #28]
 800be76:	f913 cf01 	ldrsb.w	ip, [r3, #1]!
 800be7a:	9305      	str	r3, [sp, #20]
 800be7c:	9b08      	ldr	r3, [sp, #32]
 800be7e:	fb8c c303 	smull	ip, r3, ip, r3
 800be82:	fb0c f202 	mul.w	r2, ip, r2
 800be86:	fb00 2303 	mla	r3, r0, r3, r2
 800be8a:	fbac c200 	umull	ip, r2, ip, r0
 800be8e:	eb1c 0404 	adds.w	r4, ip, r4
 800be92:	4413      	add	r3, r2
 800be94:	eb43 030b 	adc.w	r3, r3, fp
 800be98:	2c01      	cmp	r4, #1
 800be9a:	f173 0200 	sbcs.w	r2, r3, #0
 800be9e:	bfb5      	itete	lt
 800bea0:	4934      	ldrlt	r1, [pc, #208]	; (800bf74 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x500>)
 800bea2:	f44f 2100 	movge.w	r1, #524288	; 0x80000
 800bea6:	f04f 3bff 	movlt.w	fp, #4294967295
 800beaa:	f04f 0b00 	movge.w	fp, #0
 800beae:	190c      	adds	r4, r1, r4
 800beb0:	eb4b 0b03 	adc.w	fp, fp, r3
 800beb4:	f1bb 0f00 	cmp.w	fp, #0
 800beb8:	da01      	bge.n	800bebe <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x44a>
 800beba:	4b2f      	ldr	r3, [pc, #188]	; (800bf78 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x504>)
 800bebc:	18e4      	adds	r4, r4, r3
 800bebe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bec0:	2b04      	cmp	r3, #4
 800bec2:	f344 5407 	sbfx	r4, r4, #20, #8
 800bec6:	f47f af6f 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800beca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800becc:	2b00      	cmp	r3, #0
 800bece:	d138      	bne.n	800bf42 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4ce>
 800bed0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	f47f af68 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bed8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800beda:	2b00      	cmp	r3, #0
 800bedc:	d12c      	bne.n	800bf38 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4c4>
 800bede:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bee0:	2b00      	cmp	r3, #0
 800bee2:	f47f af61 	bne.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bee6:	9b04      	ldr	r3, [sp, #16]
 800bee8:	f803 4f01 	strb.w	r4, [r3, #1]!
 800beec:	9304      	str	r3, [sp, #16]
 800beee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bef0:	4599      	cmp	r9, r3
 800bef2:	f47f af56 	bne.w	800bda2 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x32e>
 800bef6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bef8:	991a      	ldr	r1, [sp, #104]	; 0x68
 800befa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800befc:	440a      	add	r2, r1
 800befe:	9214      	str	r2, [sp, #80]	; 0x50
 800bf00:	9919      	ldr	r1, [sp, #100]	; 0x64
 800bf02:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800bf04:	440a      	add	r2, r1
 800bf06:	9213      	str	r2, [sp, #76]	; 0x4c
 800bf08:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800bf0a:	3301      	adds	r3, #1
 800bf0c:	429a      	cmp	r2, r3
 800bf0e:	930f      	str	r3, [sp, #60]	; 0x3c
 800bf10:	d050      	beq.n	800bfb4 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x540>
 800bf12:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800bf14:	785b      	ldrb	r3, [r3, #1]
 800bf16:	2b00      	cmp	r3, #0
 800bf18:	f47f aef8 	bne.w	800bd0c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x298>
 800bf1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800bf1e:	f5c3 7000 	rsb	r0, r3, #512	; 0x200
 800bf22:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800bf24:	4418      	add	r0, r3
 800bf26:	4b12      	ldr	r3, [pc, #72]	; (800bf70 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x4fc>)
 800bf28:	4298      	cmp	r0, r3
 800bf2a:	f6bf aef4 	bge.w	800bd16 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x2a2>
 800bf2e:	f04f 0a00 	mov.w	sl, #0
 800bf32:	f200 3eff 	addw	lr, r0, #1023	; 0x3ff
 800bf36:	e6f6      	b.n	800bd26 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x2b2>
 800bf38:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bf3c:	4293      	cmp	r3, r2
 800bf3e:	dcd2      	bgt.n	800bee6 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x472>
 800bf40:	e732      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf44:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bf46:	4293      	cmp	r3, r2
 800bf48:	dcc6      	bgt.n	800bed8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x464>
 800bf4a:	e72d      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf4c:	4295      	cmp	r5, r2
 800bf4e:	f77f af2b 	ble.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf52:	2f00      	cmp	r7, #0
 800bf54:	f43f af67 	beq.w	800be26 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3b2>
 800bf58:	f1be 0f00 	cmp.w	lr, #0
 800bf5c:	f6ff af24 	blt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf60:	45be      	cmp	lr, r7
 800bf62:	f6ff af63 	blt.w	800be2c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3b8>
 800bf66:	e71f      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf68:	4557      	cmp	r7, sl
 800bf6a:	f73f af43 	bgt.w	800bdf4 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x380>
 800bf6e:	e71b      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf70:	fffffc01 	.word	0xfffffc01
 800bf74:	fff80000 	.word	0xfff80000
 800bf78:	000fffff 	.word	0x000fffff
 800bf7c:	4557      	cmp	r7, sl
 800bf7e:	f73f af1d 	bgt.w	800bdbc <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x348>
 800bf82:	e711      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf84:	f1b8 0f00 	cmp.w	r8, #0
 800bf88:	f6ff af0e 	blt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf8c:	4545      	cmp	r5, r8
 800bf8e:	f73f af2b 	bgt.w	800bde8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x374>
 800bf92:	e709      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf94:	f1be 0f00 	cmp.w	lr, #0
 800bf98:	f6ff af06 	blt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bf9c:	45be      	cmp	lr, r7
 800bf9e:	f6ff af5f 	blt.w	800be60 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3ec>
 800bfa2:	e701      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bfa4:	f1b8 0f00 	cmp.w	r8, #0
 800bfa8:	f6ff aefe 	blt.w	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bfac:	4545      	cmp	r5, r8
 800bfae:	f73f af51 	bgt.w	800be54 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x3e0>
 800bfb2:	e6f9      	b.n	800bda8 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x334>
 800bfb4:	46a9      	mov	r9, r5
 800bfb6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800bfb8:	9926      	ldr	r1, [sp, #152]	; 0x98
 800bfba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bfbc:	440a      	add	r2, r1
 800bfbe:	9220      	str	r2, [sp, #128]	; 0x80
 800bfc0:	e9dd 2121 	ldrd	r2, r1, [sp, #132]	; 0x84
 800bfc4:	440a      	add	r2, r1
 800bfc6:	9221      	str	r2, [sp, #132]	; 0x84
 800bfc8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800bfca:	3301      	adds	r3, #1
 800bfcc:	4293      	cmp	r3, r2
 800bfce:	9310      	str	r3, [sp, #64]	; 0x40
 800bfd0:	f47f ae5a 	bne.w	800bc88 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x214>
 800bfd4:	46ce      	mov	lr, r9
 800bfd6:	46b8      	mov	r8, r7
 800bfd8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800bfda:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bfdc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800bfde:	4472      	add	r2, lr
 800bfe0:	9224      	str	r2, [sp, #144]	; 0x90
 800bfe2:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 800bfe4:	440a      	add	r2, r1
 800bfe6:	9228      	str	r2, [sp, #160]	; 0xa0
 800bfe8:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 800bfea:	3301      	adds	r3, #1
 800bfec:	4293      	cmp	r3, r2
 800bfee:	9329      	str	r3, [sp, #164]	; 0xa4
 800bff0:	f47f ae39 	bne.w	800bc66 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x1f2>
 800bff4:	4b0c      	ldr	r3, [pc, #48]	; (800c028 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x5b4>)
 800bff6:	681a      	ldr	r2, [r3, #0]
 800bff8:	9b41      	ldr	r3, [sp, #260]	; 0x104
 800bffa:	405a      	eors	r2, r3
 800bffc:	f04f 0300 	mov.w	r3, #0
 800c000:	d110      	bne.n	800c024 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x5b0>
 800c002:	b043      	add	sp, #268	; 0x10c
 800c004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c008:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800c00a:	f5c2 7100 	rsb	r1, r2, #512	; 0x200
 800c00e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c010:	4411      	add	r1, r2
 800c012:	4a06      	ldr	r2, [pc, #24]	; (800c02c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x5b8>)
 800c014:	4291      	cmp	r1, r2
 800c016:	f6bf ae41 	bge.w	800bc9c <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x228>
 800c01a:	2200      	movs	r2, #0
 800c01c:	9201      	str	r2, [sp, #4]
 800c01e:	f201 32ff 	addw	r2, r1, #1023	; 0x3ff
 800c022:	e643      	b.n	800bcac <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_+0x238>
 800c024:	f011 fc8a 	bl	801d93c <__stack_chk_fail>
 800c028:	20011294 	.word	0x20011294
 800c02c:	fffffc01 	.word	0xfffffc01

0800c030 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode>:
 800c030:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c032:	4b3c      	ldr	r3, [pc, #240]	; (800c124 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xf4>)
 800c034:	694f      	ldr	r7, [r1, #20]
 800c036:	b0ab      	sub	sp, #172	; 0xac
 800c038:	2200      	movs	r2, #0
 800c03a:	460c      	mov	r4, r1
 800c03c:	4605      	mov	r5, r0
 800c03e:	681b      	ldr	r3, [r3, #0]
 800c040:	9329      	str	r3, [sp, #164]	; 0xa4
 800c042:	f04f 0300 	mov.w	r3, #0
 800c046:	f7fd ffe1 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 800c04a:	4621      	mov	r1, r4
 800c04c:	2201      	movs	r2, #1
 800c04e:	4606      	mov	r6, r0
 800c050:	4628      	mov	r0, r5
 800c052:	f7fd ffdb 	bl	800a00c <_ZN6tflite5micro12GetEvalInputEPK13TfLiteContextPK10TfLiteNodei>
 800c056:	4621      	mov	r1, r4
 800c058:	4603      	mov	r3, r0
 800c05a:	2200      	movs	r2, #0
 800c05c:	4628      	mov	r0, r5
 800c05e:	461d      	mov	r5, r3
 800c060:	f7fe f80a 	bl	800a078 <_ZN6tflite5micro13GetEvalOutputEPK13TfLiteContextPK10TfLiteNodei>
 800c064:	7a01      	ldrb	r1, [r0, #8]
 800c066:	2901      	cmp	r1, #1
 800c068:	4604      	mov	r4, r0
 800c06a:	d033      	beq.n	800c0d4 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xa4>
 800c06c:	2909      	cmp	r1, #9
 800c06e:	d124      	bne.n	800c0ba <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0x8a>
 800c070:	783a      	ldrb	r2, [r7, #0]
 800c072:	787b      	ldrb	r3, [r7, #1]
 800c074:	f88d 2014 	strb.w	r2, [sp, #20]
 800c078:	4631      	mov	r1, r6
 800c07a:	a814      	add	r0, sp, #80	; 0x50
 800c07c:	f88d 3015 	strb.w	r3, [sp, #21]
 800c080:	f7fe f820 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800c084:	2e00      	cmp	r6, #0
 800c086:	d04a      	beq.n	800c11e <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xee>
 800c088:	4629      	mov	r1, r5
 800c08a:	a81b      	add	r0, sp, #108	; 0x6c
 800c08c:	6836      	ldr	r6, [r6, #0]
 800c08e:	f7fe f819 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800c092:	2d00      	cmp	r5, #0
 800c094:	d043      	beq.n	800c11e <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xee>
 800c096:	682f      	ldr	r7, [r5, #0]
 800c098:	ad22      	add	r5, sp, #136	; 0x88
 800c09a:	4621      	mov	r1, r4
 800c09c:	4628      	mov	r0, r5
 800c09e:	f7fe f811 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800c0a2:	6823      	ldr	r3, [r4, #0]
 800c0a4:	9700      	str	r7, [sp, #0]
 800c0a6:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800c0aa:	a805      	add	r0, sp, #20
 800c0ac:	ab1b      	add	r3, sp, #108	; 0x6c
 800c0ae:	4632      	mov	r2, r6
 800c0b0:	a914      	add	r1, sp, #80	; 0x50
 800c0b2:	f7ff fcdf 	bl	800ba74 <_ZN6tflite13reference_ops21ResizeBilinearIntegerIaEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_>
 800c0b6:	2000      	movs	r0, #0
 800c0b8:	e003      	b.n	800c0c2 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0x92>
 800c0ba:	481b      	ldr	r0, [pc, #108]	; (800c128 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xf8>)
 800c0bc:	f002 f8a8 	bl	800e210 <_Z11MicroPrintfPKcz>
 800c0c0:	2001      	movs	r0, #1
 800c0c2:	4b18      	ldr	r3, [pc, #96]	; (800c124 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xf4>)
 800c0c4:	681a      	ldr	r2, [r3, #0]
 800c0c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c0c8:	405a      	eors	r2, r3
 800c0ca:	f04f 0300 	mov.w	r3, #0
 800c0ce:	d124      	bne.n	800c11a <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xea>
 800c0d0:	b02b      	add	sp, #172	; 0xac
 800c0d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c0d4:	783a      	ldrb	r2, [r7, #0]
 800c0d6:	787b      	ldrb	r3, [r7, #1]
 800c0d8:	f88d 2010 	strb.w	r2, [sp, #16]
 800c0dc:	4631      	mov	r1, r6
 800c0de:	a806      	add	r0, sp, #24
 800c0e0:	f88d 3011 	strb.w	r3, [sp, #17]
 800c0e4:	f7fd ffee 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800c0e8:	b1ce      	cbz	r6, 800c11e <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xee>
 800c0ea:	4629      	mov	r1, r5
 800c0ec:	a80d      	add	r0, sp, #52	; 0x34
 800c0ee:	6836      	ldr	r6, [r6, #0]
 800c0f0:	f7fd ffe8 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800c0f4:	b19d      	cbz	r5, 800c11e <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0xee>
 800c0f6:	682f      	ldr	r7, [r5, #0]
 800c0f8:	ad22      	add	r5, sp, #136	; 0x88
 800c0fa:	4621      	mov	r1, r4
 800c0fc:	4628      	mov	r0, r5
 800c0fe:	f7fd ffe1 	bl	800a0c4 <_ZN6tflite5micro14GetTensorShapeEPK16TfLiteEvalTensor>
 800c102:	6823      	ldr	r3, [r4, #0]
 800c104:	9700      	str	r7, [sp, #0]
 800c106:	e9cd 5301 	strd	r5, r3, [sp, #4]
 800c10a:	a804      	add	r0, sp, #16
 800c10c:	ab0d      	add	r3, sp, #52	; 0x34
 800c10e:	4632      	mov	r2, r6
 800c110:	a906      	add	r1, sp, #24
 800c112:	f7ff fa2f 	bl	800b574 <_ZN6tflite13reference_ops14ResizeBilinearIfEEvRKNS_20ResizeBilinearParamsERKNS_12RuntimeShapeEPKT_S7_PKlS7_PS8_>
 800c116:	2000      	movs	r0, #0
 800c118:	e7d3      	b.n	800c0c2 <_ZN6tflite12_GLOBAL__N_118ResizeBilinearEvalEP13TfLiteContextP10TfLiteNode+0x92>
 800c11a:	f011 fc0f 	bl	801d93c <__stack_chk_fail>
 800c11e:	f010 fc47 	bl	801c9b0 <abort>
 800c122:	bf00      	nop
 800c124:	20011294 	.word	0x20011294
 800c128:	08025c0c 	.word	0x08025c0c
 800c12c:	00000000 	.word	0x00000000

0800c130 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0>:
 800c130:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c134:	ed2d 8b02 	vpush	{d8}
 800c138:	4cb5      	ldr	r4, [pc, #724]	; (800c410 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2e0>)
 800c13a:	b088      	sub	sp, #32
 800c13c:	6824      	ldr	r4, [r4, #0]
 800c13e:	9407      	str	r4, [sp, #28]
 800c140:	f04f 0400 	mov.w	r4, #0
 800c144:	780c      	ldrb	r4, [r1, #0]
 800c146:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800c148:	2c09      	cmp	r4, #9
 800c14a:	4605      	mov	r5, r0
 800c14c:	4698      	mov	r8, r3
 800c14e:	d01b      	beq.n	800c188 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x58>
 800c150:	2c07      	cmp	r4, #7
 800c152:	d036      	beq.n	800c1c2 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x92>
 800c154:	2c01      	cmp	r4, #1
 800c156:	f040 80b3 	bne.w	800c2c0 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x190>
 800c15a:	7810      	ldrb	r0, [r2, #0]
 800c15c:	2801      	cmp	r0, #1
 800c15e:	d16d      	bne.n	800c23c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x10c>
 800c160:	6818      	ldr	r0, [r3, #0]
 800c162:	f7f4 f9fb 	bl	800055c <__aeabi_f2d>
 800c166:	e9c6 0100 	strd	r0, r1, [r6]
 800c16a:	2400      	movs	r4, #0
 800c16c:	4ba8      	ldr	r3, [pc, #672]	; (800c410 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2e0>)
 800c16e:	681a      	ldr	r2, [r3, #0]
 800c170:	9b07      	ldr	r3, [sp, #28]
 800c172:	405a      	eors	r2, r3
 800c174:	f04f 0300 	mov.w	r3, #0
 800c178:	f040 8144 	bne.w	800c404 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2d4>
 800c17c:	4620      	mov	r0, r4
 800c17e:	b008      	add	sp, #32
 800c180:	ecbd 8b02 	vpop	{d8}
 800c184:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c188:	f892 c000 	ldrb.w	ip, [r2]
 800c18c:	f1bc 0f07 	cmp.w	ip, #7
 800c190:	d067      	beq.n	800c262 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x132>
 800c192:	f1bc 0f09 	cmp.w	ip, #9
 800c196:	f040 80e5 	bne.w	800c364 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x234>
 800c19a:	6914      	ldr	r4, [r2, #16]
 800c19c:	f114 0f80 	cmn.w	r4, #128	; 0x80
 800c1a0:	f000 80b1 	beq.w	800c306 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x1d6>
 800c1a4:	499b      	ldr	r1, [pc, #620]	; (800c414 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2e4>)
 800c1a6:	4b9c      	ldr	r3, [pc, #624]	; (800c418 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2e8>)
 800c1a8:	f06f 027f 	mvn.w	r2, #127	; 0x7f
 800c1ac:	9203      	str	r2, [sp, #12]
 800c1ae:	6945      	ldr	r5, [r0, #20]
 800c1b0:	4a9a      	ldr	r2, [pc, #616]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c1b2:	9402      	str	r4, [sp, #8]
 800c1b4:	e9cd 3100 	strd	r3, r1, [sp]
 800c1b8:	4999      	ldr	r1, [pc, #612]	; (800c420 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2f0>)
 800c1ba:	2367      	movs	r3, #103	; 0x67
 800c1bc:	47a8      	blx	r5
 800c1be:	2401      	movs	r4, #1
 800c1c0:	e7d4      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c1c2:	690c      	ldr	r4, [r1, #16]
 800c1c4:	2c00      	cmp	r4, #0
 800c1c6:	f040 8090 	bne.w	800c2ea <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x1ba>
 800c1ca:	6917      	ldr	r7, [r2, #16]
 800c1cc:	2f00      	cmp	r7, #0
 800c1ce:	f040 80f5 	bne.w	800c3bc <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x28c>
 800c1d2:	eddf 7a94 	vldr	s15, [pc, #592]	; 800c424 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2f4>
 800c1d6:	ed92 7a03 	vldr	s14, [r2, #12]
 800c1da:	eddf 6a93 	vldr	s13, [pc, #588]	; 800c428 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2f8>
 800c1de:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c1e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c1e6:	bfcc      	ite	gt
 800c1e8:	ee77 7a67 	vsubgt.f32	s15, s14, s15
 800c1ec:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800c1f0:	eef4 7ae6 	vcmpe.f32	s15, s13
 800c1f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c1f8:	f300 80ed 	bgt.w	800c3d6 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2a6>
 800c1fc:	68c8      	ldr	r0, [r1, #12]
 800c1fe:	f7f4 f9ad 	bl	800055c <__aeabi_f2d>
 800c202:	4604      	mov	r4, r0
 800c204:	f8d8 0000 	ldr.w	r0, [r8]
 800c208:	460d      	mov	r5, r1
 800c20a:	f7f4 f9a7 	bl	800055c <__aeabi_f2d>
 800c20e:	4602      	mov	r2, r0
 800c210:	460b      	mov	r3, r1
 800c212:	4620      	mov	r0, r4
 800c214:	4629      	mov	r1, r5
 800c216:	f7f4 f9f9 	bl	800060c <__aeabi_dmul>
 800c21a:	a37b      	add	r3, pc, #492	; (adr r3, 800c408 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2d8>)
 800c21c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c220:	f7f4 fb1e 	bl	8000860 <__aeabi_ddiv>
 800c224:	f106 0708 	add.w	r7, r6, #8
 800c228:	ec41 0b10 	vmov	d0, r0, r1
 800c22c:	a906      	add	r1, sp, #24
 800c22e:	4638      	mov	r0, r7
 800c230:	f002 fac8 	bl	800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>
 800c234:	9b06      	ldr	r3, [sp, #24]
 800c236:	60f3      	str	r3, [r6, #12]
 800c238:	2400      	movs	r4, #0
 800c23a:	e797      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c23c:	696f      	ldr	r7, [r5, #20]
 800c23e:	f002 f9e9 	bl	800e614 <TfLiteTypeGetName>
 800c242:	4606      	mov	r6, r0
 800c244:	4620      	mov	r0, r4
 800c246:	f002 f9e5 	bl	800e614 <TfLiteTypeGetName>
 800c24a:	4b78      	ldr	r3, [pc, #480]	; (800c42c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2fc>)
 800c24c:	9003      	str	r0, [sp, #12]
 800c24e:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800c252:	4b77      	ldr	r3, [pc, #476]	; (800c430 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x300>)
 800c254:	9300      	str	r3, [sp, #0]
 800c256:	4a71      	ldr	r2, [pc, #452]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c258:	4976      	ldr	r1, [pc, #472]	; (800c434 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x304>)
 800c25a:	2386      	movs	r3, #134	; 0x86
 800c25c:	4628      	mov	r0, r5
 800c25e:	47b8      	blx	r7
 800c260:	e784      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c262:	6914      	ldr	r4, [r2, #16]
 800c264:	4f74      	ldr	r7, [pc, #464]	; (800c438 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x308>)
 800c266:	42bc      	cmp	r4, r7
 800c268:	f040 8092 	bne.w	800c390 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x260>
 800c26c:	eddf 7a73 	vldr	s15, [pc, #460]	; 800c43c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x30c>
 800c270:	ed92 7a03 	vldr	s14, [r2, #12]
 800c274:	eddf 6a72 	vldr	s13, [pc, #456]	; 800c440 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x310>
 800c278:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c27c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c280:	bfcc      	ite	gt
 800c282:	ee77 7a67 	vsubgt.f32	s15, s14, s15
 800c286:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 800c28a:	eef4 7ae6 	vcmpe.f32	s15, s13
 800c28e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c292:	dd41      	ble.n	800c318 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x1e8>
 800c294:	4b6b      	ldr	r3, [pc, #428]	; (800c444 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x314>)
 800c296:	2200      	movs	r2, #0
 800c298:	ee17 0a10 	vmov	r0, s14
 800c29c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c2a0:	f7f4 f95c 	bl	800055c <__aeabi_f2d>
 800c2a4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c2a8:	4a67      	ldr	r2, [pc, #412]	; (800c448 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x318>)
 800c2aa:	9201      	str	r2, [sp, #4]
 800c2ac:	4b67      	ldr	r3, [pc, #412]	; (800c44c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x31c>)
 800c2ae:	696c      	ldr	r4, [r5, #20]
 800c2b0:	4a5a      	ldr	r2, [pc, #360]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c2b2:	9300      	str	r3, [sp, #0]
 800c2b4:	4966      	ldr	r1, [pc, #408]	; (800c450 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x320>)
 800c2b6:	2363      	movs	r3, #99	; 0x63
 800c2b8:	4628      	mov	r0, r5
 800c2ba:	47a0      	blx	r4
 800c2bc:	2401      	movs	r4, #1
 800c2be:	e755      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c2c0:	4620      	mov	r0, r4
 800c2c2:	696e      	ldr	r6, [r5, #20]
 800c2c4:	f002 f9a6 	bl	800e614 <TfLiteTypeGetName>
 800c2c8:	4604      	mov	r4, r0
 800c2ca:	2001      	movs	r0, #1
 800c2cc:	f002 f9a2 	bl	800e614 <TfLiteTypeGetName>
 800c2d0:	4956      	ldr	r1, [pc, #344]	; (800c42c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2fc>)
 800c2d2:	4b60      	ldr	r3, [pc, #384]	; (800c454 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x324>)
 800c2d4:	4a51      	ldr	r2, [pc, #324]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c2d6:	e9cd 4002 	strd	r4, r0, [sp, #8]
 800c2da:	e9cd 3100 	strd	r3, r1, [sp]
 800c2de:	4628      	mov	r0, r5
 800c2e0:	4954      	ldr	r1, [pc, #336]	; (800c434 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x304>)
 800c2e2:	2385      	movs	r3, #133	; 0x85
 800c2e4:	47b0      	blx	r6
 800c2e6:	2401      	movs	r4, #1
 800c2e8:	e740      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c2ea:	495b      	ldr	r1, [pc, #364]	; (800c458 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x328>)
 800c2ec:	4b5b      	ldr	r3, [pc, #364]	; (800c45c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x32c>)
 800c2ee:	2200      	movs	r2, #0
 800c2f0:	9203      	str	r2, [sp, #12]
 800c2f2:	6945      	ldr	r5, [r0, #20]
 800c2f4:	4a49      	ldr	r2, [pc, #292]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c2f6:	9402      	str	r4, [sp, #8]
 800c2f8:	e9cd 3100 	strd	r3, r1, [sp]
 800c2fc:	4948      	ldr	r1, [pc, #288]	; (800c420 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2f0>)
 800c2fe:	235b      	movs	r3, #91	; 0x5b
 800c300:	47a8      	blx	r5
 800c302:	2401      	movs	r4, #1
 800c304:	e732      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c306:	ed92 7a03 	vldr	s14, [r2, #12]
 800c30a:	eddf 7a55 	vldr	s15, [pc, #340]	; 800c460 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x330>
 800c30e:	eeb4 7a67 	vcmp.f32	s14, s15
 800c312:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c316:	d148      	bne.n	800c3aa <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x27a>
 800c318:	68c8      	ldr	r0, [r1, #12]
 800c31a:	f7f4 f91f 	bl	800055c <__aeabi_f2d>
 800c31e:	ec41 0b18 	vmov	d8, r0, r1
 800c322:	f8d8 0000 	ldr.w	r0, [r8]
 800c326:	f7f4 f919 	bl	800055c <__aeabi_f2d>
 800c32a:	eeb0 1a48 	vmov.f32	s2, s16
 800c32e:	eef0 1a68 	vmov.f32	s3, s17
 800c332:	f106 0408 	add.w	r4, r6, #8
 800c336:	ec41 0b10 	vmov	d0, r0, r1
 800c33a:	aa06      	add	r2, sp, #24
 800c33c:	4621      	mov	r1, r4
 800c33e:	2005      	movs	r0, #5
 800c340:	f002 fa76 	bl	800e830 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi>
 800c344:	9906      	ldr	r1, [sp, #24]
 800c346:	60f1      	str	r1, [r6, #12]
 800c348:	221f      	movs	r2, #31
 800c34a:	2005      	movs	r0, #5
 800c34c:	f002 fad0 	bl	800e8f0 <_ZN6tflite20CalculateInputRadiusEiii>
 800c350:	f7f4 f8f2 	bl	8000538 <__aeabi_i2d>
 800c354:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800c358:	4619      	mov	r1, r3
 800c35a:	f7f4 fc07 	bl	8000b6c <__aeabi_d2iz>
 800c35e:	2400      	movs	r4, #0
 800c360:	61b0      	str	r0, [r6, #24]
 800c362:	e703      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c364:	4660      	mov	r0, ip
 800c366:	696e      	ldr	r6, [r5, #20]
 800c368:	f002 f954 	bl	800e614 <TfLiteTypeGetName>
 800c36c:	4603      	mov	r3, r0
 800c36e:	4620      	mov	r0, r4
 800c370:	461c      	mov	r4, r3
 800c372:	f002 f94f 	bl	800e614 <TfLiteTypeGetName>
 800c376:	493b      	ldr	r1, [pc, #236]	; (800c464 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x334>)
 800c378:	4b2d      	ldr	r3, [pc, #180]	; (800c430 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x300>)
 800c37a:	4a28      	ldr	r2, [pc, #160]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c37c:	e9cd 4002 	strd	r4, r0, [sp, #8]
 800c380:	e9cd 3100 	strd	r3, r1, [sp]
 800c384:	4628      	mov	r0, r5
 800c386:	492b      	ldr	r1, [pc, #172]	; (800c434 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x304>)
 800c388:	2366      	movs	r3, #102	; 0x66
 800c38a:	47b0      	blx	r6
 800c38c:	2401      	movs	r4, #1
 800c38e:	e6ed      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c390:	4935      	ldr	r1, [pc, #212]	; (800c468 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x338>)
 800c392:	4b21      	ldr	r3, [pc, #132]	; (800c418 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2e8>)
 800c394:	6945      	ldr	r5, [r0, #20]
 800c396:	4a21      	ldr	r2, [pc, #132]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c398:	e9cd 3100 	strd	r3, r1, [sp]
 800c39c:	e9cd 4702 	strd	r4, r7, [sp, #8]
 800c3a0:	491f      	ldr	r1, [pc, #124]	; (800c420 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2f0>)
 800c3a2:	2362      	movs	r3, #98	; 0x62
 800c3a4:	47a8      	blx	r5
 800c3a6:	2401      	movs	r4, #1
 800c3a8:	e6e0      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c3aa:	4b30      	ldr	r3, [pc, #192]	; (800c46c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x33c>)
 800c3ac:	6944      	ldr	r4, [r0, #20]
 800c3ae:	4a1b      	ldr	r2, [pc, #108]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c3b0:	9300      	str	r3, [sp, #0]
 800c3b2:	492f      	ldr	r1, [pc, #188]	; (800c470 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x340>)
 800c3b4:	2368      	movs	r3, #104	; 0x68
 800c3b6:	47a0      	blx	r4
 800c3b8:	2401      	movs	r4, #1
 800c3ba:	e6d7      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c3bc:	4926      	ldr	r1, [pc, #152]	; (800c458 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x328>)
 800c3be:	4b16      	ldr	r3, [pc, #88]	; (800c418 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2e8>)
 800c3c0:	6945      	ldr	r5, [r0, #20]
 800c3c2:	4a16      	ldr	r2, [pc, #88]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c3c4:	e9cd 3100 	strd	r3, r1, [sp]
 800c3c8:	e9cd 7402 	strd	r7, r4, [sp, #8]
 800c3cc:	4914      	ldr	r1, [pc, #80]	; (800c420 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2f0>)
 800c3ce:	235c      	movs	r3, #92	; 0x5c
 800c3d0:	47a8      	blx	r5
 800c3d2:	2401      	movs	r4, #1
 800c3d4:	e6ca      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c3d6:	2200      	movs	r2, #0
 800c3d8:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 800c3dc:	ee17 0a10 	vmov	r0, s14
 800c3e0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800c3e4:	f7f4 f8ba 	bl	800055c <__aeabi_f2d>
 800c3e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c3ec:	4a21      	ldr	r2, [pc, #132]	; (800c474 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x344>)
 800c3ee:	9201      	str	r2, [sp, #4]
 800c3f0:	4b16      	ldr	r3, [pc, #88]	; (800c44c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x31c>)
 800c3f2:	696c      	ldr	r4, [r5, #20]
 800c3f4:	4a09      	ldr	r2, [pc, #36]	; (800c41c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x2ec>)
 800c3f6:	9300      	str	r3, [sp, #0]
 800c3f8:	4915      	ldr	r1, [pc, #84]	; (800c450 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x320>)
 800c3fa:	235d      	movs	r3, #93	; 0x5d
 800c3fc:	4628      	mov	r0, r5
 800c3fe:	47a0      	blx	r4
 800c400:	2401      	movs	r4, #1
 800c402:	e6b3      	b.n	800c16c <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0+0x3c>
 800c404:	f011 fa9a 	bl	801d93c <__stack_chk_fail>
 800c408:	00140014 	.word	0x00140014
 800c40c:	3f240014 	.word	0x3f240014
 800c410:	20011294 	.word	0x20011294
 800c414:	08025d1c 	.word	0x08025d1c
 800c418:	08024c94 	.word	0x08024c94
 800c41c:	08025c38 	.word	0x08025c38
 800c420:	08024a8c 	.word	0x08024a8c
 800c424:	38000000 	.word	0x38000000
 800c428:	3303126f 	.word	0x3303126f
 800c42c:	08025d48 	.word	0x08025d48
 800c430:	08024aa8 	.word	0x08024aa8
 800c434:	080251fc 	.word	0x080251fc
 800c438:	ffff8000 	.word	0xffff8000
 800c43c:	37800000 	.word	0x37800000
 800c440:	3283126f 	.word	0x3283126f
 800c444:	3ef00000 	.word	0x3ef00000
 800c448:	08025d04 	.word	0x08025d04
 800c44c:	08025ce4 	.word	0x08025ce4
 800c450:	08025cb8 	.word	0x08025cb8
 800c454:	08024ab8 	.word	0x08024ab8
 800c458:	08024bf8 	.word	0x08024bf8
 800c45c:	08024c78 	.word	0x08024c78
 800c460:	3b800000 	.word	0x3b800000
 800c464:	08025d10 	.word	0x08025d10
 800c468:	08025cfc 	.word	0x08025cfc
 800c46c:	08025d24 	.word	0x08025d24
 800c470:	080249b0 	.word	0x080249b0
 800c474:	08025cd8 	.word	0x08025cd8

0800c478 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE>:
 800c478:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c47c:	460c      	mov	r4, r1
 800c47e:	ed2d 8b0c 	vpush	{d8-d13}
 800c482:	461f      	mov	r7, r3
 800c484:	7823      	ldrb	r3, [r4, #0]
 800c486:	49ac      	ldr	r1, [pc, #688]	; (800c738 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2c0>)
 800c488:	b086      	sub	sp, #24
 800c48a:	2b07      	cmp	r3, #7
 800c48c:	6809      	ldr	r1, [r1, #0]
 800c48e:	9105      	str	r1, [sp, #20]
 800c490:	f04f 0100 	mov.w	r1, #0
 800c494:	4605      	mov	r5, r0
 800c496:	4616      	mov	r6, r2
 800c498:	d020      	beq.n	800c4dc <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x64>
 800c49a:	7832      	ldrb	r2, [r6, #0]
 800c49c:	2a07      	cmp	r2, #7
 800c49e:	d032      	beq.n	800c506 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x8e>
 800c4a0:	429a      	cmp	r2, r3
 800c4a2:	d10d      	bne.n	800c4c0 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x48>
 800c4a4:	2000      	movs	r0, #0
 800c4a6:	4ba4      	ldr	r3, [pc, #656]	; (800c738 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2c0>)
 800c4a8:	681a      	ldr	r2, [r3, #0]
 800c4aa:	9b05      	ldr	r3, [sp, #20]
 800c4ac:	405a      	eors	r2, r3
 800c4ae:	f04f 0300 	mov.w	r3, #0
 800c4b2:	f040 813f 	bne.w	800c734 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2bc>
 800c4b6:	b006      	add	sp, #24
 800c4b8:	ecbd 8b0c 	vpop	{d8-d13}
 800c4bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c4c0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800c4c4:	489d      	ldr	r0, [pc, #628]	; (800c73c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2c4>)
 800c4c6:	499e      	ldr	r1, [pc, #632]	; (800c740 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2c8>)
 800c4c8:	696c      	ldr	r4, [r5, #20]
 800c4ca:	4a9e      	ldr	r2, [pc, #632]	; (800c744 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2cc>)
 800c4cc:	e9cd 1000 	strd	r1, r0, [sp]
 800c4d0:	2334      	movs	r3, #52	; 0x34
 800c4d2:	4628      	mov	r0, r5
 800c4d4:	499c      	ldr	r1, [pc, #624]	; (800c748 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2d0>)
 800c4d6:	47a0      	blx	r4
 800c4d8:	2001      	movs	r0, #1
 800c4da:	e7e4      	b.n	800c4a6 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e>
 800c4dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800c4de:	f240 4102 	movw	r1, #1026	; 0x402
 800c4e2:	4798      	blx	r3
 800c4e4:	2800      	cmp	r0, #0
 800c4e6:	f000 8111 	beq.w	800c70c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x294>
 800c4ea:	62b8      	str	r0, [r7, #40]	; 0x28
 800c4ec:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800c4ee:	f240 4102 	movw	r1, #1026	; 0x402
 800c4f2:	4628      	mov	r0, r5
 800c4f4:	4798      	blx	r3
 800c4f6:	2800      	cmp	r0, #0
 800c4f8:	f000 8112 	beq.w	800c720 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2a8>
 800c4fc:	7832      	ldrb	r2, [r6, #0]
 800c4fe:	7823      	ldrb	r3, [r4, #0]
 800c500:	62f8      	str	r0, [r7, #44]	; 0x2c
 800c502:	2a07      	cmp	r2, #7
 800c504:	d1cc      	bne.n	800c4a0 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x28>
 800c506:	2b09      	cmp	r3, #9
 800c508:	d0cc      	beq.n	800c4a4 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2c>
 800c50a:	2b07      	cmp	r3, #7
 800c50c:	d009      	beq.n	800c522 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0xaa>
 800c50e:	4b8f      	ldr	r3, [pc, #572]	; (800c74c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2d4>)
 800c510:	696c      	ldr	r4, [r5, #20]
 800c512:	4a8c      	ldr	r2, [pc, #560]	; (800c744 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2cc>)
 800c514:	9300      	str	r3, [sp, #0]
 800c516:	4628      	mov	r0, r5
 800c518:	498d      	ldr	r1, [pc, #564]	; (800c750 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2d8>)
 800c51a:	2331      	movs	r3, #49	; 0x31
 800c51c:	47a0      	blx	r4
 800c51e:	2001      	movs	r0, #1
 800c520:	e7c1      	b.n	800c4a6 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e>
 800c522:	6934      	ldr	r4, [r6, #16]
 800c524:	b174      	cbz	r4, 800c544 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0xcc>
 800c526:	4a8b      	ldr	r2, [pc, #556]	; (800c754 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2dc>)
 800c528:	4b8b      	ldr	r3, [pc, #556]	; (800c758 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e0>)
 800c52a:	2100      	movs	r1, #0
 800c52c:	9103      	str	r1, [sp, #12]
 800c52e:	696e      	ldr	r6, [r5, #20]
 800c530:	4985      	ldr	r1, [pc, #532]	; (800c748 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2d0>)
 800c532:	9300      	str	r3, [sp, #0]
 800c534:	e9cd 2401 	strd	r2, r4, [sp, #4]
 800c538:	4628      	mov	r0, r5
 800c53a:	4a82      	ldr	r2, [pc, #520]	; (800c744 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2cc>)
 800c53c:	2339      	movs	r3, #57	; 0x39
 800c53e:	47b0      	blx	r6
 800c540:	2001      	movs	r0, #1
 800c542:	e7b0      	b.n	800c4a6 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e>
 800c544:	f8d7 a028 	ldr.w	sl, [r7, #40]	; 0x28
 800c548:	ed9f aa84 	vldr	s20, [pc, #528]	; 800c75c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e4>
 800c54c:	ed9f ba84 	vldr	s22, [pc, #528]	; 800c760 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e8>
 800c550:	eddf 9a84 	vldr	s19, [pc, #528]	; 800c764 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2ec>
 800c554:	eddf aa84 	vldr	s21, [pc, #528]	; 800c768 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2f0>
 800c558:	f8df 8228 	ldr.w	r8, [pc, #552]	; 800c784 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x30c>
 800c55c:	eddf ba83 	vldr	s23, [pc, #524]	; 800c76c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2f4>
 800c560:	ee07 4a90 	vmov	s15, r4
 800c564:	f1aa 0502 	sub.w	r5, sl, #2
 800c568:	eef8 cae7 	vcvt.f32.s32	s25, s15
 800c56c:	e009      	b.n	800c582 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x10a>
 800c56e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800c572:	ee10 3a10 	vmov	r3, s0
 800c576:	b219      	sxth	r1, r3
 800c578:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 800c57c:	f825 1f02 	strh.w	r1, [r5, #2]!
 800c580:	d049      	beq.n	800c616 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x19e>
 800c582:	eefa 8a04 	vmov.f32	s17, #164	; 0xc1200000 -10.0
 800c586:	eeb0 9a68 	vmov.f32	s18, s17
 800c58a:	eeac 9a8a 	vfma.f32	s18, s25, s20
 800c58e:	3401      	adds	r4, #1
 800c590:	eeb6 ca00 	vmov.f32	s24, #96	; 0x3f000000  0.5
 800c594:	eeb0 0a49 	vmov.f32	s0, s18
 800c598:	f00f fc04 	bl	801bda4 <expf>
 800c59c:	eeb0 8a40 	vmov.f32	s16, s0
 800c5a0:	ee39 0a0b 	vadd.f32	s0, s18, s22
 800c5a4:	f00f fbfe 	bl	801bda4 <expf>
 800c5a8:	ee07 4a90 	vmov	s15, r4
 800c5ac:	eef8 cae7 	vcvt.f32.s32	s25, s15
 800c5b0:	eeb0 9a40 	vmov.f32	s18, s0
 800c5b4:	eeb0 0a68 	vmov.f32	s0, s17
 800c5b8:	eeac 0a8a 	vfma.f32	s0, s25, s20
 800c5bc:	f00f fbf2 	bl	801bda4 <expf>
 800c5c0:	eef0 8a40 	vmov.f32	s17, s0
 800c5c4:	ee28 0a29 	vmul.f32	s0, s16, s19
 800c5c8:	f00f fbc8 	bl	801bd5c <roundf>
 800c5cc:	eeb0 8a40 	vmov.f32	s16, s0
 800c5d0:	eea8 0aa9 	vfma.f32	s0, s17, s19
 800c5d4:	ee20 0a0c 	vmul.f32	s0, s0, s24
 800c5d8:	f00f fbc0 	bl	801bd5c <roundf>
 800c5dc:	eef0 8a40 	vmov.f32	s17, s0
 800c5e0:	ee29 0a29 	vmul.f32	s0, s18, s19
 800c5e4:	f00f fbba 	bl	801bd5c <roundf>
 800c5e8:	ee38 0ac0 	vsub.f32	s0, s17, s0
 800c5ec:	ee20 0a0c 	vmul.f32	s0, s0, s24
 800c5f0:	f00f fbb4 	bl	801bd5c <roundf>
 800c5f4:	ee38 0a40 	vsub.f32	s0, s16, s0
 800c5f8:	eeb4 0aea 	vcmpe.f32	s0, s21
 800c5fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c600:	d407      	bmi.n	800c612 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x19a>
 800c602:	eeb4 0aeb 	vcmpe.f32	s0, s23
 800c606:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c60a:	ddb0      	ble.n	800c56e <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0xf6>
 800c60c:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800c610:	e7b2      	b.n	800c578 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x100>
 800c612:	4641      	mov	r1, r8
 800c614:	e7b0      	b.n	800c578 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x100>
 800c616:	f8d7 902c 	ldr.w	r9, [r7, #44]	; 0x2c
 800c61a:	ed9f 0a55 	vldr	s0, [pc, #340]	; 800c770 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2f8>
 800c61e:	ed9f 8a51 	vldr	s16, [pc, #324]	; 800c764 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2ec>
 800c622:	eddf da54 	vldr	s27, [pc, #336]	; 800c774 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2fc>
 800c626:	eddf aa50 	vldr	s21, [pc, #320]	; 800c768 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2f0>
 800c62a:	eddf ba50 	vldr	s23, [pc, #320]	; 800c76c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2f4>
 800c62e:	ed9f ba52 	vldr	s22, [pc, #328]	; 800c778 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x300>
 800c632:	f8df 8150 	ldr.w	r8, [pc, #336]	; 800c784 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x30c>
 800c636:	eeb7 ca00 	vmov.f32	s24, #112	; 0x3f800000  1.0
 800c63a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800c63e:	eeb0 da40 	vmov.f32	s26, s0
 800c642:	eeb0 9a4c 	vmov.f32	s18, s24
 800c646:	eeb0 aa48 	vmov.f32	s20, s16
 800c64a:	f8aa 3400 	strh.w	r3, [sl, #1024]	; 0x400
 800c64e:	f1a9 0502 	sub.w	r5, r9, #2
 800c652:	2401      	movs	r4, #1
 800c654:	e035      	b.n	800c6c2 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x24a>
 800c656:	eebd 8ac8 	vcvt.s32.f32	s16, s16
 800c65a:	ee18 3a10 	vmov	r3, s16
 800c65e:	b219      	sxth	r1, r3
 800c660:	3401      	adds	r4, #1
 800c662:	f240 2301 	movw	r3, #513	; 0x201
 800c666:	429c      	cmp	r4, r3
 800c668:	f825 1f02 	strh.w	r1, [r5, #2]!
 800c66c:	d044      	beq.n	800c6f8 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x280>
 800c66e:	ee07 4a90 	vmov	s15, r4
 800c672:	eeb8 cae7 	vcvt.f32.s32	s24, s15
 800c676:	eeb0 8a4d 	vmov.f32	s16, s26
 800c67a:	eeac 8a2d 	vfma.f32	s16, s24, s27
 800c67e:	f00f fb6d 	bl	801bd5c <roundf>
 800c682:	ee78 7a09 	vadd.f32	s15, s16, s18
 800c686:	eeb0 8a40 	vmov.f32	s16, s0
 800c68a:	ee89 7a27 	vdiv.f32	s14, s18, s15
 800c68e:	eef6 ca00 	vmov.f32	s25, #96	; 0x3f000000  0.5
 800c692:	eea7 0a0a 	vfma.f32	s0, s14, s20
 800c696:	ee78 8a8b 	vadd.f32	s17, s17, s22
 800c69a:	ee20 0a2c 	vmul.f32	s0, s0, s25
 800c69e:	f00f fb5d 	bl	801bd5c <roundf>
 800c6a2:	ee78 8a89 	vadd.f32	s17, s17, s18
 800c6a6:	eef0 9a40 	vmov.f32	s19, s0
 800c6aa:	ee89 0a28 	vdiv.f32	s0, s18, s17
 800c6ae:	ee20 0a0a 	vmul.f32	s0, s0, s20
 800c6b2:	f00f fb53 	bl	801bd5c <roundf>
 800c6b6:	ee39 0ac0 	vsub.f32	s0, s19, s0
 800c6ba:	ee20 0a2c 	vmul.f32	s0, s0, s25
 800c6be:	f00f fb4d 	bl	801bd5c <roundf>
 800c6c2:	eef0 8a4d 	vmov.f32	s17, s26
 800c6c6:	eeec 8a2d 	vfma.f32	s17, s24, s27
 800c6ca:	ee38 8a40 	vsub.f32	s16, s16, s0
 800c6ce:	ee78 7a89 	vadd.f32	s15, s17, s18
 800c6d2:	eeb4 8aea 	vcmpe.f32	s16, s21
 800c6d6:	ee89 0a27 	vdiv.f32	s0, s18, s15
 800c6da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6de:	ee20 0a0a 	vmul.f32	s0, s0, s20
 800c6e2:	d407      	bmi.n	800c6f4 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x27c>
 800c6e4:	eeb4 8aeb 	vcmpe.f32	s16, s23
 800c6e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6ec:	ddb3      	ble.n	800c656 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x1de>
 800c6ee:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800c6f2:	e7b5      	b.n	800c660 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x1e8>
 800c6f4:	4641      	mov	r1, r8
 800c6f6:	e7b3      	b.n	800c660 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x1e8>
 800c6f8:	68f3      	ldr	r3, [r6, #12]
 800c6fa:	6932      	ldr	r2, [r6, #16]
 800c6fc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800c700:	f8a9 1400 	strh.w	r1, [r9, #1024]	; 0x400
 800c704:	2000      	movs	r0, #0
 800c706:	61fa      	str	r2, [r7, #28]
 800c708:	623b      	str	r3, [r7, #32]
 800c70a:	e6cc      	b.n	800c4a6 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e>
 800c70c:	4b1b      	ldr	r3, [pc, #108]	; (800c77c <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x304>)
 800c70e:	696c      	ldr	r4, [r5, #20]
 800c710:	4a0c      	ldr	r2, [pc, #48]	; (800c744 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2cc>)
 800c712:	9300      	str	r3, [sp, #0]
 800c714:	4628      	mov	r0, r5
 800c716:	490e      	ldr	r1, [pc, #56]	; (800c750 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2d8>)
 800c718:	2327      	movs	r3, #39	; 0x27
 800c71a:	47a0      	blx	r4
 800c71c:	2001      	movs	r0, #1
 800c71e:	e6c2      	b.n	800c4a6 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e>
 800c720:	4b17      	ldr	r3, [pc, #92]	; (800c780 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x308>)
 800c722:	696c      	ldr	r4, [r5, #20]
 800c724:	4a07      	ldr	r2, [pc, #28]	; (800c744 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2cc>)
 800c726:	9300      	str	r3, [sp, #0]
 800c728:	4628      	mov	r0, r5
 800c72a:	4909      	ldr	r1, [pc, #36]	; (800c750 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2d8>)
 800c72c:	232b      	movs	r3, #43	; 0x2b
 800c72e:	47a0      	blx	r4
 800c730:	2001      	movs	r0, #1
 800c732:	e6b8      	b.n	800c4a6 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE+0x2e>
 800c734:	f011 f902 	bl	801d93c <__stack_chk_fail>
 800c738:	20011294 	.word	0x20011294
 800c73c:	08024aa8 	.word	0x08024aa8
 800c740:	08024ab8 	.word	0x08024ab8
 800c744:	08025c38 	.word	0x08025c38
 800c748:	08024a8c 	.word	0x08024a8c
 800c74c:	08025d94 	.word	0x08025d94
 800c750:	080249b0 	.word	0x080249b0
 800c754:	08024bf8 	.word	0x08024bf8
 800c758:	08024c94 	.word	0x08024c94
 800c75c:	3ca00000 	.word	0x3ca00000
 800c760:	3c200000 	.word	0x3c200000
 800c764:	47000000 	.word	0x47000000
 800c768:	c7000000 	.word	0xc7000000
 800c76c:	46fffe00 	.word	0x46fffe00
 800c770:	00000000 	.word	0x00000000
 800c774:	3b000000 	.word	0x3b000000
 800c778:	3a800000 	.word	0x3a800000
 800c77c:	08025d58 	.word	0x08025d58
 800c780:	08025d70 	.word	0x08025d70
 800c784:	ffff8000 	.word	0xffff8000

0800c788 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE>:
 800c788:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c78c:	b082      	sub	sp, #8
 800c78e:	461f      	mov	r7, r3
 800c790:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800c794:	4b14      	ldr	r3, [pc, #80]	; (800c7e8 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE+0x60>)
 800c796:	681b      	ldr	r3, [r3, #0]
 800c798:	9301      	str	r3, [sp, #4]
 800c79a:	f04f 0300 	mov.w	r3, #0
 800c79e:	4643      	mov	r3, r8
 800c7a0:	4604      	mov	r4, r0
 800c7a2:	460d      	mov	r5, r1
 800c7a4:	4616      	mov	r6, r2
 800c7a6:	f7ff fe67 	bl	800c478 <_ZN6tflite12_GLOBAL__N_121InitializeLutForInt16EP13TfLiteContextPK12TfLiteTensorPS3_PNS_13SoftmaxParamsE>
 800c7aa:	4b0f      	ldr	r3, [pc, #60]	; (800c7e8 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE+0x60>)
 800c7ac:	b980      	cbnz	r0, 800c7d0 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE+0x48>
 800c7ae:	681a      	ldr	r2, [r3, #0]
 800c7b0:	9b01      	ldr	r3, [sp, #4]
 800c7b2:	405a      	eors	r2, r3
 800c7b4:	f04f 0300 	mov.w	r3, #0
 800c7b8:	d114      	bne.n	800c7e4 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE+0x5c>
 800c7ba:	463b      	mov	r3, r7
 800c7bc:	4632      	mov	r2, r6
 800c7be:	4629      	mov	r1, r5
 800c7c0:	4620      	mov	r0, r4
 800c7c2:	f8cd 8020 	str.w	r8, [sp, #32]
 800c7c6:	b002      	add	sp, #8
 800c7c8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c7cc:	f7ff bcb0 	b.w	800c130 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE.part.0>
 800c7d0:	681a      	ldr	r2, [r3, #0]
 800c7d2:	9b01      	ldr	r3, [sp, #4]
 800c7d4:	405a      	eors	r2, r3
 800c7d6:	f04f 0300 	mov.w	r3, #0
 800c7da:	d103      	bne.n	800c7e4 <_ZN6tflite22CalculateSoftmaxParamsEP13TfLiteContextPK12TfLiteTensorPS2_PK19TfLiteSoftmaxParamsPNS_13SoftmaxParamsE+0x5c>
 800c7dc:	2001      	movs	r0, #1
 800c7de:	b002      	add	sp, #8
 800c7e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c7e4:	f011 f8aa 	bl	801d93c <__stack_chk_fail>
 800c7e8:	20011294 	.word	0x20011294

0800c7ec <_ZN6tflite14AlignPointerUpEPhj>:
 800c7ec:	b500      	push	{lr}
 800c7ee:	1e4b      	subs	r3, r1, #1
 800c7f0:	4418      	add	r0, r3
 800c7f2:	4b0b      	ldr	r3, [pc, #44]	; (800c820 <_ZN6tflite14AlignPointerUpEPhj+0x34>)
 800c7f4:	fbb0 f0f1 	udiv	r0, r0, r1
 800c7f8:	b083      	sub	sp, #12
 800c7fa:	681b      	ldr	r3, [r3, #0]
 800c7fc:	9301      	str	r3, [sp, #4]
 800c7fe:	f04f 0300 	mov.w	r3, #0
 800c802:	4b07      	ldr	r3, [pc, #28]	; (800c820 <_ZN6tflite14AlignPointerUpEPhj+0x34>)
 800c804:	681a      	ldr	r2, [r3, #0]
 800c806:	9b01      	ldr	r3, [sp, #4]
 800c808:	405a      	eors	r2, r3
 800c80a:	f04f 0300 	mov.w	r3, #0
 800c80e:	fb01 f000 	mul.w	r0, r1, r0
 800c812:	d102      	bne.n	800c81a <_ZN6tflite14AlignPointerUpEPhj+0x2e>
 800c814:	b003      	add	sp, #12
 800c816:	f85d fb04 	ldr.w	pc, [sp], #4
 800c81a:	f011 f88f 	bl	801d93c <__stack_chk_fail>
 800c81e:	bf00      	nop
 800c820:	20011294 	.word	0x20011294

0800c824 <_ZN6tflite16AlignPointerDownEPhj>:
 800c824:	b500      	push	{lr}
 800c826:	fbb0 f0f1 	udiv	r0, r0, r1
 800c82a:	4b0a      	ldr	r3, [pc, #40]	; (800c854 <_ZN6tflite16AlignPointerDownEPhj+0x30>)
 800c82c:	b083      	sub	sp, #12
 800c82e:	681b      	ldr	r3, [r3, #0]
 800c830:	9301      	str	r3, [sp, #4]
 800c832:	f04f 0300 	mov.w	r3, #0
 800c836:	4b07      	ldr	r3, [pc, #28]	; (800c854 <_ZN6tflite16AlignPointerDownEPhj+0x30>)
 800c838:	681a      	ldr	r2, [r3, #0]
 800c83a:	9b01      	ldr	r3, [sp, #4]
 800c83c:	405a      	eors	r2, r3
 800c83e:	f04f 0300 	mov.w	r3, #0
 800c842:	fb01 f000 	mul.w	r0, r1, r0
 800c846:	d102      	bne.n	800c84e <_ZN6tflite16AlignPointerDownEPhj+0x2a>
 800c848:	b003      	add	sp, #12
 800c84a:	f85d fb04 	ldr.w	pc, [sp], #4
 800c84e:	f011 f875 	bl	801d93c <__stack_chk_fail>
 800c852:	bf00      	nop
 800c854:	20011294 	.word	0x20011294

0800c858 <_ZN6tflite11AlignSizeUpEjj>:
 800c858:	b500      	push	{lr}
 800c85a:	4b0c      	ldr	r3, [pc, #48]	; (800c88c <_ZN6tflite11AlignSizeUpEjj+0x34>)
 800c85c:	b083      	sub	sp, #12
 800c85e:	681b      	ldr	r3, [r3, #0]
 800c860:	9301      	str	r3, [sp, #4]
 800c862:	f04f 0300 	mov.w	r3, #0
 800c866:	4b09      	ldr	r3, [pc, #36]	; (800c88c <_ZN6tflite11AlignSizeUpEjj+0x34>)
 800c868:	3801      	subs	r0, #1
 800c86a:	681a      	ldr	r2, [r3, #0]
 800c86c:	9b01      	ldr	r3, [sp, #4]
 800c86e:	405a      	eors	r2, r3
 800c870:	f04f 0300 	mov.w	r3, #0
 800c874:	4408      	add	r0, r1
 800c876:	fbb0 f0f1 	udiv	r0, r0, r1
 800c87a:	fb01 f000 	mul.w	r0, r1, r0
 800c87e:	d102      	bne.n	800c886 <_ZN6tflite11AlignSizeUpEjj+0x2e>
 800c880:	b003      	add	sp, #12
 800c882:	f85d fb04 	ldr.w	pc, [sp], #4
 800c886:	f011 f859 	bl	801d93c <__stack_chk_fail>
 800c88a:	bf00      	nop
 800c88c:	20011294 	.word	0x20011294

0800c890 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj>:
 800c890:	b500      	push	{lr}
 800c892:	4b1b      	ldr	r3, [pc, #108]	; (800c900 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x70>)
 800c894:	b083      	sub	sp, #12
 800c896:	3801      	subs	r0, #1
 800c898:	681b      	ldr	r3, [r3, #0]
 800c89a:	9301      	str	r3, [sp, #4]
 800c89c:	f04f 0300 	mov.w	r3, #0
 800c8a0:	2812      	cmp	r0, #18
 800c8a2:	d824      	bhi.n	800c8ee <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x5e>
 800c8a4:	e8df f000 	tbb	[pc, r0]
 800c8a8:	0a171b1b 	.word	0x0a171b1b
 800c8ac:	0a1f1723 	.word	0x0a1f1723
 800c8b0:	250a1f17 	.word	0x250a1f17
 800c8b4:	1b231b0a 	.word	0x1b231b0a
 800c8b8:	1723      	.short	0x1723
 800c8ba:	1f          	.byte	0x1f
 800c8bb:	00          	.byte	0x00
 800c8bc:	2308      	movs	r3, #8
 800c8be:	600b      	str	r3, [r1, #0]
 800c8c0:	2000      	movs	r0, #0
 800c8c2:	4b0f      	ldr	r3, [pc, #60]	; (800c900 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x70>)
 800c8c4:	681a      	ldr	r2, [r3, #0]
 800c8c6:	9b01      	ldr	r3, [sp, #4]
 800c8c8:	405a      	eors	r2, r3
 800c8ca:	f04f 0300 	mov.w	r3, #0
 800c8ce:	d114      	bne.n	800c8fa <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x6a>
 800c8d0:	b003      	add	sp, #12
 800c8d2:	f85d fb04 	ldr.w	pc, [sp], #4
 800c8d6:	2301      	movs	r3, #1
 800c8d8:	600b      	str	r3, [r1, #0]
 800c8da:	2000      	movs	r0, #0
 800c8dc:	e7f1      	b.n	800c8c2 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x32>
 800c8de:	2304      	movs	r3, #4
 800c8e0:	600b      	str	r3, [r1, #0]
 800c8e2:	2000      	movs	r0, #0
 800c8e4:	e7ed      	b.n	800c8c2 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x32>
 800c8e6:	2302      	movs	r3, #2
 800c8e8:	600b      	str	r3, [r1, #0]
 800c8ea:	2000      	movs	r0, #0
 800c8ec:	e7e9      	b.n	800c8c2 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x32>
 800c8ee:	2001      	movs	r0, #1
 800c8f0:	e7e7      	b.n	800c8c2 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x32>
 800c8f2:	2310      	movs	r3, #16
 800c8f4:	600b      	str	r3, [r1, #0]
 800c8f6:	2000      	movs	r0, #0
 800c8f8:	e7e3      	b.n	800c8c2 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj+0x32>
 800c8fa:	f011 f81f 	bl	801d93c <__stack_chk_fail>
 800c8fe:	bf00      	nop
 800c900:	20011294 	.word	0x20011294

0800c904 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_>:
 800c904:	6803      	ldr	r3, [r0, #0]
 800c906:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c90a:	eba0 0e03 	sub.w	lr, r0, r3
 800c90e:	4b28      	ldr	r3, [pc, #160]	; (800c9b0 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0xac>)
 800c910:	f8be 8000 	ldrh.w	r8, [lr]
 800c914:	b082      	sub	sp, #8
 800c916:	f1b8 0f04 	cmp.w	r8, #4
 800c91a:	681b      	ldr	r3, [r3, #0]
 800c91c:	9301      	str	r3, [sp, #4]
 800c91e:	f04f 0300 	mov.w	r3, #0
 800c922:	460f      	mov	r7, r1
 800c924:	4616      	mov	r6, r2
 800c926:	d928      	bls.n	800c97a <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x76>
 800c928:	f8be 2004 	ldrh.w	r2, [lr, #4]
 800c92c:	2a00      	cmp	r2, #0
 800c92e:	d038      	beq.n	800c9a2 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x9e>
 800c930:	5881      	ldr	r1, [r0, r2]
 800c932:	4402      	add	r2, r0
 800c934:	1853      	adds	r3, r2, r1
 800c936:	5854      	ldr	r4, [r2, r1]
 800c938:	b39c      	cbz	r4, 800c9a2 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x9e>
 800c93a:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
 800c93e:	2401      	movs	r4, #1
 800c940:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800c944:	4563      	cmp	r3, ip
 800c946:	fb05 f404 	mul.w	r4, r5, r4
 800c94a:	d1f9      	bne.n	800c940 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x3c>
 800c94c:	f1b8 0f06 	cmp.w	r8, #6
 800c950:	d92b      	bls.n	800c9aa <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0xa6>
 800c952:	f8be 3006 	ldrh.w	r3, [lr, #6]
 800c956:	b313      	cbz	r3, 800c99e <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x9a>
 800c958:	56c0      	ldrsb	r0, [r0, r3]
 800c95a:	f10d 0103 	add.w	r1, sp, #3
 800c95e:	f001 fd43 	bl	800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>
 800c962:	b990      	cbnz	r0, 800c98a <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x86>
 800c964:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800c968:	4631      	mov	r1, r6
 800c96a:	f7ff ff91 	bl	800c890 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj>
 800c96e:	b960      	cbnz	r0, 800c98a <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x86>
 800c970:	6833      	ldr	r3, [r6, #0]
 800c972:	fb03 f404 	mul.w	r4, r3, r4
 800c976:	603c      	str	r4, [r7, #0]
 800c978:	e007      	b.n	800c98a <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x86>
 800c97a:	2401      	movs	r4, #1
 800c97c:	2000      	movs	r0, #0
 800c97e:	f10d 0103 	add.w	r1, sp, #3
 800c982:	f001 fd31 	bl	800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>
 800c986:	2800      	cmp	r0, #0
 800c988:	d0ec      	beq.n	800c964 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x60>
 800c98a:	4b09      	ldr	r3, [pc, #36]	; (800c9b0 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0xac>)
 800c98c:	681a      	ldr	r2, [r3, #0]
 800c98e:	9b01      	ldr	r3, [sp, #4]
 800c990:	405a      	eors	r2, r3
 800c992:	f04f 0300 	mov.w	r3, #0
 800c996:	d106      	bne.n	800c9a6 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0xa2>
 800c998:	b002      	add	sp, #8
 800c99a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c99e:	4618      	mov	r0, r3
 800c9a0:	e7ed      	b.n	800c97e <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x7a>
 800c9a2:	2401      	movs	r4, #1
 800c9a4:	e7d2      	b.n	800c94c <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x48>
 800c9a6:	f010 ffc9 	bl	801d93c <__stack_chk_fail>
 800c9aa:	2000      	movs	r0, #0
 800c9ac:	e7e7      	b.n	800c97e <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_+0x7a>
 800c9ae:	bf00      	nop
 800c9b0:	20011294 	.word	0x20011294

0800c9b4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj>:
 800c9b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c9b6:	4b17      	ldr	r3, [pc, #92]	; (800ca14 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x60>)
 800c9b8:	b083      	sub	sp, #12
 800c9ba:	681b      	ldr	r3, [r3, #0]
 800c9bc:	9301      	str	r3, [sp, #4]
 800c9be:	f04f 0300 	mov.w	r3, #0
 800c9c2:	b321      	cbz	r1, 800ca0e <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x5a>
 800c9c4:	6842      	ldr	r2, [r0, #4]
 800c9c6:	460f      	mov	r7, r1
 800c9c8:	b1ea      	cbz	r2, 800ca06 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x52>
 800c9ca:	6816      	ldr	r6, [r2, #0]
 800c9cc:	2e00      	cmp	r6, #0
 800c9ce:	dd1a      	ble.n	800ca06 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x52>
 800c9d0:	2300      	movs	r3, #0
 800c9d2:	2401      	movs	r4, #1
 800c9d4:	f852 5f04 	ldr.w	r5, [r2, #4]!
 800c9d8:	3301      	adds	r3, #1
 800c9da:	42b3      	cmp	r3, r6
 800c9dc:	fb05 f404 	mul.w	r4, r5, r4
 800c9e0:	d1f8      	bne.n	800c9d4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x20>
 800c9e2:	7a00      	ldrb	r0, [r0, #8]
 800c9e4:	4669      	mov	r1, sp
 800c9e6:	f7ff ff53 	bl	800c890 <_ZN6tflite16TfLiteTypeSizeOfE10TfLiteTypePj>
 800c9ea:	b918      	cbnz	r0, 800c9f4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x40>
 800c9ec:	9b00      	ldr	r3, [sp, #0]
 800c9ee:	fb04 f303 	mul.w	r3, r4, r3
 800c9f2:	603b      	str	r3, [r7, #0]
 800c9f4:	4b07      	ldr	r3, [pc, #28]	; (800ca14 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x60>)
 800c9f6:	681a      	ldr	r2, [r3, #0]
 800c9f8:	9b01      	ldr	r3, [sp, #4]
 800c9fa:	405a      	eors	r2, r3
 800c9fc:	f04f 0300 	mov.w	r3, #0
 800ca00:	d103      	bne.n	800ca0a <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x56>
 800ca02:	b003      	add	sp, #12
 800ca04:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca06:	2401      	movs	r4, #1
 800ca08:	e7eb      	b.n	800c9e2 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj+0x2e>
 800ca0a:	f010 ff97 	bl	801d93c <__stack_chk_fail>
 800ca0e:	f00f ffcf 	bl	801c9b0 <abort>
 800ca12:	bf00      	nop
 800ca14:	20011294 	.word	0x20011294

0800ca18 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei>:
 800ca18:	b500      	push	{lr}
 800ca1a:	680b      	ldr	r3, [r1, #0]
 800ca1c:	4914      	ldr	r1, [pc, #80]	; (800ca70 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x58>)
 800ca1e:	b083      	sub	sp, #12
 800ca20:	2a00      	cmp	r2, #0
 800ca22:	6809      	ldr	r1, [r1, #0]
 800ca24:	9101      	str	r1, [sp, #4]
 800ca26:	f04f 0100 	mov.w	r1, #0
 800ca2a:	f853 1b04 	ldr.w	r1, [r3], #4
 800ca2e:	db12      	blt.n	800ca56 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x3e>
 800ca30:	4291      	cmp	r1, r2
 800ca32:	dd10      	ble.n	800ca56 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x3e>
 800ca34:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ca38:	2900      	cmp	r1, #0
 800ca3a:	db0c      	blt.n	800ca56 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x3e>
 800ca3c:	4b0c      	ldr	r3, [pc, #48]	; (800ca70 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x58>)
 800ca3e:	681a      	ldr	r2, [r3, #0]
 800ca40:	9b01      	ldr	r3, [sp, #4]
 800ca42:	405a      	eors	r2, r3
 800ca44:	f04f 0300 	mov.w	r3, #0
 800ca48:	d110      	bne.n	800ca6c <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x54>
 800ca4a:	6803      	ldr	r3, [r0, #0]
 800ca4c:	695b      	ldr	r3, [r3, #20]
 800ca4e:	b003      	add	sp, #12
 800ca50:	f85d eb04 	ldr.w	lr, [sp], #4
 800ca54:	4718      	bx	r3
 800ca56:	4b06      	ldr	r3, [pc, #24]	; (800ca70 <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x58>)
 800ca58:	681a      	ldr	r2, [r3, #0]
 800ca5a:	9b01      	ldr	r3, [sp, #4]
 800ca5c:	405a      	eors	r2, r3
 800ca5e:	f04f 0300 	mov.w	r3, #0
 800ca62:	d103      	bne.n	800ca6c <_ZN6tflite12MicroContext23AllocateTempInputTensorEPK10TfLiteNodei+0x54>
 800ca64:	2000      	movs	r0, #0
 800ca66:	b003      	add	sp, #12
 800ca68:	f85d fb04 	ldr.w	pc, [sp], #4
 800ca6c:	f010 ff66 	bl	801d93c <__stack_chk_fail>
 800ca70:	20011294 	.word	0x20011294

0800ca74 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei>:
 800ca74:	b500      	push	{lr}
 800ca76:	684b      	ldr	r3, [r1, #4]
 800ca78:	4914      	ldr	r1, [pc, #80]	; (800cacc <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x58>)
 800ca7a:	b083      	sub	sp, #12
 800ca7c:	2a00      	cmp	r2, #0
 800ca7e:	6809      	ldr	r1, [r1, #0]
 800ca80:	9101      	str	r1, [sp, #4]
 800ca82:	f04f 0100 	mov.w	r1, #0
 800ca86:	f853 1b04 	ldr.w	r1, [r3], #4
 800ca8a:	db12      	blt.n	800cab2 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x3e>
 800ca8c:	4291      	cmp	r1, r2
 800ca8e:	dd10      	ble.n	800cab2 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x3e>
 800ca90:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800ca94:	2900      	cmp	r1, #0
 800ca96:	db0c      	blt.n	800cab2 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x3e>
 800ca98:	4b0c      	ldr	r3, [pc, #48]	; (800cacc <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x58>)
 800ca9a:	681a      	ldr	r2, [r3, #0]
 800ca9c:	9b01      	ldr	r3, [sp, #4]
 800ca9e:	405a      	eors	r2, r3
 800caa0:	f04f 0300 	mov.w	r3, #0
 800caa4:	d110      	bne.n	800cac8 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x54>
 800caa6:	6803      	ldr	r3, [r0, #0]
 800caa8:	695b      	ldr	r3, [r3, #20]
 800caaa:	b003      	add	sp, #12
 800caac:	f85d eb04 	ldr.w	lr, [sp], #4
 800cab0:	4718      	bx	r3
 800cab2:	4b06      	ldr	r3, [pc, #24]	; (800cacc <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x58>)
 800cab4:	681a      	ldr	r2, [r3, #0]
 800cab6:	9b01      	ldr	r3, [sp, #4]
 800cab8:	405a      	eors	r2, r3
 800caba:	f04f 0300 	mov.w	r3, #0
 800cabe:	d103      	bne.n	800cac8 <_ZN6tflite12MicroContext24AllocateTempOutputTensorEPK10TfLiteNodei+0x54>
 800cac0:	2000      	movs	r0, #0
 800cac2:	b003      	add	sp, #12
 800cac4:	f85d fb04 	ldr.w	pc, [sp], #4
 800cac8:	f010 ff38 	bl	801d93c <__stack_chk_fail>
 800cacc:	20011294 	.word	0x20011294

0800cad0 <_ZN6tflite25MicroContextReportOpErrorEP13TfLiteContextPKcz>:
 800cad0:	b40e      	push	{r1, r2, r3}
 800cad2:	b500      	push	{lr}
 800cad4:	b082      	sub	sp, #8
 800cad6:	a903      	add	r1, sp, #12
 800cad8:	4b0b      	ldr	r3, [pc, #44]	; (800cb08 <_ZN6tflite25MicroContextReportOpErrorEP13TfLiteContextPKcz+0x38>)
 800cada:	f851 0b04 	ldr.w	r0, [r1], #4
 800cade:	681b      	ldr	r3, [r3, #0]
 800cae0:	9301      	str	r3, [sp, #4]
 800cae2:	f04f 0300 	mov.w	r3, #0
 800cae6:	9100      	str	r1, [sp, #0]
 800cae8:	f001 fb76 	bl	800e1d8 <_Z12VMicroPrintfPKcSt9__va_list>
 800caec:	4b06      	ldr	r3, [pc, #24]	; (800cb08 <_ZN6tflite25MicroContextReportOpErrorEP13TfLiteContextPKcz+0x38>)
 800caee:	681a      	ldr	r2, [r3, #0]
 800caf0:	9b01      	ldr	r3, [sp, #4]
 800caf2:	405a      	eors	r2, r3
 800caf4:	f04f 0300 	mov.w	r3, #0
 800caf8:	d104      	bne.n	800cb04 <_ZN6tflite25MicroContextReportOpErrorEP13TfLiteContextPKcz+0x34>
 800cafa:	b002      	add	sp, #8
 800cafc:	f85d eb04 	ldr.w	lr, [sp], #4
 800cb00:	b003      	add	sp, #12
 800cb02:	4770      	bx	lr
 800cb04:	f010 ff1a 	bl	801d93c <__stack_chk_fail>
 800cb08:	20011294 	.word	0x20011294

0800cb0c <_ZN6tflite36MicroContextAllocatePersistentBufferEP13TfLiteContextj>:
 800cb0c:	b500      	push	{lr}
 800cb0e:	4b0b      	ldr	r3, [pc, #44]	; (800cb3c <_ZN6tflite36MicroContextAllocatePersistentBufferEP13TfLiteContextj+0x30>)
 800cb10:	68c0      	ldr	r0, [r0, #12]
 800cb12:	b083      	sub	sp, #12
 800cb14:	681b      	ldr	r3, [r3, #0]
 800cb16:	9301      	str	r3, [sp, #4]
 800cb18:	f04f 0300 	mov.w	r3, #0
 800cb1c:	4b07      	ldr	r3, [pc, #28]	; (800cb3c <_ZN6tflite36MicroContextAllocatePersistentBufferEP13TfLiteContextj+0x30>)
 800cb1e:	681a      	ldr	r2, [r3, #0]
 800cb20:	9b01      	ldr	r3, [sp, #4]
 800cb22:	405a      	eors	r2, r3
 800cb24:	f04f 0300 	mov.w	r3, #0
 800cb28:	d105      	bne.n	800cb36 <_ZN6tflite36MicroContextAllocatePersistentBufferEP13TfLiteContextj+0x2a>
 800cb2a:	6803      	ldr	r3, [r0, #0]
 800cb2c:	689b      	ldr	r3, [r3, #8]
 800cb2e:	b003      	add	sp, #12
 800cb30:	f85d eb04 	ldr.w	lr, [sp], #4
 800cb34:	4718      	bx	r3
 800cb36:	f010 ff01 	bl	801d93c <__stack_chk_fail>
 800cb3a:	bf00      	nop
 800cb3c:	20011294 	.word	0x20011294

0800cb40 <_ZN6tflite39MicroContextRequestScratchBufferInArenaEP13TfLiteContextjPi>:
 800cb40:	b500      	push	{lr}
 800cb42:	4b0c      	ldr	r3, [pc, #48]	; (800cb74 <_ZN6tflite39MicroContextRequestScratchBufferInArenaEP13TfLiteContextjPi+0x34>)
 800cb44:	68c0      	ldr	r0, [r0, #12]
 800cb46:	b083      	sub	sp, #12
 800cb48:	681b      	ldr	r3, [r3, #0]
 800cb4a:	9301      	str	r3, [sp, #4]
 800cb4c:	f04f 0300 	mov.w	r3, #0
 800cb50:	4b08      	ldr	r3, [pc, #32]	; (800cb74 <_ZN6tflite39MicroContextRequestScratchBufferInArenaEP13TfLiteContextjPi+0x34>)
 800cb52:	f8d3 c000 	ldr.w	ip, [r3]
 800cb56:	9b01      	ldr	r3, [sp, #4]
 800cb58:	ea93 0c0c 	eors.w	ip, r3, ip
 800cb5c:	f04f 0300 	mov.w	r3, #0
 800cb60:	d105      	bne.n	800cb6e <_ZN6tflite39MicroContextRequestScratchBufferInArenaEP13TfLiteContextjPi+0x2e>
 800cb62:	6803      	ldr	r3, [r0, #0]
 800cb64:	68db      	ldr	r3, [r3, #12]
 800cb66:	b003      	add	sp, #12
 800cb68:	f85d eb04 	ldr.w	lr, [sp], #4
 800cb6c:	4718      	bx	r3
 800cb6e:	f010 fee5 	bl	801d93c <__stack_chk_fail>
 800cb72:	bf00      	nop
 800cb74:	20011294 	.word	0x20011294

0800cb78 <_ZN6tflite28MicroContextGetScratchBufferEP13TfLiteContexti>:
 800cb78:	b500      	push	{lr}
 800cb7a:	4b0b      	ldr	r3, [pc, #44]	; (800cba8 <_ZN6tflite28MicroContextGetScratchBufferEP13TfLiteContexti+0x30>)
 800cb7c:	68c0      	ldr	r0, [r0, #12]
 800cb7e:	b083      	sub	sp, #12
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	9301      	str	r3, [sp, #4]
 800cb84:	f04f 0300 	mov.w	r3, #0
 800cb88:	4b07      	ldr	r3, [pc, #28]	; (800cba8 <_ZN6tflite28MicroContextGetScratchBufferEP13TfLiteContexti+0x30>)
 800cb8a:	681a      	ldr	r2, [r3, #0]
 800cb8c:	9b01      	ldr	r3, [sp, #4]
 800cb8e:	405a      	eors	r2, r3
 800cb90:	f04f 0300 	mov.w	r3, #0
 800cb94:	d105      	bne.n	800cba2 <_ZN6tflite28MicroContextGetScratchBufferEP13TfLiteContexti+0x2a>
 800cb96:	6803      	ldr	r3, [r0, #0]
 800cb98:	691b      	ldr	r3, [r3, #16]
 800cb9a:	b003      	add	sp, #12
 800cb9c:	f85d eb04 	ldr.w	lr, [sp], #4
 800cba0:	4718      	bx	r3
 800cba2:	f010 fecb 	bl	801d93c <__stack_chk_fail>
 800cba6:	bf00      	nop
 800cba8:	20011294 	.word	0x20011294

0800cbac <_ZN6tflite21MicroContextGetTensorEPK13TfLiteContexti>:
 800cbac:	b500      	push	{lr}
 800cbae:	4b0b      	ldr	r3, [pc, #44]	; (800cbdc <_ZN6tflite21MicroContextGetTensorEPK13TfLiteContexti+0x30>)
 800cbb0:	68c0      	ldr	r0, [r0, #12]
 800cbb2:	b083      	sub	sp, #12
 800cbb4:	681b      	ldr	r3, [r3, #0]
 800cbb6:	9301      	str	r3, [sp, #4]
 800cbb8:	f04f 0300 	mov.w	r3, #0
 800cbbc:	4b07      	ldr	r3, [pc, #28]	; (800cbdc <_ZN6tflite21MicroContextGetTensorEPK13TfLiteContexti+0x30>)
 800cbbe:	681a      	ldr	r2, [r3, #0]
 800cbc0:	9b01      	ldr	r3, [sp, #4]
 800cbc2:	405a      	eors	r2, r3
 800cbc4:	f04f 0300 	mov.w	r3, #0
 800cbc8:	d105      	bne.n	800cbd6 <_ZN6tflite21MicroContextGetTensorEPK13TfLiteContexti+0x2a>
 800cbca:	6803      	ldr	r3, [r0, #0]
 800cbcc:	695b      	ldr	r3, [r3, #20]
 800cbce:	b003      	add	sp, #12
 800cbd0:	f85d eb04 	ldr.w	lr, [sp], #4
 800cbd4:	4718      	bx	r3
 800cbd6:	f010 feb1 	bl	801d93c <__stack_chk_fail>
 800cbda:	bf00      	nop
 800cbdc:	20011294 	.word	0x20011294

0800cbe0 <_ZN6tflite25MicroContextGetEvalTensorEPK13TfLiteContexti>:
 800cbe0:	b500      	push	{lr}
 800cbe2:	4b0b      	ldr	r3, [pc, #44]	; (800cc10 <_ZN6tflite25MicroContextGetEvalTensorEPK13TfLiteContexti+0x30>)
 800cbe4:	68c0      	ldr	r0, [r0, #12]
 800cbe6:	b083      	sub	sp, #12
 800cbe8:	681b      	ldr	r3, [r3, #0]
 800cbea:	9301      	str	r3, [sp, #4]
 800cbec:	f04f 0300 	mov.w	r3, #0
 800cbf0:	4b07      	ldr	r3, [pc, #28]	; (800cc10 <_ZN6tflite25MicroContextGetEvalTensorEPK13TfLiteContexti+0x30>)
 800cbf2:	681a      	ldr	r2, [r3, #0]
 800cbf4:	9b01      	ldr	r3, [sp, #4]
 800cbf6:	405a      	eors	r2, r3
 800cbf8:	f04f 0300 	mov.w	r3, #0
 800cbfc:	d105      	bne.n	800cc0a <_ZN6tflite25MicroContextGetEvalTensorEPK13TfLiteContexti+0x2a>
 800cbfe:	6803      	ldr	r3, [r0, #0]
 800cc00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc02:	b003      	add	sp, #12
 800cc04:	f85d eb04 	ldr.w	lr, [sp], #4
 800cc08:	4718      	bx	r3
 800cc0a:	f010 fe97 	bl	801d93c <__stack_chk_fail>
 800cc0e:	bf00      	nop
 800cc10:	20011294 	.word	0x20011294

0800cc14 <_ZN6tflite23MicroInterpreterContext16external_contextEv>:
 800cc14:	b500      	push	{lr}
 800cc16:	4b09      	ldr	r3, [pc, #36]	; (800cc3c <_ZN6tflite23MicroInterpreterContext16external_contextEv+0x28>)
 800cc18:	6980      	ldr	r0, [r0, #24]
 800cc1a:	b083      	sub	sp, #12
 800cc1c:	681b      	ldr	r3, [r3, #0]
 800cc1e:	9301      	str	r3, [sp, #4]
 800cc20:	f04f 0300 	mov.w	r3, #0
 800cc24:	4b05      	ldr	r3, [pc, #20]	; (800cc3c <_ZN6tflite23MicroInterpreterContext16external_contextEv+0x28>)
 800cc26:	681a      	ldr	r2, [r3, #0]
 800cc28:	9b01      	ldr	r3, [sp, #4]
 800cc2a:	405a      	eors	r2, r3
 800cc2c:	f04f 0300 	mov.w	r3, #0
 800cc30:	d102      	bne.n	800cc38 <_ZN6tflite23MicroInterpreterContext16external_contextEv+0x24>
 800cc32:	b003      	add	sp, #12
 800cc34:	f85d fb04 	ldr.w	pc, [sp], #4
 800cc38:	f010 fe80 	bl	801d93c <__stack_chk_fail>
 800cc3c:	20011294 	.word	0x20011294

0800cc40 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>:
 800cc40:	b500      	push	{lr}
 800cc42:	f8df c028 	ldr.w	ip, [pc, #40]	; 800cc6c <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x2c>
 800cc46:	4b06      	ldr	r3, [pc, #24]	; (800cc60 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x20>)
 800cc48:	4a06      	ldr	r2, [pc, #24]	; (800cc64 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x24>)
 800cc4a:	4807      	ldr	r0, [pc, #28]	; (800cc68 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x28>)
 800cc4c:	b083      	sub	sp, #12
 800cc4e:	21b0      	movs	r1, #176	; 0xb0
 800cc50:	f8dc c000 	ldr.w	ip, [ip]
 800cc54:	f8cd c004 	str.w	ip, [sp, #4]
 800cc58:	f04f 0c00 	mov.w	ip, #0
 800cc5c:	f00f feb0 	bl	801c9c0 <__assert_func>
 800cc60:	08024734 	.word	0x08024734
 800cc64:	08025dd0 	.word	0x08025dd0
 800cc68:	08024804 	.word	0x08024804
 800cc6c:	20011294 	.word	0x20011294

0800cc70 <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType>:
 800cc70:	b500      	push	{lr}
 800cc72:	4b12      	ldr	r3, [pc, #72]	; (800ccbc <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x4c>)
 800cc74:	68c0      	ldr	r0, [r0, #12]
 800cc76:	4a12      	ldr	r2, [pc, #72]	; (800ccc0 <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x50>)
 800cc78:	b083      	sub	sp, #12
 800cc7a:	681b      	ldr	r3, [r3, #0]
 800cc7c:	9301      	str	r3, [sp, #4]
 800cc7e:	f04f 0300 	mov.w	r3, #0
 800cc82:	6803      	ldr	r3, [r0, #0]
 800cc84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc86:	4293      	cmp	r3, r2
 800cc88:	d10a      	bne.n	800cca0 <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x30>
 800cc8a:	4b0c      	ldr	r3, [pc, #48]	; (800ccbc <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x4c>)
 800cc8c:	6980      	ldr	r0, [r0, #24]
 800cc8e:	681a      	ldr	r2, [r3, #0]
 800cc90:	9b01      	ldr	r3, [sp, #4]
 800cc92:	405a      	eors	r2, r3
 800cc94:	f04f 0300 	mov.w	r3, #0
 800cc98:	d10d      	bne.n	800ccb6 <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x46>
 800cc9a:	b003      	add	sp, #12
 800cc9c:	f85d fb04 	ldr.w	pc, [sp], #4
 800cca0:	4a06      	ldr	r2, [pc, #24]	; (800ccbc <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x4c>)
 800cca2:	6811      	ldr	r1, [r2, #0]
 800cca4:	9a01      	ldr	r2, [sp, #4]
 800cca6:	4051      	eors	r1, r2
 800cca8:	f04f 0200 	mov.w	r2, #0
 800ccac:	d103      	bne.n	800ccb6 <_ZN6tflite30MicroContextGetExternalContextEP13TfLiteContext25TfLiteExternalContextType+0x46>
 800ccae:	b003      	add	sp, #12
 800ccb0:	f85d eb04 	ldr.w	lr, [sp], #4
 800ccb4:	4718      	bx	r3
 800ccb6:	f010 fe41 	bl	801d93c <__stack_chk_fail>
 800ccba:	bf00      	nop
 800ccbc:	20011294 	.word	0x20011294
 800ccc0:	0800cc15 	.word	0x0800cc15

0800ccc4 <_ZN6tflite16MicroInterpreter5inputEj>:
 800ccc4:	b510      	push	{r4, lr}
 800ccc6:	6803      	ldr	r3, [r0, #0]
 800ccc8:	4a1c      	ldr	r2, [pc, #112]	; (800cd3c <_ZN6tflite16MicroInterpreter5inputEj+0x78>)
 800ccca:	b082      	sub	sp, #8
 800cccc:	6812      	ldr	r2, [r2, #0]
 800ccce:	9201      	str	r2, [sp, #4]
 800ccd0:	f04f 0200 	mov.w	r2, #0
 800ccd4:	681a      	ldr	r2, [r3, #0]
 800ccd6:	1a9a      	subs	r2, r3, r2
 800ccd8:	8814      	ldrh	r4, [r2, #0]
 800ccda:	2c08      	cmp	r4, #8
 800ccdc:	d92b      	bls.n	800cd36 <_ZN6tflite16MicroInterpreter5inputEj+0x72>
 800ccde:	8912      	ldrh	r2, [r2, #8]
 800cce0:	b34a      	cbz	r2, 800cd36 <_ZN6tflite16MicroInterpreter5inputEj+0x72>
 800cce2:	589c      	ldr	r4, [r3, r2]
 800cce4:	4413      	add	r3, r2
 800cce6:	191a      	adds	r2, r3, r4
 800cce8:	591b      	ldr	r3, [r3, r4]
 800ccea:	b303      	cbz	r3, 800cd2e <_ZN6tflite16MicroInterpreter5inputEj+0x6a>
 800ccec:	6854      	ldr	r4, [r2, #4]
 800ccee:	1d13      	adds	r3, r2, #4
 800ccf0:	591a      	ldr	r2, [r3, r4]
 800ccf2:	4423      	add	r3, r4
 800ccf4:	1a9a      	subs	r2, r3, r2
 800ccf6:	8814      	ldrh	r4, [r2, #0]
 800ccf8:	2c06      	cmp	r4, #6
 800ccfa:	d91c      	bls.n	800cd36 <_ZN6tflite16MicroInterpreter5inputEj+0x72>
 800ccfc:	88d2      	ldrh	r2, [r2, #6]
 800ccfe:	b1d2      	cbz	r2, 800cd36 <_ZN6tflite16MicroInterpreter5inputEj+0x72>
 800cd00:	589c      	ldr	r4, [r3, r2]
 800cd02:	4413      	add	r3, r2
 800cd04:	591a      	ldr	r2, [r3, r4]
 800cd06:	4291      	cmp	r1, r2
 800cd08:	d20c      	bcs.n	800cd24 <_ZN6tflite16MicroInterpreter5inputEj+0x60>
 800cd0a:	f8d0 3098 	ldr.w	r3, [r0, #152]	; 0x98
 800cd0e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800cd12:	4b0a      	ldr	r3, [pc, #40]	; (800cd3c <_ZN6tflite16MicroInterpreter5inputEj+0x78>)
 800cd14:	681a      	ldr	r2, [r3, #0]
 800cd16:	9b01      	ldr	r3, [sp, #4]
 800cd18:	405a      	eors	r2, r3
 800cd1a:	f04f 0300 	mov.w	r3, #0
 800cd1e:	d108      	bne.n	800cd32 <_ZN6tflite16MicroInterpreter5inputEj+0x6e>
 800cd20:	b002      	add	sp, #8
 800cd22:	bd10      	pop	{r4, pc}
 800cd24:	4806      	ldr	r0, [pc, #24]	; (800cd40 <_ZN6tflite16MicroInterpreter5inputEj+0x7c>)
 800cd26:	f001 fa73 	bl	800e210 <_Z11MicroPrintfPKcz>
 800cd2a:	2000      	movs	r0, #0
 800cd2c:	e7f1      	b.n	800cd12 <_ZN6tflite16MicroInterpreter5inputEj+0x4e>
 800cd2e:	f7ff ff87 	bl	800cc40 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800cd32:	f010 fe03 	bl	801d93c <__stack_chk_fail>
 800cd36:	2300      	movs	r3, #0
 800cd38:	681b      	ldr	r3, [r3, #0]
 800cd3a:	deff      	udf	#255	; 0xff
 800cd3c:	20011294 	.word	0x20011294
 800cd40:	08025ec0 	.word	0x08025ec0

0800cd44 <_ZN6tflite16MicroInterpreter6outputEj>:
 800cd44:	b510      	push	{r4, lr}
 800cd46:	6803      	ldr	r3, [r0, #0]
 800cd48:	4a1c      	ldr	r2, [pc, #112]	; (800cdbc <_ZN6tflite16MicroInterpreter6outputEj+0x78>)
 800cd4a:	b082      	sub	sp, #8
 800cd4c:	6812      	ldr	r2, [r2, #0]
 800cd4e:	9201      	str	r2, [sp, #4]
 800cd50:	f04f 0200 	mov.w	r2, #0
 800cd54:	681a      	ldr	r2, [r3, #0]
 800cd56:	1a9a      	subs	r2, r3, r2
 800cd58:	8814      	ldrh	r4, [r2, #0]
 800cd5a:	2c08      	cmp	r4, #8
 800cd5c:	d92b      	bls.n	800cdb6 <_ZN6tflite16MicroInterpreter6outputEj+0x72>
 800cd5e:	8912      	ldrh	r2, [r2, #8]
 800cd60:	b34a      	cbz	r2, 800cdb6 <_ZN6tflite16MicroInterpreter6outputEj+0x72>
 800cd62:	589c      	ldr	r4, [r3, r2]
 800cd64:	4413      	add	r3, r2
 800cd66:	191a      	adds	r2, r3, r4
 800cd68:	591b      	ldr	r3, [r3, r4]
 800cd6a:	b303      	cbz	r3, 800cdae <_ZN6tflite16MicroInterpreter6outputEj+0x6a>
 800cd6c:	6854      	ldr	r4, [r2, #4]
 800cd6e:	1d13      	adds	r3, r2, #4
 800cd70:	591a      	ldr	r2, [r3, r4]
 800cd72:	4423      	add	r3, r4
 800cd74:	1a9a      	subs	r2, r3, r2
 800cd76:	8814      	ldrh	r4, [r2, #0]
 800cd78:	2c08      	cmp	r4, #8
 800cd7a:	d91c      	bls.n	800cdb6 <_ZN6tflite16MicroInterpreter6outputEj+0x72>
 800cd7c:	8912      	ldrh	r2, [r2, #8]
 800cd7e:	b1d2      	cbz	r2, 800cdb6 <_ZN6tflite16MicroInterpreter6outputEj+0x72>
 800cd80:	589c      	ldr	r4, [r3, r2]
 800cd82:	4413      	add	r3, r2
 800cd84:	591a      	ldr	r2, [r3, r4]
 800cd86:	4291      	cmp	r1, r2
 800cd88:	d20c      	bcs.n	800cda4 <_ZN6tflite16MicroInterpreter6outputEj+0x60>
 800cd8a:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
 800cd8e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800cd92:	4b0a      	ldr	r3, [pc, #40]	; (800cdbc <_ZN6tflite16MicroInterpreter6outputEj+0x78>)
 800cd94:	681a      	ldr	r2, [r3, #0]
 800cd96:	9b01      	ldr	r3, [sp, #4]
 800cd98:	405a      	eors	r2, r3
 800cd9a:	f04f 0300 	mov.w	r3, #0
 800cd9e:	d108      	bne.n	800cdb2 <_ZN6tflite16MicroInterpreter6outputEj+0x6e>
 800cda0:	b002      	add	sp, #8
 800cda2:	bd10      	pop	{r4, pc}
 800cda4:	4806      	ldr	r0, [pc, #24]	; (800cdc0 <_ZN6tflite16MicroInterpreter6outputEj+0x7c>)
 800cda6:	f001 fa33 	bl	800e210 <_Z11MicroPrintfPKcz>
 800cdaa:	2000      	movs	r0, #0
 800cdac:	e7f1      	b.n	800cd92 <_ZN6tflite16MicroInterpreter6outputEj+0x4e>
 800cdae:	f7ff ff47 	bl	800cc40 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800cdb2:	f010 fdc3 	bl	801d93c <__stack_chk_fail>
 800cdb6:	2300      	movs	r3, #0
 800cdb8:	681b      	ldr	r3, [r3, #0]
 800cdba:	deff      	udf	#255	; 0xff
 800cdbc:	20011294 	.word	0x20011294
 800cdc0:	08025eec 	.word	0x08025eec

0800cdc4 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb>:
 800cdc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cdc8:	b085      	sub	sp, #20
 800cdca:	461e      	mov	r6, r3
 800cdcc:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
 800cdd0:	4b30      	ldr	r3, [pc, #192]	; (800ce94 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xd0>)
 800cdd2:	f89d b044 	ldrb.w	fp, [sp, #68]	; 0x44
 800cdd6:	6042      	str	r2, [r0, #4]
 800cdd8:	f100 0808 	add.w	r8, r0, #8
 800cddc:	4604      	mov	r4, r0
 800cdde:	6001      	str	r1, [r0, #0]
 800cde0:	460d      	mov	r5, r1
 800cde2:	2264      	movs	r2, #100	; 0x64
 800cde4:	2100      	movs	r1, #0
 800cde6:	4640      	mov	r0, r8
 800cde8:	681b      	ldr	r3, [r3, #0]
 800cdea:	9303      	str	r3, [sp, #12]
 800cdec:	f04f 0300 	mov.w	r3, #0
 800cdf0:	e9dd 970f 	ldrd	r9, r7, [sp, #60]	; 0x3c
 800cdf4:	f00f fe76 	bl	801cae4 <memset>
 800cdf8:	465a      	mov	r2, fp
 800cdfa:	4651      	mov	r1, sl
 800cdfc:	4630      	mov	r0, r6
 800cdfe:	f003 f91d 	bl	801003c <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE>
 800ce02:	f104 0670 	add.w	r6, r4, #112	; 0x70
 800ce06:	4603      	mov	r3, r0
 800ce08:	462a      	mov	r2, r5
 800ce0a:	f8cd 9000 	str.w	r9, [sp]
 800ce0e:	4641      	mov	r1, r8
 800ce10:	66e0      	str	r0, [r4, #108]	; 0x6c
 800ce12:	4630      	mov	r0, r6
 800ce14:	f001 f97a 	bl	800e10c <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE>
 800ce18:	4625      	mov	r5, r4
 800ce1a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ce1e:	f8a4 3090 	strh.w	r3, [r4, #144]	; 0x90
 800ce22:	f855 2ba0 	ldr.w	r2, [r5], #160
 800ce26:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
 800ce28:	2300      	movs	r3, #0
 800ce2a:	e9c4 3325 	strd	r3, r3, [r4, #148]	; 0x94
 800ce2e:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 800ce32:	4628      	mov	r0, r5
 800ce34:	4633      	mov	r3, r6
 800ce36:	f000 fcfd 	bl	800d834 <_ZN6tflite23MicroInterpreterContextC1EPNS_14MicroAllocatorEPKNS_5ModelEPNS_21MicroInterpreterGraphE>
 800ce3a:	2100      	movs	r1, #0
 800ce3c:	4628      	mov	r0, r5
 800ce3e:	f000 fd2f 	bl	800d8a0 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE>
 800ce42:	4b15      	ldr	r3, [pc, #84]	; (800ce98 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xd4>)
 800ce44:	4915      	ldr	r1, [pc, #84]	; (800ce9c <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xd8>)
 800ce46:	4a16      	ldr	r2, [pc, #88]	; (800cea0 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xdc>)
 800ce48:	61e3      	str	r3, [r4, #28]
 800ce4a:	4b16      	ldr	r3, [pc, #88]	; (800cea4 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xe0>)
 800ce4c:	64a3      	str	r3, [r4, #72]	; 0x48
 800ce4e:	e9c4 1216 	strd	r1, r2, [r4, #88]	; 0x58
 800ce52:	2300      	movs	r3, #0
 800ce54:	4a14      	ldr	r2, [pc, #80]	; (800cea8 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xe4>)
 800ce56:	f884 3091 	strb.w	r3, [r4, #145]	; 0x91
 800ce5a:	4814      	ldr	r0, [pc, #80]	; (800ceac <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xe8>)
 800ce5c:	4914      	ldr	r1, [pc, #80]	; (800ceb0 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xec>)
 800ce5e:	4b0d      	ldr	r3, [pc, #52]	; (800ce94 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xd0>)
 800ce60:	6165      	str	r5, [r4, #20]
 800ce62:	63e7      	str	r7, [r4, #60]	; 0x3c
 800ce64:	6320      	str	r0, [r4, #48]	; 0x30
 800ce66:	6421      	str	r1, [r4, #64]	; 0x40
 800ce68:	64e2      	str	r2, [r4, #76]	; 0x4c
 800ce6a:	681a      	ldr	r2, [r3, #0]
 800ce6c:	9b03      	ldr	r3, [sp, #12]
 800ce6e:	405a      	eors	r2, r3
 800ce70:	f04f 0300 	mov.w	r3, #0
 800ce74:	d103      	bne.n	800ce7e <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xba>
 800ce76:	4620      	mov	r0, r4
 800ce78:	b005      	add	sp, #20
 800ce7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce7e:	f010 fd5d 	bl	801d93c <__stack_chk_fail>
 800ce82:	4628      	mov	r0, r5
 800ce84:	f000 fb88 	bl	800d598 <_ZN6tflite23MicroInterpreterContextD1Ev>
 800ce88:	4630      	mov	r0, r6
 800ce8a:	f000 fd35 	bl	800d8f8 <_ZN6tflite21MicroInterpreterGraphD1Ev>
 800ce8e:	f00d feed 	bl	801ac6c <__cxa_end_cleanup>
 800ce92:	e7f9      	b.n	800ce88 <_ZN6tflite16MicroInterpreterC1EPKNS_5ModelERKNS_15MicroOpResolverEPhjPNS_22MicroResourceVariablesEPNS_22MicroProfilerInterfaceEb+0xc4>
 800ce94:	20011294 	.word	0x20011294
 800ce98:	0800cad1 	.word	0x0800cad1
 800ce9c:	0800cbad 	.word	0x0800cbad
 800cea0:	0800cbe1 	.word	0x0800cbe1
 800cea4:	0800cb41 	.word	0x0800cb41
 800cea8:	0800cb79 	.word	0x0800cb79
 800ceac:	0800cc71 	.word	0x0800cc71
 800ceb0:	0800cb0d 	.word	0x0800cb0d

0800ceb4 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv>:
 800ceb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceb8:	ed2d 8b02 	vpush	{d8}
 800cebc:	f100 0370 	add.w	r3, r0, #112	; 0x70
 800cec0:	b08d      	sub	sp, #52	; 0x34
 800cec2:	ee08 3a90 	vmov	s17, r3
 800cec6:	2300      	movs	r3, #0
 800cec8:	9309      	str	r3, [sp, #36]	; 0x24
 800ceca:	4ba6      	ldr	r3, [pc, #664]	; (800d164 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2b0>)
 800cecc:	4682      	mov	sl, r0
 800cece:	681b      	ldr	r3, [r3, #0]
 800ced0:	930b      	str	r3, [sp, #44]	; 0x2c
 800ced2:	f04f 0300 	mov.w	r3, #0
 800ced6:	ee18 0a90 	vmov	r0, s17
 800ceda:	f000 ffe3 	bl	800dea4 <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv>
 800cede:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800cee0:	4285      	cmp	r5, r0
 800cee2:	f280 8158 	bge.w	800d196 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2e2>
 800cee6:	f8da 2000 	ldr.w	r2, [sl]
 800ceea:	6813      	ldr	r3, [r2, #0]
 800ceec:	1ad3      	subs	r3, r2, r3
 800ceee:	8819      	ldrh	r1, [r3, #0]
 800cef0:	2908      	cmp	r1, #8
 800cef2:	f240 8117 	bls.w	800d124 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x270>
 800cef6:	8918      	ldrh	r0, [r3, #8]
 800cef8:	2800      	cmp	r0, #0
 800cefa:	f000 8158 	beq.w	800d1ae <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2fa>
 800cefe:	5814      	ldr	r4, [r2, r0]
 800cf00:	4410      	add	r0, r2
 800cf02:	1901      	adds	r1, r0, r4
 800cf04:	5900      	ldr	r0, [r0, r4]
 800cf06:	4285      	cmp	r5, r0
 800cf08:	f080 814f 	bcs.w	800d1aa <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2f6>
 800cf0c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 800cf0e:	88db      	ldrh	r3, [r3, #6]
 800cf10:	3104      	adds	r1, #4
 800cf12:	f851 0024 	ldr.w	r0, [r1, r4, lsl #2]
 800cf16:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800cf1a:	4401      	add	r1, r0
 800cf1c:	9105      	str	r1, [sp, #20]
 800cf1e:	b113      	cbz	r3, 800cf26 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x72>
 800cf20:	58d1      	ldr	r1, [r2, r3]
 800cf22:	4413      	add	r3, r2
 800cf24:	440b      	add	r3, r1
 800cf26:	f8da 006c 	ldr.w	r0, [sl, #108]	; 0x6c
 800cf2a:	9306      	str	r3, [sp, #24]
 800cf2c:	f003 fa06 	bl	801033c <_ZN6tflite14MicroAllocator23GetBuiltinDataAllocatorEv>
 800cf30:	4603      	mov	r3, r0
 800cf32:	9805      	ldr	r0, [sp, #20]
 800cf34:	ee08 3a10 	vmov	s16, r3
 800cf38:	f002 f822 	bl	800ef80 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE>
 800cf3c:	9008      	str	r0, [sp, #32]
 800cf3e:	2800      	cmp	r0, #0
 800cf40:	f000 80c8 	beq.w	800d0d4 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x220>
 800cf44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf46:	00db      	lsls	r3, r3, #3
 800cf48:	9300      	str	r3, [sp, #0]
 800cf4a:	9b06      	ldr	r3, [sp, #24]
 800cf4c:	3304      	adds	r3, #4
 800cf4e:	f04f 0b00 	mov.w	fp, #0
 800cf52:	9307      	str	r3, [sp, #28]
 800cf54:	9905      	ldr	r1, [sp, #20]
 800cf56:	680b      	ldr	r3, [r1, #0]
 800cf58:	1acb      	subs	r3, r1, r3
 800cf5a:	881a      	ldrh	r2, [r3, #0]
 800cf5c:	2a0a      	cmp	r2, #10
 800cf5e:	f240 80e1 	bls.w	800d124 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x270>
 800cf62:	895a      	ldrh	r2, [r3, #10]
 800cf64:	2a00      	cmp	r2, #0
 800cf66:	f000 80dd 	beq.w	800d124 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x270>
 800cf6a:	460b      	mov	r3, r1
 800cf6c:	5889      	ldr	r1, [r1, r2]
 800cf6e:	441a      	add	r2, r3
 800cf70:	1853      	adds	r3, r2, r1
 800cf72:	5852      	ldr	r2, [r2, r1]
 800cf74:	455a      	cmp	r2, fp
 800cf76:	f240 8110 	bls.w	800d19a <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2e6>
 800cf7a:	3304      	adds	r3, #4
 800cf7c:	eb03 058b 	add.w	r5, r3, fp, lsl #2
 800cf80:	f853 602b 	ldr.w	r6, [r3, fp, lsl #2]
 800cf84:	59ab      	ldr	r3, [r5, r6]
 800cf86:	19ac      	adds	r4, r5, r6
 800cf88:	1ae3      	subs	r3, r4, r3
 800cf8a:	881a      	ldrh	r2, [r3, #0]
 800cf8c:	2a04      	cmp	r2, #4
 800cf8e:	f240 80a5 	bls.w	800d0dc <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x228>
 800cf92:	889f      	ldrh	r7, [r3, #4]
 800cf94:	b107      	cbz	r7, 800cf98 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0xe4>
 800cf96:	59e7      	ldr	r7, [r4, r7]
 800cf98:	9b06      	ldr	r3, [sp, #24]
 800cf9a:	681b      	ldr	r3, [r3, #0]
 800cf9c:	42bb      	cmp	r3, r7
 800cf9e:	f240 80a3 	bls.w	800d0e8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x234>
 800cfa2:	9807      	ldr	r0, [sp, #28]
 800cfa4:	f8da 3080 	ldr.w	r3, [sl, #128]	; 0x80
 800cfa8:	9a00      	ldr	r2, [sp, #0]
 800cfaa:	212c      	movs	r1, #44	; 0x2c
 800cfac:	589a      	ldr	r2, [r3, r2]
 800cfae:	f850 3027 	ldr.w	r3, [r0, r7, lsl #2]
 800cfb2:	fb01 f80b 	mul.w	r8, r1, fp
 800cfb6:	eb00 0987 	add.w	r9, r0, r7, lsl #2
 800cfba:	4442      	add	r2, r8
 800cfbc:	4499      	add	r9, r3
 800cfbe:	f8da 1004 	ldr.w	r1, [sl, #4]
 800cfc2:	3228      	adds	r2, #40	; 0x28
 800cfc4:	4648      	mov	r0, r9
 800cfc6:	f001 f947 	bl	800e258 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration>
 800cfca:	2800      	cmp	r0, #0
 800cfcc:	f040 80b0 	bne.w	800d130 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x27c>
 800cfd0:	f8da 3080 	ldr.w	r3, [sl, #128]	; 0x80
 800cfd4:	9a00      	ldr	r2, [sp, #0]
 800cfd6:	589b      	ldr	r3, [r3, r2]
 800cfd8:	4443      	add	r3, r8
 800cfda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cfdc:	2b00      	cmp	r3, #0
 800cfde:	f000 80b9 	beq.w	800d154 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2a0>
 800cfe2:	695f      	ldr	r7, [r3, #20]
 800cfe4:	59ab      	ldr	r3, [r5, r6]
 800cfe6:	900a      	str	r0, [sp, #40]	; 0x28
 800cfe8:	1ae3      	subs	r3, r4, r3
 800cfea:	2f20      	cmp	r7, #32
 800cfec:	881a      	ldrh	r2, [r3, #0]
 800cfee:	f000 8083 	beq.w	800d0f8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x244>
 800cff2:	2a0e      	cmp	r2, #14
 800cff4:	d919      	bls.n	800d02a <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x176>
 800cff6:	89db      	ldrh	r3, [r3, #14]
 800cff8:	b1bb      	cbz	r3, 800d02a <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x176>
 800cffa:	2fce      	cmp	r7, #206	; 0xce
 800cffc:	bf96      	itet	ls
 800cffe:	4b5a      	ldrls	r3, [pc, #360]	; (800d168 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2b4>)
 800d000:	495a      	ldrhi	r1, [pc, #360]	; (800d16c <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2b8>)
 800d002:	f853 1027 	ldrls.w	r1, [r3, r7, lsl #2]
 800d006:	485a      	ldr	r0, [pc, #360]	; (800d170 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2bc>)
 800d008:	f001 f902 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d00c:	2201      	movs	r2, #1
 800d00e:	4b55      	ldr	r3, [pc, #340]	; (800d164 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2b0>)
 800d010:	6819      	ldr	r1, [r3, #0]
 800d012:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d014:	4059      	eors	r1, r3
 800d016:	f04f 0300 	mov.w	r3, #0
 800d01a:	f040 80c4 	bne.w	800d1a6 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2f2>
 800d01e:	4610      	mov	r0, r2
 800d020:	b00d      	add	sp, #52	; 0x34
 800d022:	ecbd 8b02 	vpop	{d8}
 800d026:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d02a:	f8da 0004 	ldr.w	r0, [sl, #4]
 800d02e:	6803      	ldr	r3, [r0, #0]
 800d030:	4639      	mov	r1, r7
 800d032:	689b      	ldr	r3, [r3, #8]
 800d034:	4798      	blx	r3
 800d036:	2800      	cmp	r0, #0
 800d038:	f000 80a2 	beq.w	800d180 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2cc>
 800d03c:	ee18 2a10 	vmov	r2, s16
 800d040:	ab0a      	add	r3, sp, #40	; 0x28
 800d042:	4621      	mov	r1, r4
 800d044:	f001 f9ee 	bl	800e424 <_ZN6tflite24CallBuiltinParseFunctionEPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvES3_S7_S9_>
 800d048:	2800      	cmp	r0, #0
 800d04a:	f040 8089 	bne.w	800d160 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2ac>
 800d04e:	59ab      	ldr	r3, [r5, r6]
 800d050:	1ae3      	subs	r3, r4, r3
 800d052:	881a      	ldrh	r2, [r3, #0]
 800d054:	f04f 0900 	mov.w	r9, #0
 800d058:	2a06      	cmp	r2, #6
 800d05a:	f8cd 9010 	str.w	r9, [sp, #16]
 800d05e:	d856      	bhi.n	800d10e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x25a>
 800d060:	4648      	mov	r0, r9
 800d062:	f001 fff5 	bl	800f050 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE>
 800d066:	59ab      	ldr	r3, [r5, r6]
 800d068:	9001      	str	r0, [sp, #4]
 800d06a:	1ae3      	subs	r3, r4, r3
 800d06c:	881a      	ldrh	r2, [r3, #0]
 800d06e:	2a08      	cmp	r2, #8
 800d070:	d940      	bls.n	800d0f4 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x240>
 800d072:	8918      	ldrh	r0, [r3, #8]
 800d074:	b110      	cbz	r0, 800d07c <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x1c8>
 800d076:	5823      	ldr	r3, [r4, r0]
 800d078:	4420      	add	r0, r4
 800d07a:	4418      	add	r0, r3
 800d07c:	f001 ffe8 	bl	800f050 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE>
 800d080:	9a00      	ldr	r2, [sp, #0]
 800d082:	f8da 3080 	ldr.w	r3, [sl, #128]	; 0x80
 800d086:	9002      	str	r0, [sp, #8]
 800d088:	589b      	ldr	r3, [r3, r2]
 800d08a:	9303      	str	r3, [sp, #12]
 800d08c:	eb03 0708 	add.w	r7, r3, r8
 800d090:	2228      	movs	r2, #40	; 0x28
 800d092:	2100      	movs	r1, #0
 800d094:	4638      	mov	r0, r7
 800d096:	f00f fd25 	bl	801cae4 <memset>
 800d09a:	9b03      	ldr	r3, [sp, #12]
 800d09c:	9a01      	ldr	r2, [sp, #4]
 800d09e:	f843 2008 	str.w	r2, [r3, r8]
 800d0a2:	59ab      	ldr	r3, [r5, r6]
 800d0a4:	9a02      	ldr	r2, [sp, #8]
 800d0a6:	607a      	str	r2, [r7, #4]
 800d0a8:	9a04      	ldr	r2, [sp, #16]
 800d0aa:	1ae3      	subs	r3, r4, r3
 800d0ac:	e9c7 2906 	strd	r2, r9, [r7, #24]
 800d0b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d0b2:	617a      	str	r2, [r7, #20]
 800d0b4:	881a      	ldrh	r2, [r3, #0]
 800d0b6:	2a14      	cmp	r2, #20
 800d0b8:	d906      	bls.n	800d0c8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x214>
 800d0ba:	8a9b      	ldrh	r3, [r3, #20]
 800d0bc:	18e0      	adds	r0, r4, r3
 800d0be:	b11b      	cbz	r3, 800d0c8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x214>
 800d0c0:	58e3      	ldr	r3, [r4, r3]
 800d0c2:	58c2      	ldr	r2, [r0, r3]
 800d0c4:	4418      	add	r0, r3
 800d0c6:	bb4a      	cbnz	r2, 800d11c <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x268>
 800d0c8:	9b08      	ldr	r3, [sp, #32]
 800d0ca:	f10b 0b01 	add.w	fp, fp, #1
 800d0ce:	455b      	cmp	r3, fp
 800d0d0:	f47f af40 	bne.w	800cf54 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0xa0>
 800d0d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d0d6:	3301      	adds	r3, #1
 800d0d8:	9309      	str	r3, [sp, #36]	; 0x24
 800d0da:	e6fc      	b.n	800ced6 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x22>
 800d0dc:	9b06      	ldr	r3, [sp, #24]
 800d0de:	681b      	ldr	r3, [r3, #0]
 800d0e0:	2700      	movs	r7, #0
 800d0e2:	42bb      	cmp	r3, r7
 800d0e4:	f63f af5d 	bhi.w	800cfa2 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0xee>
 800d0e8:	4822      	ldr	r0, [pc, #136]	; (800d174 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2c0>)
 800d0ea:	4639      	mov	r1, r7
 800d0ec:	f001 f890 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d0f0:	2201      	movs	r2, #1
 800d0f2:	e78c      	b.n	800d00e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x15a>
 800d0f4:	2000      	movs	r0, #0
 800d0f6:	e7c1      	b.n	800d07c <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x1c8>
 800d0f8:	2a0e      	cmp	r2, #14
 800d0fa:	d9ab      	bls.n	800d054 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x1a0>
 800d0fc:	89da      	ldrh	r2, [r3, #14]
 800d0fe:	18a1      	adds	r1, r4, r2
 800d100:	b19a      	cbz	r2, 800d12a <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x276>
 800d102:	58a2      	ldr	r2, [r4, r2]
 800d104:	1888      	adds	r0, r1, r2
 800d106:	f851 9002 	ldr.w	r9, [r1, r2]
 800d10a:	1d02      	adds	r2, r0, #4
 800d10c:	9204      	str	r2, [sp, #16]
 800d10e:	88d8      	ldrh	r0, [r3, #6]
 800d110:	2800      	cmp	r0, #0
 800d112:	d0a6      	beq.n	800d062 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x1ae>
 800d114:	5823      	ldr	r3, [r4, r0]
 800d116:	4420      	add	r0, r4
 800d118:	4418      	add	r0, r3
 800d11a:	e7a2      	b.n	800d062 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x1ae>
 800d11c:	f001 ff98 	bl	800f050 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE>
 800d120:	60b8      	str	r0, [r7, #8]
 800d122:	e7d1      	b.n	800d0c8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x214>
 800d124:	2300      	movs	r3, #0
 800d126:	681b      	ldr	r3, [r3, #0]
 800d128:	deff      	udf	#255	; 0xff
 800d12a:	4691      	mov	r9, r2
 800d12c:	9204      	str	r2, [sp, #16]
 800d12e:	e7ee      	b.n	800d10e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x25a>
 800d130:	9000      	str	r0, [sp, #0]
 800d132:	4648      	mov	r0, r9
 800d134:	f001 fa06 	bl	800e544 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE>
 800d138:	28ce      	cmp	r0, #206	; 0xce
 800d13a:	bf98      	it	ls
 800d13c:	4b0a      	ldrls	r3, [pc, #40]	; (800d168 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2b4>)
 800d13e:	9a00      	ldr	r2, [sp, #0]
 800d140:	bf94      	ite	ls
 800d142:	f853 1020 	ldrls.w	r1, [r3, r0, lsl #2]
 800d146:	4909      	ldrhi	r1, [pc, #36]	; (800d16c <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2b8>)
 800d148:	480b      	ldr	r0, [pc, #44]	; (800d178 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2c4>)
 800d14a:	9200      	str	r2, [sp, #0]
 800d14c:	f001 f860 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d150:	9a00      	ldr	r2, [sp, #0]
 800d152:	e75c      	b.n	800d00e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x15a>
 800d154:	4809      	ldr	r0, [pc, #36]	; (800d17c <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x2c8>)
 800d156:	4639      	mov	r1, r7
 800d158:	f001 f85a 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d15c:	2201      	movs	r2, #1
 800d15e:	e756      	b.n	800d00e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x15a>
 800d160:	4602      	mov	r2, r0
 800d162:	e754      	b.n	800d00e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x15a>
 800d164:	20011294 	.word	0x20011294
 800d168:	080209e4 	.word	0x080209e4
 800d16c:	08024730 	.word	0x08024730
 800d170:	08026088 	.word	0x08026088
 800d174:	08026008 	.word	0x08026008
 800d178:	08026034 	.word	0x08026034
 800d17c:	08026064 	.word	0x08026064
 800d180:	2fce      	cmp	r7, #206	; 0xce
 800d182:	bf96      	itet	ls
 800d184:	4b0b      	ldrls	r3, [pc, #44]	; (800d1b4 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x300>)
 800d186:	490c      	ldrhi	r1, [pc, #48]	; (800d1b8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x304>)
 800d188:	f853 1027 	ldrls.w	r1, [r3, r7, lsl #2]
 800d18c:	480b      	ldr	r0, [pc, #44]	; (800d1bc <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x308>)
 800d18e:	f001 f83f 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d192:	2201      	movs	r2, #1
 800d194:	e73b      	b.n	800d00e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x15a>
 800d196:	2200      	movs	r2, #0
 800d198:	e739      	b.n	800d00e <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x15a>
 800d19a:	4b09      	ldr	r3, [pc, #36]	; (800d1c0 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x30c>)
 800d19c:	4a09      	ldr	r2, [pc, #36]	; (800d1c4 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x310>)
 800d19e:	480a      	ldr	r0, [pc, #40]	; (800d1c8 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv+0x314>)
 800d1a0:	21b0      	movs	r1, #176	; 0xb0
 800d1a2:	f00f fc0d 	bl	801c9c0 <__assert_func>
 800d1a6:	f010 fbc9 	bl	801d93c <__stack_chk_fail>
 800d1aa:	f7ff fd49 	bl	800cc40 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800d1ae:	6803      	ldr	r3, [r0, #0]
 800d1b0:	deff      	udf	#255	; 0xff
 800d1b2:	bf00      	nop
 800d1b4:	080209e4 	.word	0x080209e4
 800d1b8:	08024730 	.word	0x08024730
 800d1bc:	080260d0 	.word	0x080260d0
 800d1c0:	08024734 	.word	0x08024734
 800d1c4:	08025f18 	.word	0x08025f18
 800d1c8:	08024804 	.word	0x08024804

0800d1cc <_ZN6tflite16MicroInterpreter15AllocateTensorsEv>:
 800d1cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d1d0:	4bb1      	ldr	r3, [pc, #708]	; (800d498 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2cc>)
 800d1d2:	6801      	ldr	r1, [r0, #0]
 800d1d4:	b084      	sub	sp, #16
 800d1d6:	4604      	mov	r4, r0
 800d1d8:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800d1da:	681b      	ldr	r3, [r3, #0]
 800d1dc:	9303      	str	r3, [sp, #12]
 800d1de:	f04f 0300 	mov.w	r3, #0
 800d1e2:	f002 ff69 	bl	80100b8 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE>
 800d1e6:	2800      	cmp	r0, #0
 800d1e8:	f000 80b9 	beq.w	800d35e <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x192>
 800d1ec:	f104 0670 	add.w	r6, r4, #112	; 0x70
 800d1f0:	4601      	mov	r1, r0
 800d1f2:	4630      	mov	r0, r6
 800d1f4:	f000 ffba 	bl	800e16c <_ZN6tflite21MicroInterpreterGraph22SetSubgraphAllocationsEPNS_19SubgraphAllocationsE>
 800d1f8:	4620      	mov	r0, r4
 800d1fa:	f7ff fe5b 	bl	800ceb4 <_ZN6tflite16MicroInterpreter44PrepareNodeAndRegistrationDataFromFlatbufferEv>
 800d1fe:	4605      	mov	r5, r0
 800d200:	b158      	cbz	r0, 800d21a <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x4e>
 800d202:	4ba5      	ldr	r3, [pc, #660]	; (800d498 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2cc>)
 800d204:	681a      	ldr	r2, [r3, #0]
 800d206:	9b03      	ldr	r3, [sp, #12]
 800d208:	405a      	eors	r2, r3
 800d20a:	f04f 0300 	mov.w	r3, #0
 800d20e:	f040 816f 	bne.w	800d4f0 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x324>
 800d212:	4628      	mov	r0, r5
 800d214:	b004      	add	sp, #16
 800d216:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d21a:	f104 07a0 	add.w	r7, r4, #160	; 0xa0
 800d21e:	4601      	mov	r1, r0
 800d220:	4638      	mov	r0, r7
 800d222:	f000 fb3d 	bl	800d8a0 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE>
 800d226:	4630      	mov	r0, r6
 800d228:	f000 fb96 	bl	800d958 <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv>
 800d22c:	4605      	mov	r5, r0
 800d22e:	2800      	cmp	r0, #0
 800d230:	d1e7      	bne.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d232:	2101      	movs	r1, #1
 800d234:	4638      	mov	r0, r7
 800d236:	f000 fb33 	bl	800d8a0 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE>
 800d23a:	4630      	mov	r0, r6
 800d23c:	f000 fd34 	bl	800dca8 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv>
 800d240:	4605      	mov	r5, r0
 800d242:	2800      	cmp	r0, #0
 800d244:	d1dd      	bne.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d246:	2102      	movs	r1, #2
 800d248:	4638      	mov	r0, r7
 800d24a:	f000 fb29 	bl	800d8a0 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE>
 800d24e:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 800d252:	6821      	ldr	r1, [r4, #0]
 800d254:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d256:	f104 0394 	add.w	r3, r4, #148	; 0x94
 800d25a:	f002 ff97 	bl	801018c <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE>
 800d25e:	4605      	mov	r5, r0
 800d260:	2800      	cmp	r0, #0
 800d262:	d1ce      	bne.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d264:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
 800d268:	4638      	mov	r0, r7
 800d26a:	f000 fb03 	bl	800d874 <_ZN6tflite23MicroInterpreterContext23SetScratchBufferHandlesEPNS_19ScratchBufferHandleE>
 800d26e:	6823      	ldr	r3, [r4, #0]
 800d270:	681a      	ldr	r2, [r3, #0]
 800d272:	1a9a      	subs	r2, r3, r2
 800d274:	8811      	ldrh	r1, [r2, #0]
 800d276:	2908      	cmp	r1, #8
 800d278:	f240 813c 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d27c:	8912      	ldrh	r2, [r2, #8]
 800d27e:	2a00      	cmp	r2, #0
 800d280:	f000 8138 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d284:	5899      	ldr	r1, [r3, r2]
 800d286:	4413      	add	r3, r2
 800d288:	185a      	adds	r2, r3, r1
 800d28a:	585b      	ldr	r3, [r3, r1]
 800d28c:	2b00      	cmp	r3, #0
 800d28e:	f000 812d 	beq.w	800d4ec <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x320>
 800d292:	6851      	ldr	r1, [r2, #4]
 800d294:	1d13      	adds	r3, r2, #4
 800d296:	585a      	ldr	r2, [r3, r1]
 800d298:	440b      	add	r3, r1
 800d29a:	1a9a      	subs	r2, r3, r2
 800d29c:	8811      	ldrh	r1, [r2, #0]
 800d29e:	2906      	cmp	r1, #6
 800d2a0:	f240 8128 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d2a4:	88d2      	ldrh	r2, [r2, #6]
 800d2a6:	2a00      	cmp	r2, #0
 800d2a8:	f000 8124 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d2ac:	5899      	ldr	r1, [r3, r2]
 800d2ae:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d2b0:	4413      	add	r3, r2
 800d2b2:	5859      	ldr	r1, [r3, r1]
 800d2b4:	6803      	ldr	r3, [r0, #0]
 800d2b6:	0089      	lsls	r1, r1, #2
 800d2b8:	69db      	ldr	r3, [r3, #28]
 800d2ba:	4798      	blx	r3
 800d2bc:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800d2c0:	2800      	cmp	r0, #0
 800d2c2:	f000 80c6 	beq.w	800d452 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x286>
 800d2c6:	2500      	movs	r5, #0
 800d2c8:	46a8      	mov	r8, r5
 800d2ca:	e000      	b.n	800d2ce <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x102>
 800d2cc:	3501      	adds	r5, #1
 800d2ce:	6821      	ldr	r1, [r4, #0]
 800d2d0:	680b      	ldr	r3, [r1, #0]
 800d2d2:	1acb      	subs	r3, r1, r3
 800d2d4:	881a      	ldrh	r2, [r3, #0]
 800d2d6:	2a08      	cmp	r2, #8
 800d2d8:	f240 810c 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d2dc:	891a      	ldrh	r2, [r3, #8]
 800d2de:	2a00      	cmp	r2, #0
 800d2e0:	f000 8108 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d2e4:	5888      	ldr	r0, [r1, r2]
 800d2e6:	440a      	add	r2, r1
 800d2e8:	1813      	adds	r3, r2, r0
 800d2ea:	5812      	ldr	r2, [r2, r0]
 800d2ec:	2a00      	cmp	r2, #0
 800d2ee:	f000 80fd 	beq.w	800d4ec <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x320>
 800d2f2:	685a      	ldr	r2, [r3, #4]
 800d2f4:	3304      	adds	r3, #4
 800d2f6:	eb03 0c02 	add.w	ip, r3, r2
 800d2fa:	589b      	ldr	r3, [r3, r2]
 800d2fc:	ebac 0303 	sub.w	r3, ip, r3
 800d300:	f8b3 e000 	ldrh.w	lr, [r3]
 800d304:	f1be 0f06 	cmp.w	lr, #6
 800d308:	f240 80f4 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d30c:	88d8      	ldrh	r0, [r3, #6]
 800d30e:	2800      	cmp	r0, #0
 800d310:	f000 80f0 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d314:	f85c 9000 	ldr.w	r9, [ip, r0]
 800d318:	4460      	add	r0, ip
 800d31a:	eb00 0209 	add.w	r2, r0, r9
 800d31e:	f850 0009 	ldr.w	r0, [r0, r9]
 800d322:	4285      	cmp	r5, r0
 800d324:	d223      	bcs.n	800d36e <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x1a2>
 800d326:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d328:	f8d4 9098 	ldr.w	r9, [r4, #152]	; 0x98
 800d32c:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800d330:	6802      	ldr	r2, [r0, #0]
 800d332:	685b      	ldr	r3, [r3, #4]
 800d334:	f8cd 8000 	str.w	r8, [sp]
 800d338:	f8d2 a000 	ldr.w	sl, [r2]
 800d33c:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 800d340:	47d0      	blx	sl
 800d342:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 800d346:	f849 0025 	str.w	r0, [r9, r5, lsl #2]
 800d34a:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800d34e:	2b00      	cmp	r3, #0
 800d350:	d1bc      	bne.n	800d2cc <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x100>
 800d352:	4629      	mov	r1, r5
 800d354:	4851      	ldr	r0, [pc, #324]	; (800d49c <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2d0>)
 800d356:	f000 ff5b 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d35a:	2501      	movs	r5, #1
 800d35c:	e751      	b.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d35e:	4850      	ldr	r0, [pc, #320]	; (800d4a0 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2d4>)
 800d360:	f000 ff56 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d364:	2001      	movs	r0, #1
 800d366:	f884 0091 	strb.w	r0, [r4, #145]	; 0x91
 800d36a:	4605      	mov	r5, r0
 800d36c:	e749      	b.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d36e:	f1be 0f08 	cmp.w	lr, #8
 800d372:	f240 80bf 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d376:	891b      	ldrh	r3, [r3, #8]
 800d378:	2b00      	cmp	r3, #0
 800d37a:	f000 80bb 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d37e:	f85c 2003 	ldr.w	r2, [ip, r3]
 800d382:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d384:	449c      	add	ip, r3
 800d386:	6803      	ldr	r3, [r0, #0]
 800d388:	f85c 1002 	ldr.w	r1, [ip, r2]
 800d38c:	69db      	ldr	r3, [r3, #28]
 800d38e:	0089      	lsls	r1, r1, #2
 800d390:	4798      	blx	r3
 800d392:	f8c4 009c 	str.w	r0, [r4, #156]	; 0x9c
 800d396:	2800      	cmp	r0, #0
 800d398:	f000 8088 	beq.w	800d4ac <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2e0>
 800d39c:	2500      	movs	r5, #0
 800d39e:	46a8      	mov	r8, r5
 800d3a0:	e000      	b.n	800d3a4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x1d8>
 800d3a2:	3501      	adds	r5, #1
 800d3a4:	6821      	ldr	r1, [r4, #0]
 800d3a6:	680b      	ldr	r3, [r1, #0]
 800d3a8:	1acb      	subs	r3, r1, r3
 800d3aa:	881a      	ldrh	r2, [r3, #0]
 800d3ac:	2a08      	cmp	r2, #8
 800d3ae:	f240 80a1 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d3b2:	891a      	ldrh	r2, [r3, #8]
 800d3b4:	2a00      	cmp	r2, #0
 800d3b6:	f000 809d 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d3ba:	5888      	ldr	r0, [r1, r2]
 800d3bc:	440a      	add	r2, r1
 800d3be:	1813      	adds	r3, r2, r0
 800d3c0:	5812      	ldr	r2, [r2, r0]
 800d3c2:	2a00      	cmp	r2, #0
 800d3c4:	f000 8092 	beq.w	800d4ec <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x320>
 800d3c8:	6858      	ldr	r0, [r3, #4]
 800d3ca:	3304      	adds	r3, #4
 800d3cc:	181a      	adds	r2, r3, r0
 800d3ce:	581b      	ldr	r3, [r3, r0]
 800d3d0:	1ad3      	subs	r3, r2, r3
 800d3d2:	8818      	ldrh	r0, [r3, #0]
 800d3d4:	2808      	cmp	r0, #8
 800d3d6:	f240 808d 	bls.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d3da:	891b      	ldrh	r3, [r3, #8]
 800d3dc:	2b00      	cmp	r3, #0
 800d3de:	f000 8089 	beq.w	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d3e2:	58d0      	ldr	r0, [r2, r3]
 800d3e4:	441a      	add	r2, r3
 800d3e6:	1813      	adds	r3, r2, r0
 800d3e8:	5812      	ldr	r2, [r2, r0]
 800d3ea:	4295      	cmp	r5, r2
 800d3ec:	d21b      	bcs.n	800d426 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x25a>
 800d3ee:	6ee0      	ldr	r0, [r4, #108]	; 0x6c
 800d3f0:	f8d4 909c 	ldr.w	r9, [r4, #156]	; 0x9c
 800d3f4:	6802      	ldr	r2, [r0, #0]
 800d3f6:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 800d3fa:	685b      	ldr	r3, [r3, #4]
 800d3fc:	f8cd 8000 	str.w	r8, [sp]
 800d400:	f8d2 a000 	ldr.w	sl, [r2]
 800d404:	f8d4 2080 	ldr.w	r2, [r4, #128]	; 0x80
 800d408:	47d0      	blx	sl
 800d40a:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
 800d40e:	f849 0025 	str.w	r0, [r9, r5, lsl #2]
 800d412:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800d416:	2b00      	cmp	r3, #0
 800d418:	d1c3      	bne.n	800d3a2 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x1d6>
 800d41a:	4629      	mov	r1, r5
 800d41c:	4821      	ldr	r0, [pc, #132]	; (800d4a4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2d8>)
 800d41e:	f000 fef7 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d422:	2501      	movs	r5, #1
 800d424:	e6ed      	b.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d426:	4630      	mov	r0, r6
 800d428:	f000 fae2 	bl	800d9f0 <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv>
 800d42c:	4605      	mov	r5, r0
 800d42e:	2800      	cmp	r0, #0
 800d430:	f47f aee7 	bne.w	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d434:	4630      	mov	r0, r6
 800d436:	f000 fb8b 	bl	800db50 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv>
 800d43a:	4605      	mov	r5, r0
 800d43c:	2800      	cmp	r0, #0
 800d43e:	f47f aee0 	bne.w	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d442:	2301      	movs	r3, #1
 800d444:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 800d448:	2103      	movs	r1, #3
 800d44a:	4638      	mov	r0, r7
 800d44c:	f000 fa28 	bl	800d8a0 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE>
 800d450:	e6d7      	b.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d452:	6822      	ldr	r2, [r4, #0]
 800d454:	6813      	ldr	r3, [r2, #0]
 800d456:	1ad3      	subs	r3, r2, r3
 800d458:	8819      	ldrh	r1, [r3, #0]
 800d45a:	2908      	cmp	r1, #8
 800d45c:	d94a      	bls.n	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d45e:	891b      	ldrh	r3, [r3, #8]
 800d460:	2b00      	cmp	r3, #0
 800d462:	d047      	beq.n	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d464:	58d1      	ldr	r1, [r2, r3]
 800d466:	441a      	add	r2, r3
 800d468:	1853      	adds	r3, r2, r1
 800d46a:	5852      	ldr	r2, [r2, r1]
 800d46c:	2a00      	cmp	r2, #0
 800d46e:	d03d      	beq.n	800d4ec <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x320>
 800d470:	6859      	ldr	r1, [r3, #4]
 800d472:	3304      	adds	r3, #4
 800d474:	185a      	adds	r2, r3, r1
 800d476:	585b      	ldr	r3, [r3, r1]
 800d478:	1ad3      	subs	r3, r2, r3
 800d47a:	8819      	ldrh	r1, [r3, #0]
 800d47c:	2906      	cmp	r1, #6
 800d47e:	d939      	bls.n	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d480:	88db      	ldrh	r3, [r3, #6]
 800d482:	2b00      	cmp	r3, #0
 800d484:	d036      	beq.n	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d486:	58d1      	ldr	r1, [r2, r3]
 800d488:	4807      	ldr	r0, [pc, #28]	; (800d4a8 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x2dc>)
 800d48a:	441a      	add	r2, r3
 800d48c:	2501      	movs	r5, #1
 800d48e:	5851      	ldr	r1, [r2, r1]
 800d490:	0089      	lsls	r1, r1, #2
 800d492:	f000 febd 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d496:	e6b4      	b.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d498:	20011294 	.word	0x20011294
 800d49c:	08026160 	.word	0x08026160
 800d4a0:	080260f0 	.word	0x080260f0
 800d4a4:	080261d4 	.word	0x080261d4
 800d4a8:	08026114 	.word	0x08026114
 800d4ac:	6823      	ldr	r3, [r4, #0]
 800d4ae:	681a      	ldr	r2, [r3, #0]
 800d4b0:	1a9a      	subs	r2, r3, r2
 800d4b2:	8811      	ldrh	r1, [r2, #0]
 800d4b4:	2908      	cmp	r1, #8
 800d4b6:	d91d      	bls.n	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d4b8:	8912      	ldrh	r2, [r2, #8]
 800d4ba:	b1da      	cbz	r2, 800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d4bc:	5899      	ldr	r1, [r3, r2]
 800d4be:	441a      	add	r2, r3
 800d4c0:	1853      	adds	r3, r2, r1
 800d4c2:	5852      	ldr	r2, [r2, r1]
 800d4c4:	b192      	cbz	r2, 800d4ec <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x320>
 800d4c6:	6859      	ldr	r1, [r3, #4]
 800d4c8:	3304      	adds	r3, #4
 800d4ca:	185a      	adds	r2, r3, r1
 800d4cc:	585b      	ldr	r3, [r3, r1]
 800d4ce:	1ad3      	subs	r3, r2, r3
 800d4d0:	8819      	ldrh	r1, [r3, #0]
 800d4d2:	2908      	cmp	r1, #8
 800d4d4:	d90e      	bls.n	800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d4d6:	891b      	ldrh	r3, [r3, #8]
 800d4d8:	b163      	cbz	r3, 800d4f4 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x328>
 800d4da:	58d1      	ldr	r1, [r2, r3]
 800d4dc:	4807      	ldr	r0, [pc, #28]	; (800d4fc <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x330>)
 800d4de:	441a      	add	r2, r3
 800d4e0:	2501      	movs	r5, #1
 800d4e2:	5851      	ldr	r1, [r2, r1]
 800d4e4:	0089      	lsls	r1, r1, #2
 800d4e6:	f000 fe93 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d4ea:	e68a      	b.n	800d202 <_ZN6tflite16MicroInterpreter15AllocateTensorsEv+0x36>
 800d4ec:	f7ff fba8 	bl	800cc40 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800d4f0:	f010 fa24 	bl	801d93c <__stack_chk_fail>
 800d4f4:	2300      	movs	r3, #0
 800d4f6:	681b      	ldr	r3, [r3, #0]
 800d4f8:	deff      	udf	#255	; 0xff
 800d4fa:	bf00      	nop
 800d4fc:	08026188 	.word	0x08026188

0800d500 <_ZN6tflite16MicroInterpreter6InvokeEv>:
 800d500:	b510      	push	{r4, lr}
 800d502:	4b18      	ldr	r3, [pc, #96]	; (800d564 <_ZN6tflite16MicroInterpreter6InvokeEv+0x64>)
 800d504:	b082      	sub	sp, #8
 800d506:	681b      	ldr	r3, [r3, #0]
 800d508:	9301      	str	r3, [sp, #4]
 800d50a:	f04f 0300 	mov.w	r3, #0
 800d50e:	f890 3091 	ldrb.w	r3, [r0, #145]	; 0x91
 800d512:	b9fb      	cbnz	r3, 800d554 <_ZN6tflite16MicroInterpreter6InvokeEv+0x54>
 800d514:	f890 3090 	ldrb.w	r3, [r0, #144]	; 0x90
 800d518:	4604      	mov	r4, r0
 800d51a:	b173      	cbz	r3, 800d53a <_ZN6tflite16MicroInterpreter6InvokeEv+0x3a>
 800d51c:	4b11      	ldr	r3, [pc, #68]	; (800d564 <_ZN6tflite16MicroInterpreter6InvokeEv+0x64>)
 800d51e:	681a      	ldr	r2, [r3, #0]
 800d520:	9b01      	ldr	r3, [sp, #4]
 800d522:	405a      	eors	r2, r3
 800d524:	f04f 0300 	mov.w	r3, #0
 800d528:	d119      	bne.n	800d55e <_ZN6tflite16MicroInterpreter6InvokeEv+0x5e>
 800d52a:	2100      	movs	r1, #0
 800d52c:	f104 0070 	add.w	r0, r4, #112	; 0x70
 800d530:	b002      	add	sp, #8
 800d532:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d536:	f000 bc1d 	b.w	800dd74 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi>
 800d53a:	f7ff fe47 	bl	800d1cc <_ZN6tflite16MicroInterpreter15AllocateTensorsEv>
 800d53e:	2800      	cmp	r0, #0
 800d540:	d0ec      	beq.n	800d51c <_ZN6tflite16MicroInterpreter6InvokeEv+0x1c>
 800d542:	4b08      	ldr	r3, [pc, #32]	; (800d564 <_ZN6tflite16MicroInterpreter6InvokeEv+0x64>)
 800d544:	681a      	ldr	r2, [r3, #0]
 800d546:	9b01      	ldr	r3, [sp, #4]
 800d548:	405a      	eors	r2, r3
 800d54a:	f04f 0300 	mov.w	r3, #0
 800d54e:	d106      	bne.n	800d55e <_ZN6tflite16MicroInterpreter6InvokeEv+0x5e>
 800d550:	b002      	add	sp, #8
 800d552:	bd10      	pop	{r4, pc}
 800d554:	4804      	ldr	r0, [pc, #16]	; (800d568 <_ZN6tflite16MicroInterpreter6InvokeEv+0x68>)
 800d556:	f000 fe5b 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d55a:	2001      	movs	r0, #1
 800d55c:	e7f1      	b.n	800d542 <_ZN6tflite16MicroInterpreter6InvokeEv+0x42>
 800d55e:	f010 f9ed 	bl	801d93c <__stack_chk_fail>
 800d562:	bf00      	nop
 800d564:	20011294 	.word	0x20011294
 800d568:	080261fc 	.word	0x080261fc

0800d56c <_ZN6tflite23MicroInterpreterContext5graphEv>:
 800d56c:	b500      	push	{lr}
 800d56e:	4b09      	ldr	r3, [pc, #36]	; (800d594 <_ZN6tflite23MicroInterpreterContext5graphEv+0x28>)
 800d570:	6880      	ldr	r0, [r0, #8]
 800d572:	b083      	sub	sp, #12
 800d574:	681b      	ldr	r3, [r3, #0]
 800d576:	9301      	str	r3, [sp, #4]
 800d578:	f04f 0300 	mov.w	r3, #0
 800d57c:	4b05      	ldr	r3, [pc, #20]	; (800d594 <_ZN6tflite23MicroInterpreterContext5graphEv+0x28>)
 800d57e:	681a      	ldr	r2, [r3, #0]
 800d580:	9b01      	ldr	r3, [sp, #4]
 800d582:	405a      	eors	r2, r3
 800d584:	f04f 0300 	mov.w	r3, #0
 800d588:	d102      	bne.n	800d590 <_ZN6tflite23MicroInterpreterContext5graphEv+0x24>
 800d58a:	b003      	add	sp, #12
 800d58c:	f85d fb04 	ldr.w	pc, [sp], #4
 800d590:	f010 f9d4 	bl	801d93c <__stack_chk_fail>
 800d594:	20011294 	.word	0x20011294

0800d598 <_ZN6tflite23MicroInterpreterContextD1Ev>:
 800d598:	b500      	push	{lr}
 800d59a:	4b09      	ldr	r3, [pc, #36]	; (800d5c0 <_ZN6tflite23MicroInterpreterContextD1Ev+0x28>)
 800d59c:	b083      	sub	sp, #12
 800d59e:	681b      	ldr	r3, [r3, #0]
 800d5a0:	9301      	str	r3, [sp, #4]
 800d5a2:	f04f 0300 	mov.w	r3, #0
 800d5a6:	4b06      	ldr	r3, [pc, #24]	; (800d5c0 <_ZN6tflite23MicroInterpreterContextD1Ev+0x28>)
 800d5a8:	681a      	ldr	r2, [r3, #0]
 800d5aa:	9b01      	ldr	r3, [sp, #4]
 800d5ac:	405a      	eors	r2, r3
 800d5ae:	f04f 0300 	mov.w	r3, #0
 800d5b2:	d102      	bne.n	800d5ba <_ZN6tflite23MicroInterpreterContextD1Ev+0x22>
 800d5b4:	b003      	add	sp, #12
 800d5b6:	f85d fb04 	ldr.w	pc, [sp], #4
 800d5ba:	f010 f9bf 	bl	801d93c <__stack_chk_fail>
 800d5be:	bf00      	nop
 800d5c0:	20011294 	.word	0x20011294

0800d5c4 <_ZN6tflite23MicroInterpreterContext24AllocateTempTfLiteTensorEi>:
 800d5c4:	b530      	push	{r4, r5, lr}
 800d5c6:	e9d0 4501 	ldrd	r4, r5, [r0, #4]
 800d5ca:	460b      	mov	r3, r1
 800d5cc:	e9d5 2504 	ldrd	r2, r5, [r5, #16]
 800d5d0:	68c1      	ldr	r1, [r0, #12]
 800d5d2:	480b      	ldr	r0, [pc, #44]	; (800d600 <_ZN6tflite23MicroInterpreterContext24AllocateTempTfLiteTensorEi+0x3c>)
 800d5d4:	b085      	sub	sp, #20
 800d5d6:	6800      	ldr	r0, [r0, #0]
 800d5d8:	9003      	str	r0, [sp, #12]
 800d5da:	f04f 0000 	mov.w	r0, #0
 800d5de:	6820      	ldr	r0, [r4, #0]
 800d5e0:	9500      	str	r5, [sp, #0]
 800d5e2:	6845      	ldr	r5, [r0, #4]
 800d5e4:	4620      	mov	r0, r4
 800d5e6:	47a8      	blx	r5
 800d5e8:	4b05      	ldr	r3, [pc, #20]	; (800d600 <_ZN6tflite23MicroInterpreterContext24AllocateTempTfLiteTensorEi+0x3c>)
 800d5ea:	681a      	ldr	r2, [r3, #0]
 800d5ec:	9b03      	ldr	r3, [sp, #12]
 800d5ee:	405a      	eors	r2, r3
 800d5f0:	f04f 0300 	mov.w	r3, #0
 800d5f4:	d101      	bne.n	800d5fa <_ZN6tflite23MicroInterpreterContext24AllocateTempTfLiteTensorEi+0x36>
 800d5f6:	b005      	add	sp, #20
 800d5f8:	bd30      	pop	{r4, r5, pc}
 800d5fa:	f010 f99f 	bl	801d93c <__stack_chk_fail>
 800d5fe:	bf00      	nop
 800d600:	20011294 	.word	0x20011294

0800d604 <_ZN6tflite23MicroInterpreterContext26DeallocateTempTfLiteTensorEP12TfLiteTensor>:
 800d604:	b500      	push	{lr}
 800d606:	4b0b      	ldr	r3, [pc, #44]	; (800d634 <_ZN6tflite23MicroInterpreterContext26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x30>)
 800d608:	6840      	ldr	r0, [r0, #4]
 800d60a:	b083      	sub	sp, #12
 800d60c:	681b      	ldr	r3, [r3, #0]
 800d60e:	9301      	str	r3, [sp, #4]
 800d610:	f04f 0300 	mov.w	r3, #0
 800d614:	4b07      	ldr	r3, [pc, #28]	; (800d634 <_ZN6tflite23MicroInterpreterContext26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x30>)
 800d616:	681a      	ldr	r2, [r3, #0]
 800d618:	9b01      	ldr	r3, [sp, #4]
 800d61a:	405a      	eors	r2, r3
 800d61c:	f04f 0300 	mov.w	r3, #0
 800d620:	d105      	bne.n	800d62e <_ZN6tflite23MicroInterpreterContext26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x2a>
 800d622:	6803      	ldr	r3, [r0, #0]
 800d624:	689b      	ldr	r3, [r3, #8]
 800d626:	b003      	add	sp, #12
 800d628:	f85d eb04 	ldr.w	lr, [sp], #4
 800d62c:	4718      	bx	r3
 800d62e:	f010 f985 	bl	801d93c <__stack_chk_fail>
 800d632:	bf00      	nop
 800d634:	20011294 	.word	0x20011294

0800d638 <_ZN6tflite23MicroInterpreterContext13GetEvalTensorEi>:
 800d638:	6882      	ldr	r2, [r0, #8]
 800d63a:	b500      	push	{lr}
 800d63c:	e9d2 3004 	ldrd	r3, r0, [r2, #16]
 800d640:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 800d644:	4a0b      	ldr	r2, [pc, #44]	; (800d674 <_ZN6tflite23MicroInterpreterContext13GetEvalTensorEi+0x3c>)
 800d646:	6858      	ldr	r0, [r3, #4]
 800d648:	4b0a      	ldr	r3, [pc, #40]	; (800d674 <_ZN6tflite23MicroInterpreterContext13GetEvalTensorEi+0x3c>)
 800d64a:	b083      	sub	sp, #12
 800d64c:	6812      	ldr	r2, [r2, #0]
 800d64e:	9201      	str	r2, [sp, #4]
 800d650:	f04f 0200 	mov.w	r2, #0
 800d654:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d658:	681a      	ldr	r2, [r3, #0]
 800d65a:	9b01      	ldr	r3, [sp, #4]
 800d65c:	405a      	eors	r2, r3
 800d65e:	f04f 0300 	mov.w	r3, #0
 800d662:	eb00 0081 	add.w	r0, r0, r1, lsl #2
 800d666:	d102      	bne.n	800d66e <_ZN6tflite23MicroInterpreterContext13GetEvalTensorEi+0x36>
 800d668:	b003      	add	sp, #12
 800d66a:	f85d fb04 	ldr.w	pc, [sp], #4
 800d66e:	f010 f965 	bl	801d93c <__stack_chk_fail>
 800d672:	bf00      	nop
 800d674:	20011294 	.word	0x20011294

0800d678 <_ZN6tflite23MicroInterpreterContextD0Ev>:
 800d678:	b510      	push	{r4, lr}
 800d67a:	4b0b      	ldr	r3, [pc, #44]	; (800d6a8 <_ZN6tflite23MicroInterpreterContextD0Ev+0x30>)
 800d67c:	b082      	sub	sp, #8
 800d67e:	211c      	movs	r1, #28
 800d680:	681b      	ldr	r3, [r3, #0]
 800d682:	9301      	str	r3, [sp, #4]
 800d684:	f04f 0300 	mov.w	r3, #0
 800d688:	4604      	mov	r4, r0
 800d68a:	f00d faed 	bl	801ac68 <_ZdlPvj>
 800d68e:	4b06      	ldr	r3, [pc, #24]	; (800d6a8 <_ZN6tflite23MicroInterpreterContextD0Ev+0x30>)
 800d690:	681a      	ldr	r2, [r3, #0]
 800d692:	9b01      	ldr	r3, [sp, #4]
 800d694:	405a      	eors	r2, r3
 800d696:	f04f 0300 	mov.w	r3, #0
 800d69a:	d102      	bne.n	800d6a2 <_ZN6tflite23MicroInterpreterContextD0Ev+0x2a>
 800d69c:	4620      	mov	r0, r4
 800d69e:	b002      	add	sp, #8
 800d6a0:	bd10      	pop	{r4, pc}
 800d6a2:	f010 f94b 	bl	801d93c <__stack_chk_fail>
 800d6a6:	bf00      	nop
 800d6a8:	20011294 	.word	0x20011294

0800d6ac <_ZN6tflite23MicroInterpreterContext24AllocatePersistentBufferEj>:
 800d6ac:	b500      	push	{lr}
 800d6ae:	4b0d      	ldr	r3, [pc, #52]	; (800d6e4 <_ZN6tflite23MicroInterpreterContext24AllocatePersistentBufferEj+0x38>)
 800d6b0:	b083      	sub	sp, #12
 800d6b2:	681b      	ldr	r3, [r3, #0]
 800d6b4:	9301      	str	r3, [sp, #4]
 800d6b6:	f04f 0300 	mov.w	r3, #0
 800d6ba:	6903      	ldr	r3, [r0, #16]
 800d6bc:	2b01      	cmp	r3, #1
 800d6be:	d80f      	bhi.n	800d6e0 <_ZN6tflite23MicroInterpreterContext24AllocatePersistentBufferEj+0x34>
 800d6c0:	4b08      	ldr	r3, [pc, #32]	; (800d6e4 <_ZN6tflite23MicroInterpreterContext24AllocatePersistentBufferEj+0x38>)
 800d6c2:	6840      	ldr	r0, [r0, #4]
 800d6c4:	681a      	ldr	r2, [r3, #0]
 800d6c6:	9b01      	ldr	r3, [sp, #4]
 800d6c8:	405a      	eors	r2, r3
 800d6ca:	f04f 0300 	mov.w	r3, #0
 800d6ce:	d105      	bne.n	800d6dc <_ZN6tflite23MicroInterpreterContext24AllocatePersistentBufferEj+0x30>
 800d6d0:	6803      	ldr	r3, [r0, #0]
 800d6d2:	69db      	ldr	r3, [r3, #28]
 800d6d4:	b003      	add	sp, #12
 800d6d6:	f85d eb04 	ldr.w	lr, [sp], #4
 800d6da:	4718      	bx	r3
 800d6dc:	f010 f92e 	bl	801d93c <__stack_chk_fail>
 800d6e0:	f00f f966 	bl	801c9b0 <abort>
 800d6e4:	20011294 	.word	0x20011294

0800d6e8 <_ZN6tflite23MicroInterpreterContext16GetScratchBufferEi>:
 800d6e8:	b500      	push	{lr}
 800d6ea:	6903      	ldr	r3, [r0, #16]
 800d6ec:	4a0c      	ldr	r2, [pc, #48]	; (800d720 <_ZN6tflite23MicroInterpreterContext16GetScratchBufferEi+0x38>)
 800d6ee:	b083      	sub	sp, #12
 800d6f0:	2b03      	cmp	r3, #3
 800d6f2:	6812      	ldr	r2, [r2, #0]
 800d6f4:	9201      	str	r2, [sp, #4]
 800d6f6:	f04f 0200 	mov.w	r2, #0
 800d6fa:	d10e      	bne.n	800d71a <_ZN6tflite23MicroInterpreterContext16GetScratchBufferEi+0x32>
 800d6fc:	6943      	ldr	r3, [r0, #20]
 800d6fe:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d702:	4b07      	ldr	r3, [pc, #28]	; (800d720 <_ZN6tflite23MicroInterpreterContext16GetScratchBufferEi+0x38>)
 800d704:	681a      	ldr	r2, [r3, #0]
 800d706:	9b01      	ldr	r3, [sp, #4]
 800d708:	405a      	eors	r2, r3
 800d70a:	f04f 0300 	mov.w	r3, #0
 800d70e:	d102      	bne.n	800d716 <_ZN6tflite23MicroInterpreterContext16GetScratchBufferEi+0x2e>
 800d710:	b003      	add	sp, #12
 800d712:	f85d fb04 	ldr.w	pc, [sp], #4
 800d716:	f010 f911 	bl	801d93c <__stack_chk_fail>
 800d71a:	f00f f949 	bl	801c9b0 <abort>
 800d71e:	bf00      	nop
 800d720:	20011294 	.word	0x20011294

0800d724 <_ZN6tflite23MicroInterpreterContext18AllocateTempBufferEjj>:
 800d724:	b500      	push	{lr}
 800d726:	4b0e      	ldr	r3, [pc, #56]	; (800d760 <_ZN6tflite23MicroInterpreterContext18AllocateTempBufferEjj+0x3c>)
 800d728:	b083      	sub	sp, #12
 800d72a:	681b      	ldr	r3, [r3, #0]
 800d72c:	9301      	str	r3, [sp, #4]
 800d72e:	f04f 0300 	mov.w	r3, #0
 800d732:	6903      	ldr	r3, [r0, #16]
 800d734:	2b01      	cmp	r3, #1
 800d736:	d111      	bne.n	800d75c <_ZN6tflite23MicroInterpreterContext18AllocateTempBufferEjj+0x38>
 800d738:	4b09      	ldr	r3, [pc, #36]	; (800d760 <_ZN6tflite23MicroInterpreterContext18AllocateTempBufferEjj+0x3c>)
 800d73a:	6840      	ldr	r0, [r0, #4]
 800d73c:	f8d3 c000 	ldr.w	ip, [r3]
 800d740:	9b01      	ldr	r3, [sp, #4]
 800d742:	ea93 0c0c 	eors.w	ip, r3, ip
 800d746:	f04f 0300 	mov.w	r3, #0
 800d74a:	d105      	bne.n	800d758 <_ZN6tflite23MicroInterpreterContext18AllocateTempBufferEjj+0x34>
 800d74c:	6803      	ldr	r3, [r0, #0]
 800d74e:	68db      	ldr	r3, [r3, #12]
 800d750:	b003      	add	sp, #12
 800d752:	f85d eb04 	ldr.w	lr, [sp], #4
 800d756:	4718      	bx	r3
 800d758:	f010 f8f0 	bl	801d93c <__stack_chk_fail>
 800d75c:	f00f f928 	bl	801c9b0 <abort>
 800d760:	20011294 	.word	0x20011294

0800d764 <_ZN6tflite23MicroInterpreterContext20DeallocateTempBufferEPh>:
 800d764:	b500      	push	{lr}
 800d766:	4b0d      	ldr	r3, [pc, #52]	; (800d79c <_ZN6tflite23MicroInterpreterContext20DeallocateTempBufferEPh+0x38>)
 800d768:	b083      	sub	sp, #12
 800d76a:	681b      	ldr	r3, [r3, #0]
 800d76c:	9301      	str	r3, [sp, #4]
 800d76e:	f04f 0300 	mov.w	r3, #0
 800d772:	6903      	ldr	r3, [r0, #16]
 800d774:	2b01      	cmp	r3, #1
 800d776:	d10f      	bne.n	800d798 <_ZN6tflite23MicroInterpreterContext20DeallocateTempBufferEPh+0x34>
 800d778:	4b08      	ldr	r3, [pc, #32]	; (800d79c <_ZN6tflite23MicroInterpreterContext20DeallocateTempBufferEPh+0x38>)
 800d77a:	6840      	ldr	r0, [r0, #4]
 800d77c:	681a      	ldr	r2, [r3, #0]
 800d77e:	9b01      	ldr	r3, [sp, #4]
 800d780:	405a      	eors	r2, r3
 800d782:	f04f 0300 	mov.w	r3, #0
 800d786:	d105      	bne.n	800d794 <_ZN6tflite23MicroInterpreterContext20DeallocateTempBufferEPh+0x30>
 800d788:	6803      	ldr	r3, [r0, #0]
 800d78a:	691b      	ldr	r3, [r3, #16]
 800d78c:	b003      	add	sp, #12
 800d78e:	f85d eb04 	ldr.w	lr, [sp], #4
 800d792:	4718      	bx	r3
 800d794:	f010 f8d2 	bl	801d93c <__stack_chk_fail>
 800d798:	f00f f90a 	bl	801c9b0 <abort>
 800d79c:	20011294 	.word	0x20011294

0800d7a0 <_ZN6tflite23MicroInterpreterContext27RequestScratchBufferInArenaEjPi>:
 800d7a0:	b500      	push	{lr}
 800d7a2:	4b0f      	ldr	r3, [pc, #60]	; (800d7e0 <_ZN6tflite23MicroInterpreterContext27RequestScratchBufferInArenaEjPi+0x40>)
 800d7a4:	b083      	sub	sp, #12
 800d7a6:	681b      	ldr	r3, [r3, #0]
 800d7a8:	9301      	str	r3, [sp, #4]
 800d7aa:	f04f 0300 	mov.w	r3, #0
 800d7ae:	4613      	mov	r3, r2
 800d7b0:	6902      	ldr	r2, [r0, #16]
 800d7b2:	2a01      	cmp	r2, #1
 800d7b4:	d112      	bne.n	800d7dc <_ZN6tflite23MicroInterpreterContext27RequestScratchBufferInArenaEjPi+0x3c>
 800d7b6:	4a0a      	ldr	r2, [pc, #40]	; (800d7e0 <_ZN6tflite23MicroInterpreterContext27RequestScratchBufferInArenaEjPi+0x40>)
 800d7b8:	f8d2 c000 	ldr.w	ip, [r2]
 800d7bc:	9a01      	ldr	r2, [sp, #4]
 800d7be:	ea92 0c0c 	eors.w	ip, r2, ip
 800d7c2:	f04f 0200 	mov.w	r2, #0
 800d7c6:	d107      	bne.n	800d7d8 <_ZN6tflite23MicroInterpreterContext27RequestScratchBufferInArenaEjPi+0x38>
 800d7c8:	e9d0 0201 	ldrd	r0, r2, [r0, #4]
 800d7cc:	6952      	ldr	r2, [r2, #20]
 800d7ce:	b003      	add	sp, #12
 800d7d0:	f85d eb04 	ldr.w	lr, [sp], #4
 800d7d4:	f002 bd20 	b.w	8010218 <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi>
 800d7d8:	f010 f8b0 	bl	801d93c <__stack_chk_fail>
 800d7dc:	f00f f8e8 	bl	801c9b0 <abort>
 800d7e0:	20011294 	.word	0x20011294

0800d7e4 <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv>:
 800d7e4:	b500      	push	{lr}
 800d7e6:	6903      	ldr	r3, [r0, #16]
 800d7e8:	4a10      	ldr	r2, [pc, #64]	; (800d82c <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x48>)
 800d7ea:	f023 0302 	bic.w	r3, r3, #2
 800d7ee:	b083      	sub	sp, #12
 800d7f0:	2b01      	cmp	r3, #1
 800d7f2:	6812      	ldr	r2, [r2, #0]
 800d7f4:	9201      	str	r2, [sp, #4]
 800d7f6:	f04f 0200 	mov.w	r2, #0
 800d7fa:	d001      	beq.n	800d800 <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x1c>
 800d7fc:	f00f f8d8 	bl	801c9b0 <abort>
 800d800:	6982      	ldr	r2, [r0, #24]
 800d802:	b101      	cbz	r1, 800d806 <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x22>
 800d804:	b16a      	cbz	r2, 800d822 <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x3e>
 800d806:	480a      	ldr	r0, [pc, #40]	; (800d830 <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x4c>)
 800d808:	f000 fd02 	bl	800e210 <_Z11MicroPrintfPKcz>
 800d80c:	2001      	movs	r0, #1
 800d80e:	4b07      	ldr	r3, [pc, #28]	; (800d82c <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x48>)
 800d810:	681a      	ldr	r2, [r3, #0]
 800d812:	9b01      	ldr	r3, [sp, #4]
 800d814:	405a      	eors	r2, r3
 800d816:	f04f 0300 	mov.w	r3, #0
 800d81a:	d105      	bne.n	800d828 <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x44>
 800d81c:	b003      	add	sp, #12
 800d81e:	f85d fb04 	ldr.w	pc, [sp], #4
 800d822:	6181      	str	r1, [r0, #24]
 800d824:	4610      	mov	r0, r2
 800d826:	e7f2      	b.n	800d80e <_ZN6tflite23MicroInterpreterContext20set_external_contextEPv+0x2a>
 800d828:	f010 f888 	bl	801d93c <__stack_chk_fail>
 800d82c:	20011294 	.word	0x20011294
 800d830:	0802622c 	.word	0x0802622c

0800d834 <_ZN6tflite23MicroInterpreterContextC1EPNS_14MicroAllocatorEPKNS_5ModelEPNS_21MicroInterpreterGraphE>:
 800d834:	b500      	push	{lr}
 800d836:	6041      	str	r1, [r0, #4]
 800d838:	2100      	movs	r1, #0
 800d83a:	e9c0 3202 	strd	r3, r2, [r0, #8]
 800d83e:	e9c0 1104 	strd	r1, r1, [r0, #16]
 800d842:	4b0a      	ldr	r3, [pc, #40]	; (800d86c <_ZN6tflite23MicroInterpreterContextC1EPNS_14MicroAllocatorEPKNS_5ModelEPNS_21MicroInterpreterGraphE+0x38>)
 800d844:	6181      	str	r1, [r0, #24]
 800d846:	b083      	sub	sp, #12
 800d848:	681b      	ldr	r3, [r3, #0]
 800d84a:	9301      	str	r3, [sp, #4]
 800d84c:	f04f 0300 	mov.w	r3, #0
 800d850:	4b07      	ldr	r3, [pc, #28]	; (800d870 <_ZN6tflite23MicroInterpreterContextC1EPNS_14MicroAllocatorEPKNS_5ModelEPNS_21MicroInterpreterGraphE+0x3c>)
 800d852:	6003      	str	r3, [r0, #0]
 800d854:	4b05      	ldr	r3, [pc, #20]	; (800d86c <_ZN6tflite23MicroInterpreterContextC1EPNS_14MicroAllocatorEPKNS_5ModelEPNS_21MicroInterpreterGraphE+0x38>)
 800d856:	681a      	ldr	r2, [r3, #0]
 800d858:	9b01      	ldr	r3, [sp, #4]
 800d85a:	405a      	eors	r2, r3
 800d85c:	f04f 0300 	mov.w	r3, #0
 800d860:	d102      	bne.n	800d868 <_ZN6tflite23MicroInterpreterContextC1EPNS_14MicroAllocatorEPKNS_5ModelEPNS_21MicroInterpreterGraphE+0x34>
 800d862:	b003      	add	sp, #12
 800d864:	f85d fb04 	ldr.w	pc, [sp], #4
 800d868:	f010 f868 	bl	801d93c <__stack_chk_fail>
 800d86c:	20011294 	.word	0x20011294
 800d870:	080262c4 	.word	0x080262c4

0800d874 <_ZN6tflite23MicroInterpreterContext23SetScratchBufferHandlesEPNS_19ScratchBufferHandleE>:
 800d874:	b500      	push	{lr}
 800d876:	4b09      	ldr	r3, [pc, #36]	; (800d89c <_ZN6tflite23MicroInterpreterContext23SetScratchBufferHandlesEPNS_19ScratchBufferHandleE+0x28>)
 800d878:	6141      	str	r1, [r0, #20]
 800d87a:	b083      	sub	sp, #12
 800d87c:	681b      	ldr	r3, [r3, #0]
 800d87e:	9301      	str	r3, [sp, #4]
 800d880:	f04f 0300 	mov.w	r3, #0
 800d884:	4b05      	ldr	r3, [pc, #20]	; (800d89c <_ZN6tflite23MicroInterpreterContext23SetScratchBufferHandlesEPNS_19ScratchBufferHandleE+0x28>)
 800d886:	681a      	ldr	r2, [r3, #0]
 800d888:	9b01      	ldr	r3, [sp, #4]
 800d88a:	405a      	eors	r2, r3
 800d88c:	f04f 0300 	mov.w	r3, #0
 800d890:	d102      	bne.n	800d898 <_ZN6tflite23MicroInterpreterContext23SetScratchBufferHandlesEPNS_19ScratchBufferHandleE+0x24>
 800d892:	b003      	add	sp, #12
 800d894:	f85d fb04 	ldr.w	pc, [sp], #4
 800d898:	f010 f850 	bl	801d93c <__stack_chk_fail>
 800d89c:	20011294 	.word	0x20011294

0800d8a0 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE>:
 800d8a0:	b500      	push	{lr}
 800d8a2:	4b09      	ldr	r3, [pc, #36]	; (800d8c8 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE+0x28>)
 800d8a4:	6101      	str	r1, [r0, #16]
 800d8a6:	b083      	sub	sp, #12
 800d8a8:	681b      	ldr	r3, [r3, #0]
 800d8aa:	9301      	str	r3, [sp, #4]
 800d8ac:	f04f 0300 	mov.w	r3, #0
 800d8b0:	4b05      	ldr	r3, [pc, #20]	; (800d8c8 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE+0x28>)
 800d8b2:	681a      	ldr	r2, [r3, #0]
 800d8b4:	9b01      	ldr	r3, [sp, #4]
 800d8b6:	405a      	eors	r2, r3
 800d8b8:	f04f 0300 	mov.w	r3, #0
 800d8bc:	d102      	bne.n	800d8c4 <_ZN6tflite23MicroInterpreterContext19SetInterpreterStateENS0_16InterpreterStateE+0x24>
 800d8be:	b003      	add	sp, #12
 800d8c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800d8c4:	f010 f83a 	bl	801d93c <__stack_chk_fail>
 800d8c8:	20011294 	.word	0x20011294

0800d8cc <_ZN6tflite21MicroInterpreterGraph20GetResourceVariablesEv>:
 800d8cc:	b500      	push	{lr}
 800d8ce:	4b09      	ldr	r3, [pc, #36]	; (800d8f4 <_ZN6tflite21MicroInterpreterGraph20GetResourceVariablesEv+0x28>)
 800d8d0:	6980      	ldr	r0, [r0, #24]
 800d8d2:	b083      	sub	sp, #12
 800d8d4:	681b      	ldr	r3, [r3, #0]
 800d8d6:	9301      	str	r3, [sp, #4]
 800d8d8:	f04f 0300 	mov.w	r3, #0
 800d8dc:	4b05      	ldr	r3, [pc, #20]	; (800d8f4 <_ZN6tflite21MicroInterpreterGraph20GetResourceVariablesEv+0x28>)
 800d8de:	681a      	ldr	r2, [r3, #0]
 800d8e0:	9b01      	ldr	r3, [sp, #4]
 800d8e2:	405a      	eors	r2, r3
 800d8e4:	f04f 0300 	mov.w	r3, #0
 800d8e8:	d102      	bne.n	800d8f0 <_ZN6tflite21MicroInterpreterGraph20GetResourceVariablesEv+0x24>
 800d8ea:	b003      	add	sp, #12
 800d8ec:	f85d fb04 	ldr.w	pc, [sp], #4
 800d8f0:	f010 f824 	bl	801d93c <__stack_chk_fail>
 800d8f4:	20011294 	.word	0x20011294

0800d8f8 <_ZN6tflite21MicroInterpreterGraphD1Ev>:
 800d8f8:	b500      	push	{lr}
 800d8fa:	4b09      	ldr	r3, [pc, #36]	; (800d920 <_ZN6tflite21MicroInterpreterGraphD1Ev+0x28>)
 800d8fc:	b083      	sub	sp, #12
 800d8fe:	681b      	ldr	r3, [r3, #0]
 800d900:	9301      	str	r3, [sp, #4]
 800d902:	f04f 0300 	mov.w	r3, #0
 800d906:	4b06      	ldr	r3, [pc, #24]	; (800d920 <_ZN6tflite21MicroInterpreterGraphD1Ev+0x28>)
 800d908:	681a      	ldr	r2, [r3, #0]
 800d90a:	9b01      	ldr	r3, [sp, #4]
 800d90c:	405a      	eors	r2, r3
 800d90e:	f04f 0300 	mov.w	r3, #0
 800d912:	d102      	bne.n	800d91a <_ZN6tflite21MicroInterpreterGraphD1Ev+0x22>
 800d914:	b003      	add	sp, #12
 800d916:	f85d fb04 	ldr.w	pc, [sp], #4
 800d91a:	f010 f80f 	bl	801d93c <__stack_chk_fail>
 800d91e:	bf00      	nop
 800d920:	20011294 	.word	0x20011294

0800d924 <_ZN6tflite21MicroInterpreterGraphD0Ev>:
 800d924:	b510      	push	{r4, lr}
 800d926:	4b0b      	ldr	r3, [pc, #44]	; (800d954 <_ZN6tflite21MicroInterpreterGraphD0Ev+0x30>)
 800d928:	b082      	sub	sp, #8
 800d92a:	2120      	movs	r1, #32
 800d92c:	681b      	ldr	r3, [r3, #0]
 800d92e:	9301      	str	r3, [sp, #4]
 800d930:	f04f 0300 	mov.w	r3, #0
 800d934:	4604      	mov	r4, r0
 800d936:	f00d f997 	bl	801ac68 <_ZdlPvj>
 800d93a:	4b06      	ldr	r3, [pc, #24]	; (800d954 <_ZN6tflite21MicroInterpreterGraphD0Ev+0x30>)
 800d93c:	681a      	ldr	r2, [r3, #0]
 800d93e:	9b01      	ldr	r3, [sp, #4]
 800d940:	405a      	eors	r2, r3
 800d942:	f04f 0300 	mov.w	r3, #0
 800d946:	d102      	bne.n	800d94e <_ZN6tflite21MicroInterpreterGraphD0Ev+0x2a>
 800d948:	4620      	mov	r0, r4
 800d94a:	b002      	add	sp, #8
 800d94c:	bd10      	pop	{r4, pc}
 800d94e:	f00f fff5 	bl	801d93c <__stack_chk_fail>
 800d952:	bf00      	nop
 800d954:	20011294 	.word	0x20011294

0800d958 <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv>:
 800d958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d95c:	4b23      	ldr	r3, [pc, #140]	; (800d9ec <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x94>)
 800d95e:	f8d0 a014 	ldr.w	sl, [r0, #20]
 800d962:	b083      	sub	sp, #12
 800d964:	681b      	ldr	r3, [r3, #0]
 800d966:	9301      	str	r3, [sp, #4]
 800d968:	f04f 0300 	mov.w	r3, #0
 800d96c:	69c3      	ldr	r3, [r0, #28]
 800d96e:	681b      	ldr	r3, [r3, #0]
 800d970:	4683      	mov	fp, r0
 800d972:	b363      	cbz	r3, 800d9ce <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x76>
 800d974:	f04f 0900 	mov.w	r9, #0
 800d978:	f04f 082c 	mov.w	r8, #44	; 0x2c
 800d97c:	f8db 0008 	ldr.w	r0, [fp, #8]
 800d980:	f8cb 9014 	str.w	r9, [fp, #20]
 800d984:	4649      	mov	r1, r9
 800d986:	f001 fb1f 	bl	800efc8 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi>
 800d98a:	4606      	mov	r6, r0
 800d98c:	b1c0      	cbz	r0, 800d9c0 <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x68>
 800d98e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 800d992:	2500      	movs	r5, #0
 800d994:	f8db 3010 	ldr.w	r3, [fp, #16]
 800d998:	59dc      	ldr	r4, [r3, r7]
 800d99a:	fb08 4405 	mla	r4, r8, r5, r4
 800d99e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800d9a0:	6961      	ldr	r1, [r4, #20]
 800d9a2:	695a      	ldr	r2, [r3, #20]
 800d9a4:	681b      	ldr	r3, [r3, #0]
 800d9a6:	2a20      	cmp	r2, #32
 800d9a8:	bf0c      	ite	eq
 800d9aa:	e9d4 1206 	ldrdeq	r1, r2, [r4, #24]
 800d9ae:	2200      	movne	r2, #0
 800d9b0:	b11b      	cbz	r3, 800d9ba <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x62>
 800d9b2:	f8db 0004 	ldr.w	r0, [fp, #4]
 800d9b6:	4798      	blx	r3
 800d9b8:	6120      	str	r0, [r4, #16]
 800d9ba:	3501      	adds	r5, #1
 800d9bc:	42ae      	cmp	r6, r5
 800d9be:	d1e9      	bne.n	800d994 <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x3c>
 800d9c0:	f8db 301c 	ldr.w	r3, [fp, #28]
 800d9c4:	681b      	ldr	r3, [r3, #0]
 800d9c6:	f109 0901 	add.w	r9, r9, #1
 800d9ca:	454b      	cmp	r3, r9
 800d9cc:	d8d6      	bhi.n	800d97c <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x24>
 800d9ce:	4b07      	ldr	r3, [pc, #28]	; (800d9ec <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x94>)
 800d9d0:	f8cb a014 	str.w	sl, [fp, #20]
 800d9d4:	681a      	ldr	r2, [r3, #0]
 800d9d6:	9b01      	ldr	r3, [sp, #4]
 800d9d8:	405a      	eors	r2, r3
 800d9da:	f04f 0300 	mov.w	r3, #0
 800d9de:	d103      	bne.n	800d9e8 <_ZN6tflite21MicroInterpreterGraph13InitSubgraphsEv+0x90>
 800d9e0:	2000      	movs	r0, #0
 800d9e2:	b003      	add	sp, #12
 800d9e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9e8:	f00f ffa8 	bl	801d93c <__stack_chk_fail>
 800d9ec:	20011294 	.word	0x20011294

0800d9f0 <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv>:
 800d9f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d9f4:	4b1d      	ldr	r3, [pc, #116]	; (800da6c <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x7c>)
 800d9f6:	f8d0 8014 	ldr.w	r8, [r0, #20]
 800d9fa:	b082      	sub	sp, #8
 800d9fc:	681b      	ldr	r3, [r3, #0]
 800d9fe:	9301      	str	r3, [sp, #4]
 800da00:	f04f 0300 	mov.w	r3, #0
 800da04:	69c3      	ldr	r3, [r0, #28]
 800da06:	681b      	ldr	r3, [r3, #0]
 800da08:	4605      	mov	r5, r0
 800da0a:	b1fb      	cbz	r3, 800da4c <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x5c>
 800da0c:	2700      	movs	r7, #0
 800da0e:	262c      	movs	r6, #44	; 0x2c
 800da10:	68a8      	ldr	r0, [r5, #8]
 800da12:	616f      	str	r7, [r5, #20]
 800da14:	4639      	mov	r1, r7
 800da16:	f001 fad7 	bl	800efc8 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi>
 800da1a:	4681      	mov	r9, r0
 800da1c:	b188      	cbz	r0, 800da42 <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x52>
 800da1e:	ea4f 0ac7 	mov.w	sl, r7, lsl #3
 800da22:	2400      	movs	r4, #0
 800da24:	692b      	ldr	r3, [r5, #16]
 800da26:	f853 300a 	ldr.w	r3, [r3, sl]
 800da2a:	fb06 3304 	mla	r3, r6, r4, r3
 800da2e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800da30:	b122      	cbz	r2, 800da3c <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x4c>
 800da32:	6912      	ldr	r2, [r2, #16]
 800da34:	b112      	cbz	r2, 800da3c <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x4c>
 800da36:	6919      	ldr	r1, [r3, #16]
 800da38:	6868      	ldr	r0, [r5, #4]
 800da3a:	4790      	blx	r2
 800da3c:	3401      	adds	r4, #1
 800da3e:	45a1      	cmp	r9, r4
 800da40:	d1f0      	bne.n	800da24 <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x34>
 800da42:	69eb      	ldr	r3, [r5, #28]
 800da44:	681b      	ldr	r3, [r3, #0]
 800da46:	3701      	adds	r7, #1
 800da48:	42bb      	cmp	r3, r7
 800da4a:	d8e1      	bhi.n	800da10 <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x20>
 800da4c:	4b07      	ldr	r3, [pc, #28]	; (800da6c <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x7c>)
 800da4e:	f8c5 8014 	str.w	r8, [r5, #20]
 800da52:	681a      	ldr	r2, [r3, #0]
 800da54:	9b01      	ldr	r3, [sp, #4]
 800da56:	405a      	eors	r2, r3
 800da58:	f04f 0300 	mov.w	r3, #0
 800da5c:	d103      	bne.n	800da66 <_ZN6tflite21MicroInterpreterGraph14ResetSubgraphsEv+0x76>
 800da5e:	2000      	movs	r0, #0
 800da60:	b002      	add	sp, #8
 800da62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800da66:	f00f ff69 	bl	801d93c <__stack_chk_fail>
 800da6a:	bf00      	nop
 800da6c:	20011294 	.word	0x20011294

0800da70 <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv>:
 800da70:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800da74:	4b1d      	ldr	r3, [pc, #116]	; (800daec <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x7c>)
 800da76:	f8d0 8014 	ldr.w	r8, [r0, #20]
 800da7a:	b082      	sub	sp, #8
 800da7c:	681b      	ldr	r3, [r3, #0]
 800da7e:	9301      	str	r3, [sp, #4]
 800da80:	f04f 0300 	mov.w	r3, #0
 800da84:	69c3      	ldr	r3, [r0, #28]
 800da86:	681b      	ldr	r3, [r3, #0]
 800da88:	4605      	mov	r5, r0
 800da8a:	b1fb      	cbz	r3, 800dacc <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x5c>
 800da8c:	2700      	movs	r7, #0
 800da8e:	262c      	movs	r6, #44	; 0x2c
 800da90:	68a8      	ldr	r0, [r5, #8]
 800da92:	616f      	str	r7, [r5, #20]
 800da94:	4639      	mov	r1, r7
 800da96:	f001 fa97 	bl	800efc8 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi>
 800da9a:	4681      	mov	r9, r0
 800da9c:	b188      	cbz	r0, 800dac2 <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x52>
 800da9e:	ea4f 0ac7 	mov.w	sl, r7, lsl #3
 800daa2:	2400      	movs	r4, #0
 800daa4:	692b      	ldr	r3, [r5, #16]
 800daa6:	f853 300a 	ldr.w	r3, [r3, sl]
 800daaa:	fb06 3304 	mla	r3, r6, r4, r3
 800daae:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800dab0:	b122      	cbz	r2, 800dabc <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x4c>
 800dab2:	6852      	ldr	r2, [r2, #4]
 800dab4:	b112      	cbz	r2, 800dabc <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x4c>
 800dab6:	6919      	ldr	r1, [r3, #16]
 800dab8:	6868      	ldr	r0, [r5, #4]
 800daba:	4790      	blx	r2
 800dabc:	3401      	adds	r4, #1
 800dabe:	45a1      	cmp	r9, r4
 800dac0:	d1f0      	bne.n	800daa4 <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x34>
 800dac2:	69eb      	ldr	r3, [r5, #28]
 800dac4:	681b      	ldr	r3, [r3, #0]
 800dac6:	3701      	adds	r7, #1
 800dac8:	42bb      	cmp	r3, r7
 800daca:	d8e1      	bhi.n	800da90 <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x20>
 800dacc:	4b07      	ldr	r3, [pc, #28]	; (800daec <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x7c>)
 800dace:	f8c5 8014 	str.w	r8, [r5, #20]
 800dad2:	681a      	ldr	r2, [r3, #0]
 800dad4:	9b01      	ldr	r3, [sp, #4]
 800dad6:	405a      	eors	r2, r3
 800dad8:	f04f 0300 	mov.w	r3, #0
 800dadc:	d103      	bne.n	800dae6 <_ZN6tflite21MicroInterpreterGraph13FreeSubgraphsEv+0x76>
 800dade:	2000      	movs	r0, #0
 800dae0:	b002      	add	sp, #8
 800dae2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dae6:	f00f ff29 	bl	801d93c <__stack_chk_fail>
 800daea:	bf00      	nop
 800daec:	20011294 	.word	0x20011294

0800daf0 <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0>:
 800daf0:	b500      	push	{lr}
 800daf2:	f8df c028 	ldr.w	ip, [pc, #40]	; 800db1c <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0+0x2c>
 800daf6:	4b06      	ldr	r3, [pc, #24]	; (800db10 <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0+0x20>)
 800daf8:	4a06      	ldr	r2, [pc, #24]	; (800db14 <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0+0x24>)
 800dafa:	4807      	ldr	r0, [pc, #28]	; (800db18 <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0+0x28>)
 800dafc:	b083      	sub	sp, #12
 800dafe:	21b0      	movs	r1, #176	; 0xb0
 800db00:	f8dc c000 	ldr.w	ip, [ip]
 800db04:	f8cd c004 	str.w	ip, [sp, #4]
 800db08:	f04f 0c00 	mov.w	ip, #0
 800db0c:	f00e ff58 	bl	801c9c0 <__assert_func>
 800db10:	08024734 	.word	0x08024734
 800db14:	08024740 	.word	0x08024740
 800db18:	08024804 	.word	0x08024804
 800db1c:	20011294 	.word	0x20011294

0800db20 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>:
 800db20:	b500      	push	{lr}
 800db22:	f8df c028 	ldr.w	ip, [pc, #40]	; 800db4c <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x2c>
 800db26:	4b06      	ldr	r3, [pc, #24]	; (800db40 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x20>)
 800db28:	4a06      	ldr	r2, [pc, #24]	; (800db44 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x24>)
 800db2a:	4807      	ldr	r0, [pc, #28]	; (800db48 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x28>)
 800db2c:	b083      	sub	sp, #12
 800db2e:	21b0      	movs	r1, #176	; 0xb0
 800db30:	f8dc c000 	ldr.w	ip, [ip]
 800db34:	f8cd c004 	str.w	ip, [sp, #4]
 800db38:	f04f 0c00 	mov.w	ip, #0
 800db3c:	f00e ff40 	bl	801c9c0 <__assert_func>
 800db40:	08024734 	.word	0x08024734
 800db44:	08025dd0 	.word	0x08025dd0
 800db48:	08024804 	.word	0x08024804
 800db4c:	20011294 	.word	0x20011294

0800db50 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv>:
 800db50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db54:	4b50      	ldr	r3, [pc, #320]	; (800dc98 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x148>)
 800db56:	b085      	sub	sp, #20
 800db58:	681b      	ldr	r3, [r3, #0]
 800db5a:	9303      	str	r3, [sp, #12]
 800db5c:	f04f 0300 	mov.w	r3, #0
 800db60:	69c3      	ldr	r3, [r0, #28]
 800db62:	681a      	ldr	r2, [r3, #0]
 800db64:	4680      	mov	r8, r0
 800db66:	2a00      	cmp	r2, #0
 800db68:	d07a      	beq.n	800dc60 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x110>
 800db6a:	2200      	movs	r2, #0
 800db6c:	9201      	str	r2, [sp, #4]
 800db6e:	9a01      	ldr	r2, [sp, #4]
 800db70:	3304      	adds	r3, #4
 800db72:	eb03 0582 	add.w	r5, r3, r2, lsl #2
 800db76:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800db7a:	00d6      	lsls	r6, r2, #3
 800db7c:	58ea      	ldr	r2, [r5, r3]
 800db7e:	441d      	add	r5, r3
 800db80:	1aaa      	subs	r2, r5, r2
 800db82:	2400      	movs	r4, #0
 800db84:	8811      	ldrh	r1, [r2, #0]
 800db86:	e02d      	b.n	800dbe4 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x94>
 800db88:	88d0      	ldrh	r0, [r2, #6]
 800db8a:	2800      	cmp	r0, #0
 800db8c:	d05d      	beq.n	800dc4a <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0xfa>
 800db8e:	f91b 0000 	ldrsb.w	r0, [fp, r0]
 800db92:	2809      	cmp	r0, #9
 800db94:	d159      	bne.n	800dc4a <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0xfa>
 800db96:	290c      	cmp	r1, #12
 800db98:	d97a      	bls.n	800dc90 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x140>
 800db9a:	8992      	ldrh	r2, [r2, #12]
 800db9c:	2a00      	cmp	r2, #0
 800db9e:	d077      	beq.n	800dc90 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x140>
 800dba0:	f85b 1002 	ldr.w	r1, [fp, r2]
 800dba4:	4493      	add	fp, r2
 800dba6:	eb0b 0001 	add.w	r0, fp, r1
 800dbaa:	f85b 2001 	ldr.w	r2, [fp, r1]
 800dbae:	1a82      	subs	r2, r0, r2
 800dbb0:	8811      	ldrh	r1, [r2, #0]
 800dbb2:	290a      	cmp	r1, #10
 800dbb4:	d96c      	bls.n	800dc90 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x140>
 800dbb6:	8951      	ldrh	r1, [r2, #10]
 800dbb8:	1842      	adds	r2, r0, r1
 800dbba:	2900      	cmp	r1, #0
 800dbbc:	d068      	beq.n	800dc90 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x140>
 800dbbe:	5841      	ldr	r1, [r0, r1]
 800dbc0:	5850      	ldr	r0, [r2, r1]
 800dbc2:	440a      	add	r2, r1
 800dbc4:	2800      	cmp	r0, #0
 800dbc6:	d05b      	beq.n	800dc80 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x130>
 800dbc8:	6851      	ldr	r1, [r2, #4]
 800dbca:	f8d8 0010 	ldr.w	r0, [r8, #16]
 800dbce:	9a02      	ldr	r2, [sp, #8]
 800dbd0:	4430      	add	r0, r6
 800dbd2:	6840      	ldr	r0, [r0, #4]
 800dbd4:	f850 0027 	ldr.w	r0, [r0, r7, lsl #2]
 800dbd8:	f00e ff84 	bl	801cae4 <memset>
 800dbdc:	682a      	ldr	r2, [r5, #0]
 800dbde:	1aaa      	subs	r2, r5, r2
 800dbe0:	8811      	ldrh	r1, [r2, #0]
 800dbe2:	3401      	adds	r4, #1
 800dbe4:	2904      	cmp	r1, #4
 800dbe6:	d953      	bls.n	800dc90 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x140>
 800dbe8:	8890      	ldrh	r0, [r2, #4]
 800dbea:	2800      	cmp	r0, #0
 800dbec:	d050      	beq.n	800dc90 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x140>
 800dbee:	582f      	ldr	r7, [r5, r0]
 800dbf0:	4428      	add	r0, r5
 800dbf2:	19c3      	adds	r3, r0, r7
 800dbf4:	59c0      	ldr	r0, [r0, r7]
 800dbf6:	4284      	cmp	r4, r0
 800dbf8:	d229      	bcs.n	800dc4e <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0xfe>
 800dbfa:	3304      	adds	r3, #4
 800dbfc:	eb03 0a84 	add.w	sl, r3, r4, lsl #2
 800dc00:	f853 9024 	ldr.w	r9, [r3, r4, lsl #2]
 800dc04:	f85a 3009 	ldr.w	r3, [sl, r9]
 800dc08:	eb0a 0b09 	add.w	fp, sl, r9
 800dc0c:	ebab 0303 	sub.w	r3, fp, r3
 800dc10:	8818      	ldrh	r0, [r3, #0]
 800dc12:	280e      	cmp	r0, #14
 800dc14:	d9e5      	bls.n	800dbe2 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x92>
 800dc16:	89db      	ldrh	r3, [r3, #14]
 800dc18:	2b00      	cmp	r3, #0
 800dc1a:	d0e2      	beq.n	800dbe2 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x92>
 800dc1c:	f81b 3003 	ldrb.w	r3, [fp, r3]
 800dc20:	2b00      	cmp	r3, #0
 800dc22:	d0de      	beq.n	800dbe2 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x92>
 800dc24:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800dc28:	4432      	add	r2, r6
 800dc2a:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 800dc2e:	6850      	ldr	r0, [r2, #4]
 800dc30:	a902      	add	r1, sp, #8
 800dc32:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 800dc36:	f7fe febd 	bl	800c9b4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj>
 800dc3a:	b9b8      	cbnz	r0, 800dc6c <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x11c>
 800dc3c:	f85a 2009 	ldr.w	r2, [sl, r9]
 800dc40:	ebab 0202 	sub.w	r2, fp, r2
 800dc44:	8811      	ldrh	r1, [r2, #0]
 800dc46:	2906      	cmp	r1, #6
 800dc48:	d89e      	bhi.n	800db88 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x38>
 800dc4a:	2100      	movs	r1, #0
 800dc4c:	e7bd      	b.n	800dbca <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x7a>
 800dc4e:	9a01      	ldr	r2, [sp, #4]
 800dc50:	f8d8 301c 	ldr.w	r3, [r8, #28]
 800dc54:	3201      	adds	r2, #1
 800dc56:	4611      	mov	r1, r2
 800dc58:	9201      	str	r2, [sp, #4]
 800dc5a:	681a      	ldr	r2, [r3, #0]
 800dc5c:	4291      	cmp	r1, r2
 800dc5e:	d386      	bcc.n	800db6e <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x1e>
 800dc60:	f8d8 0018 	ldr.w	r0, [r8, #24]
 800dc64:	b110      	cbz	r0, 800dc6c <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x11c>
 800dc66:	f000 fb5b 	bl	800e320 <_ZN6tflite22MicroResourceVariables8ResetAllEv>
 800dc6a:	2000      	movs	r0, #0
 800dc6c:	4b0a      	ldr	r3, [pc, #40]	; (800dc98 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x148>)
 800dc6e:	681a      	ldr	r2, [r3, #0]
 800dc70:	9b03      	ldr	r3, [sp, #12]
 800dc72:	405a      	eors	r2, r3
 800dc74:	f04f 0300 	mov.w	r3, #0
 800dc78:	d108      	bne.n	800dc8c <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x13c>
 800dc7a:	b005      	add	sp, #20
 800dc7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc80:	4b06      	ldr	r3, [pc, #24]	; (800dc9c <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x14c>)
 800dc82:	4a07      	ldr	r2, [pc, #28]	; (800dca0 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x150>)
 800dc84:	4807      	ldr	r0, [pc, #28]	; (800dca4 <_ZN6tflite21MicroInterpreterGraph20ResetVariableTensorsEv+0x154>)
 800dc86:	21b0      	movs	r1, #176	; 0xb0
 800dc88:	f00e fe9a 	bl	801c9c0 <__assert_func>
 800dc8c:	f00f fe56 	bl	801d93c <__stack_chk_fail>
 800dc90:	2300      	movs	r3, #0
 800dc92:	681b      	ldr	r3, [r3, #0]
 800dc94:	deff      	udf	#255	; 0xff
 800dc96:	bf00      	nop
 800dc98:	20011294 	.word	0x20011294
 800dc9c:	08024734 	.word	0x08024734
 800dca0:	080262f8 	.word	0x080262f8
 800dca4:	08024804 	.word	0x08024804

0800dca8 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv>:
 800dca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcac:	4b2d      	ldr	r3, [pc, #180]	; (800dd64 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xbc>)
 800dcae:	f8d0 9014 	ldr.w	r9, [r0, #20]
 800dcb2:	b083      	sub	sp, #12
 800dcb4:	681b      	ldr	r3, [r3, #0]
 800dcb6:	9301      	str	r3, [sp, #4]
 800dcb8:	f04f 0300 	mov.w	r3, #0
 800dcbc:	69c3      	ldr	r3, [r0, #28]
 800dcbe:	681b      	ldr	r3, [r3, #0]
 800dcc0:	4682      	mov	sl, r0
 800dcc2:	b363      	cbz	r3, 800dd1e <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x76>
 800dcc4:	f04f 0800 	mov.w	r8, #0
 800dcc8:	272c      	movs	r7, #44	; 0x2c
 800dcca:	f8da 0008 	ldr.w	r0, [sl, #8]
 800dcce:	f8ca 8014 	str.w	r8, [sl, #20]
 800dcd2:	4641      	mov	r1, r8
 800dcd4:	f001 f978 	bl	800efc8 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi>
 800dcd8:	4605      	mov	r5, r0
 800dcda:	b1c8      	cbz	r0, 800dd10 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x68>
 800dcdc:	ea4f 06c8 	mov.w	r6, r8, lsl #3
 800dce0:	2400      	movs	r4, #0
 800dce2:	f8da 3010 	ldr.w	r3, [sl, #16]
 800dce6:	5999      	ldr	r1, [r3, r6]
 800dce8:	fb07 1104 	mla	r1, r7, r4, r1
 800dcec:	f8d1 b028 	ldr.w	fp, [r1, #40]	; 0x28
 800dcf0:	f8db 3008 	ldr.w	r3, [fp, #8]
 800dcf4:	b123      	cbz	r3, 800dd00 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x58>
 800dcf6:	f8da 0004 	ldr.w	r0, [sl, #4]
 800dcfa:	4798      	blx	r3
 800dcfc:	4603      	mov	r3, r0
 800dcfe:	b990      	cbnz	r0, 800dd26 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x7e>
 800dd00:	4621      	mov	r1, r4
 800dd02:	f8da 000c 	ldr.w	r0, [sl, #12]
 800dd06:	3401      	adds	r4, #1
 800dd08:	f002 facc 	bl	80102a4 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi>
 800dd0c:	42a5      	cmp	r5, r4
 800dd0e:	d1e8      	bne.n	800dce2 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x3a>
 800dd10:	f8da 301c 	ldr.w	r3, [sl, #28]
 800dd14:	681b      	ldr	r3, [r3, #0]
 800dd16:	f108 0801 	add.w	r8, r8, #1
 800dd1a:	4543      	cmp	r3, r8
 800dd1c:	d8d5      	bhi.n	800dcca <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x22>
 800dd1e:	f8ca 9014 	str.w	r9, [sl, #20]
 800dd22:	2000      	movs	r0, #0
 800dd24:	e00e      	b.n	800dd44 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x9c>
 800dd26:	f8db 2014 	ldr.w	r2, [fp, #20]
 800dd2a:	2a20      	cmp	r2, #32
 800dd2c:	d014      	beq.n	800dd58 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xb0>
 800dd2e:	2ace      	cmp	r2, #206	; 0xce
 800dd30:	bf96      	itet	ls
 800dd32:	490d      	ldrls	r1, [pc, #52]	; (800dd68 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xc0>)
 800dd34:	490d      	ldrhi	r1, [pc, #52]	; (800dd6c <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xc4>)
 800dd36:	f851 1022 	ldrls.w	r1, [r1, r2, lsl #2]
 800dd3a:	480d      	ldr	r0, [pc, #52]	; (800dd70 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xc8>)
 800dd3c:	4622      	mov	r2, r4
 800dd3e:	f000 fa67 	bl	800e210 <_Z11MicroPrintfPKcz>
 800dd42:	2001      	movs	r0, #1
 800dd44:	4b07      	ldr	r3, [pc, #28]	; (800dd64 <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xbc>)
 800dd46:	681a      	ldr	r2, [r3, #0]
 800dd48:	9b01      	ldr	r3, [sp, #4]
 800dd4a:	405a      	eors	r2, r3
 800dd4c:	f04f 0300 	mov.w	r3, #0
 800dd50:	d105      	bne.n	800dd5e <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0xb6>
 800dd52:	b003      	add	sp, #12
 800dd54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd58:	f8db 1018 	ldr.w	r1, [fp, #24]
 800dd5c:	e7ed      	b.n	800dd3a <_ZN6tflite21MicroInterpreterGraph16PrepareSubgraphsEv+0x92>
 800dd5e:	f00f fded 	bl	801d93c <__stack_chk_fail>
 800dd62:	bf00      	nop
 800dd64:	20011294 	.word	0x20011294
 800dd68:	080209e4 	.word	0x080209e4
 800dd6c:	08024730 	.word	0x08024730
 800dd70:	080263c4 	.word	0x080263c4

0800dd74 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi>:
 800dd74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd78:	69c3      	ldr	r3, [r0, #28]
 800dd7a:	b085      	sub	sp, #20
 800dd7c:	681a      	ldr	r2, [r3, #0]
 800dd7e:	6943      	ldr	r3, [r0, #20]
 800dd80:	9301      	str	r3, [sp, #4]
 800dd82:	4b43      	ldr	r3, [pc, #268]	; (800de90 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x11c>)
 800dd84:	4291      	cmp	r1, r2
 800dd86:	681b      	ldr	r3, [r3, #0]
 800dd88:	9303      	str	r3, [sp, #12]
 800dd8a:	f04f 0300 	mov.w	r3, #0
 800dd8e:	4606      	mov	r6, r0
 800dd90:	6141      	str	r1, [r0, #20]
 800dd92:	d264      	bcs.n	800de5e <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xea>
 800dd94:	6880      	ldr	r0, [r0, #8]
 800dd96:	460c      	mov	r4, r1
 800dd98:	f001 f916 	bl	800efc8 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi>
 800dd9c:	4682      	mov	sl, r0
 800dd9e:	2800      	cmp	r0, #0
 800dda0:	d062      	beq.n	800de68 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xf4>
 800dda2:	00e3      	lsls	r3, r4, #3
 800dda4:	9300      	str	r3, [sp, #0]
 800dda6:	2700      	movs	r7, #0
 800dda8:	f04f 0b2c 	mov.w	fp, #44	; 0x2c
 800ddac:	e01d      	b.n	800ddea <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x76>
 800ddae:	6823      	ldr	r3, [r4, #0]
 800ddb0:	4620      	mov	r0, r4
 800ddb2:	689b      	ldr	r3, [r3, #8]
 800ddb4:	4798      	blx	r3
 800ddb6:	4681      	mov	r9, r0
 800ddb8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800ddbc:	2b00      	cmp	r3, #0
 800ddbe:	d064      	beq.n	800de8a <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x116>
 800ddc0:	6870      	ldr	r0, [r6, #4]
 800ddc2:	4629      	mov	r1, r5
 800ddc4:	4798      	blx	r3
 800ddc6:	4605      	mov	r5, r0
 800ddc8:	68f0      	ldr	r0, [r6, #12]
 800ddca:	6803      	ldr	r3, [r0, #0]
 800ddcc:	695b      	ldr	r3, [r3, #20]
 800ddce:	4798      	blx	r3
 800ddd0:	2d01      	cmp	r5, #1
 800ddd2:	d024      	beq.n	800de1e <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xaa>
 800ddd4:	2d00      	cmp	r5, #0
 800ddd6:	d131      	bne.n	800de3c <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xc8>
 800ddd8:	b124      	cbz	r4, 800dde4 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x70>
 800ddda:	6823      	ldr	r3, [r4, #0]
 800dddc:	4649      	mov	r1, r9
 800ddde:	68db      	ldr	r3, [r3, #12]
 800dde0:	4620      	mov	r0, r4
 800dde2:	4798      	blx	r3
 800dde4:	3701      	adds	r7, #1
 800dde6:	45ba      	cmp	sl, r7
 800dde8:	d03e      	beq.n	800de68 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xf4>
 800ddea:	6933      	ldr	r3, [r6, #16]
 800ddec:	9a00      	ldr	r2, [sp, #0]
 800ddee:	589d      	ldr	r5, [r3, r2]
 800ddf0:	fb0b 5507 	mla	r5, fp, r7, r5
 800ddf4:	f8d5 8028 	ldr.w	r8, [r5, #40]	; 0x28
 800ddf8:	f8d8 3014 	ldr.w	r3, [r8, #20]
 800ddfc:	2b20      	cmp	r3, #32
 800ddfe:	d00b      	beq.n	800de18 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xa4>
 800de00:	2bce      	cmp	r3, #206	; 0xce
 800de02:	bf96      	itet	ls
 800de04:	4a23      	ldrls	r2, [pc, #140]	; (800de94 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x120>)
 800de06:	4924      	ldrhi	r1, [pc, #144]	; (800de98 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x124>)
 800de08:	f852 1023 	ldrls.w	r1, [r2, r3, lsl #2]
 800de0c:	6873      	ldr	r3, [r6, #4]
 800de0e:	6b5c      	ldr	r4, [r3, #52]	; 0x34
 800de10:	2c00      	cmp	r4, #0
 800de12:	d1cc      	bne.n	800ddae <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x3a>
 800de14:	46a1      	mov	r9, r4
 800de16:	e7cf      	b.n	800ddb8 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x44>
 800de18:	f8d8 1018 	ldr.w	r1, [r8, #24]
 800de1c:	e7f6      	b.n	800de0c <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x98>
 800de1e:	f8d8 3014 	ldr.w	r3, [r8, #20]
 800de22:	2b20      	cmp	r3, #32
 800de24:	d024      	beq.n	800de70 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xfc>
 800de26:	2bce      	cmp	r3, #206	; 0xce
 800de28:	bf96      	itet	ls
 800de2a:	4a1a      	ldrls	r2, [pc, #104]	; (800de94 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x120>)
 800de2c:	491a      	ldrhi	r1, [pc, #104]	; (800de98 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x124>)
 800de2e:	f852 1023 	ldrls.w	r1, [r2, r3, lsl #2]
 800de32:	481a      	ldr	r0, [pc, #104]	; (800de9c <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x128>)
 800de34:	463a      	mov	r2, r7
 800de36:	2301      	movs	r3, #1
 800de38:	f000 f9ea 	bl	800e210 <_Z11MicroPrintfPKcz>
 800de3c:	b124      	cbz	r4, 800de48 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xd4>
 800de3e:	6823      	ldr	r3, [r4, #0]
 800de40:	4649      	mov	r1, r9
 800de42:	68db      	ldr	r3, [r3, #12]
 800de44:	4620      	mov	r0, r4
 800de46:	4798      	blx	r3
 800de48:	4b11      	ldr	r3, [pc, #68]	; (800de90 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x11c>)
 800de4a:	681a      	ldr	r2, [r3, #0]
 800de4c:	9b03      	ldr	r3, [sp, #12]
 800de4e:	405a      	eors	r2, r3
 800de50:	f04f 0300 	mov.w	r3, #0
 800de54:	d10f      	bne.n	800de76 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x102>
 800de56:	4628      	mov	r0, r5
 800de58:	b005      	add	sp, #20
 800de5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de5e:	4810      	ldr	r0, [pc, #64]	; (800dea0 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x12c>)
 800de60:	f000 f9d6 	bl	800e210 <_Z11MicroPrintfPKcz>
 800de64:	2501      	movs	r5, #1
 800de66:	e7ef      	b.n	800de48 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xd4>
 800de68:	9b01      	ldr	r3, [sp, #4]
 800de6a:	6173      	str	r3, [r6, #20]
 800de6c:	2500      	movs	r5, #0
 800de6e:	e7eb      	b.n	800de48 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xd4>
 800de70:	f8d8 1018 	ldr.w	r1, [r8, #24]
 800de74:	e7dd      	b.n	800de32 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0xbe>
 800de76:	f00f fd61 	bl	801d93c <__stack_chk_fail>
 800de7a:	b124      	cbz	r4, 800de86 <_ZN6tflite21MicroInterpreterGraph14InvokeSubgraphEi+0x112>
 800de7c:	6823      	ldr	r3, [r4, #0]
 800de7e:	4649      	mov	r1, r9
 800de80:	68db      	ldr	r3, [r3, #12]
 800de82:	4620      	mov	r0, r4
 800de84:	4798      	blx	r3
 800de86:	f00c fef1 	bl	801ac6c <__cxa_end_cleanup>
 800de8a:	f00e fd91 	bl	801c9b0 <abort>
 800de8e:	bf00      	nop
 800de90:	20011294 	.word	0x20011294
 800de94:	080209e4 	.word	0x080209e4
 800de98:	08024730 	.word	0x08024730
 800de9c:	08026430 	.word	0x08026430
 800dea0:	080263fc 	.word	0x080263fc

0800dea4 <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv>:
 800dea4:	b500      	push	{lr}
 800dea6:	4b10      	ldr	r3, [pc, #64]	; (800dee8 <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv+0x44>)
 800dea8:	6882      	ldr	r2, [r0, #8]
 800deaa:	b083      	sub	sp, #12
 800deac:	681b      	ldr	r3, [r3, #0]
 800deae:	9301      	str	r3, [sp, #4]
 800deb0:	f04f 0300 	mov.w	r3, #0
 800deb4:	6813      	ldr	r3, [r2, #0]
 800deb6:	1ad3      	subs	r3, r2, r3
 800deb8:	8819      	ldrh	r1, [r3, #0]
 800deba:	2908      	cmp	r1, #8
 800debc:	d910      	bls.n	800dee0 <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv+0x3c>
 800debe:	891b      	ldrh	r3, [r3, #8]
 800dec0:	b173      	cbz	r3, 800dee0 <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv+0x3c>
 800dec2:	58d1      	ldr	r1, [r2, r3]
 800dec4:	441a      	add	r2, r3
 800dec6:	4b08      	ldr	r3, [pc, #32]	; (800dee8 <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv+0x44>)
 800dec8:	5850      	ldr	r0, [r2, r1]
 800deca:	681a      	ldr	r2, [r3, #0]
 800decc:	9b01      	ldr	r3, [sp, #4]
 800dece:	405a      	eors	r2, r3
 800ded0:	f04f 0300 	mov.w	r3, #0
 800ded4:	d102      	bne.n	800dedc <_ZN6tflite21MicroInterpreterGraph12NumSubgraphsEv+0x38>
 800ded6:	b003      	add	sp, #12
 800ded8:	f85d fb04 	ldr.w	pc, [sp], #4
 800dedc:	f00f fd2e 	bl	801d93c <__stack_chk_fail>
 800dee0:	2300      	movs	r3, #0
 800dee2:	681b      	ldr	r3, [r3, #0]
 800dee4:	deff      	udf	#255	; 0xff
 800dee6:	bf00      	nop
 800dee8:	20011294 	.word	0x20011294

0800deec <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi>:
 800deec:	b500      	push	{lr}
 800deee:	6883      	ldr	r3, [r0, #8]
 800def0:	4a19      	ldr	r2, [pc, #100]	; (800df58 <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x6c>)
 800def2:	b083      	sub	sp, #12
 800def4:	6812      	ldr	r2, [r2, #0]
 800def6:	9201      	str	r2, [sp, #4]
 800def8:	f04f 0200 	mov.w	r2, #0
 800defc:	681a      	ldr	r2, [r3, #0]
 800defe:	1a9a      	subs	r2, r3, r2
 800df00:	8810      	ldrh	r0, [r2, #0]
 800df02:	2808      	cmp	r0, #8
 800df04:	d925      	bls.n	800df52 <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x66>
 800df06:	8912      	ldrh	r2, [r2, #8]
 800df08:	b31a      	cbz	r2, 800df52 <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x66>
 800df0a:	5898      	ldr	r0, [r3, r2]
 800df0c:	4413      	add	r3, r2
 800df0e:	181a      	adds	r2, r3, r0
 800df10:	581b      	ldr	r3, [r3, r0]
 800df12:	4299      	cmp	r1, r3
 800df14:	d219      	bcs.n	800df4a <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x5e>
 800df16:	3204      	adds	r2, #4
 800df18:	eb02 0381 	add.w	r3, r2, r1, lsl #2
 800df1c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800df20:	585a      	ldr	r2, [r3, r1]
 800df22:	440b      	add	r3, r1
 800df24:	1a9a      	subs	r2, r3, r2
 800df26:	8811      	ldrh	r1, [r2, #0]
 800df28:	2906      	cmp	r1, #6
 800df2a:	d912      	bls.n	800df52 <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x66>
 800df2c:	88d2      	ldrh	r2, [r2, #6]
 800df2e:	b182      	cbz	r2, 800df52 <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x66>
 800df30:	5899      	ldr	r1, [r3, r2]
 800df32:	4413      	add	r3, r2
 800df34:	5858      	ldr	r0, [r3, r1]
 800df36:	4b08      	ldr	r3, [pc, #32]	; (800df58 <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x6c>)
 800df38:	681a      	ldr	r2, [r3, #0]
 800df3a:	9b01      	ldr	r3, [sp, #4]
 800df3c:	405a      	eors	r2, r3
 800df3e:	f04f 0300 	mov.w	r3, #0
 800df42:	d104      	bne.n	800df4e <_ZN6tflite21MicroInterpreterGraph17NumSubgraphInputsEi+0x62>
 800df44:	b003      	add	sp, #12
 800df46:	f85d fb04 	ldr.w	pc, [sp], #4
 800df4a:	f7ff fde9 	bl	800db20 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800df4e:	f00f fcf5 	bl	801d93c <__stack_chk_fail>
 800df52:	2300      	movs	r3, #0
 800df54:	681b      	ldr	r3, [r3, #0]
 800df56:	deff      	udf	#255	; 0xff
 800df58:	20011294 	.word	0x20011294

0800df5c <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii>:
 800df5c:	b530      	push	{r4, r5, lr}
 800df5e:	6883      	ldr	r3, [r0, #8]
 800df60:	4c24      	ldr	r4, [pc, #144]	; (800dff4 <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x98>)
 800df62:	b083      	sub	sp, #12
 800df64:	6824      	ldr	r4, [r4, #0]
 800df66:	9401      	str	r4, [sp, #4]
 800df68:	f04f 0400 	mov.w	r4, #0
 800df6c:	681c      	ldr	r4, [r3, #0]
 800df6e:	eba3 0c04 	sub.w	ip, r3, r4
 800df72:	f8bc 4000 	ldrh.w	r4, [ip]
 800df76:	2c08      	cmp	r4, #8
 800df78:	d939      	bls.n	800dfee <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x92>
 800df7a:	f8bc 4008 	ldrh.w	r4, [ip, #8]
 800df7e:	2c00      	cmp	r4, #0
 800df80:	d035      	beq.n	800dfee <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x92>
 800df82:	591d      	ldr	r5, [r3, r4]
 800df84:	4423      	add	r3, r4
 800df86:	195c      	adds	r4, r3, r5
 800df88:	595b      	ldr	r3, [r3, r5]
 800df8a:	4299      	cmp	r1, r3
 800df8c:	d229      	bcs.n	800dfe2 <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x86>
 800df8e:	3404      	adds	r4, #4
 800df90:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800df94:	f854 5021 	ldr.w	r5, [r4, r1, lsl #2]
 800df98:	595c      	ldr	r4, [r3, r5]
 800df9a:	442b      	add	r3, r5
 800df9c:	eba3 0c04 	sub.w	ip, r3, r4
 800dfa0:	f8bc 4000 	ldrh.w	r4, [ip]
 800dfa4:	2c08      	cmp	r4, #8
 800dfa6:	d922      	bls.n	800dfee <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x92>
 800dfa8:	f8bc 4008 	ldrh.w	r4, [ip, #8]
 800dfac:	b1fc      	cbz	r4, 800dfee <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x92>
 800dfae:	591d      	ldr	r5, [r3, r4]
 800dfb0:	4423      	add	r3, r4
 800dfb2:	195c      	adds	r4, r3, r5
 800dfb4:	595b      	ldr	r3, [r3, r5]
 800dfb6:	429a      	cmp	r2, r3
 800dfb8:	d215      	bcs.n	800dfe6 <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x8a>
 800dfba:	6903      	ldr	r3, [r0, #16]
 800dfbc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800dfc0:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800dfc4:	6853      	ldr	r3, [r2, #4]
 800dfc6:	6848      	ldr	r0, [r1, #4]
 800dfc8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800dfcc:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800dfd0:	4b08      	ldr	r3, [pc, #32]	; (800dff4 <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x98>)
 800dfd2:	681a      	ldr	r2, [r3, #0]
 800dfd4:	9b01      	ldr	r3, [sp, #4]
 800dfd6:	405a      	eors	r2, r3
 800dfd8:	f04f 0300 	mov.w	r3, #0
 800dfdc:	d105      	bne.n	800dfea <_ZN6tflite21MicroInterpreterGraph17GetSubgraphOutputEii+0x8e>
 800dfde:	b003      	add	sp, #12
 800dfe0:	bd30      	pop	{r4, r5, pc}
 800dfe2:	f7ff fd9d 	bl	800db20 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800dfe6:	f7ff fd83 	bl	800daf0 <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0>
 800dfea:	f00f fca7 	bl	801d93c <__stack_chk_fail>
 800dfee:	2300      	movs	r3, #0
 800dff0:	681b      	ldr	r3, [r3, #0]
 800dff2:	deff      	udf	#255	; 0xff
 800dff4:	20011294 	.word	0x20011294

0800dff8 <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii>:
 800dff8:	b530      	push	{r4, r5, lr}
 800dffa:	6883      	ldr	r3, [r0, #8]
 800dffc:	4c24      	ldr	r4, [pc, #144]	; (800e090 <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x98>)
 800dffe:	b083      	sub	sp, #12
 800e000:	6824      	ldr	r4, [r4, #0]
 800e002:	9401      	str	r4, [sp, #4]
 800e004:	f04f 0400 	mov.w	r4, #0
 800e008:	681c      	ldr	r4, [r3, #0]
 800e00a:	eba3 0c04 	sub.w	ip, r3, r4
 800e00e:	f8bc 4000 	ldrh.w	r4, [ip]
 800e012:	2c08      	cmp	r4, #8
 800e014:	d939      	bls.n	800e08a <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x92>
 800e016:	f8bc 4008 	ldrh.w	r4, [ip, #8]
 800e01a:	2c00      	cmp	r4, #0
 800e01c:	d035      	beq.n	800e08a <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x92>
 800e01e:	591d      	ldr	r5, [r3, r4]
 800e020:	4423      	add	r3, r4
 800e022:	195c      	adds	r4, r3, r5
 800e024:	595b      	ldr	r3, [r3, r5]
 800e026:	4299      	cmp	r1, r3
 800e028:	d229      	bcs.n	800e07e <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x86>
 800e02a:	3404      	adds	r4, #4
 800e02c:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800e030:	f854 5021 	ldr.w	r5, [r4, r1, lsl #2]
 800e034:	595c      	ldr	r4, [r3, r5]
 800e036:	442b      	add	r3, r5
 800e038:	eba3 0c04 	sub.w	ip, r3, r4
 800e03c:	f8bc 4000 	ldrh.w	r4, [ip]
 800e040:	2c06      	cmp	r4, #6
 800e042:	d922      	bls.n	800e08a <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x92>
 800e044:	f8bc 4006 	ldrh.w	r4, [ip, #6]
 800e048:	b1fc      	cbz	r4, 800e08a <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x92>
 800e04a:	591d      	ldr	r5, [r3, r4]
 800e04c:	4423      	add	r3, r4
 800e04e:	195c      	adds	r4, r3, r5
 800e050:	595b      	ldr	r3, [r3, r5]
 800e052:	429a      	cmp	r2, r3
 800e054:	d215      	bcs.n	800e082 <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x8a>
 800e056:	6903      	ldr	r3, [r0, #16]
 800e058:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800e05c:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 800e060:	6853      	ldr	r3, [r2, #4]
 800e062:	6848      	ldr	r0, [r1, #4]
 800e064:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800e068:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800e06c:	4b08      	ldr	r3, [pc, #32]	; (800e090 <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x98>)
 800e06e:	681a      	ldr	r2, [r3, #0]
 800e070:	9b01      	ldr	r3, [sp, #4]
 800e072:	405a      	eors	r2, r3
 800e074:	f04f 0300 	mov.w	r3, #0
 800e078:	d105      	bne.n	800e086 <_ZN6tflite21MicroInterpreterGraph16GetSubgraphInputEii+0x8e>
 800e07a:	b003      	add	sp, #12
 800e07c:	bd30      	pop	{r4, r5, pc}
 800e07e:	f7ff fd4f 	bl	800db20 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800e082:	f7ff fd35 	bl	800daf0 <_ZNK11flatbuffers6VectorIlmE3GetEm.part.0>
 800e086:	f00f fc59 	bl	801d93c <__stack_chk_fail>
 800e08a:	2300      	movs	r3, #0
 800e08c:	681b      	ldr	r3, [r3, #0]
 800e08e:	deff      	udf	#255	; 0xff
 800e090:	20011294 	.word	0x20011294

0800e094 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi>:
 800e094:	b500      	push	{lr}
 800e096:	6883      	ldr	r3, [r0, #8]
 800e098:	4a1b      	ldr	r2, [pc, #108]	; (800e108 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x74>)
 800e09a:	b083      	sub	sp, #12
 800e09c:	6812      	ldr	r2, [r2, #0]
 800e09e:	9201      	str	r2, [sp, #4]
 800e0a0:	f04f 0200 	mov.w	r2, #0
 800e0a4:	681a      	ldr	r2, [r3, #0]
 800e0a6:	1a9a      	subs	r2, r3, r2
 800e0a8:	8810      	ldrh	r0, [r2, #0]
 800e0aa:	2808      	cmp	r0, #8
 800e0ac:	d928      	bls.n	800e100 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x6c>
 800e0ae:	8912      	ldrh	r2, [r2, #8]
 800e0b0:	b332      	cbz	r2, 800e100 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x6c>
 800e0b2:	5898      	ldr	r0, [r3, r2]
 800e0b4:	4413      	add	r3, r2
 800e0b6:	181a      	adds	r2, r3, r0
 800e0b8:	581b      	ldr	r3, [r3, r0]
 800e0ba:	4299      	cmp	r1, r3
 800e0bc:	d21c      	bcs.n	800e0f8 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x64>
 800e0be:	3204      	adds	r2, #4
 800e0c0:	eb02 0381 	add.w	r3, r2, r1, lsl #2
 800e0c4:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
 800e0c8:	581a      	ldr	r2, [r3, r0]
 800e0ca:	4403      	add	r3, r0
 800e0cc:	1a9a      	subs	r2, r3, r2
 800e0ce:	8811      	ldrh	r1, [r2, #0]
 800e0d0:	2908      	cmp	r1, #8
 800e0d2:	d80a      	bhi.n	800e0ea <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x56>
 800e0d4:	2000      	movs	r0, #0
 800e0d6:	4b0c      	ldr	r3, [pc, #48]	; (800e108 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x74>)
 800e0d8:	681a      	ldr	r2, [r3, #0]
 800e0da:	9b01      	ldr	r3, [sp, #4]
 800e0dc:	405a      	eors	r2, r3
 800e0de:	f04f 0300 	mov.w	r3, #0
 800e0e2:	d10b      	bne.n	800e0fc <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x68>
 800e0e4:	b003      	add	sp, #12
 800e0e6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e0ea:	8910      	ldrh	r0, [r2, #8]
 800e0ec:	2800      	cmp	r0, #0
 800e0ee:	d0f2      	beq.n	800e0d6 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x42>
 800e0f0:	581a      	ldr	r2, [r3, r0]
 800e0f2:	4403      	add	r3, r0
 800e0f4:	5898      	ldr	r0, [r3, r2]
 800e0f6:	e7ee      	b.n	800e0d6 <_ZN6tflite21MicroInterpreterGraph18NumSubgraphOutputsEi+0x42>
 800e0f8:	f7ff fd12 	bl	800db20 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800e0fc:	f00f fc1e 	bl	801d93c <__stack_chk_fail>
 800e100:	2300      	movs	r3, #0
 800e102:	681b      	ldr	r3, [r3, #0]
 800e104:	deff      	udf	#255	; 0xff
 800e106:	bf00      	nop
 800e108:	20011294 	.word	0x20011294

0800e10c <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE>:
 800e10c:	b510      	push	{r4, lr}
 800e10e:	6041      	str	r1, [r0, #4]
 800e110:	b082      	sub	sp, #8
 800e112:	2100      	movs	r1, #0
 800e114:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800e118:	e9c0 1104 	strd	r1, r1, [r0, #16]
 800e11c:	4b11      	ldr	r3, [pc, #68]	; (800e164 <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x58>)
 800e11e:	9c04      	ldr	r4, [sp, #16]
 800e120:	6184      	str	r4, [r0, #24]
 800e122:	681b      	ldr	r3, [r3, #0]
 800e124:	9301      	str	r3, [sp, #4]
 800e126:	f04f 0300 	mov.w	r3, #0
 800e12a:	4b0f      	ldr	r3, [pc, #60]	; (800e168 <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x5c>)
 800e12c:	6003      	str	r3, [r0, #0]
 800e12e:	b13a      	cbz	r2, 800e140 <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x34>
 800e130:	6813      	ldr	r3, [r2, #0]
 800e132:	1ad3      	subs	r3, r2, r3
 800e134:	f8b3 c000 	ldrh.w	ip, [r3]
 800e138:	f1bc 0f08 	cmp.w	ip, #8
 800e13c:	d809      	bhi.n	800e152 <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x46>
 800e13e:	61c1      	str	r1, [r0, #28]
 800e140:	4b08      	ldr	r3, [pc, #32]	; (800e164 <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x58>)
 800e142:	681a      	ldr	r2, [r3, #0]
 800e144:	9b01      	ldr	r3, [sp, #4]
 800e146:	405a      	eors	r2, r3
 800e148:	f04f 0300 	mov.w	r3, #0
 800e14c:	d108      	bne.n	800e160 <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x54>
 800e14e:	b002      	add	sp, #8
 800e150:	bd10      	pop	{r4, pc}
 800e152:	8919      	ldrh	r1, [r3, #8]
 800e154:	2900      	cmp	r1, #0
 800e156:	d0f2      	beq.n	800e13e <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x32>
 800e158:	5853      	ldr	r3, [r2, r1]
 800e15a:	440a      	add	r2, r1
 800e15c:	18d1      	adds	r1, r2, r3
 800e15e:	e7ee      	b.n	800e13e <_ZN6tflite21MicroInterpreterGraphC1EP13TfLiteContextPKNS_5ModelEPNS_14MicroAllocatorEPNS_22MicroResourceVariablesE+0x32>
 800e160:	f00f fbec 	bl	801d93c <__stack_chk_fail>
 800e164:	20011294 	.word	0x20011294
 800e168:	080264bc 	.word	0x080264bc

0800e16c <_ZN6tflite21MicroInterpreterGraph22SetSubgraphAllocationsEPNS_19SubgraphAllocationsE>:
 800e16c:	b500      	push	{lr}
 800e16e:	4b09      	ldr	r3, [pc, #36]	; (800e194 <_ZN6tflite21MicroInterpreterGraph22SetSubgraphAllocationsEPNS_19SubgraphAllocationsE+0x28>)
 800e170:	6101      	str	r1, [r0, #16]
 800e172:	b083      	sub	sp, #12
 800e174:	681b      	ldr	r3, [r3, #0]
 800e176:	9301      	str	r3, [sp, #4]
 800e178:	f04f 0300 	mov.w	r3, #0
 800e17c:	4b05      	ldr	r3, [pc, #20]	; (800e194 <_ZN6tflite21MicroInterpreterGraph22SetSubgraphAllocationsEPNS_19SubgraphAllocationsE+0x28>)
 800e17e:	681a      	ldr	r2, [r3, #0]
 800e180:	9b01      	ldr	r3, [sp, #4]
 800e182:	405a      	eors	r2, r3
 800e184:	f04f 0300 	mov.w	r3, #0
 800e188:	d102      	bne.n	800e190 <_ZN6tflite21MicroInterpreterGraph22SetSubgraphAllocationsEPNS_19SubgraphAllocationsE+0x24>
 800e18a:	b003      	add	sp, #12
 800e18c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e190:	f00f fbd4 	bl	801d93c <__stack_chk_fail>
 800e194:	20011294 	.word	0x20011294

0800e198 <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0>:
 800e198:	b40f      	push	{r0, r1, r2, r3}
 800e19a:	b500      	push	{lr}
 800e19c:	b083      	sub	sp, #12
 800e19e:	4b0c      	ldr	r3, [pc, #48]	; (800e1d0 <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0+0x38>)
 800e1a0:	480c      	ldr	r0, [pc, #48]	; (800e1d4 <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0+0x3c>)
 800e1a2:	a905      	add	r1, sp, #20
 800e1a4:	9100      	str	r1, [sp, #0]
 800e1a6:	681b      	ldr	r3, [r3, #0]
 800e1a8:	9301      	str	r3, [sp, #4]
 800e1aa:	f04f 0300 	mov.w	r3, #0
 800e1ae:	f7f3 fee7 	bl	8001f80 <DebugLog>
 800e1b2:	4b07      	ldr	r3, [pc, #28]	; (800e1d0 <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0+0x38>)
 800e1b4:	681a      	ldr	r2, [r3, #0]
 800e1b6:	9b01      	ldr	r3, [sp, #4]
 800e1b8:	405a      	eors	r2, r3
 800e1ba:	f04f 0300 	mov.w	r3, #0
 800e1be:	d104      	bne.n	800e1ca <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0+0x32>
 800e1c0:	b003      	add	sp, #12
 800e1c2:	f85d eb04 	ldr.w	lr, [sp], #4
 800e1c6:	b004      	add	sp, #16
 800e1c8:	4770      	bx	lr
 800e1ca:	f00f fbb7 	bl	801d93c <__stack_chk_fail>
 800e1ce:	bf00      	nop
 800e1d0:	20011294 	.word	0x20011294
 800e1d4:	080264f4 	.word	0x080264f4

0800e1d8 <_Z12VMicroPrintfPKcSt9__va_list>:
 800e1d8:	b500      	push	{lr}
 800e1da:	4b0b      	ldr	r3, [pc, #44]	; (800e208 <_Z12VMicroPrintfPKcSt9__va_list+0x30>)
 800e1dc:	b083      	sub	sp, #12
 800e1de:	681b      	ldr	r3, [r3, #0]
 800e1e0:	9301      	str	r3, [sp, #4]
 800e1e2:	f04f 0300 	mov.w	r3, #0
 800e1e6:	f7f3 fecb 	bl	8001f80 <DebugLog>
 800e1ea:	4b07      	ldr	r3, [pc, #28]	; (800e208 <_Z12VMicroPrintfPKcSt9__va_list+0x30>)
 800e1ec:	681a      	ldr	r2, [r3, #0]
 800e1ee:	9b01      	ldr	r3, [sp, #4]
 800e1f0:	405a      	eors	r2, r3
 800e1f2:	f04f 0300 	mov.w	r3, #0
 800e1f6:	d105      	bne.n	800e204 <_Z12VMicroPrintfPKcSt9__va_list+0x2c>
 800e1f8:	4804      	ldr	r0, [pc, #16]	; (800e20c <_Z12VMicroPrintfPKcSt9__va_list+0x34>)
 800e1fa:	b003      	add	sp, #12
 800e1fc:	f85d eb04 	ldr.w	lr, [sp], #4
 800e200:	f7ff bfca 	b.w	800e198 <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0>
 800e204:	f00f fb9a 	bl	801d93c <__stack_chk_fail>
 800e208:	20011294 	.word	0x20011294
 800e20c:	080264f4 	.word	0x080264f4

0800e210 <_Z11MicroPrintfPKcz>:
 800e210:	b40f      	push	{r0, r1, r2, r3}
 800e212:	b500      	push	{lr}
 800e214:	b083      	sub	sp, #12
 800e216:	a904      	add	r1, sp, #16
 800e218:	4b0d      	ldr	r3, [pc, #52]	; (800e250 <_Z11MicroPrintfPKcz+0x40>)
 800e21a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e21e:	681b      	ldr	r3, [r3, #0]
 800e220:	9301      	str	r3, [sp, #4]
 800e222:	f04f 0300 	mov.w	r3, #0
 800e226:	9100      	str	r1, [sp, #0]
 800e228:	f7f3 feaa 	bl	8001f80 <DebugLog>
 800e22c:	4809      	ldr	r0, [pc, #36]	; (800e254 <_Z11MicroPrintfPKcz+0x44>)
 800e22e:	f7ff ffb3 	bl	800e198 <_ZN12_GLOBAL__N_19VDebugLogEPKcz.constprop.0>
 800e232:	4b07      	ldr	r3, [pc, #28]	; (800e250 <_Z11MicroPrintfPKcz+0x40>)
 800e234:	681a      	ldr	r2, [r3, #0]
 800e236:	9b01      	ldr	r3, [sp, #4]
 800e238:	405a      	eors	r2, r3
 800e23a:	f04f 0300 	mov.w	r3, #0
 800e23e:	d104      	bne.n	800e24a <_Z11MicroPrintfPKcz+0x3a>
 800e240:	b003      	add	sp, #12
 800e242:	f85d eb04 	ldr.w	lr, [sp], #4
 800e246:	b004      	add	sp, #16
 800e248:	4770      	bx	lr
 800e24a:	f00f fb77 	bl	801d93c <__stack_chk_fail>
 800e24e:	bf00      	nop
 800e250:	20011294 	.word	0x20011294
 800e254:	080264f4 	.word	0x080264f4

0800e258 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration>:
 800e258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e25c:	4b2a      	ldr	r3, [pc, #168]	; (800e308 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xb0>)
 800e25e:	b082      	sub	sp, #8
 800e260:	2500      	movs	r5, #0
 800e262:	681b      	ldr	r3, [r3, #0]
 800e264:	9301      	str	r3, [sp, #4]
 800e266:	f04f 0300 	mov.w	r3, #0
 800e26a:	6015      	str	r5, [r2, #0]
 800e26c:	4616      	mov	r6, r2
 800e26e:	4680      	mov	r8, r0
 800e270:	460f      	mov	r7, r1
 800e272:	f000 f967 	bl	800e544 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE>
 800e276:	28ce      	cmp	r0, #206	; 0xce
 800e278:	4604      	mov	r4, r0
 800e27a:	dc2c      	bgt.n	800e2d6 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x7e>
 800e27c:	2820      	cmp	r0, #32
 800e27e:	d011      	beq.n	800e2a4 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x4c>
 800e280:	683b      	ldr	r3, [r7, #0]
 800e282:	4638      	mov	r0, r7
 800e284:	681b      	ldr	r3, [r3, #0]
 800e286:	4621      	mov	r1, r4
 800e288:	4798      	blx	r3
 800e28a:	6030      	str	r0, [r6, #0]
 800e28c:	b348      	cbz	r0, 800e2e2 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x8a>
 800e28e:	4628      	mov	r0, r5
 800e290:	4b1d      	ldr	r3, [pc, #116]	; (800e308 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xb0>)
 800e292:	681a      	ldr	r2, [r3, #0]
 800e294:	9b01      	ldr	r3, [sp, #4]
 800e296:	405a      	eors	r2, r3
 800e298:	f04f 0300 	mov.w	r3, #0
 800e29c:	d132      	bne.n	800e304 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xac>
 800e29e:	b002      	add	sp, #8
 800e2a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2a4:	f8d8 3000 	ldr.w	r3, [r8]
 800e2a8:	eba8 0303 	sub.w	r3, r8, r3
 800e2ac:	881a      	ldrh	r2, [r3, #0]
 800e2ae:	2a06      	cmp	r2, #6
 800e2b0:	d923      	bls.n	800e2fa <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xa2>
 800e2b2:	88db      	ldrh	r3, [r3, #6]
 800e2b4:	eb08 0103 	add.w	r1, r8, r3
 800e2b8:	b1fb      	cbz	r3, 800e2fa <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xa2>
 800e2ba:	f858 2003 	ldr.w	r2, [r8, r3]
 800e2be:	683b      	ldr	r3, [r7, #0]
 800e2c0:	4411      	add	r1, r2
 800e2c2:	685b      	ldr	r3, [r3, #4]
 800e2c4:	3104      	adds	r1, #4
 800e2c6:	4638      	mov	r0, r7
 800e2c8:	4798      	blx	r3
 800e2ca:	4603      	mov	r3, r0
 800e2cc:	fab0 f080 	clz	r0, r0
 800e2d0:	6033      	str	r3, [r6, #0]
 800e2d2:	0940      	lsrs	r0, r0, #5
 800e2d4:	e7dc      	b.n	800e290 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x38>
 800e2d6:	480d      	ldr	r0, [pc, #52]	; (800e30c <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xb4>)
 800e2d8:	4621      	mov	r1, r4
 800e2da:	f7ff ff99 	bl	800e210 <_Z11MicroPrintfPKcz>
 800e2de:	2001      	movs	r0, #1
 800e2e0:	e7d6      	b.n	800e290 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x38>
 800e2e2:	2c00      	cmp	r4, #0
 800e2e4:	bfa8      	it	ge
 800e2e6:	4b0a      	ldrge	r3, [pc, #40]	; (800e310 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xb8>)
 800e2e8:	480a      	ldr	r0, [pc, #40]	; (800e314 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xbc>)
 800e2ea:	bfac      	ite	ge
 800e2ec:	f853 1024 	ldrge.w	r1, [r3, r4, lsl #2]
 800e2f0:	4909      	ldrlt	r1, [pc, #36]	; (800e318 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xc0>)
 800e2f2:	f7ff ff8d 	bl	800e210 <_Z11MicroPrintfPKcz>
 800e2f6:	2001      	movs	r0, #1
 800e2f8:	e7ca      	b.n	800e290 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x38>
 800e2fa:	4808      	ldr	r0, [pc, #32]	; (800e31c <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0xc4>)
 800e2fc:	f7ff ff88 	bl	800e210 <_Z11MicroPrintfPKcz>
 800e300:	2001      	movs	r0, #1
 800e302:	e7c5      	b.n	800e290 <_ZN6tflite25GetRegistrationFromOpCodeEPKNS_12OperatorCodeERKNS_15MicroOpResolverEPPK16TFLMRegistration+0x38>
 800e304:	f00f fb1a 	bl	801d93c <__stack_chk_fail>
 800e308:	20011294 	.word	0x20011294
 800e30c:	080264f8 	.word	0x080264f8
 800e310:	080209e4 	.word	0x080209e4
 800e314:	0802651c 	.word	0x0802651c
 800e318:	08024730 	.word	0x08024730
 800e31c:	08026544 	.word	0x08026544

0800e320 <_ZN6tflite22MicroResourceVariables8ResetAllEv>:
 800e320:	b570      	push	{r4, r5, r6, lr}
 800e322:	4b13      	ldr	r3, [pc, #76]	; (800e370 <_ZN6tflite22MicroResourceVariables8ResetAllEv+0x50>)
 800e324:	b082      	sub	sp, #8
 800e326:	681b      	ldr	r3, [r3, #0]
 800e328:	9301      	str	r3, [sp, #4]
 800e32a:	f04f 0300 	mov.w	r3, #0
 800e32e:	6883      	ldr	r3, [r0, #8]
 800e330:	2b00      	cmp	r3, #0
 800e332:	dd10      	ble.n	800e356 <_ZN6tflite22MicroResourceVariables8ResetAllEv+0x36>
 800e334:	2400      	movs	r4, #0
 800e336:	4606      	mov	r6, r0
 800e338:	4625      	mov	r5, r4
 800e33a:	6833      	ldr	r3, [r6, #0]
 800e33c:	4423      	add	r3, r4
 800e33e:	3501      	adds	r5, #1
 800e340:	68da      	ldr	r2, [r3, #12]
 800e342:	f993 1010 	ldrsb.w	r1, [r3, #16]
 800e346:	6898      	ldr	r0, [r3, #8]
 800e348:	f00e fbcc 	bl	801cae4 <memset>
 800e34c:	68b3      	ldr	r3, [r6, #8]
 800e34e:	42ab      	cmp	r3, r5
 800e350:	f104 0414 	add.w	r4, r4, #20
 800e354:	dcf1      	bgt.n	800e33a <_ZN6tflite22MicroResourceVariables8ResetAllEv+0x1a>
 800e356:	4b06      	ldr	r3, [pc, #24]	; (800e370 <_ZN6tflite22MicroResourceVariables8ResetAllEv+0x50>)
 800e358:	681a      	ldr	r2, [r3, #0]
 800e35a:	9b01      	ldr	r3, [sp, #4]
 800e35c:	405a      	eors	r2, r3
 800e35e:	f04f 0300 	mov.w	r3, #0
 800e362:	d102      	bne.n	800e36a <_ZN6tflite22MicroResourceVariables8ResetAllEv+0x4a>
 800e364:	2000      	movs	r0, #0
 800e366:	b002      	add	sp, #8
 800e368:	bd70      	pop	{r4, r5, r6, pc}
 800e36a:	f00f fae7 	bl	801d93c <__stack_chk_fail>
 800e36e:	bf00      	nop
 800e370:	20011294 	.word	0x20011294

0800e374 <_ZN6tflite12ElementCountERK14TfLiteIntArray>:
 800e374:	b510      	push	{r4, lr}
 800e376:	6804      	ldr	r4, [r0, #0]
 800e378:	4b0f      	ldr	r3, [pc, #60]	; (800e3b8 <_ZN6tflite12ElementCountERK14TfLiteIntArray+0x44>)
 800e37a:	b082      	sub	sp, #8
 800e37c:	2c00      	cmp	r4, #0
 800e37e:	681b      	ldr	r3, [r3, #0]
 800e380:	9301      	str	r3, [sp, #4]
 800e382:	f04f 0300 	mov.w	r3, #0
 800e386:	dd12      	ble.n	800e3ae <_ZN6tflite12ElementCountERK14TfLiteIntArray+0x3a>
 800e388:	4602      	mov	r2, r0
 800e38a:	2300      	movs	r3, #0
 800e38c:	2001      	movs	r0, #1
 800e38e:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800e392:	3301      	adds	r3, #1
 800e394:	42a3      	cmp	r3, r4
 800e396:	fb01 f000 	mul.w	r0, r1, r0
 800e39a:	d1f8      	bne.n	800e38e <_ZN6tflite12ElementCountERK14TfLiteIntArray+0x1a>
 800e39c:	4b06      	ldr	r3, [pc, #24]	; (800e3b8 <_ZN6tflite12ElementCountERK14TfLiteIntArray+0x44>)
 800e39e:	681a      	ldr	r2, [r3, #0]
 800e3a0:	9b01      	ldr	r3, [sp, #4]
 800e3a2:	405a      	eors	r2, r3
 800e3a4:	f04f 0300 	mov.w	r3, #0
 800e3a8:	d103      	bne.n	800e3b2 <_ZN6tflite12ElementCountERK14TfLiteIntArray+0x3e>
 800e3aa:	b002      	add	sp, #8
 800e3ac:	bd10      	pop	{r4, pc}
 800e3ae:	2001      	movs	r0, #1
 800e3b0:	e7f4      	b.n	800e39c <_ZN6tflite12ElementCountERK14TfLiteIntArray+0x28>
 800e3b2:	f00f fac3 	bl	801d93c <__stack_chk_fail>
 800e3b6:	bf00      	nop
 800e3b8:	20011294 	.word	0x20011294

0800e3bc <_ZN6tflite16InitializeTargetEv>:
 800e3bc:	b500      	push	{lr}
 800e3be:	4b09      	ldr	r3, [pc, #36]	; (800e3e4 <_ZN6tflite16InitializeTargetEv+0x28>)
 800e3c0:	b083      	sub	sp, #12
 800e3c2:	681b      	ldr	r3, [r3, #0]
 800e3c4:	9301      	str	r3, [sp, #4]
 800e3c6:	f04f 0300 	mov.w	r3, #0
 800e3ca:	4b06      	ldr	r3, [pc, #24]	; (800e3e4 <_ZN6tflite16InitializeTargetEv+0x28>)
 800e3cc:	681a      	ldr	r2, [r3, #0]
 800e3ce:	9b01      	ldr	r3, [sp, #4]
 800e3d0:	405a      	eors	r2, r3
 800e3d2:	f04f 0300 	mov.w	r3, #0
 800e3d6:	d102      	bne.n	800e3de <_ZN6tflite16InitializeTargetEv+0x22>
 800e3d8:	b003      	add	sp, #12
 800e3da:	f85d fb04 	ldr.w	pc, [sp], #4
 800e3de:	f00f faad 	bl	801d93c <__stack_chk_fail>
 800e3e2:	bf00      	nop
 800e3e4:	20011294 	.word	0x20011294

0800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>:
 800e3e8:	b530      	push	{r4, r5, lr}
 800e3ea:	4b0d      	ldr	r3, [pc, #52]	; (800e420 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType+0x38>)
 800e3ec:	b083      	sub	sp, #12
 800e3ee:	460d      	mov	r5, r1
 800e3f0:	681b      	ldr	r3, [r3, #0]
 800e3f2:	9301      	str	r3, [sp, #4]
 800e3f4:	f04f 0300 	mov.w	r3, #0
 800e3f8:	4604      	mov	r4, r0
 800e3fa:	f000 f87f 	bl	800e4fc <_ZN6tflite21GetMicroErrorReporterEv>
 800e3fe:	4b08      	ldr	r3, [pc, #32]	; (800e420 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType+0x38>)
 800e400:	6819      	ldr	r1, [r3, #0]
 800e402:	9b01      	ldr	r3, [sp, #4]
 800e404:	4059      	eors	r1, r3
 800e406:	f04f 0300 	mov.w	r3, #0
 800e40a:	d107      	bne.n	800e41c <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType+0x34>
 800e40c:	4602      	mov	r2, r0
 800e40e:	4629      	mov	r1, r5
 800e410:	4620      	mov	r0, r4
 800e412:	b003      	add	sp, #12
 800e414:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e418:	f7f8 bdd2 	b.w	8006fc0 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteTypePNS_13ErrorReporterE>
 800e41c:	f00f fa8e 	bl	801d93c <__stack_chk_fail>
 800e420:	20011294 	.word	0x20011294

0800e424 <_ZN6tflite24CallBuiltinParseFunctionEPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvES3_S7_S9_>:
 800e424:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e426:	461f      	mov	r7, r3
 800e428:	4b0e      	ldr	r3, [pc, #56]	; (800e464 <_ZN6tflite24CallBuiltinParseFunctionEPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvES3_S7_S9_+0x40>)
 800e42a:	b083      	sub	sp, #12
 800e42c:	4616      	mov	r6, r2
 800e42e:	681b      	ldr	r3, [r3, #0]
 800e430:	9301      	str	r3, [sp, #4]
 800e432:	f04f 0300 	mov.w	r3, #0
 800e436:	4604      	mov	r4, r0
 800e438:	460d      	mov	r5, r1
 800e43a:	f000 f85f 	bl	800e4fc <_ZN6tflite21GetMicroErrorReporterEv>
 800e43e:	4b09      	ldr	r3, [pc, #36]	; (800e464 <_ZN6tflite24CallBuiltinParseFunctionEPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvES3_S7_S9_+0x40>)
 800e440:	681a      	ldr	r2, [r3, #0]
 800e442:	9b01      	ldr	r3, [sp, #4]
 800e444:	405a      	eors	r2, r3
 800e446:	f04f 0300 	mov.w	r3, #0
 800e44a:	d108      	bne.n	800e45e <_ZN6tflite24CallBuiltinParseFunctionEPF12TfLiteStatusPKNS_8OperatorEPNS_13ErrorReporterEPNS_20BuiltinDataAllocatorEPPvES3_S7_S9_+0x3a>
 800e44c:	4601      	mov	r1, r0
 800e44e:	463b      	mov	r3, r7
 800e450:	4632      	mov	r2, r6
 800e452:	4628      	mov	r0, r5
 800e454:	46a4      	mov	ip, r4
 800e456:	b003      	add	sp, #12
 800e458:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e45c:	4760      	bx	ip
 800e45e:	f00f fa6d 	bl	801d93c <__stack_chk_fail>
 800e462:	bf00      	nop
 800e464:	20011294 	.word	0x20011294

0800e468 <_ZN6tflite18MicroErrorReporterD1Ev>:
 800e468:	b500      	push	{lr}
 800e46a:	4b09      	ldr	r3, [pc, #36]	; (800e490 <_ZN6tflite18MicroErrorReporterD1Ev+0x28>)
 800e46c:	b083      	sub	sp, #12
 800e46e:	681b      	ldr	r3, [r3, #0]
 800e470:	9301      	str	r3, [sp, #4]
 800e472:	f04f 0300 	mov.w	r3, #0
 800e476:	4b06      	ldr	r3, [pc, #24]	; (800e490 <_ZN6tflite18MicroErrorReporterD1Ev+0x28>)
 800e478:	681a      	ldr	r2, [r3, #0]
 800e47a:	9b01      	ldr	r3, [sp, #4]
 800e47c:	405a      	eors	r2, r3
 800e47e:	f04f 0300 	mov.w	r3, #0
 800e482:	d102      	bne.n	800e48a <_ZN6tflite18MicroErrorReporterD1Ev+0x22>
 800e484:	b003      	add	sp, #12
 800e486:	f85d fb04 	ldr.w	pc, [sp], #4
 800e48a:	f00f fa57 	bl	801d93c <__stack_chk_fail>
 800e48e:	bf00      	nop
 800e490:	20011294 	.word	0x20011294

0800e494 <_ZN6tflite18MicroErrorReporter6ReportEPKcSt9__va_list>:
 800e494:	b500      	push	{lr}
 800e496:	4b0b      	ldr	r3, [pc, #44]	; (800e4c4 <_ZN6tflite18MicroErrorReporter6ReportEPKcSt9__va_list+0x30>)
 800e498:	b083      	sub	sp, #12
 800e49a:	4608      	mov	r0, r1
 800e49c:	4611      	mov	r1, r2
 800e49e:	681b      	ldr	r3, [r3, #0]
 800e4a0:	9301      	str	r3, [sp, #4]
 800e4a2:	f04f 0300 	mov.w	r3, #0
 800e4a6:	f7ff fe97 	bl	800e1d8 <_Z12VMicroPrintfPKcSt9__va_list>
 800e4aa:	4b06      	ldr	r3, [pc, #24]	; (800e4c4 <_ZN6tflite18MicroErrorReporter6ReportEPKcSt9__va_list+0x30>)
 800e4ac:	681a      	ldr	r2, [r3, #0]
 800e4ae:	9b01      	ldr	r3, [sp, #4]
 800e4b0:	405a      	eors	r2, r3
 800e4b2:	f04f 0300 	mov.w	r3, #0
 800e4b6:	d103      	bne.n	800e4c0 <_ZN6tflite18MicroErrorReporter6ReportEPKcSt9__va_list+0x2c>
 800e4b8:	2000      	movs	r0, #0
 800e4ba:	b003      	add	sp, #12
 800e4bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800e4c0:	f00f fa3c 	bl	801d93c <__stack_chk_fail>
 800e4c4:	20011294 	.word	0x20011294

0800e4c8 <_ZN6tflite18MicroErrorReporterD0Ev>:
 800e4c8:	b510      	push	{r4, lr}
 800e4ca:	4b0b      	ldr	r3, [pc, #44]	; (800e4f8 <_ZN6tflite18MicroErrorReporterD0Ev+0x30>)
 800e4cc:	b082      	sub	sp, #8
 800e4ce:	2104      	movs	r1, #4
 800e4d0:	681b      	ldr	r3, [r3, #0]
 800e4d2:	9301      	str	r3, [sp, #4]
 800e4d4:	f04f 0300 	mov.w	r3, #0
 800e4d8:	4604      	mov	r4, r0
 800e4da:	f00c fbc5 	bl	801ac68 <_ZdlPvj>
 800e4de:	4b06      	ldr	r3, [pc, #24]	; (800e4f8 <_ZN6tflite18MicroErrorReporterD0Ev+0x30>)
 800e4e0:	681a      	ldr	r2, [r3, #0]
 800e4e2:	9b01      	ldr	r3, [sp, #4]
 800e4e4:	405a      	eors	r2, r3
 800e4e6:	f04f 0300 	mov.w	r3, #0
 800e4ea:	d102      	bne.n	800e4f2 <_ZN6tflite18MicroErrorReporterD0Ev+0x2a>
 800e4ec:	4620      	mov	r0, r4
 800e4ee:	b002      	add	sp, #8
 800e4f0:	bd10      	pop	{r4, pc}
 800e4f2:	f00f fa23 	bl	801d93c <__stack_chk_fail>
 800e4f6:	bf00      	nop
 800e4f8:	20011294 	.word	0x20011294

0800e4fc <_ZN6tflite21GetMicroErrorReporterEv>:
 800e4fc:	b500      	push	{lr}
 800e4fe:	4b0d      	ldr	r3, [pc, #52]	; (800e534 <_ZN6tflite21GetMicroErrorReporterEv+0x38>)
 800e500:	4a0d      	ldr	r2, [pc, #52]	; (800e538 <_ZN6tflite21GetMicroErrorReporterEv+0x3c>)
 800e502:	6818      	ldr	r0, [r3, #0]
 800e504:	b083      	sub	sp, #12
 800e506:	6812      	ldr	r2, [r2, #0]
 800e508:	9201      	str	r2, [sp, #4]
 800e50a:	f04f 0200 	mov.w	r2, #0
 800e50e:	b148      	cbz	r0, 800e524 <_ZN6tflite21GetMicroErrorReporterEv+0x28>
 800e510:	4b09      	ldr	r3, [pc, #36]	; (800e538 <_ZN6tflite21GetMicroErrorReporterEv+0x3c>)
 800e512:	681a      	ldr	r2, [r3, #0]
 800e514:	9b01      	ldr	r3, [sp, #4]
 800e516:	405a      	eors	r2, r3
 800e518:	f04f 0300 	mov.w	r3, #0
 800e51c:	d107      	bne.n	800e52e <_ZN6tflite21GetMicroErrorReporterEv+0x32>
 800e51e:	b003      	add	sp, #12
 800e520:	f85d fb04 	ldr.w	pc, [sp], #4
 800e524:	4805      	ldr	r0, [pc, #20]	; (800e53c <_ZN6tflite21GetMicroErrorReporterEv+0x40>)
 800e526:	4a06      	ldr	r2, [pc, #24]	; (800e540 <_ZN6tflite21GetMicroErrorReporterEv+0x44>)
 800e528:	6002      	str	r2, [r0, #0]
 800e52a:	6018      	str	r0, [r3, #0]
 800e52c:	e7f0      	b.n	800e510 <_ZN6tflite21GetMicroErrorReporterEv+0x14>
 800e52e:	f00f fa05 	bl	801d93c <__stack_chk_fail>
 800e532:	bf00      	nop
 800e534:	20011278 	.word	0x20011278
 800e538:	20011294 	.word	0x20011294
 800e53c:	2001127c 	.word	0x2001127c
 800e540:	080265d4 	.word	0x080265d4

0800e544 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE>:
 800e544:	b500      	push	{lr}
 800e546:	4b15      	ldr	r3, [pc, #84]	; (800e59c <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x58>)
 800e548:	b083      	sub	sp, #12
 800e54a:	681b      	ldr	r3, [r3, #0]
 800e54c:	9301      	str	r3, [sp, #4]
 800e54e:	f04f 0300 	mov.w	r3, #0
 800e552:	b308      	cbz	r0, 800e598 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x54>
 800e554:	6803      	ldr	r3, [r0, #0]
 800e556:	1ac3      	subs	r3, r0, r3
 800e558:	881a      	ldrh	r2, [r3, #0]
 800e55a:	2a0a      	cmp	r2, #10
 800e55c:	d909      	bls.n	800e572 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x2e>
 800e55e:	895a      	ldrh	r2, [r3, #10]
 800e560:	b102      	cbz	r2, 800e564 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x20>
 800e562:	5882      	ldr	r2, [r0, r2]
 800e564:	889b      	ldrh	r3, [r3, #4]
 800e566:	b98b      	cbnz	r3, 800e58c <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x48>
 800e568:	4618      	mov	r0, r3
 800e56a:	4290      	cmp	r0, r2
 800e56c:	bfb8      	it	lt
 800e56e:	4610      	movlt	r0, r2
 800e570:	e002      	b.n	800e578 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x34>
 800e572:	2a04      	cmp	r2, #4
 800e574:	d80e      	bhi.n	800e594 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x50>
 800e576:	2000      	movs	r0, #0
 800e578:	4b08      	ldr	r3, [pc, #32]	; (800e59c <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x58>)
 800e57a:	681a      	ldr	r2, [r3, #0]
 800e57c:	9b01      	ldr	r3, [sp, #4]
 800e57e:	405a      	eors	r2, r3
 800e580:	f04f 0300 	mov.w	r3, #0
 800e584:	d104      	bne.n	800e590 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x4c>
 800e586:	b003      	add	sp, #12
 800e588:	f85d fb04 	ldr.w	pc, [sp], #4
 800e58c:	56c0      	ldrsb	r0, [r0, r3]
 800e58e:	e7ec      	b.n	800e56a <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x26>
 800e590:	f00f f9d4 	bl	801d93c <__stack_chk_fail>
 800e594:	2200      	movs	r2, #0
 800e596:	e7e5      	b.n	800e564 <_ZN6tflite14GetBuiltinCodeEPKNS_12OperatorCodeE+0x20>
 800e598:	f00e fa0a 	bl	801c9b0 <abort>
 800e59c:	20011294 	.word	0x20011294

0800e5a0 <_ZN6tflite13ErrorReporter6ReportEPKcz>:
 800e5a0:	b40e      	push	{r1, r2, r3}
 800e5a2:	b500      	push	{lr}
 800e5a4:	b082      	sub	sp, #8
 800e5a6:	aa03      	add	r2, sp, #12
 800e5a8:	6803      	ldr	r3, [r0, #0]
 800e5aa:	f852 1b04 	ldr.w	r1, [r2], #4
 800e5ae:	f8df c030 	ldr.w	ip, [pc, #48]	; 800e5e0 <_ZN6tflite13ErrorReporter6ReportEPKcz+0x40>
 800e5b2:	9200      	str	r2, [sp, #0]
 800e5b4:	689b      	ldr	r3, [r3, #8]
 800e5b6:	f8dc c000 	ldr.w	ip, [ip]
 800e5ba:	f8cd c004 	str.w	ip, [sp, #4]
 800e5be:	f04f 0c00 	mov.w	ip, #0
 800e5c2:	4798      	blx	r3
 800e5c4:	4b06      	ldr	r3, [pc, #24]	; (800e5e0 <_ZN6tflite13ErrorReporter6ReportEPKcz+0x40>)
 800e5c6:	681a      	ldr	r2, [r3, #0]
 800e5c8:	9b01      	ldr	r3, [sp, #4]
 800e5ca:	405a      	eors	r2, r3
 800e5cc:	f04f 0300 	mov.w	r3, #0
 800e5d0:	d104      	bne.n	800e5dc <_ZN6tflite13ErrorReporter6ReportEPKcz+0x3c>
 800e5d2:	b002      	add	sp, #8
 800e5d4:	f85d eb04 	ldr.w	lr, [sp], #4
 800e5d8:	b003      	add	sp, #12
 800e5da:	4770      	bx	lr
 800e5dc:	f00f f9ae 	bl	801d93c <__stack_chk_fail>
 800e5e0:	20011294 	.word	0x20011294

0800e5e4 <TfLiteIntArrayGetSizeInBytes>:
 800e5e4:	b500      	push	{lr}
 800e5e6:	4b0a      	ldr	r3, [pc, #40]	; (800e610 <TfLiteIntArrayGetSizeInBytes+0x2c>)
 800e5e8:	b083      	sub	sp, #12
 800e5ea:	681b      	ldr	r3, [r3, #0]
 800e5ec:	9301      	str	r3, [sp, #4]
 800e5ee:	f04f 0300 	mov.w	r3, #0
 800e5f2:	4b07      	ldr	r3, [pc, #28]	; (800e610 <TfLiteIntArrayGetSizeInBytes+0x2c>)
 800e5f4:	681a      	ldr	r2, [r3, #0]
 800e5f6:	9b01      	ldr	r3, [sp, #4]
 800e5f8:	405a      	eors	r2, r3
 800e5fa:	f04f 0300 	mov.w	r3, #0
 800e5fe:	d104      	bne.n	800e60a <TfLiteIntArrayGetSizeInBytes+0x26>
 800e600:	3001      	adds	r0, #1
 800e602:	0080      	lsls	r0, r0, #2
 800e604:	b003      	add	sp, #12
 800e606:	f85d fb04 	ldr.w	pc, [sp], #4
 800e60a:	f00f f997 	bl	801d93c <__stack_chk_fail>
 800e60e:	bf00      	nop
 800e610:	20011294 	.word	0x20011294

0800e614 <TfLiteTypeGetName>:
 800e614:	b500      	push	{lr}
 800e616:	4b0c      	ldr	r3, [pc, #48]	; (800e648 <TfLiteTypeGetName+0x34>)
 800e618:	2813      	cmp	r0, #19
 800e61a:	b083      	sub	sp, #12
 800e61c:	681b      	ldr	r3, [r3, #0]
 800e61e:	9301      	str	r3, [sp, #4]
 800e620:	f04f 0300 	mov.w	r3, #0
 800e624:	bf96      	itet	ls
 800e626:	4b09      	ldrls	r3, [pc, #36]	; (800e64c <TfLiteTypeGetName+0x38>)
 800e628:	4809      	ldrhi	r0, [pc, #36]	; (800e650 <TfLiteTypeGetName+0x3c>)
 800e62a:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
 800e62e:	4b06      	ldr	r3, [pc, #24]	; (800e648 <TfLiteTypeGetName+0x34>)
 800e630:	681a      	ldr	r2, [r3, #0]
 800e632:	9b01      	ldr	r3, [sp, #4]
 800e634:	405a      	eors	r2, r3
 800e636:	f04f 0300 	mov.w	r3, #0
 800e63a:	d102      	bne.n	800e642 <TfLiteTypeGetName+0x2e>
 800e63c:	b003      	add	sp, #12
 800e63e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e642:	f00f f97b 	bl	801d93c <__stack_chk_fail>
 800e646:	bf00      	nop
 800e648:	20011294 	.word	0x20011294
 800e64c:	080266a0 	.word	0x080266a0
 800e650:	080265e0 	.word	0x080265e0

0800e654 <_ZN6tflite29MultiplyByQuantizedMultiplierElli>:
 800e654:	b510      	push	{r4, lr}
 800e656:	4b33      	ldr	r3, [pc, #204]	; (800e724 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xd0>)
 800e658:	b082      	sub	sp, #8
 800e65a:	ea22 7ce2 	bic.w	ip, r2, r2, asr #31
 800e65e:	2a00      	cmp	r2, #0
 800e660:	681b      	ldr	r3, [r3, #0]
 800e662:	9301      	str	r3, [sp, #4]
 800e664:	f04f 0300 	mov.w	r3, #0
 800e668:	fa00 fc0c 	lsl.w	ip, r0, ip
 800e66c:	dd31      	ble.n	800e6d2 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x7e>
 800e66e:	4561      	cmp	r1, ip
 800e670:	d021      	beq.n	800e6b6 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x62>
 800e672:	2200      	movs	r2, #0
 800e674:	fb8c 3001 	smull	r3, r0, ip, r1
 800e678:	2800      	cmp	r0, #0
 800e67a:	db37      	blt.n	800e6ec <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x98>
 800e67c:	f113 4380 	adds.w	r3, r3, #1073741824	; 0x40000000
 800e680:	f140 0000 	adc.w	r0, r0, #0
 800e684:	0fdb      	lsrs	r3, r3, #31
 800e686:	ea43 0040 	orr.w	r0, r3, r0, lsl #1
 800e68a:	2a1f      	cmp	r2, #31
 800e68c:	dc40      	bgt.n	800e710 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xbc>
 800e68e:	2301      	movs	r3, #1
 800e690:	4093      	lsls	r3, r2
 800e692:	3b01      	subs	r3, #1
 800e694:	1059      	asrs	r1, r3, #1
 800e696:	eb01 71d0 	add.w	r1, r1, r0, lsr #31
 800e69a:	4003      	ands	r3, r0
 800e69c:	4110      	asrs	r0, r2
 800e69e:	428b      	cmp	r3, r1
 800e6a0:	bfc8      	it	gt
 800e6a2:	3001      	addgt	r0, #1
 800e6a4:	4b1f      	ldr	r3, [pc, #124]	; (800e724 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xd0>)
 800e6a6:	681a      	ldr	r2, [r3, #0]
 800e6a8:	9b01      	ldr	r3, [sp, #4]
 800e6aa:	405a      	eors	r2, r3
 800e6ac:	f04f 0300 	mov.w	r3, #0
 800e6b0:	d135      	bne.n	800e71e <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xca>
 800e6b2:	b002      	add	sp, #8
 800e6b4:	bd10      	pop	{r4, pc}
 800e6b6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 800e6ba:	fb81 3001 	smull	r3, r0, r1, r1
 800e6be:	f04f 0200 	mov.w	r2, #0
 800e6c2:	bf08      	it	eq
 800e6c4:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800e6c8:	d0e1      	beq.n	800e68e <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x3a>
 800e6ca:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 800e6ce:	2100      	movs	r1, #0
 800e6d0:	e00f      	b.n	800e6f2 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x9e>
 800e6d2:	458c      	cmp	ip, r1
 800e6d4:	f1c2 0200 	rsb	r2, r2, #0
 800e6d8:	d1cc      	bne.n	800e674 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x20>
 800e6da:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800e6de:	fb8c 300c 	smull	r3, r0, ip, ip
 800e6e2:	bf08      	it	eq
 800e6e4:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800e6e8:	d0cf      	beq.n	800e68a <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x36>
 800e6ea:	e7ee      	b.n	800e6ca <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x76>
 800e6ec:	4c0e      	ldr	r4, [pc, #56]	; (800e728 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xd4>)
 800e6ee:	f04f 31ff 	mov.w	r1, #4294967295
 800e6f2:	18e3      	adds	r3, r4, r3
 800e6f4:	eb41 0000 	adc.w	r0, r1, r0
 800e6f8:	2800      	cmp	r0, #0
 800e6fa:	db03      	blt.n	800e704 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xb0>
 800e6fc:	0fdb      	lsrs	r3, r3, #31
 800e6fe:	ea43 0040 	orr.w	r0, r3, r0, lsl #1
 800e702:	e7c2      	b.n	800e68a <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0x36>
 800e704:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800e708:	185b      	adds	r3, r3, r1
 800e70a:	f140 0000 	adc.w	r0, r0, #0
 800e70e:	e7f5      	b.n	800e6fc <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xa8>
 800e710:	4b06      	ldr	r3, [pc, #24]	; (800e72c <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xd8>)
 800e712:	4a07      	ldr	r2, [pc, #28]	; (800e730 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xdc>)
 800e714:	4807      	ldr	r0, [pc, #28]	; (800e734 <_ZN6tflite29MultiplyByQuantizedMultiplierElli+0xe0>)
 800e716:	f240 1167 	movw	r1, #359	; 0x167
 800e71a:	f00e f951 	bl	801c9c0 <__assert_func>
 800e71e:	f00f f90d 	bl	801d93c <__stack_chk_fail>
 800e722:	bf00      	nop
 800e724:	20011294 	.word	0x20011294
 800e728:	c0000001 	.word	0xc0000001
 800e72c:	080266f0 	.word	0x080266f0
 800e730:	08026700 	.word	0x08026700
 800e734:	0802675c 	.word	0x0802675c

0800e738 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0>:
 800e738:	b530      	push	{r4, r5, lr}
 800e73a:	ec41 0b10 	vmov	d0, r0, r1
 800e73e:	461c      	mov	r4, r3
 800e740:	4618      	mov	r0, r3
 800e742:	4b1e      	ldr	r3, [pc, #120]	; (800e7bc <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x84>)
 800e744:	b083      	sub	sp, #12
 800e746:	4615      	mov	r5, r2
 800e748:	681b      	ldr	r3, [r3, #0]
 800e74a:	9301      	str	r3, [sp, #4]
 800e74c:	f04f 0300 	mov.w	r3, #0
 800e750:	f00d f9be 	bl	801bad0 <frexp>
 800e754:	2200      	movs	r2, #0
 800e756:	4b1a      	ldr	r3, [pc, #104]	; (800e7c0 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x88>)
 800e758:	ec51 0b10 	vmov	r0, r1, d0
 800e75c:	f7f1 ff56 	bl	800060c <__aeabi_dmul>
 800e760:	ec41 0b10 	vmov	d0, r0, r1
 800e764:	f00d f9ec 	bl	801bb40 <round>
 800e768:	ec51 0b10 	vmov	r0, r1, d0
 800e76c:	f7f2 fade 	bl	8000d2c <__aeabi_d2lz>
 800e770:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800e774:	2200      	movs	r2, #0
 800e776:	4584      	cmp	ip, r0
 800e778:	eb72 0e01 	sbcs.w	lr, r2, r1
 800e77c:	db1b      	blt.n	800e7b6 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x7e>
 800e77e:	4291      	cmp	r1, r2
 800e780:	bf08      	it	eq
 800e782:	4560      	cmpeq	r0, ip
 800e784:	d00f      	beq.n	800e7a6 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x6e>
 800e786:	6822      	ldr	r2, [r4, #0]
 800e788:	4603      	mov	r3, r0
 800e78a:	321f      	adds	r2, #31
 800e78c:	bfbc      	itt	lt
 800e78e:	2300      	movlt	r3, #0
 800e790:	6023      	strlt	r3, [r4, #0]
 800e792:	602b      	str	r3, [r5, #0]
 800e794:	4b09      	ldr	r3, [pc, #36]	; (800e7bc <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x84>)
 800e796:	681a      	ldr	r2, [r3, #0]
 800e798:	9b01      	ldr	r3, [sp, #4]
 800e79a:	405a      	eors	r2, r3
 800e79c:	f04f 0300 	mov.w	r3, #0
 800e7a0:	d107      	bne.n	800e7b2 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x7a>
 800e7a2:	b003      	add	sp, #12
 800e7a4:	bd30      	pop	{r4, r5, pc}
 800e7a6:	6822      	ldr	r2, [r4, #0]
 800e7a8:	3201      	adds	r2, #1
 800e7aa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e7ae:	6022      	str	r2, [r4, #0]
 800e7b0:	e7eb      	b.n	800e78a <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0+0x52>
 800e7b2:	f00f f8c3 	bl	801d93c <__stack_chk_fail>
 800e7b6:	f00e f8fb 	bl	801c9b0 <abort>
 800e7ba:	bf00      	nop
 800e7bc:	20011294 	.word	0x20011294
 800e7c0:	41e00000 	.word	0x41e00000

0800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>:
 800e7c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7c6:	4b18      	ldr	r3, [pc, #96]	; (800e828 <_ZN6tflite18QuantizeMultiplierEdPlPi+0x64>)
 800e7c8:	ec55 4b10 	vmov	r4, r5, d0
 800e7cc:	b083      	sub	sp, #12
 800e7ce:	4606      	mov	r6, r0
 800e7d0:	460f      	mov	r7, r1
 800e7d2:	681b      	ldr	r3, [r3, #0]
 800e7d4:	9301      	str	r3, [sp, #4]
 800e7d6:	f04f 0300 	mov.w	r3, #0
 800e7da:	ee10 0a10 	vmov	r0, s0
 800e7de:	2200      	movs	r2, #0
 800e7e0:	2300      	movs	r3, #0
 800e7e2:	4629      	mov	r1, r5
 800e7e4:	f7f2 f97a 	bl	8000adc <__aeabi_dcmpeq>
 800e7e8:	b158      	cbz	r0, 800e802 <_ZN6tflite18QuantizeMultiplierEdPlPi+0x3e>
 800e7ea:	2300      	movs	r3, #0
 800e7ec:	6033      	str	r3, [r6, #0]
 800e7ee:	603b      	str	r3, [r7, #0]
 800e7f0:	4b0d      	ldr	r3, [pc, #52]	; (800e828 <_ZN6tflite18QuantizeMultiplierEdPlPi+0x64>)
 800e7f2:	681a      	ldr	r2, [r3, #0]
 800e7f4:	9b01      	ldr	r3, [sp, #4]
 800e7f6:	405a      	eors	r2, r3
 800e7f8:	f04f 0300 	mov.w	r3, #0
 800e7fc:	d111      	bne.n	800e822 <_ZN6tflite18QuantizeMultiplierEdPlPi+0x5e>
 800e7fe:	b003      	add	sp, #12
 800e800:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e802:	4b09      	ldr	r3, [pc, #36]	; (800e828 <_ZN6tflite18QuantizeMultiplierEdPlPi+0x64>)
 800e804:	681a      	ldr	r2, [r3, #0]
 800e806:	9b01      	ldr	r3, [sp, #4]
 800e808:	405a      	eors	r2, r3
 800e80a:	f04f 0300 	mov.w	r3, #0
 800e80e:	d108      	bne.n	800e822 <_ZN6tflite18QuantizeMultiplierEdPlPi+0x5e>
 800e810:	4620      	mov	r0, r4
 800e812:	4629      	mov	r1, r5
 800e814:	463b      	mov	r3, r7
 800e816:	4632      	mov	r2, r6
 800e818:	b003      	add	sp, #12
 800e81a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e81e:	f7ff bf8b 	b.w	800e738 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0>
 800e822:	f00f f88b 	bl	801d93c <__stack_chk_fail>
 800e826:	bf00      	nop
 800e828:	20011294 	.word	0x20011294
 800e82c:	00000000 	.word	0x00000000

0800e830 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi>:
 800e830:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e834:	4b2c      	ldr	r3, [pc, #176]	; (800e8e8 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xb8>)
 800e836:	b083      	sub	sp, #12
 800e838:	681b      	ldr	r3, [r3, #0]
 800e83a:	9301      	str	r3, [sp, #4]
 800e83c:	f04f 0300 	mov.w	r3, #0
 800e840:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800e844:	fa23 f000 	lsr.w	r0, r3, r0
 800e848:	ec57 6b11 	vmov	r6, r7, d1
 800e84c:	ec59 8b10 	vmov	r8, r9, d0
 800e850:	4614      	mov	r4, r2
 800e852:	460d      	mov	r5, r1
 800e854:	f7f1 fe70 	bl	8000538 <__aeabi_i2d>
 800e858:	4632      	mov	r2, r6
 800e85a:	463b      	mov	r3, r7
 800e85c:	4606      	mov	r6, r0
 800e85e:	460f      	mov	r7, r1
 800e860:	4640      	mov	r0, r8
 800e862:	4649      	mov	r1, r9
 800e864:	f7f1 fed2 	bl	800060c <__aeabi_dmul>
 800e868:	4602      	mov	r2, r0
 800e86a:	460b      	mov	r3, r1
 800e86c:	4630      	mov	r0, r6
 800e86e:	4639      	mov	r1, r7
 800e870:	f7f1 fecc 	bl	800060c <__aeabi_dmul>
 800e874:	a31a      	add	r3, pc, #104	; (adr r3, 800e8e0 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xb0>)
 800e876:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e87a:	4606      	mov	r6, r0
 800e87c:	460f      	mov	r7, r1
 800e87e:	f7f2 f955 	bl	8000b2c <__aeabi_dcmpgt>
 800e882:	b9e0      	cbnz	r0, 800e8be <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0x8e>
 800e884:	4680      	mov	r8, r0
 800e886:	4b19      	ldr	r3, [pc, #100]	; (800e8ec <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xbc>)
 800e888:	2200      	movs	r2, #0
 800e88a:	4630      	mov	r0, r6
 800e88c:	4639      	mov	r1, r7
 800e88e:	f7f2 f94d 	bl	8000b2c <__aeabi_dcmpgt>
 800e892:	b300      	cbz	r0, 800e8d6 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xa6>
 800e894:	2200      	movs	r2, #0
 800e896:	2300      	movs	r3, #0
 800e898:	4630      	mov	r0, r6
 800e89a:	4639      	mov	r1, r7
 800e89c:	f7f2 f91e 	bl	8000adc <__aeabi_dcmpeq>
 800e8a0:	b180      	cbz	r0, 800e8c4 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0x94>
 800e8a2:	f8c5 8000 	str.w	r8, [r5]
 800e8a6:	f8c4 8000 	str.w	r8, [r4]
 800e8aa:	4b0f      	ldr	r3, [pc, #60]	; (800e8e8 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xb8>)
 800e8ac:	681a      	ldr	r2, [r3, #0]
 800e8ae:	9b01      	ldr	r3, [sp, #4]
 800e8b0:	405a      	eors	r2, r3
 800e8b2:	f04f 0300 	mov.w	r3, #0
 800e8b6:	d110      	bne.n	800e8da <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xaa>
 800e8b8:	b003      	add	sp, #12
 800e8ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e8be:	a708      	add	r7, pc, #32	; (adr r7, 800e8e0 <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0xb0>)
 800e8c0:	e9d7 6700 	ldrd	r6, r7, [r7]
 800e8c4:	4623      	mov	r3, r4
 800e8c6:	4630      	mov	r0, r6
 800e8c8:	4639      	mov	r1, r7
 800e8ca:	462a      	mov	r2, r5
 800e8cc:	f7ff ff34 	bl	800e738 <_ZN6tflite18QuantizeMultiplierEdPlPi.part.0>
 800e8d0:	6823      	ldr	r3, [r4, #0]
 800e8d2:	2b00      	cmp	r3, #0
 800e8d4:	dae9      	bge.n	800e8aa <_ZN6tflite24PreprocessSoftmaxScalingEddiPlPi+0x7a>
 800e8d6:	f00e f86b 	bl	801c9b0 <abort>
 800e8da:	f00f f82f 	bl	801d93c <__stack_chk_fail>
 800e8de:	bf00      	nop
 800e8e0:	ffc00000 	.word	0xffc00000
 800e8e4:	41dfffff 	.word	0x41dfffff
 800e8e8:	20011294 	.word	0x20011294
 800e8ec:	3ff00000 	.word	0x3ff00000

0800e8f0 <_ZN6tflite20CalculateInputRadiusEiii>:
 800e8f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e8f4:	2401      	movs	r4, #1
 800e8f6:	4b26      	ldr	r3, [pc, #152]	; (800e990 <_ZN6tflite20CalculateInputRadiusEiii+0xa0>)
 800e8f8:	4607      	mov	r7, r0
 800e8fa:	fa04 f000 	lsl.w	r0, r4, r0
 800e8fe:	b083      	sub	sp, #12
 800e900:	3801      	subs	r0, #1
 800e902:	4615      	mov	r5, r2
 800e904:	460e      	mov	r6, r1
 800e906:	681b      	ldr	r3, [r3, #0]
 800e908:	9301      	str	r3, [sp, #4]
 800e90a:	f04f 0300 	mov.w	r3, #0
 800e90e:	f7f1 fe13 	bl	8000538 <__aeabi_i2d>
 800e912:	1bed      	subs	r5, r5, r7
 800e914:	4689      	mov	r9, r1
 800e916:	f1c5 0320 	rsb	r3, r5, #32
 800e91a:	f1a5 0120 	sub.w	r1, r5, #32
 800e91e:	fa24 f303 	lsr.w	r3, r4, r3
 800e922:	fa04 f101 	lsl.w	r1, r4, r1
 800e926:	4680      	mov	r8, r0
 800e928:	4319      	orrs	r1, r3
 800e92a:	fa04 f005 	lsl.w	r0, r4, r5
 800e92e:	f7f1 fe3f 	bl	80005b0 <__aeabi_l2d>
 800e932:	4602      	mov	r2, r0
 800e934:	460b      	mov	r3, r1
 800e936:	4640      	mov	r0, r8
 800e938:	4649      	mov	r1, r9
 800e93a:	f7f1 fe67 	bl	800060c <__aeabi_dmul>
 800e93e:	f1c6 0320 	rsb	r3, r6, #32
 800e942:	4689      	mov	r9, r1
 800e944:	f1a6 0120 	sub.w	r1, r6, #32
 800e948:	fa24 f303 	lsr.w	r3, r4, r3
 800e94c:	fa04 f101 	lsl.w	r1, r4, r1
 800e950:	4680      	mov	r8, r0
 800e952:	4319      	orrs	r1, r3
 800e954:	fa04 f006 	lsl.w	r0, r4, r6
 800e958:	f7f1 fe2a 	bl	80005b0 <__aeabi_l2d>
 800e95c:	4602      	mov	r2, r0
 800e95e:	460b      	mov	r3, r1
 800e960:	4640      	mov	r0, r8
 800e962:	4649      	mov	r1, r9
 800e964:	f7f1 ff7c 	bl	8000860 <__aeabi_ddiv>
 800e968:	ec41 0b10 	vmov	d0, r0, r1
 800e96c:	f00d f830 	bl	801b9d0 <floor>
 800e970:	ec51 0b10 	vmov	r0, r1, d0
 800e974:	f7f2 f8fa 	bl	8000b6c <__aeabi_d2iz>
 800e978:	4b05      	ldr	r3, [pc, #20]	; (800e990 <_ZN6tflite20CalculateInputRadiusEiii+0xa0>)
 800e97a:	681a      	ldr	r2, [r3, #0]
 800e97c:	9b01      	ldr	r3, [sp, #4]
 800e97e:	405a      	eors	r2, r3
 800e980:	f04f 0300 	mov.w	r3, #0
 800e984:	d102      	bne.n	800e98c <_ZN6tflite20CalculateInputRadiusEiii+0x9c>
 800e986:	b003      	add	sp, #12
 800e988:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e98c:	f00e ffd6 	bl	801d93c <__stack_chk_fail>
 800e990:	20011294 	.word	0x20011294

0800e994 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor>:
 800e994:	b510      	push	{r4, lr}
 800e996:	4b11      	ldr	r3, [pc, #68]	; (800e9dc <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor+0x48>)
 800e998:	b082      	sub	sp, #8
 800e99a:	4604      	mov	r4, r0
 800e99c:	681b      	ldr	r3, [r3, #0]
 800e99e:	9301      	str	r3, [sp, #4]
 800e9a0:	f04f 0300 	mov.w	r3, #0
 800e9a4:	b199      	cbz	r1, 800e9ce <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor+0x3a>
 800e9a6:	6889      	ldr	r1, [r1, #8]
 800e9a8:	f851 2b04 	ldr.w	r2, [r1], #4
 800e9ac:	6002      	str	r2, [r0, #0]
 800e9ae:	2a06      	cmp	r2, #6
 800e9b0:	dc11      	bgt.n	800e9d6 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor+0x42>
 800e9b2:	0092      	lsls	r2, r2, #2
 800e9b4:	3004      	adds	r0, #4
 800e9b6:	f00e f86d 	bl	801ca94 <memcpy>
 800e9ba:	4b08      	ldr	r3, [pc, #32]	; (800e9dc <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor+0x48>)
 800e9bc:	681a      	ldr	r2, [r3, #0]
 800e9be:	9b01      	ldr	r3, [sp, #4]
 800e9c0:	405a      	eors	r2, r3
 800e9c2:	f04f 0300 	mov.w	r3, #0
 800e9c6:	d104      	bne.n	800e9d2 <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor+0x3e>
 800e9c8:	4620      	mov	r0, r4
 800e9ca:	b002      	add	sp, #8
 800e9cc:	bd10      	pop	{r4, pc}
 800e9ce:	6001      	str	r1, [r0, #0]
 800e9d0:	e7f3      	b.n	800e9ba <_ZN6tflite14GetTensorShapeEPK12TfLiteTensor+0x26>
 800e9d2:	f00e ffb3 	bl	801d93c <__stack_chk_fail>
 800e9d6:	f00d ffeb 	bl	801c9b0 <abort>
 800e9da:	bf00      	nop
 800e9dc:	20011294 	.word	0x20011294

0800e9e0 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd>:
 800e9e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e9e4:	ed2d 8b02 	vpush	{d8}
 800e9e8:	461c      	mov	r4, r3
 800e9ea:	4b41      	ldr	r3, [pc, #260]	; (800eaf0 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x110>)
 800e9ec:	ed91 8a03 	vldr	s16, [r1, #12]
 800e9f0:	edd2 8a03 	vldr	s17, [r2, #12]
 800e9f4:	b085      	sub	sp, #20
 800e9f6:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
 800e9fa:	4605      	mov	r5, r0
 800e9fc:	681b      	ldr	r3, [r3, #0]
 800e9fe:	9303      	str	r3, [sp, #12]
 800ea00:	f04f 0300 	mov.w	r3, #0
 800ea04:	b374      	cbz	r4, 800ea64 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x84>
 800ea06:	ee18 0a10 	vmov	r0, s16
 800ea0a:	f7f1 fda7 	bl	800055c <__aeabi_f2d>
 800ea0e:	4606      	mov	r6, r0
 800ea10:	ee18 0a90 	vmov	r0, s17
 800ea14:	460f      	mov	r7, r1
 800ea16:	f7f1 fda1 	bl	800055c <__aeabi_f2d>
 800ea1a:	4602      	mov	r2, r0
 800ea1c:	460b      	mov	r3, r1
 800ea1e:	4630      	mov	r0, r6
 800ea20:	4639      	mov	r1, r7
 800ea22:	f7f1 fdf3 	bl	800060c <__aeabi_dmul>
 800ea26:	4606      	mov	r6, r0
 800ea28:	68e0      	ldr	r0, [r4, #12]
 800ea2a:	460f      	mov	r7, r1
 800ea2c:	f7f1 fd96 	bl	800055c <__aeabi_f2d>
 800ea30:	460b      	mov	r3, r1
 800ea32:	4602      	mov	r2, r0
 800ea34:	4639      	mov	r1, r7
 800ea36:	4630      	mov	r0, r6
 800ea38:	f7f1 fc30 	bl	800029c <__aeabi_dsub>
 800ea3c:	4602      	mov	r2, r0
 800ea3e:	f8d8 000c 	ldr.w	r0, [r8, #12]
 800ea42:	4616      	mov	r6, r2
 800ea44:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
 800ea48:	f7f1 fd88 	bl	800055c <__aeabi_f2d>
 800ea4c:	4602      	mov	r2, r0
 800ea4e:	460b      	mov	r3, r1
 800ea50:	4630      	mov	r0, r6
 800ea52:	4639      	mov	r1, r7
 800ea54:	f7f1 ff04 	bl	8000860 <__aeabi_ddiv>
 800ea58:	a323      	add	r3, pc, #140	; (adr r3, 800eae8 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x108>)
 800ea5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ea5e:	f7f2 f851 	bl	8000b04 <__aeabi_dcmple>
 800ea62:	b338      	cbz	r0, 800eab4 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0xd4>
 800ea64:	ee28 8a28 	vmul.f32	s16, s16, s17
 800ea68:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800ea6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ea70:	db2b      	blt.n	800eaca <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0xea>
 800ea72:	ee18 0a10 	vmov	r0, s16
 800ea76:	f7f1 fd71 	bl	800055c <__aeabi_f2d>
 800ea7a:	4604      	mov	r4, r0
 800ea7c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 800ea80:	460d      	mov	r5, r1
 800ea82:	f7f1 fd6b 	bl	800055c <__aeabi_f2d>
 800ea86:	4602      	mov	r2, r0
 800ea88:	460b      	mov	r3, r1
 800ea8a:	4620      	mov	r0, r4
 800ea8c:	4629      	mov	r1, r5
 800ea8e:	f7f1 fee7 	bl	8000860 <__aeabi_ddiv>
 800ea92:	4602      	mov	r2, r0
 800ea94:	460b      	mov	r3, r1
 800ea96:	e9c9 2300 	strd	r2, r3, [r9]
 800ea9a:	2000      	movs	r0, #0
 800ea9c:	4b14      	ldr	r3, [pc, #80]	; (800eaf0 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x110>)
 800ea9e:	681a      	ldr	r2, [r3, #0]
 800eaa0:	9b03      	ldr	r3, [sp, #12]
 800eaa2:	405a      	eors	r2, r3
 800eaa4:	f04f 0300 	mov.w	r3, #0
 800eaa8:	d11a      	bne.n	800eae0 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x100>
 800eaaa:	b005      	add	sp, #20
 800eaac:	ecbd 8b02 	vpop	{d8}
 800eab0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eab4:	4b0f      	ldr	r3, [pc, #60]	; (800eaf4 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x114>)
 800eab6:	696c      	ldr	r4, [r5, #20]
 800eab8:	4a0f      	ldr	r2, [pc, #60]	; (800eaf8 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x118>)
 800eaba:	9300      	str	r3, [sp, #0]
 800eabc:	4628      	mov	r0, r5
 800eabe:	490f      	ldr	r1, [pc, #60]	; (800eafc <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x11c>)
 800eac0:	f240 1343 	movw	r3, #323	; 0x143
 800eac4:	47a0      	blx	r4
 800eac6:	2001      	movs	r0, #1
 800eac8:	e7e8      	b.n	800ea9c <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0xbc>
 800eaca:	4b0d      	ldr	r3, [pc, #52]	; (800eb00 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x120>)
 800eacc:	696c      	ldr	r4, [r5, #20]
 800eace:	4a0a      	ldr	r2, [pc, #40]	; (800eaf8 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x118>)
 800ead0:	9300      	str	r3, [sp, #0]
 800ead2:	4628      	mov	r0, r5
 800ead4:	4909      	ldr	r1, [pc, #36]	; (800eafc <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0x11c>)
 800ead6:	f44f 73a8 	mov.w	r3, #336	; 0x150
 800eada:	47a0      	blx	r4
 800eadc:	2001      	movs	r0, #1
 800eade:	e7dd      	b.n	800ea9c <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd+0xbc>
 800eae0:	f00e ff2c 	bl	801d93c <__stack_chk_fail>
 800eae4:	f3af 8000 	nop.w
 800eae8:	47ae147b 	.word	0x47ae147b
 800eaec:	3f947ae1 	.word	0x3f947ae1
 800eaf0:	20011294 	.word	0x20011294
 800eaf4:	08026870 	.word	0x08026870
 800eaf8:	080267f8 	.word	0x080267f8
 800eafc:	080249b0 	.word	0x080249b0
 800eb00:	08026894 	.word	0x08026894

0800eb04 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_>:
 800eb04:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eb08:	ed2d 8b04 	vpush	{d8-d9}
 800eb0c:	f892 c000 	ldrb.w	ip, [r2]
 800eb10:	4c64      	ldr	r4, [pc, #400]	; (800eca4 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1a0>)
 800eb12:	b085      	sub	sp, #20
 800eb14:	f1bc 0f03 	cmp.w	ip, #3
 800eb18:	6824      	ldr	r4, [r4, #0]
 800eb1a:	9403      	str	r4, [sp, #12]
 800eb1c:	f04f 0400 	mov.w	r4, #0
 800eb20:	9e10      	ldr	r6, [sp, #64]	; 0x40
 800eb22:	4605      	mov	r5, r0
 800eb24:	461c      	mov	r4, r3
 800eb26:	d058      	beq.n	800ebda <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0xd6>
 800eb28:	f1bc 0f09 	cmp.w	ip, #9
 800eb2c:	d02a      	beq.n	800eb84 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x80>
 800eb2e:	f1bc 0f07 	cmp.w	ip, #7
 800eb32:	d111      	bne.n	800eb58 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x54>
 800eb34:	4f5c      	ldr	r7, [pc, #368]	; (800eca8 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1a4>)
 800eb36:	f647 78ff 	movw	r8, #32767	; 0x7fff
 800eb3a:	2901      	cmp	r1, #1
 800eb3c:	ed92 8a03 	vldr	s16, [r2, #12]
 800eb40:	f8d2 9010 	ldr.w	r9, [r2, #16]
 800eb44:	d028      	beq.n	800eb98 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x94>
 800eb46:	2903      	cmp	r1, #3
 800eb48:	d06c      	beq.n	800ec24 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x120>
 800eb4a:	2902      	cmp	r1, #2
 800eb4c:	d049      	beq.n	800ebe2 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0xde>
 800eb4e:	6027      	str	r7, [r4, #0]
 800eb50:	2000      	movs	r0, #0
 800eb52:	f8c6 8000 	str.w	r8, [r6]
 800eb56:	e008      	b.n	800eb6a <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x66>
 800eb58:	4b54      	ldr	r3, [pc, #336]	; (800ecac <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1a8>)
 800eb5a:	6944      	ldr	r4, [r0, #20]
 800eb5c:	4a54      	ldr	r2, [pc, #336]	; (800ecb0 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1ac>)
 800eb5e:	9300      	str	r3, [sp, #0]
 800eb60:	4954      	ldr	r1, [pc, #336]	; (800ecb4 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b0>)
 800eb62:	f44f 73cb 	mov.w	r3, #406	; 0x196
 800eb66:	47a0      	blx	r4
 800eb68:	2001      	movs	r0, #1
 800eb6a:	4b4e      	ldr	r3, [pc, #312]	; (800eca4 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1a0>)
 800eb6c:	681a      	ldr	r2, [r3, #0]
 800eb6e:	9b03      	ldr	r3, [sp, #12]
 800eb70:	405a      	eors	r2, r3
 800eb72:	f04f 0300 	mov.w	r3, #0
 800eb76:	f040 8092 	bne.w	800ec9e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x19a>
 800eb7a:	b005      	add	sp, #20
 800eb7c:	ecbd 8b04 	vpop	{d8-d9}
 800eb80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb84:	2901      	cmp	r1, #1
 800eb86:	ed92 8a03 	vldr	s16, [r2, #12]
 800eb8a:	f8d2 9010 	ldr.w	r9, [r2, #16]
 800eb8e:	f04f 087f 	mov.w	r8, #127	; 0x7f
 800eb92:	f06f 077f 	mvn.w	r7, #127	; 0x7f
 800eb96:	d1d6      	bne.n	800eb46 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x42>
 800eb98:	ed9f 0a47 	vldr	s0, [pc, #284]	; 800ecb8 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b4>
 800eb9c:	ee80 0a08 	vdiv.f32	s0, s0, s16
 800eba0:	f00d f8dc 	bl	801bd5c <roundf>
 800eba4:	eddf 7a45 	vldr	s15, [pc, #276]	; 800ecbc <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b8>
 800eba8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800ebac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebb0:	db2d      	blt.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ebb2:	eddf 7a43 	vldr	s15, [pc, #268]	; 800ecc0 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1bc>
 800ebb6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800ebba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebbe:	d826      	bhi.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ebc0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ebc4:	2000      	movs	r0, #0
 800ebc6:	ee17 3a90 	vmov	r3, s15
 800ebca:	444b      	add	r3, r9
 800ebcc:	42bb      	cmp	r3, r7
 800ebce:	bfb8      	it	lt
 800ebd0:	463b      	movlt	r3, r7
 800ebd2:	6023      	str	r3, [r4, #0]
 800ebd4:	f8c6 8000 	str.w	r8, [r6]
 800ebd8:	e7c7      	b.n	800eb6a <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x66>
 800ebda:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800ebde:	2700      	movs	r7, #0
 800ebe0:	e7ab      	b.n	800eb3a <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x36>
 800ebe2:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 800ebe6:	ee80 0a08 	vdiv.f32	s0, s0, s16
 800ebea:	f00d f8b7 	bl	801bd5c <roundf>
 800ebee:	eddf 8a33 	vldr	s17, [pc, #204]	; 800ecbc <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b8>
 800ebf2:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800ebf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ebfa:	eef0 7a40 	vmov.f32	s15, s0
 800ebfe:	db06      	blt.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ec00:	ed9f 9a2f 	vldr	s18, [pc, #188]	; 800ecc0 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1bc>
 800ec04:	eeb4 0ac9 	vcmpe.f32	s0, s18
 800ec08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec0c:	d944      	bls.n	800ec98 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x194>
 800ec0e:	4b2d      	ldr	r3, [pc, #180]	; (800ecc4 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1c0>)
 800ec10:	696c      	ldr	r4, [r5, #20]
 800ec12:	4a27      	ldr	r2, [pc, #156]	; (800ecb0 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1ac>)
 800ec14:	9300      	str	r3, [sp, #0]
 800ec16:	4628      	mov	r0, r5
 800ec18:	4926      	ldr	r1, [pc, #152]	; (800ecb4 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b0>)
 800ec1a:	f44f 73af 	mov.w	r3, #350	; 0x15e
 800ec1e:	47a0      	blx	r4
 800ec20:	2001      	movs	r0, #1
 800ec22:	e7a2      	b.n	800eb6a <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x66>
 800ec24:	ed9f 0a24 	vldr	s0, [pc, #144]	; 800ecb8 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b4>
 800ec28:	eddf 8a24 	vldr	s17, [pc, #144]	; 800ecbc <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1b8>
 800ec2c:	ee80 0a08 	vdiv.f32	s0, s0, s16
 800ec30:	f00d f894 	bl	801bd5c <roundf>
 800ec34:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800ec38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec3c:	eef0 7a40 	vmov.f32	s15, s0
 800ec40:	dbe5      	blt.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ec42:	ed9f 9a1f 	vldr	s18, [pc, #124]	; 800ecc0 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x1bc>
 800ec46:	eeb4 0ac9 	vcmpe.f32	s0, s18
 800ec4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec4e:	d8de      	bhi.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ec50:	eeb1 0a08 	vmov.f32	s0, #24	; 0x40c00000  6.0
 800ec54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ec58:	ee80 0a08 	vdiv.f32	s0, s0, s16
 800ec5c:	ee17 3a90 	vmov	r3, s15
 800ec60:	444b      	add	r3, r9
 800ec62:	42bb      	cmp	r3, r7
 800ec64:	bfb8      	it	lt
 800ec66:	463b      	movlt	r3, r7
 800ec68:	6023      	str	r3, [r4, #0]
 800ec6a:	f00d f877 	bl	801bd5c <roundf>
 800ec6e:	eeb4 0ae8 	vcmpe.f32	s0, s17
 800ec72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec76:	dbca      	blt.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ec78:	eeb4 0ac9 	vcmpe.f32	s0, s18
 800ec7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ec80:	d8c5      	bhi.n	800ec0e <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x10a>
 800ec82:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800ec86:	2000      	movs	r0, #0
 800ec88:	ee17 3a90 	vmov	r3, s15
 800ec8c:	444b      	add	r3, r9
 800ec8e:	4543      	cmp	r3, r8
 800ec90:	bfa8      	it	ge
 800ec92:	4643      	movge	r3, r8
 800ec94:	6033      	str	r3, [r6, #0]
 800ec96:	e768      	b.n	800eb6a <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x66>
 800ec98:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800ec9c:	e7da      	b.n	800ec54 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_+0x150>
 800ec9e:	f00e fe4d 	bl	801d93c <__stack_chk_fail>
 800eca2:	bf00      	nop
 800eca4:	20011294 	.word	0x20011294
 800eca8:	ffff8000 	.word	0xffff8000
 800ecac:	080268b0 	.word	0x080268b0
 800ecb0:	080267f8 	.word	0x080267f8
 800ecb4:	080249b0 	.word	0x080249b0
 800ecb8:	00000000 	.word	0x00000000
 800ecbc:	cf000000 	.word	0xcf000000
 800ecc0:	4f000000 	.word	0x4f000000
 800ecc4:	080268b8 	.word	0x080268b8

0800ecc8 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i>:
 800ecc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eccc:	ed2d 8b02 	vpush	{d8}
 800ecd0:	460c      	mov	r4, r1
 800ecd2:	b097      	sub	sp, #92	; 0x5c
 800ecd4:	499c      	ldr	r1, [pc, #624]	; (800ef48 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x280>)
 800ecd6:	f894 7030 	ldrb.w	r7, [r4, #48]	; 0x30
 800ecda:	f8dd b0a8 	ldr.w	fp, [sp, #168]	; 0xa8
 800ecde:	6809      	ldr	r1, [r1, #0]
 800ece0:	9115      	str	r1, [sp, #84]	; 0x54
 800ece2:	f04f 0100 	mov.w	r1, #0
 800ece6:	9309      	str	r3, [sp, #36]	; 0x24
 800ece8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ecea:	9305      	str	r3, [sp, #20]
 800ecec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ecee:	9306      	str	r3, [sp, #24]
 800ecf0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800ecf2:	930a      	str	r3, [sp, #40]	; 0x28
 800ecf4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800ecf6:	930b      	str	r3, [sp, #44]	; 0x2c
 800ecf8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800ecfa:	9307      	str	r3, [sp, #28]
 800ecfc:	2f01      	cmp	r7, #1
 800ecfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800ed00:	9308      	str	r3, [sp, #32]
 800ed02:	e9dd e128 	ldrd	lr, r1, [sp, #160]	; 0xa0
 800ed06:	4605      	mov	r5, r0
 800ed08:	d01a      	beq.n	800ed40 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x78>
 800ed0a:	4b90      	ldr	r3, [pc, #576]	; (800ef4c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x284>)
 800ed0c:	9702      	str	r7, [sp, #8]
 800ed0e:	6944      	ldr	r4, [r0, #20]
 800ed10:	9301      	str	r3, [sp, #4]
 800ed12:	2101      	movs	r1, #1
 800ed14:	4b8e      	ldr	r3, [pc, #568]	; (800ef50 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x288>)
 800ed16:	9103      	str	r1, [sp, #12]
 800ed18:	9300      	str	r3, [sp, #0]
 800ed1a:	460f      	mov	r7, r1
 800ed1c:	4a8d      	ldr	r2, [pc, #564]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800ed1e:	498e      	ldr	r1, [pc, #568]	; (800ef58 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x290>)
 800ed20:	23de      	movs	r3, #222	; 0xde
 800ed22:	47a0      	blx	r4
 800ed24:	4b88      	ldr	r3, [pc, #544]	; (800ef48 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x280>)
 800ed26:	681a      	ldr	r2, [r3, #0]
 800ed28:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ed2a:	405a      	eors	r2, r3
 800ed2c:	f04f 0300 	mov.w	r3, #0
 800ed30:	f040 8108 	bne.w	800ef44 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x27c>
 800ed34:	4638      	mov	r0, r7
 800ed36:	b017      	add	sp, #92	; 0x5c
 800ed38:	ecbd 8b02 	vpop	{d8}
 800ed3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ed40:	f892 3030 	ldrb.w	r3, [r2, #48]	; 0x30
 800ed44:	2b01      	cmp	r3, #1
 800ed46:	4616      	mov	r6, r2
 800ed48:	d00b      	beq.n	800ed62 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x9a>
 800ed4a:	6944      	ldr	r4, [r0, #20]
 800ed4c:	4a7f      	ldr	r2, [pc, #508]	; (800ef4c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x284>)
 800ed4e:	9201      	str	r2, [sp, #4]
 800ed50:	e9cd 3702 	strd	r3, r7, [sp, #8]
 800ed54:	4b81      	ldr	r3, [pc, #516]	; (800ef5c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x294>)
 800ed56:	9300      	str	r3, [sp, #0]
 800ed58:	4a7e      	ldr	r2, [pc, #504]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800ed5a:	497f      	ldr	r1, [pc, #508]	; (800ef58 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x290>)
 800ed5c:	23e0      	movs	r3, #224	; 0xe0
 800ed5e:	47a0      	blx	r4
 800ed60:	e7e0      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800ed62:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800ed64:	2b00      	cmp	r3, #0
 800ed66:	f000 80c7 	beq.w	800eef8 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x230>
 800ed6a:	681a      	ldr	r2, [r3, #0]
 800ed6c:	920c      	str	r2, [sp, #48]	; 0x30
 800ed6e:	2a00      	cmp	r2, #0
 800ed70:	f000 80a9 	beq.w	800eec6 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x1fe>
 800ed74:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ed76:	6812      	ldr	r2, [r2, #0]
 800ed78:	920d      	str	r2, [sp, #52]	; 0x34
 800ed7a:	2a01      	cmp	r2, #1
 800ed7c:	dd20      	ble.n	800edc0 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0xf8>
 800ed7e:	f894 c000 	ldrb.w	ip, [r4]
 800ed82:	f1bc 0f09 	cmp.w	ip, #9
 800ed86:	d00a      	beq.n	800ed9e <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0xd6>
 800ed88:	f1bc 0f07 	cmp.w	ip, #7
 800ed8c:	d007      	beq.n	800ed9e <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0xd6>
 800ed8e:	4b74      	ldr	r3, [pc, #464]	; (800ef60 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x298>)
 800ed90:	6944      	ldr	r4, [r0, #20]
 800ed92:	4a70      	ldr	r2, [pc, #448]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800ed94:	9300      	str	r3, [sp, #0]
 800ed96:	4973      	ldr	r1, [pc, #460]	; (800ef64 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x29c>)
 800ed98:	23f0      	movs	r3, #240	; 0xf0
 800ed9a:	47a0      	blx	r4
 800ed9c:	e7c2      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800ed9e:	7830      	ldrb	r0, [r6, #0]
 800eda0:	2809      	cmp	r0, #9
 800eda2:	f000 8098 	beq.w	800eed6 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x20e>
 800eda6:	2812      	cmp	r0, #18
 800eda8:	f000 8095 	beq.w	800eed6 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x20e>
 800edac:	4b6e      	ldr	r3, [pc, #440]	; (800ef68 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2a0>)
 800edae:	696c      	ldr	r4, [r5, #20]
 800edb0:	4a68      	ldr	r2, [pc, #416]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800edb2:	9300      	str	r3, [sp, #0]
 800edb4:	496b      	ldr	r1, [pc, #428]	; (800ef64 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x29c>)
 800edb6:	23f2      	movs	r3, #242	; 0xf2
 800edb8:	4628      	mov	r0, r5
 800edba:	47a0      	blx	r4
 800edbc:	2701      	movs	r7, #1
 800edbe:	e7b1      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800edc0:	9b05      	ldr	r3, [sp, #20]
 800edc2:	68e0      	ldr	r0, [r4, #12]
 800edc4:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800edc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800edca:	f1bb 0f00 	cmp.w	fp, #0
 800edce:	f103 0a04 	add.w	sl, r3, #4
 800edd2:	dd39      	ble.n	800ee48 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x180>
 800edd4:	f1ae 0704 	sub.w	r7, lr, #4
 800edd8:	f1a1 0804 	sub.w	r8, r1, #4
 800eddc:	f7f1 fbbe 	bl	800055c <__aeabi_f2d>
 800ede0:	4602      	mov	r2, r0
 800ede2:	460b      	mov	r3, r1
 800ede4:	4648      	mov	r0, r9
 800ede6:	ec43 2b18 	vmov	d8, r2, r3
 800edea:	f7f1 fbb7 	bl	800055c <__aeabi_f2d>
 800edee:	f04f 0900 	mov.w	r9, #0
 800edf2:	e9cd 540e 	strd	r5, r4, [sp, #56]	; 0x38
 800edf6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800edf8:	960d      	str	r6, [sp, #52]	; 0x34
 800edfa:	4605      	mov	r5, r0
 800edfc:	460e      	mov	r6, r1
 800edfe:	2c01      	cmp	r4, #1
 800ee00:	bfd6      	itet	le
 800ee02:	9b0c      	ldrle	r3, [sp, #48]	; 0x30
 800ee04:	f8da 0000 	ldrgt.w	r0, [sl]
 800ee08:	6858      	ldrle	r0, [r3, #4]
 800ee0a:	f7f1 fba7 	bl	800055c <__aeabi_f2d>
 800ee0e:	ec53 2b18 	vmov	r2, r3, d8
 800ee12:	f7f1 fbfb 	bl	800060c <__aeabi_dmul>
 800ee16:	4633      	mov	r3, r6
 800ee18:	462a      	mov	r2, r5
 800ee1a:	f7f1 fd21 	bl	8000860 <__aeabi_ddiv>
 800ee1e:	ec41 0b10 	vmov	d0, r0, r1
 800ee22:	a912      	add	r1, sp, #72	; 0x48
 800ee24:	a811      	add	r0, sp, #68	; 0x44
 800ee26:	f7ff fccd 	bl	800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>
 800ee2a:	f109 0901 	add.w	r9, r9, #1
 800ee2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ee30:	f847 3f04 	str.w	r3, [r7, #4]!
 800ee34:	45cb      	cmp	fp, r9
 800ee36:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ee38:	f848 3f04 	str.w	r3, [r8, #4]!
 800ee3c:	f10a 0a04 	add.w	sl, sl, #4
 800ee40:	dcdd      	bgt.n	800edfe <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x136>
 800ee42:	e9dd 540e 	ldrd	r5, r4, [sp, #56]	; 0x38
 800ee46:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 800ee48:	7823      	ldrb	r3, [r4, #0]
 800ee4a:	2b03      	cmp	r3, #3
 800ee4c:	d005      	beq.n	800ee5a <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x192>
 800ee4e:	2b09      	cmp	r3, #9
 800ee50:	d024      	beq.n	800ee9c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x1d4>
 800ee52:	2b07      	cmp	r3, #7
 800ee54:	d022      	beq.n	800ee9c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x1d4>
 800ee56:	2700      	movs	r7, #0
 800ee58:	e764      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800ee5a:	9b05      	ldr	r3, [sp, #20]
 800ee5c:	9300      	str	r3, [sp, #0]
 800ee5e:	a912      	add	r1, sp, #72	; 0x48
 800ee60:	4632      	mov	r2, r6
 800ee62:	9101      	str	r1, [sp, #4]
 800ee64:	2700      	movs	r7, #0
 800ee66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ee68:	4621      	mov	r1, r4
 800ee6a:	4628      	mov	r0, r5
 800ee6c:	2600      	movs	r6, #0
 800ee6e:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
 800ee72:	f7ff fdb5 	bl	800e9e0 <_ZN6tflite32GetQuantizedConvolutionMultiplerEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_Pd>
 800ee76:	4607      	mov	r7, r0
 800ee78:	2800      	cmp	r0, #0
 800ee7a:	f47f af53 	bne.w	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800ee7e:	a911      	add	r1, sp, #68	; 0x44
 800ee80:	ed9d 0b12 	vldr	d0, [sp, #72]	; 0x48
 800ee84:	980a      	ldr	r0, [sp, #40]	; 0x28
 800ee86:	f7ff fc9d 	bl	800e7c4 <_ZN6tflite18QuantizeMultiplierEdPlPi>
 800ee8a:	7823      	ldrb	r3, [r4, #0]
 800ee8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ee8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ee90:	4252      	negs	r2, r2
 800ee92:	2b09      	cmp	r3, #9
 800ee94:	600a      	str	r2, [r1, #0]
 800ee96:	d001      	beq.n	800ee9c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x1d4>
 800ee98:	2b03      	cmp	r3, #3
 800ee9a:	d1da      	bne.n	800ee52 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x18a>
 800ee9c:	4b2a      	ldr	r3, [pc, #168]	; (800ef48 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x280>)
 800ee9e:	681a      	ldr	r2, [r3, #0]
 800eea0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800eea2:	405a      	eors	r2, r3
 800eea4:	f04f 0300 	mov.w	r3, #0
 800eea8:	d14c      	bne.n	800ef44 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x27c>
 800eeaa:	9b06      	ldr	r3, [sp, #24]
 800eeac:	9a05      	ldr	r2, [sp, #20]
 800eeae:	7819      	ldrb	r1, [r3, #0]
 800eeb0:	9b08      	ldr	r3, [sp, #32]
 800eeb2:	9322      	str	r3, [sp, #136]	; 0x88
 800eeb4:	9b07      	ldr	r3, [sp, #28]
 800eeb6:	4628      	mov	r0, r5
 800eeb8:	b017      	add	sp, #92	; 0x5c
 800eeba:	ecbd 8b02 	vpop	{d8}
 800eebe:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eec2:	f7ff be1f 	b.w	800eb04 <_ZN6tflite33CalculateActivationRangeQuantizedEP13TfLiteContext21TfLiteFusedActivationP12TfLiteTensorPlS5_>
 800eec6:	4b29      	ldr	r3, [pc, #164]	; (800ef6c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2a4>)
 800eec8:	6944      	ldr	r4, [r0, #20]
 800eeca:	4a22      	ldr	r2, [pc, #136]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800eecc:	9300      	str	r3, [sp, #0]
 800eece:	4925      	ldr	r1, [pc, #148]	; (800ef64 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x29c>)
 800eed0:	23ec      	movs	r3, #236	; 0xec
 800eed2:	47a0      	blx	r4
 800eed4:	e726      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800eed6:	980d      	ldr	r0, [sp, #52]	; 0x34
 800eed8:	4558      	cmp	r0, fp
 800eeda:	d015      	beq.n	800ef08 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x240>
 800eedc:	e9cd 0b02 	strd	r0, fp, [sp, #8]
 800eee0:	4a23      	ldr	r2, [pc, #140]	; (800ef70 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2a8>)
 800eee2:	4b24      	ldr	r3, [pc, #144]	; (800ef74 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2ac>)
 800eee4:	696c      	ldr	r4, [r5, #20]
 800eee6:	491c      	ldr	r1, [pc, #112]	; (800ef58 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x290>)
 800eee8:	e9cd 3200 	strd	r3, r2, [sp]
 800eeec:	4628      	mov	r0, r5
 800eeee:	4a19      	ldr	r2, [pc, #100]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800eef0:	23f4      	movs	r3, #244	; 0xf4
 800eef2:	47a0      	blx	r4
 800eef4:	2701      	movs	r7, #1
 800eef6:	e715      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800eef8:	4b1f      	ldr	r3, [pc, #124]	; (800ef78 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2b0>)
 800eefa:	6944      	ldr	r4, [r0, #20]
 800eefc:	4a15      	ldr	r2, [pc, #84]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800eefe:	9300      	str	r3, [sp, #0]
 800ef00:	4918      	ldr	r1, [pc, #96]	; (800ef64 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x29c>)
 800ef02:	23eb      	movs	r3, #235	; 0xeb
 800ef04:	47a0      	blx	r4
 800ef06:	e70d      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800ef08:	6898      	ldr	r0, [r3, #8]
 800ef0a:	68b3      	ldr	r3, [r6, #8]
 800ef0c:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 800ef10:	980d      	ldr	r0, [sp, #52]	; 0x34
 800ef12:	685b      	ldr	r3, [r3, #4]
 800ef14:	4283      	cmp	r3, r0
 800ef16:	d00d      	beq.n	800ef34 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x26c>
 800ef18:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800ef1c:	4917      	ldr	r1, [pc, #92]	; (800ef7c <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2b4>)
 800ef1e:	4a14      	ldr	r2, [pc, #80]	; (800ef70 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x2a8>)
 800ef20:	696c      	ldr	r4, [r5, #20]
 800ef22:	23f5      	movs	r3, #245	; 0xf5
 800ef24:	e9cd 2100 	strd	r2, r1, [sp]
 800ef28:	4628      	mov	r0, r5
 800ef2a:	4a0a      	ldr	r2, [pc, #40]	; (800ef54 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x28c>)
 800ef2c:	490a      	ldr	r1, [pc, #40]	; (800ef58 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x290>)
 800ef2e:	47a0      	blx	r4
 800ef30:	2701      	movs	r7, #1
 800ef32:	e6f7      	b.n	800ed24 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x5c>
 800ef34:	9b05      	ldr	r3, [sp, #20]
 800ef36:	68e0      	ldr	r0, [r4, #12]
 800ef38:	f8d3 900c 	ldr.w	r9, [r3, #12]
 800ef3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ef3e:	f103 0a04 	add.w	sl, r3, #4
 800ef42:	e747      	b.n	800edd4 <_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPlPiS9_S9_S9_S9_i+0x10c>
 800ef44:	f00e fcfa 	bl	801d93c <__stack_chk_fail>
 800ef48:	20011294 	.word	0x20011294
 800ef4c:	0802579c 	.word	0x0802579c
 800ef50:	080268e0 	.word	0x080268e0
 800ef54:	080267f8 	.word	0x080267f8
 800ef58:	08024a8c 	.word	0x08024a8c
 800ef5c:	080268fc 	.word	0x080268fc
 800ef60:	08025d94 	.word	0x08025d94
 800ef64:	080249b0 	.word	0x080249b0
 800ef68:	08026918 	.word	0x08026918
 800ef6c:	08025470 	.word	0x08025470
 800ef70:	08026954 	.word	0x08026954
 800ef74:	08026964 	.word	0x08026964
 800ef78:	080257d4 	.word	0x080257d4
 800ef7c:	08026988 	.word	0x08026988

0800ef80 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE>:
 800ef80:	b500      	push	{lr}
 800ef82:	4b10      	ldr	r3, [pc, #64]	; (800efc4 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x44>)
 800ef84:	b083      	sub	sp, #12
 800ef86:	681b      	ldr	r3, [r3, #0]
 800ef88:	9301      	str	r3, [sp, #4]
 800ef8a:	f04f 0300 	mov.w	r3, #0
 800ef8e:	6803      	ldr	r3, [r0, #0]
 800ef90:	1ac3      	subs	r3, r0, r3
 800ef92:	881a      	ldrh	r2, [r3, #0]
 800ef94:	2a0a      	cmp	r2, #10
 800ef96:	d90e      	bls.n	800efb6 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x36>
 800ef98:	895b      	ldrh	r3, [r3, #10]
 800ef9a:	18c2      	adds	r2, r0, r3
 800ef9c:	b16b      	cbz	r3, 800efba <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x3a>
 800ef9e:	58c3      	ldr	r3, [r0, r3]
 800efa0:	58d0      	ldr	r0, [r2, r3]
 800efa2:	4b08      	ldr	r3, [pc, #32]	; (800efc4 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x44>)
 800efa4:	681a      	ldr	r2, [r3, #0]
 800efa6:	9b01      	ldr	r3, [sp, #4]
 800efa8:	405a      	eors	r2, r3
 800efaa:	f04f 0300 	mov.w	r3, #0
 800efae:	d106      	bne.n	800efbe <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x3e>
 800efb0:	b003      	add	sp, #12
 800efb2:	f85d fb04 	ldr.w	pc, [sp], #4
 800efb6:	2000      	movs	r0, #0
 800efb8:	e7f3      	b.n	800efa2 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x22>
 800efba:	4618      	mov	r0, r3
 800efbc:	e7f1      	b.n	800efa2 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE+0x22>
 800efbe:	f00e fcbd 	bl	801d93c <__stack_chk_fail>
 800efc2:	bf00      	nop
 800efc4:	20011294 	.word	0x20011294

0800efc8 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi>:
 800efc8:	b510      	push	{r4, lr}
 800efca:	6803      	ldr	r3, [r0, #0]
 800efcc:	4a1c      	ldr	r2, [pc, #112]	; (800f040 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x78>)
 800efce:	1ac3      	subs	r3, r0, r3
 800efd0:	b082      	sub	sp, #8
 800efd2:	6812      	ldr	r2, [r2, #0]
 800efd4:	9201      	str	r2, [sp, #4]
 800efd6:	f04f 0200 	mov.w	r2, #0
 800efda:	881a      	ldrh	r2, [r3, #0]
 800efdc:	2a08      	cmp	r2, #8
 800efde:	d92b      	bls.n	800f038 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x70>
 800efe0:	891b      	ldrh	r3, [r3, #8]
 800efe2:	b34b      	cbz	r3, 800f038 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x70>
 800efe4:	58c4      	ldr	r4, [r0, r3]
 800efe6:	4418      	add	r0, r3
 800efe8:	1902      	adds	r2, r0, r4
 800efea:	5903      	ldr	r3, [r0, r4]
 800efec:	4299      	cmp	r1, r3
 800efee:	d21b      	bcs.n	800f028 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x60>
 800eff0:	3204      	adds	r2, #4
 800eff2:	eb02 0381 	add.w	r3, r2, r1, lsl #2
 800eff6:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800effa:	585a      	ldr	r2, [r3, r1]
 800effc:	440b      	add	r3, r1
 800effe:	1a9a      	subs	r2, r3, r2
 800f000:	8811      	ldrh	r1, [r2, #0]
 800f002:	290a      	cmp	r1, #10
 800f004:	d809      	bhi.n	800f01a <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x52>
 800f006:	2000      	movs	r0, #0
 800f008:	4b0d      	ldr	r3, [pc, #52]	; (800f040 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x78>)
 800f00a:	681a      	ldr	r2, [r3, #0]
 800f00c:	9b01      	ldr	r3, [sp, #4]
 800f00e:	405a      	eors	r2, r3
 800f010:	f04f 0300 	mov.w	r3, #0
 800f014:	d10e      	bne.n	800f034 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x6c>
 800f016:	b002      	add	sp, #8
 800f018:	bd10      	pop	{r4, pc}
 800f01a:	8950      	ldrh	r0, [r2, #10]
 800f01c:	181a      	adds	r2, r3, r0
 800f01e:	2800      	cmp	r0, #0
 800f020:	d0f2      	beq.n	800f008 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x40>
 800f022:	581b      	ldr	r3, [r3, r0]
 800f024:	58d0      	ldr	r0, [r2, r3]
 800f026:	e7ef      	b.n	800f008 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x40>
 800f028:	4b06      	ldr	r3, [pc, #24]	; (800f044 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x7c>)
 800f02a:	4a07      	ldr	r2, [pc, #28]	; (800f048 <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x80>)
 800f02c:	4807      	ldr	r0, [pc, #28]	; (800f04c <_ZN6tflite20NumSubgraphOperatorsEPKNS_5ModelEi+0x84>)
 800f02e:	21b0      	movs	r1, #176	; 0xb0
 800f030:	f00d fcc6 	bl	801c9c0 <__assert_func>
 800f034:	f00e fc82 	bl	801d93c <__stack_chk_fail>
 800f038:	2300      	movs	r3, #0
 800f03a:	681b      	ldr	r3, [r3, #0]
 800f03c:	deff      	udf	#255	; 0xff
 800f03e:	bf00      	nop
 800f040:	20011294 	.word	0x20011294
 800f044:	08024734 	.word	0x08024734
 800f048:	08025dd0 	.word	0x08025dd0
 800f04c:	08024804 	.word	0x08024804

0800f050 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE>:
 800f050:	b500      	push	{lr}
 800f052:	4b09      	ldr	r3, [pc, #36]	; (800f078 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE+0x28>)
 800f054:	b083      	sub	sp, #12
 800f056:	681b      	ldr	r3, [r3, #0]
 800f058:	9301      	str	r3, [sp, #4]
 800f05a:	f04f 0300 	mov.w	r3, #0
 800f05e:	4b06      	ldr	r3, [pc, #24]	; (800f078 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE+0x28>)
 800f060:	681a      	ldr	r2, [r3, #0]
 800f062:	9b01      	ldr	r3, [sp, #4]
 800f064:	405a      	eors	r2, r3
 800f066:	f04f 0300 	mov.w	r3, #0
 800f06a:	d102      	bne.n	800f072 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE+0x22>
 800f06c:	b003      	add	sp, #12
 800f06e:	f85d fb04 	ldr.w	pc, [sp], #4
 800f072:	f00e fc63 	bl	801d93c <__stack_chk_fail>
 800f076:	bf00      	nop
 800f078:	20011294 	.word	0x20011294

0800f07c <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIfmEE>:
 800f07c:	b500      	push	{lr}
 800f07e:	4b09      	ldr	r3, [pc, #36]	; (800f0a4 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIfmEE+0x28>)
 800f080:	b083      	sub	sp, #12
 800f082:	681b      	ldr	r3, [r3, #0]
 800f084:	9301      	str	r3, [sp, #4]
 800f086:	f04f 0300 	mov.w	r3, #0
 800f08a:	4b06      	ldr	r3, [pc, #24]	; (800f0a4 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIfmEE+0x28>)
 800f08c:	681a      	ldr	r2, [r3, #0]
 800f08e:	9b01      	ldr	r3, [sp, #4]
 800f090:	405a      	eors	r2, r3
 800f092:	f04f 0300 	mov.w	r3, #0
 800f096:	d102      	bne.n	800f09e <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIfmEE+0x22>
 800f098:	b003      	add	sp, #12
 800f09a:	f85d fb04 	ldr.w	pc, [sp], #4
 800f09e:	f00e fc4d 	bl	801d93c <__stack_chk_fail>
 800f0a2:	bf00      	nop
 800f0a4:	20011294 	.word	0x20011294

0800f0a8 <_ZN6tflite18MicroMemoryPlanner9AddBufferEiiii>:
 800f0a8:	b500      	push	{lr}
 800f0aa:	4b09      	ldr	r3, [pc, #36]	; (800f0d0 <_ZN6tflite18MicroMemoryPlanner9AddBufferEiiii+0x28>)
 800f0ac:	b083      	sub	sp, #12
 800f0ae:	681b      	ldr	r3, [r3, #0]
 800f0b0:	9301      	str	r3, [sp, #4]
 800f0b2:	f04f 0300 	mov.w	r3, #0
 800f0b6:	4b06      	ldr	r3, [pc, #24]	; (800f0d0 <_ZN6tflite18MicroMemoryPlanner9AddBufferEiiii+0x28>)
 800f0b8:	681a      	ldr	r2, [r3, #0]
 800f0ba:	9b01      	ldr	r3, [sp, #4]
 800f0bc:	405a      	eors	r2, r3
 800f0be:	f04f 0300 	mov.w	r3, #0
 800f0c2:	d103      	bne.n	800f0cc <_ZN6tflite18MicroMemoryPlanner9AddBufferEiiii+0x24>
 800f0c4:	2001      	movs	r0, #1
 800f0c6:	b003      	add	sp, #12
 800f0c8:	f85d fb04 	ldr.w	pc, [sp], #4
 800f0cc:	f00e fc36 	bl	801d93c <__stack_chk_fail>
 800f0d0:	20011294 	.word	0x20011294

0800f0d4 <_ZN6tflite18MicroMemoryPlanner4InitEPhi>:
 800f0d4:	b500      	push	{lr}
 800f0d6:	4b09      	ldr	r3, [pc, #36]	; (800f0fc <_ZN6tflite18MicroMemoryPlanner4InitEPhi+0x28>)
 800f0d8:	b083      	sub	sp, #12
 800f0da:	681b      	ldr	r3, [r3, #0]
 800f0dc:	9301      	str	r3, [sp, #4]
 800f0de:	f04f 0300 	mov.w	r3, #0
 800f0e2:	4b06      	ldr	r3, [pc, #24]	; (800f0fc <_ZN6tflite18MicroMemoryPlanner4InitEPhi+0x28>)
 800f0e4:	681a      	ldr	r2, [r3, #0]
 800f0e6:	9b01      	ldr	r3, [sp, #4]
 800f0e8:	405a      	eors	r2, r3
 800f0ea:	f04f 0300 	mov.w	r3, #0
 800f0ee:	d103      	bne.n	800f0f8 <_ZN6tflite18MicroMemoryPlanner4InitEPhi+0x24>
 800f0f0:	2000      	movs	r0, #0
 800f0f2:	b003      	add	sp, #12
 800f0f4:	f85d fb04 	ldr.w	pc, [sp], #4
 800f0f8:	f00e fc20 	bl	801d93c <__stack_chk_fail>
 800f0fc:	20011294 	.word	0x20011294

0800f100 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator8AllocateEjj>:
 800f100:	b500      	push	{lr}
 800f102:	4b0c      	ldr	r3, [pc, #48]	; (800f134 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator8AllocateEjj+0x34>)
 800f104:	6840      	ldr	r0, [r0, #4]
 800f106:	b083      	sub	sp, #12
 800f108:	681b      	ldr	r3, [r3, #0]
 800f10a:	9301      	str	r3, [sp, #4]
 800f10c:	f04f 0300 	mov.w	r3, #0
 800f110:	4b08      	ldr	r3, [pc, #32]	; (800f134 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator8AllocateEjj+0x34>)
 800f112:	f8d3 c000 	ldr.w	ip, [r3]
 800f116:	9b01      	ldr	r3, [sp, #4]
 800f118:	ea93 0c0c 	eors.w	ip, r3, ip
 800f11c:	f04f 0300 	mov.w	r3, #0
 800f120:	d105      	bne.n	800f12e <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator8AllocateEjj+0x2e>
 800f122:	6803      	ldr	r3, [r0, #0]
 800f124:	689b      	ldr	r3, [r3, #8]
 800f126:	b003      	add	sp, #12
 800f128:	f85d eb04 	ldr.w	lr, [sp], #4
 800f12c:	4718      	bx	r3
 800f12e:	f00e fc05 	bl	801d93c <__stack_chk_fail>
 800f132:	bf00      	nop
 800f134:	20011294 	.word	0x20011294

0800f138 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator10DeallocateEPv>:
 800f138:	b500      	push	{lr}
 800f13a:	4b09      	ldr	r3, [pc, #36]	; (800f160 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator10DeallocateEPv+0x28>)
 800f13c:	b083      	sub	sp, #12
 800f13e:	681b      	ldr	r3, [r3, #0]
 800f140:	9301      	str	r3, [sp, #4]
 800f142:	f04f 0300 	mov.w	r3, #0
 800f146:	4b06      	ldr	r3, [pc, #24]	; (800f160 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator10DeallocateEPv+0x28>)
 800f148:	681a      	ldr	r2, [r3, #0]
 800f14a:	9b01      	ldr	r3, [sp, #4]
 800f14c:	405a      	eors	r2, r3
 800f14e:	f04f 0300 	mov.w	r3, #0
 800f152:	d102      	bne.n	800f15a <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocator10DeallocateEPv+0x22>
 800f154:	b003      	add	sp, #12
 800f156:	f85d fb04 	ldr.w	pc, [sp], #4
 800f15a:	f00e fbef 	bl	801d93c <__stack_chk_fail>
 800f15e:	bf00      	nop
 800f160:	20011294 	.word	0x20011294

0800f164 <_ZN6tflite14MicroAllocatorD1Ev>:
 800f164:	b500      	push	{lr}
 800f166:	4b09      	ldr	r3, [pc, #36]	; (800f18c <_ZN6tflite14MicroAllocatorD1Ev+0x28>)
 800f168:	b083      	sub	sp, #12
 800f16a:	681b      	ldr	r3, [r3, #0]
 800f16c:	9301      	str	r3, [sp, #4]
 800f16e:	f04f 0300 	mov.w	r3, #0
 800f172:	4b06      	ldr	r3, [pc, #24]	; (800f18c <_ZN6tflite14MicroAllocatorD1Ev+0x28>)
 800f174:	681a      	ldr	r2, [r3, #0]
 800f176:	9b01      	ldr	r3, [sp, #4]
 800f178:	405a      	eors	r2, r3
 800f17a:	f04f 0300 	mov.w	r3, #0
 800f17e:	d102      	bne.n	800f186 <_ZN6tflite14MicroAllocatorD1Ev+0x22>
 800f180:	b003      	add	sp, #12
 800f182:	f85d fb04 	ldr.w	pc, [sp], #4
 800f186:	f00e fbd9 	bl	801d93c <__stack_chk_fail>
 800f18a:	bf00      	nop
 800f18c:	20011294 	.word	0x20011294

0800f190 <_ZN6tflite14MicroAllocator24AllocatePersistentBufferEj>:
 800f190:	b500      	push	{lr}
 800f192:	4b0b      	ldr	r3, [pc, #44]	; (800f1c0 <_ZN6tflite14MicroAllocator24AllocatePersistentBufferEj+0x30>)
 800f194:	6880      	ldr	r0, [r0, #8]
 800f196:	b083      	sub	sp, #12
 800f198:	681b      	ldr	r3, [r3, #0]
 800f19a:	9301      	str	r3, [sp, #4]
 800f19c:	f04f 0300 	mov.w	r3, #0
 800f1a0:	4b07      	ldr	r3, [pc, #28]	; (800f1c0 <_ZN6tflite14MicroAllocator24AllocatePersistentBufferEj+0x30>)
 800f1a2:	681a      	ldr	r2, [r3, #0]
 800f1a4:	9b01      	ldr	r3, [sp, #4]
 800f1a6:	405a      	eors	r2, r3
 800f1a8:	f04f 0300 	mov.w	r3, #0
 800f1ac:	d106      	bne.n	800f1bc <_ZN6tflite14MicroAllocator24AllocatePersistentBufferEj+0x2c>
 800f1ae:	6803      	ldr	r3, [r0, #0]
 800f1b0:	689b      	ldr	r3, [r3, #8]
 800f1b2:	2210      	movs	r2, #16
 800f1b4:	b003      	add	sp, #12
 800f1b6:	f85d eb04 	ldr.w	lr, [sp], #4
 800f1ba:	4718      	bx	r3
 800f1bc:	f00e fbbe 	bl	801d93c <__stack_chk_fail>
 800f1c0:	20011294 	.word	0x20011294

0800f1c4 <_ZN6tflite14MicroAllocator18AllocateTempBufferEjj>:
 800f1c4:	b500      	push	{lr}
 800f1c6:	4b0c      	ldr	r3, [pc, #48]	; (800f1f8 <_ZN6tflite14MicroAllocator18AllocateTempBufferEjj+0x34>)
 800f1c8:	6840      	ldr	r0, [r0, #4]
 800f1ca:	b083      	sub	sp, #12
 800f1cc:	681b      	ldr	r3, [r3, #0]
 800f1ce:	9301      	str	r3, [sp, #4]
 800f1d0:	f04f 0300 	mov.w	r3, #0
 800f1d4:	4b08      	ldr	r3, [pc, #32]	; (800f1f8 <_ZN6tflite14MicroAllocator18AllocateTempBufferEjj+0x34>)
 800f1d6:	f8d3 c000 	ldr.w	ip, [r3]
 800f1da:	9b01      	ldr	r3, [sp, #4]
 800f1dc:	ea93 0c0c 	eors.w	ip, r3, ip
 800f1e0:	f04f 0300 	mov.w	r3, #0
 800f1e4:	d105      	bne.n	800f1f2 <_ZN6tflite14MicroAllocator18AllocateTempBufferEjj+0x2e>
 800f1e6:	6803      	ldr	r3, [r0, #0]
 800f1e8:	689b      	ldr	r3, [r3, #8]
 800f1ea:	b003      	add	sp, #12
 800f1ec:	f85d eb04 	ldr.w	lr, [sp], #4
 800f1f0:	4718      	bx	r3
 800f1f2:	f00e fba3 	bl	801d93c <__stack_chk_fail>
 800f1f6:	bf00      	nop
 800f1f8:	20011294 	.word	0x20011294

0800f1fc <_ZN6tflite14MicroAllocator20DeallocateTempBufferEPh>:
 800f1fc:	b500      	push	{lr}
 800f1fe:	4b0b      	ldr	r3, [pc, #44]	; (800f22c <_ZN6tflite14MicroAllocator20DeallocateTempBufferEPh+0x30>)
 800f200:	6840      	ldr	r0, [r0, #4]
 800f202:	b083      	sub	sp, #12
 800f204:	681b      	ldr	r3, [r3, #0]
 800f206:	9301      	str	r3, [sp, #4]
 800f208:	f04f 0300 	mov.w	r3, #0
 800f20c:	4b07      	ldr	r3, [pc, #28]	; (800f22c <_ZN6tflite14MicroAllocator20DeallocateTempBufferEPh+0x30>)
 800f20e:	681a      	ldr	r2, [r3, #0]
 800f210:	9b01      	ldr	r3, [sp, #4]
 800f212:	405a      	eors	r2, r3
 800f214:	f04f 0300 	mov.w	r3, #0
 800f218:	d105      	bne.n	800f226 <_ZN6tflite14MicroAllocator20DeallocateTempBufferEPh+0x2a>
 800f21a:	6803      	ldr	r3, [r0, #0]
 800f21c:	68db      	ldr	r3, [r3, #12]
 800f21e:	b003      	add	sp, #12
 800f220:	f85d eb04 	ldr.w	lr, [sp], #4
 800f224:	4718      	bx	r3
 800f226:	f00e fb89 	bl	801d93c <__stack_chk_fail>
 800f22a:	bf00      	nop
 800f22c:	20011294 	.word	0x20011294

0800f230 <_ZN6tflite14MicroAllocator20ResetTempAllocationsEv>:
 800f230:	b500      	push	{lr}
 800f232:	4b0b      	ldr	r3, [pc, #44]	; (800f260 <_ZN6tflite14MicroAllocator20ResetTempAllocationsEv+0x30>)
 800f234:	6840      	ldr	r0, [r0, #4]
 800f236:	b083      	sub	sp, #12
 800f238:	681b      	ldr	r3, [r3, #0]
 800f23a:	9301      	str	r3, [sp, #4]
 800f23c:	f04f 0300 	mov.w	r3, #0
 800f240:	4b07      	ldr	r3, [pc, #28]	; (800f260 <_ZN6tflite14MicroAllocator20ResetTempAllocationsEv+0x30>)
 800f242:	681a      	ldr	r2, [r3, #0]
 800f244:	9b01      	ldr	r3, [sp, #4]
 800f246:	405a      	eors	r2, r3
 800f248:	f04f 0300 	mov.w	r3, #0
 800f24c:	d105      	bne.n	800f25a <_ZN6tflite14MicroAllocator20ResetTempAllocationsEv+0x2a>
 800f24e:	6803      	ldr	r3, [r0, #0]
 800f250:	695b      	ldr	r3, [r3, #20]
 800f252:	b003      	add	sp, #12
 800f254:	f85d eb04 	ldr.w	lr, [sp], #4
 800f258:	4718      	bx	r3
 800f25a:	f00e fb6f 	bl	801d93c <__stack_chk_fail>
 800f25e:	bf00      	nop
 800f260:	20011294 	.word	0x20011294

0800f264 <_ZN6tflite14MicroAllocator20IsAllTempDeallocatedEv>:
 800f264:	b500      	push	{lr}
 800f266:	4b0b      	ldr	r3, [pc, #44]	; (800f294 <_ZN6tflite14MicroAllocator20IsAllTempDeallocatedEv+0x30>)
 800f268:	6840      	ldr	r0, [r0, #4]
 800f26a:	b083      	sub	sp, #12
 800f26c:	681b      	ldr	r3, [r3, #0]
 800f26e:	9301      	str	r3, [sp, #4]
 800f270:	f04f 0300 	mov.w	r3, #0
 800f274:	4b07      	ldr	r3, [pc, #28]	; (800f294 <_ZN6tflite14MicroAllocator20IsAllTempDeallocatedEv+0x30>)
 800f276:	681a      	ldr	r2, [r3, #0]
 800f278:	9b01      	ldr	r3, [sp, #4]
 800f27a:	405a      	eors	r2, r3
 800f27c:	f04f 0300 	mov.w	r3, #0
 800f280:	d105      	bne.n	800f28e <_ZN6tflite14MicroAllocator20IsAllTempDeallocatedEv+0x2a>
 800f282:	6803      	ldr	r3, [r0, #0]
 800f284:	691b      	ldr	r3, [r3, #16]
 800f286:	b003      	add	sp, #12
 800f288:	f85d eb04 	ldr.w	lr, [sp], #4
 800f28c:	4718      	bx	r3
 800f28e:	f00e fb55 	bl	801d93c <__stack_chk_fail>
 800f292:	bf00      	nop
 800f294:	20011294 	.word	0x20011294

0800f298 <_ZN6tflite14MicroAllocator38AllocatePersistentTfLiteTensorInternalEv>:
 800f298:	b500      	push	{lr}
 800f29a:	4b0c      	ldr	r3, [pc, #48]	; (800f2cc <_ZN6tflite14MicroAllocator38AllocatePersistentTfLiteTensorInternalEv+0x34>)
 800f29c:	6880      	ldr	r0, [r0, #8]
 800f29e:	b083      	sub	sp, #12
 800f2a0:	681b      	ldr	r3, [r3, #0]
 800f2a2:	9301      	str	r3, [sp, #4]
 800f2a4:	f04f 0300 	mov.w	r3, #0
 800f2a8:	4b08      	ldr	r3, [pc, #32]	; (800f2cc <_ZN6tflite14MicroAllocator38AllocatePersistentTfLiteTensorInternalEv+0x34>)
 800f2aa:	681a      	ldr	r2, [r3, #0]
 800f2ac:	9b01      	ldr	r3, [sp, #4]
 800f2ae:	405a      	eors	r2, r3
 800f2b0:	f04f 0300 	mov.w	r3, #0
 800f2b4:	d107      	bne.n	800f2c6 <_ZN6tflite14MicroAllocator38AllocatePersistentTfLiteTensorInternalEv+0x2e>
 800f2b6:	6803      	ldr	r3, [r0, #0]
 800f2b8:	689b      	ldr	r3, [r3, #8]
 800f2ba:	2204      	movs	r2, #4
 800f2bc:	2140      	movs	r1, #64	; 0x40
 800f2be:	b003      	add	sp, #12
 800f2c0:	f85d eb04 	ldr.w	lr, [sp], #4
 800f2c4:	4718      	bx	r3
 800f2c6:	f00e fb39 	bl	801d93c <__stack_chk_fail>
 800f2ca:	bf00      	nop
 800f2cc:	20011294 	.word	0x20011294

0800f2d0 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD1Ev>:
 800f2d0:	b500      	push	{lr}
 800f2d2:	4b09      	ldr	r3, [pc, #36]	; (800f2f8 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD1Ev+0x28>)
 800f2d4:	b083      	sub	sp, #12
 800f2d6:	681b      	ldr	r3, [r3, #0]
 800f2d8:	9301      	str	r3, [sp, #4]
 800f2da:	f04f 0300 	mov.w	r3, #0
 800f2de:	4b06      	ldr	r3, [pc, #24]	; (800f2f8 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD1Ev+0x28>)
 800f2e0:	681a      	ldr	r2, [r3, #0]
 800f2e2:	9b01      	ldr	r3, [sp, #4]
 800f2e4:	405a      	eors	r2, r3
 800f2e6:	f04f 0300 	mov.w	r3, #0
 800f2ea:	d102      	bne.n	800f2f2 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD1Ev+0x22>
 800f2ec:	b003      	add	sp, #12
 800f2ee:	f85d fb04 	ldr.w	pc, [sp], #4
 800f2f2:	f00e fb23 	bl	801d93c <__stack_chk_fail>
 800f2f6:	bf00      	nop
 800f2f8:	20011294 	.word	0x20011294

0800f2fc <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor>:
 800f2fc:	b570      	push	{r4, r5, r6, lr}
 800f2fe:	4b19      	ldr	r3, [pc, #100]	; (800f364 <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x68>)
 800f300:	b082      	sub	sp, #8
 800f302:	681b      	ldr	r3, [r3, #0]
 800f304:	9301      	str	r3, [sp, #4]
 800f306:	f04f 0300 	mov.w	r3, #0
 800f30a:	b349      	cbz	r1, 800f360 <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x64>
 800f30c:	f891 3030 	ldrb.w	r3, [r1, #48]	; 0x30
 800f310:	2b01      	cmp	r3, #1
 800f312:	4605      	mov	r5, r0
 800f314:	460c      	mov	r4, r1
 800f316:	d014      	beq.n	800f342 <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x46>
 800f318:	2300      	movs	r3, #0
 800f31a:	6868      	ldr	r0, [r5, #4]
 800f31c:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 800f320:	e9c4 3301 	strd	r3, r3, [r4, #4]
 800f324:	6363      	str	r3, [r4, #52]	; 0x34
 800f326:	4b0f      	ldr	r3, [pc, #60]	; (800f364 <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x68>)
 800f328:	681a      	ldr	r2, [r3, #0]
 800f32a:	9b01      	ldr	r3, [sp, #4]
 800f32c:	405a      	eors	r2, r3
 800f32e:	f04f 0300 	mov.w	r3, #0
 800f332:	d113      	bne.n	800f35c <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x60>
 800f334:	6803      	ldr	r3, [r0, #0]
 800f336:	68db      	ldr	r3, [r3, #12]
 800f338:	4621      	mov	r1, r4
 800f33a:	b002      	add	sp, #8
 800f33c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f340:	4718      	bx	r3
 800f342:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800f344:	b166      	cbz	r6, 800f360 <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x64>
 800f346:	6840      	ldr	r0, [r0, #4]
 800f348:	6871      	ldr	r1, [r6, #4]
 800f34a:	6803      	ldr	r3, [r0, #0]
 800f34c:	68db      	ldr	r3, [r3, #12]
 800f34e:	4798      	blx	r3
 800f350:	6868      	ldr	r0, [r5, #4]
 800f352:	6803      	ldr	r3, [r0, #0]
 800f354:	4631      	mov	r1, r6
 800f356:	68db      	ldr	r3, [r3, #12]
 800f358:	4798      	blx	r3
 800f35a:	e7dd      	b.n	800f318 <_ZN6tflite14MicroAllocator26DeallocateTempTfLiteTensorEP12TfLiteTensor+0x1c>
 800f35c:	f00e faee 	bl	801d93c <__stack_chk_fail>
 800f360:	f00d fb26 	bl	801c9b0 <abort>
 800f364:	20011294 	.word	0x20011294

0800f368 <_ZN6tflite14MicroAllocatorD0Ev>:
 800f368:	b510      	push	{r4, lr}
 800f36a:	4b0b      	ldr	r3, [pc, #44]	; (800f398 <_ZN6tflite14MicroAllocatorD0Ev+0x30>)
 800f36c:	b082      	sub	sp, #8
 800f36e:	2124      	movs	r1, #36	; 0x24
 800f370:	681b      	ldr	r3, [r3, #0]
 800f372:	9301      	str	r3, [sp, #4]
 800f374:	f04f 0300 	mov.w	r3, #0
 800f378:	4604      	mov	r4, r0
 800f37a:	f00b fc75 	bl	801ac68 <_ZdlPvj>
 800f37e:	4b06      	ldr	r3, [pc, #24]	; (800f398 <_ZN6tflite14MicroAllocatorD0Ev+0x30>)
 800f380:	681a      	ldr	r2, [r3, #0]
 800f382:	9b01      	ldr	r3, [sp, #4]
 800f384:	405a      	eors	r2, r3
 800f386:	f04f 0300 	mov.w	r3, #0
 800f38a:	d102      	bne.n	800f392 <_ZN6tflite14MicroAllocatorD0Ev+0x2a>
 800f38c:	4620      	mov	r0, r4
 800f38e:	b002      	add	sp, #8
 800f390:	bd10      	pop	{r4, pc}
 800f392:	f00e fad3 	bl	801d93c <__stack_chk_fail>
 800f396:	bf00      	nop
 800f398:	20011294 	.word	0x20011294

0800f39c <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD0Ev>:
 800f39c:	b510      	push	{r4, lr}
 800f39e:	4b0b      	ldr	r3, [pc, #44]	; (800f3cc <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD0Ev+0x30>)
 800f3a0:	b082      	sub	sp, #8
 800f3a2:	2108      	movs	r1, #8
 800f3a4:	681b      	ldr	r3, [r3, #0]
 800f3a6:	9301      	str	r3, [sp, #4]
 800f3a8:	f04f 0300 	mov.w	r3, #0
 800f3ac:	4604      	mov	r4, r0
 800f3ae:	f00b fc5b 	bl	801ac68 <_ZdlPvj>
 800f3b2:	4b06      	ldr	r3, [pc, #24]	; (800f3cc <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD0Ev+0x30>)
 800f3b4:	681a      	ldr	r2, [r3, #0]
 800f3b6:	9b01      	ldr	r3, [sp, #4]
 800f3b8:	405a      	eors	r2, r3
 800f3ba:	f04f 0300 	mov.w	r3, #0
 800f3be:	d102      	bne.n	800f3c6 <_ZN6tflite12_GLOBAL__N_125MicroBuiltinDataAllocatorD0Ev+0x2a>
 800f3c0:	4620      	mov	r0, r4
 800f3c2:	b002      	add	sp, #8
 800f3c4:	bd10      	pop	{r4, pc}
 800f3c6:	f00e fab9 	bl	801d93c <__stack_chk_fail>
 800f3ca:	bf00      	nop
 800f3cc:	20011294 	.word	0x20011294

0800f3d0 <_ZN6tflite14MicroAllocator28AllocateScratchBufferHandlesEPPNS_19ScratchBufferHandleEj>:
 800f3d0:	b510      	push	{r4, lr}
 800f3d2:	4613      	mov	r3, r2
 800f3d4:	4a0f      	ldr	r2, [pc, #60]	; (800f414 <_ZN6tflite14MicroAllocator28AllocateScratchBufferHandlesEPPNS_19ScratchBufferHandleEj+0x44>)
 800f3d6:	b082      	sub	sp, #8
 800f3d8:	6812      	ldr	r2, [r2, #0]
 800f3da:	9201      	str	r2, [sp, #4]
 800f3dc:	f04f 0200 	mov.w	r2, #0
 800f3e0:	b1a9      	cbz	r1, 800f40e <_ZN6tflite14MicroAllocator28AllocateScratchBufferHandlesEPPNS_19ScratchBufferHandleEj+0x3e>
 800f3e2:	6982      	ldr	r2, [r0, #24]
 800f3e4:	b13a      	cbz	r2, 800f3f6 <_ZN6tflite14MicroAllocator28AllocateScratchBufferHandlesEPPNS_19ScratchBufferHandleEj+0x26>
 800f3e6:	6880      	ldr	r0, [r0, #8]
 800f3e8:	460c      	mov	r4, r1
 800f3ea:	0099      	lsls	r1, r3, #2
 800f3ec:	6803      	ldr	r3, [r0, #0]
 800f3ee:	2204      	movs	r2, #4
 800f3f0:	689b      	ldr	r3, [r3, #8]
 800f3f2:	4798      	blx	r3
 800f3f4:	6020      	str	r0, [r4, #0]
 800f3f6:	4b07      	ldr	r3, [pc, #28]	; (800f414 <_ZN6tflite14MicroAllocator28AllocateScratchBufferHandlesEPPNS_19ScratchBufferHandleEj+0x44>)
 800f3f8:	681a      	ldr	r2, [r3, #0]
 800f3fa:	9b01      	ldr	r3, [sp, #4]
 800f3fc:	405a      	eors	r2, r3
 800f3fe:	f04f 0300 	mov.w	r3, #0
 800f402:	d102      	bne.n	800f40a <_ZN6tflite14MicroAllocator28AllocateScratchBufferHandlesEPPNS_19ScratchBufferHandleEj+0x3a>
 800f404:	2000      	movs	r0, #0
 800f406:	b002      	add	sp, #8
 800f408:	bd10      	pop	{r4, pc}
 800f40a:	f00e fa97 	bl	801d93c <__stack_chk_fail>
 800f40e:	f00d facf 	bl	801c9b0 <abort>
 800f412:	bf00      	nop
 800f414:	20011294 	.word	0x20011294

0800f418 <_ZNK11flatbuffers6VectorIxmE3GetEm.part.0>:
 800f418:	b500      	push	{lr}
 800f41a:	f8df c028 	ldr.w	ip, [pc, #40]	; 800f444 <_ZNK11flatbuffers6VectorIxmE3GetEm.part.0+0x2c>
 800f41e:	4b06      	ldr	r3, [pc, #24]	; (800f438 <_ZNK11flatbuffers6VectorIxmE3GetEm.part.0+0x20>)
 800f420:	4a06      	ldr	r2, [pc, #24]	; (800f43c <_ZNK11flatbuffers6VectorIxmE3GetEm.part.0+0x24>)
 800f422:	4807      	ldr	r0, [pc, #28]	; (800f440 <_ZNK11flatbuffers6VectorIxmE3GetEm.part.0+0x28>)
 800f424:	b083      	sub	sp, #12
 800f426:	21b0      	movs	r1, #176	; 0xb0
 800f428:	f8dc c000 	ldr.w	ip, [ip]
 800f42c:	f8cd c004 	str.w	ip, [sp, #4]
 800f430:	f04f 0c00 	mov.w	ip, #0
 800f434:	f00d fac4 	bl	801c9c0 <__assert_func>
 800f438:	08024734 	.word	0x08024734
 800f43c:	080262f8 	.word	0x080262f8
 800f440:	08024804 	.word	0x08024804
 800f444:	20011294 	.word	0x20011294

0800f448 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>:
 800f448:	b500      	push	{lr}
 800f44a:	f8df c028 	ldr.w	ip, [pc, #40]	; 800f474 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x2c>
 800f44e:	4b06      	ldr	r3, [pc, #24]	; (800f468 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x20>)
 800f450:	4a06      	ldr	r2, [pc, #24]	; (800f46c <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x24>)
 800f452:	4807      	ldr	r0, [pc, #28]	; (800f470 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x28>)
 800f454:	b083      	sub	sp, #12
 800f456:	21b0      	movs	r1, #176	; 0xb0
 800f458:	f8dc c000 	ldr.w	ip, [ip]
 800f45c:	f8cd c004 	str.w	ip, [sp, #4]
 800f460:	f04f 0c00 	mov.w	ip, #0
 800f464:	f00d faac 	bl	801c9c0 <__assert_func>
 800f468:	08024734 	.word	0x08024734
 800f46c:	08025dd0 	.word	0x08025dd0
 800f470:	08024804 	.word	0x08024804
 800f474:	20011294 	.word	0x20011294

0800f478 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl>:
 800f478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f47c:	460f      	mov	r7, r1
 800f47e:	6809      	ldr	r1, [r1, #0]
 800f480:	4699      	mov	r9, r3
 800f482:	1a79      	subs	r1, r7, r1
 800f484:	4b2e      	ldr	r3, [pc, #184]	; (800f540 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xc8>)
 800f486:	b083      	sub	sp, #12
 800f488:	4616      	mov	r6, r2
 800f48a:	4680      	mov	r8, r0
 800f48c:	880a      	ldrh	r2, [r1, #0]
 800f48e:	681b      	ldr	r3, [r3, #0]
 800f490:	9301      	str	r3, [sp, #4]
 800f492:	f04f 0300 	mov.w	r3, #0
 800f496:	2400      	movs	r4, #0
 800f498:	e001      	b.n	800f49e <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x26>
 800f49a:	3401      	adds	r4, #1
 800f49c:	360c      	adds	r6, #12
 800f49e:	2a04      	cmp	r2, #4
 800f4a0:	d94a      	bls.n	800f538 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xc0>
 800f4a2:	8888      	ldrh	r0, [r1, #4]
 800f4a4:	2800      	cmp	r0, #0
 800f4a6:	d047      	beq.n	800f538 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xc0>
 800f4a8:	583d      	ldr	r5, [r7, r0]
 800f4aa:	4438      	add	r0, r7
 800f4ac:	1943      	adds	r3, r0, r5
 800f4ae:	5940      	ldr	r0, [r0, r5]
 800f4b0:	4284      	cmp	r4, r0
 800f4b2:	d22e      	bcs.n	800f512 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x9a>
 800f4b4:	3304      	adds	r3, #4
 800f4b6:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
 800f4ba:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800f4be:	f85c 5003 	ldr.w	r5, [ip, r3]
 800f4c2:	449c      	add	ip, r3
 800f4c4:	ebac 0e05 	sub.w	lr, ip, r5
 800f4c8:	f8be 3000 	ldrh.w	r3, [lr]
 800f4cc:	2b0e      	cmp	r3, #14
 800f4ce:	d9e4      	bls.n	800f49a <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x22>
 800f4d0:	f8be 300e 	ldrh.w	r3, [lr, #14]
 800f4d4:	2b00      	cmp	r3, #0
 800f4d6:	d0e0      	beq.n	800f49a <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x22>
 800f4d8:	f81c 3003 	ldrb.w	r3, [ip, r3]
 800f4dc:	2b00      	cmp	r3, #0
 800f4de:	d0dc      	beq.n	800f49a <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x22>
 800f4e0:	f1b9 0f00 	cmp.w	r9, #0
 800f4e4:	d003      	beq.n	800f4ee <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x76>
 800f4e6:	f859 3024 	ldr.w	r3, [r9, r4, lsl #2]
 800f4ea:	3301      	adds	r3, #1
 800f4ec:	d1d5      	bne.n	800f49a <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x22>
 800f4ee:	4669      	mov	r1, sp
 800f4f0:	4630      	mov	r0, r6
 800f4f2:	f7fd fa5f 	bl	800c9b4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj>
 800f4f6:	b968      	cbnz	r0, 800f514 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x9c>
 800f4f8:	f8d8 0008 	ldr.w	r0, [r8, #8]
 800f4fc:	9900      	ldr	r1, [sp, #0]
 800f4fe:	6803      	ldr	r3, [r0, #0]
 800f500:	2210      	movs	r2, #16
 800f502:	689b      	ldr	r3, [r3, #8]
 800f504:	4798      	blx	r3
 800f506:	6030      	str	r0, [r6, #0]
 800f508:	b170      	cbz	r0, 800f528 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xb0>
 800f50a:	6839      	ldr	r1, [r7, #0]
 800f50c:	1a79      	subs	r1, r7, r1
 800f50e:	880a      	ldrh	r2, [r1, #0]
 800f510:	e7c3      	b.n	800f49a <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x22>
 800f512:	2000      	movs	r0, #0
 800f514:	4b0a      	ldr	r3, [pc, #40]	; (800f540 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xc8>)
 800f516:	681a      	ldr	r2, [r3, #0]
 800f518:	9b01      	ldr	r3, [sp, #4]
 800f51a:	405a      	eors	r2, r3
 800f51c:	f04f 0300 	mov.w	r3, #0
 800f520:	d108      	bne.n	800f534 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xbc>
 800f522:	b003      	add	sp, #12
 800f524:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f528:	4806      	ldr	r0, [pc, #24]	; (800f544 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0xcc>)
 800f52a:	9900      	ldr	r1, [sp, #0]
 800f52c:	f7fe fe70 	bl	800e210 <_Z11MicroPrintfPKcz>
 800f530:	2001      	movs	r0, #1
 800f532:	e7ef      	b.n	800f514 <_ZN6tflite14MicroAllocator17AllocateVariablesEPKNS_8SubGraphEP16TfLiteEvalTensorPKl+0x9c>
 800f534:	f00e fa02 	bl	801d93c <__stack_chk_fail>
 800f538:	2300      	movs	r3, #0
 800f53a:	681b      	ldr	r3, [r3, #0]
 800f53c:	deff      	udf	#255	; 0xff
 800f53e:	bf00      	nop
 800f540:	20011294 	.word	0x20011294
 800f544:	080269c8 	.word	0x080269c8

0800f548 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE>:
 800f548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f54c:	4b25      	ldr	r3, [pc, #148]	; (800f5e4 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x9c>)
 800f54e:	b082      	sub	sp, #8
 800f550:	681b      	ldr	r3, [r3, #0]
 800f552:	9301      	str	r3, [sp, #4]
 800f554:	f04f 0300 	mov.w	r3, #0
 800f558:	2a00      	cmp	r2, #0
 800f55a:	d041      	beq.n	800f5e0 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x98>
 800f55c:	4606      	mov	r6, r0
 800f55e:	4688      	mov	r8, r1
 800f560:	4615      	mov	r5, r2
 800f562:	2400      	movs	r4, #0
 800f564:	272c      	movs	r7, #44	; 0x2c
 800f566:	e002      	b.n	800f56e <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x26>
 800f568:	f845 0034 	str.w	r0, [r5, r4, lsl #3]
 800f56c:	3401      	adds	r4, #1
 800f56e:	f8d8 3000 	ldr.w	r3, [r8]
 800f572:	eba8 0303 	sub.w	r3, r8, r3
 800f576:	881a      	ldrh	r2, [r3, #0]
 800f578:	2a08      	cmp	r2, #8
 800f57a:	d92e      	bls.n	800f5da <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x92>
 800f57c:	891a      	ldrh	r2, [r3, #8]
 800f57e:	b362      	cbz	r2, 800f5da <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x92>
 800f580:	f858 1002 	ldr.w	r1, [r8, r2]
 800f584:	4442      	add	r2, r8
 800f586:	1853      	adds	r3, r2, r1
 800f588:	5852      	ldr	r2, [r2, r1]
 800f58a:	4294      	cmp	r4, r2
 800f58c:	d221      	bcs.n	800f5d2 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x8a>
 800f58e:	3304      	adds	r3, #4
 800f590:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800f594:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 800f598:	4418      	add	r0, r3
 800f59a:	f7ff fcf1 	bl	800ef80 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE>
 800f59e:	f8d6 c008 	ldr.w	ip, [r6, #8]
 800f5a2:	f8dc 3000 	ldr.w	r3, [ip]
 800f5a6:	fb07 f100 	mul.w	r1, r7, r0
 800f5aa:	689b      	ldr	r3, [r3, #8]
 800f5ac:	2204      	movs	r2, #4
 800f5ae:	4660      	mov	r0, ip
 800f5b0:	4798      	blx	r3
 800f5b2:	2800      	cmp	r0, #0
 800f5b4:	d1d8      	bne.n	800f568 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x20>
 800f5b6:	480c      	ldr	r0, [pc, #48]	; (800f5e8 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0xa0>)
 800f5b8:	f7fe fe2a 	bl	800e210 <_Z11MicroPrintfPKcz>
 800f5bc:	2001      	movs	r0, #1
 800f5be:	4b09      	ldr	r3, [pc, #36]	; (800f5e4 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x9c>)
 800f5c0:	681a      	ldr	r2, [r3, #0]
 800f5c2:	9b01      	ldr	r3, [sp, #4]
 800f5c4:	405a      	eors	r2, r3
 800f5c6:	f04f 0300 	mov.w	r3, #0
 800f5ca:	d104      	bne.n	800f5d6 <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x8e>
 800f5cc:	b002      	add	sp, #8
 800f5ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f5d2:	2000      	movs	r0, #0
 800f5d4:	e7f3      	b.n	800f5be <_ZN6tflite14MicroAllocator28AllocateNodeAndRegistrationsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x76>
 800f5d6:	f00e f9b1 	bl	801d93c <__stack_chk_fail>
 800f5da:	2300      	movs	r3, #0
 800f5dc:	681b      	ldr	r3, [r3, #0]
 800f5de:	deff      	udf	#255	; 0xff
 800f5e0:	f00d f9e6 	bl	801c9b0 <abort>
 800f5e4:	20011294 	.word	0x20011294
 800f5e8:	080269f8 	.word	0x080269f8

0800f5ec <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii>:
 800f5ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f5f0:	460d      	mov	r5, r1
 800f5f2:	461c      	mov	r4, r3
 800f5f4:	682b      	ldr	r3, [r5, #0]
 800f5f6:	4928      	ldr	r1, [pc, #160]	; (800f698 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xac>)
 800f5f8:	1aeb      	subs	r3, r5, r3
 800f5fa:	4690      	mov	r8, r2
 800f5fc:	881a      	ldrh	r2, [r3, #0]
 800f5fe:	b085      	sub	sp, #20
 800f600:	2a08      	cmp	r2, #8
 800f602:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800f606:	6809      	ldr	r1, [r1, #0]
 800f608:	9103      	str	r1, [sp, #12]
 800f60a:	f04f 0100 	mov.w	r1, #0
 800f60e:	d93f      	bls.n	800f690 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xa4>
 800f610:	891b      	ldrh	r3, [r3, #8]
 800f612:	2b00      	cmp	r3, #0
 800f614:	d03c      	beq.n	800f690 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xa4>
 800f616:	58ea      	ldr	r2, [r5, r3]
 800f618:	442b      	add	r3, r5
 800f61a:	589b      	ldr	r3, [r3, r2]
 800f61c:	4599      	cmp	r9, r3
 800f61e:	d233      	bcs.n	800f688 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x9c>
 800f620:	4607      	mov	r7, r0
 800f622:	6840      	ldr	r0, [r0, #4]
 800f624:	6803      	ldr	r3, [r0, #0]
 800f626:	2204      	movs	r2, #4
 800f628:	689b      	ldr	r3, [r3, #8]
 800f62a:	2140      	movs	r1, #64	; 0x40
 800f62c:	4798      	blx	r3
 800f62e:	f8cd 9000 	str.w	r9, [sp]
 800f632:	683b      	ldr	r3, [r7, #0]
 800f634:	2201      	movs	r2, #1
 800f636:	4606      	mov	r6, r0
 800f638:	9201      	str	r2, [sp, #4]
 800f63a:	4629      	mov	r1, r5
 800f63c:	4638      	mov	r0, r7
 800f63e:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 800f640:	4632      	mov	r2, r6
 800f642:	4623      	mov	r3, r4
 800f644:	47a8      	blx	r5
 800f646:	b9d0      	cbnz	r0, 800f67e <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x92>
 800f648:	f1b8 0f00 	cmp.w	r8, #0
 800f64c:	d00c      	beq.n	800f668 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x7c>
 800f64e:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 800f652:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 800f656:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800f65a:	eb02 0384 	add.w	r3, r2, r4, lsl #2
 800f65e:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 800f662:	685b      	ldr	r3, [r3, #4]
 800f664:	e9c6 2301 	strd	r2, r3, [r6, #4]
 800f668:	4b0b      	ldr	r3, [pc, #44]	; (800f698 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xac>)
 800f66a:	681a      	ldr	r2, [r3, #0]
 800f66c:	9b03      	ldr	r3, [sp, #12]
 800f66e:	405a      	eors	r2, r3
 800f670:	f04f 0300 	mov.w	r3, #0
 800f674:	d10a      	bne.n	800f68c <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xa0>
 800f676:	4630      	mov	r0, r6
 800f678:	b005      	add	sp, #20
 800f67a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f67e:	4807      	ldr	r0, [pc, #28]	; (800f69c <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xb0>)
 800f680:	f7fe fdc6 	bl	800e210 <_Z11MicroPrintfPKcz>
 800f684:	2600      	movs	r6, #0
 800f686:	e7ef      	b.n	800f668 <_ZN6tflite14MicroAllocator24AllocateTempTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x7c>
 800f688:	f7ff fede 	bl	800f448 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800f68c:	f00e f956 	bl	801d93c <__stack_chk_fail>
 800f690:	2300      	movs	r3, #0
 800f692:	681b      	ldr	r3, [r3, #0]
 800f694:	deff      	udf	#255	; 0xff
 800f696:	bf00      	nop
 800f698:	20011294 	.word	0x20011294
 800f69c:	08026a30 	.word	0x08026a30

0800f6a0 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE>:
 800f6a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6a4:	4604      	mov	r4, r0
 800f6a6:	6840      	ldr	r0, [r0, #4]
 800f6a8:	b091      	sub	sp, #68	; 0x44
 800f6aa:	e9cd 1006 	strd	r1, r0, [sp, #24]
 800f6ae:	4699      	mov	r9, r3
 800f6b0:	2300      	movs	r3, #0
 800f6b2:	930e      	str	r3, [sp, #56]	; 0x38
 800f6b4:	4b89      	ldr	r3, [pc, #548]	; (800f8dc <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x23c>)
 800f6b6:	460e      	mov	r6, r1
 800f6b8:	a806      	add	r0, sp, #24
 800f6ba:	69a1      	ldr	r1, [r4, #24]
 800f6bc:	4617      	mov	r7, r2
 800f6be:	681b      	ldr	r3, [r3, #0]
 800f6c0:	930f      	str	r3, [sp, #60]	; 0x3c
 800f6c2:	f04f 0300 	mov.w	r3, #0
 800f6c6:	f001 fe27 	bl	8011318 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi>
 800f6ca:	4682      	mov	sl, r0
 800f6cc:	b158      	cbz	r0, 800f6e6 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x46>
 800f6ce:	4b83      	ldr	r3, [pc, #524]	; (800f8dc <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x23c>)
 800f6d0:	681a      	ldr	r2, [r3, #0]
 800f6d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f6d4:	405a      	eors	r2, r3
 800f6d6:	f04f 0300 	mov.w	r3, #0
 800f6da:	f040 80f9 	bne.w	800f8d0 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x230>
 800f6de:	4650      	mov	r0, sl
 800f6e0:	b011      	add	sp, #68	; 0x44
 800f6e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6e6:	9004      	str	r0, [sp, #16]
 800f6e8:	a904      	add	r1, sp, #16
 800f6ea:	a806      	add	r0, sp, #24
 800f6ec:	f002 fac6 	bl	8011c7c <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl>
 800f6f0:	4682      	mov	sl, r0
 800f6f2:	2800      	cmp	r0, #0
 800f6f4:	d1eb      	bne.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f6f6:	4605      	mov	r5, r0
 800f6f8:	f107 0804 	add.w	r8, r7, #4
 800f6fc:	46ba      	mov	sl, r7
 800f6fe:	e000      	b.n	800f702 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x62>
 800f700:	3501      	adds	r5, #1
 800f702:	6833      	ldr	r3, [r6, #0]
 800f704:	1af3      	subs	r3, r6, r3
 800f706:	881a      	ldrh	r2, [r3, #0]
 800f708:	2a08      	cmp	r2, #8
 800f70a:	f240 80e3 	bls.w	800f8d4 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x234>
 800f70e:	891a      	ldrh	r2, [r3, #8]
 800f710:	2a00      	cmp	r2, #0
 800f712:	f000 80df 	beq.w	800f8d4 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x234>
 800f716:	58b1      	ldr	r1, [r6, r2]
 800f718:	4432      	add	r2, r6
 800f71a:	1853      	adds	r3, r2, r1
 800f71c:	5852      	ldr	r2, [r2, r1]
 800f71e:	4295      	cmp	r5, r2
 800f720:	d210      	bcs.n	800f744 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0xa4>
 800f722:	3304      	adds	r3, #4
 800f724:	6820      	ldr	r0, [r4, #0]
 800f726:	f853 2025 	ldr.w	r2, [r3, r5, lsl #2]
 800f72a:	6b07      	ldr	r7, [r0, #48]	; 0x30
 800f72c:	eb03 0185 	add.w	r1, r3, r5, lsl #2
 800f730:	4411      	add	r1, r2
 800f732:	9b04      	ldr	r3, [sp, #16]
 800f734:	f858 2035 	ldr.w	r2, [r8, r5, lsl #3]
 800f738:	4620      	mov	r0, r4
 800f73a:	47b8      	blx	r7
 800f73c:	2800      	cmp	r0, #0
 800f73e:	d0df      	beq.n	800f700 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x60>
 800f740:	4682      	mov	sl, r0
 800f742:	e7c4      	b.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f744:	4652      	mov	r2, sl
 800f746:	9904      	ldr	r1, [sp, #16]
 800f748:	a806      	add	r0, sp, #24
 800f74a:	f001 ff03 	bl	8011554 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE>
 800f74e:	4657      	mov	r7, sl
 800f750:	4682      	mov	sl, r0
 800f752:	2800      	cmp	r0, #0
 800f754:	d1bb      	bne.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f756:	2104      	movs	r1, #4
 800f758:	69e0      	ldr	r0, [r4, #28]
 800f75a:	f7fd f847 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 800f75e:	4651      	mov	r1, sl
 800f760:	4602      	mov	r2, r0
 800f762:	9700      	str	r7, [sp, #0]
 800f764:	464b      	mov	r3, r9
 800f766:	a806      	add	r0, sp, #24
 800f768:	f001 fff4 	bl	8011754 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>
 800f76c:	4682      	mov	sl, r0
 800f76e:	2800      	cmp	r0, #0
 800f770:	d1ad      	bne.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f772:	6860      	ldr	r0, [r4, #4]
 800f774:	e9dd 2808 	ldrd	r2, r8, [sp, #32]
 800f778:	6803      	ldr	r3, [r0, #0]
 800f77a:	9202      	str	r2, [sp, #8]
 800f77c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f77e:	2110      	movs	r1, #16
 800f780:	4798      	blx	r3
 800f782:	4605      	mov	r5, r0
 800f784:	6860      	ldr	r0, [r4, #4]
 800f786:	6803      	ldr	r3, [r0, #0]
 800f788:	2210      	movs	r2, #16
 800f78a:	689b      	ldr	r3, [r3, #8]
 800f78c:	4629      	mov	r1, r5
 800f78e:	4798      	blx	r3
 800f790:	9003      	str	r0, [sp, #12]
 800f792:	b398      	cbz	r0, 800f7fc <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x15c>
 800f794:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800f798:	4a51      	ldr	r2, [pc, #324]	; (800f8e0 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x240>)
 800f79a:	f8d9 3000 	ldr.w	r3, [r9]
 800f79e:	69db      	ldr	r3, [r3, #28]
 800f7a0:	4293      	cmp	r3, r2
 800f7a2:	d12e      	bne.n	800f802 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x162>
 800f7a4:	f1b8 0f00 	cmp.w	r8, #0
 800f7a8:	f000 808d 	beq.w	800f8c6 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x226>
 800f7ac:	9d02      	ldr	r5, [sp, #8]
 800f7ae:	f8df b134 	ldr.w	fp, [pc, #308]	; 800f8e4 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x244>
 800f7b2:	462f      	mov	r7, r5
 800f7b4:	2600      	movs	r6, #0
 800f7b6:	e004      	b.n	800f7c2 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x122>
 800f7b8:	3601      	adds	r6, #1
 800f7ba:	45b0      	cmp	r8, r6
 800f7bc:	f105 0518 	add.w	r5, r5, #24
 800f7c0:	d033      	beq.n	800f82a <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x18a>
 800f7c2:	7d2b      	ldrb	r3, [r5, #20]
 800f7c4:	2b00      	cmp	r3, #0
 800f7c6:	d0f7      	beq.n	800f7b8 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x118>
 800f7c8:	6828      	ldr	r0, [r5, #0]
 800f7ca:	2110      	movs	r1, #16
 800f7cc:	f7fd f844 	bl	800c858 <_ZN6tflite11AlignSizeUpEjj>
 800f7d0:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800f7d4:	f1bc 3fff 	cmp.w	ip, #4294967295
 800f7d8:	d01a      	beq.n	800f810 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x170>
 800f7da:	f8d9 3000 	ldr.w	r3, [r9]
 800f7de:	f8d3 a00c 	ldr.w	sl, [r3, #12]
 800f7e2:	45da      	cmp	sl, fp
 800f7e4:	d00a      	beq.n	800f7fc <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x15c>
 800f7e6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f7ea:	4601      	mov	r1, r0
 800f7ec:	f8cd c000 	str.w	ip, [sp]
 800f7f0:	4648      	mov	r0, r9
 800f7f2:	47d0      	blx	sl
 800f7f4:	2800      	cmp	r0, #0
 800f7f6:	d0df      	beq.n	800f7b8 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x118>
 800f7f8:	4682      	mov	sl, r0
 800f7fa:	e768      	b.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f7fc:	f04f 0a01 	mov.w	sl, #1
 800f800:	e765      	b.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f802:	4648      	mov	r0, r9
 800f804:	9903      	ldr	r1, [sp, #12]
 800f806:	462a      	mov	r2, r5
 800f808:	4798      	blx	r3
 800f80a:	f8d4 9010 	ldr.w	r9, [r4, #16]
 800f80e:	e7c9      	b.n	800f7a4 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x104>
 800f810:	f8d9 3000 	ldr.w	r3, [r9]
 800f814:	4601      	mov	r1, r0
 800f816:	f8d3 a008 	ldr.w	sl, [r3, #8]
 800f81a:	4648      	mov	r0, r9
 800f81c:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f820:	47d0      	blx	sl
 800f822:	2800      	cmp	r0, #0
 800f824:	d0c8      	beq.n	800f7b8 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x118>
 800f826:	4682      	mov	sl, r0
 800f828:	e751      	b.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f82a:	6860      	ldr	r0, [r4, #4]
 800f82c:	6926      	ldr	r6, [r4, #16]
 800f82e:	6803      	ldr	r3, [r0, #0]
 800f830:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f832:	4798      	blx	r3
 800f834:	9b02      	ldr	r3, [sp, #8]
 800f836:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800f83a:	eb03 05c8 	add.w	r5, r3, r8, lsl #3
 800f83e:	f04f 0b00 	mov.w	fp, #0
 800f842:	4680      	mov	r8, r0
 800f844:	f04f 39ff 	mov.w	r9, #4294967295
 800f848:	7d3b      	ldrb	r3, [r7, #20]
 800f84a:	b183      	cbz	r3, 800f86e <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x1ce>
 800f84c:	6833      	ldr	r3, [r6, #0]
 800f84e:	f8cd 9014 	str.w	r9, [sp, #20]
 800f852:	699b      	ldr	r3, [r3, #24]
 800f854:	aa05      	add	r2, sp, #20
 800f856:	4659      	mov	r1, fp
 800f858:	4630      	mov	r0, r6
 800f85a:	4798      	blx	r3
 800f85c:	2800      	cmp	r0, #0
 800f85e:	f47f af6f 	bne.w	800f740 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0xa0>
 800f862:	9b05      	ldr	r3, [sp, #20]
 800f864:	687a      	ldr	r2, [r7, #4]
 800f866:	4443      	add	r3, r8
 800f868:	f10b 0b01 	add.w	fp, fp, #1
 800f86c:	6013      	str	r3, [r2, #0]
 800f86e:	3718      	adds	r7, #24
 800f870:	42bd      	cmp	r5, r7
 800f872:	d1e9      	bne.n	800f848 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x1a8>
 800f874:	a806      	add	r0, sp, #24
 800f876:	f001 fdd5 	bl	8011424 <_ZN6tflite21AllocationInfoBuilder18FreeAllocationInfoEv>
 800f87a:	6860      	ldr	r0, [r4, #4]
 800f87c:	9903      	ldr	r1, [sp, #12]
 800f87e:	6803      	ldr	r3, [r0, #0]
 800f880:	68db      	ldr	r3, [r3, #12]
 800f882:	4798      	blx	r3
 800f884:	6860      	ldr	r0, [r4, #4]
 800f886:	6803      	ldr	r3, [r0, #0]
 800f888:	695b      	ldr	r3, [r3, #20]
 800f88a:	4798      	blx	r3
 800f88c:	4682      	mov	sl, r0
 800f88e:	2800      	cmp	r0, #0
 800f890:	f47f af1d 	bne.w	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f894:	6860      	ldr	r0, [r4, #4]
 800f896:	69e1      	ldr	r1, [r4, #28]
 800f898:	6803      	ldr	r3, [r0, #0]
 800f89a:	6a1b      	ldr	r3, [r3, #32]
 800f89c:	4798      	blx	r3
 800f89e:	4682      	mov	sl, r0
 800f8a0:	2800      	cmp	r0, #0
 800f8a2:	f47f af14 	bne.w	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f8a6:	6920      	ldr	r0, [r4, #16]
 800f8a8:	6803      	ldr	r3, [r0, #0]
 800f8aa:	691b      	ldr	r3, [r3, #16]
 800f8ac:	4798      	blx	r3
 800f8ae:	6a21      	ldr	r1, [r4, #32]
 800f8b0:	4281      	cmp	r1, r0
 800f8b2:	bf3c      	itt	cc
 800f8b4:	6220      	strcc	r0, [r4, #32]
 800f8b6:	4601      	movcc	r1, r0
 800f8b8:	6860      	ldr	r0, [r4, #4]
 800f8ba:	6803      	ldr	r3, [r0, #0]
 800f8bc:	2210      	movs	r2, #16
 800f8be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f8c0:	4798      	blx	r3
 800f8c2:	4682      	mov	sl, r0
 800f8c4:	e703      	b.n	800f6ce <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x2e>
 800f8c6:	6860      	ldr	r0, [r4, #4]
 800f8c8:	6803      	ldr	r3, [r0, #0]
 800f8ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f8cc:	4798      	blx	r3
 800f8ce:	e7d1      	b.n	800f874 <_ZN6tflite14MicroAllocator22CommitStaticMemoryPlanEPKNS_5ModelEPNS_19SubgraphAllocationsEPNS_19ScratchBufferHandleE+0x1d4>
 800f8d0:	f00e f834 	bl	801d93c <__stack_chk_fail>
 800f8d4:	2300      	movs	r3, #0
 800f8d6:	681b      	ldr	r3, [r3, #0]
 800f8d8:	deff      	udf	#255	; 0xff
 800f8da:	bf00      	nop
 800f8dc:	20011294 	.word	0x20011294
 800f8e0:	0800f0d5 	.word	0x0800f0d5
 800f8e4:	0800f0a9 	.word	0x0800f0a9

0800f8e8 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii>:
 800f8e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f8ec:	460f      	mov	r7, r1
 800f8ee:	461d      	mov	r5, r3
 800f8f0:	683b      	ldr	r3, [r7, #0]
 800f8f2:	492e      	ldr	r1, [pc, #184]	; (800f9ac <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xc4>)
 800f8f4:	1afb      	subs	r3, r7, r3
 800f8f6:	4690      	mov	r8, r2
 800f8f8:	881a      	ldrh	r2, [r3, #0]
 800f8fa:	b085      	sub	sp, #20
 800f8fc:	2a08      	cmp	r2, #8
 800f8fe:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800f902:	6809      	ldr	r1, [r1, #0]
 800f904:	9103      	str	r1, [sp, #12]
 800f906:	f04f 0100 	mov.w	r1, #0
 800f90a:	d94c      	bls.n	800f9a6 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xbe>
 800f90c:	891b      	ldrh	r3, [r3, #8]
 800f90e:	2b00      	cmp	r3, #0
 800f910:	d049      	beq.n	800f9a6 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xbe>
 800f912:	58fa      	ldr	r2, [r7, r3]
 800f914:	443b      	add	r3, r7
 800f916:	589b      	ldr	r3, [r3, r2]
 800f918:	4599      	cmp	r9, r3
 800f91a:	d23c      	bcs.n	800f996 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xae>
 800f91c:	6803      	ldr	r3, [r0, #0]
 800f91e:	4a24      	ldr	r2, [pc, #144]	; (800f9b0 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xc8>)
 800f920:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f922:	4293      	cmp	r3, r2
 800f924:	4606      	mov	r6, r0
 800f926:	d12e      	bne.n	800f986 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x9e>
 800f928:	68b0      	ldr	r0, [r6, #8]
 800f92a:	6803      	ldr	r3, [r0, #0]
 800f92c:	2204      	movs	r2, #4
 800f92e:	689b      	ldr	r3, [r3, #8]
 800f930:	2140      	movs	r1, #64	; 0x40
 800f932:	4798      	blx	r3
 800f934:	4604      	mov	r4, r0
 800f936:	b384      	cbz	r4, 800f99a <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xb2>
 800f938:	f8cd 9000 	str.w	r9, [sp]
 800f93c:	6833      	ldr	r3, [r6, #0]
 800f93e:	4630      	mov	r0, r6
 800f940:	2600      	movs	r6, #0
 800f942:	9601      	str	r6, [sp, #4]
 800f944:	4639      	mov	r1, r7
 800f946:	4622      	mov	r2, r4
 800f948:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800f94a:	462b      	mov	r3, r5
 800f94c:	47b8      	blx	r7
 800f94e:	b9e8      	cbnz	r0, 800f98c <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xa4>
 800f950:	f1b8 0f00 	cmp.w	r8, #0
 800f954:	d00c      	beq.n	800f970 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x88>
 800f956:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 800f95a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f95e:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800f962:	eb02 0385 	add.w	r3, r2, r5, lsl #2
 800f966:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800f96a:	685b      	ldr	r3, [r3, #4]
 800f96c:	e9c4 2301 	strd	r2, r3, [r4, #4]
 800f970:	4b0e      	ldr	r3, [pc, #56]	; (800f9ac <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xc4>)
 800f972:	681a      	ldr	r2, [r3, #0]
 800f974:	9b03      	ldr	r3, [sp, #12]
 800f976:	405a      	eors	r2, r3
 800f978:	f04f 0300 	mov.w	r3, #0
 800f97c:	d111      	bne.n	800f9a2 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xba>
 800f97e:	4620      	mov	r0, r4
 800f980:	b005      	add	sp, #20
 800f982:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f986:	4798      	blx	r3
 800f988:	4604      	mov	r4, r0
 800f98a:	e7d4      	b.n	800f936 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x4e>
 800f98c:	4809      	ldr	r0, [pc, #36]	; (800f9b4 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xcc>)
 800f98e:	f7fe fc3f 	bl	800e210 <_Z11MicroPrintfPKcz>
 800f992:	4634      	mov	r4, r6
 800f994:	e7ec      	b.n	800f970 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x88>
 800f996:	f7ff fd57 	bl	800f448 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800f99a:	4807      	ldr	r0, [pc, #28]	; (800f9b8 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0xd0>)
 800f99c:	f7fe fc38 	bl	800e210 <_Z11MicroPrintfPKcz>
 800f9a0:	e7e6      	b.n	800f970 <_ZN6tflite14MicroAllocator30AllocatePersistentTfLiteTensorEPKNS_5ModelEPKNS_19SubgraphAllocationsEii+0x88>
 800f9a2:	f00d ffcb 	bl	801d93c <__stack_chk_fail>
 800f9a6:	2300      	movs	r3, #0
 800f9a8:	681b      	ldr	r3, [r3, #0]
 800f9aa:	deff      	udf	#255	; 0xff
 800f9ac:	20011294 	.word	0x20011294
 800f9b0:	0800f299 	.word	0x0800f299
 800f9b4:	08026aac 	.word	0x08026aac
 800f9b8:	08026a74 	.word	0x08026a74

0800f9bc <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE>:
 800f9bc:	b500      	push	{lr}
 800f9be:	6803      	ldr	r3, [r0, #0]
 800f9c0:	4a1d      	ldr	r2, [pc, #116]	; (800fa38 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x7c>)
 800f9c2:	1ac3      	subs	r3, r0, r3
 800f9c4:	b083      	sub	sp, #12
 800f9c6:	6812      	ldr	r2, [r2, #0]
 800f9c8:	9201      	str	r2, [sp, #4]
 800f9ca:	f04f 0200 	mov.w	r2, #0
 800f9ce:	881a      	ldrh	r2, [r3, #0]
 800f9d0:	2a08      	cmp	r2, #8
 800f9d2:	d918      	bls.n	800fa06 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x4a>
 800f9d4:	891a      	ldrh	r2, [r3, #8]
 800f9d6:	bb5a      	cbnz	r2, 800fa30 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x74>
 800f9d8:	680b      	ldr	r3, [r1, #0]
 800f9da:	429a      	cmp	r2, r3
 800f9dc:	d217      	bcs.n	800fa0e <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x52>
 800f9de:	3104      	adds	r1, #4
 800f9e0:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 800f9e4:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f9e8:	585a      	ldr	r2, [r3, r1]
 800f9ea:	440b      	add	r3, r1
 800f9ec:	1a9a      	subs	r2, r3, r2
 800f9ee:	8811      	ldrh	r1, [r2, #0]
 800f9f0:	2904      	cmp	r1, #4
 800f9f2:	d912      	bls.n	800fa1a <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x5e>
 800f9f4:	8890      	ldrh	r0, [r2, #4]
 800f9f6:	181a      	adds	r2, r3, r0
 800f9f8:	b180      	cbz	r0, 800fa1c <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x60>
 800f9fa:	581b      	ldr	r3, [r3, r0]
 800f9fc:	58d0      	ldr	r0, [r2, r3]
 800f9fe:	441a      	add	r2, r3
 800fa00:	b160      	cbz	r0, 800fa1c <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x60>
 800fa02:	1d10      	adds	r0, r2, #4
 800fa04:	e00a      	b.n	800fa1c <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x60>
 800fa06:	680b      	ldr	r3, [r1, #0]
 800fa08:	2200      	movs	r2, #0
 800fa0a:	429a      	cmp	r2, r3
 800fa0c:	d3e7      	bcc.n	800f9de <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x22>
 800fa0e:	4b0b      	ldr	r3, [pc, #44]	; (800fa3c <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x80>)
 800fa10:	4a0b      	ldr	r2, [pc, #44]	; (800fa40 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x84>)
 800fa12:	480c      	ldr	r0, [pc, #48]	; (800fa44 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x88>)
 800fa14:	21b0      	movs	r1, #176	; 0xb0
 800fa16:	f00c ffd3 	bl	801c9c0 <__assert_func>
 800fa1a:	2000      	movs	r0, #0
 800fa1c:	4b06      	ldr	r3, [pc, #24]	; (800fa38 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x7c>)
 800fa1e:	681a      	ldr	r2, [r3, #0]
 800fa20:	9b01      	ldr	r3, [sp, #4]
 800fa22:	405a      	eors	r2, r3
 800fa24:	f04f 0300 	mov.w	r3, #0
 800fa28:	d104      	bne.n	800fa34 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x78>
 800fa2a:	b003      	add	sp, #12
 800fa2c:	f85d fb04 	ldr.w	pc, [sp], #4
 800fa30:	5882      	ldr	r2, [r0, r2]
 800fa32:	e7d1      	b.n	800f9d8 <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE+0x1c>
 800fa34:	f00d ff82 	bl	801d93c <__stack_chk_fail>
 800fa38:	20011294 	.word	0x20011294
 800fa3c:	08024734 	.word	0x08024734
 800fa40:	08026af8 	.word	0x08026af8
 800fa44:	08024804 	.word	0x08024804

0800fa48 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor>:
 800fa48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa4c:	b085      	sub	sp, #20
 800fa4e:	461d      	mov	r5, r3
 800fa50:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800fa52:	4ba9      	ldr	r3, [pc, #676]	; (800fcf8 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2b0>)
 800fa54:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
 800fa58:	681b      	ldr	r3, [r3, #0]
 800fa5a:	9303      	str	r3, [sp, #12]
 800fa5c:	f04f 0300 	mov.w	r3, #0
 800fa60:	2e00      	cmp	r6, #0
 800fa62:	f000 8147 	beq.w	800fcf4 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2ac>
 800fa66:	4607      	mov	r7, r0
 800fa68:	4688      	mov	r8, r1
 800fa6a:	4691      	mov	r9, r2
 800fa6c:	2100      	movs	r1, #0
 800fa6e:	2240      	movs	r2, #64	; 0x40
 800fa70:	4630      	mov	r0, r6
 800fa72:	f00d f837 	bl	801cae4 <memset>
 800fa76:	682b      	ldr	r3, [r5, #0]
 800fa78:	1aeb      	subs	r3, r5, r3
 800fa7a:	881a      	ldrh	r2, [r3, #0]
 800fa7c:	2a06      	cmp	r2, #6
 800fa7e:	d914      	bls.n	800faaa <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x62>
 800fa80:	88d8      	ldrh	r0, [r3, #6]
 800fa82:	2800      	cmp	r0, #0
 800fa84:	f040 80e4 	bne.w	800fc50 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x208>
 800fa88:	4631      	mov	r1, r6
 800fa8a:	f7fe fcad 	bl	800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>
 800fa8e:	4604      	mov	r4, r0
 800fa90:	b190      	cbz	r0, 800fab8 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x70>
 800fa92:	4b99      	ldr	r3, [pc, #612]	; (800fcf8 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2b0>)
 800fa94:	681a      	ldr	r2, [r3, #0]
 800fa96:	9b03      	ldr	r3, [sp, #12]
 800fa98:	405a      	eors	r2, r3
 800fa9a:	f04f 0300 	mov.w	r3, #0
 800fa9e:	f040 8121 	bne.w	800fce4 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x29c>
 800faa2:	4620      	mov	r0, r4
 800faa4:	b005      	add	sp, #20
 800faa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800faaa:	2000      	movs	r0, #0
 800faac:	4631      	mov	r1, r6
 800faae:	f7fe fc9b 	bl	800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>
 800fab2:	4604      	mov	r4, r0
 800fab4:	2800      	cmp	r0, #0
 800fab6:	d1ec      	bne.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fab8:	682b      	ldr	r3, [r5, #0]
 800faba:	1aeb      	subs	r3, r5, r3
 800fabc:	881a      	ldrh	r2, [r3, #0]
 800fabe:	2a0e      	cmp	r2, #14
 800fac0:	d903      	bls.n	800faca <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x82>
 800fac2:	89dc      	ldrh	r4, [r3, #14]
 800fac4:	2c00      	cmp	r4, #0
 800fac6:	f040 80c8 	bne.w	800fc5a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x212>
 800faca:	f886 402d 	strb.w	r4, [r6, #45]	; 0x2d
 800face:	4651      	mov	r1, sl
 800fad0:	4628      	mov	r0, r5
 800fad2:	f7ff ff73 	bl	800f9bc <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE>
 800fad6:	2800      	cmp	r0, #0
 800fad8:	bf0c      	ite	eq
 800fada:	2302      	moveq	r3, #2
 800fadc:	2301      	movne	r3, #1
 800fade:	6070      	str	r0, [r6, #4]
 800fae0:	7533      	strb	r3, [r6, #20]
 800fae2:	aa02      	add	r2, sp, #8
 800fae4:	f106 0118 	add.w	r1, r6, #24
 800fae8:	4628      	mov	r0, r5
 800faea:	f7fc ff0b 	bl	800c904 <_ZN6tflite22BytesRequiredForTensorERKNS_6TensorEPjS3_>
 800faee:	4604      	mov	r4, r0
 800faf0:	2800      	cmp	r0, #0
 800faf2:	d1ce      	bne.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800faf4:	682b      	ldr	r3, [r5, #0]
 800faf6:	1aeb      	subs	r3, r5, r3
 800faf8:	881a      	ldrh	r2, [r3, #0]
 800fafa:	2a04      	cmp	r2, #4
 800fafc:	f240 80aa 	bls.w	800fc54 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x20c>
 800fb00:	8899      	ldrh	r1, [r3, #4]
 800fb02:	1868      	adds	r0, r5, r1
 800fb04:	2900      	cmp	r1, #0
 800fb06:	f000 80a5 	beq.w	800fc54 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x20c>
 800fb0a:	586b      	ldr	r3, [r5, r1]
 800fb0c:	4418      	add	r0, r3
 800fb0e:	f7ff fa9f 	bl	800f050 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE>
 800fb12:	682b      	ldr	r3, [r5, #0]
 800fb14:	60b0      	str	r0, [r6, #8]
 800fb16:	1aeb      	subs	r3, r5, r3
 800fb18:	881a      	ldrh	r2, [r3, #0]
 800fb1a:	2a0c      	cmp	r2, #12
 800fb1c:	d9b9      	bls.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb1e:	899b      	ldrh	r3, [r3, #12]
 800fb20:	eb05 0b03 	add.w	fp, r5, r3
 800fb24:	2b00      	cmp	r3, #0
 800fb26:	d0b4      	beq.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb28:	f855 a003 	ldr.w	sl, [r5, r3]
 800fb2c:	f85b 300a 	ldr.w	r3, [fp, sl]
 800fb30:	eb0b 050a 	add.w	r5, fp, sl
 800fb34:	1aeb      	subs	r3, r5, r3
 800fb36:	8818      	ldrh	r0, [r3, #0]
 800fb38:	2808      	cmp	r0, #8
 800fb3a:	d9aa      	bls.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb3c:	891a      	ldrh	r2, [r3, #8]
 800fb3e:	18a9      	adds	r1, r5, r2
 800fb40:	2a00      	cmp	r2, #0
 800fb42:	d0a6      	beq.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb44:	58aa      	ldr	r2, [r5, r2]
 800fb46:	f851 c002 	ldr.w	ip, [r1, r2]
 800fb4a:	440a      	add	r2, r1
 800fb4c:	f1bc 0f00 	cmp.w	ip, #0
 800fb50:	d09f      	beq.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb52:	280a      	cmp	r0, #10
 800fb54:	d99d      	bls.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb56:	8959      	ldrh	r1, [r3, #10]
 800fb58:	186b      	adds	r3, r5, r1
 800fb5a:	2900      	cmp	r1, #0
 800fb5c:	d099      	beq.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb5e:	5869      	ldr	r1, [r5, r1]
 800fb60:	5858      	ldr	r0, [r3, r1]
 800fb62:	440b      	add	r3, r1
 800fb64:	2800      	cmp	r0, #0
 800fb66:	d094      	beq.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fb68:	6859      	ldr	r1, [r3, #4]
 800fb6a:	6853      	ldr	r3, [r2, #4]
 800fb6c:	6131      	str	r1, [r6, #16]
 800fb6e:	60f3      	str	r3, [r6, #12]
 800fb70:	f85b 300a 	ldr.w	r3, [fp, sl]
 800fb74:	1aeb      	subs	r3, r5, r3
 800fb76:	881a      	ldrh	r2, [r3, #0]
 800fb78:	2a08      	cmp	r2, #8
 800fb7a:	d966      	bls.n	800fc4a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x202>
 800fb7c:	891b      	ldrh	r3, [r3, #8]
 800fb7e:	2b00      	cmp	r3, #0
 800fb80:	d063      	beq.n	800fc4a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x202>
 800fb82:	58ea      	ldr	r2, [r5, r3]
 800fb84:	442b      	add	r3, r5
 800fb86:	589b      	ldr	r3, [r3, r2]
 800fb88:	9301      	str	r3, [sp, #4]
 800fb8a:	f1b9 0f00 	cmp.w	r9, #0
 800fb8e:	f000 8084 	beq.w	800fc9a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x252>
 800fb92:	f8d8 2000 	ldr.w	r2, [r8]
 800fb96:	210c      	movs	r1, #12
 800fb98:	6897      	ldr	r7, [r2, #8]
 800fb9a:	4640      	mov	r0, r8
 800fb9c:	2204      	movs	r2, #4
 800fb9e:	47b8      	blx	r7
 800fba0:	9b01      	ldr	r3, [sp, #4]
 800fba2:	4681      	mov	r9, r0
 800fba4:	2800      	cmp	r0, #0
 800fba6:	f000 8098 	beq.w	800fcda <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x292>
 800fbaa:	f8d8 2000 	ldr.w	r2, [r8]
 800fbae:	9301      	str	r3, [sp, #4]
 800fbb0:	4618      	mov	r0, r3
 800fbb2:	6897      	ldr	r7, [r2, #8]
 800fbb4:	f7fe fd16 	bl	800e5e4 <TfLiteIntArrayGetSizeInBytes>
 800fbb8:	2204      	movs	r2, #4
 800fbba:	4601      	mov	r1, r0
 800fbbc:	4640      	mov	r0, r8
 800fbbe:	47b8      	blx	r7
 800fbc0:	9b01      	ldr	r3, [sp, #4]
 800fbc2:	f8c9 0004 	str.w	r0, [r9, #4]
 800fbc6:	2800      	cmp	r0, #0
 800fbc8:	f000 8082 	beq.w	800fcd0 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x288>
 800fbcc:	f85b 200a 	ldr.w	r2, [fp, sl]
 800fbd0:	1aaa      	subs	r2, r5, r2
 800fbd2:	8811      	ldrh	r1, [r2, #0]
 800fbd4:	2908      	cmp	r1, #8
 800fbd6:	d977      	bls.n	800fcc8 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x280>
 800fbd8:	8910      	ldrh	r0, [r2, #8]
 800fbda:	b110      	cbz	r0, 800fbe2 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x19a>
 800fbdc:	582a      	ldr	r2, [r5, r0]
 800fbde:	4428      	add	r0, r5
 800fbe0:	4410      	add	r0, r2
 800fbe2:	9301      	str	r3, [sp, #4]
 800fbe4:	f7ff fa4a 	bl	800f07c <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIfmEE>
 800fbe8:	9b01      	ldr	r3, [sp, #4]
 800fbea:	f8c9 0000 	str.w	r0, [r9]
 800fbee:	f8d9 0004 	ldr.w	r0, [r9, #4]
 800fbf2:	2b00      	cmp	r3, #0
 800fbf4:	6003      	str	r3, [r0, #0]
 800fbf6:	dd3b      	ble.n	800fc70 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x228>
 800fbf8:	f85b 200a 	ldr.w	r2, [fp, sl]
 800fbfc:	eba5 0e02 	sub.w	lr, r5, r2
 800fc00:	2100      	movs	r1, #0
 800fc02:	f8be c000 	ldrh.w	ip, [lr]
 800fc06:	e01d      	b.n	800fc44 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x1fc>
 800fc08:	f8be 200a 	ldrh.w	r2, [lr, #10]
 800fc0c:	2a00      	cmp	r2, #0
 800fc0e:	d06f      	beq.n	800fcf0 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2a8>
 800fc10:	f855 a002 	ldr.w	sl, [r5, r2]
 800fc14:	f8be 7008 	ldrh.w	r7, [lr, #8]
 800fc18:	442a      	add	r2, r5
 800fc1a:	f852 800a 	ldr.w	r8, [r2, sl]
 800fc1e:	4452      	add	r2, sl
 800fc20:	eb05 0a07 	add.w	sl, r5, r7
 800fc24:	2f00      	cmp	r7, #0
 800fc26:	d061      	beq.n	800fcec <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2a4>
 800fc28:	59ef      	ldr	r7, [r5, r7]
 800fc2a:	f85a 7007 	ldr.w	r7, [sl, r7]
 800fc2e:	4547      	cmp	r7, r8
 800fc30:	d018      	beq.n	800fc64 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x21c>
 800fc32:	f1b8 0f00 	cmp.w	r8, #0
 800fc36:	d057      	beq.n	800fce8 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2a0>
 800fc38:	6852      	ldr	r2, [r2, #4]
 800fc3a:	f840 2f04 	str.w	r2, [r0, #4]!
 800fc3e:	3101      	adds	r1, #1
 800fc40:	428b      	cmp	r3, r1
 800fc42:	d01b      	beq.n	800fc7c <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x234>
 800fc44:	f1bc 0f0a 	cmp.w	ip, #10
 800fc48:	d8de      	bhi.n	800fc08 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x1c0>
 800fc4a:	2300      	movs	r3, #0
 800fc4c:	681b      	ldr	r3, [r3, #0]
 800fc4e:	deff      	udf	#255	; 0xff
 800fc50:	5628      	ldrsb	r0, [r5, r0]
 800fc52:	e719      	b.n	800fa88 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x40>
 800fc54:	4929      	ldr	r1, [pc, #164]	; (800fcfc <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2b4>)
 800fc56:	60b1      	str	r1, [r6, #8]
 800fc58:	e75f      	b.n	800fb1a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0xd2>
 800fc5a:	5d2c      	ldrb	r4, [r5, r4]
 800fc5c:	3c00      	subs	r4, #0
 800fc5e:	bf18      	it	ne
 800fc60:	2401      	movne	r4, #1
 800fc62:	e732      	b.n	800faca <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x82>
 800fc64:	42b9      	cmp	r1, r7
 800fc66:	d23f      	bcs.n	800fce8 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2a0>
 800fc68:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800fc6c:	6852      	ldr	r2, [r2, #4]
 800fc6e:	e7e4      	b.n	800fc3a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x1f2>
 800fc70:	f85b 300a 	ldr.w	r3, [fp, sl]
 800fc74:	eba5 0e03 	sub.w	lr, r5, r3
 800fc78:	f8be c000 	ldrh.w	ip, [lr]
 800fc7c:	f1bc 0f10 	cmp.w	ip, #16
 800fc80:	d924      	bls.n	800fccc <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x284>
 800fc82:	f8be 3010 	ldrh.w	r3, [lr, #16]
 800fc86:	b103      	cbz	r3, 800fc8a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x242>
 800fc88:	58eb      	ldr	r3, [r5, r3]
 800fc8a:	f8c9 3008 	str.w	r3, [r9, #8]
 800fc8e:	2201      	movs	r2, #1
 800fc90:	f886 2030 	strb.w	r2, [r6, #48]	; 0x30
 800fc94:	f8c6 9034 	str.w	r9, [r6, #52]	; 0x34
 800fc98:	e6fb      	b.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fc9a:	683a      	ldr	r2, [r7, #0]
 800fc9c:	210c      	movs	r1, #12
 800fc9e:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800fca2:	4638      	mov	r0, r7
 800fca4:	2204      	movs	r2, #4
 800fca6:	47c0      	blx	r8
 800fca8:	9b01      	ldr	r3, [sp, #4]
 800fcaa:	4681      	mov	r9, r0
 800fcac:	b1a8      	cbz	r0, 800fcda <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x292>
 800fcae:	683a      	ldr	r2, [r7, #0]
 800fcb0:	9301      	str	r3, [sp, #4]
 800fcb2:	4618      	mov	r0, r3
 800fcb4:	f8d2 8008 	ldr.w	r8, [r2, #8]
 800fcb8:	f7fe fc94 	bl	800e5e4 <TfLiteIntArrayGetSizeInBytes>
 800fcbc:	2204      	movs	r2, #4
 800fcbe:	4601      	mov	r1, r0
 800fcc0:	4638      	mov	r0, r7
 800fcc2:	47c0      	blx	r8
 800fcc4:	9b01      	ldr	r3, [sp, #4]
 800fcc6:	e77c      	b.n	800fbc2 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x17a>
 800fcc8:	2000      	movs	r0, #0
 800fcca:	e78a      	b.n	800fbe2 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x19a>
 800fccc:	2300      	movs	r3, #0
 800fcce:	e7dc      	b.n	800fc8a <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x242>
 800fcd0:	480b      	ldr	r0, [pc, #44]	; (800fd00 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2b8>)
 800fcd2:	f7fe fa9d 	bl	800e210 <_Z11MicroPrintfPKcz>
 800fcd6:	2401      	movs	r4, #1
 800fcd8:	e6db      	b.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fcda:	480a      	ldr	r0, [pc, #40]	; (800fd04 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x2bc>)
 800fcdc:	f7fe fa98 	bl	800e210 <_Z11MicroPrintfPKcz>
 800fce0:	2401      	movs	r4, #1
 800fce2:	e6d6      	b.n	800fa92 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor+0x4a>
 800fce4:	f00d fe2a 	bl	801d93c <__stack_chk_fail>
 800fce8:	f7ff fb96 	bl	800f418 <_ZNK11flatbuffers6VectorIxmE3GetEm.part.0>
 800fcec:	683b      	ldr	r3, [r7, #0]
 800fcee:	deff      	udf	#255	; 0xff
 800fcf0:	6813      	ldr	r3, [r2, #0]
 800fcf2:	deff      	udf	#255	; 0xff
 800fcf4:	f00c fe5c 	bl	801c9b0 <abort>
 800fcf8:	20011294 	.word	0x20011294
 800fcfc:	08026ecc 	.word	0x08026ecc
 800fd00:	08026c14 	.word	0x08026c14
 800fd04:	08026be4 	.word	0x08026be4

0800fd08 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib>:
 800fd08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd0c:	4616      	mov	r6, r2
 800fd0e:	680a      	ldr	r2, [r1, #0]
 800fd10:	4c34      	ldr	r4, [pc, #208]	; (800fde4 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xdc>)
 800fd12:	eba1 0e02 	sub.w	lr, r1, r2
 800fd16:	b083      	sub	sp, #12
 800fd18:	f8be 7000 	ldrh.w	r7, [lr]
 800fd1c:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800fd20:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 800fd24:	2f08      	cmp	r7, #8
 800fd26:	e9d0 0501 	ldrd	r0, r5, [r0, #4]
 800fd2a:	6824      	ldr	r4, [r4, #0]
 800fd2c:	9401      	str	r4, [sp, #4]
 800fd2e:	f04f 0400 	mov.w	r4, #0
 800fd32:	d953      	bls.n	800fddc <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xd4>
 800fd34:	f8be 4008 	ldrh.w	r4, [lr, #8]
 800fd38:	2c00      	cmp	r4, #0
 800fd3a:	d04f      	beq.n	800fddc <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xd4>
 800fd3c:	f851 9004 	ldr.w	r9, [r1, r4]
 800fd40:	eb01 0c04 	add.w	ip, r1, r4
 800fd44:	eb0c 0409 	add.w	r4, ip, r9
 800fd48:	f85c c009 	ldr.w	ip, [ip, r9]
 800fd4c:	45e0      	cmp	r8, ip
 800fd4e:	d23b      	bcs.n	800fdc8 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xc0>
 800fd50:	3404      	adds	r4, #4
 800fd52:	eb04 0c88 	add.w	ip, r4, r8, lsl #2
 800fd56:	f854 8028 	ldr.w	r8, [r4, r8, lsl #2]
 800fd5a:	f85c 4008 	ldr.w	r4, [ip, r8]
 800fd5e:	44c4      	add	ip, r8
 800fd60:	ebac 0404 	sub.w	r4, ip, r4
 800fd64:	f8b4 8000 	ldrh.w	r8, [r4]
 800fd68:	f1b8 0f04 	cmp.w	r8, #4
 800fd6c:	d936      	bls.n	800fddc <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xd4>
 800fd6e:	88a4      	ldrh	r4, [r4, #4]
 800fd70:	b3a4      	cbz	r4, 800fddc <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xd4>
 800fd72:	f85c 8004 	ldr.w	r8, [ip, r4]
 800fd76:	44a4      	add	ip, r4
 800fd78:	eb0c 0408 	add.w	r4, ip, r8
 800fd7c:	f85c c008 	ldr.w	ip, [ip, r8]
 800fd80:	4563      	cmp	r3, ip
 800fd82:	d223      	bcs.n	800fdcc <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xc4>
 800fd84:	3404      	adds	r4, #4
 800fd86:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
 800fd8a:	f854 3023 	ldr.w	r3, [r4, r3, lsl #2]
 800fd8e:	2f0c      	cmp	r7, #12
 800fd90:	4463      	add	r3, ip
 800fd92:	d917      	bls.n	800fdc4 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xbc>
 800fd94:	f8be 400c 	ldrh.w	r4, [lr, #12]
 800fd98:	b124      	cbz	r4, 800fda4 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0x9c>
 800fd9a:	590f      	ldr	r7, [r1, r4]
 800fd9c:	eb01 0c04 	add.w	ip, r1, r4
 800fda0:	eb0c 0407 	add.w	r4, ip, r7
 800fda4:	490f      	ldr	r1, [pc, #60]	; (800fde4 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xdc>)
 800fda6:	680f      	ldr	r7, [r1, #0]
 800fda8:	9901      	ldr	r1, [sp, #4]
 800fdaa:	404f      	eors	r7, r1
 800fdac:	f04f 0100 	mov.w	r1, #0
 800fdb0:	d112      	bne.n	800fdd8 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xd0>
 800fdb2:	4601      	mov	r1, r0
 800fdb4:	4628      	mov	r0, r5
 800fdb6:	e9cd 460a 	strd	r4, r6, [sp, #40]	; 0x28
 800fdba:	b003      	add	sp, #12
 800fdbc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fdc0:	f7ff be42 	b.w	800fa48 <_ZN6tflite8internal36InitializeTfLiteTensorFromFlatbufferEPNS_26IPersistentBufferAllocatorEPNS_29INonPersistentBufferAllocatorEbRKNS_6TensorEPKN11flatbuffers6VectorINS8_6OffsetINS_6BufferEEEmEEP12TfLiteTensor>
 800fdc4:	2400      	movs	r4, #0
 800fdc6:	e7ed      	b.n	800fda4 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0x9c>
 800fdc8:	f7ff fb3e 	bl	800f448 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 800fdcc:	4b06      	ldr	r3, [pc, #24]	; (800fde8 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xe0>)
 800fdce:	4a07      	ldr	r2, [pc, #28]	; (800fdec <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xe4>)
 800fdd0:	4807      	ldr	r0, [pc, #28]	; (800fdf0 <_ZN6tflite14MicroAllocator34PopulateTfLiteTensorFromFlatbufferEPKNS_5ModelEP12TfLiteTensoriib+0xe8>)
 800fdd2:	21b0      	movs	r1, #176	; 0xb0
 800fdd4:	f00c fdf4 	bl	801c9c0 <__assert_func>
 800fdd8:	f00d fdb0 	bl	801d93c <__stack_chk_fail>
 800fddc:	2300      	movs	r3, #0
 800fdde:	681b      	ldr	r3, [r3, #0]
 800fde0:	deff      	udf	#255	; 0xff
 800fde2:	bf00      	nop
 800fde4:	20011294 	.word	0x20011294
 800fde8:	08024734 	.word	0x08024734
 800fdec:	08026c44 	.word	0x08026c44
 800fdf0:	08024804 	.word	0x08024804

0800fdf4 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor>:
 800fdf4:	6803      	ldr	r3, [r0, #0]
 800fdf6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdf8:	4614      	mov	r4, r2
 800fdfa:	1ac2      	subs	r2, r0, r3
 800fdfc:	460f      	mov	r7, r1
 800fdfe:	8811      	ldrh	r1, [r2, #0]
 800fe00:	4b1f      	ldr	r3, [pc, #124]	; (800fe80 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x8c>)
 800fe02:	b083      	sub	sp, #12
 800fe04:	4605      	mov	r5, r0
 800fe06:	2906      	cmp	r1, #6
 800fe08:	f04f 0000 	mov.w	r0, #0
 800fe0c:	681b      	ldr	r3, [r3, #0]
 800fe0e:	9301      	str	r3, [sp, #4]
 800fe10:	f04f 0300 	mov.w	r3, #0
 800fe14:	e9c4 0000 	strd	r0, r0, [r4]
 800fe18:	60a0      	str	r0, [r4, #8]
 800fe1a:	d901      	bls.n	800fe20 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x2c>
 800fe1c:	88d0      	ldrh	r0, [r2, #6]
 800fe1e:	b978      	cbnz	r0, 800fe40 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x4c>
 800fe20:	f104 0108 	add.w	r1, r4, #8
 800fe24:	f7fe fae0 	bl	800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>
 800fe28:	4606      	mov	r6, r0
 800fe2a:	b188      	cbz	r0, 800fe50 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x5c>
 800fe2c:	4b14      	ldr	r3, [pc, #80]	; (800fe80 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x8c>)
 800fe2e:	681a      	ldr	r2, [r3, #0]
 800fe30:	9b01      	ldr	r3, [sp, #4]
 800fe32:	405a      	eors	r2, r3
 800fe34:	f04f 0300 	mov.w	r3, #0
 800fe38:	d120      	bne.n	800fe7c <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x88>
 800fe3a:	4630      	mov	r0, r6
 800fe3c:	b003      	add	sp, #12
 800fe3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe40:	5628      	ldrsb	r0, [r5, r0]
 800fe42:	f104 0108 	add.w	r1, r4, #8
 800fe46:	f7fe facf 	bl	800e3e8 <_ZN6tflite17ConvertTensorTypeENS_10TensorTypeEP10TfLiteType>
 800fe4a:	4606      	mov	r6, r0
 800fe4c:	2800      	cmp	r0, #0
 800fe4e:	d1ed      	bne.n	800fe2c <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x38>
 800fe50:	4639      	mov	r1, r7
 800fe52:	4628      	mov	r0, r5
 800fe54:	f7ff fdb2 	bl	800f9bc <_ZN6tflite8internal25GetFlatbufferTensorBufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEE>
 800fe58:	682b      	ldr	r3, [r5, #0]
 800fe5a:	6020      	str	r0, [r4, #0]
 800fe5c:	1aeb      	subs	r3, r5, r3
 800fe5e:	881a      	ldrh	r2, [r3, #0]
 800fe60:	2a04      	cmp	r2, #4
 800fe62:	d908      	bls.n	800fe76 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x82>
 800fe64:	889b      	ldrh	r3, [r3, #4]
 800fe66:	18e8      	adds	r0, r5, r3
 800fe68:	b12b      	cbz	r3, 800fe76 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x82>
 800fe6a:	58eb      	ldr	r3, [r5, r3]
 800fe6c:	4418      	add	r0, r3
 800fe6e:	f7ff f8ef 	bl	800f050 <_ZN6tflite33FlatBufferVectorToTfLiteTypeArrayEPKN11flatbuffers6VectorIlmEE>
 800fe72:	6060      	str	r0, [r4, #4]
 800fe74:	e7da      	b.n	800fe2c <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x38>
 800fe76:	4b03      	ldr	r3, [pc, #12]	; (800fe84 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x90>)
 800fe78:	6063      	str	r3, [r4, #4]
 800fe7a:	e7d7      	b.n	800fe2c <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor+0x38>
 800fe7c:	f00d fd5e 	bl	801d93c <__stack_chk_fail>
 800fe80:	20011294 	.word	0x20011294
 800fe84:	08026ecc 	.word	0x08026ecc

0800fe88 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE>:
 800fe88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe8c:	b085      	sub	sp, #20
 800fe8e:	4b4f      	ldr	r3, [pc, #316]	; (800ffcc <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x144>)
 800fe90:	9001      	str	r0, [sp, #4]
 800fe92:	681b      	ldr	r3, [r3, #0]
 800fe94:	9303      	str	r3, [sp, #12]
 800fe96:	f04f 0300 	mov.w	r3, #0
 800fe9a:	2a00      	cmp	r2, #0
 800fe9c:	f000 8094 	beq.w	800ffc8 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x140>
 800fea0:	468b      	mov	fp, r1
 800fea2:	4691      	mov	r9, r2
 800fea4:	2700      	movs	r7, #0
 800fea6:	f8db 3000 	ldr.w	r3, [fp]
 800feaa:	ebab 0303 	sub.w	r3, fp, r3
 800feae:	881a      	ldrh	r2, [r3, #0]
 800feb0:	2a08      	cmp	r2, #8
 800feb2:	f240 8086 	bls.w	800ffc2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x13a>
 800feb6:	891a      	ldrh	r2, [r3, #8]
 800feb8:	2a00      	cmp	r2, #0
 800feba:	f000 8082 	beq.w	800ffc2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x13a>
 800febe:	f85b 1002 	ldr.w	r1, [fp, r2]
 800fec2:	445a      	add	r2, fp
 800fec4:	1853      	adds	r3, r2, r1
 800fec6:	5852      	ldr	r2, [r2, r1]
 800fec8:	4297      	cmp	r7, r2
 800feca:	d270      	bcs.n	800ffae <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x126>
 800fecc:	3304      	adds	r3, #4
 800fece:	eb03 0587 	add.w	r5, r3, r7, lsl #2
 800fed2:	f853 2027 	ldr.w	r2, [r3, r7, lsl #2]
 800fed6:	58ab      	ldr	r3, [r5, r2]
 800fed8:	4415      	add	r5, r2
 800feda:	1aeb      	subs	r3, r5, r3
 800fedc:	881a      	ldrh	r2, [r3, #0]
 800fede:	2a04      	cmp	r2, #4
 800fee0:	d96f      	bls.n	800ffc2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x13a>
 800fee2:	889b      	ldrh	r3, [r3, #4]
 800fee4:	2b00      	cmp	r3, #0
 800fee6:	d06c      	beq.n	800ffc2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x13a>
 800fee8:	58ea      	ldr	r2, [r5, r3]
 800feea:	442b      	add	r3, r5
 800feec:	589e      	ldr	r6, [r3, r2]
 800feee:	9b01      	ldr	r3, [sp, #4]
 800fef0:	6898      	ldr	r0, [r3, #8]
 800fef2:	eb06 0446 	add.w	r4, r6, r6, lsl #1
 800fef6:	6803      	ldr	r3, [r0, #0]
 800fef8:	00a4      	lsls	r4, r4, #2
 800fefa:	689b      	ldr	r3, [r3, #8]
 800fefc:	2204      	movs	r2, #4
 800fefe:	4621      	mov	r1, r4
 800ff00:	4798      	blx	r3
 800ff02:	4680      	mov	r8, r0
 800ff04:	2800      	cmp	r0, #0
 800ff06:	d04c      	beq.n	800ffa2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x11a>
 800ff08:	2e00      	cmp	r6, #0
 800ff0a:	d044      	beq.n	800ff96 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x10e>
 800ff0c:	4682      	mov	sl, r0
 800ff0e:	2400      	movs	r4, #0
 800ff10:	e00f      	b.n	800ff32 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0xaa>
 800ff12:	8989      	ldrh	r1, [r1, #12]
 800ff14:	b121      	cbz	r1, 800ff20 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x98>
 800ff16:	eb0b 0301 	add.w	r3, fp, r1
 800ff1a:	f85b 1001 	ldr.w	r1, [fp, r1]
 800ff1e:	4419      	add	r1, r3
 800ff20:	4652      	mov	r2, sl
 800ff22:	f7ff ff67 	bl	800fdf4 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor>
 800ff26:	bb38      	cbnz	r0, 800ff78 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0xf0>
 800ff28:	3401      	adds	r4, #1
 800ff2a:	42a6      	cmp	r6, r4
 800ff2c:	f10a 0a0c 	add.w	sl, sl, #12
 800ff30:	d031      	beq.n	800ff96 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x10e>
 800ff32:	682b      	ldr	r3, [r5, #0]
 800ff34:	1aeb      	subs	r3, r5, r3
 800ff36:	8819      	ldrh	r1, [r3, #0]
 800ff38:	2904      	cmp	r1, #4
 800ff3a:	d942      	bls.n	800ffc2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x13a>
 800ff3c:	8899      	ldrh	r1, [r3, #4]
 800ff3e:	2900      	cmp	r1, #0
 800ff40:	d03f      	beq.n	800ffc2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x13a>
 800ff42:	5868      	ldr	r0, [r5, r1]
 800ff44:	4429      	add	r1, r5
 800ff46:	180b      	adds	r3, r1, r0
 800ff48:	5809      	ldr	r1, [r1, r0]
 800ff4a:	428c      	cmp	r4, r1
 800ff4c:	d231      	bcs.n	800ffb2 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x12a>
 800ff4e:	f8db 1000 	ldr.w	r1, [fp]
 800ff52:	ebab 0101 	sub.w	r1, fp, r1
 800ff56:	3304      	adds	r3, #4
 800ff58:	f8b1 c000 	ldrh.w	ip, [r1]
 800ff5c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800ff60:	f1bc 0f0c 	cmp.w	ip, #12
 800ff64:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800ff68:	4418      	add	r0, r3
 800ff6a:	d8d2      	bhi.n	800ff12 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x8a>
 800ff6c:	2100      	movs	r1, #0
 800ff6e:	4652      	mov	r2, sl
 800ff70:	f7ff ff40 	bl	800fdf4 <_ZN6tflite8internal40InitializeTfLiteEvalTensorFromFlatbufferERKNS_6TensorEPKN11flatbuffers6VectorINS4_6OffsetINS_6BufferEEEmEEP16TfLiteEvalTensor>
 800ff74:	2800      	cmp	r0, #0
 800ff76:	d0d7      	beq.n	800ff28 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0xa0>
 800ff78:	4815      	ldr	r0, [pc, #84]	; (800ffd0 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x148>)
 800ff7a:	4621      	mov	r1, r4
 800ff7c:	f7fe f948 	bl	800e210 <_Z11MicroPrintfPKcz>
 800ff80:	2001      	movs	r0, #1
 800ff82:	4b12      	ldr	r3, [pc, #72]	; (800ffcc <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x144>)
 800ff84:	681a      	ldr	r2, [r3, #0]
 800ff86:	9b03      	ldr	r3, [sp, #12]
 800ff88:	405a      	eors	r2, r3
 800ff8a:	f04f 0300 	mov.w	r3, #0
 800ff8e:	d116      	bne.n	800ffbe <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x136>
 800ff90:	b005      	add	sp, #20
 800ff92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff96:	f109 0304 	add.w	r3, r9, #4
 800ff9a:	f843 8037 	str.w	r8, [r3, r7, lsl #3]
 800ff9e:	3701      	adds	r7, #1
 800ffa0:	e781      	b.n	800fea6 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x1e>
 800ffa2:	480c      	ldr	r0, [pc, #48]	; (800ffd4 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x14c>)
 800ffa4:	4621      	mov	r1, r4
 800ffa6:	f7fe f933 	bl	800e210 <_Z11MicroPrintfPKcz>
 800ffaa:	2001      	movs	r0, #1
 800ffac:	e7e9      	b.n	800ff82 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0xfa>
 800ffae:	2000      	movs	r0, #0
 800ffb0:	e7e7      	b.n	800ff82 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0xfa>
 800ffb2:	4b09      	ldr	r3, [pc, #36]	; (800ffd8 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x150>)
 800ffb4:	4a09      	ldr	r2, [pc, #36]	; (800ffdc <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x154>)
 800ffb6:	480a      	ldr	r0, [pc, #40]	; (800ffe0 <_ZN6tflite14MicroAllocator25AllocateTfLiteEvalTensorsEPKNS_5ModelEPNS_19SubgraphAllocationsE+0x158>)
 800ffb8:	21b0      	movs	r1, #176	; 0xb0
 800ffba:	f00c fd01 	bl	801c9c0 <__assert_func>
 800ffbe:	f00d fcbd 	bl	801d93c <__stack_chk_fail>
 800ffc2:	2300      	movs	r3, #0
 800ffc4:	681b      	ldr	r3, [r3, #0]
 800ffc6:	deff      	udf	#255	; 0xff
 800ffc8:	f00c fcf2 	bl	801c9b0 <abort>
 800ffcc:	20011294 	.word	0x20011294
 800ffd0:	08026d78 	.word	0x08026d78
 800ffd4:	08026d30 	.word	0x08026d30
 800ffd8:	08024734 	.word	0x08024734
 800ffdc:	08026c44 	.word	0x08026c44
 800ffe0:	08024804 	.word	0x08024804

0800ffe4 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE>:
 800ffe4:	b530      	push	{r4, r5, lr}
 800ffe6:	4b13      	ldr	r3, [pc, #76]	; (8010034 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE+0x50>)
 800ffe8:	b083      	sub	sp, #12
 800ffea:	681b      	ldr	r3, [r3, #0]
 800ffec:	9301      	str	r3, [sp, #4]
 800ffee:	f04f 0300 	mov.w	r3, #0
 800fff2:	b1e8      	cbz	r0, 8010030 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE+0x4c>
 800fff4:	460d      	mov	r5, r1
 800fff6:	b1d9      	cbz	r1, 8010030 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE+0x4c>
 800fff8:	6803      	ldr	r3, [r0, #0]
 800fffa:	2204      	movs	r2, #4
 800fffc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fffe:	2124      	movs	r1, #36	; 0x24
 8010000:	4604      	mov	r4, r0
 8010002:	4798      	blx	r3
 8010004:	4a0c      	ldr	r2, [pc, #48]	; (8010038 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE+0x54>)
 8010006:	6002      	str	r2, [r0, #0]
 8010008:	1d22      	adds	r2, r4, #4
 801000a:	e9c0 4201 	strd	r4, r2, [r0, #4]
 801000e:	2200      	movs	r2, #0
 8010010:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010014:	4b07      	ldr	r3, [pc, #28]	; (8010034 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE+0x50>)
 8010016:	6105      	str	r5, [r0, #16]
 8010018:	7502      	strb	r2, [r0, #20]
 801001a:	6202      	str	r2, [r0, #32]
 801001c:	681a      	ldr	r2, [r3, #0]
 801001e:	9b01      	ldr	r3, [sp, #4]
 8010020:	405a      	eors	r2, r3
 8010022:	f04f 0300 	mov.w	r3, #0
 8010026:	d101      	bne.n	801002c <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE+0x48>
 8010028:	b003      	add	sp, #12
 801002a:	bd30      	pop	{r4, r5, pc}
 801002c:	f00d fc86 	bl	801d93c <__stack_chk_fail>
 8010030:	f00c fcbe 	bl	801c9b0 <abort>
 8010034:	20011294 	.word	0x20011294
 8010038:	08026f54 	.word	0x08026f54

0801003c <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE>:
 801003c:	b570      	push	{r4, r5, r6, lr}
 801003e:	4b1d      	ldr	r3, [pc, #116]	; (80100b4 <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x78>)
 8010040:	b082      	sub	sp, #8
 8010042:	460e      	mov	r6, r1
 8010044:	2110      	movs	r1, #16
 8010046:	4604      	mov	r4, r0
 8010048:	4615      	mov	r5, r2
 801004a:	681b      	ldr	r3, [r3, #0]
 801004c:	9301      	str	r3, [sp, #4]
 801004e:	f04f 0300 	mov.w	r3, #0
 8010052:	f7fc fbcb 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 8010056:	4434      	add	r4, r6
 8010058:	1a21      	subs	r1, r4, r0
 801005a:	f000 fc37 	bl	80108cc <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj>
 801005e:	4604      	mov	r4, r0
 8010060:	b100      	cbz	r0, 8010064 <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x28>
 8010062:	3004      	adds	r0, #4
 8010064:	b1d5      	cbz	r5, 801009c <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x60>
 8010066:	2d01      	cmp	r5, #1
 8010068:	d116      	bne.n	8010098 <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x5c>
 801006a:	6803      	ldr	r3, [r0, #0]
 801006c:	2204      	movs	r2, #4
 801006e:	689b      	ldr	r3, [r3, #8]
 8010070:	f241 010c 	movw	r1, #4108	; 0x100c
 8010074:	4798      	blx	r3
 8010076:	4605      	mov	r5, r0
 8010078:	f001 f918 	bl	80112ac <_ZN6tflite19LinearMemoryPlannerC1Ev>
 801007c:	4b0d      	ldr	r3, [pc, #52]	; (80100b4 <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x78>)
 801007e:	681a      	ldr	r2, [r3, #0]
 8010080:	9b01      	ldr	r3, [sp, #4]
 8010082:	405a      	eors	r2, r3
 8010084:	f04f 0300 	mov.w	r3, #0
 8010088:	d111      	bne.n	80100ae <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x72>
 801008a:	4629      	mov	r1, r5
 801008c:	4620      	mov	r0, r4
 801008e:	b002      	add	sp, #8
 8010090:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010094:	f7ff bfa6 	b.w	800ffe4 <_ZN6tflite14MicroAllocator6CreateEPNS_26SingleArenaBufferAllocatorEPNS_18MicroMemoryPlannerE>
 8010098:	2500      	movs	r5, #0
 801009a:	e7ef      	b.n	801007c <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x40>
 801009c:	6803      	ldr	r3, [r0, #0]
 801009e:	2204      	movs	r2, #4
 80100a0:	689b      	ldr	r3, [r3, #8]
 80100a2:	212c      	movs	r1, #44	; 0x2c
 80100a4:	4798      	blx	r3
 80100a6:	4605      	mov	r5, r0
 80100a8:	f000 fd7e 	bl	8010ba8 <_ZN6tflite19GreedyMemoryPlannerC1Ev>
 80100ac:	e7e6      	b.n	801007c <_ZN6tflite14MicroAllocator6CreateEPhjNS_17MemoryPlannerTypeE+0x40>
 80100ae:	f00d fc45 	bl	801d93c <__stack_chk_fail>
 80100b2:	bf00      	nop
 80100b4:	20011294 	.word	0x20011294

080100b8 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE>:
 80100b8:	b570      	push	{r4, r5, r6, lr}
 80100ba:	4b30      	ldr	r3, [pc, #192]	; (801017c <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xc4>)
 80100bc:	b082      	sub	sp, #8
 80100be:	681b      	ldr	r3, [r3, #0]
 80100c0:	9301      	str	r3, [sp, #4]
 80100c2:	f04f 0300 	mov.w	r3, #0
 80100c6:	2900      	cmp	r1, #0
 80100c8:	d056      	beq.n	8010178 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xc0>
 80100ca:	7d06      	ldrb	r6, [r0, #20]
 80100cc:	4604      	mov	r4, r0
 80100ce:	2e00      	cmp	r6, #0
 80100d0:	d144      	bne.n	801015c <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xa4>
 80100d2:	6880      	ldr	r0, [r0, #8]
 80100d4:	2301      	movs	r3, #1
 80100d6:	7523      	strb	r3, [r4, #20]
 80100d8:	6803      	ldr	r3, [r0, #0]
 80100da:	2204      	movs	r2, #4
 80100dc:	689b      	ldr	r3, [r3, #8]
 80100de:	460d      	mov	r5, r1
 80100e0:	2108      	movs	r1, #8
 80100e2:	4798      	blx	r3
 80100e4:	68a3      	ldr	r3, [r4, #8]
 80100e6:	6043      	str	r3, [r0, #4]
 80100e8:	6863      	ldr	r3, [r4, #4]
 80100ea:	4a25      	ldr	r2, [pc, #148]	; (8010180 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xc8>)
 80100ec:	6002      	str	r2, [r0, #0]
 80100ee:	681a      	ldr	r2, [r3, #0]
 80100f0:	60e0      	str	r0, [r4, #12]
 80100f2:	61a6      	str	r6, [r4, #24]
 80100f4:	4618      	mov	r0, r3
 80100f6:	6996      	ldr	r6, [r2, #24]
 80100f8:	2190      	movs	r1, #144	; 0x90
 80100fa:	2204      	movs	r2, #4
 80100fc:	47b0      	blx	r6
 80100fe:	61e0      	str	r0, [r4, #28]
 8010100:	b350      	cbz	r0, 8010158 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xa0>
 8010102:	682b      	ldr	r3, [r5, #0]
 8010104:	1aeb      	subs	r3, r5, r3
 8010106:	881a      	ldrh	r2, [r3, #0]
 8010108:	2a08      	cmp	r2, #8
 801010a:	d932      	bls.n	8010172 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xba>
 801010c:	891b      	ldrh	r3, [r3, #8]
 801010e:	2b00      	cmp	r3, #0
 8010110:	d02f      	beq.n	8010172 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xba>
 8010112:	18ea      	adds	r2, r5, r3
 8010114:	68a0      	ldr	r0, [r4, #8]
 8010116:	58eb      	ldr	r3, [r5, r3]
 8010118:	58d1      	ldr	r1, [r2, r3]
 801011a:	6803      	ldr	r3, [r0, #0]
 801011c:	00c9      	lsls	r1, r1, #3
 801011e:	689b      	ldr	r3, [r3, #8]
 8010120:	2204      	movs	r2, #4
 8010122:	4798      	blx	r3
 8010124:	4606      	mov	r6, r0
 8010126:	b1f0      	cbz	r0, 8010166 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xae>
 8010128:	6823      	ldr	r3, [r4, #0]
 801012a:	4602      	mov	r2, r0
 801012c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801012e:	4629      	mov	r1, r5
 8010130:	4620      	mov	r0, r4
 8010132:	4798      	blx	r3
 8010134:	b980      	cbnz	r0, 8010158 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xa0>
 8010136:	6823      	ldr	r3, [r4, #0]
 8010138:	4632      	mov	r2, r6
 801013a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801013c:	4629      	mov	r1, r5
 801013e:	4620      	mov	r0, r4
 8010140:	4798      	blx	r3
 8010142:	b948      	cbnz	r0, 8010158 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xa0>
 8010144:	4b0d      	ldr	r3, [pc, #52]	; (801017c <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xc4>)
 8010146:	681a      	ldr	r2, [r3, #0]
 8010148:	9b01      	ldr	r3, [sp, #4]
 801014a:	405a      	eors	r2, r3
 801014c:	f04f 0300 	mov.w	r3, #0
 8010150:	d10d      	bne.n	801016e <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xb6>
 8010152:	4630      	mov	r0, r6
 8010154:	b002      	add	sp, #8
 8010156:	bd70      	pop	{r4, r5, r6, pc}
 8010158:	2600      	movs	r6, #0
 801015a:	e7f3      	b.n	8010144 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0x8c>
 801015c:	4809      	ldr	r0, [pc, #36]	; (8010184 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xcc>)
 801015e:	f7fe f857 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010162:	2600      	movs	r6, #0
 8010164:	e7ee      	b.n	8010144 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0x8c>
 8010166:	4808      	ldr	r0, [pc, #32]	; (8010188 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0xd0>)
 8010168:	f7fe f852 	bl	800e210 <_Z11MicroPrintfPKcz>
 801016c:	e7ea      	b.n	8010144 <_ZN6tflite14MicroAllocator20StartModelAllocationEPKNS_5ModelE+0x8c>
 801016e:	f00d fbe5 	bl	801d93c <__stack_chk_fail>
 8010172:	2300      	movs	r3, #0
 8010174:	681b      	ldr	r3, [r3, #0]
 8010176:	deff      	udf	#255	; 0xff
 8010178:	f00c fc1a 	bl	801c9b0 <abort>
 801017c:	20011294 	.word	0x20011294
 8010180:	08026f3c 	.word	0x08026f3c
 8010184:	08026d98 	.word	0x08026d98
 8010188:	08026df0 	.word	0x08026df0

0801018c <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE>:
 801018c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801018e:	461d      	mov	r5, r3
 8010190:	4b1e      	ldr	r3, [pc, #120]	; (801020c <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x80>)
 8010192:	b083      	sub	sp, #12
 8010194:	681b      	ldr	r3, [r3, #0]
 8010196:	9301      	str	r3, [sp, #4]
 8010198:	f04f 0300 	mov.w	r3, #0
 801019c:	7d03      	ldrb	r3, [r0, #20]
 801019e:	b35b      	cbz	r3, 80101f8 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x6c>
 80101a0:	460e      	mov	r6, r1
 80101a2:	6801      	ldr	r1, [r0, #0]
 80101a4:	f8df c06c 	ldr.w	ip, [pc, #108]	; 8010214 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x88>
 80101a8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80101aa:	4563      	cmp	r3, ip
 80101ac:	4617      	mov	r7, r2
 80101ae:	4604      	mov	r4, r0
 80101b0:	6982      	ldr	r2, [r0, #24]
 80101b2:	d11a      	bne.n	80101ea <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x5e>
 80101b4:	b33d      	cbz	r5, 8010206 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x7a>
 80101b6:	b1ea      	cbz	r2, 80101f4 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x68>
 80101b8:	6880      	ldr	r0, [r0, #8]
 80101ba:	6803      	ldr	r3, [r0, #0]
 80101bc:	0091      	lsls	r1, r2, #2
 80101be:	689b      	ldr	r3, [r3, #8]
 80101c0:	2204      	movs	r2, #4
 80101c2:	4798      	blx	r3
 80101c4:	6821      	ldr	r1, [r4, #0]
 80101c6:	6028      	str	r0, [r5, #0]
 80101c8:	4603      	mov	r3, r0
 80101ca:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80101cc:	463a      	mov	r2, r7
 80101ce:	4631      	mov	r1, r6
 80101d0:	4620      	mov	r0, r4
 80101d2:	47a8      	blx	r5
 80101d4:	b900      	cbnz	r0, 80101d8 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x4c>
 80101d6:	7520      	strb	r0, [r4, #20]
 80101d8:	4b0c      	ldr	r3, [pc, #48]	; (801020c <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x80>)
 80101da:	681a      	ldr	r2, [r3, #0]
 80101dc:	9b01      	ldr	r3, [sp, #4]
 80101de:	405a      	eors	r2, r3
 80101e0:	f04f 0300 	mov.w	r3, #0
 80101e4:	d10d      	bne.n	8010202 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x76>
 80101e6:	b003      	add	sp, #12
 80101e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80101ea:	4629      	mov	r1, r5
 80101ec:	4798      	blx	r3
 80101ee:	2800      	cmp	r0, #0
 80101f0:	d1f2      	bne.n	80101d8 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x4c>
 80101f2:	6821      	ldr	r1, [r4, #0]
 80101f4:	682b      	ldr	r3, [r5, #0]
 80101f6:	e7e8      	b.n	80101ca <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x3e>
 80101f8:	4805      	ldr	r0, [pc, #20]	; (8010210 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x84>)
 80101fa:	f7fe f809 	bl	800e210 <_Z11MicroPrintfPKcz>
 80101fe:	2001      	movs	r0, #1
 8010200:	e7ea      	b.n	80101d8 <_ZN6tflite14MicroAllocator21FinishModelAllocationEPKNS_5ModelEPNS_19SubgraphAllocationsEPPNS_19ScratchBufferHandleE+0x4c>
 8010202:	f00d fb9b 	bl	801d93c <__stack_chk_fail>
 8010206:	f00c fbd3 	bl	801c9b0 <abort>
 801020a:	bf00      	nop
 801020c:	20011294 	.word	0x20011294
 8010210:	08026e20 	.word	0x08026e20
 8010214:	0800f3d1 	.word	0x0800f3d1

08010218 <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi>:
 8010218:	b5f0      	push	{r4, r5, r6, r7, lr}
 801021a:	461d      	mov	r5, r3
 801021c:	4b1f      	ldr	r3, [pc, #124]	; (801029c <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x84>)
 801021e:	b083      	sub	sp, #12
 8010220:	4604      	mov	r4, r0
 8010222:	460f      	mov	r7, r1
 8010224:	69c0      	ldr	r0, [r0, #28]
 8010226:	2104      	movs	r1, #4
 8010228:	4616      	mov	r6, r2
 801022a:	681b      	ldr	r3, [r3, #0]
 801022c:	9301      	str	r3, [sp, #4]
 801022e:	f04f 0300 	mov.w	r3, #0
 8010232:	f7fc fadb 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 8010236:	69a2      	ldr	r2, [r4, #24]
 8010238:	4684      	mov	ip, r0
 801023a:	b182      	cbz	r2, 801025e <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x46>
 801023c:	eb02 0042 	add.w	r0, r2, r2, lsl #1
 8010240:	eb0c 0080 	add.w	r0, ip, r0, lsl #2
 8010244:	2300      	movs	r3, #0
 8010246:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801024a:	f10c 0c0c 	add.w	ip, ip, #12
 801024e:	3101      	adds	r1, #1
 8010250:	bf08      	it	eq
 8010252:	3301      	addeq	r3, #1
 8010254:	4560      	cmp	r0, ip
 8010256:	d1f6      	bne.n	8010246 <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x2e>
 8010258:	2b0b      	cmp	r3, #11
 801025a:	d816      	bhi.n	801028a <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x72>
 801025c:	4684      	mov	ip, r0
 801025e:	f04f 33ff 	mov.w	r3, #4294967295
 8010262:	f8cc 3004 	str.w	r3, [ip, #4]
 8010266:	f8cc 7000 	str.w	r7, [ip]
 801026a:	f8cc 6008 	str.w	r6, [ip, #8]
 801026e:	602a      	str	r2, [r5, #0]
 8010270:	69a3      	ldr	r3, [r4, #24]
 8010272:	3301      	adds	r3, #1
 8010274:	2000      	movs	r0, #0
 8010276:	61a3      	str	r3, [r4, #24]
 8010278:	4b08      	ldr	r3, [pc, #32]	; (801029c <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x84>)
 801027a:	681a      	ldr	r2, [r3, #0]
 801027c:	9b01      	ldr	r3, [sp, #4]
 801027e:	405a      	eors	r2, r3
 8010280:	f04f 0300 	mov.w	r3, #0
 8010284:	d107      	bne.n	8010296 <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x7e>
 8010286:	b003      	add	sp, #12
 8010288:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801028a:	4805      	ldr	r0, [pc, #20]	; (80102a0 <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x88>)
 801028c:	210c      	movs	r1, #12
 801028e:	f7fd ffbf 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010292:	2001      	movs	r0, #1
 8010294:	e7f0      	b.n	8010278 <_ZN6tflite14MicroAllocator27RequestScratchBufferInArenaEjiPi+0x60>
 8010296:	f00d fb51 	bl	801d93c <__stack_chk_fail>
 801029a:	bf00      	nop
 801029c:	20011294 	.word	0x20011294
 80102a0:	08026e6c 	.word	0x08026e6c

080102a4 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi>:
 80102a4:	6803      	ldr	r3, [r0, #0]
 80102a6:	4a23      	ldr	r2, [pc, #140]	; (8010334 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x90>)
 80102a8:	695b      	ldr	r3, [r3, #20]
 80102aa:	b530      	push	{r4, r5, lr}
 80102ac:	4293      	cmp	r3, r2
 80102ae:	4605      	mov	r5, r0
 80102b0:	bf08      	it	eq
 80102b2:	6840      	ldreq	r0, [r0, #4]
 80102b4:	4c20      	ldr	r4, [pc, #128]	; (8010338 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x94>)
 80102b6:	bf08      	it	eq
 80102b8:	6803      	ldreq	r3, [r0, #0]
 80102ba:	b083      	sub	sp, #12
 80102bc:	bf08      	it	eq
 80102be:	695b      	ldreq	r3, [r3, #20]
 80102c0:	6824      	ldr	r4, [r4, #0]
 80102c2:	9401      	str	r4, [sp, #4]
 80102c4:	f04f 0400 	mov.w	r4, #0
 80102c8:	460c      	mov	r4, r1
 80102ca:	4798      	blx	r3
 80102cc:	b140      	cbz	r0, 80102e0 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x3c>
 80102ce:	4b1a      	ldr	r3, [pc, #104]	; (8010338 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x94>)
 80102d0:	681a      	ldr	r2, [r3, #0]
 80102d2:	9b01      	ldr	r3, [sp, #4]
 80102d4:	405a      	eors	r2, r3
 80102d6:	f04f 0300 	mov.w	r3, #0
 80102da:	d129      	bne.n	8010330 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x8c>
 80102dc:	b003      	add	sp, #12
 80102de:	bd30      	pop	{r4, r5, pc}
 80102e0:	69e8      	ldr	r0, [r5, #28]
 80102e2:	2104      	movs	r1, #4
 80102e4:	f7fc fa82 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 80102e8:	69aa      	ldr	r2, [r5, #24]
 80102ea:	4603      	mov	r3, r0
 80102ec:	b1f2      	cbz	r2, 801032c <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x88>
 80102ee:	eb02 0c42 	add.w	ip, r2, r2, lsl #1
 80102f2:	ea4f 028c 	mov.w	r2, ip, lsl #2
 80102f6:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
 80102fa:	6859      	ldr	r1, [r3, #4]
 80102fc:	3101      	adds	r1, #1
 80102fe:	bf08      	it	eq
 8010300:	605c      	streq	r4, [r3, #4]
 8010302:	330c      	adds	r3, #12
 8010304:	4563      	cmp	r3, ip
 8010306:	d1f8      	bne.n	80102fa <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x56>
 8010308:	3290      	adds	r2, #144	; 0x90
 801030a:	4b0b      	ldr	r3, [pc, #44]	; (8010338 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x94>)
 801030c:	6868      	ldr	r0, [r5, #4]
 801030e:	6819      	ldr	r1, [r3, #0]
 8010310:	9b01      	ldr	r3, [sp, #4]
 8010312:	4059      	eors	r1, r3
 8010314:	f04f 0300 	mov.w	r3, #0
 8010318:	d10a      	bne.n	8010330 <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x8c>
 801031a:	6803      	ldr	r3, [r0, #0]
 801031c:	69e9      	ldr	r1, [r5, #28]
 801031e:	69dc      	ldr	r4, [r3, #28]
 8010320:	2304      	movs	r3, #4
 8010322:	46a4      	mov	ip, r4
 8010324:	b003      	add	sp, #12
 8010326:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801032a:	4760      	bx	ip
 801032c:	2290      	movs	r2, #144	; 0x90
 801032e:	e7ec      	b.n	801030a <_ZN6tflite14MicroAllocator28FinishPrepareNodeAllocationsEi+0x66>
 8010330:	f00d fb04 	bl	801d93c <__stack_chk_fail>
 8010334:	0800f231 	.word	0x0800f231
 8010338:	20011294 	.word	0x20011294

0801033c <_ZN6tflite14MicroAllocator23GetBuiltinDataAllocatorEv>:
 801033c:	b500      	push	{lr}
 801033e:	4b09      	ldr	r3, [pc, #36]	; (8010364 <_ZN6tflite14MicroAllocator23GetBuiltinDataAllocatorEv+0x28>)
 8010340:	68c0      	ldr	r0, [r0, #12]
 8010342:	b083      	sub	sp, #12
 8010344:	681b      	ldr	r3, [r3, #0]
 8010346:	9301      	str	r3, [sp, #4]
 8010348:	f04f 0300 	mov.w	r3, #0
 801034c:	4b05      	ldr	r3, [pc, #20]	; (8010364 <_ZN6tflite14MicroAllocator23GetBuiltinDataAllocatorEv+0x28>)
 801034e:	681a      	ldr	r2, [r3, #0]
 8010350:	9b01      	ldr	r3, [sp, #4]
 8010352:	405a      	eors	r2, r3
 8010354:	f04f 0300 	mov.w	r3, #0
 8010358:	d102      	bne.n	8010360 <_ZN6tflite14MicroAllocator23GetBuiltinDataAllocatorEv+0x24>
 801035a:	b003      	add	sp, #12
 801035c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010360:	f00d faec 	bl	801d93c <__stack_chk_fail>
 8010364:	20011294 	.word	0x20011294

08010368 <_ZN6tflite26SingleArenaBufferAllocatorD1Ev>:
 8010368:	b500      	push	{lr}
 801036a:	4b09      	ldr	r3, [pc, #36]	; (8010390 <_ZN6tflite26SingleArenaBufferAllocatorD1Ev+0x28>)
 801036c:	b083      	sub	sp, #12
 801036e:	681b      	ldr	r3, [r3, #0]
 8010370:	9301      	str	r3, [sp, #4]
 8010372:	f04f 0300 	mov.w	r3, #0
 8010376:	4b06      	ldr	r3, [pc, #24]	; (8010390 <_ZN6tflite26SingleArenaBufferAllocatorD1Ev+0x28>)
 8010378:	681a      	ldr	r2, [r3, #0]
 801037a:	9b01      	ldr	r3, [sp, #4]
 801037c:	405a      	eors	r2, r3
 801037e:	f04f 0300 	mov.w	r3, #0
 8010382:	d102      	bne.n	801038a <_ZN6tflite26SingleArenaBufferAllocatorD1Ev+0x22>
 8010384:	b003      	add	sp, #12
 8010386:	f85d fb04 	ldr.w	pc, [sp], #4
 801038a:	f00d fad7 	bl	801d93c <__stack_chk_fail>
 801038e:	bf00      	nop
 8010390:	20011294 	.word	0x20011294

08010394 <_ZN6tflite26SingleArenaBufferAllocator14DeallocateTempEPh>:
 8010394:	e9d0 2307 	ldrd	r2, r3, [r0, #28]
 8010398:	b500      	push	{lr}
 801039a:	4051      	eors	r1, r2
 801039c:	3b01      	subs	r3, #1
 801039e:	e9c0 1307 	strd	r1, r3, [r0, #28]
 80103a2:	4b09      	ldr	r3, [pc, #36]	; (80103c8 <_ZN6tflite26SingleArenaBufferAllocator14DeallocateTempEPh+0x34>)
 80103a4:	b083      	sub	sp, #12
 80103a6:	681b      	ldr	r3, [r3, #0]
 80103a8:	9301      	str	r3, [sp, #4]
 80103aa:	f04f 0300 	mov.w	r3, #0
 80103ae:	4b06      	ldr	r3, [pc, #24]	; (80103c8 <_ZN6tflite26SingleArenaBufferAllocator14DeallocateTempEPh+0x34>)
 80103b0:	681a      	ldr	r2, [r3, #0]
 80103b2:	9b01      	ldr	r3, [sp, #4]
 80103b4:	405a      	eors	r2, r3
 80103b6:	f04f 0300 	mov.w	r3, #0
 80103ba:	d102      	bne.n	80103c2 <_ZN6tflite26SingleArenaBufferAllocator14DeallocateTempEPh+0x2e>
 80103bc:	b003      	add	sp, #12
 80103be:	f85d fb04 	ldr.w	pc, [sp], #4
 80103c2:	f00d fabb 	bl	801d93c <__stack_chk_fail>
 80103c6:	bf00      	nop
 80103c8:	20011294 	.word	0x20011294

080103cc <_ZNK6tflite26SingleArenaBufferAllocator23GetOverlayMemoryAddressEv>:
 80103cc:	b500      	push	{lr}
 80103ce:	4b09      	ldr	r3, [pc, #36]	; (80103f4 <_ZNK6tflite26SingleArenaBufferAllocator23GetOverlayMemoryAddressEv+0x28>)
 80103d0:	6880      	ldr	r0, [r0, #8]
 80103d2:	b083      	sub	sp, #12
 80103d4:	681b      	ldr	r3, [r3, #0]
 80103d6:	9301      	str	r3, [sp, #4]
 80103d8:	f04f 0300 	mov.w	r3, #0
 80103dc:	4b05      	ldr	r3, [pc, #20]	; (80103f4 <_ZNK6tflite26SingleArenaBufferAllocator23GetOverlayMemoryAddressEv+0x28>)
 80103de:	681a      	ldr	r2, [r3, #0]
 80103e0:	9b01      	ldr	r3, [sp, #4]
 80103e2:	405a      	eors	r2, r3
 80103e4:	f04f 0300 	mov.w	r3, #0
 80103e8:	d102      	bne.n	80103f0 <_ZNK6tflite26SingleArenaBufferAllocator23GetOverlayMemoryAddressEv+0x24>
 80103ea:	b003      	add	sp, #12
 80103ec:	f85d fb04 	ldr.w	pc, [sp], #4
 80103f0:	f00d faa4 	bl	801d93c <__stack_chk_fail>
 80103f4:	20011294 	.word	0x20011294

080103f8 <_ZNK6tflite26SingleArenaBufferAllocator25GetNonPersistentUsedBytesEv>:
 80103f8:	b500      	push	{lr}
 80103fa:	4b0d      	ldr	r3, [pc, #52]	; (8010430 <_ZNK6tflite26SingleArenaBufferAllocator25GetNonPersistentUsedBytesEv+0x38>)
 80103fc:	6982      	ldr	r2, [r0, #24]
 80103fe:	b083      	sub	sp, #12
 8010400:	681b      	ldr	r3, [r3, #0]
 8010402:	9301      	str	r3, [sp, #4]
 8010404:	f04f 0300 	mov.w	r3, #0
 8010408:	6903      	ldr	r3, [r0, #16]
 801040a:	6880      	ldr	r0, [r0, #8]
 801040c:	4293      	cmp	r3, r2
 801040e:	bf28      	it	cs
 8010410:	1a18      	subcs	r0, r3, r0
 8010412:	4b07      	ldr	r3, [pc, #28]	; (8010430 <_ZNK6tflite26SingleArenaBufferAllocator25GetNonPersistentUsedBytesEv+0x38>)
 8010414:	bf38      	it	cc
 8010416:	1a10      	subcc	r0, r2, r0
 8010418:	681a      	ldr	r2, [r3, #0]
 801041a:	9b01      	ldr	r3, [sp, #4]
 801041c:	405a      	eors	r2, r3
 801041e:	f04f 0300 	mov.w	r3, #0
 8010422:	d102      	bne.n	801042a <_ZNK6tflite26SingleArenaBufferAllocator25GetNonPersistentUsedBytesEv+0x32>
 8010424:	b003      	add	sp, #12
 8010426:	f85d fb04 	ldr.w	pc, [sp], #4
 801042a:	f00d fa87 	bl	801d93c <__stack_chk_fail>
 801042e:	bf00      	nop
 8010430:	20011294 	.word	0x20011294

08010434 <_ZNK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv>:
 8010434:	b500      	push	{lr}
 8010436:	4b0a      	ldr	r3, [pc, #40]	; (8010460 <_ZNK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv+0x2c>)
 8010438:	b083      	sub	sp, #12
 801043a:	681b      	ldr	r3, [r3, #0]
 801043c:	9301      	str	r3, [sp, #4]
 801043e:	f04f 0300 	mov.w	r3, #0
 8010442:	68c3      	ldr	r3, [r0, #12]
 8010444:	6940      	ldr	r0, [r0, #20]
 8010446:	1a18      	subs	r0, r3, r0
 8010448:	4b05      	ldr	r3, [pc, #20]	; (8010460 <_ZNK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv+0x2c>)
 801044a:	681a      	ldr	r2, [r3, #0]
 801044c:	9b01      	ldr	r3, [sp, #4]
 801044e:	405a      	eors	r2, r3
 8010450:	f04f 0300 	mov.w	r3, #0
 8010454:	d102      	bne.n	801045c <_ZNK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv+0x28>
 8010456:	b003      	add	sp, #12
 8010458:	f85d fb04 	ldr.w	pc, [sp], #4
 801045c:	f00d fa6e 	bl	801d93c <__stack_chk_fail>
 8010460:	20011294 	.word	0x20011294

08010464 <_ZN6tflite26SingleArenaBufferAllocatorD0Ev>:
 8010464:	b510      	push	{r4, lr}
 8010466:	4b0b      	ldr	r3, [pc, #44]	; (8010494 <_ZN6tflite26SingleArenaBufferAllocatorD0Ev+0x30>)
 8010468:	b082      	sub	sp, #8
 801046a:	2124      	movs	r1, #36	; 0x24
 801046c:	681b      	ldr	r3, [r3, #0]
 801046e:	9301      	str	r3, [sp, #4]
 8010470:	f04f 0300 	mov.w	r3, #0
 8010474:	4604      	mov	r4, r0
 8010476:	f00a fbf7 	bl	801ac68 <_ZdlPvj>
 801047a:	4b06      	ldr	r3, [pc, #24]	; (8010494 <_ZN6tflite26SingleArenaBufferAllocatorD0Ev+0x30>)
 801047c:	681a      	ldr	r2, [r3, #0]
 801047e:	9b01      	ldr	r3, [sp, #4]
 8010480:	405a      	eors	r2, r3
 8010482:	f04f 0300 	mov.w	r3, #0
 8010486:	d102      	bne.n	801048e <_ZN6tflite26SingleArenaBufferAllocatorD0Ev+0x2a>
 8010488:	4620      	mov	r0, r4
 801048a:	b002      	add	sp, #8
 801048c:	bd10      	pop	{r4, pc}
 801048e:	f00d fa55 	bl	801d93c <__stack_chk_fail>
 8010492:	bf00      	nop
 8010494:	20011294 	.word	0x20011294

08010498 <_ZN6tflite26SingleArenaBufferAllocator23AllocateResizableBufferEjj>:
 8010498:	b570      	push	{r4, r5, r6, lr}
 801049a:	4613      	mov	r3, r2
 801049c:	b084      	sub	sp, #16
 801049e:	460a      	mov	r2, r1
 80104a0:	e9cd 2300 	strd	r2, r3, [sp]
 80104a4:	4619      	mov	r1, r3
 80104a6:	4b10      	ldr	r3, [pc, #64]	; (80104e8 <_ZN6tflite26SingleArenaBufferAllocator23AllocateResizableBufferEjj+0x50>)
 80104a8:	4605      	mov	r5, r0
 80104aa:	6880      	ldr	r0, [r0, #8]
 80104ac:	681b      	ldr	r3, [r3, #0]
 80104ae:	9303      	str	r3, [sp, #12]
 80104b0:	f04f 0300 	mov.w	r3, #0
 80104b4:	f7fc f99a 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 80104b8:	6829      	ldr	r1, [r5, #0]
 80104ba:	4604      	mov	r4, r0
 80104bc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80104c0:	69ce      	ldr	r6, [r1, #28]
 80104c2:	4628      	mov	r0, r5
 80104c4:	4621      	mov	r1, r4
 80104c6:	47b0      	blx	r6
 80104c8:	4b07      	ldr	r3, [pc, #28]	; (80104e8 <_ZN6tflite26SingleArenaBufferAllocator23AllocateResizableBufferEjj+0x50>)
 80104ca:	2800      	cmp	r0, #0
 80104cc:	bf18      	it	ne
 80104ce:	2400      	movne	r4, #0
 80104d0:	681a      	ldr	r2, [r3, #0]
 80104d2:	9b03      	ldr	r3, [sp, #12]
 80104d4:	405a      	eors	r2, r3
 80104d6:	f04f 0300 	mov.w	r3, #0
 80104da:	d102      	bne.n	80104e2 <_ZN6tflite26SingleArenaBufferAllocator23AllocateResizableBufferEjj+0x4a>
 80104dc:	4620      	mov	r0, r4
 80104de:	b004      	add	sp, #16
 80104e0:	bd70      	pop	{r4, r5, r6, pc}
 80104e2:	f00d fa2b 	bl	801d93c <__stack_chk_fail>
 80104e6:	bf00      	nop
 80104e8:	20011294 	.word	0x20011294

080104ec <_ZN6tflite26SingleArenaBufferAllocator33ReserveNonPersistentOverlayMemoryEjj>:
 80104ec:	b570      	push	{r4, r5, r6, lr}
 80104ee:	b084      	sub	sp, #16
 80104f0:	4b0f      	ldr	r3, [pc, #60]	; (8010530 <_ZN6tflite26SingleArenaBufferAllocator33ReserveNonPersistentOverlayMemoryEjj+0x44>)
 80104f2:	9201      	str	r2, [sp, #4]
 80104f4:	4604      	mov	r4, r0
 80104f6:	460d      	mov	r5, r1
 80104f8:	6880      	ldr	r0, [r0, #8]
 80104fa:	4611      	mov	r1, r2
 80104fc:	681b      	ldr	r3, [r3, #0]
 80104fe:	9303      	str	r3, [sp, #12]
 8010500:	f04f 0300 	mov.w	r3, #0
 8010504:	f7fc f972 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 8010508:	4a09      	ldr	r2, [pc, #36]	; (8010530 <_ZN6tflite26SingleArenaBufferAllocator33ReserveNonPersistentOverlayMemoryEjj+0x44>)
 801050a:	9b01      	ldr	r3, [sp, #4]
 801050c:	4601      	mov	r1, r0
 801050e:	6810      	ldr	r0, [r2, #0]
 8010510:	9a03      	ldr	r2, [sp, #12]
 8010512:	4050      	eors	r0, r2
 8010514:	f04f 0200 	mov.w	r2, #0
 8010518:	d108      	bne.n	801052c <_ZN6tflite26SingleArenaBufferAllocator33ReserveNonPersistentOverlayMemoryEjj+0x40>
 801051a:	6822      	ldr	r2, [r4, #0]
 801051c:	69d6      	ldr	r6, [r2, #28]
 801051e:	4620      	mov	r0, r4
 8010520:	462a      	mov	r2, r5
 8010522:	46b4      	mov	ip, r6
 8010524:	b004      	add	sp, #16
 8010526:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801052a:	4760      	bx	ip
 801052c:	f00d fa06 	bl	801d93c <__stack_chk_fail>
 8010530:	20011294 	.word	0x20011294

08010534 <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj>:
 8010534:	b530      	push	{r4, r5, lr}
 8010536:	4b15      	ldr	r3, [pc, #84]	; (801058c <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj+0x58>)
 8010538:	b083      	sub	sp, #12
 801053a:	4604      	mov	r4, r0
 801053c:	460d      	mov	r5, r1
 801053e:	6980      	ldr	r0, [r0, #24]
 8010540:	4611      	mov	r1, r2
 8010542:	681b      	ldr	r3, [r3, #0]
 8010544:	9301      	str	r3, [sp, #4]
 8010546:	f04f 0300 	mov.w	r3, #0
 801054a:	f7fc f94f 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 801054e:	6962      	ldr	r2, [r4, #20]
 8010550:	1a12      	subs	r2, r2, r0
 8010552:	42aa      	cmp	r2, r5
 8010554:	d310      	bcc.n	8010578 <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj+0x44>
 8010556:	e9d4 2307 	ldrd	r2, r3, [r4, #28]
 801055a:	4405      	add	r5, r0
 801055c:	4042      	eors	r2, r0
 801055e:	e9c4 5206 	strd	r5, r2, [r4, #24]
 8010562:	3301      	adds	r3, #1
 8010564:	6223      	str	r3, [r4, #32]
 8010566:	4b09      	ldr	r3, [pc, #36]	; (801058c <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj+0x58>)
 8010568:	681a      	ldr	r2, [r3, #0]
 801056a:	9b01      	ldr	r3, [sp, #4]
 801056c:	405a      	eors	r2, r3
 801056e:	f04f 0300 	mov.w	r3, #0
 8010572:	d108      	bne.n	8010586 <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj+0x52>
 8010574:	b003      	add	sp, #12
 8010576:	bd30      	pop	{r4, r5, pc}
 8010578:	4805      	ldr	r0, [pc, #20]	; (8010590 <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj+0x5c>)
 801057a:	1aab      	subs	r3, r5, r2
 801057c:	4629      	mov	r1, r5
 801057e:	f7fd fe47 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010582:	2000      	movs	r0, #0
 8010584:	e7ef      	b.n	8010566 <_ZN6tflite26SingleArenaBufferAllocator12AllocateTempEjj+0x32>
 8010586:	f00d f9d9 	bl	801d93c <__stack_chk_fail>
 801058a:	bf00      	nop
 801058c:	20011294 	.word	0x20011294
 8010590:	08026ffc 	.word	0x08026ffc

08010594 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv>:
 8010594:	b500      	push	{lr}
 8010596:	e9d0 2107 	ldrd	r2, r1, [r0, #28]
 801059a:	4b0e      	ldr	r3, [pc, #56]	; (80105d4 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x40>)
 801059c:	b083      	sub	sp, #12
 801059e:	681b      	ldr	r3, [r3, #0]
 80105a0:	9301      	str	r3, [sp, #4]
 80105a2:	f04f 0300 	mov.w	r3, #0
 80105a6:	b959      	cbnz	r1, 80105c0 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x2c>
 80105a8:	b952      	cbnz	r2, 80105c0 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x2c>
 80105aa:	2001      	movs	r0, #1
 80105ac:	4b09      	ldr	r3, [pc, #36]	; (80105d4 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x40>)
 80105ae:	681a      	ldr	r2, [r3, #0]
 80105b0:	9b01      	ldr	r3, [sp, #4]
 80105b2:	405a      	eors	r2, r3
 80105b4:	f04f 0300 	mov.w	r3, #0
 80105b8:	d10a      	bne.n	80105d0 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x3c>
 80105ba:	b003      	add	sp, #12
 80105bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80105c0:	fab2 f282 	clz	r2, r2
 80105c4:	4804      	ldr	r0, [pc, #16]	; (80105d8 <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x44>)
 80105c6:	0952      	lsrs	r2, r2, #5
 80105c8:	f7fd fe22 	bl	800e210 <_Z11MicroPrintfPKcz>
 80105cc:	2000      	movs	r0, #0
 80105ce:	e7ed      	b.n	80105ac <_ZN6tflite26SingleArenaBufferAllocator20IsAllTempDeallocatedEv+0x18>
 80105d0:	f00d f9b4 	bl	801d93c <__stack_chk_fail>
 80105d4:	20011294 	.word	0x20011294
 80105d8:	08027048 	.word	0x08027048

080105dc <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj>:
 80105dc:	b530      	push	{r4, r5, lr}
 80105de:	4604      	mov	r4, r0
 80105e0:	6940      	ldr	r0, [r0, #20]
 80105e2:	4b11      	ldr	r3, [pc, #68]	; (8010628 <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x4c>)
 80105e4:	460d      	mov	r5, r1
 80105e6:	b083      	sub	sp, #12
 80105e8:	4611      	mov	r1, r2
 80105ea:	1b40      	subs	r0, r0, r5
 80105ec:	681b      	ldr	r3, [r3, #0]
 80105ee:	9301      	str	r3, [sp, #4]
 80105f0:	f04f 0300 	mov.w	r3, #0
 80105f4:	f7fc f916 	bl	800c824 <_ZN6tflite16AlignPointerDownEPhj>
 80105f8:	6923      	ldr	r3, [r4, #16]
 80105fa:	4283      	cmp	r3, r0
 80105fc:	bf98      	it	ls
 80105fe:	6160      	strls	r0, [r4, #20]
 8010600:	d808      	bhi.n	8010614 <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x38>
 8010602:	4b09      	ldr	r3, [pc, #36]	; (8010628 <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x4c>)
 8010604:	681a      	ldr	r2, [r3, #0]
 8010606:	9b01      	ldr	r3, [sp, #4]
 8010608:	405a      	eors	r2, r3
 801060a:	f04f 0300 	mov.w	r3, #0
 801060e:	d109      	bne.n	8010624 <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x48>
 8010610:	b003      	add	sp, #12
 8010612:	bd30      	pop	{r4, r5, pc}
 8010614:	1a1b      	subs	r3, r3, r0
 8010616:	1aea      	subs	r2, r5, r3
 8010618:	4804      	ldr	r0, [pc, #16]	; (801062c <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x50>)
 801061a:	4629      	mov	r1, r5
 801061c:	f7fd fdf8 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010620:	2000      	movs	r0, #0
 8010622:	e7ee      	b.n	8010602 <_ZN6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x26>
 8010624:	f00d f98a 	bl	801d93c <__stack_chk_fail>
 8010628:	20011294 	.word	0x20011294
 801062c:	0802708c 	.word	0x0802708c

08010630 <_ZNK6tflite26SingleArenaBufferAllocator18GetAvailableMemoryEj>:
 8010630:	b530      	push	{r4, r5, lr}
 8010632:	4b0f      	ldr	r3, [pc, #60]	; (8010670 <_ZNK6tflite26SingleArenaBufferAllocator18GetAvailableMemoryEj+0x40>)
 8010634:	b083      	sub	sp, #12
 8010636:	4604      	mov	r4, r0
 8010638:	6980      	ldr	r0, [r0, #24]
 801063a:	460d      	mov	r5, r1
 801063c:	681b      	ldr	r3, [r3, #0]
 801063e:	9301      	str	r3, [sp, #4]
 8010640:	f04f 0300 	mov.w	r3, #0
 8010644:	f7fc f8d2 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 8010648:	4629      	mov	r1, r5
 801064a:	4603      	mov	r3, r0
 801064c:	6960      	ldr	r0, [r4, #20]
 801064e:	461c      	mov	r4, r3
 8010650:	f7fc f8e8 	bl	800c824 <_ZN6tflite16AlignPointerDownEPhj>
 8010654:	4b06      	ldr	r3, [pc, #24]	; (8010670 <_ZNK6tflite26SingleArenaBufferAllocator18GetAvailableMemoryEj+0x40>)
 8010656:	681a      	ldr	r2, [r3, #0]
 8010658:	9b01      	ldr	r3, [sp, #4]
 801065a:	405a      	eors	r2, r3
 801065c:	f04f 0300 	mov.w	r3, #0
 8010660:	eba0 0004 	sub.w	r0, r0, r4
 8010664:	d101      	bne.n	801066a <_ZNK6tflite26SingleArenaBufferAllocator18GetAvailableMemoryEj+0x3a>
 8010666:	b003      	add	sp, #12
 8010668:	bd30      	pop	{r4, r5, pc}
 801066a:	f00d f967 	bl	801d93c <__stack_chk_fail>
 801066e:	bf00      	nop
 8010670:	20011294 	.word	0x20011294

08010674 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj>:
 8010674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010676:	4604      	mov	r4, r0
 8010678:	461d      	mov	r5, r3
 801067a:	460e      	mov	r6, r1
 801067c:	4619      	mov	r1, r3
 801067e:	4b19      	ldr	r3, [pc, #100]	; (80106e4 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x70>)
 8010680:	6880      	ldr	r0, [r0, #8]
 8010682:	b083      	sub	sp, #12
 8010684:	4617      	mov	r7, r2
 8010686:	681b      	ldr	r3, [r3, #0]
 8010688:	9301      	str	r3, [sp, #4]
 801068a:	f04f 0300 	mov.w	r3, #0
 801068e:	f7fc f8ad 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 8010692:	69a3      	ldr	r3, [r4, #24]
 8010694:	6922      	ldr	r2, [r4, #16]
 8010696:	429a      	cmp	r2, r3
 8010698:	d101      	bne.n	801069e <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x2a>
 801069a:	42b0      	cmp	r0, r6
 801069c:	d00c      	beq.n	80106b8 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x44>
 801069e:	4812      	ldr	r0, [pc, #72]	; (80106e8 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x74>)
 80106a0:	f7fd fdb6 	bl	800e210 <_Z11MicroPrintfPKcz>
 80106a4:	2001      	movs	r0, #1
 80106a6:	4b0f      	ldr	r3, [pc, #60]	; (80106e4 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x70>)
 80106a8:	681a      	ldr	r2, [r3, #0]
 80106aa:	9b01      	ldr	r3, [sp, #4]
 80106ac:	405a      	eors	r2, r3
 80106ae:	f04f 0300 	mov.w	r3, #0
 80106b2:	d115      	bne.n	80106e0 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x6c>
 80106b4:	b003      	add	sp, #12
 80106b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106b8:	68a0      	ldr	r0, [r4, #8]
 80106ba:	4629      	mov	r1, r5
 80106bc:	f7fc f896 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 80106c0:	6962      	ldr	r2, [r4, #20]
 80106c2:	1a12      	subs	r2, r2, r0
 80106c4:	4297      	cmp	r7, r2
 80106c6:	d804      	bhi.n	80106d2 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x5e>
 80106c8:	4438      	add	r0, r7
 80106ca:	6120      	str	r0, [r4, #16]
 80106cc:	61a0      	str	r0, [r4, #24]
 80106ce:	2000      	movs	r0, #0
 80106d0:	e7e9      	b.n	80106a6 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x32>
 80106d2:	4806      	ldr	r0, [pc, #24]	; (80106ec <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x78>)
 80106d4:	1abb      	subs	r3, r7, r2
 80106d6:	4639      	mov	r1, r7
 80106d8:	f7fd fd9a 	bl	800e210 <_Z11MicroPrintfPKcz>
 80106dc:	2001      	movs	r0, #1
 80106de:	e7e2      	b.n	80106a6 <_ZN6tflite26SingleArenaBufferAllocator12ResizeBufferEPhjj+0x32>
 80106e0:	f00d f92c 	bl	801d93c <__stack_chk_fail>
 80106e4:	20011294 	.word	0x20011294
 80106e8:	080270d8 	.word	0x080270d8
 80106ec:	08027148 	.word	0x08027148

080106f0 <_ZThn4_N6tflite26SingleArenaBufferAllocatorD1Ev>:
 80106f0:	b500      	push	{lr}
 80106f2:	4b09      	ldr	r3, [pc, #36]	; (8010718 <_ZThn4_N6tflite26SingleArenaBufferAllocatorD1Ev+0x28>)
 80106f4:	b083      	sub	sp, #12
 80106f6:	681b      	ldr	r3, [r3, #0]
 80106f8:	9301      	str	r3, [sp, #4]
 80106fa:	f04f 0300 	mov.w	r3, #0
 80106fe:	4b06      	ldr	r3, [pc, #24]	; (8010718 <_ZThn4_N6tflite26SingleArenaBufferAllocatorD1Ev+0x28>)
 8010700:	681a      	ldr	r2, [r3, #0]
 8010702:	9b01      	ldr	r3, [sp, #4]
 8010704:	405a      	eors	r2, r3
 8010706:	f04f 0300 	mov.w	r3, #0
 801070a:	d103      	bne.n	8010714 <_ZThn4_N6tflite26SingleArenaBufferAllocatorD1Ev+0x24>
 801070c:	3804      	subs	r0, #4
 801070e:	b003      	add	sp, #12
 8010710:	f85d fb04 	ldr.w	pc, [sp], #4
 8010714:	f00d f912 	bl	801d93c <__stack_chk_fail>
 8010718:	20011294 	.word	0x20011294

0801071c <_ZThn4_NK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv>:
 801071c:	b500      	push	{lr}
 801071e:	4b0a      	ldr	r3, [pc, #40]	; (8010748 <_ZThn4_NK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv+0x2c>)
 8010720:	b083      	sub	sp, #12
 8010722:	681b      	ldr	r3, [r3, #0]
 8010724:	9301      	str	r3, [sp, #4]
 8010726:	f04f 0300 	mov.w	r3, #0
 801072a:	6883      	ldr	r3, [r0, #8]
 801072c:	6900      	ldr	r0, [r0, #16]
 801072e:	1a18      	subs	r0, r3, r0
 8010730:	4b05      	ldr	r3, [pc, #20]	; (8010748 <_ZThn4_NK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv+0x2c>)
 8010732:	681a      	ldr	r2, [r3, #0]
 8010734:	9b01      	ldr	r3, [sp, #4]
 8010736:	405a      	eors	r2, r3
 8010738:	f04f 0300 	mov.w	r3, #0
 801073c:	d102      	bne.n	8010744 <_ZThn4_NK6tflite26SingleArenaBufferAllocator22GetPersistentUsedBytesEv+0x28>
 801073e:	b003      	add	sp, #12
 8010740:	f85d fb04 	ldr.w	pc, [sp], #4
 8010744:	f00d f8fa 	bl	801d93c <__stack_chk_fail>
 8010748:	20011294 	.word	0x20011294

0801074c <_ZThn4_N6tflite26SingleArenaBufferAllocatorD0Ev>:
 801074c:	b500      	push	{lr}
 801074e:	b085      	sub	sp, #20
 8010750:	4b0b      	ldr	r3, [pc, #44]	; (8010780 <_ZThn4_N6tflite26SingleArenaBufferAllocatorD0Ev+0x34>)
 8010752:	3804      	subs	r0, #4
 8010754:	9001      	str	r0, [sp, #4]
 8010756:	2124      	movs	r1, #36	; 0x24
 8010758:	681b      	ldr	r3, [r3, #0]
 801075a:	9303      	str	r3, [sp, #12]
 801075c:	f04f 0300 	mov.w	r3, #0
 8010760:	f00a fa82 	bl	801ac68 <_ZdlPvj>
 8010764:	4b06      	ldr	r3, [pc, #24]	; (8010780 <_ZThn4_N6tflite26SingleArenaBufferAllocatorD0Ev+0x34>)
 8010766:	9801      	ldr	r0, [sp, #4]
 8010768:	681a      	ldr	r2, [r3, #0]
 801076a:	9b03      	ldr	r3, [sp, #12]
 801076c:	405a      	eors	r2, r3
 801076e:	f04f 0300 	mov.w	r3, #0
 8010772:	d102      	bne.n	801077a <_ZThn4_N6tflite26SingleArenaBufferAllocatorD0Ev+0x2e>
 8010774:	b005      	add	sp, #20
 8010776:	f85d fb04 	ldr.w	pc, [sp], #4
 801077a:	f00d f8df 	bl	801d93c <__stack_chk_fail>
 801077e:	bf00      	nop
 8010780:	20011294 	.word	0x20011294

08010784 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv>:
 8010784:	b510      	push	{r4, lr}
 8010786:	6803      	ldr	r3, [r0, #0]
 8010788:	4a15      	ldr	r2, [pc, #84]	; (80107e0 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x5c>)
 801078a:	691b      	ldr	r3, [r3, #16]
 801078c:	4915      	ldr	r1, [pc, #84]	; (80107e4 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x60>)
 801078e:	b082      	sub	sp, #8
 8010790:	4293      	cmp	r3, r2
 8010792:	4604      	mov	r4, r0
 8010794:	6809      	ldr	r1, [r1, #0]
 8010796:	9101      	str	r1, [sp, #4]
 8010798:	f04f 0100 	mov.w	r1, #0
 801079c:	d11a      	bne.n	80107d4 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x50>
 801079e:	e9d0 2107 	ldrd	r2, r1, [r0, #28]
 80107a2:	b961      	cbnz	r1, 80107be <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x3a>
 80107a4:	b95a      	cbnz	r2, 80107be <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x3a>
 80107a6:	6923      	ldr	r3, [r4, #16]
 80107a8:	61a3      	str	r3, [r4, #24]
 80107aa:	2000      	movs	r0, #0
 80107ac:	4b0d      	ldr	r3, [pc, #52]	; (80107e4 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x60>)
 80107ae:	681a      	ldr	r2, [r3, #0]
 80107b0:	9b01      	ldr	r3, [sp, #4]
 80107b2:	405a      	eors	r2, r3
 80107b4:	f04f 0300 	mov.w	r3, #0
 80107b8:	d110      	bne.n	80107dc <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x58>
 80107ba:	b002      	add	sp, #8
 80107bc:	bd10      	pop	{r4, pc}
 80107be:	fab2 f282 	clz	r2, r2
 80107c2:	4809      	ldr	r0, [pc, #36]	; (80107e8 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x64>)
 80107c4:	0952      	lsrs	r2, r2, #5
 80107c6:	f7fd fd23 	bl	800e210 <_Z11MicroPrintfPKcz>
 80107ca:	4808      	ldr	r0, [pc, #32]	; (80107ec <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x68>)
 80107cc:	f7fd fd20 	bl	800e210 <_Z11MicroPrintfPKcz>
 80107d0:	2001      	movs	r0, #1
 80107d2:	e7eb      	b.n	80107ac <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x28>
 80107d4:	4798      	blx	r3
 80107d6:	2800      	cmp	r0, #0
 80107d8:	d1e5      	bne.n	80107a6 <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x22>
 80107da:	e7f6      	b.n	80107ca <_ZN6tflite26SingleArenaBufferAllocator20ResetTempAllocationsEv+0x46>
 80107dc:	f00d f8ae 	bl	801d93c <__stack_chk_fail>
 80107e0:	08010595 	.word	0x08010595
 80107e4:	20011294 	.word	0x20011294
 80107e8:	08027048 	.word	0x08027048
 80107ec:	0802718c 	.word	0x0802718c

080107f0 <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj>:
 80107f0:	b530      	push	{r4, r5, lr}
 80107f2:	4604      	mov	r4, r0
 80107f4:	6900      	ldr	r0, [r0, #16]
 80107f6:	4b11      	ldr	r3, [pc, #68]	; (801083c <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x4c>)
 80107f8:	460d      	mov	r5, r1
 80107fa:	b083      	sub	sp, #12
 80107fc:	4611      	mov	r1, r2
 80107fe:	1b40      	subs	r0, r0, r5
 8010800:	681b      	ldr	r3, [r3, #0]
 8010802:	9301      	str	r3, [sp, #4]
 8010804:	f04f 0300 	mov.w	r3, #0
 8010808:	f7fc f80c 	bl	800c824 <_ZN6tflite16AlignPointerDownEPhj>
 801080c:	68e3      	ldr	r3, [r4, #12]
 801080e:	4298      	cmp	r0, r3
 8010810:	bf28      	it	cs
 8010812:	6120      	strcs	r0, [r4, #16]
 8010814:	d308      	bcc.n	8010828 <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x38>
 8010816:	4b09      	ldr	r3, [pc, #36]	; (801083c <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x4c>)
 8010818:	681a      	ldr	r2, [r3, #0]
 801081a:	9b01      	ldr	r3, [sp, #4]
 801081c:	405a      	eors	r2, r3
 801081e:	f04f 0300 	mov.w	r3, #0
 8010822:	d109      	bne.n	8010838 <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x48>
 8010824:	b003      	add	sp, #12
 8010826:	bd30      	pop	{r4, r5, pc}
 8010828:	1a1b      	subs	r3, r3, r0
 801082a:	1aea      	subs	r2, r5, r3
 801082c:	4804      	ldr	r0, [pc, #16]	; (8010840 <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x50>)
 801082e:	4629      	mov	r1, r5
 8010830:	f7fd fcee 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010834:	2000      	movs	r0, #0
 8010836:	e7ee      	b.n	8010816 <_ZThn4_N6tflite26SingleArenaBufferAllocator24AllocatePersistentBufferEjj+0x26>
 8010838:	f00d f880 	bl	801d93c <__stack_chk_fail>
 801083c:	20011294 	.word	0x20011294
 8010840:	0802708c 	.word	0x0802708c

08010844 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh>:
 8010844:	b570      	push	{r4, r5, r6, lr}
 8010846:	6803      	ldr	r3, [r0, #0]
 8010848:	4a1d      	ldr	r2, [pc, #116]	; (80108c0 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x7c>)
 801084a:	69de      	ldr	r6, [r3, #28]
 801084c:	4b1d      	ldr	r3, [pc, #116]	; (80108c4 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x80>)
 801084e:	b082      	sub	sp, #8
 8010850:	429e      	cmp	r6, r3
 8010852:	6812      	ldr	r2, [r2, #0]
 8010854:	9201      	str	r2, [sp, #4]
 8010856:	f04f 0200 	mov.w	r2, #0
 801085a:	d118      	bne.n	801088e <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x4a>
 801085c:	4604      	mov	r4, r0
 801085e:	460d      	mov	r5, r1
 8010860:	6880      	ldr	r0, [r0, #8]
 8010862:	2101      	movs	r1, #1
 8010864:	f7fb ffc2 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 8010868:	6922      	ldr	r2, [r4, #16]
 801086a:	69a3      	ldr	r3, [r4, #24]
 801086c:	429a      	cmp	r2, r3
 801086e:	d101      	bne.n	8010874 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x30>
 8010870:	4285      	cmp	r5, r0
 8010872:	d01a      	beq.n	80108aa <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x66>
 8010874:	4814      	ldr	r0, [pc, #80]	; (80108c8 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x84>)
 8010876:	f7fd fccb 	bl	800e210 <_Z11MicroPrintfPKcz>
 801087a:	2001      	movs	r0, #1
 801087c:	4b10      	ldr	r3, [pc, #64]	; (80108c0 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x7c>)
 801087e:	681a      	ldr	r2, [r3, #0]
 8010880:	9b01      	ldr	r3, [sp, #4]
 8010882:	405a      	eors	r2, r3
 8010884:	f04f 0300 	mov.w	r3, #0
 8010888:	d117      	bne.n	80108ba <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x76>
 801088a:	b002      	add	sp, #8
 801088c:	bd70      	pop	{r4, r5, r6, pc}
 801088e:	4b0c      	ldr	r3, [pc, #48]	; (80108c0 <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x7c>)
 8010890:	681a      	ldr	r2, [r3, #0]
 8010892:	9b01      	ldr	r3, [sp, #4]
 8010894:	405a      	eors	r2, r3
 8010896:	f04f 0300 	mov.w	r3, #0
 801089a:	d10e      	bne.n	80108ba <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x76>
 801089c:	2301      	movs	r3, #1
 801089e:	2200      	movs	r2, #0
 80108a0:	46b4      	mov	ip, r6
 80108a2:	b002      	add	sp, #8
 80108a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108a8:	4760      	bx	ip
 80108aa:	68a0      	ldr	r0, [r4, #8]
 80108ac:	2101      	movs	r1, #1
 80108ae:	f7fb ff9d 	bl	800c7ec <_ZN6tflite14AlignPointerUpEPhj>
 80108b2:	6120      	str	r0, [r4, #16]
 80108b4:	61a0      	str	r0, [r4, #24]
 80108b6:	2000      	movs	r0, #0
 80108b8:	e7e0      	b.n	801087c <_ZN6tflite26SingleArenaBufferAllocator25DeallocateResizableBufferEPh+0x38>
 80108ba:	f00d f83f 	bl	801d93c <__stack_chk_fail>
 80108be:	bf00      	nop
 80108c0:	20011294 	.word	0x20011294
 80108c4:	08010675 	.word	0x08010675
 80108c8:	080270d8 	.word	0x080270d8

080108cc <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj>:
 80108cc:	b530      	push	{r4, r5, lr}
 80108ce:	4b1a      	ldr	r3, [pc, #104]	; (8010938 <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x6c>)
 80108d0:	b083      	sub	sp, #12
 80108d2:	681b      	ldr	r3, [r3, #0]
 80108d4:	9301      	str	r3, [sp, #4]
 80108d6:	f04f 0300 	mov.w	r3, #0
 80108da:	b350      	cbz	r0, 8010932 <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x66>
 80108dc:	1845      	adds	r5, r0, r1
 80108de:	4604      	mov	r4, r0
 80108e0:	2104      	movs	r1, #4
 80108e2:	f1a5 0024 	sub.w	r0, r5, #36	; 0x24
 80108e6:	f7fb ff9d 	bl	800c824 <_ZN6tflite16AlignPointerDownEPhj>
 80108ea:	4284      	cmp	r4, r0
 80108ec:	d816      	bhi.n	801091c <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x50>
 80108ee:	4a13      	ldr	r2, [pc, #76]	; (801093c <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x70>)
 80108f0:	6002      	str	r2, [r0, #0]
 80108f2:	3244      	adds	r2, #68	; 0x44
 80108f4:	6042      	str	r2, [r0, #4]
 80108f6:	2200      	movs	r2, #0
 80108f8:	e9c0 4004 	strd	r4, r0, [r0, #16]
 80108fc:	e9c0 4206 	strd	r4, r2, [r0, #24]
 8010900:	4b0d      	ldr	r3, [pc, #52]	; (8010938 <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x6c>)
 8010902:	60c5      	str	r5, [r0, #12]
 8010904:	6084      	str	r4, [r0, #8]
 8010906:	6202      	str	r2, [r0, #32]
 8010908:	681a      	ldr	r2, [r3, #0]
 801090a:	9b01      	ldr	r3, [sp, #4]
 801090c:	405a      	eors	r2, r3
 801090e:	f04f 0300 	mov.w	r3, #0
 8010912:	d101      	bne.n	8010918 <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x4c>
 8010914:	b003      	add	sp, #12
 8010916:	bd30      	pop	{r4, r5, pc}
 8010918:	f00d f810 	bl	801d93c <__stack_chk_fail>
 801091c:	1a23      	subs	r3, r4, r0
 801091e:	f1c3 0224 	rsb	r2, r3, #36	; 0x24
 8010922:	4807      	ldr	r0, [pc, #28]	; (8010940 <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x74>)
 8010924:	2124      	movs	r1, #36	; 0x24
 8010926:	f7fd fc73 	bl	800e210 <_Z11MicroPrintfPKcz>
 801092a:	2300      	movs	r3, #0
 801092c:	4a03      	ldr	r2, [pc, #12]	; (801093c <_ZN6tflite26SingleArenaBufferAllocator6CreateEPhj+0x70>)
 801092e:	601a      	str	r2, [r3, #0]
 8010930:	deff      	udf	#255	; 0xff
 8010932:	f00c f83d 	bl	801c9b0 <abort>
 8010936:	bf00      	nop
 8010938:	20011294 	.word	0x20011294
 801093c:	08027224 	.word	0x08027224
 8010940:	0802708c 	.word	0x0802708c

08010944 <_ZNK6tflite19GreedyMemoryPlanner21preserves_all_tensorsEv>:
 8010944:	b500      	push	{lr}
 8010946:	4b09      	ldr	r3, [pc, #36]	; (801096c <_ZNK6tflite19GreedyMemoryPlanner21preserves_all_tensorsEv+0x28>)
 8010948:	b083      	sub	sp, #12
 801094a:	681b      	ldr	r3, [r3, #0]
 801094c:	9301      	str	r3, [sp, #4]
 801094e:	f04f 0300 	mov.w	r3, #0
 8010952:	4b06      	ldr	r3, [pc, #24]	; (801096c <_ZNK6tflite19GreedyMemoryPlanner21preserves_all_tensorsEv+0x28>)
 8010954:	681a      	ldr	r2, [r3, #0]
 8010956:	9b01      	ldr	r3, [sp, #4]
 8010958:	405a      	eors	r2, r3
 801095a:	f04f 0300 	mov.w	r3, #0
 801095e:	d103      	bne.n	8010968 <_ZNK6tflite19GreedyMemoryPlanner21preserves_all_tensorsEv+0x24>
 8010960:	2000      	movs	r0, #0
 8010962:	b003      	add	sp, #12
 8010964:	f85d fb04 	ldr.w	pc, [sp], #4
 8010968:	f00c ffe8 	bl	801d93c <__stack_chk_fail>
 801096c:	20011294 	.word	0x20011294

08010970 <_ZN6tflite19GreedyMemoryPlanner4InitEPhi>:
 8010970:	2301      	movs	r3, #1
 8010972:	b510      	push	{r4, lr}
 8010974:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8010978:	f103 33cc 	add.w	r3, r3, #3435973836	; 0xcccccccc
 801097c:	fba3 3202 	umull	r3, r2, r3, r2
 8010980:	0952      	lsrs	r2, r2, #5
 8010982:	60c1      	str	r1, [r0, #12]
 8010984:	eb01 1102 	add.w	r1, r1, r2, lsl #4
 8010988:	eb01 0382 	add.w	r3, r1, r2, lsl #2
 801098c:	e9c0 1304 	strd	r1, r3, [r0, #16]
 8010990:	6042      	str	r2, [r0, #4]
 8010992:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8010996:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801099a:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 801099e:	6183      	str	r3, [r0, #24]
 80109a0:	2400      	movs	r4, #0
 80109a2:	4b0a      	ldr	r3, [pc, #40]	; (80109cc <_ZN6tflite19GreedyMemoryPlanner4InitEPhi+0x5c>)
 80109a4:	6084      	str	r4, [r0, #8]
 80109a6:	b082      	sub	sp, #8
 80109a8:	6242      	str	r2, [r0, #36]	; 0x24
 80109aa:	681b      	ldr	r3, [r3, #0]
 80109ac:	9301      	str	r3, [sp, #4]
 80109ae:	f04f 0300 	mov.w	r3, #0
 80109b2:	4b06      	ldr	r3, [pc, #24]	; (80109cc <_ZN6tflite19GreedyMemoryPlanner4InitEPhi+0x5c>)
 80109b4:	681a      	ldr	r2, [r3, #0]
 80109b6:	9b01      	ldr	r3, [sp, #4]
 80109b8:	405a      	eors	r2, r3
 80109ba:	f04f 0300 	mov.w	r3, #0
 80109be:	d102      	bne.n	80109c6 <_ZN6tflite19GreedyMemoryPlanner4InitEPhi+0x56>
 80109c0:	4620      	mov	r0, r4
 80109c2:	b002      	add	sp, #8
 80109c4:	bd10      	pop	{r4, pc}
 80109c6:	f00c ffb9 	bl	801d93c <__stack_chk_fail>
 80109ca:	bf00      	nop
 80109cc:	20011294 	.word	0x20011294

080109d0 <_ZN6tflite19GreedyMemoryPlannerD1Ev>:
 80109d0:	b500      	push	{lr}
 80109d2:	4b09      	ldr	r3, [pc, #36]	; (80109f8 <_ZN6tflite19GreedyMemoryPlannerD1Ev+0x28>)
 80109d4:	b083      	sub	sp, #12
 80109d6:	681b      	ldr	r3, [r3, #0]
 80109d8:	9301      	str	r3, [sp, #4]
 80109da:	f04f 0300 	mov.w	r3, #0
 80109de:	4b06      	ldr	r3, [pc, #24]	; (80109f8 <_ZN6tflite19GreedyMemoryPlannerD1Ev+0x28>)
 80109e0:	681a      	ldr	r2, [r3, #0]
 80109e2:	9b01      	ldr	r3, [sp, #4]
 80109e4:	405a      	eors	r2, r3
 80109e6:	f04f 0300 	mov.w	r3, #0
 80109ea:	d102      	bne.n	80109f2 <_ZN6tflite19GreedyMemoryPlannerD1Ev+0x22>
 80109ec:	b003      	add	sp, #12
 80109ee:	f85d fb04 	ldr.w	pc, [sp], #4
 80109f2:	f00c ffa3 	bl	801d93c <__stack_chk_fail>
 80109f6:	bf00      	nop
 80109f8:	20011294 	.word	0x20011294

080109fc <_ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv>:
 80109fc:	b500      	push	{lr}
 80109fe:	4b09      	ldr	r3, [pc, #36]	; (8010a24 <_ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv+0x28>)
 8010a00:	6880      	ldr	r0, [r0, #8]
 8010a02:	b083      	sub	sp, #12
 8010a04:	681b      	ldr	r3, [r3, #0]
 8010a06:	9301      	str	r3, [sp, #4]
 8010a08:	f04f 0300 	mov.w	r3, #0
 8010a0c:	4b05      	ldr	r3, [pc, #20]	; (8010a24 <_ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv+0x28>)
 8010a0e:	681a      	ldr	r2, [r3, #0]
 8010a10:	9b01      	ldr	r3, [sp, #4]
 8010a12:	405a      	eors	r2, r3
 8010a14:	f04f 0300 	mov.w	r3, #0
 8010a18:	d102      	bne.n	8010a20 <_ZN6tflite19GreedyMemoryPlanner14GetBufferCountEv+0x24>
 8010a1a:	b003      	add	sp, #12
 8010a1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010a20:	f00c ff8c 	bl	801d93c <__stack_chk_fail>
 8010a24:	20011294 	.word	0x20011294

08010a28 <_ZN6tflite19GreedyMemoryPlannerD0Ev>:
 8010a28:	b510      	push	{r4, lr}
 8010a2a:	4b0b      	ldr	r3, [pc, #44]	; (8010a58 <_ZN6tflite19GreedyMemoryPlannerD0Ev+0x30>)
 8010a2c:	b082      	sub	sp, #8
 8010a2e:	212c      	movs	r1, #44	; 0x2c
 8010a30:	681b      	ldr	r3, [r3, #0]
 8010a32:	9301      	str	r3, [sp, #4]
 8010a34:	f04f 0300 	mov.w	r3, #0
 8010a38:	4604      	mov	r4, r0
 8010a3a:	f00a f915 	bl	801ac68 <_ZdlPvj>
 8010a3e:	4b06      	ldr	r3, [pc, #24]	; (8010a58 <_ZN6tflite19GreedyMemoryPlannerD0Ev+0x30>)
 8010a40:	681a      	ldr	r2, [r3, #0]
 8010a42:	9b01      	ldr	r3, [sp, #4]
 8010a44:	405a      	eors	r2, r3
 8010a46:	f04f 0300 	mov.w	r3, #0
 8010a4a:	d102      	bne.n	8010a52 <_ZN6tflite19GreedyMemoryPlannerD0Ev+0x2a>
 8010a4c:	4620      	mov	r0, r4
 8010a4e:	b002      	add	sp, #8
 8010a50:	bd10      	pop	{r4, pc}
 8010a52:	f00c ff73 	bl	801d93c <__stack_chk_fail>
 8010a56:	bf00      	nop
 8010a58:	20011294 	.word	0x20011294

08010a5c <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii>:
 8010a5c:	b530      	push	{r4, r5, lr}
 8010a5e:	4d16      	ldr	r5, [pc, #88]	; (8010ab8 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii+0x5c>)
 8010a60:	6884      	ldr	r4, [r0, #8]
 8010a62:	b083      	sub	sp, #12
 8010a64:	682d      	ldr	r5, [r5, #0]
 8010a66:	9501      	str	r5, [sp, #4]
 8010a68:	f04f 0500 	mov.w	r5, #0
 8010a6c:	6845      	ldr	r5, [r0, #4]
 8010a6e:	42ac      	cmp	r4, r5
 8010a70:	da1a      	bge.n	8010aa8 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii+0x4c>
 8010a72:	68c5      	ldr	r5, [r0, #12]
 8010a74:	ea4f 1c04 	mov.w	ip, r4, lsl #4
 8010a78:	f845 100c 	str.w	r1, [r5, ip]
 8010a7c:	eb05 1104 	add.w	r1, r5, r4, lsl #4
 8010a80:	3401      	adds	r4, #1
 8010a82:	608a      	str	r2, [r1, #8]
 8010a84:	60cb      	str	r3, [r1, #12]
 8010a86:	f04f 32ff 	mov.w	r2, #4294967295
 8010a8a:	2301      	movs	r3, #1
 8010a8c:	604a      	str	r2, [r1, #4]
 8010a8e:	6084      	str	r4, [r0, #8]
 8010a90:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8010a94:	2000      	movs	r0, #0
 8010a96:	4b08      	ldr	r3, [pc, #32]	; (8010ab8 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii+0x5c>)
 8010a98:	681a      	ldr	r2, [r3, #0]
 8010a9a:	9b01      	ldr	r3, [sp, #4]
 8010a9c:	405a      	eors	r2, r3
 8010a9e:	f04f 0300 	mov.w	r3, #0
 8010aa2:	d107      	bne.n	8010ab4 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii+0x58>
 8010aa4:	b003      	add	sp, #12
 8010aa6:	bd30      	pop	{r4, r5, pc}
 8010aa8:	4804      	ldr	r0, [pc, #16]	; (8010abc <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii+0x60>)
 8010aaa:	4629      	mov	r1, r5
 8010aac:	f7fd fbb0 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010ab0:	2001      	movs	r0, #1
 8010ab2:	e7f0      	b.n	8010a96 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiii+0x3a>
 8010ab4:	f00c ff42 	bl	801d93c <__stack_chk_fail>
 8010ab8:	20011294 	.word	0x20011294
 8010abc:	08027278 	.word	0x08027278

08010ac0 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii>:
 8010ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ac4:	4c1d      	ldr	r4, [pc, #116]	; (8010b3c <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x7c>)
 8010ac6:	f8df a07c 	ldr.w	sl, [pc, #124]	; 8010b44 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x84>
 8010aca:	b085      	sub	sp, #20
 8010acc:	6824      	ldr	r4, [r4, #0]
 8010ace:	9403      	str	r4, [sp, #12]
 8010ad0:	f04f 0400 	mov.w	r4, #0
 8010ad4:	6804      	ldr	r4, [r0, #0]
 8010ad6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8010ad8:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8010adc:	9701      	str	r7, [sp, #4]
 8010ade:	e9d0 4e02 	ldrd	r4, lr, [r0, #8]
 8010ae2:	45d0      	cmp	r8, sl
 8010ae4:	eb0e 1704 	add.w	r7, lr, r4, lsl #4
 8010ae8:	d11b      	bne.n	8010b22 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x62>
 8010aea:	460e      	mov	r6, r1
 8010aec:	6841      	ldr	r1, [r0, #4]
 8010aee:	428c      	cmp	r4, r1
 8010af0:	da1c      	bge.n	8010b2c <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x6c>
 8010af2:	ea4f 1b04 	mov.w	fp, r4, lsl #4
 8010af6:	3401      	adds	r4, #1
 8010af8:	f84e 600b 	str.w	r6, [lr, fp]
 8010afc:	60fb      	str	r3, [r7, #12]
 8010afe:	2301      	movs	r3, #1
 8010b00:	60ba      	str	r2, [r7, #8]
 8010b02:	6084      	str	r4, [r0, #8]
 8010b04:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8010b08:	9b01      	ldr	r3, [sp, #4]
 8010b0a:	607b      	str	r3, [r7, #4]
 8010b0c:	2000      	movs	r0, #0
 8010b0e:	4b0b      	ldr	r3, [pc, #44]	; (8010b3c <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x7c>)
 8010b10:	681a      	ldr	r2, [r3, #0]
 8010b12:	9b03      	ldr	r3, [sp, #12]
 8010b14:	405a      	eors	r2, r3
 8010b16:	f04f 0300 	mov.w	r3, #0
 8010b1a:	d10c      	bne.n	8010b36 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x76>
 8010b1c:	b005      	add	sp, #20
 8010b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b22:	47c0      	blx	r8
 8010b24:	2800      	cmp	r0, #0
 8010b26:	d0ef      	beq.n	8010b08 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x48>
 8010b28:	2001      	movs	r0, #1
 8010b2a:	e7f0      	b.n	8010b0e <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x4e>
 8010b2c:	4804      	ldr	r0, [pc, #16]	; (8010b40 <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x80>)
 8010b2e:	f7fd fb6f 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010b32:	2001      	movs	r0, #1
 8010b34:	e7eb      	b.n	8010b0e <_ZN6tflite19GreedyMemoryPlanner9AddBufferEiiii+0x4e>
 8010b36:	f00c ff01 	bl	801d93c <__stack_chk_fail>
 8010b3a:	bf00      	nop
 8010b3c:	20011294 	.word	0x20011294
 8010b40:	08027278 	.word	0x08027278
 8010b44:	08010a5d 	.word	0x08010a5d

08010b48 <_ZN6tflite18ReverseSortInPlaceEPiS0_i>:
 8010b48:	b570      	push	{r4, r5, r6, lr}
 8010b4a:	4b16      	ldr	r3, [pc, #88]	; (8010ba4 <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x5c>)
 8010b4c:	b082      	sub	sp, #8
 8010b4e:	f1a0 0e04 	sub.w	lr, r0, #4
 8010b52:	eb0e 0e82 	add.w	lr, lr, r2, lsl #2
 8010b56:	681b      	ldr	r3, [r3, #0]
 8010b58:	9301      	str	r3, [sp, #4]
 8010b5a:	f04f 0300 	mov.w	r3, #0
 8010b5e:	2a01      	cmp	r2, #1
 8010b60:	dd14      	ble.n	8010b8c <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x44>
 8010b62:	468c      	mov	ip, r1
 8010b64:	4603      	mov	r3, r0
 8010b66:	2600      	movs	r6, #0
 8010b68:	681c      	ldr	r4, [r3, #0]
 8010b6a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8010b6e:	42ac      	cmp	r4, r5
 8010b70:	da06      	bge.n	8010b80 <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x38>
 8010b72:	e943 5401 	strd	r5, r4, [r3, #-4]
 8010b76:	e9dc 4500 	ldrd	r4, r5, [ip]
 8010b7a:	e9cc 5400 	strd	r5, r4, [ip]
 8010b7e:	2601      	movs	r6, #1
 8010b80:	4573      	cmp	r3, lr
 8010b82:	f10c 0c04 	add.w	ip, ip, #4
 8010b86:	d1ef      	bne.n	8010b68 <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x20>
 8010b88:	2e00      	cmp	r6, #0
 8010b8a:	d1e8      	bne.n	8010b5e <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x16>
 8010b8c:	4b05      	ldr	r3, [pc, #20]	; (8010ba4 <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x5c>)
 8010b8e:	681a      	ldr	r2, [r3, #0]
 8010b90:	9b01      	ldr	r3, [sp, #4]
 8010b92:	405a      	eors	r2, r3
 8010b94:	f04f 0300 	mov.w	r3, #0
 8010b98:	d101      	bne.n	8010b9e <_ZN6tflite18ReverseSortInPlaceEPiS0_i+0x56>
 8010b9a:	b002      	add	sp, #8
 8010b9c:	bd70      	pop	{r4, r5, r6, pc}
 8010b9e:	f00c fecd 	bl	801d93c <__stack_chk_fail>
 8010ba2:	bf00      	nop
 8010ba4:	20011294 	.word	0x20011294

08010ba8 <_ZN6tflite19GreedyMemoryPlannerC1Ev>:
 8010ba8:	b500      	push	{lr}
 8010baa:	4b0a      	ldr	r3, [pc, #40]	; (8010bd4 <_ZN6tflite19GreedyMemoryPlannerC1Ev+0x2c>)
 8010bac:	6003      	str	r3, [r0, #0]
 8010bae:	4b0a      	ldr	r3, [pc, #40]	; (8010bd8 <_ZN6tflite19GreedyMemoryPlannerC1Ev+0x30>)
 8010bb0:	b083      	sub	sp, #12
 8010bb2:	681b      	ldr	r3, [r3, #0]
 8010bb4:	9301      	str	r3, [sp, #4]
 8010bb6:	f04f 0300 	mov.w	r3, #0
 8010bba:	4b07      	ldr	r3, [pc, #28]	; (8010bd8 <_ZN6tflite19GreedyMemoryPlannerC1Ev+0x30>)
 8010bbc:	681a      	ldr	r2, [r3, #0]
 8010bbe:	9b01      	ldr	r3, [sp, #4]
 8010bc0:	405a      	eors	r2, r3
 8010bc2:	f04f 0300 	mov.w	r3, #0
 8010bc6:	d102      	bne.n	8010bce <_ZN6tflite19GreedyMemoryPlannerC1Ev+0x26>
 8010bc8:	b003      	add	sp, #12
 8010bca:	f85d fb04 	ldr.w	pc, [sp], #4
 8010bce:	f00c feb5 	bl	801d93c <__stack_chk_fail>
 8010bd2:	bf00      	nop
 8010bd4:	08027370 	.word	0x08027370
 8010bd8:	20011294 	.word	0x20011294

08010bdc <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii>:
 8010bdc:	b570      	push	{r4, r5, r6, lr}
 8010bde:	4684      	mov	ip, r0
 8010be0:	4819      	ldr	r0, [pc, #100]	; (8010c48 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x6c>)
 8010be2:	b082      	sub	sp, #8
 8010be4:	6800      	ldr	r0, [r0, #0]
 8010be6:	9001      	str	r0, [sp, #4]
 8010be8:	f04f 0000 	mov.w	r0, #0
 8010bec:	b321      	cbz	r1, 8010c38 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x5c>
 8010bee:	6889      	ldr	r1, [r1, #8]
 8010bf0:	1c48      	adds	r0, r1, #1
 8010bf2:	d024      	beq.n	8010c3e <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x62>
 8010bf4:	f8dc 4018 	ldr.w	r4, [ip, #24]
 8010bf8:	f8dc 500c 	ldr.w	r5, [ip, #12]
 8010bfc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8010c00:	eb04 0081 	add.w	r0, r4, r1, lsl #2
 8010c04:	6841      	ldr	r1, [r0, #4]
 8010c06:	eb05 1101 	add.w	r1, r5, r1, lsl #4
 8010c0a:	688e      	ldr	r6, [r1, #8]
 8010c0c:	42b3      	cmp	r3, r6
 8010c0e:	db0b      	blt.n	8010c28 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x4c>
 8010c10:	68c9      	ldr	r1, [r1, #12]
 8010c12:	428a      	cmp	r2, r1
 8010c14:	dc08      	bgt.n	8010c28 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x4c>
 8010c16:	4b0c      	ldr	r3, [pc, #48]	; (8010c48 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x6c>)
 8010c18:	681a      	ldr	r2, [r3, #0]
 8010c1a:	9b01      	ldr	r3, [sp, #4]
 8010c1c:	405a      	eors	r2, r3
 8010c1e:	f04f 0300 	mov.w	r3, #0
 8010c22:	d10e      	bne.n	8010c42 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x66>
 8010c24:	b002      	add	sp, #8
 8010c26:	bd70      	pop	{r4, r5, r6, pc}
 8010c28:	6880      	ldr	r0, [r0, #8]
 8010c2a:	1c41      	adds	r1, r0, #1
 8010c2c:	d007      	beq.n	8010c3e <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x62>
 8010c2e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8010c32:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 8010c36:	e7e5      	b.n	8010c04 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x28>
 8010c38:	f8dc 1020 	ldr.w	r1, [ip, #32]
 8010c3c:	e7da      	b.n	8010bf4 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x18>
 8010c3e:	2000      	movs	r0, #0
 8010c40:	e7e9      	b.n	8010c16 <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii+0x3a>
 8010c42:	f00c fe7b 	bl	801d93c <__stack_chk_fail>
 8010c46:	bf00      	nop
 8010c48:	20011294 	.word	0x20011294

08010c4c <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv>:
 8010c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c50:	4b7c      	ldr	r3, [pc, #496]	; (8010e44 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1f8>)
 8010c52:	b08d      	sub	sp, #52	; 0x34
 8010c54:	681b      	ldr	r3, [r3, #0]
 8010c56:	930b      	str	r3, [sp, #44]	; 0x2c
 8010c58:	f04f 0300 	mov.w	r3, #0
 8010c5c:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8010c60:	2b00      	cmp	r3, #0
 8010c62:	f000 80a0 	beq.w	8010da6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x15a>
 8010c66:	6882      	ldr	r2, [r0, #8]
 8010c68:	2a00      	cmp	r2, #0
 8010c6a:	4605      	mov	r5, r0
 8010c6c:	f000 809b 	beq.w	8010da6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x15a>
 8010c70:	f04f 0300 	mov.w	r3, #0
 8010c74:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8010c78:	f340 80df 	ble.w	8010e3a <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1ee>
 8010c7c:	e9d0 e003 	ldrd	lr, r0, [r0, #12]
 8010c80:	6969      	ldr	r1, [r5, #20]
 8010c82:	f8d5 8024 	ldr.w	r8, [r5, #36]	; 0x24
 8010c86:	461c      	mov	r4, r3
 8010c88:	461e      	mov	r6, r3
 8010c8a:	f10e 0c04 	add.w	ip, lr, #4
 8010c8e:	4689      	mov	r9, r1
 8010c90:	e011      	b.n	8010cb6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x6a>
 8010c92:	f85e 7023 	ldr.w	r7, [lr, r3, lsl #2]
 8010c96:	f840 7026 	str.w	r7, [r0, r6, lsl #2]
 8010c9a:	f849 4026 	str.w	r4, [r9, r6, lsl #2]
 8010c9e:	f85c 7023 	ldr.w	r7, [ip, r3, lsl #2]
 8010ca2:	f848 7003 	str.w	r7, [r8, r3]
 8010ca6:	68af      	ldr	r7, [r5, #8]
 8010ca8:	3401      	adds	r4, #1
 8010caa:	42a7      	cmp	r7, r4
 8010cac:	f106 0601 	add.w	r6, r6, #1
 8010cb0:	f103 0304 	add.w	r3, r3, #4
 8010cb4:	dd12      	ble.n	8010cdc <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x90>
 8010cb6:	f85c 7023 	ldr.w	r7, [ip, r3, lsl #2]
 8010cba:	1c79      	adds	r1, r7, #1
 8010cbc:	d1e9      	bne.n	8010c92 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x46>
 8010cbe:	3a01      	subs	r2, #1
 8010cc0:	f85e 1023 	ldr.w	r1, [lr, r3, lsl #2]
 8010cc4:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8010cc8:	f849 4022 	str.w	r4, [r9, r2, lsl #2]
 8010ccc:	f848 7003 	str.w	r7, [r8, r3]
 8010cd0:	68af      	ldr	r7, [r5, #8]
 8010cd2:	3401      	adds	r4, #1
 8010cd4:	42a7      	cmp	r7, r4
 8010cd6:	f103 0304 	add.w	r3, r3, #4
 8010cda:	dcec      	bgt.n	8010cb6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x6a>
 8010cdc:	eb00 0086 	add.w	r0, r0, r6, lsl #2
 8010ce0:	eb09 0186 	add.w	r1, r9, r6, lsl #2
 8010ce4:	1bba      	subs	r2, r7, r6
 8010ce6:	f7ff ff2f 	bl	8010b48 <_ZN6tflite18ReverseSortInPlaceEPiS0_i>
 8010cea:	e9d5 1605 	ldrd	r1, r6, [r5, #20]
 8010cee:	2201      	movs	r2, #1
 8010cf0:	2300      	movs	r3, #0
 8010cf2:	e9c5 2307 	strd	r2, r3, [r5, #28]
 8010cf6:	f04f 32ff 	mov.w	r2, #4294967295
 8010cfa:	60b2      	str	r2, [r6, #8]
 8010cfc:	680a      	ldr	r2, [r1, #0]
 8010cfe:	f8d5 b00c 	ldr.w	fp, [r5, #12]
 8010d02:	6072      	str	r2, [r6, #4]
 8010d04:	eb0b 1002 	add.w	r0, fp, r2, lsl #4
 8010d08:	6840      	ldr	r0, [r0, #4]
 8010d0a:	3001      	adds	r0, #1
 8010d0c:	f000 8090 	beq.w	8010e30 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1e4>
 8010d10:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8010d12:	9303      	str	r3, [sp, #12]
 8010d14:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010d18:	6033      	str	r3, [r6, #0]
 8010d1a:	68ab      	ldr	r3, [r5, #8]
 8010d1c:	2b01      	cmp	r3, #1
 8010d1e:	dd42      	ble.n	8010da6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x15a>
 8010d20:	9101      	str	r1, [sp, #4]
 8010d22:	46b2      	mov	sl, r6
 8010d24:	f04f 0901 	mov.w	r9, #1
 8010d28:	f8cd b008 	str.w	fp, [sp, #8]
 8010d2c:	e008      	b.n	8010d40 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0xf4>
 8010d2e:	6a2b      	ldr	r3, [r5, #32]
 8010d30:	608b      	str	r3, [r1, #8]
 8010d32:	468a      	mov	sl, r1
 8010d34:	622f      	str	r7, [r5, #32]
 8010d36:	68ab      	ldr	r3, [r5, #8]
 8010d38:	f109 0901 	add.w	r9, r9, #1
 8010d3c:	454b      	cmp	r3, r9
 8010d3e:	dd32      	ble.n	8010da6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x15a>
 8010d40:	9b01      	ldr	r3, [sp, #4]
 8010d42:	f853 8f04 	ldr.w	r8, [r3, #4]!
 8010d46:	9301      	str	r3, [sp, #4]
 8010d48:	9b02      	ldr	r3, [sp, #8]
 8010d4a:	eb03 1308 	add.w	r3, r3, r8, lsl #4
 8010d4e:	ea4f 1208 	mov.w	r2, r8, lsl #4
 8010d52:	685c      	ldr	r4, [r3, #4]
 8010d54:	1c61      	adds	r1, r4, #1
 8010d56:	d030      	beq.n	8010dba <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x16e>
 8010d58:	9b03      	ldr	r3, [sp, #12]
 8010d5a:	f843 4028 	str.w	r4, [r3, r8, lsl #2]
 8010d5e:	69ef      	ldr	r7, [r5, #28]
 8010d60:	eb07 0147 	add.w	r1, r7, r7, lsl #1
 8010d64:	1c7b      	adds	r3, r7, #1
 8010d66:	f846 4021 	str.w	r4, [r6, r1, lsl #2]
 8010d6a:	eb06 0181 	add.w	r1, r6, r1, lsl #2
 8010d6e:	f8c1 8004 	str.w	r8, [r1, #4]
 8010d72:	61eb      	str	r3, [r5, #28]
 8010d74:	f8da 3000 	ldr.w	r3, [sl]
 8010d78:	42a3      	cmp	r3, r4
 8010d7a:	dcd8      	bgt.n	8010d2e <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0xe2>
 8010d7c:	4650      	mov	r0, sl
 8010d7e:	e008      	b.n	8010d92 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x146>
 8010d80:	eb03 0243 	add.w	r2, r3, r3, lsl #1
 8010d84:	eb06 0c82 	add.w	ip, r6, r2, lsl #2
 8010d88:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8010d8c:	42a2      	cmp	r2, r4
 8010d8e:	dc4c      	bgt.n	8010e2a <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1de>
 8010d90:	4660      	mov	r0, ip
 8010d92:	6883      	ldr	r3, [r0, #8]
 8010d94:	1c5a      	adds	r2, r3, #1
 8010d96:	d1f3      	bne.n	8010d80 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x134>
 8010d98:	6087      	str	r7, [r0, #8]
 8010d9a:	608b      	str	r3, [r1, #8]
 8010d9c:	68ab      	ldr	r3, [r5, #8]
 8010d9e:	f109 0901 	add.w	r9, r9, #1
 8010da2:	454b      	cmp	r3, r9
 8010da4:	dccc      	bgt.n	8010d40 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0xf4>
 8010da6:	4b27      	ldr	r3, [pc, #156]	; (8010e44 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1f8>)
 8010da8:	681a      	ldr	r2, [r3, #0]
 8010daa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010dac:	405a      	eors	r2, r3
 8010dae:	f04f 0300 	mov.w	r3, #0
 8010db2:	d145      	bne.n	8010e40 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1f4>
 8010db4:	b00d      	add	sp, #52	; 0x34
 8010db6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010dba:	9902      	ldr	r1, [sp, #8]
 8010dbc:	588a      	ldr	r2, [r1, r2]
 8010dbe:	9204      	str	r2, [sp, #16]
 8010dc0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8010dc4:	2100      	movs	r1, #0
 8010dc6:	4628      	mov	r0, r5
 8010dc8:	e9cd 3205 	strd	r3, r2, [sp, #20]
 8010dcc:	f7ff ff06 	bl	8010bdc <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii>
 8010dd0:	9a06      	ldr	r2, [sp, #24]
 8010dd2:	9b05      	ldr	r3, [sp, #20]
 8010dd4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8010dd8:	4607      	mov	r7, r0
 8010dda:	e9cd 6a07 	strd	r6, sl, [sp, #28]
 8010dde:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8010de2:	f8dd a008 	ldr.w	sl, [sp, #8]
 8010de6:	f8cd 9010 	str.w	r9, [sp, #16]
 8010dea:	2400      	movs	r4, #0
 8010dec:	4693      	mov	fp, r2
 8010dee:	4699      	mov	r9, r3
 8010df0:	b1a7      	cbz	r7, 8010e1c <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1d0>
 8010df2:	683e      	ldr	r6, [r7, #0]
 8010df4:	1b32      	subs	r2, r6, r4
 8010df6:	4590      	cmp	r8, r2
 8010df8:	dd10      	ble.n	8010e1c <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1d0>
 8010dfa:	4639      	mov	r1, r7
 8010dfc:	465a      	mov	r2, fp
 8010dfe:	464b      	mov	r3, r9
 8010e00:	4628      	mov	r0, r5
 8010e02:	f7ff feeb 	bl	8010bdc <_ZN6tflite19GreedyMemoryPlanner30NextSimultaneouslyActiveBufferEPKNS0_9ListEntryEii>
 8010e06:	687a      	ldr	r2, [r7, #4]
 8010e08:	0112      	lsls	r2, r2, #4
 8010e0a:	4607      	mov	r7, r0
 8010e0c:	f85a 2002 	ldr.w	r2, [sl, r2]
 8010e10:	4416      	add	r6, r2
 8010e12:	42b4      	cmp	r4, r6
 8010e14:	bfb8      	it	lt
 8010e16:	4634      	movlt	r4, r6
 8010e18:	2f00      	cmp	r7, #0
 8010e1a:	d1ea      	bne.n	8010df2 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x1a6>
 8010e1c:	e9dd 6a07 	ldrd	r6, sl, [sp, #28]
 8010e20:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 8010e24:	f8dd 9010 	ldr.w	r9, [sp, #16]
 8010e28:	e796      	b.n	8010d58 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x10c>
 8010e2a:	608b      	str	r3, [r1, #8]
 8010e2c:	6087      	str	r7, [r0, #8]
 8010e2e:	e782      	b.n	8010d36 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0xea>
 8010e30:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8010e32:	9003      	str	r0, [sp, #12]
 8010e34:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8010e38:	e76e      	b.n	8010d18 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0xcc>
 8010e3a:	e9d0 0104 	ldrd	r0, r1, [r0, #16]
 8010e3e:	e752      	b.n	8010ce6 <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv+0x9a>
 8010e40:	f00c fd7c 	bl	801d93c <__stack_chk_fail>
 8010e44:	20011294 	.word	0x20011294

08010e48 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv>:
 8010e48:	b570      	push	{r4, r5, r6, lr}
 8010e4a:	4b19      	ldr	r3, [pc, #100]	; (8010eb0 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x68>)
 8010e4c:	4605      	mov	r5, r0
 8010e4e:	b082      	sub	sp, #8
 8010e50:	681b      	ldr	r3, [r3, #0]
 8010e52:	9301      	str	r3, [sp, #4]
 8010e54:	f04f 0300 	mov.w	r3, #0
 8010e58:	f7ff fef8 	bl	8010c4c <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv>
 8010e5c:	68a8      	ldr	r0, [r5, #8]
 8010e5e:	b1c8      	cbz	r0, 8010e94 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x4c>
 8010e60:	6a2b      	ldr	r3, [r5, #32]
 8010e62:	69ac      	ldr	r4, [r5, #24]
 8010e64:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010e68:	eb14 0383 	adds.w	r3, r4, r3, lsl #2
 8010e6c:	d01b      	beq.n	8010ea6 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x5e>
 8010e6e:	68ee      	ldr	r6, [r5, #12]
 8010e70:	2000      	movs	r0, #0
 8010e72:	e004      	b.n	8010e7e <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x36>
 8010e74:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010e78:	eb14 0383 	adds.w	r3, r4, r3, lsl #2
 8010e7c:	d00a      	beq.n	8010e94 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x4c>
 8010e7e:	e9d3 5100 	ldrd	r5, r1, [r3]
 8010e82:	0109      	lsls	r1, r1, #4
 8010e84:	689b      	ldr	r3, [r3, #8]
 8010e86:	5872      	ldr	r2, [r6, r1]
 8010e88:	442a      	add	r2, r5
 8010e8a:	4290      	cmp	r0, r2
 8010e8c:	bf38      	it	cc
 8010e8e:	4610      	movcc	r0, r2
 8010e90:	1c5a      	adds	r2, r3, #1
 8010e92:	d1ef      	bne.n	8010e74 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x2c>
 8010e94:	4b06      	ldr	r3, [pc, #24]	; (8010eb0 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x68>)
 8010e96:	681a      	ldr	r2, [r3, #0]
 8010e98:	9b01      	ldr	r3, [sp, #4]
 8010e9a:	405a      	eors	r2, r3
 8010e9c:	f04f 0300 	mov.w	r3, #0
 8010ea0:	d103      	bne.n	8010eaa <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x62>
 8010ea2:	b002      	add	sp, #8
 8010ea4:	bd70      	pop	{r4, r5, r6, pc}
 8010ea6:	4618      	mov	r0, r3
 8010ea8:	e7f4      	b.n	8010e94 <_ZN6tflite19GreedyMemoryPlanner20GetMaximumMemorySizeEv+0x4c>
 8010eaa:	f00c fd47 	bl	801d93c <__stack_chk_fail>
 8010eae:	bf00      	nop
 8010eb0:	20011294 	.word	0x20011294

08010eb4 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv>:
 8010eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010eb8:	4b6f      	ldr	r3, [pc, #444]	; (8011078 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1c4>)
 8010eba:	4606      	mov	r6, r0
 8010ebc:	b09d      	sub	sp, #116	; 0x74
 8010ebe:	681b      	ldr	r3, [r3, #0]
 8010ec0:	931b      	str	r3, [sp, #108]	; 0x6c
 8010ec2:	f04f 0300 	mov.w	r3, #0
 8010ec6:	f7ff fec1 	bl	8010c4c <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv>
 8010eca:	f8d6 8008 	ldr.w	r8, [r6, #8]
 8010ece:	f1b8 0f00 	cmp.w	r8, #0
 8010ed2:	f340 80ca 	ble.w	801106a <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1b6>
 8010ed6:	4d69      	ldr	r5, [pc, #420]	; (801107c <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1c8>)
 8010ed8:	2400      	movs	r4, #0
 8010eda:	e01c      	b.n	8010f16 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x62>
 8010edc:	2c23      	cmp	r4, #35	; 0x23
 8010ede:	dd20      	ble.n	8010f22 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x6e>
 8010ee0:	2c3d      	cmp	r4, #61	; 0x3d
 8010ee2:	bfda      	itte	le
 8010ee4:	f104 011d 	addle.w	r1, r4, #29
 8010ee8:	b2c9      	uxtble	r1, r1
 8010eea:	212a      	movgt	r1, #42	; 0x2a
 8010eec:	68f3      	ldr	r3, [r6, #12]
 8010eee:	0120      	lsls	r0, r4, #4
 8010ef0:	eb03 1204 	add.w	r2, r3, r4, lsl #4
 8010ef4:	581b      	ldr	r3, [r3, r0]
 8010ef6:	68d0      	ldr	r0, [r2, #12]
 8010ef8:	9002      	str	r0, [sp, #8]
 8010efa:	6890      	ldr	r0, [r2, #8]
 8010efc:	6a72      	ldr	r2, [r6, #36]	; 0x24
 8010efe:	9001      	str	r0, [sp, #4]
 8010f00:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
 8010f04:	9000      	str	r0, [sp, #0]
 8010f06:	4622      	mov	r2, r4
 8010f08:	4628      	mov	r0, r5
 8010f0a:	f7fd f981 	bl	800e210 <_Z11MicroPrintfPKcz>
 8010f0e:	68b3      	ldr	r3, [r6, #8]
 8010f10:	3401      	adds	r4, #1
 8010f12:	42a3      	cmp	r3, r4
 8010f14:	dd09      	ble.n	8010f2a <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x76>
 8010f16:	2c09      	cmp	r4, #9
 8010f18:	dce0      	bgt.n	8010edc <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x28>
 8010f1a:	f104 0130 	add.w	r1, r4, #48	; 0x30
 8010f1e:	b2c9      	uxtb	r1, r1
 8010f20:	e7e4      	b.n	8010eec <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x38>
 8010f22:	f104 0157 	add.w	r1, r4, #87	; 0x57
 8010f26:	b2c9      	uxtb	r1, r1
 8010f28:	e7e0      	b.n	8010eec <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x38>
 8010f2a:	2b00      	cmp	r3, #0
 8010f2c:	4698      	mov	r8, r3
 8010f2e:	f340 809c 	ble.w	801106a <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1b6>
 8010f32:	6a70      	ldr	r0, [r6, #36]	; 0x24
 8010f34:	68f3      	ldr	r3, [r6, #12]
 8010f36:	3804      	subs	r0, #4
 8010f38:	eb00 0588 	add.w	r5, r0, r8, lsl #2
 8010f3c:	2100      	movs	r1, #0
 8010f3e:	2750      	movs	r7, #80	; 0x50
 8010f40:	46ac      	mov	ip, r5
 8010f42:	681a      	ldr	r2, [r3, #0]
 8010f44:	f850 5f04 	ldr.w	r5, [r0, #4]!
 8010f48:	68dc      	ldr	r4, [r3, #12]
 8010f4a:	442a      	add	r2, r5
 8010f4c:	4297      	cmp	r7, r2
 8010f4e:	bfb8      	it	lt
 8010f50:	4617      	movlt	r7, r2
 8010f52:	42a1      	cmp	r1, r4
 8010f54:	bfb8      	it	lt
 8010f56:	4621      	movlt	r1, r4
 8010f58:	4560      	cmp	r0, ip
 8010f5a:	f103 0310 	add.w	r3, r3, #16
 8010f5e:	d1f0      	bne.n	8010f42 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x8e>
 8010f60:	9105      	str	r1, [sp, #20]
 8010f62:	2400      	movs	r4, #0
 8010f64:	2521      	movs	r5, #33	; 0x21
 8010f66:	2250      	movs	r2, #80	; 0x50
 8010f68:	212e      	movs	r1, #46	; 0x2e
 8010f6a:	a806      	add	r0, sp, #24
 8010f6c:	f00b fdba 	bl	801cae4 <memset>
 8010f70:	f1b8 0f00 	cmp.w	r8, #0
 8010f74:	dd77      	ble.n	8011066 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1b2>
 8010f76:	2200      	movs	r2, #0
 8010f78:	f8d6 c00c 	ldr.w	ip, [r6, #12]
 8010f7c:	4696      	mov	lr, r2
 8010f7e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8010f82:	42a3      	cmp	r3, r4
 8010f84:	dc3d      	bgt.n	8011002 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14e>
 8010f86:	f8dc 300c 	ldr.w	r3, [ip, #12]
 8010f8a:	42a3      	cmp	r3, r4
 8010f8c:	db39      	blt.n	8011002 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14e>
 8010f8e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8010f90:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010f94:	1c59      	adds	r1, r3, #1
 8010f96:	d034      	beq.n	8011002 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14e>
 8010f98:	f8dc 1000 	ldr.w	r1, [ip]
 8010f9c:	448e      	add	lr, r1
 8010f9e:	4419      	add	r1, r3
 8010fa0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8010fa4:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8010fa8:	011b      	lsls	r3, r3, #4
 8010faa:	0109      	lsls	r1, r1, #4
 8010fac:	fb93 f3f7 	sdiv	r3, r3, r7
 8010fb0:	fb91 f1f7 	sdiv	r1, r1, r7
 8010fb4:	428b      	cmp	r3, r1
 8010fb6:	da24      	bge.n	8011002 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14e>
 8010fb8:	a806      	add	r0, sp, #24
 8010fba:	3b01      	subs	r3, #1
 8010fbc:	4403      	add	r3, r0
 8010fbe:	f102 091d 	add.w	r9, r2, #29
 8010fc2:	f10d 0017 	add.w	r0, sp, #23
 8010fc6:	f102 0b57 	add.w	fp, r2, #87	; 0x57
 8010fca:	f102 0a30 	add.w	sl, r2, #48	; 0x30
 8010fce:	4401      	add	r1, r0
 8010fd0:	fa5f f989 	uxtb.w	r9, r9
 8010fd4:	fa5f fb8b 	uxtb.w	fp, fp
 8010fd8:	fa5f fa8a 	uxtb.w	sl, sl
 8010fdc:	e002      	b.n	8010fe4 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x130>
 8010fde:	4299      	cmp	r1, r3
 8010fe0:	701d      	strb	r5, [r3, #0]
 8010fe2:	d00e      	beq.n	8011002 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14e>
 8010fe4:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010fe8:	282e      	cmp	r0, #46	; 0x2e
 8010fea:	d1f8      	bne.n	8010fde <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x12a>
 8010fec:	2a09      	cmp	r2, #9
 8010fee:	dd2a      	ble.n	8011046 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x192>
 8010ff0:	2a23      	cmp	r2, #35	; 0x23
 8010ff2:	dd2b      	ble.n	801104c <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x198>
 8010ff4:	2a3d      	cmp	r2, #61	; 0x3d
 8010ff6:	bfd4      	ite	le
 8010ff8:	4648      	movle	r0, r9
 8010ffa:	202a      	movgt	r0, #42	; 0x2a
 8010ffc:	7018      	strb	r0, [r3, #0]
 8010ffe:	4299      	cmp	r1, r3
 8011000:	d1f0      	bne.n	8010fe4 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x130>
 8011002:	3201      	adds	r2, #1
 8011004:	4542      	cmp	r2, r8
 8011006:	f10c 0c10 	add.w	ip, ip, #16
 801100a:	d1b8      	bne.n	8010f7e <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0xca>
 801100c:	f20e 33ff 	addw	r3, lr, #1023	; 0x3ff
 8011010:	2b00      	cmp	r3, #0
 8011012:	bfb8      	it	lt
 8011014:	f20e 73fe 	addwlt	r3, lr, #2046	; 0x7fe
 8011018:	129b      	asrs	r3, r3, #10
 801101a:	4819      	ldr	r0, [pc, #100]	; (8011080 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1cc>)
 801101c:	4919      	ldr	r1, [pc, #100]	; (8011084 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1d0>)
 801101e:	9300      	str	r3, [sp, #0]
 8011020:	2c09      	cmp	r4, #9
 8011022:	bfd8      	it	le
 8011024:	4601      	movle	r1, r0
 8011026:	4622      	mov	r2, r4
 8011028:	f04f 0c00 	mov.w	ip, #0
 801102c:	ab06      	add	r3, sp, #24
 801102e:	4816      	ldr	r0, [pc, #88]	; (8011088 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1d4>)
 8011030:	f88d c068 	strb.w	ip, [sp, #104]	; 0x68
 8011034:	f7fd f8ec 	bl	800e210 <_Z11MicroPrintfPKcz>
 8011038:	9b05      	ldr	r3, [sp, #20]
 801103a:	3401      	adds	r4, #1
 801103c:	429c      	cmp	r4, r3
 801103e:	dc08      	bgt.n	8011052 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x19e>
 8011040:	f8d6 8008 	ldr.w	r8, [r6, #8]
 8011044:	e78f      	b.n	8010f66 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0xb2>
 8011046:	4650      	mov	r0, sl
 8011048:	7018      	strb	r0, [r3, #0]
 801104a:	e7d8      	b.n	8010ffe <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14a>
 801104c:	4658      	mov	r0, fp
 801104e:	7018      	strb	r0, [r3, #0]
 8011050:	e7d5      	b.n	8010ffe <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x14a>
 8011052:	4b09      	ldr	r3, [pc, #36]	; (8011078 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1c4>)
 8011054:	681a      	ldr	r2, [r3, #0]
 8011056:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8011058:	405a      	eors	r2, r3
 801105a:	f04f 0300 	mov.w	r3, #0
 801105e:	d108      	bne.n	8011072 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x1be>
 8011060:	b01d      	add	sp, #116	; 0x74
 8011062:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011066:	2300      	movs	r3, #0
 8011068:	e7d7      	b.n	801101a <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0x166>
 801106a:	2300      	movs	r3, #0
 801106c:	9305      	str	r3, [sp, #20]
 801106e:	2750      	movs	r7, #80	; 0x50
 8011070:	e777      	b.n	8010f62 <_ZN6tflite19GreedyMemoryPlanner15PrintMemoryPlanEv+0xae>
 8011072:	f00c fc63 	bl	801d93c <__stack_chk_fail>
 8011076:	bf00      	nop
 8011078:	20011294 	.word	0x20011294
 801107c:	0802729c 	.word	0x0802729c
 8011080:	08027298 	.word	0x08027298
 8011084:	08024730 	.word	0x08024730
 8011088:	080272d8 	.word	0x080272d8

0801108c <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi>:
 801108c:	b570      	push	{r4, r5, r6, lr}
 801108e:	4b13      	ldr	r3, [pc, #76]	; (80110dc <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x50>)
 8011090:	b082      	sub	sp, #8
 8011092:	460c      	mov	r4, r1
 8011094:	4605      	mov	r5, r0
 8011096:	4616      	mov	r6, r2
 8011098:	681b      	ldr	r3, [r3, #0]
 801109a:	9301      	str	r3, [sp, #4]
 801109c:	f04f 0300 	mov.w	r3, #0
 80110a0:	f7ff fdd4 	bl	8010c4c <_ZN6tflite19GreedyMemoryPlanner24CalculateOffsetsIfNeededEv>
 80110a4:	2c00      	cmp	r4, #0
 80110a6:	68aa      	ldr	r2, [r5, #8]
 80110a8:	db0f      	blt.n	80110ca <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x3e>
 80110aa:	42a2      	cmp	r2, r4
 80110ac:	dd0d      	ble.n	80110ca <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x3e>
 80110ae:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80110b0:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80110b4:	6033      	str	r3, [r6, #0]
 80110b6:	2000      	movs	r0, #0
 80110b8:	4b08      	ldr	r3, [pc, #32]	; (80110dc <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x50>)
 80110ba:	681a      	ldr	r2, [r3, #0]
 80110bc:	9b01      	ldr	r3, [sp, #4]
 80110be:	405a      	eors	r2, r3
 80110c0:	f04f 0300 	mov.w	r3, #0
 80110c4:	d107      	bne.n	80110d6 <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x4a>
 80110c6:	b002      	add	sp, #8
 80110c8:	bd70      	pop	{r4, r5, r6, pc}
 80110ca:	4805      	ldr	r0, [pc, #20]	; (80110e0 <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x54>)
 80110cc:	4621      	mov	r1, r4
 80110ce:	f7fd f89f 	bl	800e210 <_Z11MicroPrintfPKcz>
 80110d2:	2001      	movs	r0, #1
 80110d4:	e7f0      	b.n	80110b8 <_ZN6tflite19GreedyMemoryPlanner18GetOffsetForBufferEiPi+0x2c>
 80110d6:	f00c fc31 	bl	801d93c <__stack_chk_fail>
 80110da:	bf00      	nop
 80110dc:	20011294 	.word	0x20011294
 80110e0:	080272e8 	.word	0x080272e8

080110e4 <_ZN6tflite18MicroMemoryPlanner15PrintMemoryPlanEv>:
 80110e4:	b500      	push	{lr}
 80110e6:	4b09      	ldr	r3, [pc, #36]	; (801110c <_ZN6tflite18MicroMemoryPlanner15PrintMemoryPlanEv+0x28>)
 80110e8:	b083      	sub	sp, #12
 80110ea:	681b      	ldr	r3, [r3, #0]
 80110ec:	9301      	str	r3, [sp, #4]
 80110ee:	f04f 0300 	mov.w	r3, #0
 80110f2:	4b06      	ldr	r3, [pc, #24]	; (801110c <_ZN6tflite18MicroMemoryPlanner15PrintMemoryPlanEv+0x28>)
 80110f4:	681a      	ldr	r2, [r3, #0]
 80110f6:	9b01      	ldr	r3, [sp, #4]
 80110f8:	405a      	eors	r2, r3
 80110fa:	f04f 0300 	mov.w	r3, #0
 80110fe:	d102      	bne.n	8011106 <_ZN6tflite18MicroMemoryPlanner15PrintMemoryPlanEv+0x22>
 8011100:	b003      	add	sp, #12
 8011102:	f85d fb04 	ldr.w	pc, [sp], #4
 8011106:	f00c fc19 	bl	801d93c <__stack_chk_fail>
 801110a:	bf00      	nop
 801110c:	20011294 	.word	0x20011294

08011110 <_ZNK6tflite19LinearMemoryPlanner21preserves_all_tensorsEv>:
 8011110:	b500      	push	{lr}
 8011112:	4b09      	ldr	r3, [pc, #36]	; (8011138 <_ZNK6tflite19LinearMemoryPlanner21preserves_all_tensorsEv+0x28>)
 8011114:	b083      	sub	sp, #12
 8011116:	681b      	ldr	r3, [r3, #0]
 8011118:	9301      	str	r3, [sp, #4]
 801111a:	f04f 0300 	mov.w	r3, #0
 801111e:	4b06      	ldr	r3, [pc, #24]	; (8011138 <_ZNK6tflite19LinearMemoryPlanner21preserves_all_tensorsEv+0x28>)
 8011120:	681a      	ldr	r2, [r3, #0]
 8011122:	9b01      	ldr	r3, [sp, #4]
 8011124:	405a      	eors	r2, r3
 8011126:	f04f 0300 	mov.w	r3, #0
 801112a:	d103      	bne.n	8011134 <_ZNK6tflite19LinearMemoryPlanner21preserves_all_tensorsEv+0x24>
 801112c:	2001      	movs	r0, #1
 801112e:	b003      	add	sp, #12
 8011130:	f85d fb04 	ldr.w	pc, [sp], #4
 8011134:	f00c fc02 	bl	801d93c <__stack_chk_fail>
 8011138:	20011294 	.word	0x20011294

0801113c <_ZN6tflite19LinearMemoryPlannerD1Ev>:
 801113c:	b500      	push	{lr}
 801113e:	4b09      	ldr	r3, [pc, #36]	; (8011164 <_ZN6tflite19LinearMemoryPlannerD1Ev+0x28>)
 8011140:	b083      	sub	sp, #12
 8011142:	681b      	ldr	r3, [r3, #0]
 8011144:	9301      	str	r3, [sp, #4]
 8011146:	f04f 0300 	mov.w	r3, #0
 801114a:	4b06      	ldr	r3, [pc, #24]	; (8011164 <_ZN6tflite19LinearMemoryPlannerD1Ev+0x28>)
 801114c:	681a      	ldr	r2, [r3, #0]
 801114e:	9b01      	ldr	r3, [sp, #4]
 8011150:	405a      	eors	r2, r3
 8011152:	f04f 0300 	mov.w	r3, #0
 8011156:	d102      	bne.n	801115e <_ZN6tflite19LinearMemoryPlannerD1Ev+0x22>
 8011158:	b003      	add	sp, #12
 801115a:	f85d fb04 	ldr.w	pc, [sp], #4
 801115e:	f00c fbed 	bl	801d93c <__stack_chk_fail>
 8011162:	bf00      	nop
 8011164:	20011294 	.word	0x20011294

08011168 <_ZN6tflite19LinearMemoryPlanner20GetMaximumMemorySizeEv>:
 8011168:	b500      	push	{lr}
 801116a:	4b0a      	ldr	r3, [pc, #40]	; (8011194 <_ZN6tflite19LinearMemoryPlanner20GetMaximumMemorySizeEv+0x2c>)
 801116c:	b083      	sub	sp, #12
 801116e:	681b      	ldr	r3, [r3, #0]
 8011170:	9301      	str	r3, [sp, #4]
 8011172:	f04f 0300 	mov.w	r3, #0
 8011176:	4b07      	ldr	r3, [pc, #28]	; (8011194 <_ZN6tflite19LinearMemoryPlanner20GetMaximumMemorySizeEv+0x2c>)
 8011178:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 801117c:	681a      	ldr	r2, [r3, #0]
 801117e:	9b01      	ldr	r3, [sp, #4]
 8011180:	405a      	eors	r2, r3
 8011182:	f04f 0300 	mov.w	r3, #0
 8011186:	6880      	ldr	r0, [r0, #8]
 8011188:	d102      	bne.n	8011190 <_ZN6tflite19LinearMemoryPlanner20GetMaximumMemorySizeEv+0x28>
 801118a:	b003      	add	sp, #12
 801118c:	f85d fb04 	ldr.w	pc, [sp], #4
 8011190:	f00c fbd4 	bl	801d93c <__stack_chk_fail>
 8011194:	20011294 	.word	0x20011294

08011198 <_ZN6tflite19LinearMemoryPlanner14GetBufferCountEv>:
 8011198:	b500      	push	{lr}
 801119a:	4b0a      	ldr	r3, [pc, #40]	; (80111c4 <_ZN6tflite19LinearMemoryPlanner14GetBufferCountEv+0x2c>)
 801119c:	b083      	sub	sp, #12
 801119e:	681b      	ldr	r3, [r3, #0]
 80111a0:	9301      	str	r3, [sp, #4]
 80111a2:	f04f 0300 	mov.w	r3, #0
 80111a6:	4b07      	ldr	r3, [pc, #28]	; (80111c4 <_ZN6tflite19LinearMemoryPlanner14GetBufferCountEv+0x2c>)
 80111a8:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 80111ac:	681a      	ldr	r2, [r3, #0]
 80111ae:	9b01      	ldr	r3, [sp, #4]
 80111b0:	405a      	eors	r2, r3
 80111b2:	f04f 0300 	mov.w	r3, #0
 80111b6:	6840      	ldr	r0, [r0, #4]
 80111b8:	d102      	bne.n	80111c0 <_ZN6tflite19LinearMemoryPlanner14GetBufferCountEv+0x28>
 80111ba:	b003      	add	sp, #12
 80111bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80111c0:	f00c fbbc 	bl	801d93c <__stack_chk_fail>
 80111c4:	20011294 	.word	0x20011294

080111c8 <_ZN6tflite19LinearMemoryPlannerD0Ev>:
 80111c8:	b510      	push	{r4, lr}
 80111ca:	4b0b      	ldr	r3, [pc, #44]	; (80111f8 <_ZN6tflite19LinearMemoryPlannerD0Ev+0x30>)
 80111cc:	b082      	sub	sp, #8
 80111ce:	f241 010c 	movw	r1, #4108	; 0x100c
 80111d2:	681b      	ldr	r3, [r3, #0]
 80111d4:	9301      	str	r3, [sp, #4]
 80111d6:	f04f 0300 	mov.w	r3, #0
 80111da:	4604      	mov	r4, r0
 80111dc:	f009 fd44 	bl	801ac68 <_ZdlPvj>
 80111e0:	4b05      	ldr	r3, [pc, #20]	; (80111f8 <_ZN6tflite19LinearMemoryPlannerD0Ev+0x30>)
 80111e2:	681a      	ldr	r2, [r3, #0]
 80111e4:	9b01      	ldr	r3, [sp, #4]
 80111e6:	405a      	eors	r2, r3
 80111e8:	f04f 0300 	mov.w	r3, #0
 80111ec:	d102      	bne.n	80111f4 <_ZN6tflite19LinearMemoryPlannerD0Ev+0x2c>
 80111ee:	4620      	mov	r0, r4
 80111f0:	b002      	add	sp, #8
 80111f2:	bd10      	pop	{r4, pc}
 80111f4:	f00c fba2 	bl	801d93c <__stack_chk_fail>
 80111f8:	20011294 	.word	0x20011294

080111fc <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii>:
 80111fc:	b510      	push	{r4, lr}
 80111fe:	f500 5280 	add.w	r2, r0, #4096	; 0x1000
 8011202:	4c12      	ldr	r4, [pc, #72]	; (801124c <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii+0x50>)
 8011204:	6853      	ldr	r3, [r2, #4]
 8011206:	b082      	sub	sp, #8
 8011208:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801120c:	6824      	ldr	r4, [r4, #0]
 801120e:	9401      	str	r4, [sp, #4]
 8011210:	f04f 0400 	mov.w	r4, #0
 8011214:	da11      	bge.n	801123a <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii+0x3e>
 8011216:	6894      	ldr	r4, [r2, #8]
 8011218:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 801121c:	4421      	add	r1, r4
 801121e:	3301      	adds	r3, #1
 8011220:	6044      	str	r4, [r0, #4]
 8011222:	e9c2 3101 	strd	r3, r1, [r2, #4]
 8011226:	2000      	movs	r0, #0
 8011228:	4b08      	ldr	r3, [pc, #32]	; (801124c <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii+0x50>)
 801122a:	681a      	ldr	r2, [r3, #0]
 801122c:	9b01      	ldr	r3, [sp, #4]
 801122e:	405a      	eors	r2, r3
 8011230:	f04f 0300 	mov.w	r3, #0
 8011234:	d108      	bne.n	8011248 <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii+0x4c>
 8011236:	b002      	add	sp, #8
 8011238:	bd10      	pop	{r4, pc}
 801123a:	4805      	ldr	r0, [pc, #20]	; (8011250 <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii+0x54>)
 801123c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011240:	f7fc ffe6 	bl	800e210 <_Z11MicroPrintfPKcz>
 8011244:	2001      	movs	r0, #1
 8011246:	e7ef      	b.n	8011228 <_ZN6tflite19LinearMemoryPlanner9AddBufferEiii+0x2c>
 8011248:	f00c fb78 	bl	801d93c <__stack_chk_fail>
 801124c:	20011294 	.word	0x20011294
 8011250:	08027278 	.word	0x08027278

08011254 <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi>:
 8011254:	b500      	push	{lr}
 8011256:	4b13      	ldr	r3, [pc, #76]	; (80112a4 <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x50>)
 8011258:	b083      	sub	sp, #12
 801125a:	2900      	cmp	r1, #0
 801125c:	681b      	ldr	r3, [r3, #0]
 801125e:	9301      	str	r3, [sp, #4]
 8011260:	f04f 0300 	mov.w	r3, #0
 8011264:	db13      	blt.n	801128e <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x3a>
 8011266:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 801126a:	685b      	ldr	r3, [r3, #4]
 801126c:	428b      	cmp	r3, r1
 801126e:	dd11      	ble.n	8011294 <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x40>
 8011270:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8011274:	2000      	movs	r0, #0
 8011276:	684b      	ldr	r3, [r1, #4]
 8011278:	6013      	str	r3, [r2, #0]
 801127a:	4b0a      	ldr	r3, [pc, #40]	; (80112a4 <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x50>)
 801127c:	681a      	ldr	r2, [r3, #0]
 801127e:	9b01      	ldr	r3, [sp, #4]
 8011280:	405a      	eors	r2, r3
 8011282:	f04f 0300 	mov.w	r3, #0
 8011286:	d10b      	bne.n	80112a0 <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x4c>
 8011288:	b003      	add	sp, #12
 801128a:	f85d fb04 	ldr.w	pc, [sp], #4
 801128e:	f500 5080 	add.w	r0, r0, #4096	; 0x1000
 8011292:	6843      	ldr	r3, [r0, #4]
 8011294:	4804      	ldr	r0, [pc, #16]	; (80112a8 <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x54>)
 8011296:	461a      	mov	r2, r3
 8011298:	f7fc ffba 	bl	800e210 <_Z11MicroPrintfPKcz>
 801129c:	2001      	movs	r0, #1
 801129e:	e7ec      	b.n	801127a <_ZN6tflite19LinearMemoryPlanner18GetOffsetForBufferEiPi+0x26>
 80112a0:	f00c fb4c 	bl	801d93c <__stack_chk_fail>
 80112a4:	20011294 	.word	0x20011294
 80112a8:	080272e8 	.word	0x080272e8

080112ac <_ZN6tflite19LinearMemoryPlannerC1Ev>:
 80112ac:	b510      	push	{r4, lr}
 80112ae:	4b0c      	ldr	r3, [pc, #48]	; (80112e0 <_ZN6tflite19LinearMemoryPlannerC1Ev+0x34>)
 80112b0:	4c0c      	ldr	r4, [pc, #48]	; (80112e4 <_ZN6tflite19LinearMemoryPlannerC1Ev+0x38>)
 80112b2:	6004      	str	r4, [r0, #0]
 80112b4:	b082      	sub	sp, #8
 80112b6:	f500 5280 	add.w	r2, r0, #4096	; 0x1000
 80112ba:	2100      	movs	r1, #0
 80112bc:	681b      	ldr	r3, [r3, #0]
 80112be:	9301      	str	r3, [sp, #4]
 80112c0:	f04f 0300 	mov.w	r3, #0
 80112c4:	e9c2 1101 	strd	r1, r1, [r2, #4]
 80112c8:	4b05      	ldr	r3, [pc, #20]	; (80112e0 <_ZN6tflite19LinearMemoryPlannerC1Ev+0x34>)
 80112ca:	681a      	ldr	r2, [r3, #0]
 80112cc:	9b01      	ldr	r3, [sp, #4]
 80112ce:	405a      	eors	r2, r3
 80112d0:	f04f 0300 	mov.w	r3, #0
 80112d4:	d101      	bne.n	80112da <_ZN6tflite19LinearMemoryPlannerC1Ev+0x2e>
 80112d6:	b002      	add	sp, #8
 80112d8:	bd10      	pop	{r4, pc}
 80112da:	f00c fb2f 	bl	801d93c <__stack_chk_fail>
 80112de:	bf00      	nop
 80112e0:	20011294 	.word	0x20011294
 80112e4:	080273cc 	.word	0x080273cc

080112e8 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>:
 80112e8:	b500      	push	{lr}
 80112ea:	f8df c028 	ldr.w	ip, [pc, #40]	; 8011314 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x2c>
 80112ee:	4b06      	ldr	r3, [pc, #24]	; (8011308 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x20>)
 80112f0:	4a06      	ldr	r2, [pc, #24]	; (801130c <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x24>)
 80112f2:	4807      	ldr	r0, [pc, #28]	; (8011310 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0+0x28>)
 80112f4:	b083      	sub	sp, #12
 80112f6:	21b0      	movs	r1, #176	; 0xb0
 80112f8:	f8dc c000 	ldr.w	ip, [ip]
 80112fc:	f8cd c004 	str.w	ip, [sp, #4]
 8011300:	f04f 0c00 	mov.w	ip, #0
 8011304:	f00b fb5c 	bl	801c9c0 <__assert_func>
 8011308:	08024734 	.word	0x08024734
 801130c:	08025dd0 	.word	0x08025dd0
 8011310:	08024804 	.word	0x08024804
 8011314:	20011294 	.word	0x20011294

08011318 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi>:
 8011318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801131c:	6802      	ldr	r2, [r0, #0]
 801131e:	4b3f      	ldr	r3, [pc, #252]	; (801141c <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0x104>)
 8011320:	b084      	sub	sp, #16
 8011322:	681b      	ldr	r3, [r3, #0]
 8011324:	9303      	str	r3, [sp, #12]
 8011326:	f04f 0300 	mov.w	r3, #0
 801132a:	6813      	ldr	r3, [r2, #0]
 801132c:	1ad3      	subs	r3, r2, r3
 801132e:	460d      	mov	r5, r1
 8011330:	8819      	ldrh	r1, [r3, #0]
 8011332:	2908      	cmp	r1, #8
 8011334:	d944      	bls.n	80113c0 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xa8>
 8011336:	891b      	ldrh	r3, [r3, #8]
 8011338:	2b00      	cmp	r3, #0
 801133a:	d041      	beq.n	80113c0 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xa8>
 801133c:	18d1      	adds	r1, r2, r3
 801133e:	58d3      	ldr	r3, [r2, r3]
 8011340:	4604      	mov	r4, r0
 8011342:	6840      	ldr	r0, [r0, #4]
 8011344:	58c9      	ldr	r1, [r1, r3]
 8011346:	6803      	ldr	r3, [r0, #0]
 8011348:	0089      	lsls	r1, r1, #2
 801134a:	9101      	str	r1, [sp, #4]
 801134c:	689b      	ldr	r3, [r3, #8]
 801134e:	2204      	movs	r2, #4
 8011350:	4798      	blx	r3
 8011352:	9901      	ldr	r1, [sp, #4]
 8011354:	6120      	str	r0, [r4, #16]
 8011356:	2800      	cmp	r0, #0
 8011358:	d052      	beq.n	8011400 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xe8>
 801135a:	6826      	ldr	r6, [r4, #0]
 801135c:	6837      	ldr	r7, [r6, #0]
 801135e:	1bf7      	subs	r7, r6, r7
 8011360:	f04f 0c00 	mov.w	ip, #0
 8011364:	f8b7 e000 	ldrh.w	lr, [r7]
 8011368:	f1be 0f08 	cmp.w	lr, #8
 801136c:	f1a0 0104 	sub.w	r1, r0, #4
 8011370:	4660      	mov	r0, ip
 8011372:	d925      	bls.n	80113c0 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xa8>
 8011374:	893a      	ldrh	r2, [r7, #8]
 8011376:	b332      	cbz	r2, 80113c6 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xae>
 8011378:	f856 8002 	ldr.w	r8, [r6, r2]
 801137c:	4432      	add	r2, r6
 801137e:	eb02 0308 	add.w	r3, r2, r8
 8011382:	f852 2008 	ldr.w	r2, [r2, r8]
 8011386:	4594      	cmp	ip, r2
 8011388:	d21f      	bcs.n	80113ca <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xb2>
 801138a:	3304      	adds	r3, #4
 801138c:	eb03 028c 	add.w	r2, r3, ip, lsl #2
 8011390:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8011394:	f841 0f04 	str.w	r0, [r1, #4]!
 8011398:	eb02 0803 	add.w	r8, r2, r3
 801139c:	58d3      	ldr	r3, [r2, r3]
 801139e:	eba8 0303 	sub.w	r3, r8, r3
 80113a2:	881a      	ldrh	r2, [r3, #0]
 80113a4:	2a04      	cmp	r2, #4
 80113a6:	d90b      	bls.n	80113c0 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xa8>
 80113a8:	889b      	ldrh	r3, [r3, #4]
 80113aa:	b14b      	cbz	r3, 80113c0 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xa8>
 80113ac:	f858 2003 	ldr.w	r2, [r8, r3]
 80113b0:	4443      	add	r3, r8
 80113b2:	f1be 0f08 	cmp.w	lr, #8
 80113b6:	589b      	ldr	r3, [r3, r2]
 80113b8:	f10c 0c01 	add.w	ip, ip, #1
 80113bc:	4418      	add	r0, r3
 80113be:	d8d9      	bhi.n	8011374 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0x5c>
 80113c0:	2300      	movs	r3, #0
 80113c2:	681b      	ldr	r3, [r3, #0]
 80113c4:	deff      	udf	#255	; 0xff
 80113c6:	6813      	ldr	r3, [r2, #0]
 80113c8:	deff      	udf	#255	; 0xff
 80113ca:	182b      	adds	r3, r5, r0
 80113cc:	e9c4 0005 	strd	r0, r0, [r4, #20]
 80113d0:	6860      	ldr	r0, [r4, #4]
 80113d2:	60e3      	str	r3, [r4, #12]
 80113d4:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 80113d8:	6803      	ldr	r3, [r0, #0]
 80113da:	61e5      	str	r5, [r4, #28]
 80113dc:	00f6      	lsls	r6, r6, #3
 80113de:	689b      	ldr	r3, [r3, #8]
 80113e0:	2204      	movs	r2, #4
 80113e2:	4631      	mov	r1, r6
 80113e4:	4798      	blx	r3
 80113e6:	60a0      	str	r0, [r4, #8]
 80113e8:	b178      	cbz	r0, 801140a <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xf2>
 80113ea:	2000      	movs	r0, #0
 80113ec:	4b0b      	ldr	r3, [pc, #44]	; (801141c <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0x104>)
 80113ee:	681a      	ldr	r2, [r3, #0]
 80113f0:	9b03      	ldr	r3, [sp, #12]
 80113f2:	405a      	eors	r2, r3
 80113f4:	f04f 0300 	mov.w	r3, #0
 80113f8:	d10d      	bne.n	8011416 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xfe>
 80113fa:	b004      	add	sp, #16
 80113fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011400:	4807      	ldr	r0, [pc, #28]	; (8011420 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0x108>)
 8011402:	f7fc ff05 	bl	800e210 <_Z11MicroPrintfPKcz>
 8011406:	2001      	movs	r0, #1
 8011408:	e7f0      	b.n	80113ec <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xd4>
 801140a:	4805      	ldr	r0, [pc, #20]	; (8011420 <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0x108>)
 801140c:	4631      	mov	r1, r6
 801140e:	f7fc feff 	bl	800e210 <_Z11MicroPrintfPKcz>
 8011412:	2001      	movs	r0, #1
 8011414:	e7ea      	b.n	80113ec <_ZN6tflite21AllocationInfoBuilder20CreateAllocationInfoEi+0xd4>
 8011416:	f00c fa91 	bl	801d93c <__stack_chk_fail>
 801141a:	bf00      	nop
 801141c:	20011294 	.word	0x20011294
 8011420:	080273f4 	.word	0x080273f4

08011424 <_ZN6tflite21AllocationInfoBuilder18FreeAllocationInfoEv>:
 8011424:	b510      	push	{r4, lr}
 8011426:	4b0e      	ldr	r3, [pc, #56]	; (8011460 <_ZN6tflite21AllocationInfoBuilder18FreeAllocationInfoEv+0x3c>)
 8011428:	4604      	mov	r4, r0
 801142a:	6840      	ldr	r0, [r0, #4]
 801142c:	68a1      	ldr	r1, [r4, #8]
 801142e:	b082      	sub	sp, #8
 8011430:	681b      	ldr	r3, [r3, #0]
 8011432:	9301      	str	r3, [sp, #4]
 8011434:	f04f 0300 	mov.w	r3, #0
 8011438:	6803      	ldr	r3, [r0, #0]
 801143a:	68db      	ldr	r3, [r3, #12]
 801143c:	4798      	blx	r3
 801143e:	6860      	ldr	r0, [r4, #4]
 8011440:	6921      	ldr	r1, [r4, #16]
 8011442:	6803      	ldr	r3, [r0, #0]
 8011444:	68db      	ldr	r3, [r3, #12]
 8011446:	4798      	blx	r3
 8011448:	4b05      	ldr	r3, [pc, #20]	; (8011460 <_ZN6tflite21AllocationInfoBuilder18FreeAllocationInfoEv+0x3c>)
 801144a:	681a      	ldr	r2, [r3, #0]
 801144c:	9b01      	ldr	r3, [sp, #4]
 801144e:	405a      	eors	r2, r3
 8011450:	f04f 0300 	mov.w	r3, #0
 8011454:	d102      	bne.n	801145c <_ZN6tflite21AllocationInfoBuilder18FreeAllocationInfoEv+0x38>
 8011456:	2000      	movs	r0, #0
 8011458:	b002      	add	sp, #8
 801145a:	bd10      	pop	{r4, pc}
 801145c:	f00c fa6e 	bl	801d93c <__stack_chk_fail>
 8011460:	20011294 	.word	0x20011294

08011464 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor>:
 8011464:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011468:	4b35      	ldr	r3, [pc, #212]	; (8011540 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xdc>)
 801146a:	b082      	sub	sp, #8
 801146c:	4608      	mov	r0, r1
 801146e:	4688      	mov	r8, r1
 8011470:	4615      	mov	r5, r2
 8011472:	681b      	ldr	r3, [r3, #0]
 8011474:	9301      	str	r3, [sp, #4]
 8011476:	f04f 0300 	mov.w	r3, #0
 801147a:	f7fd fd81 	bl	800ef80 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE>
 801147e:	2800      	cmp	r0, #0
 8011480:	d043      	beq.n	801150a <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xa6>
 8011482:	4607      	mov	r7, r0
 8011484:	f04f 0a00 	mov.w	sl, #0
 8011488:	f04f 36ff 	mov.w	r6, #4294967295
 801148c:	f8d8 3000 	ldr.w	r3, [r8]
 8011490:	eba8 0303 	sub.w	r3, r8, r3
 8011494:	881a      	ldrh	r2, [r3, #0]
 8011496:	2a0a      	cmp	r2, #10
 8011498:	d94f      	bls.n	801153a <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xd6>
 801149a:	895a      	ldrh	r2, [r3, #10]
 801149c:	2a00      	cmp	r2, #0
 801149e:	d04c      	beq.n	801153a <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xd6>
 80114a0:	f858 1002 	ldr.w	r1, [r8, r2]
 80114a4:	4442      	add	r2, r8
 80114a6:	1853      	adds	r3, r2, r1
 80114a8:	5852      	ldr	r2, [r2, r1]
 80114aa:	4592      	cmp	sl, r2
 80114ac:	d23d      	bcs.n	801152a <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xc6>
 80114ae:	3304      	adds	r3, #4
 80114b0:	eb03 048a 	add.w	r4, r3, sl, lsl #2
 80114b4:	f853 202a 	ldr.w	r2, [r3, sl, lsl #2]
 80114b8:	58a3      	ldr	r3, [r4, r2]
 80114ba:	4414      	add	r4, r2
 80114bc:	1ae3      	subs	r3, r4, r3
 80114be:	881a      	ldrh	r2, [r3, #0]
 80114c0:	2a14      	cmp	r2, #20
 80114c2:	d91e      	bls.n	8011502 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0x9e>
 80114c4:	f04f 0900 	mov.w	r9, #0
 80114c8:	8a9a      	ldrh	r2, [r3, #20]
 80114ca:	18a3      	adds	r3, r4, r2
 80114cc:	b1ca      	cbz	r2, 8011502 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0x9e>
 80114ce:	58a2      	ldr	r2, [r4, r2]
 80114d0:	5899      	ldr	r1, [r3, r2]
 80114d2:	4549      	cmp	r1, r9
 80114d4:	4413      	add	r3, r2
 80114d6:	d914      	bls.n	8011502 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0x9e>
 80114d8:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 80114dc:	4669      	mov	r1, sp
 80114de:	6858      	ldr	r0, [r3, #4]
 80114e0:	9600      	str	r6, [sp, #0]
 80114e2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80114e6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
 80114ea:	f7fb fa63 	bl	800c9b4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj>
 80114ee:	b968      	cbnz	r0, 801150c <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xa8>
 80114f0:	9900      	ldr	r1, [sp, #0]
 80114f2:	b9a9      	cbnz	r1, 8011520 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xbc>
 80114f4:	6823      	ldr	r3, [r4, #0]
 80114f6:	1ae3      	subs	r3, r4, r3
 80114f8:	f109 0901 	add.w	r9, r9, #1
 80114fc:	881a      	ldrh	r2, [r3, #0]
 80114fe:	2a14      	cmp	r2, #20
 8011500:	d8e2      	bhi.n	80114c8 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0x64>
 8011502:	f10a 0a01 	add.w	sl, sl, #1
 8011506:	4557      	cmp	r7, sl
 8011508:	d1c0      	bne.n	801148c <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0x28>
 801150a:	2000      	movs	r0, #0
 801150c:	4b0c      	ldr	r3, [pc, #48]	; (8011540 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xdc>)
 801150e:	681a      	ldr	r2, [r3, #0]
 8011510:	9b01      	ldr	r3, [sp, #4]
 8011512:	405a      	eors	r2, r3
 8011514:	f04f 0300 	mov.w	r3, #0
 8011518:	d10d      	bne.n	8011536 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xd2>
 801151a:	b002      	add	sp, #8
 801151c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011520:	4808      	ldr	r0, [pc, #32]	; (8011544 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xe0>)
 8011522:	f7fc fe75 	bl	800e210 <_Z11MicroPrintfPKcz>
 8011526:	2001      	movs	r0, #1
 8011528:	e7f0      	b.n	801150c <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xa8>
 801152a:	4b07      	ldr	r3, [pc, #28]	; (8011548 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xe4>)
 801152c:	4a07      	ldr	r2, [pc, #28]	; (801154c <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xe8>)
 801152e:	4808      	ldr	r0, [pc, #32]	; (8011550 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor+0xec>)
 8011530:	21b0      	movs	r1, #176	; 0xb0
 8011532:	f00b fa45 	bl	801c9c0 <__assert_func>
 8011536:	f00c fa01 	bl	801d93c <__stack_chk_fail>
 801153a:	2300      	movs	r3, #0
 801153c:	681b      	ldr	r3, [r3, #0]
 801153e:	deff      	udf	#255	; 0xff
 8011540:	20011294 	.word	0x20011294
 8011544:	08027438 	.word	0x08027438
 8011548:	08024734 	.word	0x08024734
 801154c:	08025f18 	.word	0x08025f18
 8011550:	08024804 	.word	0x08024804

08011554 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE>:
 8011554:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011558:	b087      	sub	sp, #28
 801155a:	6883      	ldr	r3, [r0, #8]
 801155c:	9303      	str	r3, [sp, #12]
 801155e:	1d13      	adds	r3, r2, #4
 8011560:	9302      	str	r3, [sp, #8]
 8011562:	4b78      	ldr	r3, [pc, #480]	; (8011744 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1f0>)
 8011564:	9001      	str	r0, [sp, #4]
 8011566:	f04f 0a00 	mov.w	sl, #0
 801156a:	681b      	ldr	r3, [r3, #0]
 801156c:	9305      	str	r3, [sp, #20]
 801156e:	f04f 0300 	mov.w	r3, #0
 8011572:	46d0      	mov	r8, sl
 8011574:	f04f 3bff 	mov.w	fp, #4294967295
 8011578:	460f      	mov	r7, r1
 801157a:	9801      	ldr	r0, [sp, #4]
 801157c:	6803      	ldr	r3, [r0, #0]
 801157e:	681a      	ldr	r2, [r3, #0]
 8011580:	1a9a      	subs	r2, r3, r2
 8011582:	8811      	ldrh	r1, [r2, #0]
 8011584:	2908      	cmp	r1, #8
 8011586:	f240 80da 	bls.w	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 801158a:	8912      	ldrh	r2, [r2, #8]
 801158c:	2a00      	cmp	r2, #0
 801158e:	f000 80d6 	beq.w	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 8011592:	5899      	ldr	r1, [r3, r2]
 8011594:	4413      	add	r3, r2
 8011596:	185a      	adds	r2, r3, r1
 8011598:	585b      	ldr	r3, [r3, r1]
 801159a:	459a      	cmp	sl, r3
 801159c:	f080 80a1 	bcs.w	80116e2 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x18e>
 80115a0:	3204      	adds	r2, #4
 80115a2:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 80115a6:	f852 602a 	ldr.w	r6, [r2, sl, lsl #2]
 80115aa:	9a02      	ldr	r2, [sp, #8]
 80115ac:	9300      	str	r3, [sp, #0]
 80115ae:	f852 503a 	ldr.w	r5, [r2, sl, lsl #3]
 80115b2:	6902      	ldr	r2, [r0, #16]
 80115b4:	eb03 0906 	add.w	r9, r3, r6
 80115b8:	f852 402a 	ldr.w	r4, [r2, sl, lsl #2]
 80115bc:	4649      	mov	r1, r9
 80115be:	462a      	mov	r2, r5
 80115c0:	f7ff ff50 	bl	8011464 <_ZN6tflite21AllocationInfoBuilder16ValidateSubgraphEPKNS_8SubGraphEP16TfLiteEvalTensor>
 80115c4:	2800      	cmp	r0, #0
 80115c6:	f040 80a5 	bne.w	8011714 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1c0>
 80115ca:	9b00      	ldr	r3, [sp, #0]
 80115cc:	9a03      	ldr	r2, [sp, #12]
 80115ce:	599b      	ldr	r3, [r3, r6]
 80115d0:	eba9 0303 	sub.w	r3, r9, r3
 80115d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80115d8:	eb02 04c4 	add.w	r4, r2, r4, lsl #3
 80115dc:	4606      	mov	r6, r0
 80115de:	881a      	ldrh	r2, [r3, #0]
 80115e0:	e037      	b.n	8011652 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0xfe>
 80115e2:	f857 0028 	ldr.w	r0, [r7, r8, lsl #2]
 80115e6:	6120      	str	r0, [r4, #16]
 80115e8:	f8d9 3000 	ldr.w	r3, [r9]
 80115ec:	eba9 0303 	sub.w	r3, r9, r3
 80115f0:	f108 0801 	add.w	r8, r8, #1
 80115f4:	881a      	ldrh	r2, [r3, #0]
 80115f6:	2a04      	cmp	r2, #4
 80115f8:	f240 80a1 	bls.w	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 80115fc:	8899      	ldrh	r1, [r3, #4]
 80115fe:	2900      	cmp	r1, #0
 8011600:	f000 809d 	beq.w	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 8011604:	f859 c001 	ldr.w	ip, [r9, r1]
 8011608:	eb09 0e01 	add.w	lr, r9, r1
 801160c:	eb0e 010c 	add.w	r1, lr, ip
 8011610:	f85e c00c 	ldr.w	ip, [lr, ip]
 8011614:	4566      	cmp	r6, ip
 8011616:	f080 808a 	bcs.w	801172e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1da>
 801161a:	3104      	adds	r1, #4
 801161c:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8011620:	f851 1026 	ldr.w	r1, [r1, r6, lsl #2]
 8011624:	f85c e001 	ldr.w	lr, [ip, r1]
 8011628:	448c      	add	ip, r1
 801162a:	ebac 010e 	sub.w	r1, ip, lr
 801162e:	f8b1 e000 	ldrh.w	lr, [r1]
 8011632:	f1be 0f0e 	cmp.w	lr, #14
 8011636:	d909      	bls.n	801164c <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0xf8>
 8011638:	89c9      	ldrh	r1, [r1, #14]
 801163a:	b139      	cbz	r1, 801164c <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0xf8>
 801163c:	f81c 1001 	ldrb.w	r1, [ip, r1]
 8011640:	b121      	cbz	r1, 801164c <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0xf8>
 8011642:	3001      	adds	r0, #1
 8011644:	d002      	beq.n	801164c <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0xf8>
 8011646:	f04f 0101 	mov.w	r1, #1
 801164a:	7521      	strb	r1, [r4, #20]
 801164c:	3601      	adds	r6, #1
 801164e:	3418      	adds	r4, #24
 8011650:	350c      	adds	r5, #12
 8011652:	2a04      	cmp	r2, #4
 8011654:	d973      	bls.n	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 8011656:	889b      	ldrh	r3, [r3, #4]
 8011658:	2b00      	cmp	r3, #0
 801165a:	d070      	beq.n	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 801165c:	f859 2003 	ldr.w	r2, [r9, r3]
 8011660:	444b      	add	r3, r9
 8011662:	589b      	ldr	r3, [r3, r2]
 8011664:	429e      	cmp	r6, r3
 8011666:	d25f      	bcs.n	8011728 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1d4>
 8011668:	6065      	str	r5, [r4, #4]
 801166a:	4621      	mov	r1, r4
 801166c:	4628      	mov	r0, r5
 801166e:	f7fb f9a1 	bl	800c9b4 <_ZN6tflite26TfLiteEvalTensorByteLengthEPK16TfLiteEvalTensorPj>
 8011672:	2800      	cmp	r0, #0
 8011674:	d14e      	bne.n	8011714 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1c0>
 8011676:	682b      	ldr	r3, [r5, #0]
 8011678:	e9c4 bb02 	strd	fp, fp, [r4, #8]
 801167c:	b153      	cbz	r3, 8011694 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x140>
 801167e:	7520      	strb	r0, [r4, #20]
 8011680:	2f00      	cmp	r7, #0
 8011682:	d1ae      	bne.n	80115e2 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x8e>
 8011684:	f8c4 b010 	str.w	fp, [r4, #16]
 8011688:	f8d9 3000 	ldr.w	r3, [r9]
 801168c:	eba9 0303 	sub.w	r3, r9, r3
 8011690:	881a      	ldrh	r2, [r3, #0]
 8011692:	e7db      	b.n	801164c <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0xf8>
 8011694:	f8d9 3000 	ldr.w	r3, [r9]
 8011698:	eba9 0303 	sub.w	r3, r9, r3
 801169c:	881a      	ldrh	r2, [r3, #0]
 801169e:	2a04      	cmp	r2, #4
 80116a0:	d94d      	bls.n	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 80116a2:	889b      	ldrh	r3, [r3, #4]
 80116a4:	2b00      	cmp	r3, #0
 80116a6:	d04a      	beq.n	801173e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1ea>
 80116a8:	f859 1003 	ldr.w	r1, [r9, r3]
 80116ac:	444b      	add	r3, r9
 80116ae:	185a      	adds	r2, r3, r1
 80116b0:	585b      	ldr	r3, [r3, r1]
 80116b2:	429e      	cmp	r6, r3
 80116b4:	d23b      	bcs.n	801172e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1da>
 80116b6:	3204      	adds	r2, #4
 80116b8:	eb02 0386 	add.w	r3, r2, r6, lsl #2
 80116bc:	f852 1026 	ldr.w	r1, [r2, r6, lsl #2]
 80116c0:	585a      	ldr	r2, [r3, r1]
 80116c2:	440b      	add	r3, r1
 80116c4:	1a9a      	subs	r2, r3, r2
 80116c6:	8811      	ldrh	r1, [r2, #0]
 80116c8:	290e      	cmp	r1, #14
 80116ca:	d905      	bls.n	80116d8 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x184>
 80116cc:	89d2      	ldrh	r2, [r2, #14]
 80116ce:	b11a      	cbz	r2, 80116d8 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x184>
 80116d0:	5c9b      	ldrb	r3, [r3, r2]
 80116d2:	2000      	movs	r0, #0
 80116d4:	2b00      	cmp	r3, #0
 80116d6:	d1d2      	bne.n	801167e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x12a>
 80116d8:	6820      	ldr	r0, [r4, #0]
 80116da:	3800      	subs	r0, #0
 80116dc:	bf18      	it	ne
 80116de:	2001      	movne	r0, #1
 80116e0:	e7cd      	b.n	801167e <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x12a>
 80116e2:	9b01      	ldr	r3, [sp, #4]
 80116e4:	69da      	ldr	r2, [r3, #28]
 80116e6:	695b      	ldr	r3, [r3, #20]
 80116e8:	b19a      	cbz	r2, 8011712 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1be>
 80116ea:	9903      	ldr	r1, [sp, #12]
 80116ec:	441a      	add	r2, r3
 80116ee:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80116f2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80116f6:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80116fa:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80116fe:	2001      	movs	r0, #1
 8011700:	f04f 31ff 	mov.w	r1, #4294967295
 8011704:	7518      	strb	r0, [r3, #20]
 8011706:	6119      	str	r1, [r3, #16]
 8011708:	e9c3 1102 	strd	r1, r1, [r3, #8]
 801170c:	3318      	adds	r3, #24
 801170e:	429a      	cmp	r2, r3
 8011710:	d1f8      	bne.n	8011704 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1b0>
 8011712:	2000      	movs	r0, #0
 8011714:	4b0b      	ldr	r3, [pc, #44]	; (8011744 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1f0>)
 8011716:	681a      	ldr	r2, [r3, #0]
 8011718:	9b05      	ldr	r3, [sp, #20]
 801171a:	405a      	eors	r2, r3
 801171c:	f04f 0300 	mov.w	r3, #0
 8011720:	d10b      	bne.n	801173a <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1e6>
 8011722:	b007      	add	sp, #28
 8011724:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011728:	f10a 0a01 	add.w	sl, sl, #1
 801172c:	e725      	b.n	801157a <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x26>
 801172e:	4b06      	ldr	r3, [pc, #24]	; (8011748 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1f4>)
 8011730:	4a06      	ldr	r2, [pc, #24]	; (801174c <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1f8>)
 8011732:	4807      	ldr	r0, [pc, #28]	; (8011750 <_ZN6tflite21AllocationInfoBuilder24InitializeAllocationInfoEPKlPNS_19SubgraphAllocationsE+0x1fc>)
 8011734:	21b0      	movs	r1, #176	; 0xb0
 8011736:	f00b f943 	bl	801c9c0 <__assert_func>
 801173a:	f00c f8ff 	bl	801d93c <__stack_chk_fail>
 801173e:	2300      	movs	r3, #0
 8011740:	681b      	ldr	r3, [r3, #0]
 8011742:	deff      	udf	#255	; 0xff
 8011744:	20011294 	.word	0x20011294
 8011748:	08024734 	.word	0x08024734
 801174c:	08026c44 	.word	0x08026c44
 8011750:	08024804 	.word	0x08024804

08011754 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>:
 8011754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011758:	4605      	mov	r5, r0
 801175a:	ed2d 8b02 	vpush	{d8}
 801175e:	4699      	mov	r9, r3
 8011760:	682b      	ldr	r3, [r5, #0]
 8011762:	48a4      	ldr	r0, [pc, #656]	; (80119f4 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2a0>)
 8011764:	ee08 2a10 	vmov	s16, r2
 8011768:	681a      	ldr	r2, [r3, #0]
 801176a:	b08d      	sub	sp, #52	; 0x34
 801176c:	1a9a      	subs	r2, r3, r2
 801176e:	6800      	ldr	r0, [r0, #0]
 8011770:	900b      	str	r0, [sp, #44]	; 0x2c
 8011772:	f04f 0000 	mov.w	r0, #0
 8011776:	9818      	ldr	r0, [sp, #96]	; 0x60
 8011778:	9002      	str	r0, [sp, #8]
 801177a:	9106      	str	r1, [sp, #24]
 801177c:	4608      	mov	r0, r1
 801177e:	8811      	ldrh	r1, [r2, #0]
 8011780:	2908      	cmp	r1, #8
 8011782:	f240 816c 	bls.w	8011a5e <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x30a>
 8011786:	8912      	ldrh	r2, [r2, #8]
 8011788:	2a00      	cmp	r2, #0
 801178a:	f000 8168 	beq.w	8011a5e <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x30a>
 801178e:	5899      	ldr	r1, [r3, r2]
 8011790:	4413      	add	r3, r2
 8011792:	185a      	adds	r2, r3, r1
 8011794:	585b      	ldr	r3, [r3, r1]
 8011796:	4298      	cmp	r0, r3
 8011798:	f080 8155 	bcs.w	8011a46 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2f2>
 801179c:	9906      	ldr	r1, [sp, #24]
 801179e:	1d13      	adds	r3, r2, #4
 80117a0:	692a      	ldr	r2, [r5, #16]
 80117a2:	f852 6021 	ldr.w	r6, [r2, r1, lsl #2]
 80117a6:	460a      	mov	r2, r1
 80117a8:	eb03 0782 	add.w	r7, r3, r2, lsl #2
 80117ac:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 80117b0:	68ab      	ldr	r3, [r5, #8]
 80117b2:	9307      	str	r3, [sp, #28]
 80117b4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80117b8:	460c      	mov	r4, r1
 80117ba:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 80117be:	187b      	adds	r3, r7, r1
 80117c0:	4618      	mov	r0, r3
 80117c2:	4698      	mov	r8, r3
 80117c4:	9109      	str	r1, [sp, #36]	; 0x24
 80117c6:	9305      	str	r3, [sp, #20]
 80117c8:	9708      	str	r7, [sp, #32]
 80117ca:	f7fd fbd9 	bl	800ef80 <_ZN6tflite20NumSubgraphOperatorsEPKNS_8SubGraphE>
 80117ce:	5939      	ldr	r1, [r7, r4]
 80117d0:	9004      	str	r0, [sp, #16]
 80117d2:	4643      	mov	r3, r8
 80117d4:	1a59      	subs	r1, r3, r1
 80117d6:	4688      	mov	r8, r1
 80117d8:	880c      	ldrh	r4, [r1, #0]
 80117da:	2c06      	cmp	r4, #6
 80117dc:	f200 810c 	bhi.w	80119f8 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2a4>
 80117e0:	9b04      	ldr	r3, [sp, #16]
 80117e2:	2b00      	cmp	r3, #0
 80117e4:	f000 80d7 	beq.w	8011996 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x242>
 80117e8:	f04f 0800 	mov.w	r8, #0
 80117ec:	6a2f      	ldr	r7, [r5, #32]
 80117ee:	2c0a      	cmp	r4, #10
 80117f0:	f107 0701 	add.w	r7, r7, #1
 80117f4:	622f      	str	r7, [r5, #32]
 80117f6:	f240 8132 	bls.w	8011a5e <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x30a>
 80117fa:	894a      	ldrh	r2, [r1, #10]
 80117fc:	2a00      	cmp	r2, #0
 80117fe:	f000 812e 	beq.w	8011a5e <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x30a>
 8011802:	9b05      	ldr	r3, [sp, #20]
 8011804:	5899      	ldr	r1, [r3, r2]
 8011806:	441a      	add	r2, r3
 8011808:	1853      	adds	r3, r2, r1
 801180a:	5852      	ldr	r2, [r2, r1]
 801180c:	4542      	cmp	r2, r8
 801180e:	f240 811c 	bls.w	8011a4a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2f6>
 8011812:	3304      	adds	r3, #4
 8011814:	eb03 0a88 	add.w	sl, r3, r8, lsl #2
 8011818:	f853 b028 	ldr.w	fp, [r3, r8, lsl #2]
 801181c:	f85a 300b 	ldr.w	r3, [sl, fp]
 8011820:	eb0a 040b 	add.w	r4, sl, fp
 8011824:	1ae3      	subs	r3, r4, r3
 8011826:	881a      	ldrh	r2, [r3, #0]
 8011828:	2a08      	cmp	r2, #8
 801182a:	d91c      	bls.n	8011866 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x112>
 801182c:	8918      	ldrh	r0, [r3, #8]
 801182e:	2200      	movs	r2, #0
 8011830:	1821      	adds	r1, r4, r0
 8011832:	b1c0      	cbz	r0, 8011866 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x112>
 8011834:	680b      	ldr	r3, [r1, #0]
 8011836:	f851 c003 	ldr.w	ip, [r1, r3]
 801183a:	4594      	cmp	ip, r2
 801183c:	440b      	add	r3, r1
 801183e:	d912      	bls.n	8011866 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x112>
 8011840:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8011844:	685b      	ldr	r3, [r3, #4]
 8011846:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 801184a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801184e:	f8d3 c008 	ldr.w	ip, [r3, #8]
 8011852:	4567      	cmp	r7, ip
 8011854:	f2c0 8101 	blt.w	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 8011858:	f1bc 3fff 	cmp.w	ip, #4294967295
 801185c:	bf08      	it	eq
 801185e:	609f      	streq	r7, [r3, #8]
 8011860:	3201      	adds	r2, #1
 8011862:	2800      	cmp	r0, #0
 8011864:	d1e6      	bne.n	8011834 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xe0>
 8011866:	9b02      	ldr	r3, [sp, #8]
 8011868:	9300      	str	r3, [sp, #0]
 801186a:	ee18 2a10 	vmov	r2, s16
 801186e:	464b      	mov	r3, r9
 8011870:	4621      	mov	r1, r4
 8011872:	4628      	mov	r0, r5
 8011874:	f000 f8fc 	bl	8011a70 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>
 8011878:	f85a 300b 	ldr.w	r3, [sl, fp]
 801187c:	eba4 0e03 	sub.w	lr, r4, r3
 8011880:	f8be a000 	ldrh.w	sl, [lr]
 8011884:	f1ba 0f06 	cmp.w	sl, #6
 8011888:	d941      	bls.n	801190e <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1ba>
 801188a:	f8be b006 	ldrh.w	fp, [lr, #6]
 801188e:	9403      	str	r4, [sp, #12]
 8011890:	4658      	mov	r0, fp
 8011892:	2100      	movs	r1, #0
 8011894:	eb04 030b 	add.w	r3, r4, fp
 8011898:	b1c8      	cbz	r0, 80118ce <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x17a>
 801189a:	681a      	ldr	r2, [r3, #0]
 801189c:	f853 c002 	ldr.w	ip, [r3, r2]
 80118a0:	458c      	cmp	ip, r1
 80118a2:	441a      	add	r2, r3
 80118a4:	d913      	bls.n	80118ce <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x17a>
 80118a6:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80118aa:	6852      	ldr	r2, [r2, #4]
 80118ac:	2a00      	cmp	r2, #0
 80118ae:	db0b      	blt.n	80118c8 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x174>
 80118b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80118b4:	eb06 0cc2 	add.w	ip, r6, r2, lsl #3
 80118b8:	6a2a      	ldr	r2, [r5, #32]
 80118ba:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80118be:	42a2      	cmp	r2, r4
 80118c0:	f2c0 80cb 	blt.w	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 80118c4:	f8cc 200c 	str.w	r2, [ip, #12]
 80118c8:	3101      	adds	r1, #1
 80118ca:	2800      	cmp	r0, #0
 80118cc:	d1e5      	bne.n	801189a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x146>
 80118ce:	f1ba 0f08 	cmp.w	sl, #8
 80118d2:	9c03      	ldr	r4, [sp, #12]
 80118d4:	d91b      	bls.n	801190e <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1ba>
 80118d6:	f8be 0008 	ldrh.w	r0, [lr, #8]
 80118da:	2100      	movs	r1, #0
 80118dc:	4404      	add	r4, r0
 80118de:	46bc      	mov	ip, r7
 80118e0:	b1a0      	cbz	r0, 801190c <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1b8>
 80118e2:	6823      	ldr	r3, [r4, #0]
 80118e4:	58e2      	ldr	r2, [r4, r3]
 80118e6:	428a      	cmp	r2, r1
 80118e8:	4423      	add	r3, r4
 80118ea:	d90f      	bls.n	801190c <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1b8>
 80118ec:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80118f0:	6a2a      	ldr	r2, [r5, #32]
 80118f2:	685b      	ldr	r3, [r3, #4]
 80118f4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80118f8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80118fc:	68df      	ldr	r7, [r3, #12]
 80118fe:	42ba      	cmp	r2, r7
 8011900:	f2c0 80ab 	blt.w	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 8011904:	60da      	str	r2, [r3, #12]
 8011906:	3101      	adds	r1, #1
 8011908:	2800      	cmp	r0, #0
 801190a:	d1ea      	bne.n	80118e2 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x18e>
 801190c:	4667      	mov	r7, ip
 801190e:	f8d5 c01c 	ldr.w	ip, [r5, #28]
 8011912:	f1bc 0f00 	cmp.w	ip, #0
 8011916:	d02c      	beq.n	8011972 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x21e>
 8011918:	6969      	ldr	r1, [r5, #20]
 801191a:	9b07      	ldr	r3, [sp, #28]
 801191c:	f8dd e018 	ldr.w	lr, [sp, #24]
 8011920:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011924:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8011928:	464c      	mov	r4, r9
 801192a:	ee18 3a10 	vmov	r3, s16
 801192e:	2000      	movs	r0, #0
 8011930:	46b2      	mov	sl, r6
 8011932:	e008      	b.n	8011946 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1f2>
 8011934:	3001      	adds	r0, #1
 8011936:	4560      	cmp	r0, ip
 8011938:	f103 030c 	add.w	r3, r3, #12
 801193c:	f101 0118 	add.w	r1, r1, #24
 8011940:	f104 0404 	add.w	r4, r4, #4
 8011944:	d014      	beq.n	8011970 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x21c>
 8011946:	685a      	ldr	r2, [r3, #4]
 8011948:	4542      	cmp	r2, r8
 801194a:	d1f3      	bne.n	8011934 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1e0>
 801194c:	689a      	ldr	r2, [r3, #8]
 801194e:	4596      	cmp	lr, r2
 8011950:	d1f0      	bne.n	8011934 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1e0>
 8011952:	688a      	ldr	r2, [r1, #8]
 8011954:	681e      	ldr	r6, [r3, #0]
 8011956:	4297      	cmp	r7, r2
 8011958:	e9c1 6400 	strd	r6, r4, [r1]
 801195c:	db7d      	blt.n	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 801195e:	3201      	adds	r2, #1
 8011960:	bf08      	it	eq
 8011962:	608f      	streq	r7, [r1, #8]
 8011964:	6a2a      	ldr	r2, [r5, #32]
 8011966:	68ce      	ldr	r6, [r1, #12]
 8011968:	42b2      	cmp	r2, r6
 801196a:	db76      	blt.n	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 801196c:	60ca      	str	r2, [r1, #12]
 801196e:	e7e1      	b.n	8011934 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1e0>
 8011970:	4656      	mov	r6, sl
 8011972:	9b04      	ldr	r3, [sp, #16]
 8011974:	f108 0801 	add.w	r8, r8, #1
 8011978:	4543      	cmp	r3, r8
 801197a:	d004      	beq.n	8011986 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x232>
 801197c:	9b05      	ldr	r3, [sp, #20]
 801197e:	6819      	ldr	r1, [r3, #0]
 8011980:	1a59      	subs	r1, r3, r1
 8011982:	880c      	ldrh	r4, [r1, #0]
 8011984:	e732      	b.n	80117ec <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x98>
 8011986:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801198a:	589b      	ldr	r3, [r3, r2]
 801198c:	9a05      	ldr	r2, [sp, #20]
 801198e:	eba2 0803 	sub.w	r8, r2, r3
 8011992:	f8b8 4000 	ldrh.w	r4, [r8]
 8011996:	2c08      	cmp	r4, #8
 8011998:	d80c      	bhi.n	80119b4 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x260>
 801199a:	4b16      	ldr	r3, [pc, #88]	; (80119f4 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2a0>)
 801199c:	681a      	ldr	r2, [r3, #0]
 801199e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80119a0:	405a      	eors	r2, r3
 80119a2:	f04f 0300 	mov.w	r3, #0
 80119a6:	d156      	bne.n	8011a56 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x302>
 80119a8:	2000      	movs	r0, #0
 80119aa:	b00d      	add	sp, #52	; 0x34
 80119ac:	ecbd 8b02 	vpop	{d8}
 80119b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119b4:	f8b8 7008 	ldrh.w	r7, [r8, #8]
 80119b8:	9805      	ldr	r0, [sp, #20]
 80119ba:	2100      	movs	r1, #0
 80119bc:	4438      	add	r0, r7
 80119be:	2f00      	cmp	r7, #0
 80119c0:	d0eb      	beq.n	801199a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x246>
 80119c2:	6803      	ldr	r3, [r0, #0]
 80119c4:	58c2      	ldr	r2, [r0, r3]
 80119c6:	428a      	cmp	r2, r1
 80119c8:	4403      	add	r3, r0
 80119ca:	d9e6      	bls.n	801199a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x246>
 80119cc:	eb03 0381 	add.w	r3, r3, r1, lsl #2
 80119d0:	6a2a      	ldr	r2, [r5, #32]
 80119d2:	685b      	ldr	r3, [r3, #4]
 80119d4:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80119d8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80119dc:	689c      	ldr	r4, [r3, #8]
 80119de:	42a2      	cmp	r2, r4
 80119e0:	db3b      	blt.n	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 80119e2:	3401      	adds	r4, #1
 80119e4:	68dc      	ldr	r4, [r3, #12]
 80119e6:	bf08      	it	eq
 80119e8:	609a      	streq	r2, [r3, #8]
 80119ea:	42a2      	cmp	r2, r4
 80119ec:	db35      	blt.n	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 80119ee:	60da      	str	r2, [r3, #12]
 80119f0:	3101      	adds	r1, #1
 80119f2:	e7e4      	b.n	80119be <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x26a>
 80119f4:	20011294 	.word	0x20011294
 80119f8:	f8b1 e006 	ldrh.w	lr, [r1, #6]
 80119fc:	9b05      	ldr	r3, [sp, #20]
 80119fe:	4670      	mov	r0, lr
 8011a00:	eb03 0c0e 	add.w	ip, r3, lr
 8011a04:	2700      	movs	r7, #0
 8011a06:	468e      	mov	lr, r1
 8011a08:	b1d8      	cbz	r0, 8011a42 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2ee>
 8011a0a:	f8dc 3000 	ldr.w	r3, [ip]
 8011a0e:	f85c 2003 	ldr.w	r2, [ip, r3]
 8011a12:	42ba      	cmp	r2, r7
 8011a14:	4463      	add	r3, ip
 8011a16:	d914      	bls.n	8011a42 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2ee>
 8011a18:	eb03 0387 	add.w	r3, r3, r7, lsl #2
 8011a1c:	6a29      	ldr	r1, [r5, #32]
 8011a1e:	685b      	ldr	r3, [r3, #4]
 8011a20:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8011a24:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8011a28:	689a      	ldr	r2, [r3, #8]
 8011a2a:	4291      	cmp	r1, r2
 8011a2c:	db15      	blt.n	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 8011a2e:	3201      	adds	r2, #1
 8011a30:	68da      	ldr	r2, [r3, #12]
 8011a32:	bf08      	it	eq
 8011a34:	6099      	streq	r1, [r3, #8]
 8011a36:	4291      	cmp	r1, r2
 8011a38:	db0f      	blt.n	8011a5a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x306>
 8011a3a:	60d9      	str	r1, [r3, #12]
 8011a3c:	3701      	adds	r7, #1
 8011a3e:	2800      	cmp	r0, #0
 8011a40:	d1e3      	bne.n	8011a0a <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x2b6>
 8011a42:	4671      	mov	r1, lr
 8011a44:	e6cc      	b.n	80117e0 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x8c>
 8011a46:	f7ff fc4f 	bl	80112e8 <_ZNK11flatbuffers6VectorINS_6OffsetIN6tflite8SubGraphEEEmE3GetEm.part.0>
 8011a4a:	4b06      	ldr	r3, [pc, #24]	; (8011a64 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x310>)
 8011a4c:	4a06      	ldr	r2, [pc, #24]	; (8011a68 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x314>)
 8011a4e:	4807      	ldr	r0, [pc, #28]	; (8011a6c <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x318>)
 8011a50:	21b0      	movs	r1, #176	; 0xb0
 8011a52:	f00a ffb5 	bl	801c9c0 <__assert_func>
 8011a56:	f00b ff71 	bl	801d93c <__stack_chk_fail>
 8011a5a:	f00a ffa9 	bl	801c9b0 <abort>
 8011a5e:	2300      	movs	r3, #0
 8011a60:	681b      	ldr	r3, [r3, #0]
 8011a62:	deff      	udf	#255	; 0xff
 8011a64:	08024734 	.word	0x08024734
 8011a68:	08025f18 	.word	0x08025f18
 8011a6c:	08024804 	.word	0x08024804

08011a70 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>:
 8011a70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a74:	4605      	mov	r5, r0
 8011a76:	487d      	ldr	r0, [pc, #500]	; (8011c6c <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1fc>)
 8011a78:	682f      	ldr	r7, [r5, #0]
 8011a7a:	b085      	sub	sp, #20
 8011a7c:	6800      	ldr	r0, [r0, #0]
 8011a7e:	9003      	str	r0, [sp, #12]
 8011a80:	f04f 0000 	mov.w	r0, #0
 8011a84:	6838      	ldr	r0, [r7, #0]
 8011a86:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8011a88:	1a38      	subs	r0, r7, r0
 8011a8a:	4690      	mov	r8, r2
 8011a8c:	8804      	ldrh	r4, [r0, #0]
 8011a8e:	2c06      	cmp	r4, #6
 8011a90:	4699      	mov	r9, r3
 8011a92:	d92e      	bls.n	8011af2 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x82>
 8011a94:	88c4      	ldrh	r4, [r0, #6]
 8011a96:	2c00      	cmp	r4, #0
 8011a98:	f000 80b1 	beq.w	8011bfe <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x18e>
 8011a9c:	5938      	ldr	r0, [r7, r4]
 8011a9e:	eb07 0c04 	add.w	ip, r7, r4
 8011aa2:	4484      	add	ip, r0
 8011aa4:	6808      	ldr	r0, [r1, #0]
 8011aa6:	eba1 0e00 	sub.w	lr, r1, r0
 8011aaa:	f8be 7000 	ldrh.w	r7, [lr]
 8011aae:	2f04      	cmp	r7, #4
 8011ab0:	d828      	bhi.n	8011b04 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x94>
 8011ab2:	2000      	movs	r0, #0
 8011ab4:	f8dc 4000 	ldr.w	r4, [ip]
 8011ab8:	4284      	cmp	r4, r0
 8011aba:	f240 80ce 	bls.w	8011c5a <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1ea>
 8011abe:	f10c 0c04 	add.w	ip, ip, #4
 8011ac2:	eb0c 0480 	add.w	r4, ip, r0, lsl #2
 8011ac6:	f85c 3020 	ldr.w	r3, [ip, r0, lsl #2]
 8011aca:	58e0      	ldr	r0, [r4, r3]
 8011acc:	441c      	add	r4, r3
 8011ace:	1a20      	subs	r0, r4, r0
 8011ad0:	f8b0 c000 	ldrh.w	ip, [r0]
 8011ad4:	f1bc 0f0a 	cmp.w	ip, #10
 8011ad8:	d81a      	bhi.n	8011b10 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xa0>
 8011ada:	2000      	movs	r0, #0
 8011adc:	4b63      	ldr	r3, [pc, #396]	; (8011c6c <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1fc>)
 8011ade:	681a      	ldr	r2, [r3, #0]
 8011ae0:	9b03      	ldr	r3, [sp, #12]
 8011ae2:	405a      	eors	r2, r3
 8011ae4:	f04f 0300 	mov.w	r3, #0
 8011ae8:	f040 80bd 	bne.w	8011c66 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1f6>
 8011aec:	b005      	add	sp, #20
 8011aee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011af2:	f04f 0c00 	mov.w	ip, #0
 8011af6:	6808      	ldr	r0, [r1, #0]
 8011af8:	eba1 0e00 	sub.w	lr, r1, r0
 8011afc:	f8be 7000 	ldrh.w	r7, [lr]
 8011b00:	2f04      	cmp	r7, #4
 8011b02:	d9d6      	bls.n	8011ab2 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x42>
 8011b04:	f8be 0004 	ldrh.w	r0, [lr, #4]
 8011b08:	2800      	cmp	r0, #0
 8011b0a:	d0d3      	beq.n	8011ab4 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x44>
 8011b0c:	5808      	ldr	r0, [r1, r0]
 8011b0e:	e7d1      	b.n	8011ab4 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x44>
 8011b10:	8940      	ldrh	r0, [r0, #10]
 8011b12:	2800      	cmp	r0, #0
 8011b14:	d0e1      	beq.n	8011ada <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6a>
 8011b16:	5820      	ldr	r0, [r4, r0]
 8011b18:	2877      	cmp	r0, #119	; 0x77
 8011b1a:	d034      	beq.n	8011b86 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x116>
 8011b1c:	2881      	cmp	r0, #129	; 0x81
 8011b1e:	d00c      	beq.n	8011b3a <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xca>
 8011b20:	2876      	cmp	r0, #118	; 0x76
 8011b22:	d1da      	bne.n	8011ada <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6a>
 8011b24:	2f0a      	cmp	r7, #10
 8011b26:	d905      	bls.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b28:	f8be 000a 	ldrh.w	r0, [lr, #10]
 8011b2c:	b110      	cbz	r0, 8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b2e:	5c08      	ldrb	r0, [r1, r0]
 8011b30:	285c      	cmp	r0, #92	; 0x5c
 8011b32:	d031      	beq.n	8011b98 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x128>
 8011b34:	2300      	movs	r3, #0
 8011b36:	681b      	ldr	r3, [r3, #0]
 8011b38:	deff      	udf	#255	; 0xff
 8011b3a:	2f0a      	cmp	r7, #10
 8011b3c:	d9fa      	bls.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b3e:	f8be 000a 	ldrh.w	r0, [lr, #10]
 8011b42:	2800      	cmp	r0, #0
 8011b44:	d0f6      	beq.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b46:	5c08      	ldrb	r0, [r1, r0]
 8011b48:	2867      	cmp	r0, #103	; 0x67
 8011b4a:	d1f3      	bne.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b4c:	2f0c      	cmp	r7, #12
 8011b4e:	d9f1      	bls.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b50:	f8be 000c 	ldrh.w	r0, [lr, #12]
 8011b54:	2800      	cmp	r0, #0
 8011b56:	d0ed      	beq.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b58:	580c      	ldr	r4, [r1, r0]
 8011b5a:	4401      	add	r1, r0
 8011b5c:	1908      	adds	r0, r1, r4
 8011b5e:	5909      	ldr	r1, [r1, r4]
 8011b60:	1a41      	subs	r1, r0, r1
 8011b62:	880c      	ldrh	r4, [r1, #0]
 8011b64:	2c04      	cmp	r4, #4
 8011b66:	d976      	bls.n	8011c56 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1e6>
 8011b68:	8889      	ldrh	r1, [r1, #4]
 8011b6a:	2900      	cmp	r1, #0
 8011b6c:	d16e      	bne.n	8011c4c <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1dc>
 8011b6e:	9600      	str	r6, [sp, #0]
 8011b70:	6a2c      	ldr	r4, [r5, #32]
 8011b72:	3401      	adds	r4, #1
 8011b74:	464b      	mov	r3, r9
 8011b76:	4642      	mov	r2, r8
 8011b78:	4628      	mov	r0, r5
 8011b7a:	622c      	str	r4, [r5, #32]
 8011b7c:	f7ff fdea 	bl	8011754 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>
 8011b80:	2800      	cmp	r0, #0
 8011b82:	d1ab      	bne.n	8011adc <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6c>
 8011b84:	e7a9      	b.n	8011ada <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6a>
 8011b86:	2f0a      	cmp	r7, #10
 8011b88:	d9d4      	bls.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b8a:	f8be 000a 	ldrh.w	r0, [lr, #10]
 8011b8e:	2800      	cmp	r0, #0
 8011b90:	d0d0      	beq.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b92:	5c08      	ldrb	r0, [r1, r0]
 8011b94:	285d      	cmp	r0, #93	; 0x5d
 8011b96:	d1cd      	bne.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b98:	2f0c      	cmp	r7, #12
 8011b9a:	d9cb      	bls.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011b9c:	f8be 000c 	ldrh.w	r0, [lr, #12]
 8011ba0:	2800      	cmp	r0, #0
 8011ba2:	d0c7      	beq.n	8011b34 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xc4>
 8011ba4:	580c      	ldr	r4, [r1, r0]
 8011ba6:	4401      	add	r1, r0
 8011ba8:	eb01 0c04 	add.w	ip, r1, r4
 8011bac:	5908      	ldr	r0, [r1, r4]
 8011bae:	ebac 0000 	sub.w	r0, ip, r0
 8011bb2:	8804      	ldrh	r4, [r0, #0]
 8011bb4:	2c04      	cmp	r4, #4
 8011bb6:	d937      	bls.n	8011c28 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1b8>
 8011bb8:	8887      	ldrh	r7, [r0, #4]
 8011bba:	b317      	cbz	r7, 8011c02 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x192>
 8011bbc:	2c06      	cmp	r4, #6
 8011bbe:	f85c 1007 	ldr.w	r1, [ip, r7]
 8011bc2:	d940      	bls.n	8011c46 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1d6>
 8011bc4:	88c0      	ldrh	r0, [r0, #6]
 8011bc6:	2800      	cmp	r0, #0
 8011bc8:	d03d      	beq.n	8011c46 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1d6>
 8011bca:	1c4a      	adds	r2, r1, #1
 8011bcc:	f85c 4000 	ldr.w	r4, [ip, r0]
 8011bd0:	d11e      	bne.n	8011c10 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1a0>
 8011bd2:	1c63      	adds	r3, r4, #1
 8011bd4:	d081      	beq.n	8011ada <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6a>
 8011bd6:	6a29      	ldr	r1, [r5, #32]
 8011bd8:	4b24      	ldr	r3, [pc, #144]	; (8011c6c <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1fc>)
 8011bda:	3101      	adds	r1, #1
 8011bdc:	6229      	str	r1, [r5, #32]
 8011bde:	681a      	ldr	r2, [r3, #0]
 8011be0:	9b03      	ldr	r3, [sp, #12]
 8011be2:	405a      	eors	r2, r3
 8011be4:	f04f 0300 	mov.w	r3, #0
 8011be8:	d13d      	bne.n	8011c66 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1f6>
 8011bea:	464b      	mov	r3, r9
 8011bec:	4642      	mov	r2, r8
 8011bee:	4621      	mov	r1, r4
 8011bf0:	4628      	mov	r0, r5
 8011bf2:	960c      	str	r6, [sp, #48]	; 0x30
 8011bf4:	b005      	add	sp, #20
 8011bf6:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011bfa:	f7ff bdab 	b.w	8011754 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>
 8011bfe:	46a4      	mov	ip, r4
 8011c00:	e779      	b.n	8011af6 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x86>
 8011c02:	2c06      	cmp	r4, #6
 8011c04:	d910      	bls.n	8011c28 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1b8>
 8011c06:	88c1      	ldrh	r1, [r0, #6]
 8011c08:	b179      	cbz	r1, 8011c2a <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1ba>
 8011c0a:	f85c 4001 	ldr.w	r4, [ip, r1]
 8011c0e:	4639      	mov	r1, r7
 8011c10:	9600      	str	r6, [sp, #0]
 8011c12:	6a28      	ldr	r0, [r5, #32]
 8011c14:	3001      	adds	r0, #1
 8011c16:	6228      	str	r0, [r5, #32]
 8011c18:	464b      	mov	r3, r9
 8011c1a:	4642      	mov	r2, r8
 8011c1c:	4628      	mov	r0, r5
 8011c1e:	f7ff fd99 	bl	8011754 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>
 8011c22:	2800      	cmp	r0, #0
 8011c24:	d0d5      	beq.n	8011bd2 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x162>
 8011c26:	e759      	b.n	8011adc <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6c>
 8011c28:	2100      	movs	r1, #0
 8011c2a:	9600      	str	r6, [sp, #0]
 8011c2c:	6a28      	ldr	r0, [r5, #32]
 8011c2e:	3001      	adds	r0, #1
 8011c30:	6228      	str	r0, [r5, #32]
 8011c32:	464b      	mov	r3, r9
 8011c34:	4642      	mov	r2, r8
 8011c36:	4628      	mov	r0, r5
 8011c38:	f7ff fd8c 	bl	8011754 <_ZN6tflite21AllocationInfoBuilder23MarkAllocationLifetimesEiPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE>
 8011c3c:	2800      	cmp	r0, #0
 8011c3e:	f47f af4d 	bne.w	8011adc <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6c>
 8011c42:	2400      	movs	r4, #0
 8011c44:	e7c7      	b.n	8011bd6 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x166>
 8011c46:	1c4c      	adds	r4, r1, #1
 8011c48:	d0fb      	beq.n	8011c42 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1d2>
 8011c4a:	e7ee      	b.n	8011c2a <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x1ba>
 8011c4c:	5841      	ldr	r1, [r0, r1]
 8011c4e:	1c48      	adds	r0, r1, #1
 8011c50:	f43f af43 	beq.w	8011ada <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x6a>
 8011c54:	e78b      	b.n	8011b6e <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xfe>
 8011c56:	2100      	movs	r1, #0
 8011c58:	e789      	b.n	8011b6e <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0xfe>
 8011c5a:	4b05      	ldr	r3, [pc, #20]	; (8011c70 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x200>)
 8011c5c:	4a05      	ldr	r2, [pc, #20]	; (8011c74 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x204>)
 8011c5e:	4806      	ldr	r0, [pc, #24]	; (8011c78 <_ZN6tflite21AllocationInfoBuilder32MarkSubgraphLifetimesIfNecessaryEPKNS_8OperatorEPNS_8internal20ScratchBufferRequestEPNS_19ScratchBufferHandleEPNS_19SubgraphAllocationsE+0x208>)
 8011c60:	21b0      	movs	r1, #176	; 0xb0
 8011c62:	f00a fead 	bl	801c9c0 <__assert_func>
 8011c66:	f00b fe69 	bl	801d93c <__stack_chk_fail>
 8011c6a:	bf00      	nop
 8011c6c:	20011294 	.word	0x20011294
 8011c70:	08024734 	.word	0x08024734
 8011c74:	08027474 	.word	0x08027474
 8011c78:	08024804 	.word	0x08024804

08011c7c <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl>:
 8011c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c80:	b087      	sub	sp, #28
 8011c82:	6802      	ldr	r2, [r0, #0]
 8011c84:	4b42      	ldr	r3, [pc, #264]	; (8011d90 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x114>)
 8011c86:	9002      	str	r0, [sp, #8]
 8011c88:	9201      	str	r2, [sp, #4]
 8011c8a:	681b      	ldr	r3, [r3, #0]
 8011c8c:	9305      	str	r3, [sp, #20]
 8011c8e:	f04f 0300 	mov.w	r3, #0
 8011c92:	6813      	ldr	r3, [r2, #0]
 8011c94:	9103      	str	r1, [sp, #12]
 8011c96:	1ad1      	subs	r1, r2, r3
 8011c98:	9100      	str	r1, [sp, #0]
 8011c9a:	880b      	ldrh	r3, [r1, #0]
 8011c9c:	2b10      	cmp	r3, #16
 8011c9e:	d95d      	bls.n	8011d5c <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xe0>
 8011ca0:	8a0b      	ldrh	r3, [r1, #16]
 8011ca2:	2b00      	cmp	r3, #0
 8011ca4:	d05a      	beq.n	8011d5c <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xe0>
 8011ca6:	4611      	mov	r1, r2
 8011ca8:	58d2      	ldr	r2, [r2, r3]
 8011caa:	f8df a0f8 	ldr.w	sl, [pc, #248]	; 8011da4 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x128>
 8011cae:	440b      	add	r3, r1
 8011cb0:	189f      	adds	r7, r3, r2
 8011cb2:	f853 9002 	ldr.w	r9, [r3, r2]
 8011cb6:	3704      	adds	r7, #4
 8011cb8:	2600      	movs	r6, #0
 8011cba:	e000      	b.n	8011cbe <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x42>
 8011cbc:	3601      	adds	r6, #1
 8011cbe:	454e      	cmp	r6, r9
 8011cc0:	d04c      	beq.n	8011d5c <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xe0>
 8011cc2:	463b      	mov	r3, r7
 8011cc4:	3704      	adds	r7, #4
 8011cc6:	681c      	ldr	r4, [r3, #0]
 8011cc8:	591d      	ldr	r5, [r3, r4]
 8011cca:	441c      	add	r4, r3
 8011ccc:	1b65      	subs	r5, r4, r5
 8011cce:	f8b5 b000 	ldrh.w	fp, [r5]
 8011cd2:	f1bb 0f04 	cmp.w	fp, #4
 8011cd6:	d9f1      	bls.n	8011cbc <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x40>
 8011cd8:	88aa      	ldrh	r2, [r5, #4]
 8011cda:	18a0      	adds	r0, r4, r2
 8011cdc:	2a00      	cmp	r2, #0
 8011cde:	d0ed      	beq.n	8011cbc <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x40>
 8011ce0:	58a1      	ldr	r1, [r4, r2]
 8011ce2:	f850 8001 	ldr.w	r8, [r0, r1]
 8011ce6:	f1b8 0f17 	cmp.w	r8, #23
 8011cea:	4408      	add	r0, r1
 8011cec:	d8e6      	bhi.n	8011cbc <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x40>
 8011cee:	3004      	adds	r0, #4
 8011cf0:	4642      	mov	r2, r8
 8011cf2:	4651      	mov	r1, sl
 8011cf4:	f00b fe46 	bl	801d984 <strncmp>
 8011cf8:	2800      	cmp	r0, #0
 8011cfa:	d1df      	bne.n	8011cbc <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x40>
 8011cfc:	f1b8 0f17 	cmp.w	r8, #23
 8011d00:	d1dc      	bne.n	8011cbc <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x40>
 8011d02:	9b00      	ldr	r3, [sp, #0]
 8011d04:	899a      	ldrh	r2, [r3, #12]
 8011d06:	b11a      	cbz	r2, 8011d10 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x94>
 8011d08:	9b01      	ldr	r3, [sp, #4]
 8011d0a:	5899      	ldr	r1, [r3, r2]
 8011d0c:	441a      	add	r2, r3
 8011d0e:	440a      	add	r2, r1
 8011d10:	f1bb 0f06 	cmp.w	fp, #6
 8011d14:	d92d      	bls.n	8011d72 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xf6>
 8011d16:	88e9      	ldrh	r1, [r5, #6]
 8011d18:	bb69      	cbnz	r1, 8011d76 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xfa>
 8011d1a:	6813      	ldr	r3, [r2, #0]
 8011d1c:	428b      	cmp	r3, r1
 8011d1e:	d92c      	bls.n	8011d7a <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xfe>
 8011d20:	1d13      	adds	r3, r2, #4
 8011d22:	eb03 0281 	add.w	r2, r3, r1, lsl #2
 8011d26:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
 8011d2a:	5853      	ldr	r3, [r2, r1]
 8011d2c:	440a      	add	r2, r1
 8011d2e:	1ad3      	subs	r3, r2, r3
 8011d30:	8819      	ldrh	r1, [r3, #0]
 8011d32:	2904      	cmp	r1, #4
 8011d34:	d929      	bls.n	8011d8a <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x10e>
 8011d36:	889b      	ldrh	r3, [r3, #4]
 8011d38:	b33b      	cbz	r3, 8011d8a <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x10e>
 8011d3a:	58d1      	ldr	r1, [r2, r3]
 8011d3c:	441a      	add	r2, r3
 8011d3e:	1853      	adds	r3, r2, r1
 8011d40:	9a02      	ldr	r2, [sp, #8]
 8011d42:	68dc      	ldr	r4, [r3, #12]
 8011d44:	6992      	ldr	r2, [r2, #24]
 8011d46:	9903      	ldr	r1, [sp, #12]
 8011d48:	3310      	adds	r3, #16
 8011d4a:	42a2      	cmp	r2, r4
 8011d4c:	600b      	str	r3, [r1, #0]
 8011d4e:	d0b5      	beq.n	8011cbc <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x40>
 8011d50:	4810      	ldr	r0, [pc, #64]	; (8011d94 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x118>)
 8011d52:	4621      	mov	r1, r4
 8011d54:	f7fc fa5c 	bl	800e210 <_Z11MicroPrintfPKcz>
 8011d58:	2001      	movs	r0, #1
 8011d5a:	e000      	b.n	8011d5e <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0xe2>
 8011d5c:	2000      	movs	r0, #0
 8011d5e:	4b0c      	ldr	r3, [pc, #48]	; (8011d90 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x114>)
 8011d60:	681a      	ldr	r2, [r3, #0]
 8011d62:	9b05      	ldr	r3, [sp, #20]
 8011d64:	405a      	eors	r2, r3
 8011d66:	f04f 0300 	mov.w	r3, #0
 8011d6a:	d10c      	bne.n	8011d86 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x10a>
 8011d6c:	b007      	add	sp, #28
 8011d6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d72:	2100      	movs	r1, #0
 8011d74:	e7d1      	b.n	8011d1a <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x9e>
 8011d76:	5861      	ldr	r1, [r4, r1]
 8011d78:	e7cf      	b.n	8011d1a <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x9e>
 8011d7a:	4b07      	ldr	r3, [pc, #28]	; (8011d98 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x11c>)
 8011d7c:	4a07      	ldr	r2, [pc, #28]	; (8011d9c <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x120>)
 8011d7e:	4808      	ldr	r0, [pc, #32]	; (8011da0 <_ZN6tflite21AllocationInfoBuilder24GetOfflinePlannedOffsetsEPPKl+0x124>)
 8011d80:	21b0      	movs	r1, #176	; 0xb0
 8011d82:	f00a fe1d 	bl	801c9c0 <__assert_func>
 8011d86:	f00b fdd9 	bl	801d93c <__stack_chk_fail>
 8011d8a:	2300      	movs	r3, #0
 8011d8c:	68db      	ldr	r3, [r3, #12]
 8011d8e:	deff      	udf	#255	; 0xff
 8011d90:	20011294 	.word	0x20011294
 8011d94:	0802756c 	.word	0x0802756c
 8011d98:	08024734 	.word	0x08024734
 8011d9c:	08026af8 	.word	0x08026af8
 8011da0:	08024804 	.word	0x08024804
 8011da4:	080275b8 	.word	0x080275b8

08011da8 <arm_fully_connected_s4>:
 8011da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dac:	681d      	ldr	r5, [r3, #0]
 8011dae:	b089      	sub	sp, #36	; 0x24
 8011db0:	e9dd 6912 	ldrd	r6, r9, [sp, #72]	; 0x48
 8011db4:	f8dd a050 	ldr.w	sl, [sp, #80]	; 0x50
 8011db8:	f8dd b058 	ldr.w	fp, [sp, #88]	; 0x58
 8011dbc:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8011dc0:	b315      	cbz	r5, 8011e08 <arm_fully_connected_s4+0x60>
 8011dc2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8011dc4:	460c      	mov	r4, r1
 8011dc6:	4617      	mov	r7, r2
 8011dc8:	f8d9 1000 	ldr.w	r1, [r9]
 8011dcc:	68da      	ldr	r2, [r3, #12]
 8011dce:	e9d4 0e03 	ldrd	r0, lr, [r4, #12]
 8011dd2:	9205      	str	r2, [sp, #20]
 8011dd4:	687b      	ldr	r3, [r7, #4]
 8011dd6:	9104      	str	r1, [sp, #16]
 8011dd8:	f8cd e01c 	str.w	lr, [sp, #28]
 8011ddc:	6839      	ldr	r1, [r7, #0]
 8011dde:	68a2      	ldr	r2, [r4, #8]
 8011de0:	9006      	str	r0, [sp, #24]
 8011de2:	9303      	str	r3, [sp, #12]
 8011de4:	6823      	ldr	r3, [r4, #0]
 8011de6:	9300      	str	r3, [sp, #0]
 8011de8:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8011dec:	4643      	mov	r3, r8
 8011dee:	4630      	mov	r0, r6
 8011df0:	465a      	mov	r2, fp
 8011df2:	4651      	mov	r1, sl
 8011df4:	f000 fed4 	bl	8012ba0 <arm_nn_vec_mat_mult_t_s4>
 8011df8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8011dfa:	f8d9 1000 	ldr.w	r1, [r9]
 8011dfe:	68da      	ldr	r2, [r3, #12]
 8011e00:	3d01      	subs	r5, #1
 8011e02:	440e      	add	r6, r1
 8011e04:	4490      	add	r8, r2
 8011e06:	d1e2      	bne.n	8011dce <arm_fully_connected_s4+0x26>
 8011e08:	2000      	movs	r0, #0
 8011e0a:	b009      	add	sp, #36	; 0x24
 8011e0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011e10 <arm_fully_connected_s8_get_buffer_size>:
 8011e10:	2000      	movs	r0, #0
 8011e12:	4770      	bx	lr

08011e14 <arm_fully_connected_s8>:
 8011e14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e18:	681d      	ldr	r5, [r3, #0]
 8011e1a:	f8d0 9000 	ldr.w	r9, [r0]
 8011e1e:	b08d      	sub	sp, #52	; 0x34
 8011e20:	e9dd 3b1a 	ldrd	r3, fp, [sp, #104]	; 0x68
 8011e24:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8011e26:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 8011e2a:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 8011e2c:	b34d      	cbz	r5, 8011e82 <arm_fully_connected_s8+0x6e>
 8011e2e:	4690      	mov	r8, r2
 8011e30:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8011e32:	460c      	mov	r4, r1
 8011e34:	6811      	ldr	r1, [r2, #0]
 8011e36:	f8db 200c 	ldr.w	r2, [fp, #12]
 8011e3a:	9206      	str	r2, [sp, #24]
 8011e3c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011e40:	9105      	str	r1, [sp, #20]
 8011e42:	2101      	movs	r1, #1
 8011e44:	9700      	str	r7, [sp, #0]
 8011e46:	9109      	str	r1, [sp, #36]	; 0x24
 8011e48:	9204      	str	r2, [sp, #16]
 8011e4a:	f8d8 2000 	ldr.w	r2, [r8]
 8011e4e:	68a1      	ldr	r1, [r4, #8]
 8011e50:	931a      	str	r3, [sp, #104]	; 0x68
 8011e52:	e9cd 1202 	strd	r1, r2, [sp, #8]
 8011e56:	6822      	ldr	r2, [r4, #0]
 8011e58:	9201      	str	r2, [sp, #4]
 8011e5a:	6861      	ldr	r1, [r4, #4]
 8011e5c:	910a      	str	r1, [sp, #40]	; 0x28
 8011e5e:	6921      	ldr	r1, [r4, #16]
 8011e60:	9108      	str	r1, [sp, #32]
 8011e62:	68e1      	ldr	r1, [r4, #12]
 8011e64:	9107      	str	r1, [sp, #28]
 8011e66:	464a      	mov	r2, r9
 8011e68:	4630      	mov	r0, r6
 8011e6a:	4651      	mov	r1, sl
 8011e6c:	f001 fee8 	bl	8013c40 <arm_nn_vec_mat_mult_t_s8>
 8011e70:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8011e72:	f8db 200c 	ldr.w	r2, [fp, #12]
 8011e76:	6819      	ldr	r1, [r3, #0]
 8011e78:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8011e7a:	3d01      	subs	r5, #1
 8011e7c:	440e      	add	r6, r1
 8011e7e:	4417      	add	r7, r2
 8011e80:	d1db      	bne.n	8011e3a <arm_fully_connected_s8+0x26>
 8011e82:	2000      	movs	r0, #0
 8011e84:	b00d      	add	sp, #52	; 0x34
 8011e86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e8a:	bf00      	nop

08011e8c <arm_vector_sum_s8>:
 8011e8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e90:	460e      	mov	r6, r1
 8011e92:	e9dd 8106 	ldrd	r8, r1, [sp, #24]
 8011e96:	4617      	mov	r7, r2
 8011e98:	4605      	mov	r5, r0
 8011e9a:	461c      	mov	r4, r3
 8011e9c:	0092      	lsls	r2, r2, #2
 8011e9e:	b309      	cbz	r1, 8011ee4 <arm_vector_sum_s8+0x58>
 8011ea0:	f00a fdf8 	bl	801ca94 <memcpy>
 8011ea4:	f1b8 0f00 	cmp.w	r8, #0
 8011ea8:	d019      	beq.n	8011ede <arm_vector_sum_s8+0x52>
 8011eaa:	2f00      	cmp	r7, #0
 8011eac:	bfc8      	it	gt
 8011eae:	2100      	movgt	r1, #0
 8011eb0:	dd15      	ble.n	8011ede <arm_vector_sum_s8+0x52>
 8011eb2:	2e00      	cmp	r6, #0
 8011eb4:	bfd8      	it	le
 8011eb6:	2300      	movle	r3, #0
 8011eb8:	dd09      	ble.n	8011ece <arm_vector_sum_s8+0x42>
 8011eba:	eb04 0e06 	add.w	lr, r4, r6
 8011ebe:	2300      	movs	r3, #0
 8011ec0:	f914 cb01 	ldrsb.w	ip, [r4], #1
 8011ec4:	4574      	cmp	r4, lr
 8011ec6:	4463      	add	r3, ip
 8011ec8:	d1fa      	bne.n	8011ec0 <arm_vector_sum_s8+0x34>
 8011eca:	fb03 f308 	mul.w	r3, r3, r8
 8011ece:	f855 2b04 	ldr.w	r2, [r5], #4
 8011ed2:	3101      	adds	r1, #1
 8011ed4:	4413      	add	r3, r2
 8011ed6:	428f      	cmp	r7, r1
 8011ed8:	f845 3c04 	str.w	r3, [r5, #-4]
 8011edc:	d1e9      	bne.n	8011eb2 <arm_vector_sum_s8+0x26>
 8011ede:	2000      	movs	r0, #0
 8011ee0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ee4:	f00a fdfe 	bl	801cae4 <memset>
 8011ee8:	e7dc      	b.n	8011ea4 <arm_vector_sum_s8+0x18>
 8011eea:	bf00      	nop

08011eec <arm_fully_connected_s16_get_buffer_size>:
 8011eec:	2000      	movs	r0, #0
 8011eee:	4770      	bx	lr

08011ef0 <arm_fully_connected_s16>:
 8011ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ef4:	681c      	ldr	r4, [r3, #0]
 8011ef6:	6813      	ldr	r3, [r2, #0]
 8011ef8:	460f      	mov	r7, r1
 8011efa:	491c      	ldr	r1, [pc, #112]	; (8011f6c <arm_fully_connected_s16+0x7c>)
 8011efc:	b087      	sub	sp, #28
 8011efe:	428b      	cmp	r3, r1
 8011f00:	bfd8      	it	le
 8011f02:	f503 4800 	addle.w	r8, r3, #32768	; 0x8000
 8011f06:	4691      	mov	r9, r2
 8011f08:	e9dd 5a10 	ldrd	r5, sl, [sp, #64]	; 0x40
 8011f0c:	f8dd b048 	ldr.w	fp, [sp, #72]	; 0x48
 8011f10:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f12:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8011f14:	bfd4      	ite	le
 8011f16:	ea4f 4828 	movle.w	r8, r8, asr #16
 8011f1a:	f647 78ff 	movwgt	r8, #32767	; 0x7fff
 8011f1e:	b304      	cbz	r4, 8011f62 <arm_fully_connected_s16+0x72>
 8011f20:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011f22:	f8da 1000 	ldr.w	r1, [sl]
 8011f26:	68db      	ldr	r3, [r3, #12]
 8011f28:	f8d7 c010 	ldr.w	ip, [r7, #16]
 8011f2c:	9303      	str	r3, [sp, #12]
 8011f2e:	f8d9 0004 	ldr.w	r0, [r9, #4]
 8011f32:	9102      	str	r1, [sp, #8]
 8011f34:	f8cd c014 	str.w	ip, [sp, #20]
 8011f38:	68fb      	ldr	r3, [r7, #12]
 8011f3a:	9304      	str	r3, [sp, #16]
 8011f3c:	e9cd 8000 	strd	r8, r0, [sp]
 8011f40:	4633      	mov	r3, r6
 8011f42:	4659      	mov	r1, fp
 8011f44:	4628      	mov	r0, r5
 8011f46:	9214      	str	r2, [sp, #80]	; 0x50
 8011f48:	f002 fe0c 	bl	8014b64 <arm_nn_vec_mat_mult_t_s16>
 8011f4c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011f4e:	f8da 1000 	ldr.w	r1, [sl]
 8011f52:	68db      	ldr	r3, [r3, #12]
 8011f54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f56:	3c01      	subs	r4, #1
 8011f58:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8011f5c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8011f60:	d1e2      	bne.n	8011f28 <arm_fully_connected_s16+0x38>
 8011f62:	2000      	movs	r0, #0
 8011f64:	b007      	add	sp, #28
 8011f66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f6a:	bf00      	nop
 8011f6c:	7ffeffff 	.word	0x7ffeffff

08011f70 <arm_convolve_wrapper_s4>:
 8011f70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f74:	b083      	sub	sp, #12
 8011f76:	690c      	ldr	r4, [r1, #16]
 8011f78:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8011f7a:	9600      	str	r6, [sp, #0]
 8011f7c:	e9dd a90f 	ldrd	sl, r9, [sp, #60]	; 0x3c
 8011f80:	e9dd 6b0d 	ldrd	r6, fp, [sp, #52]	; 0x34
 8011f84:	e9dd 8711 	ldrd	r8, r7, [sp, #68]	; 0x44
 8011f88:	9001      	str	r0, [sp, #4]
 8011f8a:	468c      	mov	ip, r1
 8011f8c:	4615      	mov	r5, r2
 8011f8e:	469e      	mov	lr, r3
 8011f90:	b90c      	cbnz	r4, 8011f96 <arm_convolve_wrapper_s4+0x26>
 8011f92:	694c      	ldr	r4, [r1, #20]
 8011f94:	b1dc      	cbz	r4, 8011fce <arm_convolve_wrapper_s4+0x5e>
 8011f96:	f8de 3004 	ldr.w	r3, [lr, #4]
 8011f9a:	2b01      	cmp	r3, #1
 8011f9c:	d106      	bne.n	8011fac <arm_convolve_wrapper_s4+0x3c>
 8011f9e:	f8dc 3018 	ldr.w	r3, [ip, #24]
 8011fa2:	2b01      	cmp	r3, #1
 8011fa4:	d102      	bne.n	8011fac <arm_convolve_wrapper_s4+0x3c>
 8011fa6:	6873      	ldr	r3, [r6, #4]
 8011fa8:	2b01      	cmp	r3, #1
 8011faa:	d01f      	beq.n	8011fec <arm_convolve_wrapper_s4+0x7c>
 8011fac:	9b00      	ldr	r3, [sp, #0]
 8011fae:	9801      	ldr	r0, [sp, #4]
 8011fb0:	930c      	str	r3, [sp, #48]	; 0x30
 8011fb2:	462a      	mov	r2, r5
 8011fb4:	4673      	mov	r3, lr
 8011fb6:	4661      	mov	r1, ip
 8011fb8:	e9cd 8711 	strd	r8, r7, [sp, #68]	; 0x44
 8011fbc:	e9cd a90f 	strd	sl, r9, [sp, #60]	; 0x3c
 8011fc0:	e9cd 6b0d 	strd	r6, fp, [sp, #52]	; 0x34
 8011fc4:	b003      	add	sp, #12
 8011fc6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fca:	f003 b853 	b.w	8015074 <arm_convolve_s4>
 8011fce:	68b4      	ldr	r4, [r6, #8]
 8011fd0:	2c01      	cmp	r4, #1
 8011fd2:	d1e0      	bne.n	8011f96 <arm_convolve_wrapper_s4+0x26>
 8011fd4:	6874      	ldr	r4, [r6, #4]
 8011fd6:	2c01      	cmp	r4, #1
 8011fd8:	d1dd      	bne.n	8011f96 <arm_convolve_wrapper_s4+0x26>
 8011fda:	698c      	ldr	r4, [r1, #24]
 8011fdc:	2c01      	cmp	r4, #1
 8011fde:	d1e5      	bne.n	8011fac <arm_convolve_wrapper_s4+0x3c>
 8011fe0:	69cc      	ldr	r4, [r1, #28]
 8011fe2:	2c01      	cmp	r4, #1
 8011fe4:	d01e      	beq.n	8012024 <arm_convolve_wrapper_s4+0xb4>
 8011fe6:	685b      	ldr	r3, [r3, #4]
 8011fe8:	2b01      	cmp	r3, #1
 8011fea:	d1df      	bne.n	8011fac <arm_convolve_wrapper_s4+0x3c>
 8011fec:	f8de 200c 	ldr.w	r2, [lr, #12]
 8011ff0:	f8dc 3008 	ldr.w	r3, [ip, #8]
 8011ff4:	fb02 f303 	mul.w	r3, r2, r3
 8011ff8:	079b      	lsls	r3, r3, #30
 8011ffa:	d1d7      	bne.n	8011fac <arm_convolve_wrapper_s4+0x3c>
 8011ffc:	68f3      	ldr	r3, [r6, #12]
 8011ffe:	429a      	cmp	r2, r3
 8012000:	d1d4      	bne.n	8011fac <arm_convolve_wrapper_s4+0x3c>
 8012002:	9b00      	ldr	r3, [sp, #0]
 8012004:	9801      	ldr	r0, [sp, #4]
 8012006:	930c      	str	r3, [sp, #48]	; 0x30
 8012008:	462a      	mov	r2, r5
 801200a:	4673      	mov	r3, lr
 801200c:	4661      	mov	r1, ip
 801200e:	e9cd 8711 	strd	r8, r7, [sp, #68]	; 0x44
 8012012:	e9cd a90f 	strd	sl, r9, [sp, #60]	; 0x3c
 8012016:	e9cd 6b0d 	strd	r6, fp, [sp, #52]	; 0x34
 801201a:	b003      	add	sp, #12
 801201c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012020:	f002 bf26 	b.w	8014e70 <arm_convolve_1_x_n_s4>
 8012024:	688c      	ldr	r4, [r1, #8]
 8012026:	2c01      	cmp	r4, #1
 8012028:	d102      	bne.n	8012030 <arm_convolve_wrapper_s4+0xc0>
 801202a:	68cc      	ldr	r4, [r1, #12]
 801202c:	2c01      	cmp	r4, #1
 801202e:	d010      	beq.n	8012052 <arm_convolve_wrapper_s4+0xe2>
 8012030:	9b00      	ldr	r3, [sp, #0]
 8012032:	9801      	ldr	r0, [sp, #4]
 8012034:	930c      	str	r3, [sp, #48]	; 0x30
 8012036:	462a      	mov	r2, r5
 8012038:	4673      	mov	r3, lr
 801203a:	4661      	mov	r1, ip
 801203c:	e9cd 8711 	strd	r8, r7, [sp, #68]	; 0x44
 8012040:	e9cd a90f 	strd	sl, r9, [sp, #60]	; 0x3c
 8012044:	e9cd 6b0d 	strd	r6, fp, [sp, #52]	; 0x34
 8012048:	b003      	add	sp, #12
 801204a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801204e:	f002 bf4f 	b.w	8014ef0 <arm_convolve_1x1_s4>
 8012052:	b003      	add	sp, #12
 8012054:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012058:	f002 bfc4 	b.w	8014fe4 <arm_convolve_1x1_s4_fast>

0801205c <arm_convolve_1x1_s8_fast>:
 801205c:	6908      	ldr	r0, [r1, #16]
 801205e:	2800      	cmp	r0, #0
 8012060:	d130      	bne.n	80120c4 <arm_convolve_1x1_s8_fast+0x68>
 8012062:	b530      	push	{r4, r5, lr}
 8012064:	694d      	ldr	r5, [r1, #20]
 8012066:	b08d      	sub	sp, #52	; 0x34
 8012068:	bb4d      	cbnz	r5, 80120be <arm_convolve_1x1_s8_fast+0x62>
 801206a:	6888      	ldr	r0, [r1, #8]
 801206c:	2801      	cmp	r0, #1
 801206e:	d126      	bne.n	80120be <arm_convolve_1x1_s8_fast+0x62>
 8012070:	68c8      	ldr	r0, [r1, #12]
 8012072:	2801      	cmp	r0, #1
 8012074:	d123      	bne.n	80120be <arm_convolve_1x1_s8_fast+0x62>
 8012076:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012078:	68c0      	ldr	r0, [r0, #12]
 801207a:	9009      	str	r0, [sp, #36]	; 0x24
 801207c:	9003      	str	r0, [sp, #12]
 801207e:	e9d3 4001 	ldrd	r4, r0, [r3, #4]
 8012082:	fb00 f404 	mul.w	r4, r0, r4
 8012086:	6818      	ldr	r0, [r3, #0]
 8012088:	68db      	ldr	r3, [r3, #12]
 801208a:	9304      	str	r3, [sp, #16]
 801208c:	930a      	str	r3, [sp, #40]	; 0x28
 801208e:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8012090:	9308      	str	r3, [sp, #32]
 8012092:	6a0b      	ldr	r3, [r1, #32]
 8012094:	9307      	str	r3, [sp, #28]
 8012096:	fb00 f404 	mul.w	r4, r0, r4
 801209a:	e9d1 3000 	ldrd	r3, r0, [r1]
 801209e:	e9cd 3005 	strd	r3, r0, [sp, #20]
 80120a2:	9402      	str	r4, [sp, #8]
 80120a4:	e9d2 3100 	ldrd	r3, r1, [r2]
 80120a8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80120aa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80120ac:	e9cd 3100 	strd	r3, r1, [sp]
 80120b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80120b2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80120b4:	f001 f8e0 	bl	8013278 <arm_nn_mat_mult_nt_t_s8>
 80120b8:	4628      	mov	r0, r5
 80120ba:	b00d      	add	sp, #52	; 0x34
 80120bc:	bd30      	pop	{r4, r5, pc}
 80120be:	f04f 30ff 	mov.w	r0, #4294967295
 80120c2:	e7fa      	b.n	80120ba <arm_convolve_1x1_s8_fast+0x5e>
 80120c4:	f04f 30ff 	mov.w	r0, #4294967295
 80120c8:	4770      	bx	lr
 80120ca:	bf00      	nop

080120cc <arm_convolve_1x1_s8_fast_get_buffer_size>:
 80120cc:	2000      	movs	r0, #0
 80120ce:	4770      	bx	lr

080120d0 <arm_convolve_wrapper_s8_get_buffer_size>:
 80120d0:	6903      	ldr	r3, [r0, #16]
 80120d2:	b410      	push	{r4}
 80120d4:	4684      	mov	ip, r0
 80120d6:	b90b      	cbnz	r3, 80120dc <arm_convolve_wrapper_s8_get_buffer_size+0xc>
 80120d8:	6940      	ldr	r0, [r0, #20]
 80120da:	b358      	cbz	r0, 8012134 <arm_convolve_wrapper_s8_get_buffer_size+0x64>
 80120dc:	e9d2 2401 	ldrd	r2, r4, [r2, #4]
 80120e0:	684b      	ldr	r3, [r1, #4]
 80120e2:	2b01      	cmp	r3, #1
 80120e4:	d105      	bne.n	80120f2 <arm_convolve_wrapper_s8_get_buffer_size+0x22>
 80120e6:	f8dc 3018 	ldr.w	r3, [ip, #24]
 80120ea:	2b01      	cmp	r3, #1
 80120ec:	d101      	bne.n	80120f2 <arm_convolve_wrapper_s8_get_buffer_size+0x22>
 80120ee:	2a01      	cmp	r2, #1
 80120f0:	d00b      	beq.n	801210a <arm_convolve_wrapper_s8_get_buffer_size+0x3a>
 80120f2:	68cb      	ldr	r3, [r1, #12]
 80120f4:	fb04 f002 	mul.w	r0, r4, r2
 80120f8:	fb03 f000 	mul.w	r0, r3, r0
 80120fc:	f010 0303 	ands.w	r3, r0, #3
 8012100:	d10f      	bne.n	8012122 <arm_convolve_wrapper_s8_get_buffer_size+0x52>
 8012102:	0080      	lsls	r0, r0, #2
 8012104:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012108:	4770      	bx	lr
 801210a:	68cb      	ldr	r3, [r1, #12]
 801210c:	f8dc 2008 	ldr.w	r2, [ip, #8]
 8012110:	fb03 f202 	mul.w	r2, r3, r2
 8012114:	0792      	lsls	r2, r2, #30
 8012116:	d121      	bne.n	801215c <arm_convolve_wrapper_s8_get_buffer_size+0x8c>
 8012118:	fb04 f003 	mul.w	r0, r4, r3
 801211c:	f010 0303 	ands.w	r3, r0, #3
 8012120:	d0ef      	beq.n	8012102 <arm_convolve_wrapper_s8_get_buffer_size+0x32>
 8012122:	4242      	negs	r2, r0
 8012124:	f002 0203 	and.w	r2, r2, #3
 8012128:	f100 0004 	add.w	r0, r0, #4
 801212c:	bf58      	it	pl
 801212e:	4253      	negpl	r3, r2
 8012130:	1ac0      	subs	r0, r0, r3
 8012132:	e7e6      	b.n	8012102 <arm_convolve_wrapper_s8_get_buffer_size+0x32>
 8012134:	e9d2 2401 	ldrd	r2, r4, [r2, #4]
 8012138:	2c01      	cmp	r4, #1
 801213a:	d1d1      	bne.n	80120e0 <arm_convolve_wrapper_s8_get_buffer_size+0x10>
 801213c:	2a01      	cmp	r2, #1
 801213e:	d1cf      	bne.n	80120e0 <arm_convolve_wrapper_s8_get_buffer_size+0x10>
 8012140:	f8dc 3018 	ldr.w	r3, [ip, #24]
 8012144:	2b01      	cmp	r3, #1
 8012146:	d1d4      	bne.n	80120f2 <arm_convolve_wrapper_s8_get_buffer_size+0x22>
 8012148:	f8dc 301c 	ldr.w	r3, [ip, #28]
 801214c:	2b01      	cmp	r3, #1
 801214e:	d0d9      	beq.n	8012104 <arm_convolve_wrapper_s8_get_buffer_size+0x34>
 8012150:	684c      	ldr	r4, [r1, #4]
 8012152:	2c01      	cmp	r4, #1
 8012154:	d0d9      	beq.n	801210a <arm_convolve_wrapper_s8_get_buffer_size+0x3a>
 8012156:	68cb      	ldr	r3, [r1, #12]
 8012158:	4614      	mov	r4, r2
 801215a:	e7cb      	b.n	80120f4 <arm_convolve_wrapper_s8_get_buffer_size+0x24>
 801215c:	2201      	movs	r2, #1
 801215e:	e7c9      	b.n	80120f4 <arm_convolve_wrapper_s8_get_buffer_size+0x24>

08012160 <arm_convolve_wrapper_s8>:
 8012160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012164:	b085      	sub	sp, #20
 8012166:	690c      	ldr	r4, [r1, #16]
 8012168:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801216a:	9601      	str	r6, [sp, #4]
 801216c:	e9dd a911 	ldrd	sl, r9, [sp, #68]	; 0x44
 8012170:	e9dd 6b0f 	ldrd	r6, fp, [sp, #60]	; 0x3c
 8012174:	e9dd 8713 	ldrd	r8, r7, [sp, #76]	; 0x4c
 8012178:	9002      	str	r0, [sp, #8]
 801217a:	468c      	mov	ip, r1
 801217c:	9203      	str	r2, [sp, #12]
 801217e:	469e      	mov	lr, r3
 8012180:	b90c      	cbnz	r4, 8012186 <arm_convolve_wrapper_s8+0x26>
 8012182:	694c      	ldr	r4, [r1, #20]
 8012184:	b1dc      	cbz	r4, 80121be <arm_convolve_wrapper_s8+0x5e>
 8012186:	f8de 3004 	ldr.w	r3, [lr, #4]
 801218a:	2b01      	cmp	r3, #1
 801218c:	d106      	bne.n	801219c <arm_convolve_wrapper_s8+0x3c>
 801218e:	f8dc 3018 	ldr.w	r3, [ip, #24]
 8012192:	2b01      	cmp	r3, #1
 8012194:	d102      	bne.n	801219c <arm_convolve_wrapper_s8+0x3c>
 8012196:	6873      	ldr	r3, [r6, #4]
 8012198:	2b01      	cmp	r3, #1
 801219a:	d020      	beq.n	80121de <arm_convolve_wrapper_s8+0x7e>
 801219c:	9b01      	ldr	r3, [sp, #4]
 801219e:	9a03      	ldr	r2, [sp, #12]
 80121a0:	9802      	ldr	r0, [sp, #8]
 80121a2:	930e      	str	r3, [sp, #56]	; 0x38
 80121a4:	4661      	mov	r1, ip
 80121a6:	4673      	mov	r3, lr
 80121a8:	e9cd 8713 	strd	r8, r7, [sp, #76]	; 0x4c
 80121ac:	e9cd a911 	strd	sl, r9, [sp, #68]	; 0x44
 80121b0:	e9cd 6b0f 	strd	r6, fp, [sp, #60]	; 0x3c
 80121b4:	b005      	add	sp, #20
 80121b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121ba:	f003 be8f 	b.w	8015edc <arm_convolve_s8>
 80121be:	68b4      	ldr	r4, [r6, #8]
 80121c0:	2c01      	cmp	r4, #1
 80121c2:	d1e0      	bne.n	8012186 <arm_convolve_wrapper_s8+0x26>
 80121c4:	6874      	ldr	r4, [r6, #4]
 80121c6:	2c01      	cmp	r4, #1
 80121c8:	d1dd      	bne.n	8012186 <arm_convolve_wrapper_s8+0x26>
 80121ca:	698c      	ldr	r4, [r1, #24]
 80121cc:	2c01      	cmp	r4, #1
 80121ce:	d1e5      	bne.n	801219c <arm_convolve_wrapper_s8+0x3c>
 80121d0:	69cc      	ldr	r4, [r1, #28]
 80121d2:	2c01      	cmp	r4, #1
 80121d4:	d01f      	beq.n	8012216 <arm_convolve_wrapper_s8+0xb6>
 80121d6:	f8de 3004 	ldr.w	r3, [lr, #4]
 80121da:	2b01      	cmp	r3, #1
 80121dc:	d1de      	bne.n	801219c <arm_convolve_wrapper_s8+0x3c>
 80121de:	f8de 200c 	ldr.w	r2, [lr, #12]
 80121e2:	f8dc 3008 	ldr.w	r3, [ip, #8]
 80121e6:	fb02 f303 	mul.w	r3, r2, r3
 80121ea:	079b      	lsls	r3, r3, #30
 80121ec:	d1d6      	bne.n	801219c <arm_convolve_wrapper_s8+0x3c>
 80121ee:	68f3      	ldr	r3, [r6, #12]
 80121f0:	429a      	cmp	r2, r3
 80121f2:	d1d3      	bne.n	801219c <arm_convolve_wrapper_s8+0x3c>
 80121f4:	9b01      	ldr	r3, [sp, #4]
 80121f6:	9a03      	ldr	r2, [sp, #12]
 80121f8:	9802      	ldr	r0, [sp, #8]
 80121fa:	930e      	str	r3, [sp, #56]	; 0x38
 80121fc:	4661      	mov	r1, ip
 80121fe:	4673      	mov	r3, lr
 8012200:	e9cd 8713 	strd	r8, r7, [sp, #76]	; 0x4c
 8012204:	e9cd a911 	strd	sl, r9, [sp, #68]	; 0x44
 8012208:	e9cd 6b0f 	strd	r6, fp, [sp, #60]	; 0x3c
 801220c:	b005      	add	sp, #20
 801220e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012212:	f003 bdc5 	b.w	8015da0 <arm_convolve_1_x_n_s8>
 8012216:	68dc      	ldr	r4, [r3, #12]
 8012218:	68f5      	ldr	r5, [r6, #12]
 801221a:	42ac      	cmp	r4, r5
 801221c:	d1db      	bne.n	80121d6 <arm_convolve_wrapper_s8+0x76>
 801221e:	688c      	ldr	r4, [r1, #8]
 8012220:	2c01      	cmp	r4, #1
 8012222:	d102      	bne.n	801222a <arm_convolve_wrapper_s8+0xca>
 8012224:	68cc      	ldr	r4, [r1, #12]
 8012226:	2c01      	cmp	r4, #1
 8012228:	d010      	beq.n	801224c <arm_convolve_wrapper_s8+0xec>
 801222a:	9b01      	ldr	r3, [sp, #4]
 801222c:	9a03      	ldr	r2, [sp, #12]
 801222e:	9802      	ldr	r0, [sp, #8]
 8012230:	930e      	str	r3, [sp, #56]	; 0x38
 8012232:	4661      	mov	r1, ip
 8012234:	4673      	mov	r3, lr
 8012236:	e9cd 8713 	strd	r8, r7, [sp, #76]	; 0x4c
 801223a:	e9cd a911 	strd	sl, r9, [sp, #68]	; 0x44
 801223e:	e9cd 6b0f 	strd	r6, fp, [sp, #60]	; 0x3c
 8012242:	b005      	add	sp, #20
 8012244:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012248:	f003 bdca 	b.w	8015de0 <arm_convolve_1x1_s8>
 801224c:	b005      	add	sp, #20
 801224e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012252:	f7ff bf03 	b.w	801205c <arm_convolve_1x1_s8_fast>
 8012256:	bf00      	nop

08012258 <arm_convolve_wrapper_s16_get_buffer_size>:
 8012258:	b410      	push	{r4}
 801225a:	68c8      	ldr	r0, [r1, #12]
 801225c:	6894      	ldr	r4, [r2, #8]
 801225e:	6853      	ldr	r3, [r2, #4]
 8012260:	fb04 f000 	mul.w	r0, r4, r0
 8012264:	fb03 f000 	mul.w	r0, r3, r0
 8012268:	0080      	lsls	r0, r0, #2
 801226a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801226e:	4770      	bx	lr

08012270 <arm_convolve_wrapper_s16>:
 8012270:	f004 bdbc 	b.w	8016dec <arm_convolve_s16>

08012274 <arm_max_pool_s8>:
 8012274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012278:	b0ab      	sub	sp, #172	; 0xac
 801227a:	6895      	ldr	r5, [r2, #8]
 801227c:	930f      	str	r3, [sp, #60]	; 0x3c
 801227e:	6853      	ldr	r3, [r2, #4]
 8012280:	f8d2 a00c 	ldr.w	sl, [r2, #12]
 8012284:	931d      	str	r3, [sp, #116]	; 0x74
 8012286:	e9dd 0434 	ldrd	r0, r4, [sp, #208]	; 0xd0
 801228a:	fb05 f303 	mul.w	r3, r5, r3
 801228e:	fb0a f303 	mul.w	r3, sl, r3
 8012292:	6866      	ldr	r6, [r4, #4]
 8012294:	9323      	str	r3, [sp, #140]	; 0x8c
 8012296:	68a3      	ldr	r3, [r4, #8]
 8012298:	684c      	ldr	r4, [r1, #4]
 801229a:	6812      	ldr	r2, [r2, #0]
 801229c:	941f      	str	r4, [sp, #124]	; 0x7c
 801229e:	680c      	ldr	r4, [r1, #0]
 80122a0:	9411      	str	r4, [sp, #68]	; 0x44
 80122a2:	6844      	ldr	r4, [r0, #4]
 80122a4:	6880      	ldr	r0, [r0, #8]
 80122a6:	690f      	ldr	r7, [r1, #16]
 80122a8:	9420      	str	r4, [sp, #128]	; 0x80
 80122aa:	9012      	str	r0, [sp, #72]	; 0x48
 80122ac:	688c      	ldr	r4, [r1, #8]
 80122ae:	68c8      	ldr	r0, [r1, #12]
 80122b0:	6949      	ldr	r1, [r1, #20]
 80122b2:	951e      	str	r5, [sp, #120]	; 0x78
 80122b4:	2a00      	cmp	r2, #0
 80122b6:	9213      	str	r2, [sp, #76]	; 0x4c
 80122b8:	9617      	str	r6, [sp, #92]	; 0x5c
 80122ba:	930e      	str	r3, [sp, #56]	; 0x38
 80122bc:	9021      	str	r0, [sp, #132]	; 0x84
 80122be:	9422      	str	r4, [sp, #136]	; 0x88
 80122c0:	9718      	str	r7, [sp, #96]	; 0x60
 80122c2:	9119      	str	r1, [sp, #100]	; 0x64
 80122c4:	f340 8192 	ble.w	80125ec <arm_max_pool_s8+0x378>
 80122c8:	ea4f 02aa 	mov.w	r2, sl, asr #2
 80122cc:	4619      	mov	r1, r3
 80122ce:	9202      	str	r2, [sp, #8]
 80122d0:	fb03 f306 	mul.w	r3, r3, r6
 80122d4:	ebc2 7282 	rsb	r2, r2, r2, lsl #30
 80122d8:	fb0a f303 	mul.w	r3, sl, r3
 80122dc:	0092      	lsls	r2, r2, #2
 80122de:	9216      	str	r2, [sp, #88]	; 0x58
 80122e0:	109a      	asrs	r2, r3, #2
 80122e2:	9224      	str	r2, [sp, #144]	; 0x90
 80122e4:	f003 0203 	and.w	r2, r3, #3
 80122e8:	f023 0303 	bic.w	r3, r3, #3
 80122ec:	9327      	str	r3, [sp, #156]	; 0x9c
 80122ee:	4243      	negs	r3, r0
 80122f0:	9325      	str	r3, [sp, #148]	; 0x94
 80122f2:	f02a 0303 	bic.w	r3, sl, #3
 80122f6:	9303      	str	r3, [sp, #12]
 80122f8:	fb05 f30a 	mul.w	r3, r5, sl
 80122fc:	9307      	str	r3, [sp, #28]
 80122fe:	fb0a f301 	mul.w	r3, sl, r1
 8012302:	f00a 0603 	and.w	r6, sl, #3
 8012306:	9326      	str	r3, [sp, #152]	; 0x98
 8012308:	4263      	negs	r3, r4
 801230a:	921b      	str	r2, [sp, #108]	; 0x6c
 801230c:	9329      	str	r3, [sp, #164]	; 0xa4
 801230e:	46d1      	mov	r9, sl
 8012310:	46b0      	mov	r8, r6
 8012312:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012314:	2b00      	cmp	r3, #0
 8012316:	f340 80f9 	ble.w	801250c <arm_max_pool_s8+0x298>
 801231a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801231c:	9315      	str	r3, [sp, #84]	; 0x54
 801231e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8012320:	9314      	str	r3, [sp, #80]	; 0x50
 8012322:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8012324:	930d      	str	r3, [sp, #52]	; 0x34
 8012326:	2300      	movs	r3, #0
 8012328:	931a      	str	r3, [sp, #104]	; 0x68
 801232a:	46ca      	mov	sl, r9
 801232c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801232e:	2b00      	cmp	r3, #0
 8012330:	f340 80d8 	ble.w	80124e4 <arm_max_pool_s8+0x270>
 8012334:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012336:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012338:	981d      	ldr	r0, [sp, #116]	; 0x74
 801233a:	2a00      	cmp	r2, #0
 801233c:	bfd8      	it	le
 801233e:	4619      	movle	r1, r3
 8012340:	4403      	add	r3, r0
 8012342:	9820      	ldr	r0, [sp, #128]	; 0x80
 8012344:	bfc8      	it	gt
 8012346:	2100      	movgt	r1, #0
 8012348:	4283      	cmp	r3, r0
 801234a:	bfa8      	it	ge
 801234c:	4603      	movge	r3, r0
 801234e:	9306      	str	r3, [sp, #24]
 8012350:	188b      	adds	r3, r1, r2
 8012352:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8012354:	9110      	str	r1, [sp, #64]	; 0x40
 8012356:	fb02 f303 	mul.w	r3, r2, r3
 801235a:	931c      	str	r3, [sp, #112]	; 0x70
 801235c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801235e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012360:	18d3      	adds	r3, r2, r3
 8012362:	930a      	str	r3, [sp, #40]	; 0x28
 8012364:	9a03      	ldr	r2, [sp, #12]
 8012366:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012368:	189f      	adds	r7, r3, r2
 801236a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801236c:	9309      	str	r3, [sp, #36]	; 0x24
 801236e:	2300      	movs	r3, #0
 8012370:	930c      	str	r3, [sp, #48]	; 0x30
 8012372:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012374:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012376:	9912      	ldr	r1, [sp, #72]	; 0x48
 8012378:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801237a:	2a00      	cmp	r2, #0
 801237c:	bfd8      	it	le
 801237e:	461c      	movle	r4, r3
 8012380:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8012382:	eb03 0007 	add.w	r0, r3, r7
 8012386:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012388:	9001      	str	r0, [sp, #4]
 801238a:	bfc8      	it	gt
 801238c:	2400      	movgt	r4, #0
 801238e:	428b      	cmp	r3, r1
 8012390:	bfa8      	it	ge
 8012392:	460b      	movge	r3, r1
 8012394:	469b      	mov	fp, r3
 8012396:	9b06      	ldr	r3, [sp, #24]
 8012398:	9408      	str	r4, [sp, #32]
 801239a:	429d      	cmp	r5, r3
 801239c:	f280 808c 	bge.w	80124b8 <arm_max_pool_s8+0x244>
 80123a0:	455c      	cmp	r4, fp
 80123a2:	f280 8089 	bge.w	80124b8 <arm_max_pool_s8+0x244>
 80123a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80123a8:	eb04 0902 	add.w	r9, r4, r2
 80123ac:	4499      	add	r9, r3
 80123ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80123b0:	fb0a 3909 	mla	r9, sl, r9, r3
 80123b4:	4652      	mov	r2, sl
 80123b6:	4649      	mov	r1, r9
 80123b8:	f00a fb6c 	bl	801ca94 <memcpy>
 80123bc:	e9cd 5904 	strd	r5, r9, [sp, #16]
 80123c0:	46a4      	mov	ip, r4
 80123c2:	f10c 0c01 	add.w	ip, ip, #1
 80123c6:	44d1      	add	r9, sl
 80123c8:	45e3      	cmp	fp, ip
 80123ca:	bf18      	it	ne
 80123cc:	464d      	movne	r5, r9
 80123ce:	d056      	beq.n	801247e <arm_max_pool_s8+0x20a>
 80123d0:	9b02      	ldr	r3, [sp, #8]
 80123d2:	2b00      	cmp	r3, #0
 80123d4:	dd65      	ble.n	80124a2 <arm_max_pool_s8+0x22e>
 80123d6:	9801      	ldr	r0, [sp, #4]
 80123d8:	f855 1b04 	ldr.w	r1, [r5], #4
 80123dc:	6803      	ldr	r3, [r0, #0]
 80123de:	b24e      	sxtb	r6, r1
 80123e0:	b25c      	sxtb	r4, r3
 80123e2:	42b4      	cmp	r4, r6
 80123e4:	bfb8      	it	lt
 80123e6:	4634      	movlt	r4, r6
 80123e8:	f341 2e07 	sbfx	lr, r1, #8, #8
 80123ec:	f343 2607 	sbfx	r6, r3, #8, #8
 80123f0:	461a      	mov	r2, r3
 80123f2:	4576      	cmp	r6, lr
 80123f4:	bfb8      	it	lt
 80123f6:	4676      	movlt	r6, lr
 80123f8:	f364 0307 	bfi	r3, r4, #0, #8
 80123fc:	f341 4e07 	sbfx	lr, r1, #16, #8
 8012400:	f342 4407 	sbfx	r4, r2, #16, #8
 8012404:	4574      	cmp	r4, lr
 8012406:	ea4f 6222 	mov.w	r2, r2, asr #24
 801240a:	bfb8      	it	lt
 801240c:	4674      	movlt	r4, lr
 801240e:	f366 230f 	bfi	r3, r6, #8, #8
 8012412:	ebb2 6f21 	cmp.w	r2, r1, asr #24
 8012416:	f364 4317 	bfi	r3, r4, #16, #8
 801241a:	ea4f 6421 	mov.w	r4, r1, asr #24
 801241e:	da42      	bge.n	80124a6 <arm_max_pool_s8+0x232>
 8012420:	f364 631f 	bfi	r3, r4, #24, #8
 8012424:	f840 3b04 	str.w	r3, [r0], #4
 8012428:	42b8      	cmp	r0, r7
 801242a:	d1d5      	bne.n	80123d8 <arm_max_pool_s8+0x164>
 801242c:	9b03      	ldr	r3, [sp, #12]
 801242e:	eb09 0503 	add.w	r5, r9, r3
 8012432:	463b      	mov	r3, r7
 8012434:	f1b8 0f00 	cmp.w	r8, #0
 8012438:	d0c3      	beq.n	80123c2 <arm_max_pool_s8+0x14e>
 801243a:	f995 2000 	ldrsb.w	r2, [r5]
 801243e:	f993 1000 	ldrsb.w	r1, [r3]
 8012442:	4291      	cmp	r1, r2
 8012444:	bfb8      	it	lt
 8012446:	701a      	strblt	r2, [r3, #0]
 8012448:	f1b8 0f01 	cmp.w	r8, #1
 801244c:	d0b9      	beq.n	80123c2 <arm_max_pool_s8+0x14e>
 801244e:	f995 2001 	ldrsb.w	r2, [r5, #1]
 8012452:	f993 1001 	ldrsb.w	r1, [r3, #1]
 8012456:	4291      	cmp	r1, r2
 8012458:	bfb8      	it	lt
 801245a:	705a      	strblt	r2, [r3, #1]
 801245c:	f1b8 0f02 	cmp.w	r8, #2
 8012460:	d0af      	beq.n	80123c2 <arm_max_pool_s8+0x14e>
 8012462:	f995 2002 	ldrsb.w	r2, [r5, #2]
 8012466:	f993 1002 	ldrsb.w	r1, [r3, #2]
 801246a:	f10c 0c01 	add.w	ip, ip, #1
 801246e:	4291      	cmp	r1, r2
 8012470:	bfb8      	it	lt
 8012472:	709a      	strblt	r2, [r3, #2]
 8012474:	44d1      	add	r9, sl
 8012476:	45e3      	cmp	fp, ip
 8012478:	bf18      	it	ne
 801247a:	464d      	movne	r5, r9
 801247c:	d1a8      	bne.n	80123d0 <arm_max_pool_s8+0x15c>
 801247e:	9a05      	ldr	r2, [sp, #20]
 8012480:	9907      	ldr	r1, [sp, #28]
 8012482:	9b04      	ldr	r3, [sp, #16]
 8012484:	440a      	add	r2, r1
 8012486:	4691      	mov	r9, r2
 8012488:	9a06      	ldr	r2, [sp, #24]
 801248a:	3301      	adds	r3, #1
 801248c:	429a      	cmp	r2, r3
 801248e:	9304      	str	r3, [sp, #16]
 8012490:	d012      	beq.n	80124b8 <arm_max_pool_s8+0x244>
 8012492:	9b02      	ldr	r3, [sp, #8]
 8012494:	f8dd c020 	ldr.w	ip, [sp, #32]
 8012498:	f8cd 9014 	str.w	r9, [sp, #20]
 801249c:	2b00      	cmp	r3, #0
 801249e:	464d      	mov	r5, r9
 80124a0:	dc99      	bgt.n	80123d6 <arm_max_pool_s8+0x162>
 80124a2:	9b01      	ldr	r3, [sp, #4]
 80124a4:	e7c6      	b.n	8012434 <arm_max_pool_s8+0x1c0>
 80124a6:	f840 3b04 	str.w	r3, [r0], #4
 80124aa:	42b8      	cmp	r0, r7
 80124ac:	d194      	bne.n	80123d8 <arm_max_pool_s8+0x164>
 80124ae:	9b03      	ldr	r3, [sp, #12]
 80124b0:	eb09 0503 	add.w	r5, r9, r3
 80124b4:	463b      	mov	r3, r7
 80124b6:	e7bd      	b.n	8012434 <arm_max_pool_s8+0x1c0>
 80124b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80124ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80124bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80124be:	4411      	add	r1, r2
 80124c0:	9109      	str	r1, [sp, #36]	; 0x24
 80124c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80124c4:	1a89      	subs	r1, r1, r2
 80124c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80124c8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80124ca:	1a8a      	subs	r2, r1, r2
 80124cc:	920a      	str	r2, [sp, #40]	; 0x28
 80124ce:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80124d0:	3301      	adds	r3, #1
 80124d2:	429a      	cmp	r2, r3
 80124d4:	930c      	str	r3, [sp, #48]	; 0x30
 80124d6:	4457      	add	r7, sl
 80124d8:	f47f af4b 	bne.w	8012372 <arm_max_pool_s8+0xfe>
 80124dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80124de:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80124e0:	4413      	add	r3, r2
 80124e2:	930d      	str	r3, [sp, #52]	; 0x34
 80124e4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80124e6:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80124e8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80124ea:	440a      	add	r2, r1
 80124ec:	9214      	str	r2, [sp, #80]	; 0x50
 80124ee:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80124f0:	1a52      	subs	r2, r2, r1
 80124f2:	9215      	str	r2, [sp, #84]	; 0x54
 80124f4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80124f6:	3301      	adds	r3, #1
 80124f8:	429a      	cmp	r2, r3
 80124fa:	931a      	str	r3, [sp, #104]	; 0x68
 80124fc:	f47f af16 	bne.w	801232c <arm_max_pool_s8+0xb8>
 8012500:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8012502:	2b00      	cmp	r3, #0
 8012504:	46d1      	mov	r9, sl
 8012506:	dc06      	bgt.n	8012516 <arm_max_pool_s8+0x2a2>
 8012508:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801250a:	e03c      	b.n	8012586 <arm_max_pool_s8+0x312>
 801250c:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801250e:	930d      	str	r3, [sp, #52]	; 0x34
 8012510:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8012512:	2b00      	cmp	r3, #0
 8012514:	ddf8      	ble.n	8012508 <arm_max_pool_s8+0x294>
 8012516:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8012518:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801251a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801251c:	e9dd 4518 	ldrd	r4, r5, [sp, #96]	; 0x60
 8012520:	189a      	adds	r2, r3, r2
 8012522:	461e      	mov	r6, r3
 8012524:	6833      	ldr	r3, [r6, #0]
 8012526:	b259      	sxtb	r1, r3
 8012528:	42a1      	cmp	r1, r4
 801252a:	bfb8      	it	lt
 801252c:	4621      	movlt	r1, r4
 801252e:	b249      	sxtb	r1, r1
 8012530:	42a9      	cmp	r1, r5
 8012532:	bfa8      	it	ge
 8012534:	4629      	movge	r1, r5
 8012536:	f361 0007 	bfi	r0, r1, #0, #8
 801253a:	f343 2107 	sbfx	r1, r3, #8, #8
 801253e:	42a1      	cmp	r1, r4
 8012540:	bfb8      	it	lt
 8012542:	4621      	movlt	r1, r4
 8012544:	b249      	sxtb	r1, r1
 8012546:	42a9      	cmp	r1, r5
 8012548:	bfa8      	it	ge
 801254a:	4629      	movge	r1, r5
 801254c:	f361 200f 	bfi	r0, r1, #8, #8
 8012550:	f343 4107 	sbfx	r1, r3, #16, #8
 8012554:	42a1      	cmp	r1, r4
 8012556:	ea4f 6323 	mov.w	r3, r3, asr #24
 801255a:	bfb8      	it	lt
 801255c:	4621      	movlt	r1, r4
 801255e:	42a3      	cmp	r3, r4
 8012560:	b249      	sxtb	r1, r1
 8012562:	bfb8      	it	lt
 8012564:	4623      	movlt	r3, r4
 8012566:	b25b      	sxtb	r3, r3
 8012568:	42a9      	cmp	r1, r5
 801256a:	bfa8      	it	ge
 801256c:	4629      	movge	r1, r5
 801256e:	42ab      	cmp	r3, r5
 8012570:	bfa8      	it	ge
 8012572:	462b      	movge	r3, r5
 8012574:	f361 4017 	bfi	r0, r1, #16, #8
 8012578:	f363 601f 	bfi	r0, r3, #24, #8
 801257c:	f846 0b04 	str.w	r0, [r6], #4
 8012580:	42b2      	cmp	r2, r6
 8012582:	d1cf      	bne.n	8012524 <arm_max_pool_s8+0x2b0>
 8012584:	9028      	str	r0, [sp, #160]	; 0xa0
 8012586:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8012588:	b30b      	cbz	r3, 80125ce <arm_max_pool_s8+0x35a>
 801258a:	9918      	ldr	r1, [sp, #96]	; 0x60
 801258c:	9819      	ldr	r0, [sp, #100]	; 0x64
 801258e:	461c      	mov	r4, r3
 8012590:	f992 3000 	ldrsb.w	r3, [r2]
 8012594:	428b      	cmp	r3, r1
 8012596:	bfb8      	it	lt
 8012598:	460b      	movlt	r3, r1
 801259a:	4283      	cmp	r3, r0
 801259c:	bfa8      	it	ge
 801259e:	4603      	movge	r3, r0
 80125a0:	2c01      	cmp	r4, #1
 80125a2:	7013      	strb	r3, [r2, #0]
 80125a4:	d013      	beq.n	80125ce <arm_max_pool_s8+0x35a>
 80125a6:	f992 3001 	ldrsb.w	r3, [r2, #1]
 80125aa:	428b      	cmp	r3, r1
 80125ac:	bfb8      	it	lt
 80125ae:	460b      	movlt	r3, r1
 80125b0:	4283      	cmp	r3, r0
 80125b2:	bfa8      	it	ge
 80125b4:	4603      	movge	r3, r0
 80125b6:	2c02      	cmp	r4, #2
 80125b8:	7053      	strb	r3, [r2, #1]
 80125ba:	d008      	beq.n	80125ce <arm_max_pool_s8+0x35a>
 80125bc:	f992 3002 	ldrsb.w	r3, [r2, #2]
 80125c0:	428b      	cmp	r3, r1
 80125c2:	bfb8      	it	lt
 80125c4:	460b      	movlt	r3, r1
 80125c6:	4283      	cmp	r3, r0
 80125c8:	bfa8      	it	ge
 80125ca:	4603      	movge	r3, r0
 80125cc:	7093      	strb	r3, [r2, #2]
 80125ce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80125d0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80125d2:	4413      	add	r3, r2
 80125d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80125d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80125d8:	3b01      	subs	r3, #1
 80125da:	9313      	str	r3, [sp, #76]	; 0x4c
 80125dc:	d002      	beq.n	80125e4 <arm_max_pool_s8+0x370>
 80125de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80125e0:	9336      	str	r3, [sp, #216]	; 0xd8
 80125e2:	e696      	b.n	8012312 <arm_max_pool_s8+0x9e>
 80125e4:	4618      	mov	r0, r3
 80125e6:	b02b      	add	sp, #172	; 0xac
 80125e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125ec:	f04f 30ff 	mov.w	r0, #4294967295
 80125f0:	e7f9      	b.n	80125e6 <arm_max_pool_s8+0x372>
 80125f2:	bf00      	nop

080125f4 <arm_max_pool_s16>:
 80125f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125f8:	b0ab      	sub	sp, #172	; 0xac
 80125fa:	6856      	ldr	r6, [r2, #4]
 80125fc:	930c      	str	r3, [sp, #48]	; 0x30
 80125fe:	e9d2 3502 	ldrd	r3, r5, [r2, #8]
 8012602:	e9dd 0434 	ldrd	r0, r4, [sp, #208]	; 0xd0
 8012606:	961f      	str	r6, [sp, #124]	; 0x7c
 8012608:	9315      	str	r3, [sp, #84]	; 0x54
 801260a:	fb03 f306 	mul.w	r3, r3, r6
 801260e:	684e      	ldr	r6, [r1, #4]
 8012610:	9620      	str	r6, [sp, #128]	; 0x80
 8012612:	680e      	ldr	r6, [r1, #0]
 8012614:	6817      	ldr	r7, [r2, #0]
 8012616:	9610      	str	r6, [sp, #64]	; 0x40
 8012618:	6846      	ldr	r6, [r0, #4]
 801261a:	9621      	str	r6, [sp, #132]	; 0x84
 801261c:	6880      	ldr	r0, [r0, #8]
 801261e:	688e      	ldr	r6, [r1, #8]
 8012620:	951b      	str	r5, [sp, #108]	; 0x6c
 8012622:	462a      	mov	r2, r5
 8012624:	fb05 f303 	mul.w	r3, r5, r3
 8012628:	9011      	str	r0, [sp, #68]	; 0x44
 801262a:	6865      	ldr	r5, [r4, #4]
 801262c:	68c8      	ldr	r0, [r1, #12]
 801262e:	68a4      	ldr	r4, [r4, #8]
 8012630:	9618      	str	r6, [sp, #96]	; 0x60
 8012632:	2f00      	cmp	r7, #0
 8012634:	f9b1 6010 	ldrsh.w	r6, [r1, #16]
 8012638:	f9b1 1014 	ldrsh.w	r1, [r1, #20]
 801263c:	970b      	str	r7, [sp, #44]	; 0x2c
 801263e:	9516      	str	r5, [sp, #88]	; 0x58
 8012640:	940e      	str	r4, [sp, #56]	; 0x38
 8012642:	9017      	str	r0, [sp, #92]	; 0x5c
 8012644:	9619      	str	r6, [sp, #100]	; 0x64
 8012646:	911a      	str	r1, [sp, #104]	; 0x68
 8012648:	f340 814f 	ble.w	80128ea <arm_max_pool_s16+0x2f6>
 801264c:	0059      	lsls	r1, r3, #1
 801264e:	fb04 f305 	mul.w	r3, r4, r5
 8012652:	fb02 f303 	mul.w	r3, r2, r3
 8012656:	9114      	str	r1, [sp, #80]	; 0x50
 8012658:	1051      	asrs	r1, r2, #1
 801265a:	f003 0501 	and.w	r5, r3, #1
 801265e:	4620      	mov	r0, r4
 8012660:	105c      	asrs	r4, r3, #1
 8012662:	ebc1 7381 	rsb	r3, r1, r1, lsl #30
 8012666:	009e      	lsls	r6, r3, #2
 8012668:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801266a:	9523      	str	r5, [sp, #140]	; 0x8c
 801266c:	fb03 f302 	mul.w	r3, r3, r2
 8012670:	005d      	lsls	r5, r3, #1
 8012672:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012674:	9101      	str	r1, [sp, #4]
 8012676:	425b      	negs	r3, r3
 8012678:	9326      	str	r3, [sp, #152]	; 0x98
 801267a:	008b      	lsls	r3, r1, #2
 801267c:	0057      	lsls	r7, r2, #1
 801267e:	9324      	str	r3, [sp, #144]	; 0x90
 8012680:	004b      	lsls	r3, r1, #1
 8012682:	931d      	str	r3, [sp, #116]	; 0x74
 8012684:	fb00 f307 	mul.w	r3, r0, r7
 8012688:	9328      	str	r3, [sp, #160]	; 0xa0
 801268a:	00a3      	lsls	r3, r4, #2
 801268c:	9325      	str	r3, [sp, #148]	; 0x94
 801268e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8012690:	9422      	str	r4, [sp, #136]	; 0x88
 8012692:	f002 0201 	and.w	r2, r2, #1
 8012696:	2b00      	cmp	r3, #0
 8012698:	46b8      	mov	r8, r7
 801269a:	9506      	str	r5, [sp, #24]
 801269c:	9202      	str	r2, [sp, #8]
 801269e:	4637      	mov	r7, r6
 80126a0:	f340 8104 	ble.w	80128ac <arm_max_pool_s16+0x2b8>
 80126a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80126a6:	425b      	negs	r3, r3
 80126a8:	9327      	str	r3, [sp, #156]	; 0x9c
 80126aa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80126ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80126ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80126b0:	9312      	str	r3, [sp, #72]	; 0x48
 80126b2:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80126b4:	930d      	str	r3, [sp, #52]	; 0x34
 80126b6:	2300      	movs	r3, #0
 80126b8:	931c      	str	r3, [sp, #112]	; 0x70
 80126ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80126bc:	2b00      	cmp	r3, #0
 80126be:	f340 80aa 	ble.w	8012816 <arm_max_pool_s16+0x222>
 80126c2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80126c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80126c6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80126c8:	2a00      	cmp	r2, #0
 80126ca:	bfd8      	it	le
 80126cc:	4619      	movle	r1, r3
 80126ce:	4403      	add	r3, r0
 80126d0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80126d2:	bfc8      	it	gt
 80126d4:	2100      	movgt	r1, #0
 80126d6:	4283      	cmp	r3, r0
 80126d8:	bfa8      	it	ge
 80126da:	4603      	movge	r3, r0
 80126dc:	9305      	str	r3, [sp, #20]
 80126de:	188b      	adds	r3, r1, r2
 80126e0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80126e2:	910f      	str	r1, [sp, #60]	; 0x3c
 80126e4:	fb02 f303 	mul.w	r3, r2, r3
 80126e8:	931e      	str	r3, [sp, #120]	; 0x78
 80126ea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80126ec:	9309      	str	r3, [sp, #36]	; 0x24
 80126ee:	18d3      	adds	r3, r2, r3
 80126f0:	9308      	str	r3, [sp, #32]
 80126f2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80126f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80126f6:	4413      	add	r3, r2
 80126f8:	9303      	str	r3, [sp, #12]
 80126fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80126fc:	9307      	str	r3, [sp, #28]
 80126fe:	2300      	movs	r3, #0
 8012700:	930a      	str	r3, [sp, #40]	; 0x28
 8012702:	9903      	ldr	r1, [sp, #12]
 8012704:	9a07      	ldr	r2, [sp, #28]
 8012706:	9e08      	ldr	r6, [sp, #32]
 8012708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801270a:	9805      	ldr	r0, [sp, #20]
 801270c:	eb07 0a01 	add.w	sl, r7, r1
 8012710:	9911      	ldr	r1, [sp, #68]	; 0x44
 8012712:	2a00      	cmp	r2, #0
 8012714:	bfc8      	it	gt
 8012716:	2300      	movgt	r3, #0
 8012718:	428e      	cmp	r6, r1
 801271a:	bfa8      	it	ge
 801271c:	460e      	movge	r6, r1
 801271e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8012720:	9300      	str	r3, [sp, #0]
 8012722:	4281      	cmp	r1, r0
 8012724:	da5f      	bge.n	80127e6 <arm_max_pool_s16+0x1f2>
 8012726:	42b3      	cmp	r3, r6
 8012728:	da5d      	bge.n	80127e6 <arm_max_pool_s16+0x1f2>
 801272a:	eb03 0902 	add.w	r9, r3, r2
 801272e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8012730:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8012732:	9104      	str	r1, [sp, #16]
 8012734:	4499      	add	r9, r3
 8012736:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8012738:	fb02 3909 	mla	r9, r2, r9, r3
 801273c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801273e:	eb03 0949 	add.w	r9, r3, r9, lsl #1
 8012742:	2300      	movs	r3, #0
 8012744:	eb07 0109 	add.w	r1, r7, r9
 8012748:	2b00      	cmp	r3, #0
 801274a:	f040 80ca 	bne.w	80128e2 <arm_max_pool_s16+0x2ee>
 801274e:	4642      	mov	r2, r8
 8012750:	4650      	mov	r0, sl
 8012752:	f00a f99f 	bl	801ca94 <memcpy>
 8012756:	f8dd b000 	ldr.w	fp, [sp]
 801275a:	46ce      	mov	lr, r9
 801275c:	f10b 0b01 	add.w	fp, fp, #1
 8012760:	44c6      	add	lr, r8
 8012762:	455e      	cmp	r6, fp
 8012764:	bf18      	it	ne
 8012766:	eb0e 0107 	addne.w	r1, lr, r7
 801276a:	d032      	beq.n	80127d2 <arm_max_pool_s16+0x1de>
 801276c:	9b01      	ldr	r3, [sp, #4]
 801276e:	2b00      	cmp	r3, #0
 8012770:	bfd8      	it	le
 8012772:	4653      	movle	r3, sl
 8012774:	dd1b      	ble.n	80127ae <arm_max_pool_s16+0x1ba>
 8012776:	4652      	mov	r2, sl
 8012778:	f851 4b04 	ldr.w	r4, [r1], #4
 801277c:	6813      	ldr	r3, [r2, #0]
 801277e:	fa0f fc84 	sxth.w	ip, r4
 8012782:	b21d      	sxth	r5, r3
 8012784:	4565      	cmp	r5, ip
 8012786:	ea4f 4023 	mov.w	r0, r3, asr #16
 801278a:	bfb8      	it	lt
 801278c:	4665      	movlt	r5, ip
 801278e:	ebb0 4f24 	cmp.w	r0, r4, asr #16
 8012792:	f365 030f 	bfi	r3, r5, #0, #16
 8012796:	ea4f 4524 	mov.w	r5, r4, asr #16
 801279a:	f280 809c 	bge.w	80128d6 <arm_max_pool_s16+0x2e2>
 801279e:	f365 431f 	bfi	r3, r5, #16, #16
 80127a2:	4571      	cmp	r1, lr
 80127a4:	f842 3b04 	str.w	r3, [r2], #4
 80127a8:	d1e6      	bne.n	8012778 <arm_max_pool_s16+0x184>
 80127aa:	9b03      	ldr	r3, [sp, #12]
 80127ac:	4671      	mov	r1, lr
 80127ae:	9a02      	ldr	r2, [sp, #8]
 80127b0:	2a00      	cmp	r2, #0
 80127b2:	d0d3      	beq.n	801275c <arm_max_pool_s16+0x168>
 80127b4:	f9b1 2000 	ldrsh.w	r2, [r1]
 80127b8:	f9b3 1000 	ldrsh.w	r1, [r3]
 80127bc:	f10b 0b01 	add.w	fp, fp, #1
 80127c0:	4291      	cmp	r1, r2
 80127c2:	bfb8      	it	lt
 80127c4:	801a      	strhlt	r2, [r3, #0]
 80127c6:	44c6      	add	lr, r8
 80127c8:	455e      	cmp	r6, fp
 80127ca:	bf18      	it	ne
 80127cc:	eb0e 0107 	addne.w	r1, lr, r7
 80127d0:	d1cc      	bne.n	801276c <arm_max_pool_s16+0x178>
 80127d2:	9a04      	ldr	r2, [sp, #16]
 80127d4:	9905      	ldr	r1, [sp, #20]
 80127d6:	9b06      	ldr	r3, [sp, #24]
 80127d8:	3201      	adds	r2, #1
 80127da:	4291      	cmp	r1, r2
 80127dc:	4499      	add	r9, r3
 80127de:	9204      	str	r2, [sp, #16]
 80127e0:	f04f 0301 	mov.w	r3, #1
 80127e4:	d1ae      	bne.n	8012744 <arm_max_pool_s16+0x150>
 80127e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80127e8:	9907      	ldr	r1, [sp, #28]
 80127ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80127ec:	4411      	add	r1, r2
 80127ee:	9107      	str	r1, [sp, #28]
 80127f0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80127f2:	1a89      	subs	r1, r1, r2
 80127f4:	9109      	str	r1, [sp, #36]	; 0x24
 80127f6:	9908      	ldr	r1, [sp, #32]
 80127f8:	1a8a      	subs	r2, r1, r2
 80127fa:	9208      	str	r2, [sp, #32]
 80127fc:	9a03      	ldr	r2, [sp, #12]
 80127fe:	4442      	add	r2, r8
 8012800:	9203      	str	r2, [sp, #12]
 8012802:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012804:	3301      	adds	r3, #1
 8012806:	429a      	cmp	r2, r3
 8012808:	930a      	str	r3, [sp, #40]	; 0x28
 801280a:	f47f af7a 	bne.w	8012702 <arm_max_pool_s16+0x10e>
 801280e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012810:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8012812:	4413      	add	r3, r2
 8012814:	930d      	str	r3, [sp, #52]	; 0x34
 8012816:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012818:	9920      	ldr	r1, [sp, #128]	; 0x80
 801281a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801281c:	440a      	add	r2, r1
 801281e:	9212      	str	r2, [sp, #72]	; 0x48
 8012820:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012822:	1a52      	subs	r2, r2, r1
 8012824:	9213      	str	r2, [sp, #76]	; 0x4c
 8012826:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8012828:	3301      	adds	r3, #1
 801282a:	429a      	cmp	r2, r3
 801282c:	931c      	str	r3, [sp, #112]	; 0x70
 801282e:	f47f af44 	bne.w	80126ba <arm_max_pool_s16+0xc6>
 8012832:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8012834:	2b00      	cmp	r3, #0
 8012836:	dd3e      	ble.n	80128b6 <arm_max_pool_s16+0x2c2>
 8012838:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801283a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801283c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801283e:	e9dd 5619 	ldrd	r5, r6, [sp, #100]	; 0x64
 8012842:	189a      	adds	r2, r3, r2
 8012844:	4618      	mov	r0, r3
 8012846:	6803      	ldr	r3, [r0, #0]
 8012848:	b219      	sxth	r1, r3
 801284a:	42a9      	cmp	r1, r5
 801284c:	bfb8      	it	lt
 801284e:	4629      	movlt	r1, r5
 8012850:	141b      	asrs	r3, r3, #16
 8012852:	42b1      	cmp	r1, r6
 8012854:	bfa8      	it	ge
 8012856:	4631      	movge	r1, r6
 8012858:	42ab      	cmp	r3, r5
 801285a:	bfb8      	it	lt
 801285c:	462b      	movlt	r3, r5
 801285e:	42b3      	cmp	r3, r6
 8012860:	bfa8      	it	ge
 8012862:	4633      	movge	r3, r6
 8012864:	f361 040f 	bfi	r4, r1, #0, #16
 8012868:	f363 441f 	bfi	r4, r3, #16, #16
 801286c:	f840 4b04 	str.w	r4, [r0], #4
 8012870:	4290      	cmp	r0, r2
 8012872:	d1e8      	bne.n	8012846 <arm_max_pool_s16+0x252>
 8012874:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8012876:	9429      	str	r4, [sp, #164]	; 0xa4
 8012878:	b30b      	cbz	r3, 80128be <arm_max_pool_s16+0x2ca>
 801287a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801287c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801287e:	440b      	add	r3, r1
 8012880:	930c      	str	r3, [sp, #48]	; 0x30
 8012882:	9919      	ldr	r1, [sp, #100]	; 0x64
 8012884:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012888:	428b      	cmp	r3, r1
 801288a:	bfb8      	it	lt
 801288c:	460b      	movlt	r3, r1
 801288e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8012890:	428b      	cmp	r3, r1
 8012892:	bfa8      	it	ge
 8012894:	460b      	movge	r3, r1
 8012896:	8013      	strh	r3, [r2, #0]
 8012898:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801289a:	3b01      	subs	r3, #1
 801289c:	930b      	str	r3, [sp, #44]	; 0x2c
 801289e:	d016      	beq.n	80128ce <arm_max_pool_s16+0x2da>
 80128a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80128a2:	9336      	str	r3, [sp, #216]	; 0xd8
 80128a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80128a6:	2b00      	cmp	r3, #0
 80128a8:	f73f aefc 	bgt.w	80126a4 <arm_max_pool_s16+0xb0>
 80128ac:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80128ae:	930d      	str	r3, [sp, #52]	; 0x34
 80128b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80128b2:	2b00      	cmp	r3, #0
 80128b4:	dcc0      	bgt.n	8012838 <arm_max_pool_s16+0x244>
 80128b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80128b8:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 80128ba:	2b00      	cmp	r3, #0
 80128bc:	d1dd      	bne.n	801287a <arm_max_pool_s16+0x286>
 80128be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80128c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80128c2:	4413      	add	r3, r2
 80128c4:	930c      	str	r3, [sp, #48]	; 0x30
 80128c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80128c8:	3b01      	subs	r3, #1
 80128ca:	930b      	str	r3, [sp, #44]	; 0x2c
 80128cc:	d1e8      	bne.n	80128a0 <arm_max_pool_s16+0x2ac>
 80128ce:	4618      	mov	r0, r3
 80128d0:	b02b      	add	sp, #172	; 0xac
 80128d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128d6:	4571      	cmp	r1, lr
 80128d8:	f842 3b04 	str.w	r3, [r2], #4
 80128dc:	f47f af4c 	bne.w	8012778 <arm_max_pool_s16+0x184>
 80128e0:	e763      	b.n	80127aa <arm_max_pool_s16+0x1b6>
 80128e2:	f8dd b000 	ldr.w	fp, [sp]
 80128e6:	46ce      	mov	lr, r9
 80128e8:	e740      	b.n	801276c <arm_max_pool_s16+0x178>
 80128ea:	f04f 30ff 	mov.w	r0, #4294967295
 80128ee:	e7ef      	b.n	80128d0 <arm_max_pool_s16+0x2dc>

080128f0 <arm_softmax_s8>:
 80128f0:	b510      	push	{r4, lr}
 80128f2:	b084      	sub	sp, #16
 80128f4:	9c06      	ldr	r4, [sp, #24]
 80128f6:	9400      	str	r4, [sp, #0]
 80128f8:	9c07      	ldr	r4, [sp, #28]
 80128fa:	9401      	str	r4, [sp, #4]
 80128fc:	9c08      	ldr	r4, [sp, #32]
 80128fe:	9403      	str	r4, [sp, #12]
 8012900:	2400      	movs	r4, #0
 8012902:	9402      	str	r4, [sp, #8]
 8012904:	f005 f924 	bl	8017b50 <arm_nn_softmax_common_s8>
 8012908:	b004      	add	sp, #16
 801290a:	bd10      	pop	{r4, pc}

0801290c <arm_softmax_s8_s16>:
 801290c:	b510      	push	{r4, lr}
 801290e:	b084      	sub	sp, #16
 8012910:	9c06      	ldr	r4, [sp, #24]
 8012912:	9400      	str	r4, [sp, #0]
 8012914:	9c07      	ldr	r4, [sp, #28]
 8012916:	9401      	str	r4, [sp, #4]
 8012918:	9c08      	ldr	r4, [sp, #32]
 801291a:	9403      	str	r4, [sp, #12]
 801291c:	2401      	movs	r4, #1
 801291e:	9402      	str	r4, [sp, #8]
 8012920:	f005 f916 	bl	8017b50 <arm_nn_softmax_common_s8>
 8012924:	b004      	add	sp, #16
 8012926:	bd10      	pop	{r4, pc}

08012928 <arm_softmax_s16>:
 8012928:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801292c:	b091      	sub	sp, #68	; 0x44
 801292e:	9002      	str	r0, [sp, #8]
 8012930:	910c      	str	r1, [sp, #48]	; 0x30
 8012932:	4608      	mov	r0, r1
 8012934:	9301      	str	r3, [sp, #4]
 8012936:	e9dd 311b 	ldrd	r3, r1, [sp, #108]	; 0x6c
 801293a:	681c      	ldr	r4, [r3, #0]
 801293c:	2c00      	cmp	r4, #0
 801293e:	f000 8129 	beq.w	8012b94 <arm_softmax_s16+0x26c>
 8012942:	685b      	ldr	r3, [r3, #4]
 8012944:	9309      	str	r3, [sp, #36]	; 0x24
 8012946:	2b00      	cmp	r3, #0
 8012948:	f000 8124 	beq.w	8012b94 <arm_softmax_s16+0x26c>
 801294c:	2800      	cmp	r0, #0
 801294e:	f340 80bf 	ble.w	8012ad0 <arm_softmax_s16+0x1a8>
 8012952:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8012954:	425b      	negs	r3, r3
 8012956:	4618      	mov	r0, r3
 8012958:	9306      	str	r3, [sp, #24]
 801295a:	2301      	movs	r3, #1
 801295c:	4083      	lsls	r3, r0
 801295e:	1e58      	subs	r0, r3, #1
 8012960:	0053      	lsls	r3, r2, #1
 8012962:	2500      	movs	r5, #0
 8012964:	930d      	str	r3, [sp, #52]	; 0x34
 8012966:	3b02      	subs	r3, #2
 8012968:	950a      	str	r5, [sp, #40]	; 0x28
 801296a:	1e8d      	subs	r5, r1, #2
 801296c:	4419      	add	r1, r3
 801296e:	9108      	str	r1, [sp, #32]
 8012970:	9902      	ldr	r1, [sp, #8]
 8012972:	9007      	str	r0, [sp, #28]
 8012974:	eb01 0b03 	add.w	fp, r1, r3
 8012978:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801297a:	9504      	str	r5, [sp, #16]
 801297c:	1040      	asrs	r0, r0, #1
 801297e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012982:	9303      	str	r3, [sp, #12]
 8012984:	1c43      	adds	r3, r0, #1
 8012986:	900b      	str	r0, [sp, #44]	; 0x2c
 8012988:	930f      	str	r3, [sp, #60]	; 0x3c
 801298a:	9b02      	ldr	r3, [sp, #8]
 801298c:	2a01      	cmp	r2, #1
 801298e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012992:	f340 80f7 	ble.w	8012b84 <arm_softmax_s16+0x25c>
 8012996:	f933 1f02 	ldrsh.w	r1, [r3, #2]!
 801299a:	4288      	cmp	r0, r1
 801299c:	bfb8      	it	lt
 801299e:	4608      	movlt	r0, r1
 80129a0:	455b      	cmp	r3, fp
 80129a2:	d1f8      	bne.n	8012996 <arm_softmax_s16+0x6e>
 80129a4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80129a6:	2b00      	cmp	r3, #0
 80129a8:	f04f 0100 	mov.w	r1, #0
 80129ac:	9b02      	ldr	r3, [sp, #8]
 80129ae:	f340 8093 	ble.w	8012ad8 <arm_softmax_s16+0x1b0>
 80129b2:	f8dd e010 	ldr.w	lr, [sp, #16]
 80129b6:	f8dd a00c 	ldr.w	sl, [sp, #12]
 80129ba:	f8cd b014 	str.w	fp, [sp, #20]
 80129be:	f1a3 0802 	sub.w	r8, r3, #2
 80129c2:	460e      	mov	r6, r1
 80129c4:	f04f 4c80 	mov.w	ip, #1073741824	; 0x40000000
 80129c8:	f647 77ff 	movw	r7, #32767	; 0x7fff
 80129cc:	f938 5f02 	ldrsh.w	r5, [r8, #2]!
 80129d0:	9b01      	ldr	r3, [sp, #4]
 80129d2:	1a2d      	subs	r5, r5, r0
 80129d4:	fa05 f50a 	lsl.w	r5, r5, sl
 80129d8:	46e1      	mov	r9, ip
 80129da:	f04f 0b00 	mov.w	fp, #0
 80129de:	fbc3 9b05 	smlal	r9, fp, r3, r5
 80129e2:	464b      	mov	r3, r9
 80129e4:	0fdb      	lsrs	r3, r3, #31
 80129e6:	4d6d      	ldr	r5, [pc, #436]	; (8012b9c <arm_softmax_s16+0x274>)
 80129e8:	ea43 034b 	orr.w	r3, r3, fp, lsl #1
 80129ec:	443b      	add	r3, r7
 80129ee:	42ab      	cmp	r3, r5
 80129f0:	bfb8      	it	lt
 80129f2:	462b      	movlt	r3, r5
 80129f4:	42bb      	cmp	r3, r7
 80129f6:	bfa8      	it	ge
 80129f8:	463b      	movge	r3, r7
 80129fa:	f343 15c8 	sbfx	r5, r3, #7, #9
 80129fe:	b2ad      	uxth	r5, r5
 8012a00:	f505 7b80 	add.w	fp, r5, #256	; 0x100
 8012a04:	f205 1501 	addw	r5, r5, #257	; 0x101
 8012a08:	fa1f fb8b 	uxth.w	fp, fp
 8012a0c:	b2ad      	uxth	r5, r5
 8012a0e:	f834 b01b 	ldrh.w	fp, [r4, fp, lsl #1]
 8012a12:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012a16:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8012a1a:	eba5 050b 	sub.w	r5, r5, fp
 8012a1e:	f04f 0940 	mov.w	r9, #64	; 0x40
 8012a22:	fb13 9305 	smlabb	r3, r3, r5, r9
 8012a26:	3601      	adds	r6, #1
 8012a28:	eb0b 13e3 	add.w	r3, fp, r3, asr #7
 8012a2c:	b21b      	sxth	r3, r3
 8012a2e:	42b2      	cmp	r2, r6
 8012a30:	f82e 3f02 	strh.w	r3, [lr, #2]!
 8012a34:	4419      	add	r1, r3
 8012a36:	dcc9      	bgt.n	80129cc <arm_softmax_s16+0xa4>
 8012a38:	f8dd b014 	ldr.w	fp, [sp, #20]
 8012a3c:	2900      	cmp	r1, #0
 8012a3e:	f000 809b 	beq.w	8012b78 <arm_softmax_s16+0x250>
 8012a42:	fab1 f381 	clz	r3, r1
 8012a46:	3b01      	subs	r3, #1
 8012a48:	fa01 f303 	lsl.w	r3, r1, r3
 8012a4c:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
 8012a50:	139b      	asrs	r3, r3, #14
 8012a52:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
 8012a56:	f343 10c8 	sbfx	r0, r3, #7, #9
 8012a5a:	b280      	uxth	r0, r0
 8012a5c:	f500 7580 	add.w	r5, r0, #256	; 0x100
 8012a60:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8012a62:	f200 1001 	addw	r0, r0, #257	; 0x101
 8012a66:	b2ad      	uxth	r5, r5
 8012a68:	b280      	uxth	r0, r0
 8012a6a:	fab1 f181 	clz	r1, r1
 8012a6e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8012a72:	eb06 0545 	add.w	r5, r6, r5, lsl #1
 8012a76:	0040      	lsls	r0, r0, #1
 8012a78:	882d      	ldrh	r5, [r5, #0]
 8012a7a:	5a30      	ldrh	r0, [r6, r0]
 8012a7c:	1b40      	subs	r0, r0, r5
 8012a7e:	b200      	sxth	r0, r0
 8012a80:	fb00 f303 	mul.w	r3, r0, r3
 8012a84:	3340      	adds	r3, #64	; 0x40
 8012a86:	eb05 15e3 	add.w	r5, r5, r3, asr #7
 8012a8a:	2a00      	cmp	r2, #0
 8012a8c:	b22d      	sxth	r5, r5
 8012a8e:	dd0d      	ble.n	8012aac <arm_softmax_s16+0x184>
 8012a90:	9804      	ldr	r0, [sp, #16]
 8012a92:	9e08      	ldr	r6, [sp, #32]
 8012a94:	f1c1 011e 	rsb	r1, r1, #30
 8012a98:	f830 3f02 	ldrh.w	r3, [r0, #2]!
 8012a9c:	fb13 f305 	smulbb	r3, r3, r5
 8012aa0:	410b      	asrs	r3, r1
 8012aa2:	3301      	adds	r3, #1
 8012aa4:	105b      	asrs	r3, r3, #1
 8012aa6:	4286      	cmp	r6, r0
 8012aa8:	8003      	strh	r3, [r0, #0]
 8012aaa:	d1f5      	bne.n	8012a98 <arm_softmax_s16+0x170>
 8012aac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012aae:	9802      	ldr	r0, [sp, #8]
 8012ab0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012ab2:	4418      	add	r0, r3
 8012ab4:	9002      	str	r0, [sp, #8]
 8012ab6:	9804      	ldr	r0, [sp, #16]
 8012ab8:	4418      	add	r0, r3
 8012aba:	9004      	str	r0, [sp, #16]
 8012abc:	9808      	ldr	r0, [sp, #32]
 8012abe:	449b      	add	fp, r3
 8012ac0:	4418      	add	r0, r3
 8012ac2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012ac4:	9008      	str	r0, [sp, #32]
 8012ac6:	3101      	adds	r1, #1
 8012ac8:	428b      	cmp	r3, r1
 8012aca:	910a      	str	r1, [sp, #40]	; 0x28
 8012acc:	f47f af5d 	bne.w	801298a <arm_softmax_s16+0x62>
 8012ad0:	2000      	movs	r0, #0
 8012ad2:	b011      	add	sp, #68	; 0x44
 8012ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ad8:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 8012adc:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8012ae0:	f8dd b03c 	ldr.w	fp, [sp, #60]	; 0x3c
 8012ae4:	9005      	str	r0, [sp, #20]
 8012ae6:	f1a3 0902 	sub.w	r9, r3, #2
 8012aea:	460e      	mov	r6, r1
 8012aec:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8012af0:	f647 7cff 	movw	ip, #32767	; 0x7fff
 8012af4:	f939 5f02 	ldrsh.w	r5, [r9, #2]!
 8012af8:	9b05      	ldr	r3, [sp, #20]
 8012afa:	1aed      	subs	r5, r5, r3
 8012afc:	9b03      	ldr	r3, [sp, #12]
 8012afe:	409d      	lsls	r5, r3
 8012b00:	9b01      	ldr	r3, [sp, #4]
 8012b02:	4670      	mov	r0, lr
 8012b04:	f04f 0a00 	mov.w	sl, #0
 8012b08:	fbc3 0a05 	smlal	r0, sl, r3, r5
 8012b0c:	0fc3      	lsrs	r3, r0, #31
 8012b0e:	9d07      	ldr	r5, [sp, #28]
 8012b10:	9806      	ldr	r0, [sp, #24]
 8012b12:	ea43 034a 	orr.w	r3, r3, sl, lsl #1
 8012b16:	401d      	ands	r5, r3
 8012b18:	4103      	asrs	r3, r0
 8012b1a:	465f      	mov	r7, fp
 8012b1c:	bf58      	it	pl
 8012b1e:	9f0b      	ldrpl	r7, [sp, #44]	; 0x2c
 8012b20:	481e      	ldr	r0, [pc, #120]	; (8012b9c <arm_softmax_s16+0x274>)
 8012b22:	42af      	cmp	r7, r5
 8012b24:	bfb8      	it	lt
 8012b26:	3301      	addlt	r3, #1
 8012b28:	4463      	add	r3, ip
 8012b2a:	4283      	cmp	r3, r0
 8012b2c:	bfb8      	it	lt
 8012b2e:	4603      	movlt	r3, r0
 8012b30:	4563      	cmp	r3, ip
 8012b32:	bfa8      	it	ge
 8012b34:	4663      	movge	r3, ip
 8012b36:	f343 15c8 	sbfx	r5, r3, #7, #9
 8012b3a:	b2ad      	uxth	r5, r5
 8012b3c:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8012b40:	f205 1501 	addw	r5, r5, #257	; 0x101
 8012b44:	b2bf      	uxth	r7, r7
 8012b46:	b2ad      	uxth	r5, r5
 8012b48:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8012b4c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8012b50:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8012b54:	1bed      	subs	r5, r5, r7
 8012b56:	2040      	movs	r0, #64	; 0x40
 8012b58:	fb13 0305 	smlabb	r3, r3, r5, r0
 8012b5c:	3601      	adds	r6, #1
 8012b5e:	eb07 13e3 	add.w	r3, r7, r3, asr #7
 8012b62:	b21b      	sxth	r3, r3
 8012b64:	42b2      	cmp	r2, r6
 8012b66:	f828 3f02 	strh.w	r3, [r8, #2]!
 8012b6a:	4419      	add	r1, r3
 8012b6c:	dcc2      	bgt.n	8012af4 <arm_softmax_s16+0x1cc>
 8012b6e:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 8012b72:	2900      	cmp	r1, #0
 8012b74:	f47f af65 	bne.w	8012a42 <arm_softmax_s16+0x11a>
 8012b78:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8012b7a:	460b      	mov	r3, r1
 8012b7c:	2002      	movs	r0, #2
 8012b7e:	2120      	movs	r1, #32
 8012b80:	462e      	mov	r6, r5
 8012b82:	e779      	b.n	8012a78 <arm_softmax_s16+0x150>
 8012b84:	f43f af0e 	beq.w	80129a4 <arm_softmax_s16+0x7c>
 8012b88:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8012b8a:	2300      	movs	r3, #0
 8012b8c:	2002      	movs	r0, #2
 8012b8e:	2120      	movs	r1, #32
 8012b90:	462e      	mov	r6, r5
 8012b92:	e771      	b.n	8012a78 <arm_softmax_s16+0x150>
 8012b94:	f04f 30ff 	mov.w	r0, #4294967295
 8012b98:	e79b      	b.n	8012ad2 <arm_softmax_s16+0x1aa>
 8012b9a:	bf00      	nop
 8012b9c:	ffff8000 	.word	0xffff8000

08012ba0 <arm_nn_vec_mat_mult_t_s4>:
 8012ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ba4:	b09b      	sub	sp, #108	; 0x6c
 8012ba6:	f8dd a0a4 	ldr.w	sl, [sp, #164]	; 0xa4
 8012baa:	9315      	str	r3, [sp, #84]	; 0x54
 8012bac:	4653      	mov	r3, sl
 8012bae:	2b00      	cmp	r3, #0
 8012bb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8012bb2:	9202      	str	r2, [sp, #8]
 8012bb4:	bfb8      	it	lt
 8012bb6:	f10a 0a03 	addlt.w	sl, sl, #3
 8012bba:	ea4f 02aa 	mov.w	r2, sl, asr #2
 8012bbe:	b21b      	sxth	r3, r3
 8012bc0:	eac3 4a03 	pkhbt	sl, r3, r3, lsl #16
 8012bc4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012bc6:	9009      	str	r0, [sp, #36]	; 0x24
 8012bc8:	fb03 fb02 	mul.w	fp, r3, r2
 8012bcc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012bce:	9100      	str	r1, [sp, #0]
 8012bd0:	2b03      	cmp	r3, #3
 8012bd2:	920f      	str	r2, [sp, #60]	; 0x3c
 8012bd4:	f340 81e0 	ble.w	8012f98 <arm_nn_vec_mat_mult_t_s4+0x3f8>
 8012bd8:	00d3      	lsls	r3, r2, #3
 8012bda:	930d      	str	r3, [sp, #52]	; 0x34
 8012bdc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012bde:	2b00      	cmp	r3, #0
 8012be0:	bfb8      	it	lt
 8012be2:	3303      	addlt	r3, #3
 8012be4:	ea4f 09a3 	mov.w	r9, r3, asr #2
 8012be8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012bea:	425a      	negs	r2, r3
 8012bec:	f002 0203 	and.w	r2, r2, #3
 8012bf0:	f003 0303 	and.w	r3, r3, #3
 8012bf4:	bf58      	it	pl
 8012bf6:	4253      	negpl	r3, r2
 8012bf8:	3b02      	subs	r3, #2
 8012bfa:	930a      	str	r3, [sp, #40]	; 0x28
 8012bfc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8012bfe:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8012c00:	425b      	negs	r3, r3
 8012c02:	2a00      	cmp	r2, #0
 8012c04:	930e      	str	r3, [sp, #56]	; 0x38
 8012c06:	461a      	mov	r2, r3
 8012c08:	f04f 0301 	mov.w	r3, #1
 8012c0c:	fa03 f302 	lsl.w	r3, r3, r2
 8012c10:	f103 32ff 	add.w	r2, r3, #4294967295
 8012c14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012c16:	9210      	str	r2, [sp, #64]	; 0x40
 8012c18:	f003 0301 	and.w	r3, r3, #1
 8012c1c:	bfb8      	it	lt
 8012c1e:	425b      	neglt	r3, r3
 8012c20:	9311      	str	r3, [sp, #68]	; 0x44
 8012c22:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012c24:	2b03      	cmp	r3, #3
 8012c26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012c28:	ea4f 0143 	mov.w	r1, r3, lsl #1
 8012c2c:	ea4f 0389 	mov.w	r3, r9, lsl #2
 8012c30:	bfc8      	it	gt
 8012c32:	4618      	movgt	r0, r3
 8012c34:	9117      	str	r1, [sp, #92]	; 0x5c
 8012c36:	f101 0301 	add.w	r3, r1, #1
 8012c3a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8012c3c:	440b      	add	r3, r1
 8012c3e:	9305      	str	r3, [sp, #20]
 8012c40:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8012c44:	bfd8      	it	le
 8012c46:	2302      	movle	r3, #2
 8012c48:	930c      	str	r3, [sp, #48]	; 0x30
 8012c4a:	f04f 0300 	mov.w	r3, #0
 8012c4e:	930b      	str	r3, [sp, #44]	; 0x2c
 8012c50:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8012c52:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012c56:	9303      	str	r3, [sp, #12]
 8012c58:	f101 0302 	add.w	r3, r1, #2
 8012c5c:	9306      	str	r3, [sp, #24]
 8012c5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c60:	bfd8      	it	le
 8012c62:	2004      	movle	r0, #4
 8012c64:	1052      	asrs	r2, r2, #1
 8012c66:	4403      	add	r3, r0
 8012c68:	9313      	str	r3, [sp, #76]	; 0x4c
 8012c6a:	1c53      	adds	r3, r2, #1
 8012c6c:	9012      	str	r0, [sp, #72]	; 0x48
 8012c6e:	9214      	str	r2, [sp, #80]	; 0x50
 8012c70:	9316      	str	r3, [sp, #88]	; 0x58
 8012c72:	9b02      	ldr	r3, [sp, #8]
 8012c74:	2b00      	cmp	r3, #0
 8012c76:	f000 82c3 	beq.w	8013200 <arm_nn_vec_mat_mult_t_s4+0x660>
 8012c7a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8012c7c:	6819      	ldr	r1, [r3, #0]
 8012c7e:	589f      	ldr	r7, [r3, r2]
 8012c80:	3304      	adds	r3, #4
 8012c82:	9302      	str	r3, [sp, #8]
 8012c84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012c86:	2b03      	cmp	r3, #3
 8012c88:	f340 82c0 	ble.w	801320c <arm_nn_vec_mat_mult_t_s4+0x66c>
 8012c8c:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
 8012c90:	f8dd c000 	ldr.w	ip, [sp]
 8012c94:	f04f 0e00 	mov.w	lr, #0
 8012c98:	f8bc 3000 	ldrh.w	r3, [ip]
 8012c9c:	f8ad 3064 	strh.w	r3, [sp, #100]	; 0x64
 8012ca0:	f83c 200b 	ldrh.w	r2, [ip, fp]
 8012ca4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8012ca6:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8012caa:	9819      	ldr	r0, [sp, #100]	; 0x64
 8012cac:	f858 5b04 	ldr.w	r5, [r8], #4
 8012cb0:	fa2a f685 	sxtab16	r6, sl, r5
 8012cb4:	021a      	lsls	r2, r3, #8
 8012cb6:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8012cba:	b2db      	uxtb	r3, r3
 8012cbc:	431a      	orrs	r2, r3
 8012cbe:	0203      	lsls	r3, r0, #8
 8012cc0:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8012cc4:	b2c0      	uxtb	r0, r0
 8012cc6:	4303      	orrs	r3, r0
 8012cc8:	011c      	lsls	r4, r3, #4
 8012cca:	0110      	lsls	r0, r2, #4
 8012ccc:	fa2f f080 	sxtb16	r0, r0
 8012cd0:	fa2f f282 	sxtb16	r2, r2
 8012cd4:	fa2f f484 	sxtb16	r4, r4
 8012cd8:	fa2f f383 	sxtb16	r3, r3
 8012cdc:	f10c 0c02 	add.w	ip, ip, #2
 8012ce0:	ea4f 1030 	mov.w	r0, r0, ror #4
 8012ce4:	ea4f 1232 	mov.w	r2, r2, ror #4
 8012ce8:	ea4f 1434 	mov.w	r4, r4, ror #4
 8012cec:	ea4f 1333 	mov.w	r3, r3, ror #4
 8012cf0:	fa2f f080 	sxtb16	r0, r0
 8012cf4:	fa2f f282 	sxtb16	r2, r2
 8012cf8:	fa2f f484 	sxtb16	r4, r4
 8012cfc:	fa2f f383 	sxtb16	r3, r3
 8012d00:	fa2a f595 	sxtab16	r5, sl, r5, ror #8
 8012d04:	fb26 1100 	smlad	r1, r6, r0, r1
 8012d08:	fb25 1102 	smlad	r1, r5, r2, r1
 8012d0c:	fb26 7704 	smlad	r7, r6, r4, r7
 8012d10:	fb25 7703 	smlad	r7, r5, r3, r7
 8012d14:	f10e 0e01 	add.w	lr, lr, #1
 8012d18:	45ce      	cmp	lr, r9
 8012d1a:	dbbd      	blt.n	8012c98 <arm_nn_vec_mat_mult_t_s4+0xf8>
 8012d1c:	9b00      	ldr	r3, [sp, #0]
 8012d1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012d20:	4413      	add	r3, r2
 8012d22:	9300      	str	r3, [sp, #0]
 8012d24:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012d26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8012d28:	2a01      	cmp	r2, #1
 8012d2a:	d81d      	bhi.n	8012d68 <arm_nn_vec_mat_mult_t_s4+0x1c8>
 8012d2c:	9800      	ldr	r0, [sp, #0]
 8012d2e:	f993 4000 	ldrsb.w	r4, [r3]
 8012d32:	f990 5000 	ldrsb.w	r5, [r0]
 8012d36:	f910 200b 	ldrsb.w	r2, [r0, fp]
 8012d3a:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8012d3c:	3001      	adds	r0, #1
 8012d3e:	9000      	str	r0, [sp, #0]
 8012d40:	9824      	ldr	r0, [sp, #144]	; 0x90
 8012d42:	4404      	add	r4, r0
 8012d44:	f993 0001 	ldrsb.w	r0, [r3, #1]
 8012d48:	4430      	add	r0, r6
 8012d4a:	f345 0603 	sbfx	r6, r5, #0, #4
 8012d4e:	fb04 1106 	mla	r1, r4, r6, r1
 8012d52:	112d      	asrs	r5, r5, #4
 8012d54:	fb00 1105 	mla	r1, r0, r5, r1
 8012d58:	f342 0503 	sbfx	r5, r2, #0, #4
 8012d5c:	fb04 7705 	mla	r7, r4, r5, r7
 8012d60:	1112      	asrs	r2, r2, #4
 8012d62:	3302      	adds	r3, #2
 8012d64:	fb00 7702 	mla	r7, r0, r2, r7
 8012d68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012d6a:	2a01      	cmp	r2, #1
 8012d6c:	f000 8227 	beq.w	80131be <arm_nn_vec_mat_mult_t_s4+0x61e>
 8012d70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012d72:	9301      	str	r3, [sp, #4]
 8012d74:	2000      	movs	r0, #0
 8012d76:	4605      	mov	r5, r0
 8012d78:	9c03      	ldr	r4, [sp, #12]
 8012d7a:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8012d7c:	40a1      	lsls	r1, r4
 8012d7e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8012d82:	2200      	movs	r2, #0
 8012d84:	fbc1 3206 	smlal	r3, r2, r1, r6
 8012d88:	0fdb      	lsrs	r3, r3, #31
 8012d8a:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8012d8e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8012d90:	2a00      	cmp	r2, #0
 8012d92:	f340 81e7 	ble.w	8013164 <arm_nn_vec_mat_mult_t_s4+0x5c4>
 8012d96:	40a7      	lsls	r7, r4
 8012d98:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8012d9a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8012d9e:	2100      	movs	r1, #0
 8012da0:	fbc4 2107 	smlal	r2, r1, r4, r7
 8012da4:	2b00      	cmp	r3, #0
 8012da6:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8012daa:	f2c0 8231 	blt.w	8013210 <arm_nn_vec_mat_mult_t_s4+0x670>
 8012dae:	ea52 0241 	orrs.w	r2, r2, r1, lsl #1
 8012db2:	f100 81fd 	bmi.w	80131b0 <arm_nn_vec_mat_mult_t_s4+0x610>
 8012db6:	2100      	movs	r1, #0
 8012db8:	9108      	str	r1, [sp, #32]
 8012dba:	9104      	str	r1, [sp, #16]
 8012dbc:	9107      	str	r1, [sp, #28]
 8012dbe:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012dc0:	440b      	add	r3, r1
 8012dc2:	440a      	add	r2, r1
 8012dc4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012dc6:	428b      	cmp	r3, r1
 8012dc8:	bfb8      	it	lt
 8012dca:	460b      	movlt	r3, r1
 8012dcc:	428a      	cmp	r2, r1
 8012dce:	bfb8      	it	lt
 8012dd0:	460a      	movlt	r2, r1
 8012dd2:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012dd4:	428b      	cmp	r3, r1
 8012dd6:	bfa8      	it	ge
 8012dd8:	460b      	movge	r3, r1
 8012dda:	9906      	ldr	r1, [sp, #24]
 8012ddc:	f801 3c02 	strb.w	r3, [r1, #-2]
 8012de0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8012de2:	429a      	cmp	r2, r3
 8012de4:	bfa8      	it	ge
 8012de6:	461a      	movge	r2, r3
 8012de8:	9b05      	ldr	r3, [sp, #20]
 8012dea:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012dee:	9a02      	ldr	r2, [sp, #8]
 8012df0:	b132      	cbz	r2, 8012e00 <arm_nn_vec_mat_mult_t_s4+0x260>
 8012df2:	6813      	ldr	r3, [r2, #0]
 8012df4:	441d      	add	r5, r3
 8012df6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012df8:	58d3      	ldr	r3, [r2, r3]
 8012dfa:	4418      	add	r0, r3
 8012dfc:	1d13      	adds	r3, r2, #4
 8012dfe:	9302      	str	r3, [sp, #8]
 8012e00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012e02:	2b03      	cmp	r3, #3
 8012e04:	dd4d      	ble.n	8012ea2 <arm_nn_vec_mat_mult_t_s4+0x302>
 8012e06:	e9dd c800 	ldrd	ip, r8, [sp]
 8012e0a:	f04f 0e00 	mov.w	lr, #0
 8012e0e:	f8bc 3000 	ldrh.w	r3, [ip]
 8012e12:	f8ad 3064 	strh.w	r3, [sp, #100]	; 0x64
 8012e16:	f83c 200b 	ldrh.w	r2, [ip, fp]
 8012e1a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8012e1c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8012e20:	9919      	ldr	r1, [sp, #100]	; 0x64
 8012e22:	f858 6b04 	ldr.w	r6, [r8], #4
 8012e26:	fa2a f786 	sxtab16	r7, sl, r6
 8012e2a:	021a      	lsls	r2, r3, #8
 8012e2c:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8012e30:	b2db      	uxtb	r3, r3
 8012e32:	431a      	orrs	r2, r3
 8012e34:	020b      	lsls	r3, r1, #8
 8012e36:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8012e3a:	b2c9      	uxtb	r1, r1
 8012e3c:	430b      	orrs	r3, r1
 8012e3e:	011c      	lsls	r4, r3, #4
 8012e40:	0111      	lsls	r1, r2, #4
 8012e42:	fa2f f181 	sxtb16	r1, r1
 8012e46:	fa2f f282 	sxtb16	r2, r2
 8012e4a:	fa2f f484 	sxtb16	r4, r4
 8012e4e:	fa2f f383 	sxtb16	r3, r3
 8012e52:	f10c 0c02 	add.w	ip, ip, #2
 8012e56:	ea4f 1131 	mov.w	r1, r1, ror #4
 8012e5a:	ea4f 1232 	mov.w	r2, r2, ror #4
 8012e5e:	ea4f 1434 	mov.w	r4, r4, ror #4
 8012e62:	ea4f 1333 	mov.w	r3, r3, ror #4
 8012e66:	fa2f f181 	sxtb16	r1, r1
 8012e6a:	fa2f f282 	sxtb16	r2, r2
 8012e6e:	fa2f f484 	sxtb16	r4, r4
 8012e72:	fa2f f383 	sxtb16	r3, r3
 8012e76:	fa2a f696 	sxtab16	r6, sl, r6, ror #8
 8012e7a:	fb27 5501 	smlad	r5, r7, r1, r5
 8012e7e:	fb26 5502 	smlad	r5, r6, r2, r5
 8012e82:	fb27 0004 	smlad	r0, r7, r4, r0
 8012e86:	fb26 0003 	smlad	r0, r6, r3, r0
 8012e8a:	f10e 0e01 	add.w	lr, lr, #1
 8012e8e:	45ce      	cmp	lr, r9
 8012e90:	dbbd      	blt.n	8012e0e <arm_nn_vec_mat_mult_t_s4+0x26e>
 8012e92:	9b00      	ldr	r3, [sp, #0]
 8012e94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012e96:	4413      	add	r3, r2
 8012e98:	9300      	str	r3, [sp, #0]
 8012e9a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012e9c:	9b01      	ldr	r3, [sp, #4]
 8012e9e:	4413      	add	r3, r2
 8012ea0:	9301      	str	r3, [sp, #4]
 8012ea2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012ea4:	2b01      	cmp	r3, #1
 8012ea6:	d81c      	bhi.n	8012ee2 <arm_nn_vec_mat_mult_t_s4+0x342>
 8012ea8:	9a00      	ldr	r2, [sp, #0]
 8012eaa:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8012eac:	f992 1000 	ldrsb.w	r1, [r2]
 8012eb0:	f912 300b 	ldrsb.w	r3, [r2, fp]
 8012eb4:	3201      	adds	r2, #1
 8012eb6:	9200      	str	r2, [sp, #0]
 8012eb8:	9a01      	ldr	r2, [sp, #4]
 8012eba:	f992 4000 	ldrsb.w	r4, [r2]
 8012ebe:	f992 2001 	ldrsb.w	r2, [r2, #1]
 8012ec2:	4434      	add	r4, r6
 8012ec4:	4432      	add	r2, r6
 8012ec6:	f341 0603 	sbfx	r6, r1, #0, #4
 8012eca:	fb04 5506 	mla	r5, r4, r6, r5
 8012ece:	1109      	asrs	r1, r1, #4
 8012ed0:	fb02 5501 	mla	r5, r2, r1, r5
 8012ed4:	f343 0103 	sbfx	r1, r3, #0, #4
 8012ed8:	fb04 0001 	mla	r0, r4, r1, r0
 8012edc:	111b      	asrs	r3, r3, #4
 8012ede:	fb02 0003 	mla	r0, r2, r3, r0
 8012ee2:	9b03      	ldr	r3, [sp, #12]
 8012ee4:	9926      	ldr	r1, [sp, #152]	; 0x98
 8012ee6:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8012ee8:	409d      	lsls	r5, r3
 8012eea:	2200      	movs	r2, #0
 8012eec:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8012ef0:	fbc5 3201 	smlal	r3, r2, r5, r1
 8012ef4:	0fdb      	lsrs	r3, r3, #31
 8012ef6:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 8012efa:	9a07      	ldr	r2, [sp, #28]
 8012efc:	ea02 0103 	and.w	r1, r2, r3
 8012f00:	9a08      	ldr	r2, [sp, #32]
 8012f02:	fa53 f202 	asrs.w	r2, r3, r2
 8012f06:	9b04      	ldr	r3, [sp, #16]
 8012f08:	bf48      	it	mi
 8012f0a:	3301      	addmi	r3, #1
 8012f0c:	4299      	cmp	r1, r3
 8012f0e:	9b03      	ldr	r3, [sp, #12]
 8012f10:	f04f 0100 	mov.w	r1, #0
 8012f14:	fa00 f003 	lsl.w	r0, r0, r3
 8012f18:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8012f1c:	fbc0 3104 	smlal	r3, r1, r0, r4
 8012f20:	ea4f 73d3 	mov.w	r3, r3, lsr #31
 8012f24:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8012f28:	9808      	ldr	r0, [sp, #32]
 8012f2a:	9907      	ldr	r1, [sp, #28]
 8012f2c:	bfc8      	it	gt
 8012f2e:	3201      	addgt	r2, #1
 8012f30:	4019      	ands	r1, r3
 8012f32:	4103      	asrs	r3, r0
 8012f34:	d502      	bpl.n	8012f3c <arm_nn_vec_mat_mult_t_s4+0x39c>
 8012f36:	9804      	ldr	r0, [sp, #16]
 8012f38:	3001      	adds	r0, #1
 8012f3a:	9004      	str	r0, [sp, #16]
 8012f3c:	9804      	ldr	r0, [sp, #16]
 8012f3e:	4281      	cmp	r1, r0
 8012f40:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012f42:	bfc8      	it	gt
 8012f44:	3301      	addgt	r3, #1
 8012f46:	440a      	add	r2, r1
 8012f48:	4419      	add	r1, r3
 8012f4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012f4c:	429a      	cmp	r2, r3
 8012f4e:	bfb8      	it	lt
 8012f50:	461a      	movlt	r2, r3
 8012f52:	428b      	cmp	r3, r1
 8012f54:	bfb8      	it	lt
 8012f56:	460b      	movlt	r3, r1
 8012f58:	992b      	ldr	r1, [sp, #172]	; 0xac
 8012f5a:	428a      	cmp	r2, r1
 8012f5c:	bfa8      	it	ge
 8012f5e:	460a      	movge	r2, r1
 8012f60:	9906      	ldr	r1, [sp, #24]
 8012f62:	f801 2c01 	strb.w	r2, [r1, #-1]
 8012f66:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012f68:	4293      	cmp	r3, r2
 8012f6a:	bfa8      	it	ge
 8012f6c:	4613      	movge	r3, r2
 8012f6e:	9a05      	ldr	r2, [sp, #20]
 8012f70:	f802 3b02 	strb.w	r3, [r2], #2
 8012f74:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012f76:	9205      	str	r2, [sp, #20]
 8012f78:	1c8a      	adds	r2, r1, #2
 8012f7a:	9206      	str	r2, [sp, #24]
 8012f7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012f7e:	3301      	adds	r3, #1
 8012f80:	429a      	cmp	r2, r3
 8012f82:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f84:	f73f ae75 	bgt.w	8012c72 <arm_nn_vec_mat_mult_t_s4+0xd2>
 8012f88:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012f8a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8012f8c:	2b03      	cmp	r3, #3
 8012f8e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8012f90:	bfd8      	it	le
 8012f92:	2302      	movle	r3, #2
 8012f94:	441a      	add	r2, r3
 8012f96:	9215      	str	r2, [sp, #84]	; 0x54
 8012f98:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012f9a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8012f9c:	425b      	negs	r3, r3
 8012f9e:	f003 0303 	and.w	r3, r3, #3
 8012fa2:	f002 0903 	and.w	r9, r2, #3
 8012fa6:	bf58      	it	pl
 8012fa8:	f1c3 0900 	rsbpl	r9, r3, #0
 8012fac:	f1b9 0f00 	cmp.w	r9, #0
 8012fb0:	f340 80d4 	ble.w	801315c <arm_nn_vec_mat_mult_t_s4+0x5bc>
 8012fb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012fb6:	f8dd c0a0 	ldr.w	ip, [sp, #160]	; 0xa0
 8012fba:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012fbc:	f8cd 901c 	str.w	r9, [sp, #28]
 8012fc0:	00db      	lsls	r3, r3, #3
 8012fc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8012fc4:	4663      	mov	r3, ip
 8012fc6:	2b00      	cmp	r3, #0
 8012fc8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8012fca:	f8cd b00c 	str.w	fp, [sp, #12]
 8012fce:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012fd2:	9301      	str	r3, [sp, #4]
 8012fd4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012fd6:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8012fda:	f8dd 9000 	ldr.w	r9, [sp]
 8012fde:	f8dd b008 	ldr.w	fp, [sp, #8]
 8012fe2:	bfb8      	it	lt
 8012fe4:	f10c 0c03 	addlt.w	ip, ip, #3
 8012fe8:	425a      	negs	r2, r3
 8012fea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8012fec:	f1c3 0300 	rsb	r3, r3, #0
 8012ff0:	4619      	mov	r1, r3
 8012ff2:	930c      	str	r3, [sp, #48]	; 0x30
 8012ff4:	f04f 0301 	mov.w	r3, #1
 8012ff8:	fa03 f301 	lsl.w	r3, r3, r1
 8012ffc:	f103 31ff 	add.w	r1, r3, #4294967295
 8013000:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013002:	910d      	str	r1, [sp, #52]	; 0x34
 8013004:	f002 0203 	and.w	r2, r2, #3
 8013008:	f003 0303 	and.w	r3, r3, #3
 801300c:	bf58      	it	pl
 801300e:	4253      	negpl	r3, r2
 8013010:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013012:	3b02      	subs	r3, #2
 8013014:	2a00      	cmp	r2, #0
 8013016:	9304      	str	r3, [sp, #16]
 8013018:	f002 0301 	and.w	r3, r2, #1
 801301c:	bfb8      	it	lt
 801301e:	425b      	neglt	r3, r3
 8013020:	ea4f 0cac 	mov.w	ip, ip, asr #2
 8013024:	2a03      	cmp	r2, #3
 8013026:	9305      	str	r3, [sp, #20]
 8013028:	ea4f 034c 	mov.w	r3, ip, lsl #1
 801302c:	bfd8      	it	le
 801302e:	2302      	movle	r3, #2
 8013030:	930a      	str	r3, [sp, #40]	; 0x28
 8013032:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8013036:	bfd8      	it	le
 8013038:	2304      	movle	r3, #4
 801303a:	9308      	str	r3, [sp, #32]
 801303c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801303e:	1049      	asrs	r1, r1, #1
 8013040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013044:	f04f 0800 	mov.w	r8, #0
 8013048:	9306      	str	r3, [sp, #24]
 801304a:	1c4b      	adds	r3, r1, #1
 801304c:	910e      	str	r1, [sp, #56]	; 0x38
 801304e:	4642      	mov	r2, r8
 8013050:	930f      	str	r3, [sp, #60]	; 0x3c
 8013052:	f1bb 0f00 	cmp.w	fp, #0
 8013056:	f000 810d 	beq.w	8013274 <arm_nn_vec_mat_mult_t_s4+0x6d4>
 801305a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801305c:	f85b 1003 	ldr.w	r1, [fp, r3]
 8013060:	f10b 0b04 	add.w	fp, fp, #4
 8013064:	4411      	add	r1, r2
 8013066:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013068:	2b03      	cmp	r3, #3
 801306a:	dd2c      	ble.n	80130c6 <arm_nn_vec_mat_mult_t_s4+0x526>
 801306c:	9b03      	ldr	r3, [sp, #12]
 801306e:	4676      	mov	r6, lr
 8013070:	eb09 0703 	add.w	r7, r9, r3
 8013074:	2500      	movs	r5, #0
 8013076:	f837 3b02 	ldrh.w	r3, [r7], #2
 801307a:	f8ad 3064 	strh.w	r3, [sp, #100]	; 0x64
 801307e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8013080:	f856 2b04 	ldr.w	r2, [r6], #4
 8013084:	fa2a f482 	sxtab16	r4, sl, r2
 8013088:	0203      	lsls	r3, r0, #8
 801308a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801308e:	b2c0      	uxtb	r0, r0
 8013090:	4303      	orrs	r3, r0
 8013092:	0118      	lsls	r0, r3, #4
 8013094:	fa2f f080 	sxtb16	r0, r0
 8013098:	fa2f f383 	sxtb16	r3, r3
 801309c:	ea4f 1030 	mov.w	r0, r0, ror #4
 80130a0:	ea4f 1333 	mov.w	r3, r3, ror #4
 80130a4:	fa2f f080 	sxtb16	r0, r0
 80130a8:	fa2f f383 	sxtb16	r3, r3
 80130ac:	fa2a f292 	sxtab16	r2, sl, r2, ror #8
 80130b0:	fb24 1100 	smlad	r1, r4, r0, r1
 80130b4:	fb22 1103 	smlad	r1, r2, r3, r1
 80130b8:	3501      	adds	r5, #1
 80130ba:	4565      	cmp	r5, ip
 80130bc:	dbdb      	blt.n	8013076 <arm_nn_vec_mat_mult_t_s4+0x4d6>
 80130be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80130c0:	4499      	add	r9, r3
 80130c2:	9b08      	ldr	r3, [sp, #32]
 80130c4:	449e      	add	lr, r3
 80130c6:	9b04      	ldr	r3, [sp, #16]
 80130c8:	2b01      	cmp	r3, #1
 80130ca:	d814      	bhi.n	80130f6 <arm_nn_vec_mat_mult_t_s4+0x556>
 80130cc:	9b03      	ldr	r3, [sp, #12]
 80130ce:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80130d0:	f919 3003 	ldrsb.w	r3, [r9, r3]
 80130d4:	f99e 4000 	ldrsb.w	r4, [lr]
 80130d8:	f99e 0001 	ldrsb.w	r0, [lr, #1]
 80130dc:	4414      	add	r4, r2
 80130de:	4410      	add	r0, r2
 80130e0:	f343 0203 	sbfx	r2, r3, #0, #4
 80130e4:	fb04 1102 	mla	r1, r4, r2, r1
 80130e8:	111b      	asrs	r3, r3, #4
 80130ea:	f109 0901 	add.w	r9, r9, #1
 80130ee:	f10e 0e02 	add.w	lr, lr, #2
 80130f2:	fb03 1100 	mla	r1, r3, r0, r1
 80130f6:	9b05      	ldr	r3, [sp, #20]
 80130f8:	2b01      	cmp	r3, #1
 80130fa:	f000 80a0 	beq.w	801323e <arm_nn_vec_mat_mult_t_s4+0x69e>
 80130fe:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013102:	2200      	movs	r2, #0
 8013104:	9b06      	ldr	r3, [sp, #24]
 8013106:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8013108:	4099      	lsls	r1, r3
 801310a:	2000      	movs	r0, #0
 801310c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8013110:	fbc1 3004 	smlal	r3, r0, r1, r4
 8013114:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8013116:	0fdb      	lsrs	r3, r3, #31
 8013118:	2900      	cmp	r1, #0
 801311a:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 801311e:	dc09      	bgt.n	8013134 <arm_nn_vec_mat_mult_t_s4+0x594>
 8013120:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013122:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013124:	4019      	ands	r1, r3
 8013126:	4103      	asrs	r3, r0
 8013128:	bf4c      	ite	mi
 801312a:	980f      	ldrmi	r0, [sp, #60]	; 0x3c
 801312c:	980e      	ldrpl	r0, [sp, #56]	; 0x38
 801312e:	4281      	cmp	r1, r0
 8013130:	bfc8      	it	gt
 8013132:	3301      	addgt	r3, #1
 8013134:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013136:	440b      	add	r3, r1
 8013138:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801313a:	428b      	cmp	r3, r1
 801313c:	bfb8      	it	lt
 801313e:	460b      	movlt	r3, r1
 8013140:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013142:	428b      	cmp	r3, r1
 8013144:	bfa8      	it	ge
 8013146:	460b      	movge	r3, r1
 8013148:	9901      	ldr	r1, [sp, #4]
 801314a:	f801 3b01 	strb.w	r3, [r1], #1
 801314e:	9b07      	ldr	r3, [sp, #28]
 8013150:	9101      	str	r1, [sp, #4]
 8013152:	f108 0801 	add.w	r8, r8, #1
 8013156:	4543      	cmp	r3, r8
 8013158:	f47f af7b 	bne.w	8013052 <arm_nn_vec_mat_mult_t_s4+0x4b2>
 801315c:	2000      	movs	r0, #0
 801315e:	b01b      	add	sp, #108	; 0x6c
 8013160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013164:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8013166:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013168:	ea03 0106 	and.w	r1, r3, r6
 801316c:	4113      	asrs	r3, r2
 801316e:	d456      	bmi.n	801321e <arm_nn_vec_mat_mult_t_s4+0x67e>
 8013170:	40a7      	lsls	r7, r4
 8013172:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8013174:	f04f 4c80 	mov.w	ip, #1073741824	; 0x40000000
 8013178:	f04f 0e00 	mov.w	lr, #0
 801317c:	fbc4 ce07 	smlal	ip, lr, r4, r7
 8013180:	4662      	mov	r2, ip
 8013182:	0fd2      	lsrs	r2, r2, #31
 8013184:	ea42 024e 	orr.w	r2, r2, lr, lsl #1
 8013188:	ea06 0402 	and.w	r4, r6, r2
 801318c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801318e:	4132      	asrs	r2, r6
 8013190:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8013192:	42b1      	cmp	r1, r6
 8013194:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8013196:	9607      	str	r6, [sp, #28]
 8013198:	9914      	ldr	r1, [sp, #80]	; 0x50
 801319a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801319c:	9608      	str	r6, [sp, #32]
 801319e:	bfc8      	it	gt
 80131a0:	3301      	addgt	r3, #1
 80131a2:	2a00      	cmp	r2, #0
 80131a4:	db08      	blt.n	80131b8 <arm_nn_vec_mat_mult_t_s4+0x618>
 80131a6:	9104      	str	r1, [sp, #16]
 80131a8:	42a1      	cmp	r1, r4
 80131aa:	bfb8      	it	lt
 80131ac:	3201      	addlt	r2, #1
 80131ae:	e606      	b.n	8012dbe <arm_nn_vec_mat_mult_t_s4+0x21e>
 80131b0:	2400      	movs	r4, #0
 80131b2:	9408      	str	r4, [sp, #32]
 80131b4:	4621      	mov	r1, r4
 80131b6:	9407      	str	r4, [sp, #28]
 80131b8:	9104      	str	r1, [sp, #16]
 80131ba:	3101      	adds	r1, #1
 80131bc:	e7f4      	b.n	80131a8 <arm_nn_vec_mat_mult_t_s4+0x608>
 80131be:	9a00      	ldr	r2, [sp, #0]
 80131c0:	f993 4000 	ldrsb.w	r4, [r3]
 80131c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80131c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80131c8:	f992 5000 	ldrsb.w	r5, [r2]
 80131cc:	441c      	add	r4, r3
 80131ce:	f912 300b 	ldrsb.w	r3, [r2, fp]
 80131d2:	3201      	adds	r2, #1
 80131d4:	9200      	str	r2, [sp, #0]
 80131d6:	4602      	mov	r2, r0
 80131d8:	f912 0b01 	ldrsb.w	r0, [r2], #1
 80131dc:	9201      	str	r2, [sp, #4]
 80131de:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80131e0:	1882      	adds	r2, r0, r2
 80131e2:	f345 0003 	sbfx	r0, r5, #0, #4
 80131e6:	fb04 1100 	mla	r1, r4, r0, r1
 80131ea:	f343 0003 	sbfx	r0, r3, #0, #4
 80131ee:	112d      	asrs	r5, r5, #4
 80131f0:	fb04 7700 	mla	r7, r4, r0, r7
 80131f4:	1118      	asrs	r0, r3, #4
 80131f6:	fb02 f505 	mul.w	r5, r2, r5
 80131fa:	fb02 f000 	mul.w	r0, r2, r0
 80131fe:	e5bb      	b.n	8012d78 <arm_nn_vec_mat_mult_t_s4+0x1d8>
 8013200:	4619      	mov	r1, r3
 8013202:	461f      	mov	r7, r3
 8013204:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013206:	2b03      	cmp	r3, #3
 8013208:	f73f ad40 	bgt.w	8012c8c <arm_nn_vec_mat_mult_t_s4+0xec>
 801320c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801320e:	e58a      	b.n	8012d26 <arm_nn_vec_mat_mult_t_s4+0x186>
 8013210:	2400      	movs	r4, #0
 8013212:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8013216:	e9cd 4407 	strd	r4, r4, [sp, #28]
 801321a:	4621      	mov	r1, r4
 801321c:	e7c1      	b.n	80131a2 <arm_nn_vec_mat_mult_t_s4+0x602>
 801321e:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8013220:	40a7      	lsls	r7, r4
 8013222:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8013226:	2400      	movs	r4, #0
 8013228:	fbc6 2407 	smlal	r2, r4, r6, r7
 801322c:	0fd2      	lsrs	r2, r2, #31
 801322e:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8013232:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8013234:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8013236:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8013238:	4014      	ands	r4, r2
 801323a:	413a      	asrs	r2, r7
 801323c:	e7a9      	b.n	8013192 <arm_nn_vec_mat_mult_t_s4+0x5f2>
 801323e:	f018 0f01 	tst.w	r8, #1
 8013242:	f47f af5c 	bne.w	80130fe <arm_nn_vec_mat_mult_t_s4+0x55e>
 8013246:	f99e 0000 	ldrsb.w	r0, [lr]
 801324a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801324c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013250:	9c24      	ldr	r4, [sp, #144]	; 0x90
 8013252:	f91e 2b01 	ldrsb.w	r2, [lr], #1
 8013256:	4418      	add	r0, r3
 8013258:	9b03      	ldr	r3, [sp, #12]
 801325a:	f919 3003 	ldrsb.w	r3, [r9, r3]
 801325e:	4422      	add	r2, r4
 8013260:	f343 0403 	sbfx	r4, r3, #0, #4
 8013264:	111b      	asrs	r3, r3, #4
 8013266:	f109 0901 	add.w	r9, r9, #1
 801326a:	fb00 1104 	mla	r1, r0, r4, r1
 801326e:	fb03 f202 	mul.w	r2, r3, r2
 8013272:	e747      	b.n	8013104 <arm_nn_vec_mat_mult_t_s4+0x564>
 8013274:	4611      	mov	r1, r2
 8013276:	e6f6      	b.n	8013066 <arm_nn_vec_mat_mult_t_s4+0x4c6>

08013278 <arm_nn_mat_mult_nt_t_s8>:
 8013278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801327c:	b0a5      	sub	sp, #148	; 0x94
 801327e:	e9cd 321a 	strd	r3, r2, [sp, #104]	; 0x68
 8013282:	901d      	str	r0, [sp, #116]	; 0x74
 8013284:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8013286:	9123      	str	r1, [sp, #140]	; 0x8c
 8013288:	3801      	subs	r0, #1
 801328a:	2800      	cmp	r0, #0
 801328c:	9020      	str	r0, [sp, #128]	; 0x80
 801328e:	f340 829a 	ble.w	80137c6 <arm_nn_mat_mult_nt_t_s8+0x54e>
 8013292:	9832      	ldr	r0, [sp, #200]	; 0xc8
 8013294:	9c32      	ldr	r4, [sp, #200]	; 0xc8
 8013296:	9119      	str	r1, [sp, #100]	; 0x64
 8013298:	4616      	mov	r6, r2
 801329a:	461d      	mov	r5, r3
 801329c:	1e62      	subs	r2, r4, #1
 801329e:	f1a0 0310 	sub.w	r3, r0, #16
 80132a2:	188c      	adds	r4, r1, r2
 80132a4:	f023 020f 	bic.w	r2, r3, #15
 80132a8:	9830      	ldr	r0, [sp, #192]	; 0xc0
 80132aa:	940f      	str	r4, [sp, #60]	; 0x3c
 80132ac:	f102 0410 	add.w	r4, r2, #16
 80132b0:	9411      	str	r4, [sp, #68]	; 0x44
 80132b2:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80132b4:	1040      	asrs	r0, r0, #1
 80132b6:	4613      	mov	r3, r2
 80132b8:	fb04 f200 	mul.w	r2, r4, r0
 80132bc:	901f      	str	r0, [sp, #124]	; 0x7c
 80132be:	eb05 0042 	add.w	r0, r5, r2, lsl #1
 80132c2:	9021      	str	r0, [sp, #132]	; 0x84
 80132c4:	9838      	ldr	r0, [sp, #224]	; 0xe0
 80132c6:	f100 0214 	add.w	r2, r0, #20
 80132ca:	18d3      	adds	r3, r2, r3
 80132cc:	9317      	str	r3, [sp, #92]	; 0x5c
 80132ce:	f06f 0303 	mvn.w	r3, #3
 80132d2:	1a1b      	subs	r3, r3, r0
 80132d4:	9832      	ldr	r0, [sp, #200]	; 0xc8
 80132d6:	9303      	str	r3, [sp, #12]
 80132d8:	f06f 0303 	mvn.w	r3, #3
 80132dc:	1a1b      	subs	r3, r3, r0
 80132de:	9302      	str	r3, [sp, #8]
 80132e0:	f1a0 030f 	sub.w	r3, r0, #15
 80132e4:	9312      	str	r3, [sp, #72]	; 0x48
 80132e6:	4603      	mov	r3, r0
 80132e8:	9838      	ldr	r0, [sp, #224]	; 0xe0
 80132ea:	ebc3 0340 	rsb	r3, r3, r0, lsl #1
 80132ee:	9313      	str	r3, [sp, #76]	; 0x4c
 80132f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80132f2:	f003 0301 	and.w	r3, r3, #1
 80132f6:	931e      	str	r3, [sp, #120]	; 0x78
 80132f8:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80132fa:	005b      	lsls	r3, r3, #1
 80132fc:	931c      	str	r3, [sp, #112]	; 0x70
 80132fe:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8013300:	3304      	adds	r3, #4
 8013302:	9307      	str	r3, [sp, #28]
 8013304:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013306:	3304      	adds	r3, #4
 8013308:	9306      	str	r3, [sp, #24]
 801330a:	0063      	lsls	r3, r4, #1
 801330c:	9314      	str	r3, [sp, #80]	; 0x50
 801330e:	2300      	movs	r3, #0
 8013310:	9318      	str	r3, [sp, #96]	; 0x60
 8013312:	4633      	mov	r3, r6
 8013314:	3304      	adds	r3, #4
 8013316:	9322      	str	r3, [sp, #136]	; 0x88
 8013318:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801331a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801331c:	4413      	add	r3, r2
 801331e:	9308      	str	r3, [sp, #32]
 8013320:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013322:	2b00      	cmp	r3, #0
 8013324:	f340 8479 	ble.w	8013c1a <arm_nn_mat_mult_nt_t_s8+0x9a2>
 8013328:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801332a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801332c:	2200      	movs	r2, #0
 801332e:	3b01      	subs	r3, #1
 8013330:	4629      	mov	r1, r5
 8013332:	4614      	mov	r4, r2
 8013334:	f913 0f01 	ldrsb.w	r0, [r3, #1]!
 8013338:	4404      	add	r4, r0
 801333a:	f911 0f01 	ldrsb.w	r0, [r1, #1]!
 801333e:	429d      	cmp	r5, r3
 8013340:	4402      	add	r2, r0
 8013342:	d1f7      	bne.n	8013334 <arm_nn_mat_mult_nt_t_s8+0xbc>
 8013344:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8013346:	fb04 f303 	mul.w	r3, r4, r3
 801334a:	930d      	str	r3, [sp, #52]	; 0x34
 801334c:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 801334e:	fb02 f303 	mul.w	r3, r2, r3
 8013352:	930e      	str	r3, [sp, #56]	; 0x38
 8013354:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8013356:	b15b      	cbz	r3, 8013370 <arm_nn_mat_mult_nt_t_s8+0xf8>
 8013358:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801335a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801335c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013360:	4419      	add	r1, r3
 8013362:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8013364:	910d      	str	r1, [sp, #52]	; 0x34
 8013366:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801336a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801336c:	441a      	add	r2, r3
 801336e:	920e      	str	r2, [sp, #56]	; 0x38
 8013370:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8013372:	2a00      	cmp	r2, #0
 8013374:	f000 844e 	beq.w	8013c14 <arm_nn_mat_mult_nt_t_s8+0x99c>
 8013378:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801337a:	991a      	ldr	r1, [sp, #104]	; 0x68
 801337c:	9209      	str	r2, [sp, #36]	; 0x24
 801337e:	3301      	adds	r3, #1
 8013380:	440b      	add	r3, r1
 8013382:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013384:	440b      	add	r3, r1
 8013386:	930a      	str	r3, [sp, #40]	; 0x28
 8013388:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801338a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801338c:	3b03      	subs	r3, #3
 801338e:	9310      	str	r3, [sp, #64]	; 0x40
 8013390:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013392:	440b      	add	r3, r1
 8013394:	9315      	str	r3, [sp, #84]	; 0x54
 8013396:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8013398:	9304      	str	r3, [sp, #16]
 801339a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 801339c:	3304      	adds	r3, #4
 801339e:	9316      	str	r3, [sp, #88]	; 0x58
 80133a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80133a2:	2b00      	cmp	r3, #0
 80133a4:	f340 82c9 	ble.w	801393a <arm_nn_mat_mult_nt_t_s8+0x6c2>
 80133a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80133aa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80133ac:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80133ae:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80133b0:	1d59      	adds	r1, r3, #5
 80133b2:	9b04      	ldr	r3, [sp, #16]
 80133b4:	189a      	adds	r2, r3, r2
 80133b6:	4403      	add	r3, r0
 80133b8:	9301      	str	r3, [sp, #4]
 80133ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80133bc:	46b0      	mov	r8, r6
 80133be:	469b      	mov	fp, r3
 80133c0:	9802      	ldr	r0, [sp, #8]
 80133c2:	9f03      	ldr	r7, [sp, #12]
 80133c4:	5845      	ldr	r5, [r0, r1]
 80133c6:	f857 e002 	ldr.w	lr, [r7, r2]
 80133ca:	f851 4c04 	ldr.w	r4, [r1, #-4]
 80133ce:	fa2f f985 	sxtb16	r9, r5
 80133d2:	eb00 0c01 	add.w	ip, r0, r1
 80133d6:	4417      	add	r7, r2
 80133d8:	fa2f f08e 	sxtb16	r0, lr
 80133dc:	fa2f f595 	sxtb16	r5, r5, ror #8
 80133e0:	fa2f fe9e 	sxtb16	lr, lr, ror #8
 80133e4:	fb20 3309 	smlad	r3, r0, r9, r3
 80133e8:	fa2f fa84 	sxtb16	sl, r4
 80133ec:	fb2e 3305 	smlad	r3, lr, r5, r3
 80133f0:	fa2f f494 	sxtb16	r4, r4, ror #8
 80133f4:	fb20 600a 	smlad	r0, r0, sl, r6
 80133f8:	fb2e 0e04 	smlad	lr, lr, r4, r0
 80133fc:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8013400:	fa2f f680 	sxtb16	r6, r0
 8013404:	fa2f f090 	sxtb16	r0, r0, ror #8
 8013408:	fb26 b909 	smlad	r9, r6, r9, fp
 801340c:	fb26 8a0a 	smlad	sl, r6, sl, r8
 8013410:	fb20 9505 	smlad	r5, r0, r5, r9
 8013414:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8013418:	fb20 aa04 	smlad	sl, r0, r4, sl
 801341c:	f8d7 9004 	ldr.w	r9, [r7, #4]
 8013420:	680c      	ldr	r4, [r1, #0]
 8013422:	fa2f f886 	sxtb16	r8, r6
 8013426:	fa2f f089 	sxtb16	r0, r9
 801342a:	fa2f f696 	sxtb16	r6, r6, ror #8
 801342e:	fa2f f999 	sxtb16	r9, r9, ror #8
 8013432:	fb20 3308 	smlad	r3, r0, r8, r3
 8013436:	fa2f fb84 	sxtb16	fp, r4
 801343a:	fb29 3306 	smlad	r3, r9, r6, r3
 801343e:	fa2f f494 	sxtb16	r4, r4, ror #8
 8013442:	fb20 ee0b 	smlad	lr, r0, fp, lr
 8013446:	fb29 e904 	smlad	r9, r9, r4, lr
 801344a:	6810      	ldr	r0, [r2, #0]
 801344c:	fa2f fe80 	sxtb16	lr, r0
 8013450:	fa2f f090 	sxtb16	r0, r0, ror #8
 8013454:	fb2e 5508 	smlad	r5, lr, r8, r5
 8013458:	fb2e aa0b 	smlad	sl, lr, fp, sl
 801345c:	fb20 5606 	smlad	r6, r0, r6, r5
 8013460:	f8dc b008 	ldr.w	fp, [ip, #8]
 8013464:	fb20 a404 	smlad	r4, r0, r4, sl
 8013468:	68bd      	ldr	r5, [r7, #8]
 801346a:	6848      	ldr	r0, [r1, #4]
 801346c:	fa2f fa8b 	sxtb16	sl, fp
 8013470:	fa2f fe85 	sxtb16	lr, r5
 8013474:	fa2f fb9b 	sxtb16	fp, fp, ror #8
 8013478:	fa2f f595 	sxtb16	r5, r5, ror #8
 801347c:	fb2e 330a 	smlad	r3, lr, sl, r3
 8013480:	fa2f f880 	sxtb16	r8, r0
 8013484:	fb25 330b 	smlad	r3, r5, fp, r3
 8013488:	fa2f f090 	sxtb16	r0, r0, ror #8
 801348c:	fb2e 9908 	smlad	r9, lr, r8, r9
 8013490:	fb25 9500 	smlad	r5, r5, r0, r9
 8013494:	f8d2 9004 	ldr.w	r9, [r2, #4]
 8013498:	fa2f fe89 	sxtb16	lr, r9
 801349c:	fa2f f999 	sxtb16	r9, r9, ror #8
 80134a0:	fb2e 660a 	smlad	r6, lr, sl, r6
 80134a4:	fb2e 4808 	smlad	r8, lr, r8, r4
 80134a8:	fb29 6a0b 	smlad	sl, r9, fp, r6
 80134ac:	f8dc b00c 	ldr.w	fp, [ip, #12]
 80134b0:	fb29 8000 	smlad	r0, r9, r0, r8
 80134b4:	68fe      	ldr	r6, [r7, #12]
 80134b6:	f8d1 8008 	ldr.w	r8, [r1, #8]
 80134ba:	fa2f fc8b 	sxtb16	ip, fp
 80134be:	fa2f fe86 	sxtb16	lr, r6
 80134c2:	fa2f fb9b 	sxtb16	fp, fp, ror #8
 80134c6:	fa2f f696 	sxtb16	r6, r6, ror #8
 80134ca:	fb2e 330c 	smlad	r3, lr, ip, r3
 80134ce:	fa2f f488 	sxtb16	r4, r8
 80134d2:	fb26 330b 	smlad	r3, r6, fp, r3
 80134d6:	fa2f f798 	sxtb16	r7, r8, ror #8
 80134da:	fb2e 5504 	smlad	r5, lr, r4, r5
 80134de:	fb26 5607 	smlad	r6, r6, r7, r5
 80134e2:	f8d2 8008 	ldr.w	r8, [r2, #8]
 80134e6:	fa2f f988 	sxtb16	r9, r8
 80134ea:	fa2f f898 	sxtb16	r8, r8, ror #8
 80134ee:	fb29 aa0c 	smlad	sl, r9, ip, sl
 80134f2:	fb29 0004 	smlad	r0, r9, r4, r0
 80134f6:	fb28 ab0b 	smlad	fp, r8, fp, sl
 80134fa:	fb28 0807 	smlad	r8, r8, r7, r0
 80134fe:	9801      	ldr	r0, [sp, #4]
 8013500:	3210      	adds	r2, #16
 8013502:	4290      	cmp	r0, r2
 8013504:	f101 0110 	add.w	r1, r1, #16
 8013508:	f47f af5a 	bne.w	80133c0 <arm_nn_mat_mult_nt_t_s8+0x148>
 801350c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801350e:	9a04      	ldr	r2, [sp, #16]
 8013510:	9101      	str	r1, [sp, #4]
 8013512:	440a      	add	r2, r1
 8013514:	9204      	str	r2, [sp, #16]
 8013516:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8013518:	9205      	str	r2, [sp, #20]
 801351a:	460a      	mov	r2, r1
 801351c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801351e:	428a      	cmp	r2, r1
 8013520:	f280 8207 	bge.w	8013932 <arm_nn_mat_mult_nt_t_s8+0x6ba>
 8013524:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8013526:	9d04      	ldr	r5, [sp, #16]
 8013528:	f8dd a014 	ldr.w	sl, [sp, #20]
 801352c:	f1a1 0e04 	sub.w	lr, r1, #4
 8013530:	ebae 0202 	sub.w	r2, lr, r2
 8013534:	0892      	lsrs	r2, r2, #2
 8013536:	920c      	str	r2, [sp, #48]	; 0x30
 8013538:	3201      	adds	r2, #1
 801353a:	0091      	lsls	r1, r2, #2
 801353c:	910b      	str	r1, [sp, #44]	; 0x2c
 801353e:	eb05 0c82 	add.w	ip, r5, r2, lsl #2
 8013542:	f85a 0b04 	ldr.w	r0, [sl], #4
 8013546:	f855 2b04 	ldr.w	r2, [r5], #4
 801354a:	f85a 100e 	ldr.w	r1, [sl, lr]
 801354e:	fa2f f980 	sxtb16	r9, r0
 8013552:	fa2f f482 	sxtb16	r4, r2
 8013556:	fa2f f090 	sxtb16	r0, r0, ror #8
 801355a:	fa2f f292 	sxtb16	r2, r2, ror #8
 801355e:	fb24 3309 	smlad	r3, r4, r9, r3
 8013562:	fa2f f781 	sxtb16	r7, r1
 8013566:	fb22 3300 	smlad	r3, r2, r0, r3
 801356a:	fa2f f191 	sxtb16	r1, r1, ror #8
 801356e:	fb24 6607 	smlad	r6, r4, r7, r6
 8013572:	fb22 6601 	smlad	r6, r2, r1, r6
 8013576:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8013578:	18aa      	adds	r2, r5, r2
 801357a:	f852 2c04 	ldr.w	r2, [r2, #-4]
 801357e:	fa2f f482 	sxtb16	r4, r2
 8013582:	fa2f f292 	sxtb16	r2, r2, ror #8
 8013586:	fb24 bb09 	smlad	fp, r4, r9, fp
 801358a:	fb24 8807 	smlad	r8, r4, r7, r8
 801358e:	fb22 bb00 	smlad	fp, r2, r0, fp
 8013592:	fb22 8801 	smlad	r8, r2, r1, r8
 8013596:	4565      	cmp	r5, ip
 8013598:	d1d3      	bne.n	8013542 <arm_nn_mat_mult_nt_t_s8+0x2ca>
 801359a:	9a05      	ldr	r2, [sp, #20]
 801359c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801359e:	440a      	add	r2, r1
 80135a0:	9205      	str	r2, [sp, #20]
 80135a2:	9a01      	ldr	r2, [sp, #4]
 80135a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80135a6:	3204      	adds	r2, #4
 80135a8:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 80135ac:	9201      	str	r2, [sp, #4]
 80135ae:	4615      	mov	r5, r2
 80135b0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80135b2:	42aa      	cmp	r2, r5
 80135b4:	dd58      	ble.n	8013668 <arm_nn_mat_mult_nt_t_s8+0x3f0>
 80135b6:	9c05      	ldr	r4, [sp, #20]
 80135b8:	f99c 1000 	ldrsb.w	r1, [ip]
 80135bc:	56a2      	ldrsb	r2, [r4, r2]
 80135be:	f994 0000 	ldrsb.w	r0, [r4]
 80135c2:	fb12 6601 	smlabb	r6, r2, r1, r6
 80135c6:	fb10 3301 	smlabb	r3, r0, r1, r3
 80135ca:	9938      	ldr	r1, [sp, #224]	; 0xe0
 80135cc:	f91c 1001 	ldrsb.w	r1, [ip, r1]
 80135d0:	fb11 8802 	smlabb	r8, r1, r2, r8
 80135d4:	fb11 bb00 	smlabb	fp, r1, r0, fp
 80135d8:	9932      	ldr	r1, [sp, #200]	; 0xc8
 80135da:	1c6a      	adds	r2, r5, #1
 80135dc:	4291      	cmp	r1, r2
 80135de:	dd3f      	ble.n	8013660 <arm_nn_mat_mult_nt_t_s8+0x3e8>
 80135e0:	1862      	adds	r2, r4, r1
 80135e2:	460f      	mov	r7, r1
 80135e4:	f992 1001 	ldrsb.w	r1, [r2, #1]
 80135e8:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 80135ea:	f994 0001 	ldrsb.w	r0, [r4, #1]
 80135ee:	4462      	add	r2, ip
 80135f0:	f992 2001 	ldrsb.w	r2, [r2, #1]
 80135f4:	fb12 8801 	smlabb	r8, r2, r1, r8
 80135f8:	fb12 bb00 	smlabb	fp, r2, r0, fp
 80135fc:	f99c 2001 	ldrsb.w	r2, [ip, #1]
 8013600:	fb10 3302 	smlabb	r3, r0, r2, r3
 8013604:	fb11 6602 	smlabb	r6, r1, r2, r6
 8013608:	1caa      	adds	r2, r5, #2
 801360a:	4297      	cmp	r7, r2
 801360c:	f104 0002 	add.w	r0, r4, #2
 8013610:	f10c 0102 	add.w	r1, ip, #2
 8013614:	dd24      	ble.n	8013660 <arm_nn_mat_mult_nt_t_s8+0x3e8>
 8013616:	9a38      	ldr	r2, [sp, #224]	; 0xe0
 8013618:	57c0      	ldrsb	r0, [r0, r7]
 801361a:	568a      	ldrsb	r2, [r1, r2]
 801361c:	f994 1002 	ldrsb.w	r1, [r4, #2]
 8013620:	fb12 8800 	smlabb	r8, r2, r0, r8
 8013624:	fb12 bb01 	smlabb	fp, r2, r1, fp
 8013628:	f99c 2002 	ldrsb.w	r2, [ip, #2]
 801362c:	fb11 3302 	smlabb	r3, r1, r2, r3
 8013630:	fb10 6602 	smlabb	r6, r0, r2, r6
 8013634:	1cea      	adds	r2, r5, #3
 8013636:	4297      	cmp	r7, r2
 8013638:	f104 0003 	add.w	r0, r4, #3
 801363c:	f10c 0103 	add.w	r1, ip, #3
 8013640:	dd0e      	ble.n	8013660 <arm_nn_mat_mult_nt_t_s8+0x3e8>
 8013642:	f994 2003 	ldrsb.w	r2, [r4, #3]
 8013646:	9c38      	ldr	r4, [sp, #224]	; 0xe0
 8013648:	57c0      	ldrsb	r0, [r0, r7]
 801364a:	5709      	ldrsb	r1, [r1, r4]
 801364c:	fb12 bb01 	smlabb	fp, r2, r1, fp
 8013650:	fb10 8801 	smlabb	r8, r0, r1, r8
 8013654:	f99c 1003 	ldrsb.w	r1, [ip, #3]
 8013658:	fb11 3302 	smlabb	r3, r1, r2, r3
 801365c:	fb11 6600 	smlabb	r6, r1, r0, r6
 8013660:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013662:	9901      	ldr	r1, [sp, #4]
 8013664:	1a52      	subs	r2, r2, r1
 8013666:	4494      	add	ip, r2
 8013668:	9a06      	ldr	r2, [sp, #24]
 801366a:	f852 0c04 	ldr.w	r0, [r2, #-4]
 801366e:	9a07      	ldr	r2, [sp, #28]
 8013670:	f852 5c04 	ldr.w	r5, [r2, #-4]
 8013674:	ea20 72e0 	bic.w	r2, r0, r0, asr #31
 8013678:	4093      	lsls	r3, r2
 801367a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 801367e:	2400      	movs	r4, #0
 8013680:	fbc3 1405 	smlal	r1, r4, r3, r5
 8013684:	0fc9      	lsrs	r1, r1, #31
 8013686:	2800      	cmp	r0, #0
 8013688:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
 801368c:	f340 812e 	ble.w	80138ec <arm_nn_mat_mult_nt_t_s8+0x674>
 8013690:	fa0b f202 	lsl.w	r2, fp, r2
 8013694:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8013698:	2000      	movs	r0, #0
 801369a:	fbc5 3002 	smlal	r3, r0, r5, r2
 801369e:	0fdb      	lsrs	r3, r3, #31
 80136a0:	f04f 0a00 	mov.w	sl, #0
 80136a4:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 80136a8:	46d1      	mov	r9, sl
 80136aa:	9a06      	ldr	r2, [sp, #24]
 80136ac:	9807      	ldr	r0, [sp, #28]
 80136ae:	6812      	ldr	r2, [r2, #0]
 80136b0:	6805      	ldr	r5, [r0, #0]
 80136b2:	ea22 77e2 	bic.w	r7, r2, r2, asr #31
 80136b6:	40be      	lsls	r6, r7
 80136b8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80136bc:	2400      	movs	r4, #0
 80136be:	fbc6 0405 	smlal	r0, r4, r6, r5
 80136c2:	0fc0      	lsrs	r0, r0, #31
 80136c4:	2a00      	cmp	r2, #0
 80136c6:	ea40 0044 	orr.w	r0, r0, r4, lsl #1
 80136ca:	f340 80f0 	ble.w	80138ae <arm_nn_mat_mult_nt_t_s8+0x636>
 80136ce:	fa08 f707 	lsl.w	r7, r8, r7
 80136d2:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 80136d6:	2200      	movs	r2, #0
 80136d8:	fbc5 4207 	smlal	r4, r2, r5, r7
 80136dc:	ea4f 7ed4 	mov.w	lr, r4, lsr #31
 80136e0:	2400      	movs	r4, #0
 80136e2:	ea4e 0e42 	orr.w	lr, lr, r2, lsl #1
 80136e6:	4626      	mov	r6, r4
 80136e8:	2b00      	cmp	r3, #0
 80136ea:	bfb8      	it	lt
 80136ec:	f109 0901 	addlt.w	r9, r9, #1
 80136f0:	45d1      	cmp	r9, sl
 80136f2:	bfb8      	it	lt
 80136f4:	3301      	addlt	r3, #1
 80136f6:	f1be 0f00 	cmp.w	lr, #0
 80136fa:	bfb8      	it	lt
 80136fc:	3601      	addlt	r6, #1
 80136fe:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8013700:	42a6      	cmp	r6, r4
 8013702:	bfb8      	it	lt
 8013704:	f10e 0e01 	addlt.w	lr, lr, #1
 8013708:	4411      	add	r1, r2
 801370a:	4413      	add	r3, r2
 801370c:	4410      	add	r0, r2
 801370e:	4496      	add	lr, r2
 8013710:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8013712:	4291      	cmp	r1, r2
 8013714:	bfb8      	it	lt
 8013716:	4611      	movlt	r1, r2
 8013718:	4290      	cmp	r0, r2
 801371a:	bfb8      	it	lt
 801371c:	4610      	movlt	r0, r2
 801371e:	4293      	cmp	r3, r2
 8013720:	bfb8      	it	lt
 8013722:	4613      	movlt	r3, r2
 8013724:	4596      	cmp	lr, r2
 8013726:	bfb8      	it	lt
 8013728:	4696      	movlt	lr, r2
 801372a:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801372c:	4291      	cmp	r1, r2
 801372e:	bfa8      	it	ge
 8013730:	4611      	movge	r1, r2
 8013732:	9a08      	ldr	r2, [sp, #32]
 8013734:	7011      	strb	r1, [r2, #0]
 8013736:	9936      	ldr	r1, [sp, #216]	; 0xd8
 8013738:	4288      	cmp	r0, r1
 801373a:	bfa8      	it	ge
 801373c:	4608      	movge	r0, r1
 801373e:	428b      	cmp	r3, r1
 8013740:	bfa8      	it	ge
 8013742:	460b      	movge	r3, r1
 8013744:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013746:	7050      	strb	r0, [r2, #1]
 8013748:	f801 3c01 	strb.w	r3, [r1, #-1]
 801374c:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 801374e:	459e      	cmp	lr, r3
 8013750:	bfa8      	it	ge
 8013752:	469e      	movge	lr, r3
 8013754:	f881 e000 	strb.w	lr, [r1]
 8013758:	460b      	mov	r3, r1
 801375a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801375c:	440a      	add	r2, r1
 801375e:	440b      	add	r3, r1
 8013760:	9208      	str	r2, [sp, #32]
 8013762:	930a      	str	r3, [sp, #40]	; 0x28
 8013764:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8013766:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013768:	4462      	add	r2, ip
 801376a:	3b01      	subs	r3, #1
 801376c:	9204      	str	r2, [sp, #16]
 801376e:	9309      	str	r3, [sp, #36]	; 0x24
 8013770:	f47f ae16 	bne.w	80133a0 <arm_nn_mat_mult_nt_t_s8+0x128>
 8013774:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8013776:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8013778:	4413      	add	r3, r2
 801377a:	9308      	str	r3, [sp, #32]
 801377c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801377e:	2b00      	cmp	r3, #0
 8013780:	f040 80e4 	bne.w	801394c <arm_nn_mat_mult_nt_t_s8+0x6d4>
 8013784:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8013786:	991c      	ldr	r1, [sp, #112]	; 0x70
 8013788:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801378a:	440a      	add	r2, r1
 801378c:	9219      	str	r2, [sp, #100]	; 0x64
 801378e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013790:	440a      	add	r2, r1
 8013792:	920f      	str	r2, [sp, #60]	; 0x3c
 8013794:	9a07      	ldr	r2, [sp, #28]
 8013796:	3208      	adds	r2, #8
 8013798:	9207      	str	r2, [sp, #28]
 801379a:	9a06      	ldr	r2, [sp, #24]
 801379c:	3208      	adds	r2, #8
 801379e:	9206      	str	r2, [sp, #24]
 80137a0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80137a2:	3302      	adds	r3, #2
 80137a4:	4293      	cmp	r3, r2
 80137a6:	9318      	str	r3, [sp, #96]	; 0x60
 80137a8:	f6ff adb6 	blt.w	8013318 <arm_nn_mat_mult_nt_t_s8+0xa0>
 80137ac:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80137ae:	3b02      	subs	r3, #2
 80137b0:	085b      	lsrs	r3, r3, #1
 80137b2:	fb03 1201 	mla	r2, r3, r1, r1
 80137b6:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80137b8:	4411      	add	r1, r2
 80137ba:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80137bc:	9123      	str	r1, [sp, #140]	; 0x8c
 80137be:	3301      	adds	r3, #1
 80137c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80137c4:	931a      	str	r3, [sp, #104]	; 0x68
 80137c6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80137c8:	07db      	lsls	r3, r3, #31
 80137ca:	d56c      	bpl.n	80138a6 <arm_nn_mat_mult_nt_t_s8+0x62e>
 80137cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80137ce:	2b00      	cmp	r3, #0
 80137d0:	dd69      	ble.n	80138a6 <arm_nn_mat_mult_nt_t_s8+0x62e>
 80137d2:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80137d4:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80137d6:	1a9f      	subs	r7, r3, r2
 80137d8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80137da:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80137dc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80137e0:	3b01      	subs	r3, #1
 80137e2:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80137e6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80137e8:	eb02 0c83 	add.w	ip, r2, r3, lsl #2
 80137ec:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80137ee:	e9cd c701 	strd	ip, r7, [sp, #4]
 80137f2:	eb02 0983 	add.w	r9, r2, r3, lsl #2
 80137f6:	e9dd 7c32 	ldrd	r7, ip, [sp, #200]	; 0xc8
 80137fa:	2400      	movs	r4, #0
 80137fc:	f8cd 900c 	str.w	r9, [sp, #12]
 8013800:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013802:	f8dd 9068 	ldr.w	r9, [sp, #104]	; 0x68
 8013806:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 801380a:	46a0      	mov	r8, r4
 801380c:	f04f 0a01 	mov.w	sl, #1
 8013810:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8013812:	2b00      	cmp	r3, #0
 8013814:	f000 8206 	beq.w	8013c24 <arm_nn_mat_mult_nt_t_s8+0x9ac>
 8013818:	9b03      	ldr	r3, [sp, #12]
 801381a:	2f00      	cmp	r7, #0
 801381c:	6819      	ldr	r1, [r3, #0]
 801381e:	f340 8205 	ble.w	8013c2c <arm_nn_mat_mult_nt_t_s8+0x9b4>
 8013822:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8013824:	eb02 0b07 	add.w	fp, r2, r7
 8013828:	1e58      	subs	r0, r3, #1
 801382a:	f912 3b01 	ldrsb.w	r3, [r2], #1
 801382e:	f910 6f01 	ldrsb.w	r6, [r0, #1]!
 8013832:	4463      	add	r3, ip
 8013834:	455a      	cmp	r2, fp
 8013836:	fb06 1103 	mla	r1, r6, r3, r1
 801383a:	d1f6      	bne.n	801382a <arm_nn_mat_mult_nt_t_s8+0x5b2>
 801383c:	9b02      	ldr	r3, [sp, #8]
 801383e:	eb0b 0203 	add.w	r2, fp, r3
 8013842:	9b01      	ldr	r3, [sp, #4]
 8013844:	681e      	ldr	r6, [r3, #0]
 8013846:	682b      	ldr	r3, [r5, #0]
 8013848:	ea26 70e6 	bic.w	r0, r6, r6, asr #31
 801384c:	fa01 f000 	lsl.w	r0, r1, r0
 8013850:	46c3      	mov	fp, r8
 8013852:	4671      	mov	r1, lr
 8013854:	fbc0 1b03 	smlal	r1, fp, r0, r3
 8013858:	0fc9      	lsrs	r1, r1, #31
 801385a:	2e00      	cmp	r6, #0
 801385c:	ea41 0b4b 	orr.w	fp, r1, fp, lsl #1
 8013860:	dc0f      	bgt.n	8013882 <arm_nn_mat_mult_nt_t_s8+0x60a>
 8013862:	4276      	negs	r6, r6
 8013864:	fa0a f306 	lsl.w	r3, sl, r6
 8013868:	3b01      	subs	r3, #1
 801386a:	ea0b 0103 	and.w	r1, fp, r3
 801386e:	fa5b fb06 	asrs.w	fp, fp, r6
 8013872:	ea4f 0363 	mov.w	r3, r3, asr #1
 8013876:	bf48      	it	mi
 8013878:	3301      	addmi	r3, #1
 801387a:	4299      	cmp	r1, r3
 801387c:	bfc8      	it	gt
 801387e:	f10b 0b01 	addgt.w	fp, fp, #1
 8013882:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8013884:	9935      	ldr	r1, [sp, #212]	; 0xd4
 8013886:	445b      	add	r3, fp
 8013888:	428b      	cmp	r3, r1
 801388a:	bfb8      	it	lt
 801388c:	460b      	movlt	r3, r1
 801388e:	9936      	ldr	r1, [sp, #216]	; 0xd8
 8013890:	428b      	cmp	r3, r1
 8013892:	bfa8      	it	ge
 8013894:	460b      	movge	r3, r1
 8013896:	f889 3000 	strb.w	r3, [r9]
 801389a:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 801389c:	4499      	add	r9, r3
 801389e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80138a0:	3401      	adds	r4, #1
 80138a2:	42a3      	cmp	r3, r4
 80138a4:	d1b4      	bne.n	8013810 <arm_nn_mat_mult_nt_t_s8+0x598>
 80138a6:	2000      	movs	r0, #0
 80138a8:	b025      	add	sp, #148	; 0x94
 80138aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138ae:	4252      	negs	r2, r2
 80138b0:	fa08 f707 	lsl.w	r7, r8, r7
 80138b4:	2401      	movs	r4, #1
 80138b6:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 80138ba:	f04f 0800 	mov.w	r8, #0
 80138be:	4094      	lsls	r4, r2
 80138c0:	fbc5 e807 	smlal	lr, r8, r5, r7
 80138c4:	3c01      	subs	r4, #1
 80138c6:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 80138ca:	ea00 0b04 	and.w	fp, r0, r4
 80138ce:	1066      	asrs	r6, r4, #1
 80138d0:	4110      	asrs	r0, r2
 80138d2:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 80138d6:	ea04 040e 	and.w	r4, r4, lr
 80138da:	fa4e fe02 	asr.w	lr, lr, r2
 80138de:	bf54      	ite	pl
 80138e0:	4632      	movpl	r2, r6
 80138e2:	1c72      	addmi	r2, r6, #1
 80138e4:	4593      	cmp	fp, r2
 80138e6:	bfc8      	it	gt
 80138e8:	3001      	addgt	r0, #1
 80138ea:	e6fd      	b.n	80136e8 <arm_nn_mat_mult_nt_t_s8+0x470>
 80138ec:	4243      	negs	r3, r0
 80138ee:	f04f 0a01 	mov.w	sl, #1
 80138f2:	fa0a fa03 	lsl.w	sl, sl, r3
 80138f6:	fa0b f202 	lsl.w	r2, fp, r2
 80138fa:	f10a 3aff 	add.w	sl, sl, #4294967295
 80138fe:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8013902:	2700      	movs	r7, #0
 8013904:	fbc5 4702 	smlal	r4, r7, r5, r2
 8013908:	ea01 000a 	and.w	r0, r1, sl
 801390c:	ea4f 096a 	mov.w	r9, sl, asr #1
 8013910:	4119      	asrs	r1, r3
 8013912:	ea4f 74d4 	mov.w	r4, r4, lsr #31
 8013916:	bf54      	ite	pl
 8013918:	464a      	movpl	r2, r9
 801391a:	f109 0201 	addmi.w	r2, r9, #1
 801391e:	ea44 0447 	orr.w	r4, r4, r7, lsl #1
 8013922:	4290      	cmp	r0, r2
 8013924:	ea0a 0a04 	and.w	sl, sl, r4
 8013928:	fa44 f303 	asr.w	r3, r4, r3
 801392c:	bfc8      	it	gt
 801392e:	3101      	addgt	r1, #1
 8013930:	e6bb      	b.n	80136aa <arm_nn_mat_mult_nt_t_s8+0x432>
 8013932:	f8dd c010 	ldr.w	ip, [sp, #16]
 8013936:	4615      	mov	r5, r2
 8013938:	e63a      	b.n	80135b0 <arm_nn_mat_mult_nt_t_s8+0x338>
 801393a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801393c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801393e:	9305      	str	r3, [sp, #20]
 8013940:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013942:	2200      	movs	r2, #0
 8013944:	46b0      	mov	r8, r6
 8013946:	469b      	mov	fp, r3
 8013948:	9201      	str	r2, [sp, #4]
 801394a:	e5e7      	b.n	801351c <arm_nn_mat_mult_nt_t_s8+0x2a4>
 801394c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801394e:	2b00      	cmp	r3, #0
 8013950:	f340 8171 	ble.w	8013c36 <arm_nn_mat_mult_nt_t_s8+0x9be>
 8013954:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013956:	9e04      	ldr	r6, [sp, #16]
 8013958:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801395a:	9f02      	ldr	r7, [sp, #8]
 801395c:	e9dd 510d 	ldrd	r5, r1, [sp, #52]	; 0x34
 8013960:	3305      	adds	r3, #5
 8013962:	eb06 0802 	add.w	r8, r6, r2
 8013966:	58fc      	ldr	r4, [r7, r3]
 8013968:	f853 cc04 	ldr.w	ip, [r3, #-4]
 801396c:	6832      	ldr	r2, [r6, #0]
 801396e:	fa2f fa84 	sxtb16	sl, r4
 8013972:	18f8      	adds	r0, r7, r3
 8013974:	fa2f fe82 	sxtb16	lr, r2
 8013978:	fa2f f98c 	sxtb16	r9, ip
 801397c:	fa2f f494 	sxtb16	r4, r4, ror #8
 8013980:	fa2f f292 	sxtb16	r2, r2, ror #8
 8013984:	fa2f fc9c 	sxtb16	ip, ip, ror #8
 8013988:	fb2e 550a 	smlad	r5, lr, sl, r5
 801398c:	fb22 5504 	smlad	r5, r2, r4, r5
 8013990:	fb2e 1109 	smlad	r1, lr, r9, r1
 8013994:	fb22 120c 	smlad	r2, r2, ip, r1
 8013998:	6844      	ldr	r4, [r0, #4]
 801399a:	f8d3 e000 	ldr.w	lr, [r3]
 801399e:	6871      	ldr	r1, [r6, #4]
 80139a0:	fa2f fa84 	sxtb16	sl, r4
 80139a4:	fa2f f981 	sxtb16	r9, r1
 80139a8:	fa2f fc8e 	sxtb16	ip, lr
 80139ac:	fa2f f494 	sxtb16	r4, r4, ror #8
 80139b0:	fa2f f191 	sxtb16	r1, r1, ror #8
 80139b4:	fa2f fe9e 	sxtb16	lr, lr, ror #8
 80139b8:	fb29 550a 	smlad	r5, r9, sl, r5
 80139bc:	fb21 5404 	smlad	r4, r1, r4, r5
 80139c0:	fb29 220c 	smlad	r2, r9, ip, r2
 80139c4:	fb21 210e 	smlad	r1, r1, lr, r2
 80139c8:	f8d0 c008 	ldr.w	ip, [r0, #8]
 80139cc:	f8d3 9004 	ldr.w	r9, [r3, #4]
 80139d0:	f8d6 e008 	ldr.w	lr, [r6, #8]
 80139d4:	fa2f fa8c 	sxtb16	sl, ip
 80139d8:	fa2f f28e 	sxtb16	r2, lr
 80139dc:	fa2f f589 	sxtb16	r5, r9
 80139e0:	fa2f fc9c 	sxtb16	ip, ip, ror #8
 80139e4:	fa2f fe9e 	sxtb16	lr, lr, ror #8
 80139e8:	fa2f f999 	sxtb16	r9, r9, ror #8
 80139ec:	fb22 440a 	smlad	r4, r2, sl, r4
 80139f0:	fb2e 4c0c 	smlad	ip, lr, ip, r4
 80139f4:	fb22 1205 	smlad	r2, r2, r5, r1
 80139f8:	fb2e 2209 	smlad	r2, lr, r9, r2
 80139fc:	68c5      	ldr	r5, [r0, #12]
 80139fe:	68f1      	ldr	r1, [r6, #12]
 8013a00:	6898      	ldr	r0, [r3, #8]
 8013a02:	fa2f fe85 	sxtb16	lr, r5
 8013a06:	3610      	adds	r6, #16
 8013a08:	fa2f f481 	sxtb16	r4, r1
 8013a0c:	fa2f f980 	sxtb16	r9, r0
 8013a10:	fa2f f595 	sxtb16	r5, r5, ror #8
 8013a14:	fa2f f191 	sxtb16	r1, r1, ror #8
 8013a18:	fa2f f090 	sxtb16	r0, r0, ror #8
 8013a1c:	fb24 cc0e 	smlad	ip, r4, lr, ip
 8013a20:	fb21 c505 	smlad	r5, r1, r5, ip
 8013a24:	fb24 2209 	smlad	r2, r4, r9, r2
 8013a28:	fb21 2100 	smlad	r1, r1, r0, r2
 8013a2c:	45b0      	cmp	r8, r6
 8013a2e:	f103 0310 	add.w	r3, r3, #16
 8013a32:	d198      	bne.n	8013966 <arm_nn_mat_mult_nt_t_s8+0x6ee>
 8013a34:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013a36:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8013a38:	9604      	str	r6, [sp, #16]
 8013a3a:	e9cd 510d 	strd	r5, r1, [sp, #52]	; 0x34
 8013a3e:	eb02 0803 	add.w	r8, r2, r3
 8013a42:	469e      	mov	lr, r3
 8013a44:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013a46:	3b03      	subs	r3, #3
 8013a48:	4573      	cmp	r3, lr
 8013a4a:	f340 80f1 	ble.w	8013c30 <arm_nn_mat_mult_nt_t_s8+0x9b8>
 8013a4e:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013a50:	9e04      	ldr	r6, [sp, #16]
 8013a52:	f8cd e004 	str.w	lr, [sp, #4]
 8013a56:	1f1f      	subs	r7, r3, #4
 8013a58:	eba7 030e 	sub.w	r3, r7, lr
 8013a5c:	ea4f 0993 	mov.w	r9, r3, lsr #2
 8013a60:	f109 0c01 	add.w	ip, r9, #1
 8013a64:	4645      	mov	r5, r8
 8013a66:	f8cd 8010 	str.w	r8, [sp, #16]
 8013a6a:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 8013a6e:	f8dd 8038 	ldr.w	r8, [sp, #56]	; 0x38
 8013a72:	ea4f 0a8c 	mov.w	sl, ip, lsl #2
 8013a76:	eb06 0c8c 	add.w	ip, r6, ip, lsl #2
 8013a7a:	f855 0b04 	ldr.w	r0, [r5], #4
 8013a7e:	f856 3b04 	ldr.w	r3, [r6], #4
 8013a82:	59ea      	ldr	r2, [r5, r7]
 8013a84:	fa2f f480 	sxtb16	r4, r0
 8013a88:	fa2f f183 	sxtb16	r1, r3
 8013a8c:	fa2f fb82 	sxtb16	fp, r2
 8013a90:	fa2f f090 	sxtb16	r0, r0, ror #8
 8013a94:	fa2f f393 	sxtb16	r3, r3, ror #8
 8013a98:	fa2f f292 	sxtb16	r2, r2, ror #8
 8013a9c:	fb21 ee04 	smlad	lr, r1, r4, lr
 8013aa0:	fb23 ee00 	smlad	lr, r3, r0, lr
 8013aa4:	fb21 880b 	smlad	r8, r1, fp, r8
 8013aa8:	fb23 8802 	smlad	r8, r3, r2, r8
 8013aac:	4566      	cmp	r6, ip
 8013aae:	d1e4      	bne.n	8013a7a <arm_nn_mat_mult_nt_t_s8+0x802>
 8013ab0:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8013ab4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8013ab8:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8013abc:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8013ac0:	f10e 0e04 	add.w	lr, lr, #4
 8013ac4:	44d0      	add	r8, sl
 8013ac6:	eb0e 0e89 	add.w	lr, lr, r9, lsl #2
 8013aca:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013acc:	4573      	cmp	r3, lr
 8013ace:	dd46      	ble.n	8013b5e <arm_nn_mat_mult_nt_t_s8+0x8e6>
 8013ad0:	f99c 3000 	ldrsb.w	r3, [ip]
 8013ad4:	f998 2000 	ldrsb.w	r2, [r8]
 8013ad8:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013ada:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013adc:	fb13 1102 	smlabb	r1, r3, r2, r1
 8013ae0:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013ae2:	910d      	str	r1, [sp, #52]	; 0x34
 8013ae4:	f918 2002 	ldrsb.w	r2, [r8, r2]
 8013ae8:	fb13 0002 	smlabb	r0, r3, r2, r0
 8013aec:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013aee:	900e      	str	r0, [sp, #56]	; 0x38
 8013af0:	f10e 0301 	add.w	r3, lr, #1
 8013af4:	429a      	cmp	r2, r3
 8013af6:	dd32      	ble.n	8013b5e <arm_nn_mat_mult_nt_t_s8+0x8e6>
 8013af8:	eb08 0302 	add.w	r3, r8, r2
 8013afc:	4614      	mov	r4, r2
 8013afe:	f993 2001 	ldrsb.w	r2, [r3, #1]
 8013b02:	f99c 3001 	ldrsb.w	r3, [ip, #1]
 8013b06:	fb13 0002 	smlabb	r0, r3, r2, r0
 8013b0a:	f998 2001 	ldrsb.w	r2, [r8, #1]
 8013b0e:	900e      	str	r0, [sp, #56]	; 0x38
 8013b10:	fb13 1102 	smlabb	r1, r3, r2, r1
 8013b14:	f10e 0302 	add.w	r3, lr, #2
 8013b18:	429c      	cmp	r4, r3
 8013b1a:	910d      	str	r1, [sp, #52]	; 0x34
 8013b1c:	f108 0202 	add.w	r2, r8, #2
 8013b20:	dd1d      	ble.n	8013b5e <arm_nn_mat_mult_nt_t_s8+0x8e6>
 8013b22:	5712      	ldrsb	r2, [r2, r4]
 8013b24:	f99c 3002 	ldrsb.w	r3, [ip, #2]
 8013b28:	fb12 0003 	smlabb	r0, r2, r3, r0
 8013b2c:	f998 2002 	ldrsb.w	r2, [r8, #2]
 8013b30:	900e      	str	r0, [sp, #56]	; 0x38
 8013b32:	fb12 1403 	smlabb	r4, r2, r3, r1
 8013b36:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8013b38:	940d      	str	r4, [sp, #52]	; 0x34
 8013b3a:	f10e 0e03 	add.w	lr, lr, #3
 8013b3e:	4573      	cmp	r3, lr
 8013b40:	f108 0103 	add.w	r1, r8, #3
 8013b44:	dd0b      	ble.n	8013b5e <arm_nn_mat_mult_nt_t_s8+0x8e6>
 8013b46:	f99c 3003 	ldrsb.w	r3, [ip, #3]
 8013b4a:	f998 2003 	ldrsb.w	r2, [r8, #3]
 8013b4e:	fb13 4202 	smlabb	r2, r3, r2, r4
 8013b52:	920d      	str	r2, [sp, #52]	; 0x34
 8013b54:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8013b56:	568a      	ldrsb	r2, [r1, r2]
 8013b58:	fb13 0302 	smlabb	r3, r3, r2, r0
 8013b5c:	930e      	str	r3, [sp, #56]	; 0x38
 8013b5e:	9b06      	ldr	r3, [sp, #24]
 8013b60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013b62:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8013b66:	9b07      	ldr	r3, [sp, #28]
 8013b68:	ea21 74e1 	bic.w	r4, r1, r1, asr #31
 8013b6c:	40a2      	lsls	r2, r4
 8013b6e:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8013b72:	4614      	mov	r4, r2
 8013b74:	2000      	movs	r0, #0
 8013b76:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8013b7a:	fbc4 2003 	smlal	r2, r0, r4, r3
 8013b7e:	0fd2      	lsrs	r2, r2, #31
 8013b80:	2900      	cmp	r1, #0
 8013b82:	ea42 0540 	orr.w	r5, r2, r0, lsl #1
 8013b86:	dc0d      	bgt.n	8013ba4 <arm_nn_mat_mult_nt_t_s8+0x92c>
 8013b88:	4249      	negs	r1, r1
 8013b8a:	2301      	movs	r3, #1
 8013b8c:	408b      	lsls	r3, r1
 8013b8e:	3b01      	subs	r3, #1
 8013b90:	ea05 0203 	and.w	r2, r5, r3
 8013b94:	410d      	asrs	r5, r1
 8013b96:	ea4f 0363 	mov.w	r3, r3, asr #1
 8013b9a:	bf48      	it	mi
 8013b9c:	3301      	addmi	r3, #1
 8013b9e:	429a      	cmp	r2, r3
 8013ba0:	bfc8      	it	gt
 8013ba2:	3501      	addgt	r5, #1
 8013ba4:	9b06      	ldr	r3, [sp, #24]
 8013ba6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8013ba8:	6819      	ldr	r1, [r3, #0]
 8013baa:	9b07      	ldr	r3, [sp, #28]
 8013bac:	ea21 74e1 	bic.w	r4, r1, r1, asr #31
 8013bb0:	40a2      	lsls	r2, r4
 8013bb2:	681b      	ldr	r3, [r3, #0]
 8013bb4:	4614      	mov	r4, r2
 8013bb6:	2000      	movs	r0, #0
 8013bb8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8013bbc:	fbc4 2003 	smlal	r2, r0, r4, r3
 8013bc0:	0fd2      	lsrs	r2, r2, #31
 8013bc2:	2900      	cmp	r1, #0
 8013bc4:	ea42 0040 	orr.w	r0, r2, r0, lsl #1
 8013bc8:	dc0d      	bgt.n	8013be6 <arm_nn_mat_mult_nt_t_s8+0x96e>
 8013bca:	4249      	negs	r1, r1
 8013bcc:	2301      	movs	r3, #1
 8013bce:	408b      	lsls	r3, r1
 8013bd0:	3b01      	subs	r3, #1
 8013bd2:	ea00 0203 	and.w	r2, r0, r3
 8013bd6:	4108      	asrs	r0, r1
 8013bd8:	ea4f 0363 	mov.w	r3, r3, asr #1
 8013bdc:	bf48      	it	mi
 8013bde:	3301      	addmi	r3, #1
 8013be0:	429a      	cmp	r2, r3
 8013be2:	bfc8      	it	gt
 8013be4:	3001      	addgt	r0, #1
 8013be6:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8013be8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8013bea:	4410      	add	r0, r2
 8013bec:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8013bee:	442b      	add	r3, r5
 8013bf0:	4293      	cmp	r3, r2
 8013bf2:	bfb8      	it	lt
 8013bf4:	4613      	movlt	r3, r2
 8013bf6:	4290      	cmp	r0, r2
 8013bf8:	bfb8      	it	lt
 8013bfa:	4610      	movlt	r0, r2
 8013bfc:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013bfe:	4293      	cmp	r3, r2
 8013c00:	bfa8      	it	ge
 8013c02:	4613      	movge	r3, r2
 8013c04:	9a08      	ldr	r2, [sp, #32]
 8013c06:	7013      	strb	r3, [r2, #0]
 8013c08:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8013c0a:	4298      	cmp	r0, r3
 8013c0c:	bfa8      	it	ge
 8013c0e:	4618      	movge	r0, r3
 8013c10:	7050      	strb	r0, [r2, #1]
 8013c12:	e5b7      	b.n	8013784 <arm_nn_mat_mult_nt_t_s8+0x50c>
 8013c14:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8013c16:	9304      	str	r3, [sp, #16]
 8013c18:	e5b0      	b.n	801377c <arm_nn_mat_mult_nt_t_s8+0x504>
 8013c1a:	2300      	movs	r3, #0
 8013c1c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 8013c20:	f7ff bb98 	b.w	8013354 <arm_nn_mat_mult_nt_t_s8+0xdc>
 8013c24:	2f00      	cmp	r7, #0
 8013c26:	4619      	mov	r1, r3
 8013c28:	f73f adfb 	bgt.w	8013822 <arm_nn_mat_mult_nt_t_s8+0x5aa>
 8013c2c:	4693      	mov	fp, r2
 8013c2e:	e605      	b.n	801383c <arm_nn_mat_mult_nt_t_s8+0x5c4>
 8013c30:	f8dd c010 	ldr.w	ip, [sp, #16]
 8013c34:	e749      	b.n	8013aca <arm_nn_mat_mult_nt_t_s8+0x852>
 8013c36:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
 8013c3a:	f04f 0e00 	mov.w	lr, #0
 8013c3e:	e701      	b.n	8013a44 <arm_nn_mat_mult_nt_t_s8+0x7cc>

08013c40 <arm_nn_vec_mat_mult_t_s8>:
 8013c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c44:	b097      	sub	sp, #92	; 0x5c
 8013c46:	9301      	str	r3, [sp, #4]
 8013c48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c4a:	f8dd b0a8 	ldr.w	fp, [sp, #168]	; 0xa8
 8013c4e:	9002      	str	r0, [sp, #8]
 8013c50:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8013c54:	9107      	str	r1, [sp, #28]
 8013c56:	105b      	asrs	r3, r3, #1
 8013c58:	f1bb 0f00 	cmp.w	fp, #0
 8013c5c:	f000 8508 	beq.w	8014670 <arm_nn_vec_mat_mult_t_s8+0xa30>
 8013c60:	930a      	str	r3, [sp, #40]	; 0x28
 8013c62:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8013c64:	b21b      	sxth	r3, r3
 8013c66:	eac3 4903 	pkhbt	r9, r3, r3, lsl #16
 8013c6a:	fa0f f38b 	sxth.w	r3, fp
 8013c6e:	eac3 4a03 	pkhbt	sl, r3, r3, lsl #16
 8013c72:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013c74:	2b01      	cmp	r3, #1
 8013c76:	f340 8204 	ble.w	8014082 <arm_nn_vec_mat_mult_t_s8+0x442>
 8013c7a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8013c7c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8013c7e:	9c07      	ldr	r4, [sp, #28]
 8013c80:	f8cd b0a8 	str.w	fp, [sp, #168]	; 0xa8
 8013c84:	4252      	negs	r2, r2
 8013c86:	4611      	mov	r1, r2
 8013c88:	2b00      	cmp	r3, #0
 8013c8a:	9213      	str	r2, [sp, #76]	; 0x4c
 8013c8c:	f04f 0201 	mov.w	r2, #1
 8013c90:	bfb8      	it	lt
 8013c92:	3303      	addlt	r3, #3
 8013c94:	408a      	lsls	r2, r1
 8013c96:	1e51      	subs	r1, r2, #1
 8013c98:	f023 0203 	bic.w	r2, r3, #3
 8013c9c:	109b      	asrs	r3, r3, #2
 8013c9e:	9114      	str	r1, [sp, #80]	; 0x50
 8013ca0:	930d      	str	r3, [sp, #52]	; 0x34
 8013ca2:	104b      	asrs	r3, r1, #1
 8013ca4:	2100      	movs	r1, #0
 8013ca6:	9106      	str	r1, [sp, #24]
 8013ca8:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013caa:	920c      	str	r2, [sp, #48]	; 0x30
 8013cac:	0049      	lsls	r1, r1, #1
 8013cae:	9104      	str	r1, [sp, #16]
 8013cb0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013cb2:	9312      	str	r3, [sp, #72]	; 0x48
 8013cb4:	0049      	lsls	r1, r1, #1
 8013cb6:	910b      	str	r1, [sp, #44]	; 0x2c
 8013cb8:	9924      	ldr	r1, [sp, #144]	; 0x90
 8013cba:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8013cbe:	9109      	str	r1, [sp, #36]	; 0x24
 8013cc0:	18a1      	adds	r1, r4, r2
 8013cc2:	9103      	str	r1, [sp, #12]
 8013cc4:	9902      	ldr	r1, [sp, #8]
 8013cc6:	4411      	add	r1, r2
 8013cc8:	9110      	str	r1, [sp, #64]	; 0x40
 8013cca:	9920      	ldr	r1, [sp, #128]	; 0x80
 8013ccc:	9105      	str	r1, [sp, #20]
 8013cce:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013cd0:	1a8a      	subs	r2, r1, r2
 8013cd2:	9901      	ldr	r1, [sp, #4]
 8013cd4:	9211      	str	r2, [sp, #68]	; 0x44
 8013cd6:	3301      	adds	r3, #1
 8013cd8:	9315      	str	r3, [sp, #84]	; 0x54
 8013cda:	46cb      	mov	fp, r9
 8013cdc:	2900      	cmp	r1, #0
 8013cde:	f000 81bc 	beq.w	801405a <arm_nn_vec_mat_mult_t_s8+0x41a>
 8013ce2:	684a      	ldr	r2, [r1, #4]
 8013ce4:	f851 3b08 	ldr.w	r3, [r1], #8
 8013ce8:	9101      	str	r1, [sp, #4]
 8013cea:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013cec:	1867      	adds	r7, r4, r1
 8013cee:	9904      	ldr	r1, [sp, #16]
 8013cf0:	1861      	adds	r1, r4, r1
 8013cf2:	9108      	str	r1, [sp, #32]
 8013cf4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013cf6:	2900      	cmp	r1, #0
 8013cf8:	f000 8714 	beq.w	8014b24 <arm_nn_vec_mat_mult_t_s8+0xee4>
 8013cfc:	9100      	str	r1, [sp, #0]
 8013cfe:	f101 3cff 	add.w	ip, r1, #4294967295
 8013d02:	f011 0103 	ands.w	r1, r1, #3
 8013d06:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8013d0a:	d05a      	beq.n	8013dc2 <arm_nn_vec_mat_mult_t_s8+0x182>
 8013d0c:	2901      	cmp	r1, #1
 8013d0e:	d03a      	beq.n	8013d86 <arm_nn_vec_mat_mult_t_s8+0x146>
 8013d10:	2902      	cmp	r1, #2
 8013d12:	d01b      	beq.n	8013d4c <arm_nn_vec_mat_mult_t_s8+0x10c>
 8013d14:	f859 1b04 	ldr.w	r1, [r9], #4
 8013d18:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013d1c:	fa2b f181 	sxtab16	r1, fp, r1
 8013d20:	f854 0b04 	ldr.w	r0, [r4], #4
 8013d24:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013d28:	fa2a f080 	sxtab16	r0, sl, r0
 8013d2c:	fb25 3306 	smlad	r3, r5, r6, r3
 8013d30:	fb20 3301 	smlad	r3, r0, r1, r3
 8013d34:	f857 0b04 	ldr.w	r0, [r7], #4
 8013d38:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013d3c:	fa2a f080 	sxtab16	r0, sl, r0
 8013d40:	fb25 2206 	smlad	r2, r5, r6, r2
 8013d44:	fb20 2201 	smlad	r2, r0, r1, r2
 8013d48:	f8cd c000 	str.w	ip, [sp]
 8013d4c:	f859 1b04 	ldr.w	r1, [r9], #4
 8013d50:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013d54:	fa2b f181 	sxtab16	r1, fp, r1
 8013d58:	f854 0b04 	ldr.w	r0, [r4], #4
 8013d5c:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013d60:	fa2a f080 	sxtab16	r0, sl, r0
 8013d64:	fb25 3306 	smlad	r3, r5, r6, r3
 8013d68:	fb20 3301 	smlad	r3, r0, r1, r3
 8013d6c:	f857 0b04 	ldr.w	r0, [r7], #4
 8013d70:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013d74:	fa2a f080 	sxtab16	r0, sl, r0
 8013d78:	fb25 2206 	smlad	r2, r5, r6, r2
 8013d7c:	fb20 2201 	smlad	r2, r0, r1, r2
 8013d80:	9900      	ldr	r1, [sp, #0]
 8013d82:	3901      	subs	r1, #1
 8013d84:	9100      	str	r1, [sp, #0]
 8013d86:	f859 1b04 	ldr.w	r1, [r9], #4
 8013d8a:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013d8e:	f854 0b04 	ldr.w	r0, [r4], #4
 8013d92:	fa2b f181 	sxtab16	r1, fp, r1
 8013d96:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013d9a:	fa2a f080 	sxtab16	r0, sl, r0
 8013d9e:	fb25 3306 	smlad	r3, r5, r6, r3
 8013da2:	fb20 3301 	smlad	r3, r0, r1, r3
 8013da6:	f857 0b04 	ldr.w	r0, [r7], #4
 8013daa:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013dae:	fa2a f080 	sxtab16	r0, sl, r0
 8013db2:	fb25 2206 	smlad	r2, r5, r6, r2
 8013db6:	fb20 2201 	smlad	r2, r0, r1, r2
 8013dba:	9900      	ldr	r1, [sp, #0]
 8013dbc:	3901      	subs	r1, #1
 8013dbe:	9100      	str	r1, [sp, #0]
 8013dc0:	d072      	beq.n	8013ea8 <arm_nn_vec_mat_mult_t_s8+0x268>
 8013dc2:	46c8      	mov	r8, r9
 8013dc4:	f858 1b04 	ldr.w	r1, [r8], #4
 8013dc8:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013dcc:	46a6      	mov	lr, r4
 8013dce:	fa2b f181 	sxtab16	r1, fp, r1
 8013dd2:	f85e 0b04 	ldr.w	r0, [lr], #4
 8013dd6:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013dda:	fa2a f080 	sxtab16	r0, sl, r0
 8013dde:	fb25 3306 	smlad	r3, r5, r6, r3
 8013de2:	fb20 3301 	smlad	r3, r0, r1, r3
 8013de6:	46bc      	mov	ip, r7
 8013de8:	f85c 0b04 	ldr.w	r0, [ip], #4
 8013dec:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013df0:	fa2a f080 	sxtab16	r0, sl, r0
 8013df4:	fb25 2206 	smlad	r2, r5, r6, r2
 8013df8:	fb20 2201 	smlad	r2, r0, r1, r2
 8013dfc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8013e00:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013e04:	6860      	ldr	r0, [r4, #4]
 8013e06:	fa2b f181 	sxtab16	r1, fp, r1
 8013e0a:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013e0e:	fa2a f080 	sxtab16	r0, sl, r0
 8013e12:	fb25 3306 	smlad	r3, r5, r6, r3
 8013e16:	fb20 3301 	smlad	r3, r0, r1, r3
 8013e1a:	6878      	ldr	r0, [r7, #4]
 8013e1c:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013e20:	fa2a f080 	sxtab16	r0, sl, r0
 8013e24:	fb25 2206 	smlad	r2, r5, r6, r2
 8013e28:	fb20 2201 	smlad	r2, r0, r1, r2
 8013e2c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8013e30:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013e34:	f8de 0004 	ldr.w	r0, [lr, #4]
 8013e38:	fa2b f181 	sxtab16	r1, fp, r1
 8013e3c:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013e40:	fa2a f080 	sxtab16	r0, sl, r0
 8013e44:	fb25 3306 	smlad	r3, r5, r6, r3
 8013e48:	fb20 3301 	smlad	r3, r0, r1, r3
 8013e4c:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8013e50:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013e54:	fa2a f080 	sxtab16	r0, sl, r0
 8013e58:	fb25 2206 	smlad	r2, r5, r6, r2
 8013e5c:	fb20 2201 	smlad	r2, r0, r1, r2
 8013e60:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8013e64:	f108 090c 	add.w	r9, r8, #12
 8013e68:	fa2b f691 	sxtab16	r6, fp, r1, ror #8
 8013e6c:	f8de 0008 	ldr.w	r0, [lr, #8]
 8013e70:	fa2b f181 	sxtab16	r1, fp, r1
 8013e74:	f10e 040c 	add.w	r4, lr, #12
 8013e78:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013e7c:	fa2a f080 	sxtab16	r0, sl, r0
 8013e80:	fb25 3306 	smlad	r3, r5, r6, r3
 8013e84:	fb20 3301 	smlad	r3, r0, r1, r3
 8013e88:	f8dc 0008 	ldr.w	r0, [ip, #8]
 8013e8c:	f10c 070c 	add.w	r7, ip, #12
 8013e90:	fa2a f590 	sxtab16	r5, sl, r0, ror #8
 8013e94:	fa2a f080 	sxtab16	r0, sl, r0
 8013e98:	fb25 2206 	smlad	r2, r5, r6, r2
 8013e9c:	fb20 2201 	smlad	r2, r0, r1, r2
 8013ea0:	9900      	ldr	r1, [sp, #0]
 8013ea2:	3904      	subs	r1, #4
 8013ea4:	9100      	str	r1, [sp, #0]
 8013ea6:	d18c      	bne.n	8013dc2 <arm_nn_vec_mat_mult_t_s8+0x182>
 8013ea8:	9803      	ldr	r0, [sp, #12]
 8013eaa:	9925      	ldr	r1, [sp, #148]	; 0x94
 8013eac:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
 8013eb0:	4604      	mov	r4, r0
 8013eb2:	180f      	adds	r7, r1, r0
 8013eb4:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013eb6:	4281      	cmp	r1, r0
 8013eb8:	f340 8087 	ble.w	8013fca <arm_nn_vec_mat_mult_t_s8+0x38a>
 8013ebc:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013ebe:	eb0c 0001 	add.w	r0, ip, r1
 8013ec2:	f011 0103 	ands.w	r1, r1, #3
 8013ec6:	9000      	str	r0, [sp, #0]
 8013ec8:	f000 85ff 	beq.w	8014aca <arm_nn_vec_mat_mult_t_s8+0xe8a>
 8013ecc:	2901      	cmp	r1, #1
 8013ece:	d01f      	beq.n	8013f10 <arm_nn_vec_mat_mult_t_s8+0x2d0>
 8013ed0:	2902      	cmp	r1, #2
 8013ed2:	d00e      	beq.n	8013ef2 <arm_nn_vec_mat_mult_t_s8+0x2b2>
 8013ed4:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013ed6:	f91c 1b01 	ldrsb.w	r1, [ip], #1
 8013eda:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8013edc:	4401      	add	r1, r0
 8013ede:	f914 0b01 	ldrsb.w	r0, [r4], #1
 8013ee2:	4428      	add	r0, r5
 8013ee4:	fb01 3300 	mla	r3, r1, r0, r3
 8013ee8:	f917 0b01 	ldrsb.w	r0, [r7], #1
 8013eec:	4428      	add	r0, r5
 8013eee:	fb01 2200 	mla	r2, r1, r0, r2
 8013ef2:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013ef4:	f91c 1b01 	ldrsb.w	r1, [ip], #1
 8013ef8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8013efa:	4401      	add	r1, r0
 8013efc:	f914 0b01 	ldrsb.w	r0, [r4], #1
 8013f00:	4428      	add	r0, r5
 8013f02:	fb01 3300 	mla	r3, r1, r0, r3
 8013f06:	f917 0b01 	ldrsb.w	r0, [r7], #1
 8013f0a:	4428      	add	r0, r5
 8013f0c:	fb01 2200 	mla	r2, r1, r0, r2
 8013f10:	f91c 1b01 	ldrsb.w	r1, [ip], #1
 8013f14:	9821      	ldr	r0, [sp, #132]	; 0x84
 8013f16:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8013f18:	4401      	add	r1, r0
 8013f1a:	f914 0b01 	ldrsb.w	r0, [r4], #1
 8013f1e:	4428      	add	r0, r5
 8013f20:	fb01 3300 	mla	r3, r1, r0, r3
 8013f24:	f917 0b01 	ldrsb.w	r0, [r7], #1
 8013f28:	4428      	add	r0, r5
 8013f2a:	fb01 2200 	mla	r2, r1, r0, r2
 8013f2e:	9900      	ldr	r1, [sp, #0]
 8013f30:	458c      	cmp	ip, r1
 8013f32:	d04a      	beq.n	8013fca <arm_nn_vec_mat_mult_t_s8+0x38a>
 8013f34:	e9cd ba0e 	strd	fp, sl, [sp, #56]	; 0x38
 8013f38:	f8dd b084 	ldr.w	fp, [sp, #132]	; 0x84
 8013f3c:	462e      	mov	r6, r5
 8013f3e:	46e2      	mov	sl, ip
 8013f40:	46b8      	mov	r8, r7
 8013f42:	f91a eb01 	ldrsb.w	lr, [sl], #1
 8013f46:	f918 1b01 	ldrsb.w	r1, [r8], #1
 8013f4a:	46a1      	mov	r9, r4
 8013f4c:	eb0e 050b 	add.w	r5, lr, fp
 8013f50:	f919 0b01 	ldrsb.w	r0, [r9], #1
 8013f54:	f99c e001 	ldrsb.w	lr, [ip, #1]
 8013f58:	4431      	add	r1, r6
 8013f5a:	fb05 2201 	mla	r2, r5, r1, r2
 8013f5e:	f997 1001 	ldrsb.w	r1, [r7, #1]
 8013f62:	4430      	add	r0, r6
 8013f64:	fb05 3300 	mla	r3, r5, r0, r3
 8013f68:	4431      	add	r1, r6
 8013f6a:	eb0e 050b 	add.w	r5, lr, fp
 8013f6e:	f994 0001 	ldrsb.w	r0, [r4, #1]
 8013f72:	f99a e001 	ldrsb.w	lr, [sl, #1]
 8013f76:	fb05 2201 	mla	r2, r5, r1, r2
 8013f7a:	f998 1001 	ldrsb.w	r1, [r8, #1]
 8013f7e:	4430      	add	r0, r6
 8013f80:	fb05 3300 	mla	r3, r5, r0, r3
 8013f84:	4431      	add	r1, r6
 8013f86:	eb0e 050b 	add.w	r5, lr, fp
 8013f8a:	f999 0001 	ldrsb.w	r0, [r9, #1]
 8013f8e:	f99a e002 	ldrsb.w	lr, [sl, #2]
 8013f92:	fb05 2201 	mla	r2, r5, r1, r2
 8013f96:	f998 1002 	ldrsb.w	r1, [r8, #2]
 8013f9a:	4430      	add	r0, r6
 8013f9c:	fb05 3300 	mla	r3, r5, r0, r3
 8013fa0:	4431      	add	r1, r6
 8013fa2:	eb0e 050b 	add.w	r5, lr, fp
 8013fa6:	f999 0002 	ldrsb.w	r0, [r9, #2]
 8013faa:	fb05 2201 	mla	r2, r5, r1, r2
 8013fae:	9900      	ldr	r1, [sp, #0]
 8013fb0:	f10a 0c03 	add.w	ip, sl, #3
 8013fb4:	4430      	add	r0, r6
 8013fb6:	458c      	cmp	ip, r1
 8013fb8:	f109 0403 	add.w	r4, r9, #3
 8013fbc:	fb05 3300 	mla	r3, r5, r0, r3
 8013fc0:	f108 0703 	add.w	r7, r8, #3
 8013fc4:	d1bb      	bne.n	8013f3e <arm_nn_vec_mat_mult_t_s8+0x2fe>
 8013fc6:	e9dd ba0e 	ldrd	fp, sl, [sp, #56]	; 0x38
 8013fca:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8013fcc:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8013fce:	40a3      	lsls	r3, r4
 8013fd0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8013fd4:	2000      	movs	r0, #0
 8013fd6:	fbc3 1005 	smlal	r1, r0, r3, r5
 8013fda:	0fcb      	lsrs	r3, r1, #31
 8013fdc:	9924      	ldr	r1, [sp, #144]	; 0x90
 8013fde:	2900      	cmp	r1, #0
 8013fe0:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8013fe4:	f340 853f 	ble.w	8014a66 <arm_nn_vec_mat_mult_t_s8+0xe26>
 8013fe8:	40a2      	lsls	r2, r4
 8013fea:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 8013fec:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8013ff0:	2000      	movs	r0, #0
 8013ff2:	fbc4 1002 	smlal	r1, r0, r4, r2
 8013ff6:	2b00      	cmp	r3, #0
 8013ff8:	ea4f 72d1 	mov.w	r2, r1, lsr #31
 8013ffc:	f2c0 8560 	blt.w	8014ac0 <arm_nn_vec_mat_mult_t_s8+0xe80>
 8014000:	ea52 0240 	orrs.w	r2, r2, r0, lsl #1
 8014004:	f100 8553 	bmi.w	8014aae <arm_nn_vec_mat_mult_t_s8+0xe6e>
 8014008:	9922      	ldr	r1, [sp, #136]	; 0x88
 801400a:	440b      	add	r3, r1
 801400c:	440a      	add	r2, r1
 801400e:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8014010:	428b      	cmp	r3, r1
 8014012:	bfb8      	it	lt
 8014014:	460b      	movlt	r3, r1
 8014016:	428a      	cmp	r2, r1
 8014018:	bfb8      	it	lt
 801401a:	460a      	movlt	r2, r1
 801401c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801401e:	428b      	cmp	r3, r1
 8014020:	bfa8      	it	ge
 8014022:	460b      	movge	r3, r1
 8014024:	9905      	ldr	r1, [sp, #20]
 8014026:	700b      	strb	r3, [r1, #0]
 8014028:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801402a:	429a      	cmp	r2, r3
 801402c:	bfa8      	it	ge
 801402e:	461a      	movge	r2, r3
 8014030:	460b      	mov	r3, r1
 8014032:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014034:	545a      	strb	r2, [r3, r1]
 8014036:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014038:	9a06      	ldr	r2, [sp, #24]
 801403a:	440b      	add	r3, r1
 801403c:	9305      	str	r3, [sp, #20]
 801403e:	e9dd 3103 	ldrd	r3, r1, [sp, #12]
 8014042:	440b      	add	r3, r1
 8014044:	9303      	str	r3, [sp, #12]
 8014046:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014048:	3201      	adds	r2, #1
 801404a:	4293      	cmp	r3, r2
 801404c:	9206      	str	r2, [sp, #24]
 801404e:	dd07      	ble.n	8014060 <arm_nn_vec_mat_mult_t_s8+0x420>
 8014050:	9901      	ldr	r1, [sp, #4]
 8014052:	9c08      	ldr	r4, [sp, #32]
 8014054:	2900      	cmp	r1, #0
 8014056:	f47f ae44 	bne.w	8013ce2 <arm_nn_vec_mat_mult_t_s8+0xa2>
 801405a:	460b      	mov	r3, r1
 801405c:	460a      	mov	r2, r1
 801405e:	e644      	b.n	8013cea <arm_nn_vec_mat_mult_t_s8+0xaa>
 8014060:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014062:	9a07      	ldr	r2, [sp, #28]
 8014064:	2b01      	cmp	r3, #1
 8014066:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014068:	bfd8      	it	le
 801406a:	2301      	movle	r3, #1
 801406c:	fb03 2201 	mla	r2, r3, r1, r2
 8014070:	9207      	str	r2, [sp, #28]
 8014072:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014074:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014076:	46d9      	mov	r9, fp
 8014078:	fb03 2301 	mla	r3, r3, r1, r2
 801407c:	f8dd b0a8 	ldr.w	fp, [sp, #168]	; 0xa8
 8014080:	9320      	str	r3, [sp, #128]	; 0x80
 8014082:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014084:	07da      	lsls	r2, r3, #31
 8014086:	f140 82ef 	bpl.w	8014668 <arm_nn_vec_mat_mult_t_s8+0xa28>
 801408a:	9b01      	ldr	r3, [sp, #4]
 801408c:	b103      	cbz	r3, 8014090 <arm_nn_vec_mat_mult_t_s8+0x450>
 801408e:	681b      	ldr	r3, [r3, #0]
 8014090:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8014094:	4642      	mov	r2, r8
 8014096:	2a00      	cmp	r2, #0
 8014098:	bfb8      	it	lt
 801409a:	f108 0803 	addlt.w	r8, r8, #3
 801409e:	ea5f 08a8 	movs.w	r8, r8, asr #2
 80140a2:	f000 8091 	beq.w	80141c8 <arm_nn_vec_mat_mult_t_s8+0x588>
 80140a6:	f018 0203 	ands.w	r2, r8, #3
 80140aa:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80140ae:	9f02      	ldr	r7, [sp, #8]
 80140b0:	46c6      	mov	lr, r8
 80140b2:	f108 35ff 	add.w	r5, r8, #4294967295
 80140b6:	d039      	beq.n	801412c <arm_nn_vec_mat_mult_t_s8+0x4ec>
 80140b8:	2a01      	cmp	r2, #1
 80140ba:	d024      	beq.n	8014106 <arm_nn_vec_mat_mult_t_s8+0x4c6>
 80140bc:	2a02      	cmp	r2, #2
 80140be:	d010      	beq.n	80140e2 <arm_nn_vec_mat_mult_t_s8+0x4a2>
 80140c0:	f857 1b04 	ldr.w	r1, [r7], #4
 80140c4:	fa29 f491 	sxtab16	r4, r9, r1, ror #8
 80140c8:	fa29 f181 	sxtab16	r1, r9, r1
 80140cc:	f85c 2b04 	ldr.w	r2, [ip], #4
 80140d0:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 80140d4:	fa2a f282 	sxtab16	r2, sl, r2
 80140d8:	fb20 3304 	smlad	r3, r0, r4, r3
 80140dc:	fb22 3301 	smlad	r3, r2, r1, r3
 80140e0:	46ae      	mov	lr, r5
 80140e2:	f857 1b04 	ldr.w	r1, [r7], #4
 80140e6:	fa29 f491 	sxtab16	r4, r9, r1, ror #8
 80140ea:	fa29 f181 	sxtab16	r1, r9, r1
 80140ee:	f85c 2b04 	ldr.w	r2, [ip], #4
 80140f2:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 80140f6:	fa2a f282 	sxtab16	r2, sl, r2
 80140fa:	fb20 3304 	smlad	r3, r0, r4, r3
 80140fe:	fb22 3301 	smlad	r3, r2, r1, r3
 8014102:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014106:	f857 1b04 	ldr.w	r1, [r7], #4
 801410a:	fa29 f491 	sxtab16	r4, r9, r1, ror #8
 801410e:	f85c 2b04 	ldr.w	r2, [ip], #4
 8014112:	fa29 f181 	sxtab16	r1, r9, r1
 8014116:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 801411a:	fa2a f282 	sxtab16	r2, sl, r2
 801411e:	fb20 3304 	smlad	r3, r0, r4, r3
 8014122:	fb22 3301 	smlad	r3, r2, r1, r3
 8014126:	f1be 0e01 	subs.w	lr, lr, #1
 801412a:	d043      	beq.n	80141b4 <arm_nn_vec_mat_mult_t_s8+0x574>
 801412c:	463d      	mov	r5, r7
 801412e:	f855 1b04 	ldr.w	r1, [r5], #4
 8014132:	fa29 f691 	sxtab16	r6, r9, r1, ror #8
 8014136:	4664      	mov	r4, ip
 8014138:	fa29 f181 	sxtab16	r1, r9, r1
 801413c:	f854 2b04 	ldr.w	r2, [r4], #4
 8014140:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 8014144:	fa2a f282 	sxtab16	r2, sl, r2
 8014148:	fb20 3306 	smlad	r3, r0, r6, r3
 801414c:	fb22 3301 	smlad	r3, r2, r1, r3
 8014150:	6879      	ldr	r1, [r7, #4]
 8014152:	fa29 f691 	sxtab16	r6, r9, r1, ror #8
 8014156:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801415a:	fa29 f181 	sxtab16	r1, r9, r1
 801415e:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 8014162:	fa2a f282 	sxtab16	r2, sl, r2
 8014166:	fb20 3306 	smlad	r3, r0, r6, r3
 801416a:	fb22 3301 	smlad	r3, r2, r1, r3
 801416e:	6869      	ldr	r1, [r5, #4]
 8014170:	fa29 f691 	sxtab16	r6, r9, r1, ror #8
 8014174:	6862      	ldr	r2, [r4, #4]
 8014176:	fa29 f181 	sxtab16	r1, r9, r1
 801417a:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 801417e:	fa2a f282 	sxtab16	r2, sl, r2
 8014182:	fb20 3306 	smlad	r3, r0, r6, r3
 8014186:	fb22 3301 	smlad	r3, r2, r1, r3
 801418a:	68a9      	ldr	r1, [r5, #8]
 801418c:	f105 070c 	add.w	r7, r5, #12
 8014190:	fa29 f691 	sxtab16	r6, r9, r1, ror #8
 8014194:	68a2      	ldr	r2, [r4, #8]
 8014196:	fa29 f181 	sxtab16	r1, r9, r1
 801419a:	f104 0c0c 	add.w	ip, r4, #12
 801419e:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 80141a2:	fa2a f282 	sxtab16	r2, sl, r2
 80141a6:	fb20 3306 	smlad	r3, r0, r6, r3
 80141aa:	fb22 3301 	smlad	r3, r2, r1, r3
 80141ae:	f1be 0e04 	subs.w	lr, lr, #4
 80141b2:	d1bb      	bne.n	801412c <arm_nn_vec_mat_mult_t_s8+0x4ec>
 80141b4:	9a02      	ldr	r2, [sp, #8]
 80141b6:	eb02 0288 	add.w	r2, r2, r8, lsl #2
 80141ba:	9202      	str	r2, [sp, #8]
 80141bc:	9a07      	ldr	r2, [sp, #28]
 80141be:	eb02 0288 	add.w	r2, r2, r8, lsl #2
 80141c2:	9207      	str	r2, [sp, #28]
 80141c4:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80141c8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80141ca:	4542      	cmp	r2, r8
 80141cc:	f340 80b5 	ble.w	801433a <arm_nn_vec_mat_mult_t_s8+0x6fa>
 80141d0:	4251      	negs	r1, r2
 80141d2:	f001 0103 	and.w	r1, r1, #3
 80141d6:	f002 0203 	and.w	r2, r2, #3
 80141da:	bf58      	it	pl
 80141dc:	424a      	negpl	r2, r1
 80141de:	9902      	ldr	r1, [sp, #8]
 80141e0:	188e      	adds	r6, r1, r2
 80141e2:	f012 0207 	ands.w	r2, r2, #7
 80141e6:	f000 84b6 	beq.w	8014b56 <arm_nn_vec_mat_mult_t_s8+0xf16>
 80141ea:	2a01      	cmp	r2, #1
 80141ec:	d04b      	beq.n	8014286 <arm_nn_vec_mat_mult_t_s8+0x646>
 80141ee:	2a02      	cmp	r2, #2
 80141f0:	d03c      	beq.n	801426c <arm_nn_vec_mat_mult_t_s8+0x62c>
 80141f2:	2a03      	cmp	r2, #3
 80141f4:	d02d      	beq.n	8014252 <arm_nn_vec_mat_mult_t_s8+0x612>
 80141f6:	2a04      	cmp	r2, #4
 80141f8:	d01e      	beq.n	8014238 <arm_nn_vec_mat_mult_t_s8+0x5f8>
 80141fa:	2a05      	cmp	r2, #5
 80141fc:	d00f      	beq.n	801421e <arm_nn_vec_mat_mult_t_s8+0x5de>
 80141fe:	2a06      	cmp	r2, #6
 8014200:	f040 8495 	bne.w	8014b2e <arm_nn_vec_mat_mult_t_s8+0xeee>
 8014204:	9a02      	ldr	r2, [sp, #8]
 8014206:	9807      	ldr	r0, [sp, #28]
 8014208:	f912 1b01 	ldrsb.w	r1, [r2], #1
 801420c:	9202      	str	r2, [sp, #8]
 801420e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014210:	4411      	add	r1, r2
 8014212:	f910 2b01 	ldrsb.w	r2, [r0], #1
 8014216:	9007      	str	r0, [sp, #28]
 8014218:	445a      	add	r2, fp
 801421a:	fb01 3302 	mla	r3, r1, r2, r3
 801421e:	9a02      	ldr	r2, [sp, #8]
 8014220:	9807      	ldr	r0, [sp, #28]
 8014222:	f912 1b01 	ldrsb.w	r1, [r2], #1
 8014226:	9202      	str	r2, [sp, #8]
 8014228:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801422a:	4411      	add	r1, r2
 801422c:	f910 2b01 	ldrsb.w	r2, [r0], #1
 8014230:	9007      	str	r0, [sp, #28]
 8014232:	445a      	add	r2, fp
 8014234:	fb01 3302 	mla	r3, r1, r2, r3
 8014238:	9a02      	ldr	r2, [sp, #8]
 801423a:	9807      	ldr	r0, [sp, #28]
 801423c:	f912 1b01 	ldrsb.w	r1, [r2], #1
 8014240:	9202      	str	r2, [sp, #8]
 8014242:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014244:	4411      	add	r1, r2
 8014246:	f910 2b01 	ldrsb.w	r2, [r0], #1
 801424a:	9007      	str	r0, [sp, #28]
 801424c:	445a      	add	r2, fp
 801424e:	fb01 3302 	mla	r3, r1, r2, r3
 8014252:	9a02      	ldr	r2, [sp, #8]
 8014254:	9807      	ldr	r0, [sp, #28]
 8014256:	f912 1b01 	ldrsb.w	r1, [r2], #1
 801425a:	9202      	str	r2, [sp, #8]
 801425c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801425e:	4411      	add	r1, r2
 8014260:	f910 2b01 	ldrsb.w	r2, [r0], #1
 8014264:	9007      	str	r0, [sp, #28]
 8014266:	445a      	add	r2, fp
 8014268:	fb01 3302 	mla	r3, r1, r2, r3
 801426c:	9a02      	ldr	r2, [sp, #8]
 801426e:	9807      	ldr	r0, [sp, #28]
 8014270:	f912 1b01 	ldrsb.w	r1, [r2], #1
 8014274:	9202      	str	r2, [sp, #8]
 8014276:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014278:	4411      	add	r1, r2
 801427a:	f910 2b01 	ldrsb.w	r2, [r0], #1
 801427e:	9007      	str	r0, [sp, #28]
 8014280:	445a      	add	r2, fp
 8014282:	fb01 3302 	mla	r3, r1, r2, r3
 8014286:	9802      	ldr	r0, [sp, #8]
 8014288:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801428a:	f910 1b01 	ldrsb.w	r1, [r0], #1
 801428e:	9c07      	ldr	r4, [sp, #28]
 8014290:	9002      	str	r0, [sp, #8]
 8014292:	4411      	add	r1, r2
 8014294:	f914 2b01 	ldrsb.w	r2, [r4], #1
 8014298:	9407      	str	r4, [sp, #28]
 801429a:	445a      	add	r2, fp
 801429c:	42b0      	cmp	r0, r6
 801429e:	fb01 3302 	mla	r3, r1, r2, r3
 80142a2:	d04a      	beq.n	801433a <arm_nn_vec_mat_mult_t_s8+0x6fa>
 80142a4:	9f21      	ldr	r7, [sp, #132]	; 0x84
 80142a6:	4684      	mov	ip, r0
 80142a8:	46a6      	mov	lr, r4
 80142aa:	4665      	mov	r5, ip
 80142ac:	4674      	mov	r4, lr
 80142ae:	f915 0b01 	ldrsb.w	r0, [r5], #1
 80142b2:	f914 2b01 	ldrsb.w	r2, [r4], #1
 80142b6:	19c1      	adds	r1, r0, r7
 80142b8:	445a      	add	r2, fp
 80142ba:	f99c 0001 	ldrsb.w	r0, [ip, #1]
 80142be:	fb01 3302 	mla	r3, r1, r2, r3
 80142c2:	f99e 2001 	ldrsb.w	r2, [lr, #1]
 80142c6:	19c1      	adds	r1, r0, r7
 80142c8:	445a      	add	r2, fp
 80142ca:	fb01 3302 	mla	r3, r1, r2, r3
 80142ce:	f995 0001 	ldrsb.w	r0, [r5, #1]
 80142d2:	f994 2001 	ldrsb.w	r2, [r4, #1]
 80142d6:	19c1      	adds	r1, r0, r7
 80142d8:	445a      	add	r2, fp
 80142da:	fb01 3302 	mla	r3, r1, r2, r3
 80142de:	f995 0002 	ldrsb.w	r0, [r5, #2]
 80142e2:	f994 2002 	ldrsb.w	r2, [r4, #2]
 80142e6:	19c1      	adds	r1, r0, r7
 80142e8:	445a      	add	r2, fp
 80142ea:	fb01 3302 	mla	r3, r1, r2, r3
 80142ee:	f995 0003 	ldrsb.w	r0, [r5, #3]
 80142f2:	f994 2003 	ldrsb.w	r2, [r4, #3]
 80142f6:	19c1      	adds	r1, r0, r7
 80142f8:	445a      	add	r2, fp
 80142fa:	fb01 3302 	mla	r3, r1, r2, r3
 80142fe:	f995 0004 	ldrsb.w	r0, [r5, #4]
 8014302:	f994 2004 	ldrsb.w	r2, [r4, #4]
 8014306:	19c1      	adds	r1, r0, r7
 8014308:	445a      	add	r2, fp
 801430a:	fb01 3302 	mla	r3, r1, r2, r3
 801430e:	f995 0005 	ldrsb.w	r0, [r5, #5]
 8014312:	f994 2005 	ldrsb.w	r2, [r4, #5]
 8014316:	19c1      	adds	r1, r0, r7
 8014318:	445a      	add	r2, fp
 801431a:	fb01 3302 	mla	r3, r1, r2, r3
 801431e:	f995 0006 	ldrsb.w	r0, [r5, #6]
 8014322:	f994 2006 	ldrsb.w	r2, [r4, #6]
 8014326:	f105 0c07 	add.w	ip, r5, #7
 801432a:	19c1      	adds	r1, r0, r7
 801432c:	445a      	add	r2, fp
 801432e:	45b4      	cmp	ip, r6
 8014330:	f104 0e07 	add.w	lr, r4, #7
 8014334:	fb01 3302 	mla	r3, r1, r2, r3
 8014338:	d1b7      	bne.n	80142aa <arm_nn_vec_mat_mult_t_s8+0x66a>
 801433a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801433c:	ea22 71e2 	bic.w	r1, r2, r2, asr #31
 8014340:	fa03 f101 	lsl.w	r1, r3, r1
 8014344:	e169      	b.n	801461a <arm_nn_vec_mat_mult_t_s8+0x9da>
 8014346:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014348:	9a07      	ldr	r2, [sp, #28]
 801434a:	f8dd b0a8 	ldr.w	fp, [sp, #168]	; 0xa8
 801434e:	2b01      	cmp	r3, #1
 8014350:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014352:	bfd8      	it	le
 8014354:	2301      	movle	r3, #1
 8014356:	fb03 2201 	mla	r2, r3, r1, r2
 801435a:	9207      	str	r2, [sp, #28]
 801435c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801435e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014360:	fb03 2301 	mla	r3, r3, r1, r2
 8014364:	9320      	str	r3, [sp, #128]	; 0x80
 8014366:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014368:	07db      	lsls	r3, r3, #31
 801436a:	f140 817d 	bpl.w	8014668 <arm_nn_vec_mat_mult_t_s8+0xa28>
 801436e:	9b01      	ldr	r3, [sp, #4]
 8014370:	b10b      	cbz	r3, 8014376 <arm_nn_vec_mat_mult_t_s8+0x736>
 8014372:	f8d3 b000 	ldr.w	fp, [r3]
 8014376:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 801437a:	4673      	mov	r3, lr
 801437c:	2b00      	cmp	r3, #0
 801437e:	bfb8      	it	lt
 8014380:	f10e 0e03 	addlt.w	lr, lr, #3
 8014384:	ea5f 0eae 	movs.w	lr, lr, asr #2
 8014388:	f000 808e 	beq.w	80144a8 <arm_nn_vec_mat_mult_t_s8+0x868>
 801438c:	f01e 0303 	ands.w	r3, lr, #3
 8014390:	9f07      	ldr	r7, [sp, #28]
 8014392:	f8dd c008 	ldr.w	ip, [sp, #8]
 8014396:	4676      	mov	r6, lr
 8014398:	f10e 34ff 	add.w	r4, lr, #4294967295
 801439c:	d037      	beq.n	801440e <arm_nn_vec_mat_mult_t_s8+0x7ce>
 801439e:	2b01      	cmp	r3, #1
 80143a0:	d023      	beq.n	80143ea <arm_nn_vec_mat_mult_t_s8+0x7aa>
 80143a2:	2b02      	cmp	r3, #2
 80143a4:	d010      	beq.n	80143c8 <arm_nn_vec_mat_mult_t_s8+0x788>
 80143a6:	f85c 2b04 	ldr.w	r2, [ip], #4
 80143aa:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 80143ae:	fa2a f282 	sxtab16	r2, sl, r2
 80143b2:	f857 3b04 	ldr.w	r3, [r7], #4
 80143b6:	fa2f f193 	sxtb16	r1, r3, ror #8
 80143ba:	fa2f f383 	sxtb16	r3, r3
 80143be:	fb21 b100 	smlad	r1, r1, r0, fp
 80143c2:	fb23 1b02 	smlad	fp, r3, r2, r1
 80143c6:	4626      	mov	r6, r4
 80143c8:	f85c 2b04 	ldr.w	r2, [ip], #4
 80143cc:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 80143d0:	fa2a f282 	sxtab16	r2, sl, r2
 80143d4:	f857 3b04 	ldr.w	r3, [r7], #4
 80143d8:	fa2f f193 	sxtb16	r1, r3, ror #8
 80143dc:	fa2f f383 	sxtb16	r3, r3
 80143e0:	fb21 b100 	smlad	r1, r1, r0, fp
 80143e4:	fb23 1b02 	smlad	fp, r3, r2, r1
 80143e8:	3e01      	subs	r6, #1
 80143ea:	f85c 2b04 	ldr.w	r2, [ip], #4
 80143ee:	fa2a f092 	sxtab16	r0, sl, r2, ror #8
 80143f2:	f857 3b04 	ldr.w	r3, [r7], #4
 80143f6:	fa2a f282 	sxtab16	r2, sl, r2
 80143fa:	fa2f f193 	sxtb16	r1, r3, ror #8
 80143fe:	fa2f f383 	sxtb16	r3, r3
 8014402:	fb21 b100 	smlad	r1, r1, r0, fp
 8014406:	fb23 1b02 	smlad	fp, r3, r2, r1
 801440a:	3e01      	subs	r6, #1
 801440c:	d042      	beq.n	8014494 <arm_nn_vec_mat_mult_t_s8+0x854>
 801440e:	4664      	mov	r4, ip
 8014410:	f854 2b04 	ldr.w	r2, [r4], #4
 8014414:	fa2a f592 	sxtab16	r5, sl, r2, ror #8
 8014418:	4638      	mov	r0, r7
 801441a:	fa2a f282 	sxtab16	r2, sl, r2
 801441e:	f850 3b04 	ldr.w	r3, [r0], #4
 8014422:	fa2f f193 	sxtb16	r1, r3, ror #8
 8014426:	fa2f f383 	sxtb16	r3, r3
 801442a:	fb21 bb05 	smlad	fp, r1, r5, fp
 801442e:	fb23 bb02 	smlad	fp, r3, r2, fp
 8014432:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014436:	fa2a f592 	sxtab16	r5, sl, r2, ror #8
 801443a:	687b      	ldr	r3, [r7, #4]
 801443c:	fa2a f282 	sxtab16	r2, sl, r2
 8014440:	fa2f f193 	sxtb16	r1, r3, ror #8
 8014444:	fa2f f383 	sxtb16	r3, r3
 8014448:	fb21 bb05 	smlad	fp, r1, r5, fp
 801444c:	fb23 bb02 	smlad	fp, r3, r2, fp
 8014450:	6862      	ldr	r2, [r4, #4]
 8014452:	fa2a f592 	sxtab16	r5, sl, r2, ror #8
 8014456:	6843      	ldr	r3, [r0, #4]
 8014458:	fa2a f282 	sxtab16	r2, sl, r2
 801445c:	fa2f f193 	sxtb16	r1, r3, ror #8
 8014460:	fa2f f383 	sxtb16	r3, r3
 8014464:	fb21 bb05 	smlad	fp, r1, r5, fp
 8014468:	fb23 bb02 	smlad	fp, r3, r2, fp
 801446c:	68a2      	ldr	r2, [r4, #8]
 801446e:	f104 0c0c 	add.w	ip, r4, #12
 8014472:	fa2a f592 	sxtab16	r5, sl, r2, ror #8
 8014476:	6883      	ldr	r3, [r0, #8]
 8014478:	fa2a f282 	sxtab16	r2, sl, r2
 801447c:	f100 070c 	add.w	r7, r0, #12
 8014480:	fa2f f193 	sxtb16	r1, r3, ror #8
 8014484:	fa2f f383 	sxtb16	r3, r3
 8014488:	fb21 bb05 	smlad	fp, r1, r5, fp
 801448c:	fb23 bb02 	smlad	fp, r3, r2, fp
 8014490:	3e04      	subs	r6, #4
 8014492:	d1bc      	bne.n	801440e <arm_nn_vec_mat_mult_t_s8+0x7ce>
 8014494:	9b02      	ldr	r3, [sp, #8]
 8014496:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 801449a:	9302      	str	r3, [sp, #8]
 801449c:	9b07      	ldr	r3, [sp, #28]
 801449e:	eb03 038e 	add.w	r3, r3, lr, lsl #2
 80144a2:	9307      	str	r3, [sp, #28]
 80144a4:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80144a8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80144aa:	4573      	cmp	r3, lr
 80144ac:	f340 80b0 	ble.w	8014610 <arm_nn_vec_mat_mult_t_s8+0x9d0>
 80144b0:	425a      	negs	r2, r3
 80144b2:	f002 0203 	and.w	r2, r2, #3
 80144b6:	f003 0303 	and.w	r3, r3, #3
 80144ba:	bf58      	it	pl
 80144bc:	4253      	negpl	r3, r2
 80144be:	9a02      	ldr	r2, [sp, #8]
 80144c0:	18d5      	adds	r5, r2, r3
 80144c2:	f013 0307 	ands.w	r3, r3, #7
 80144c6:	f000 8341 	beq.w	8014b4c <arm_nn_vec_mat_mult_t_s8+0xf0c>
 80144ca:	2b01      	cmp	r3, #1
 80144cc:	d050      	beq.n	8014570 <arm_nn_vec_mat_mult_t_s8+0x930>
 80144ce:	2b02      	cmp	r3, #2
 80144d0:	d042      	beq.n	8014558 <arm_nn_vec_mat_mult_t_s8+0x918>
 80144d2:	2b03      	cmp	r3, #3
 80144d4:	d034      	beq.n	8014540 <arm_nn_vec_mat_mult_t_s8+0x900>
 80144d6:	2b04      	cmp	r3, #4
 80144d8:	d026      	beq.n	8014528 <arm_nn_vec_mat_mult_t_s8+0x8e8>
 80144da:	2b05      	cmp	r3, #5
 80144dc:	d018      	beq.n	8014510 <arm_nn_vec_mat_mult_t_s8+0x8d0>
 80144de:	2b06      	cmp	r3, #6
 80144e0:	d00a      	beq.n	80144f8 <arm_nn_vec_mat_mult_t_s8+0x8b8>
 80144e2:	f912 3b01 	ldrsb.w	r3, [r2], #1
 80144e6:	9907      	ldr	r1, [sp, #28]
 80144e8:	9202      	str	r2, [sp, #8]
 80144ea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80144ec:	4413      	add	r3, r2
 80144ee:	f911 2b01 	ldrsb.w	r2, [r1], #1
 80144f2:	9107      	str	r1, [sp, #28]
 80144f4:	fb03 bb02 	mla	fp, r3, r2, fp
 80144f8:	9a02      	ldr	r2, [sp, #8]
 80144fa:	9907      	ldr	r1, [sp, #28]
 80144fc:	f912 3b01 	ldrsb.w	r3, [r2], #1
 8014500:	9202      	str	r2, [sp, #8]
 8014502:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014504:	4413      	add	r3, r2
 8014506:	f911 2b01 	ldrsb.w	r2, [r1], #1
 801450a:	9107      	str	r1, [sp, #28]
 801450c:	fb03 bb02 	mla	fp, r3, r2, fp
 8014510:	9a02      	ldr	r2, [sp, #8]
 8014512:	9907      	ldr	r1, [sp, #28]
 8014514:	f912 3b01 	ldrsb.w	r3, [r2], #1
 8014518:	9202      	str	r2, [sp, #8]
 801451a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801451c:	4413      	add	r3, r2
 801451e:	f911 2b01 	ldrsb.w	r2, [r1], #1
 8014522:	9107      	str	r1, [sp, #28]
 8014524:	fb03 bb02 	mla	fp, r3, r2, fp
 8014528:	9a02      	ldr	r2, [sp, #8]
 801452a:	9907      	ldr	r1, [sp, #28]
 801452c:	f912 3b01 	ldrsb.w	r3, [r2], #1
 8014530:	9202      	str	r2, [sp, #8]
 8014532:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014534:	4413      	add	r3, r2
 8014536:	f911 2b01 	ldrsb.w	r2, [r1], #1
 801453a:	9107      	str	r1, [sp, #28]
 801453c:	fb03 bb02 	mla	fp, r3, r2, fp
 8014540:	9a02      	ldr	r2, [sp, #8]
 8014542:	9907      	ldr	r1, [sp, #28]
 8014544:	f912 3b01 	ldrsb.w	r3, [r2], #1
 8014548:	9202      	str	r2, [sp, #8]
 801454a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801454c:	4413      	add	r3, r2
 801454e:	f911 2b01 	ldrsb.w	r2, [r1], #1
 8014552:	9107      	str	r1, [sp, #28]
 8014554:	fb03 bb02 	mla	fp, r3, r2, fp
 8014558:	9a02      	ldr	r2, [sp, #8]
 801455a:	9907      	ldr	r1, [sp, #28]
 801455c:	f912 3b01 	ldrsb.w	r3, [r2], #1
 8014560:	9202      	str	r2, [sp, #8]
 8014562:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014564:	4413      	add	r3, r2
 8014566:	f911 2b01 	ldrsb.w	r2, [r1], #1
 801456a:	9107      	str	r1, [sp, #28]
 801456c:	fb03 bb02 	mla	fp, r3, r2, fp
 8014570:	9902      	ldr	r1, [sp, #8]
 8014572:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014574:	f911 3b01 	ldrsb.w	r3, [r1], #1
 8014578:	9807      	ldr	r0, [sp, #28]
 801457a:	9102      	str	r1, [sp, #8]
 801457c:	4413      	add	r3, r2
 801457e:	f910 2b01 	ldrsb.w	r2, [r0], #1
 8014582:	9007      	str	r0, [sp, #28]
 8014584:	42a9      	cmp	r1, r5
 8014586:	fb03 bb02 	mla	fp, r3, r2, fp
 801458a:	d041      	beq.n	8014610 <arm_nn_vec_mat_mult_t_s8+0x9d0>
 801458c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801458e:	460f      	mov	r7, r1
 8014590:	4684      	mov	ip, r0
 8014592:	463c      	mov	r4, r7
 8014594:	4660      	mov	r0, ip
 8014596:	f914 1b01 	ldrsb.w	r1, [r4], #1
 801459a:	f910 3b01 	ldrsb.w	r3, [r0], #1
 801459e:	198a      	adds	r2, r1, r6
 80145a0:	f997 1001 	ldrsb.w	r1, [r7, #1]
 80145a4:	fb02 bb03 	mla	fp, r2, r3, fp
 80145a8:	f99c 3001 	ldrsb.w	r3, [ip, #1]
 80145ac:	198a      	adds	r2, r1, r6
 80145ae:	f994 1001 	ldrsb.w	r1, [r4, #1]
 80145b2:	fb02 bb03 	mla	fp, r2, r3, fp
 80145b6:	f990 3001 	ldrsb.w	r3, [r0, #1]
 80145ba:	198a      	adds	r2, r1, r6
 80145bc:	f994 1002 	ldrsb.w	r1, [r4, #2]
 80145c0:	fb02 bb03 	mla	fp, r2, r3, fp
 80145c4:	f990 3002 	ldrsb.w	r3, [r0, #2]
 80145c8:	198a      	adds	r2, r1, r6
 80145ca:	f994 1003 	ldrsb.w	r1, [r4, #3]
 80145ce:	fb02 bb03 	mla	fp, r2, r3, fp
 80145d2:	f990 3003 	ldrsb.w	r3, [r0, #3]
 80145d6:	198a      	adds	r2, r1, r6
 80145d8:	f994 1004 	ldrsb.w	r1, [r4, #4]
 80145dc:	fb02 bb03 	mla	fp, r2, r3, fp
 80145e0:	f990 3004 	ldrsb.w	r3, [r0, #4]
 80145e4:	198a      	adds	r2, r1, r6
 80145e6:	f994 1005 	ldrsb.w	r1, [r4, #5]
 80145ea:	fb02 bb03 	mla	fp, r2, r3, fp
 80145ee:	f990 3005 	ldrsb.w	r3, [r0, #5]
 80145f2:	198a      	adds	r2, r1, r6
 80145f4:	f994 1006 	ldrsb.w	r1, [r4, #6]
 80145f8:	fb02 bb03 	mla	fp, r2, r3, fp
 80145fc:	1de7      	adds	r7, r4, #7
 80145fe:	f990 3006 	ldrsb.w	r3, [r0, #6]
 8014602:	198a      	adds	r2, r1, r6
 8014604:	42af      	cmp	r7, r5
 8014606:	fb02 bb03 	mla	fp, r2, r3, fp
 801460a:	f100 0c07 	add.w	ip, r0, #7
 801460e:	d1c0      	bne.n	8014592 <arm_nn_vec_mat_mult_t_s8+0x952>
 8014610:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8014612:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8014616:	fa0b f101 	lsl.w	r1, fp, r1
 801461a:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 801461c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8014620:	2300      	movs	r3, #0
 8014622:	fbc1 2304 	smlal	r2, r3, r1, r4
 8014626:	4618      	mov	r0, r3
 8014628:	0fd3      	lsrs	r3, r2, #31
 801462a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801462c:	2a00      	cmp	r2, #0
 801462e:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8014632:	dc0d      	bgt.n	8014650 <arm_nn_vec_mat_mult_t_s8+0xa10>
 8014634:	4251      	negs	r1, r2
 8014636:	2201      	movs	r2, #1
 8014638:	408a      	lsls	r2, r1
 801463a:	3a01      	subs	r2, #1
 801463c:	ea03 0002 	and.w	r0, r3, r2
 8014640:	410b      	asrs	r3, r1
 8014642:	ea4f 0262 	mov.w	r2, r2, asr #1
 8014646:	bf48      	it	mi
 8014648:	3201      	addmi	r2, #1
 801464a:	4290      	cmp	r0, r2
 801464c:	bfc8      	it	gt
 801464e:	3301      	addgt	r3, #1
 8014650:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8014652:	4413      	add	r3, r2
 8014654:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014656:	4293      	cmp	r3, r2
 8014658:	bfb8      	it	lt
 801465a:	4613      	movlt	r3, r2
 801465c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801465e:	4293      	cmp	r3, r2
 8014660:	bfa8      	it	ge
 8014662:	4613      	movge	r3, r2
 8014664:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014666:	7013      	strb	r3, [r2, #0]
 8014668:	2000      	movs	r0, #0
 801466a:	b017      	add	sp, #92	; 0x5c
 801466c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014670:	9309      	str	r3, [sp, #36]	; 0x24
 8014672:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014674:	b21b      	sxth	r3, r3
 8014676:	eac3 4a03 	pkhbt	sl, r3, r3, lsl #16
 801467a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801467c:	2b01      	cmp	r3, #1
 801467e:	f77f ae72 	ble.w	8014366 <arm_nn_vec_mat_mult_t_s8+0x726>
 8014682:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8014684:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014686:	9e07      	ldr	r6, [sp, #28]
 8014688:	f8cd b0a8 	str.w	fp, [sp, #168]	; 0xa8
 801468c:	4252      	negs	r2, r2
 801468e:	4611      	mov	r1, r2
 8014690:	2b00      	cmp	r3, #0
 8014692:	9211      	str	r2, [sp, #68]	; 0x44
 8014694:	f04f 0201 	mov.w	r2, #1
 8014698:	bfb8      	it	lt
 801469a:	3303      	addlt	r3, #3
 801469c:	408a      	lsls	r2, r1
 801469e:	1e51      	subs	r1, r2, #1
 80146a0:	f023 0203 	bic.w	r2, r3, #3
 80146a4:	109b      	asrs	r3, r3, #2
 80146a6:	9112      	str	r1, [sp, #72]	; 0x48
 80146a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80146aa:	104b      	asrs	r3, r1, #1
 80146ac:	2100      	movs	r1, #0
 80146ae:	9105      	str	r1, [sp, #20]
 80146b0:	9925      	ldr	r1, [sp, #148]	; 0x94
 80146b2:	920c      	str	r2, [sp, #48]	; 0x30
 80146b4:	0049      	lsls	r1, r1, #1
 80146b6:	9103      	str	r1, [sp, #12]
 80146b8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80146ba:	9310      	str	r3, [sp, #64]	; 0x40
 80146bc:	0049      	lsls	r1, r1, #1
 80146be:	910a      	str	r1, [sp, #40]	; 0x28
 80146c0:	9924      	ldr	r1, [sp, #144]	; 0x90
 80146c2:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80146c6:	9108      	str	r1, [sp, #32]
 80146c8:	18b1      	adds	r1, r6, r2
 80146ca:	9100      	str	r1, [sp, #0]
 80146cc:	9902      	ldr	r1, [sp, #8]
 80146ce:	4411      	add	r1, r2
 80146d0:	910e      	str	r1, [sp, #56]	; 0x38
 80146d2:	9920      	ldr	r1, [sp, #128]	; 0x80
 80146d4:	9104      	str	r1, [sp, #16]
 80146d6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80146d8:	1a8a      	subs	r2, r1, r2
 80146da:	9901      	ldr	r1, [sp, #4]
 80146dc:	920f      	str	r2, [sp, #60]	; 0x3c
 80146de:	3301      	adds	r3, #1
 80146e0:	9313      	str	r3, [sp, #76]	; 0x4c
 80146e2:	2900      	cmp	r1, #0
 80146e4:	f000 819d 	beq.w	8014a22 <arm_nn_vec_mat_mult_t_s8+0xde2>
 80146e8:	684a      	ldr	r2, [r1, #4]
 80146ea:	f851 3b08 	ldr.w	r3, [r1], #8
 80146ee:	9101      	str	r1, [sp, #4]
 80146f0:	9925      	ldr	r1, [sp, #148]	; 0x94
 80146f2:	1877      	adds	r7, r6, r1
 80146f4:	9903      	ldr	r1, [sp, #12]
 80146f6:	1871      	adds	r1, r6, r1
 80146f8:	9106      	str	r1, [sp, #24]
 80146fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80146fc:	2900      	cmp	r1, #0
 80146fe:	f000 820d 	beq.w	8014b1c <arm_nn_vec_mat_mult_t_s8+0xedc>
 8014702:	4689      	mov	r9, r1
 8014704:	f101 3cff 	add.w	ip, r1, #4294967295
 8014708:	f011 0103 	ands.w	r1, r1, #3
 801470c:	f8dd b008 	ldr.w	fp, [sp, #8]
 8014710:	d057      	beq.n	80147c2 <arm_nn_vec_mat_mult_t_s8+0xb82>
 8014712:	2901      	cmp	r1, #1
 8014714:	d038      	beq.n	8014788 <arm_nn_vec_mat_mult_t_s8+0xb48>
 8014716:	2902      	cmp	r1, #2
 8014718:	d01a      	beq.n	8014750 <arm_nn_vec_mat_mult_t_s8+0xb10>
 801471a:	f85b 1b04 	ldr.w	r1, [fp], #4
 801471e:	fa2a f591 	sxtab16	r5, sl, r1, ror #8
 8014722:	fa2a f181 	sxtab16	r1, sl, r1
 8014726:	f856 0b04 	ldr.w	r0, [r6], #4
 801472a:	fa2f f490 	sxtb16	r4, r0, ror #8
 801472e:	fa2f f080 	sxtb16	r0, r0
 8014732:	fb24 3305 	smlad	r3, r4, r5, r3
 8014736:	fb20 3301 	smlad	r3, r0, r1, r3
 801473a:	f857 0b04 	ldr.w	r0, [r7], #4
 801473e:	fa2f f490 	sxtb16	r4, r0, ror #8
 8014742:	fa2f f080 	sxtb16	r0, r0
 8014746:	fb24 2205 	smlad	r2, r4, r5, r2
 801474a:	fb20 2201 	smlad	r2, r0, r1, r2
 801474e:	46e1      	mov	r9, ip
 8014750:	f85b 1b04 	ldr.w	r1, [fp], #4
 8014754:	fa2a f591 	sxtab16	r5, sl, r1, ror #8
 8014758:	fa2a f181 	sxtab16	r1, sl, r1
 801475c:	f856 0b04 	ldr.w	r0, [r6], #4
 8014760:	fa2f f490 	sxtb16	r4, r0, ror #8
 8014764:	fa2f f080 	sxtb16	r0, r0
 8014768:	fb24 3305 	smlad	r3, r4, r5, r3
 801476c:	fb20 3301 	smlad	r3, r0, r1, r3
 8014770:	f857 0b04 	ldr.w	r0, [r7], #4
 8014774:	fa2f f490 	sxtb16	r4, r0, ror #8
 8014778:	fa2f f080 	sxtb16	r0, r0
 801477c:	fb24 2205 	smlad	r2, r4, r5, r2
 8014780:	fb20 2201 	smlad	r2, r0, r1, r2
 8014784:	f109 39ff 	add.w	r9, r9, #4294967295
 8014788:	f85b 1b04 	ldr.w	r1, [fp], #4
 801478c:	fa2a f591 	sxtab16	r5, sl, r1, ror #8
 8014790:	f856 0b04 	ldr.w	r0, [r6], #4
 8014794:	fa2a f181 	sxtab16	r1, sl, r1
 8014798:	fa2f f490 	sxtb16	r4, r0, ror #8
 801479c:	fa2f f080 	sxtb16	r0, r0
 80147a0:	fb24 3305 	smlad	r3, r4, r5, r3
 80147a4:	fb20 3301 	smlad	r3, r0, r1, r3
 80147a8:	f857 0b04 	ldr.w	r0, [r7], #4
 80147ac:	fa2f f490 	sxtb16	r4, r0, ror #8
 80147b0:	fa2f f080 	sxtb16	r0, r0
 80147b4:	fb24 2205 	smlad	r2, r4, r5, r2
 80147b8:	fb20 2201 	smlad	r2, r0, r1, r2
 80147bc:	f1b9 0901 	subs.w	r9, r9, #1
 80147c0:	d06f      	beq.n	80148a2 <arm_nn_vec_mat_mult_t_s8+0xc62>
 80147c2:	46de      	mov	lr, fp
 80147c4:	f85e 1b04 	ldr.w	r1, [lr], #4
 80147c8:	fa2a f491 	sxtab16	r4, sl, r1, ror #8
 80147cc:	46b4      	mov	ip, r6
 80147ce:	fa2a f181 	sxtab16	r1, sl, r1
 80147d2:	f85c 0b04 	ldr.w	r0, [ip], #4
 80147d6:	fa2f f890 	sxtb16	r8, r0, ror #8
 80147da:	fa2f f080 	sxtb16	r0, r0
 80147de:	fb28 3304 	smlad	r3, r8, r4, r3
 80147e2:	fb20 3301 	smlad	r3, r0, r1, r3
 80147e6:	463d      	mov	r5, r7
 80147e8:	f855 0b04 	ldr.w	r0, [r5], #4
 80147ec:	fa2f f890 	sxtb16	r8, r0, ror #8
 80147f0:	fa2f f080 	sxtb16	r0, r0
 80147f4:	fb28 2204 	smlad	r2, r8, r4, r2
 80147f8:	fb20 2201 	smlad	r2, r0, r1, r2
 80147fc:	f8db 1004 	ldr.w	r1, [fp, #4]
 8014800:	fa2a f491 	sxtab16	r4, sl, r1, ror #8
 8014804:	6870      	ldr	r0, [r6, #4]
 8014806:	fa2a f181 	sxtab16	r1, sl, r1
 801480a:	fa2f f890 	sxtb16	r8, r0, ror #8
 801480e:	fa2f f080 	sxtb16	r0, r0
 8014812:	fb28 3304 	smlad	r3, r8, r4, r3
 8014816:	fb20 3301 	smlad	r3, r0, r1, r3
 801481a:	6878      	ldr	r0, [r7, #4]
 801481c:	fa2f f890 	sxtb16	r8, r0, ror #8
 8014820:	fa2f f080 	sxtb16	r0, r0
 8014824:	fb28 2204 	smlad	r2, r8, r4, r2
 8014828:	fb20 2201 	smlad	r2, r0, r1, r2
 801482c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8014830:	fa2a f491 	sxtab16	r4, sl, r1, ror #8
 8014834:	f8dc 0004 	ldr.w	r0, [ip, #4]
 8014838:	fa2a f181 	sxtab16	r1, sl, r1
 801483c:	fa2f f890 	sxtb16	r8, r0, ror #8
 8014840:	fa2f f080 	sxtb16	r0, r0
 8014844:	fb28 3304 	smlad	r3, r8, r4, r3
 8014848:	fb20 3301 	smlad	r3, r0, r1, r3
 801484c:	6868      	ldr	r0, [r5, #4]
 801484e:	fa2f f890 	sxtb16	r8, r0, ror #8
 8014852:	fa2f f080 	sxtb16	r0, r0
 8014856:	fb28 2204 	smlad	r2, r8, r4, r2
 801485a:	fb20 2201 	smlad	r2, r0, r1, r2
 801485e:	f8de 1008 	ldr.w	r1, [lr, #8]
 8014862:	f10e 0b0c 	add.w	fp, lr, #12
 8014866:	fa2a f491 	sxtab16	r4, sl, r1, ror #8
 801486a:	f8dc 0008 	ldr.w	r0, [ip, #8]
 801486e:	fa2a f181 	sxtab16	r1, sl, r1
 8014872:	f10c 060c 	add.w	r6, ip, #12
 8014876:	fa2f f890 	sxtb16	r8, r0, ror #8
 801487a:	fa2f f080 	sxtb16	r0, r0
 801487e:	fb28 3304 	smlad	r3, r8, r4, r3
 8014882:	fb20 3301 	smlad	r3, r0, r1, r3
 8014886:	68a8      	ldr	r0, [r5, #8]
 8014888:	f105 070c 	add.w	r7, r5, #12
 801488c:	fa2f f890 	sxtb16	r8, r0, ror #8
 8014890:	fa2f f080 	sxtb16	r0, r0
 8014894:	fb28 2204 	smlad	r2, r8, r4, r2
 8014898:	fb20 2201 	smlad	r2, r0, r1, r2
 801489c:	f1b9 0904 	subs.w	r9, r9, #4
 80148a0:	d18f      	bne.n	80147c2 <arm_nn_vec_mat_mult_t_s8+0xb82>
 80148a2:	9800      	ldr	r0, [sp, #0]
 80148a4:	9925      	ldr	r1, [sp, #148]	; 0x94
 80148a6:	f8dd c038 	ldr.w	ip, [sp, #56]	; 0x38
 80148aa:	4606      	mov	r6, r0
 80148ac:	180f      	adds	r7, r1, r0
 80148ae:	980c      	ldr	r0, [sp, #48]	; 0x30
 80148b0:	4281      	cmp	r1, r0
 80148b2:	dd70      	ble.n	8014996 <arm_nn_vec_mat_mult_t_s8+0xd56>
 80148b4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80148b6:	eb0c 0b01 	add.w	fp, ip, r1
 80148ba:	f011 0103 	ands.w	r1, r1, #3
 80148be:	d029      	beq.n	8014914 <arm_nn_vec_mat_mult_t_s8+0xcd4>
 80148c0:	2901      	cmp	r1, #1
 80148c2:	d019      	beq.n	80148f8 <arm_nn_vec_mat_mult_t_s8+0xcb8>
 80148c4:	2902      	cmp	r1, #2
 80148c6:	d00b      	beq.n	80148e0 <arm_nn_vec_mat_mult_t_s8+0xca0>
 80148c8:	9821      	ldr	r0, [sp, #132]	; 0x84
 80148ca:	f91c 1b01 	ldrsb.w	r1, [ip], #1
 80148ce:	4401      	add	r1, r0
 80148d0:	f916 0b01 	ldrsb.w	r0, [r6], #1
 80148d4:	fb01 3300 	mla	r3, r1, r0, r3
 80148d8:	f917 0b01 	ldrsb.w	r0, [r7], #1
 80148dc:	fb01 2200 	mla	r2, r1, r0, r2
 80148e0:	9821      	ldr	r0, [sp, #132]	; 0x84
 80148e2:	f91c 1b01 	ldrsb.w	r1, [ip], #1
 80148e6:	4401      	add	r1, r0
 80148e8:	f916 0b01 	ldrsb.w	r0, [r6], #1
 80148ec:	fb01 3300 	mla	r3, r1, r0, r3
 80148f0:	f917 0b01 	ldrsb.w	r0, [r7], #1
 80148f4:	fb01 2200 	mla	r2, r1, r0, r2
 80148f8:	f91c 1b01 	ldrsb.w	r1, [ip], #1
 80148fc:	9821      	ldr	r0, [sp, #132]	; 0x84
 80148fe:	4401      	add	r1, r0
 8014900:	f916 0b01 	ldrsb.w	r0, [r6], #1
 8014904:	fb01 3300 	mla	r3, r1, r0, r3
 8014908:	f917 0b01 	ldrsb.w	r0, [r7], #1
 801490c:	45dc      	cmp	ip, fp
 801490e:	fb01 2200 	mla	r2, r1, r0, r2
 8014912:	d040      	beq.n	8014996 <arm_nn_vec_mat_mult_t_s8+0xd56>
 8014914:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8014918:	f8dd a084 	ldr.w	sl, [sp, #132]	; 0x84
 801491c:	46e1      	mov	r9, ip
 801491e:	46b0      	mov	r8, r6
 8014920:	46be      	mov	lr, r7
 8014922:	f919 5b01 	ldrsb.w	r5, [r9], #1
 8014926:	f918 4b01 	ldrsb.w	r4, [r8], #1
 801492a:	f91e 0b01 	ldrsb.w	r0, [lr], #1
 801492e:	eb05 010a 	add.w	r1, r5, sl
 8014932:	f99c 5001 	ldrsb.w	r5, [ip, #1]
 8014936:	fb01 3304 	mla	r3, r1, r4, r3
 801493a:	fb01 2200 	mla	r2, r1, r0, r2
 801493e:	f996 4001 	ldrsb.w	r4, [r6, #1]
 8014942:	f997 0001 	ldrsb.w	r0, [r7, #1]
 8014946:	eb05 010a 	add.w	r1, r5, sl
 801494a:	f999 5001 	ldrsb.w	r5, [r9, #1]
 801494e:	fb01 3304 	mla	r3, r1, r4, r3
 8014952:	fb01 2200 	mla	r2, r1, r0, r2
 8014956:	f998 4001 	ldrsb.w	r4, [r8, #1]
 801495a:	f99e 0001 	ldrsb.w	r0, [lr, #1]
 801495e:	eb05 010a 	add.w	r1, r5, sl
 8014962:	f999 5002 	ldrsb.w	r5, [r9, #2]
 8014966:	fb01 3304 	mla	r3, r1, r4, r3
 801496a:	fb01 2200 	mla	r2, r1, r0, r2
 801496e:	f998 4002 	ldrsb.w	r4, [r8, #2]
 8014972:	f99e 0002 	ldrsb.w	r0, [lr, #2]
 8014976:	f109 0c03 	add.w	ip, r9, #3
 801497a:	eb05 010a 	add.w	r1, r5, sl
 801497e:	45dc      	cmp	ip, fp
 8014980:	fb01 3304 	mla	r3, r1, r4, r3
 8014984:	f108 0603 	add.w	r6, r8, #3
 8014988:	fb01 2200 	mla	r2, r1, r0, r2
 801498c:	f10e 0703 	add.w	r7, lr, #3
 8014990:	d1c4      	bne.n	801491c <arm_nn_vec_mat_mult_t_s8+0xcdc>
 8014992:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8014996:	9c08      	ldr	r4, [sp, #32]
 8014998:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 801499a:	40a3      	lsls	r3, r4
 801499c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80149a0:	2000      	movs	r0, #0
 80149a2:	fbc3 1005 	smlal	r1, r0, r3, r5
 80149a6:	0fcb      	lsrs	r3, r1, #31
 80149a8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80149aa:	2900      	cmp	r1, #0
 80149ac:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 80149b0:	dd3a      	ble.n	8014a28 <arm_nn_vec_mat_mult_t_s8+0xde8>
 80149b2:	40a2      	lsls	r2, r4
 80149b4:	9c23      	ldr	r4, [sp, #140]	; 0x8c
 80149b6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80149ba:	2000      	movs	r0, #0
 80149bc:	fbc4 1002 	smlal	r1, r0, r4, r2
 80149c0:	2b00      	cmp	r3, #0
 80149c2:	ea4f 72d1 	mov.w	r2, r1, lsr #31
 80149c6:	db76      	blt.n	8014ab6 <arm_nn_vec_mat_mult_t_s8+0xe76>
 80149c8:	ea52 0240 	orrs.w	r2, r2, r0, lsl #1
 80149cc:	d46b      	bmi.n	8014aa6 <arm_nn_vec_mat_mult_t_s8+0xe66>
 80149ce:	9922      	ldr	r1, [sp, #136]	; 0x88
 80149d0:	440b      	add	r3, r1
 80149d2:	440a      	add	r2, r1
 80149d4:	9927      	ldr	r1, [sp, #156]	; 0x9c
 80149d6:	428b      	cmp	r3, r1
 80149d8:	bfb8      	it	lt
 80149da:	460b      	movlt	r3, r1
 80149dc:	428a      	cmp	r2, r1
 80149de:	bfb8      	it	lt
 80149e0:	460a      	movlt	r2, r1
 80149e2:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80149e4:	428b      	cmp	r3, r1
 80149e6:	bfa8      	it	ge
 80149e8:	460b      	movge	r3, r1
 80149ea:	9904      	ldr	r1, [sp, #16]
 80149ec:	700b      	strb	r3, [r1, #0]
 80149ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80149f0:	429a      	cmp	r2, r3
 80149f2:	bfa8      	it	ge
 80149f4:	461a      	movge	r2, r3
 80149f6:	460b      	mov	r3, r1
 80149f8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80149fa:	545a      	strb	r2, [r3, r1]
 80149fc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80149fe:	9a05      	ldr	r2, [sp, #20]
 8014a00:	440b      	add	r3, r1
 8014a02:	9304      	str	r3, [sp, #16]
 8014a04:	9903      	ldr	r1, [sp, #12]
 8014a06:	9b00      	ldr	r3, [sp, #0]
 8014a08:	440b      	add	r3, r1
 8014a0a:	9300      	str	r3, [sp, #0]
 8014a0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a0e:	3201      	adds	r2, #1
 8014a10:	4293      	cmp	r3, r2
 8014a12:	9205      	str	r2, [sp, #20]
 8014a14:	f77f ac97 	ble.w	8014346 <arm_nn_vec_mat_mult_t_s8+0x706>
 8014a18:	9901      	ldr	r1, [sp, #4]
 8014a1a:	9e06      	ldr	r6, [sp, #24]
 8014a1c:	2900      	cmp	r1, #0
 8014a1e:	f47f ae63 	bne.w	80146e8 <arm_nn_vec_mat_mult_t_s8+0xaa8>
 8014a22:	460b      	mov	r3, r1
 8014a24:	460a      	mov	r2, r1
 8014a26:	e663      	b.n	80146f0 <arm_nn_vec_mat_mult_t_s8+0xab0>
 8014a28:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014a2a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014a2c:	ea03 0105 	and.w	r1, r3, r5
 8014a30:	4133      	asrs	r3, r6
 8014a32:	d451      	bmi.n	8014ad8 <arm_nn_vec_mat_mult_t_s8+0xe98>
 8014a34:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 8014a36:	fa02 f404 	lsl.w	r4, r2, r4
 8014a3a:	2000      	movs	r0, #0
 8014a3c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8014a40:	fbc7 2004 	smlal	r2, r0, r7, r4
 8014a44:	0fd2      	lsrs	r2, r2, #31
 8014a46:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8014a4a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014a4c:	ea05 0002 	and.w	r0, r5, r2
 8014a50:	4132      	asrs	r2, r6
 8014a52:	42a1      	cmp	r1, r4
 8014a54:	9910      	ldr	r1, [sp, #64]	; 0x40
 8014a56:	bfc8      	it	gt
 8014a58:	3301      	addgt	r3, #1
 8014a5a:	2a00      	cmp	r2, #0
 8014a5c:	db25      	blt.n	8014aaa <arm_nn_vec_mat_mult_t_s8+0xe6a>
 8014a5e:	4288      	cmp	r0, r1
 8014a60:	bfc8      	it	gt
 8014a62:	3201      	addgt	r2, #1
 8014a64:	e7b3      	b.n	80149ce <arm_nn_vec_mat_mult_t_s8+0xd8e>
 8014a66:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014a68:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014a6a:	ea03 0105 	and.w	r1, r3, r5
 8014a6e:	4133      	asrs	r3, r6
 8014a70:	d443      	bmi.n	8014afa <arm_nn_vec_mat_mult_t_s8+0xeba>
 8014a72:	9f23      	ldr	r7, [sp, #140]	; 0x8c
 8014a74:	fa02 f404 	lsl.w	r4, r2, r4
 8014a78:	2000      	movs	r0, #0
 8014a7a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8014a7e:	fbc7 2004 	smlal	r2, r0, r7, r4
 8014a82:	0fd2      	lsrs	r2, r2, #31
 8014a84:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8014a88:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014a8a:	ea05 0002 	and.w	r0, r5, r2
 8014a8e:	4132      	asrs	r2, r6
 8014a90:	42a1      	cmp	r1, r4
 8014a92:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014a94:	bfc8      	it	gt
 8014a96:	3301      	addgt	r3, #1
 8014a98:	2a00      	cmp	r2, #0
 8014a9a:	db0a      	blt.n	8014ab2 <arm_nn_vec_mat_mult_t_s8+0xe72>
 8014a9c:	4288      	cmp	r0, r1
 8014a9e:	bfc8      	it	gt
 8014aa0:	3201      	addgt	r2, #1
 8014aa2:	f7ff bab1 	b.w	8014008 <arm_nn_vec_mat_mult_t_s8+0x3c8>
 8014aa6:	2000      	movs	r0, #0
 8014aa8:	4601      	mov	r1, r0
 8014aaa:	3101      	adds	r1, #1
 8014aac:	e7d7      	b.n	8014a5e <arm_nn_vec_mat_mult_t_s8+0xe1e>
 8014aae:	2000      	movs	r0, #0
 8014ab0:	4601      	mov	r1, r0
 8014ab2:	3101      	adds	r1, #1
 8014ab4:	e7f2      	b.n	8014a9c <arm_nn_vec_mat_mult_t_s8+0xe5c>
 8014ab6:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8014aba:	2000      	movs	r0, #0
 8014abc:	4601      	mov	r1, r0
 8014abe:	e7cc      	b.n	8014a5a <arm_nn_vec_mat_mult_t_s8+0xe1a>
 8014ac0:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8014ac4:	2000      	movs	r0, #0
 8014ac6:	4601      	mov	r1, r0
 8014ac8:	e7e6      	b.n	8014a98 <arm_nn_vec_mat_mult_t_s8+0xe58>
 8014aca:	e9cd ba0e 	strd	fp, sl, [sp, #56]	; 0x38
 8014ace:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 8014ad0:	f8dd b084 	ldr.w	fp, [sp, #132]	; 0x84
 8014ad4:	f7ff ba33 	b.w	8013f3e <arm_nn_vec_mat_mult_t_s8+0x2fe>
 8014ad8:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8014ada:	fa02 f004 	lsl.w	r0, r2, r4
 8014ade:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8014ae2:	2400      	movs	r4, #0
 8014ae4:	fbc5 2400 	smlal	r2, r4, r5, r0
 8014ae8:	0fd2      	lsrs	r2, r2, #31
 8014aea:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8014aee:	e9dd 0412 	ldrd	r0, r4, [sp, #72]	; 0x48
 8014af2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8014af4:	4010      	ands	r0, r2
 8014af6:	412a      	asrs	r2, r5
 8014af8:	e7ab      	b.n	8014a52 <arm_nn_vec_mat_mult_t_s8+0xe12>
 8014afa:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8014afc:	fa02 f004 	lsl.w	r0, r2, r4
 8014b00:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8014b04:	2400      	movs	r4, #0
 8014b06:	fbc5 2400 	smlal	r2, r4, r5, r0
 8014b0a:	0fd2      	lsrs	r2, r2, #31
 8014b0c:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8014b10:	e9dd 0414 	ldrd	r0, r4, [sp, #80]	; 0x50
 8014b14:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014b16:	4010      	ands	r0, r2
 8014b18:	412a      	asrs	r2, r5
 8014b1a:	e7b9      	b.n	8014a90 <arm_nn_vec_mat_mult_t_s8+0xe50>
 8014b1c:	f8dd c008 	ldr.w	ip, [sp, #8]
 8014b20:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014b22:	e6c4      	b.n	80148ae <arm_nn_vec_mat_mult_t_s8+0xc6e>
 8014b24:	f8dd c008 	ldr.w	ip, [sp, #8]
 8014b28:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014b2a:	f7ff b9c3 	b.w	8013eb4 <arm_nn_vec_mat_mult_t_s8+0x274>
 8014b2e:	460a      	mov	r2, r1
 8014b30:	9807      	ldr	r0, [sp, #28]
 8014b32:	f912 1b01 	ldrsb.w	r1, [r2], #1
 8014b36:	9202      	str	r2, [sp, #8]
 8014b38:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014b3a:	4411      	add	r1, r2
 8014b3c:	f910 2b01 	ldrsb.w	r2, [r0], #1
 8014b40:	9007      	str	r0, [sp, #28]
 8014b42:	445a      	add	r2, fp
 8014b44:	fb01 3302 	mla	r3, r1, r2, r3
 8014b48:	f7ff bb5c 	b.w	8014204 <arm_nn_vec_mat_mult_t_s8+0x5c4>
 8014b4c:	f8dd c01c 	ldr.w	ip, [sp, #28]
 8014b50:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8014b52:	4617      	mov	r7, r2
 8014b54:	e51d      	b.n	8014592 <arm_nn_vec_mat_mult_t_s8+0x952>
 8014b56:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8014b5a:	9f21      	ldr	r7, [sp, #132]	; 0x84
 8014b5c:	468c      	mov	ip, r1
 8014b5e:	f7ff bba4 	b.w	80142aa <arm_nn_vec_mat_mult_t_s8+0x66a>
 8014b62:	bf00      	nop

08014b64 <arm_nn_vec_mat_mult_t_s16>:
 8014b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b68:	b095      	sub	sp, #84	; 0x54
 8014b6a:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
 8014b6e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014b70:	9921      	ldr	r1, [sp, #132]	; 0x84
 8014b72:	900b      	str	r0, [sp, #44]	; 0x2c
 8014b74:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8014b78:	105b      	asrs	r3, r3, #1
 8014b7a:	930c      	str	r3, [sp, #48]	; 0x30
 8014b7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014b7e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8014b82:	bfa8      	it	ge
 8014b84:	f44f 7300 	movge.w	r3, #512	; 0x200
 8014b88:	2901      	cmp	r1, #1
 8014b8a:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b8c:	f340 80f9 	ble.w	8014d82 <arm_nn_vec_mat_mult_t_s16+0x21e>
 8014b90:	2b00      	cmp	r3, #0
 8014b92:	bfb8      	it	lt
 8014b94:	3303      	addlt	r3, #3
 8014b96:	f023 0103 	bic.w	r1, r3, #3
 8014b9a:	1098      	asrs	r0, r3, #2
 8014b9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014b9e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8014ba0:	910e      	str	r1, [sp, #56]	; 0x38
 8014ba2:	005b      	lsls	r3, r3, #1
 8014ba4:	9304      	str	r3, [sp, #16]
 8014ba6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8014ba8:	900d      	str	r0, [sp, #52]	; 0x34
 8014baa:	17db      	asrs	r3, r3, #31
 8014bac:	9308      	str	r3, [sp, #32]
 8014bae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8014bb0:	9309      	str	r3, [sp, #36]	; 0x24
 8014bb2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8014bb4:	9605      	str	r6, [sp, #20]
 8014bb6:	f1c3 030e 	rsb	r3, r3, #14
 8014bba:	9307      	str	r3, [sp, #28]
 8014bbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014bbe:	3304      	adds	r3, #4
 8014bc0:	9302      	str	r3, [sp, #8]
 8014bc2:	460b      	mov	r3, r1
 8014bc4:	1871      	adds	r1, r6, r1
 8014bc6:	9103      	str	r1, [sp, #12]
 8014bc8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014bca:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
 8014bce:	910f      	str	r1, [sp, #60]	; 0x3c
 8014bd0:	2100      	movs	r1, #0
 8014bd2:	9106      	str	r1, [sp, #24]
 8014bd4:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8014bd6:	3112      	adds	r1, #18
 8014bd8:	910a      	str	r1, [sp, #40]	; 0x28
 8014bda:	9920      	ldr	r1, [sp, #128]	; 0x80
 8014bdc:	1acb      	subs	r3, r1, r3
 8014bde:	9310      	str	r3, [sp, #64]	; 0x40
 8014be0:	9b05      	ldr	r3, [sp, #20]
 8014be2:	9920      	ldr	r1, [sp, #128]	; 0x80
 8014be4:	185f      	adds	r7, r3, r1
 8014be6:	9904      	ldr	r1, [sp, #16]
 8014be8:	461e      	mov	r6, r3
 8014bea:	440b      	add	r3, r1
 8014bec:	9305      	str	r3, [sp, #20]
 8014bee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014bf0:	2b00      	cmp	r3, #0
 8014bf2:	f000 8132 	beq.w	8014e5a <arm_nn_vec_mat_mult_t_s16+0x2f6>
 8014bf6:	2100      	movs	r1, #0
 8014bf8:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
 8014bfc:	469e      	mov	lr, r3
 8014bfe:	4608      	mov	r0, r1
 8014c00:	f8dc a000 	ldr.w	sl, [ip]
 8014c04:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014c08:	f856 8b04 	ldr.w	r8, [r6], #4
 8014c0c:	f10c 0c08 	add.w	ip, ip, #8
 8014c10:	fa2f fb98 	sxtb16	fp, r8, ror #8
 8014c14:	fa2f f888 	sxtb16	r8, r8
 8014c18:	eacb 4328 	pkhtb	r3, fp, r8, asr #16
 8014c1c:	eac8 480b 	pkhbt	r8, r8, fp, lsl #16
 8014c20:	fb28 000a 	smlad	r0, r8, sl, r0
 8014c24:	fb23 0009 	smlad	r0, r3, r9, r0
 8014c28:	f857 3b04 	ldr.w	r3, [r7], #4
 8014c2c:	fa2f fb93 	sxtb16	fp, r3, ror #8
 8014c30:	fa2f f383 	sxtb16	r3, r3
 8014c34:	eacb 4823 	pkhtb	r8, fp, r3, asr #16
 8014c38:	eac3 430b 	pkhbt	r3, r3, fp, lsl #16
 8014c3c:	fb23 130a 	smlad	r3, r3, sl, r1
 8014c40:	fb28 3109 	smlad	r1, r8, r9, r3
 8014c44:	f1be 0e01 	subs.w	lr, lr, #1
 8014c48:	d1da      	bne.n	8014c00 <arm_nn_vec_mat_mult_t_s16+0x9c>
 8014c4a:	17c3      	asrs	r3, r0, #31
 8014c4c:	9e03      	ldr	r6, [sp, #12]
 8014c4e:	9301      	str	r3, [sp, #4]
 8014c50:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014c52:	9000      	str	r0, [sp, #0]
 8014c54:	460c      	mov	r4, r1
 8014c56:	17cd      	asrs	r5, r1, #31
 8014c58:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8014c5a:	199f      	adds	r7, r3, r6
 8014c5c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014c5e:	4283      	cmp	r3, r0
 8014c60:	dd12      	ble.n	8014c88 <arm_nn_vec_mat_mult_t_s16+0x124>
 8014c62:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c64:	e9dd 8900 	ldrd	r8, r9, [sp]
 8014c68:	eb06 0c03 	add.w	ip, r6, r3
 8014c6c:	f916 0b01 	ldrsb.w	r0, [r6], #1
 8014c70:	f931 3b02 	ldrsh.w	r3, [r1], #2
 8014c74:	fbc3 8980 	smlalbb	r8, r9, r3, r0
 8014c78:	f917 0b01 	ldrsb.w	r0, [r7], #1
 8014c7c:	4566      	cmp	r6, ip
 8014c7e:	fbc3 4580 	smlalbb	r4, r5, r3, r0
 8014c82:	d1f3      	bne.n	8014c6c <arm_nn_vec_mat_mult_t_s16+0x108>
 8014c84:	e9cd 8900 	strd	r8, r9, [sp]
 8014c88:	b182      	cbz	r2, 8014cac <arm_nn_vec_mat_mult_t_s16+0x148>
 8014c8a:	e9dd 6700 	ldrd	r6, r7, [sp]
 8014c8e:	6813      	ldr	r3, [r2, #0]
 8014c90:	6851      	ldr	r1, [r2, #4]
 8014c92:	18f3      	adds	r3, r6, r3
 8014c94:	eb41 0107 	adc.w	r1, r1, r7
 8014c98:	e9cd 3100 	strd	r3, r1, [sp]
 8014c9c:	6893      	ldr	r3, [r2, #8]
 8014c9e:	68d1      	ldr	r1, [r2, #12]
 8014ca0:	18e3      	adds	r3, r4, r3
 8014ca2:	eb41 0105 	adc.w	r1, r1, r5
 8014ca6:	461c      	mov	r4, r3
 8014ca8:	460d      	mov	r5, r1
 8014caa:	3210      	adds	r2, #16
 8014cac:	e9dd 8900 	ldrd	r8, r9, [sp]
 8014cb0:	9908      	ldr	r1, [sp, #32]
 8014cb2:	981e      	ldr	r0, [sp, #120]	; 0x78
 8014cb4:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8014cb6:	9f07      	ldr	r7, [sp, #28]
 8014cb8:	fb01 f108 	mul.w	r1, r1, r8
 8014cbc:	fba8 3606 	umull	r3, r6, r8, r6
 8014cc0:	fb00 1109 	mla	r1, r0, r9, r1
 8014cc4:	4431      	add	r1, r6
 8014cc6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014cc8:	f1b7 0020 	subs.w	r0, r7, #32
 8014ccc:	fa01 f606 	lsl.w	r6, r1, r6
 8014cd0:	fa23 f307 	lsr.w	r3, r3, r7
 8014cd4:	bf58      	it	pl
 8014cd6:	fa41 f000 	asrpl.w	r0, r1, r0
 8014cda:	ea43 0306 	orr.w	r3, r3, r6
 8014cde:	bf58      	it	pl
 8014ce0:	4303      	orrpl	r3, r0
 8014ce2:	9922      	ldr	r1, [sp, #136]	; 0x88
 8014ce4:	9f07      	ldr	r7, [sp, #28]
 8014ce6:	3301      	adds	r3, #1
 8014ce8:	105b      	asrs	r3, r3, #1
 8014cea:	428b      	cmp	r3, r1
 8014cec:	bfb8      	it	lt
 8014cee:	460b      	movlt	r3, r1
 8014cf0:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8014cf2:	428b      	cmp	r3, r1
 8014cf4:	bfa8      	it	ge
 8014cf6:	460b      	movge	r3, r1
 8014cf8:	9902      	ldr	r1, [sp, #8]
 8014cfa:	f821 3c04 	strh.w	r3, [r1, #-4]
 8014cfe:	9b08      	ldr	r3, [sp, #32]
 8014d00:	fb03 f104 	mul.w	r1, r3, r4
 8014d04:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8014d06:	fb03 1105 	mla	r1, r3, r5, r1
 8014d0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d0c:	fba4 3603 	umull	r3, r6, r4, r3
 8014d10:	4431      	add	r1, r6
 8014d12:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014d14:	f1b7 0020 	subs.w	r0, r7, #32
 8014d18:	fa01 f606 	lsl.w	r6, r1, r6
 8014d1c:	fa23 f307 	lsr.w	r3, r3, r7
 8014d20:	bf58      	it	pl
 8014d22:	fa41 f000 	asrpl.w	r0, r1, r0
 8014d26:	ea43 0306 	orr.w	r3, r3, r6
 8014d2a:	bf58      	it	pl
 8014d2c:	4303      	orrpl	r3, r0
 8014d2e:	9922      	ldr	r1, [sp, #136]	; 0x88
 8014d30:	3301      	adds	r3, #1
 8014d32:	105b      	asrs	r3, r3, #1
 8014d34:	428b      	cmp	r3, r1
 8014d36:	bfb8      	it	lt
 8014d38:	460b      	movlt	r3, r1
 8014d3a:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8014d3c:	428b      	cmp	r3, r1
 8014d3e:	bfa8      	it	ge
 8014d40:	460b      	movge	r3, r1
 8014d42:	9902      	ldr	r1, [sp, #8]
 8014d44:	f821 3c02 	strh.w	r3, [r1, #-2]
 8014d48:	3104      	adds	r1, #4
 8014d4a:	9102      	str	r1, [sp, #8]
 8014d4c:	e9dd 1003 	ldrd	r1, r0, [sp, #12]
 8014d50:	9b06      	ldr	r3, [sp, #24]
 8014d52:	4401      	add	r1, r0
 8014d54:	9103      	str	r1, [sp, #12]
 8014d56:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014d58:	3301      	adds	r3, #1
 8014d5a:	4299      	cmp	r1, r3
 8014d5c:	9306      	str	r3, [sp, #24]
 8014d5e:	f73f af3f 	bgt.w	8014be0 <arm_nn_vec_mat_mult_t_s16+0x7c>
 8014d62:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014d64:	4604      	mov	r4, r0
 8014d66:	2b01      	cmp	r3, #1
 8014d68:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014d6a:	ea4f 0381 	mov.w	r3, r1, lsl #2
 8014d6e:	bfd8      	it	le
 8014d70:	2101      	movle	r1, #1
 8014d72:	fb04 0101 	mla	r1, r4, r1, r0
 8014d76:	9111      	str	r1, [sp, #68]	; 0x44
 8014d78:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014d7a:	bfd8      	it	le
 8014d7c:	2304      	movle	r3, #4
 8014d7e:	4419      	add	r1, r3
 8014d80:	9112      	str	r1, [sp, #72]	; 0x48
 8014d82:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8014d84:	07db      	lsls	r3, r3, #31
 8014d86:	d564      	bpl.n	8014e52 <arm_nn_vec_mat_mult_t_s16+0x2ee>
 8014d88:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014d8a:	2e00      	cmp	r6, #0
 8014d8c:	bfb8      	it	lt
 8014d8e:	3603      	addlt	r6, #3
 8014d90:	10b6      	asrs	r6, r6, #2
 8014d92:	d069      	beq.n	8014e68 <arm_nn_vec_mat_mult_t_s16+0x304>
 8014d94:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014d96:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8014d98:	4630      	mov	r0, r6
 8014d9a:	2400      	movs	r4, #0
 8014d9c:	f857 3b04 	ldr.w	r3, [r7], #4
 8014da0:	fa2f f593 	sxtb16	r5, r3, ror #8
 8014da4:	fa2f f383 	sxtb16	r3, r3
 8014da8:	f8d1 e000 	ldr.w	lr, [r1]
 8014dac:	eac5 4c23 	pkhtb	ip, r5, r3, asr #16
 8014db0:	eac3 4305 	pkhbt	r3, r3, r5, lsl #16
 8014db4:	fb23 430e 	smlad	r3, r3, lr, r4
 8014db8:	684c      	ldr	r4, [r1, #4]
 8014dba:	3108      	adds	r1, #8
 8014dbc:	fb2c 3404 	smlad	r4, ip, r4, r3
 8014dc0:	3801      	subs	r0, #1
 8014dc2:	d1eb      	bne.n	8014d9c <arm_nn_vec_mat_mult_t_s16+0x238>
 8014dc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014dc6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8014dca:	930b      	str	r3, [sp, #44]	; 0x2c
 8014dcc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014dce:	eb03 0386 	add.w	r3, r3, r6, lsl #2
 8014dd2:	9311      	str	r3, [sp, #68]	; 0x44
 8014dd4:	4620      	mov	r0, r4
 8014dd6:	00b3      	lsls	r3, r6, #2
 8014dd8:	17e1      	asrs	r1, r4, #31
 8014dda:	9c20      	ldr	r4, [sp, #128]	; 0x80
 8014ddc:	429c      	cmp	r4, r3
 8014dde:	dd0b      	ble.n	8014df8 <arm_nn_vec_mat_mult_t_s16+0x294>
 8014de0:	1ae3      	subs	r3, r4, r3
 8014de2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014de4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014de6:	4423      	add	r3, r4
 8014de8:	f914 6b01 	ldrsb.w	r6, [r4], #1
 8014dec:	f935 7b02 	ldrsh.w	r7, [r5], #2
 8014df0:	429c      	cmp	r4, r3
 8014df2:	fbc7 0186 	smlalbb	r0, r1, r7, r6
 8014df6:	d1f7      	bne.n	8014de8 <arm_nn_vec_mat_mult_t_s16+0x284>
 8014df8:	b132      	cbz	r2, 8014e08 <arm_nn_vec_mat_mult_t_s16+0x2a4>
 8014dfa:	e9d2 3200 	ldrd	r3, r2, [r2]
 8014dfe:	18c3      	adds	r3, r0, r3
 8014e00:	eb42 0201 	adc.w	r2, r2, r1
 8014e04:	4618      	mov	r0, r3
 8014e06:	4611      	mov	r1, r2
 8014e08:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8014e0a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8014e0c:	17db      	asrs	r3, r3, #31
 8014e0e:	fb02 f201 	mul.w	r2, r2, r1
 8014e12:	fb03 2200 	mla	r2, r3, r0, r2
 8014e16:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8014e18:	fba3 3000 	umull	r3, r0, r3, r0
 8014e1c:	4410      	add	r0, r2
 8014e1e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8014e20:	f1c2 010e 	rsb	r1, r2, #14
 8014e24:	3212      	adds	r2, #18
 8014e26:	40cb      	lsrs	r3, r1
 8014e28:	fa00 f202 	lsl.w	r2, r0, r2
 8014e2c:	3920      	subs	r1, #32
 8014e2e:	ea43 0302 	orr.w	r3, r3, r2
 8014e32:	bf5c      	itt	pl
 8014e34:	fa40 f101 	asrpl.w	r1, r0, r1
 8014e38:	430b      	orrpl	r3, r1
 8014e3a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8014e3c:	3301      	adds	r3, #1
 8014e3e:	105b      	asrs	r3, r3, #1
 8014e40:	4293      	cmp	r3, r2
 8014e42:	bfb8      	it	lt
 8014e44:	4613      	movlt	r3, r2
 8014e46:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8014e48:	4293      	cmp	r3, r2
 8014e4a:	bfa8      	it	ge
 8014e4c:	4613      	movge	r3, r2
 8014e4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014e50:	8013      	strh	r3, [r2, #0]
 8014e52:	2000      	movs	r0, #0
 8014e54:	b015      	add	sp, #84	; 0x54
 8014e56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e5a:	2400      	movs	r4, #0
 8014e5c:	2500      	movs	r5, #0
 8014e5e:	e9cd 4500 	strd	r4, r5, [sp]
 8014e62:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8014e64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8014e66:	e6f9      	b.n	8014c5c <arm_nn_vec_mat_mult_t_s16+0xf8>
 8014e68:	4633      	mov	r3, r6
 8014e6a:	2000      	movs	r0, #0
 8014e6c:	2100      	movs	r1, #0
 8014e6e:	e7b4      	b.n	8014dda <arm_nn_vec_mat_mult_t_s16+0x276>

08014e70 <arm_convolve_1_x_n_s4>:
 8014e70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e74:	b085      	sub	sp, #20
 8014e76:	4698      	mov	r8, r3
 8014e78:	460c      	mov	r4, r1
 8014e7a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014e7c:	9203      	str	r2, [sp, #12]
 8014e7e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014e80:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8014e82:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
 8014e86:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
 8014e8a:	4605      	mov	r5, r0
 8014e8c:	4641      	mov	r1, r8
 8014e8e:	4620      	mov	r0, r4
 8014e90:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8014e94:	e9dd 6910 	ldrd	r6, r9, [sp, #64]	; 0x40
 8014e98:	f000 f8e2 	bl	8015060 <arm_convolve_1_x_n_s4_get_buffer_size>
 8014e9c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8014ea0:	2b01      	cmp	r3, #1
 8014ea2:	d120      	bne.n	8014ee6 <arm_convolve_1_x_n_s4+0x76>
 8014ea4:	69a3      	ldr	r3, [r4, #24]
 8014ea6:	2b01      	cmp	r3, #1
 8014ea8:	d11d      	bne.n	8014ee6 <arm_convolve_1_x_n_s4+0x76>
 8014eaa:	e9dd 3201 	ldrd	r3, r2, [sp, #4]
 8014eae:	b9b8      	cbnz	r0, 8014ee0 <arm_convolve_1_x_n_s4+0x70>
 8014eb0:	68a1      	ldr	r1, [r4, #8]
 8014eb2:	b1c1      	cbz	r1, 8014ee6 <arm_convolve_1_x_n_s4+0x76>
 8014eb4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8014eb8:	fb01 f000 	mul.w	r0, r1, r0
 8014ebc:	0781      	lsls	r1, r0, #30
 8014ebe:	d112      	bne.n	8014ee6 <arm_convolve_1_x_n_s4+0x76>
 8014ec0:	e9cd 260f 	strd	r2, r6, [sp, #60]	; 0x3c
 8014ec4:	9a03      	ldr	r2, [sp, #12]
 8014ec6:	970e      	str	r7, [sp, #56]	; 0x38
 8014ec8:	e9cd 3b13 	strd	r3, fp, [sp, #76]	; 0x4c
 8014ecc:	4621      	mov	r1, r4
 8014ece:	4643      	mov	r3, r8
 8014ed0:	4628      	mov	r0, r5
 8014ed2:	e9cd 9a11 	strd	r9, sl, [sp, #68]	; 0x44
 8014ed6:	b005      	add	sp, #20
 8014ed8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014edc:	f000 b8ca 	b.w	8015074 <arm_convolve_s4>
 8014ee0:	6828      	ldr	r0, [r5, #0]
 8014ee2:	2800      	cmp	r0, #0
 8014ee4:	d1e4      	bne.n	8014eb0 <arm_convolve_1_x_n_s4+0x40>
 8014ee6:	f04f 30ff 	mov.w	r0, #4294967295
 8014eea:	b005      	add	sp, #20
 8014eec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ef0 <arm_convolve_1x1_s4>:
 8014ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ef4:	460c      	mov	r4, r1
 8014ef6:	b093      	sub	sp, #76	; 0x4c
 8014ef8:	4690      	mov	r8, r2
 8014efa:	930f      	str	r3, [sp, #60]	; 0x3c
 8014efc:	461a      	mov	r2, r3
 8014efe:	6923      	ldr	r3, [r4, #16]
 8014f00:	991e      	ldr	r1, [sp, #120]	; 0x78
 8014f02:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8014f04:	e9dd e020 	ldrd	lr, r0, [sp, #128]	; 0x80
 8014f08:	2b00      	cmp	r3, #0
 8014f0a:	d168      	bne.n	8014fde <arm_convolve_1x1_s4+0xee>
 8014f0c:	6967      	ldr	r7, [r4, #20]
 8014f0e:	2f00      	cmp	r7, #0
 8014f10:	d165      	bne.n	8014fde <arm_convolve_1x1_s4+0xee>
 8014f12:	6895      	ldr	r5, [r2, #8]
 8014f14:	68e3      	ldr	r3, [r4, #12]
 8014f16:	f8d0 9004 	ldr.w	r9, [r0, #4]
 8014f1a:	fb05 fc03 	mul.w	ip, r5, r3
 8014f1e:	6883      	ldr	r3, [r0, #8]
 8014f20:	930b      	str	r3, [sp, #44]	; 0x2c
 8014f22:	68c3      	ldr	r3, [r0, #12]
 8014f24:	930c      	str	r3, [sp, #48]	; 0x30
 8014f26:	4610      	mov	r0, r2
 8014f28:	68d2      	ldr	r2, [r2, #12]
 8014f2a:	920a      	str	r2, [sp, #40]	; 0x28
 8014f2c:	fb02 fa0c 	mul.w	sl, r2, ip
 8014f30:	6802      	ldr	r2, [r0, #0]
 8014f32:	9210      	str	r2, [sp, #64]	; 0x40
 8014f34:	e9dd 020b 	ldrd	r0, r2, [sp, #44]	; 0x2c
 8014f38:	fb02 fb00 	mul.w	fp, r2, r0
 8014f3c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014f3e:	68a3      	ldr	r3, [r4, #8]
 8014f40:	2a00      	cmp	r2, #0
 8014f42:	dd48      	ble.n	8014fd6 <arm_convolve_1x1_s4+0xe6>
 8014f44:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014f46:	9711      	str	r7, [sp, #68]	; 0x44
 8014f48:	fb02 f303 	mul.w	r3, r2, r3
 8014f4c:	930d      	str	r3, [sp, #52]	; 0x34
 8014f4e:	970e      	str	r7, [sp, #56]	; 0x38
 8014f50:	4672      	mov	r2, lr
 8014f52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014f54:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014f56:	fb03 f505 	mul.w	r5, r3, r5
 8014f5a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014f5c:	685b      	ldr	r3, [r3, #4]
 8014f5e:	f1b9 0f00 	cmp.w	r9, #0
 8014f62:	fb03 0505 	mla	r5, r3, r5, r0
 8014f66:	dd29      	ble.n	8014fbc <arm_convolve_1x1_s4+0xcc>
 8014f68:	2700      	movs	r7, #0
 8014f6a:	e003      	b.n	8014f74 <arm_convolve_1x1_s4+0x84>
 8014f6c:	45b9      	cmp	r9, r7
 8014f6e:	991e      	ldr	r1, [sp, #120]	; 0x78
 8014f70:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014f72:	d023      	beq.n	8014fbc <arm_convolve_1x1_s4+0xcc>
 8014f74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014f76:	9308      	str	r3, [sp, #32]
 8014f78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f7a:	9309      	str	r3, [sp, #36]	; 0x24
 8014f7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014f7e:	9304      	str	r3, [sp, #16]
 8014f80:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014f82:	9303      	str	r3, [sp, #12]
 8014f84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014f86:	9302      	str	r3, [sp, #8]
 8014f88:	6a23      	ldr	r3, [r4, #32]
 8014f8a:	9307      	str	r3, [sp, #28]
 8014f8c:	6863      	ldr	r3, [r4, #4]
 8014f8e:	9306      	str	r3, [sp, #24]
 8014f90:	6823      	ldr	r3, [r4, #0]
 8014f92:	9305      	str	r3, [sp, #20]
 8014f94:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8014f98:	9301      	str	r3, [sp, #4]
 8014f9a:	f8d8 3000 	ldr.w	r3, [r8]
 8014f9e:	9300      	str	r3, [sp, #0]
 8014fa0:	4628      	mov	r0, r5
 8014fa2:	4633      	mov	r3, r6
 8014fa4:	3701      	adds	r7, #1
 8014fa6:	445e      	add	r6, fp
 8014fa8:	4455      	add	r5, sl
 8014faa:	9220      	str	r2, [sp, #128]	; 0x80
 8014fac:	911e      	str	r1, [sp, #120]	; 0x78
 8014fae:	f003 fdb3 	bl	8018b18 <arm_nn_mat_mult_nt_t_s4>
 8014fb2:	2800      	cmp	r0, #0
 8014fb4:	d0da      	beq.n	8014f6c <arm_convolve_1x1_s4+0x7c>
 8014fb6:	b013      	add	sp, #76	; 0x4c
 8014fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fbc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014fbe:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014fc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014fc2:	4428      	add	r0, r5
 8014fc4:	900e      	str	r0, [sp, #56]	; 0x38
 8014fc6:	9810      	ldr	r0, [sp, #64]	; 0x40
 8014fc8:	3301      	adds	r3, #1
 8014fca:	4298      	cmp	r0, r3
 8014fcc:	9311      	str	r3, [sp, #68]	; 0x44
 8014fce:	d002      	beq.n	8014fd6 <arm_convolve_1x1_s4+0xe6>
 8014fd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014fd2:	689d      	ldr	r5, [r3, #8]
 8014fd4:	e7bd      	b.n	8014f52 <arm_convolve_1x1_s4+0x62>
 8014fd6:	2000      	movs	r0, #0
 8014fd8:	b013      	add	sp, #76	; 0x4c
 8014fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014fde:	f04f 30ff 	mov.w	r0, #4294967295
 8014fe2:	e7e8      	b.n	8014fb6 <arm_convolve_1x1_s4+0xc6>

08014fe4 <arm_convolve_1x1_s4_fast>:
 8014fe4:	468c      	mov	ip, r1
 8014fe6:	6909      	ldr	r1, [r1, #16]
 8014fe8:	2900      	cmp	r1, #0
 8014fea:	d136      	bne.n	801505a <arm_convolve_1x1_s4_fast+0x76>
 8014fec:	b510      	push	{r4, lr}
 8014fee:	f8dc 4014 	ldr.w	r4, [ip, #20]
 8014ff2:	b08a      	sub	sp, #40	; 0x28
 8014ff4:	bb74      	cbnz	r4, 8015054 <arm_convolve_1x1_s4_fast+0x70>
 8014ff6:	f8dc 1008 	ldr.w	r1, [ip, #8]
 8014ffa:	2901      	cmp	r1, #1
 8014ffc:	d12a      	bne.n	8015054 <arm_convolve_1x1_s4_fast+0x70>
 8014ffe:	f8dc 100c 	ldr.w	r1, [ip, #12]
 8015002:	2901      	cmp	r1, #1
 8015004:	d126      	bne.n	8015054 <arm_convolve_1x1_s4_fast+0x70>
 8015006:	68d9      	ldr	r1, [r3, #12]
 8015008:	9109      	str	r1, [sp, #36]	; 0x24
 801500a:	9104      	str	r1, [sp, #16]
 801500c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801500e:	68c9      	ldr	r1, [r1, #12]
 8015010:	9103      	str	r1, [sp, #12]
 8015012:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8015016:	681b      	ldr	r3, [r3, #0]
 8015018:	fb00 f101 	mul.w	r1, r0, r1
 801501c:	fb03 f101 	mul.w	r1, r3, r1
 8015020:	e9d2 3000 	ldrd	r3, r0, [r2]
 8015024:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8015028:	9300      	str	r3, [sp, #0]
 801502a:	f8dc 0024 	ldr.w	r0, [ip, #36]	; 0x24
 801502e:	9008      	str	r0, [sp, #32]
 8015030:	f8dc 0020 	ldr.w	r0, [ip, #32]
 8015034:	9007      	str	r0, [sp, #28]
 8015036:	f8dc 0004 	ldr.w	r0, [ip, #4]
 801503a:	9006      	str	r0, [sp, #24]
 801503c:	f8dc 0000 	ldr.w	r0, [ip]
 8015040:	9005      	str	r0, [sp, #20]
 8015042:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015044:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015046:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015048:	980c      	ldr	r0, [sp, #48]	; 0x30
 801504a:	f003 fd65 	bl	8018b18 <arm_nn_mat_mult_nt_t_s4>
 801504e:	4620      	mov	r0, r4
 8015050:	b00a      	add	sp, #40	; 0x28
 8015052:	bd10      	pop	{r4, pc}
 8015054:	f04f 30ff 	mov.w	r0, #4294967295
 8015058:	e7fa      	b.n	8015050 <arm_convolve_1x1_s4_fast+0x6c>
 801505a:	f04f 30ff 	mov.w	r0, #4294967295
 801505e:	4770      	bx	lr

08015060 <arm_convolve_1_x_n_s4_get_buffer_size>:
 8015060:	e9d2 2001 	ldrd	r2, r0, [r2, #4]
 8015064:	68cb      	ldr	r3, [r1, #12]
 8015066:	fb02 f000 	mul.w	r0, r2, r0
 801506a:	fb03 f000 	mul.w	r0, r3, r0
 801506e:	0080      	lsls	r0, r0, #2
 8015070:	4770      	bx	lr
 8015072:	bf00      	nop

08015074 <arm_convolve_s4>:
 8015074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015078:	ed2d 8b04 	vpush	{d8-d9}
 801507c:	6805      	ldr	r5, [r0, #0]
 801507e:	b0b3      	sub	sp, #204	; 0xcc
 8015080:	9c41      	ldr	r4, [sp, #260]	; 0x104
 8015082:	9845      	ldr	r0, [sp, #276]	; 0x114
 8015084:	951a      	str	r5, [sp, #104]	; 0x68
 8015086:	2d00      	cmp	r5, #0
 8015088:	f000 81f6 	beq.w	8015478 <arm_convolve_s4+0x404>
 801508c:	88a5      	ldrh	r5, [r4, #4]
 801508e:	f8b4 9008 	ldrh.w	r9, [r4, #8]
 8015092:	899e      	ldrh	r6, [r3, #12]
 8015094:	681f      	ldr	r7, [r3, #0]
 8015096:	950c      	str	r5, [sp, #48]	; 0x30
 8015098:	9725      	str	r7, [sp, #148]	; 0x94
 801509a:	fb05 f509 	mul.w	r5, r5, r9
 801509e:	690f      	ldr	r7, [r1, #16]
 80150a0:	9727      	str	r7, [sp, #156]	; 0x9c
 80150a2:	fb06 f505 	mul.w	r5, r6, r5
 80150a6:	694f      	ldr	r7, [r1, #20]
 80150a8:	951f      	str	r5, [sp, #124]	; 0x7c
 80150aa:	9728      	str	r7, [sp, #160]	; 0xa0
 80150ac:	ee08 6a10 	vmov	s16, r6
 80150b0:	e9d3 6501 	ldrd	r6, r5, [r3, #4]
 80150b4:	e9d1 7302 	ldrd	r7, r3, [r1, #8]
 80150b8:	9329      	str	r3, [sp, #164]	; 0xa4
 80150ba:	e9d1 a306 	ldrd	sl, r3, [r1, #24]
 80150be:	930d      	str	r3, [sp, #52]	; 0x34
 80150c0:	684b      	ldr	r3, [r1, #4]
 80150c2:	931c      	str	r3, [sp, #112]	; 0x70
 80150c4:	6a0b      	ldr	r3, [r1, #32]
 80150c6:	931d      	str	r3, [sp, #116]	; 0x74
 80150c8:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 80150ca:	931e      	str	r3, [sp, #120]	; 0x78
 80150cc:	6813      	ldr	r3, [r2, #0]
 80150ce:	68c4      	ldr	r4, [r0, #12]
 80150d0:	9320      	str	r3, [sp, #128]	; 0x80
 80150d2:	e9d0 0c01 	ldrd	r0, ip, [r0, #4]
 80150d6:	6853      	ldr	r3, [r2, #4]
 80150d8:	6809      	ldr	r1, [r1, #0]
 80150da:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80150dc:	ee09 3a10 	vmov	s18, r3
 80150e0:	2a00      	cmp	r2, #0
 80150e2:	b2a3      	uxth	r3, r4
 80150e4:	ee09 3a90 	vmov	s19, r3
 80150e8:	f340 8114 	ble.w	8015314 <arm_convolve_s4+0x2a0>
 80150ec:	b282      	uxth	r2, r0
 80150ee:	fa1f f38c 	uxth.w	r3, ip
 80150f2:	9223      	str	r2, [sp, #140]	; 0x8c
 80150f4:	9316      	str	r3, [sp, #88]	; 0x58
 80150f6:	b2aa      	uxth	r2, r5
 80150f8:	b2a0      	uxth	r0, r4
 80150fa:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80150fc:	9022      	str	r0, [sp, #136]	; 0x88
 80150fe:	b20c      	sxth	r4, r1
 8015100:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8015102:	920f      	str	r2, [sp, #60]	; 0x3c
 8015104:	fb01 f105 	mul.w	r1, r1, r5
 8015108:	9d22      	ldr	r5, [sp, #136]	; 0x88
 801510a:	ee08 4a90 	vmov	s17, r4
 801510e:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 8015110:	ee18 0a10 	vmov	r0, s16
 8015114:	fb05 f101 	mul.w	r1, r5, r1
 8015118:	912e      	str	r1, [sp, #184]	; 0xb8
 801511a:	f004 0101 	and.w	r1, r4, #1
 801511e:	b2b6      	uxth	r6, r6
 8015120:	fb02 f200 	mul.w	r2, r2, r0
 8015124:	9124      	str	r1, [sp, #144]	; 0x90
 8015126:	f3c4 0140 	ubfx	r1, r4, #1, #1
 801512a:	912d      	str	r1, [sp, #180]	; 0xb4
 801512c:	fb02 f106 	mul.w	r1, r2, r6
 8015130:	912b      	str	r1, [sp, #172]	; 0xac
 8015132:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015134:	9611      	str	r6, [sp, #68]	; 0x44
 8015136:	f3c4 038f 	ubfx	r3, r4, #2, #16
 801513a:	b2bf      	uxth	r7, r7
 801513c:	fb01 f202 	mul.w	r2, r1, r2
 8015140:	932c      	str	r3, [sp, #176]	; 0xb0
 8015142:	3b01      	subs	r3, #1
 8015144:	ea4f 0840 	mov.w	r8, r0, lsl #1
 8015148:	b29b      	uxth	r3, r3
 801514a:	920e      	str	r2, [sp, #56]	; 0x38
 801514c:	fb07 f200 	mul.w	r2, r7, r0
 8015150:	3301      	adds	r3, #1
 8015152:	9218      	str	r2, [sp, #96]	; 0x60
 8015154:	fb08 f209 	mul.w	r2, r8, r9
 8015158:	9210      	str	r2, [sp, #64]	; 0x40
 801515a:	005a      	lsls	r2, r3, #1
 801515c:	00db      	lsls	r3, r3, #3
 801515e:	fb0a fb00 	mul.w	fp, sl, r0
 8015162:	932f      	str	r3, [sp, #188]	; 0xbc
 8015164:	2300      	movs	r3, #0
 8015166:	9326      	str	r3, [sp, #152]	; 0x98
 8015168:	465b      	mov	r3, fp
 801516a:	9719      	str	r7, [sp, #100]	; 0x64
 801516c:	46c3      	mov	fp, r8
 801516e:	922a      	str	r2, [sp, #168]	; 0xa8
 8015170:	4698      	mov	r8, r3
 8015172:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8015174:	2b00      	cmp	r3, #0
 8015176:	f000 80be 	beq.w	80152f6 <arm_convolve_s4+0x282>
 801517a:	9a46      	ldr	r2, [sp, #280]	; 0x118
 801517c:	921b      	str	r2, [sp, #108]	; 0x6c
 801517e:	2300      	movs	r3, #0
 8015180:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8015182:	9321      	str	r3, [sp, #132]	; 0x84
 8015184:	9209      	str	r2, [sp, #36]	; 0x24
 8015186:	9314      	str	r3, [sp, #80]	; 0x50
 8015188:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801518a:	2b00      	cmp	r3, #0
 801518c:	f000 80a8 	beq.w	80152e0 <arm_convolve_s4+0x26c>
 8015190:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015192:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 8015196:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8015198:	fb02 f303 	mul.w	r3, r2, r3
 801519c:	f8bd 20a0 	ldrh.w	r2, [sp, #160]	; 0xa0
 80151a0:	1a9b      	subs	r3, r3, r2
 80151a2:	461a      	mov	r2, r3
 80151a4:	9317      	str	r3, [sp, #92]	; 0x5c
 80151a6:	f8bd 309c 	ldrh.w	r3, [sp, #156]	; 0x9c
 80151aa:	fb02 f201 	mul.w	r2, r2, r1
 80151ae:	ee18 0a10 	vmov	r0, s16
 80151b2:	9940      	ldr	r1, [sp, #256]	; 0x100
 80151b4:	1ad2      	subs	r2, r2, r3
 80151b6:	425b      	negs	r3, r3
 80151b8:	fb00 1202 	mla	r2, r0, r2, r1
 80151bc:	9312      	str	r3, [sp, #72]	; 0x48
 80151be:	2300      	movs	r3, #0
 80151c0:	464f      	mov	r7, r9
 80151c2:	9213      	str	r2, [sp, #76]	; 0x4c
 80151c4:	9315      	str	r3, [sp, #84]	; 0x54
 80151c6:	46c1      	mov	r9, r8
 80151c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80151ca:	2b00      	cmp	r3, #0
 80151cc:	d032      	beq.n	8015234 <arm_convolve_s4+0x1c0>
 80151ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80151d0:	930a      	str	r3, [sp, #40]	; 0x28
 80151d2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80151d4:	9308      	str	r3, [sp, #32]
 80151d6:	2300      	movs	r3, #0
 80151d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80151da:	b1ef      	cbz	r7, 8015218 <arm_convolve_s4+0x1a4>
 80151dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80151de:	9a08      	ldr	r2, [sp, #32]
 80151e0:	4293      	cmp	r3, r2
 80151e2:	d93a      	bls.n	801525a <arm_convolve_s4+0x1e6>
 80151e4:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80151e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80151ea:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80151ec:	2600      	movs	r6, #0
 80151ee:	2c00      	cmp	r4, #0
 80151f0:	465a      	mov	r2, fp
 80151f2:	f04f 0100 	mov.w	r1, #0
 80151f6:	4628      	mov	r0, r5
 80151f8:	db02      	blt.n	8015200 <arm_convolve_s4+0x18c>
 80151fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80151fc:	42a3      	cmp	r3, r4
 80151fe:	dc38      	bgt.n	8015272 <arm_convolve_s4+0x1fe>
 8015200:	f007 fc70 	bl	801cae4 <memset>
 8015204:	3601      	adds	r6, #1
 8015206:	42b7      	cmp	r7, r6
 8015208:	445d      	add	r5, fp
 801520a:	4454      	add	r4, sl
 801520c:	44c8      	add	r8, r9
 801520e:	d1ee      	bne.n	80151ee <arm_convolve_s4+0x17a>
 8015210:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015212:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015214:	4413      	add	r3, r2
 8015216:	9309      	str	r3, [sp, #36]	; 0x24
 8015218:	9a08      	ldr	r2, [sp, #32]
 801521a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801521c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801521e:	440a      	add	r2, r1
 8015220:	9208      	str	r2, [sp, #32]
 8015222:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015224:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015226:	440a      	add	r2, r1
 8015228:	920a      	str	r2, [sp, #40]	; 0x28
 801522a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801522c:	3301      	adds	r3, #1
 801522e:	429a      	cmp	r2, r3
 8015230:	930b      	str	r3, [sp, #44]	; 0x2c
 8015232:	d1d2      	bne.n	80151da <arm_convolve_s4+0x166>
 8015234:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015236:	bb2b      	cbnz	r3, 8015284 <arm_convolve_s4+0x210>
 8015238:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801523a:	9918      	ldr	r1, [sp, #96]	; 0x60
 801523c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801523e:	440a      	add	r2, r1
 8015240:	9213      	str	r2, [sp, #76]	; 0x4c
 8015242:	9919      	ldr	r1, [sp, #100]	; 0x64
 8015244:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015246:	440a      	add	r2, r1
 8015248:	9212      	str	r2, [sp, #72]	; 0x48
 801524a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801524c:	3301      	adds	r3, #1
 801524e:	4293      	cmp	r3, r2
 8015250:	9315      	str	r3, [sp, #84]	; 0x54
 8015252:	d041      	beq.n	80152d8 <arm_convolve_s4+0x264>
 8015254:	2301      	movs	r3, #1
 8015256:	9314      	str	r3, [sp, #80]	; 0x50
 8015258:	e7b6      	b.n	80151c8 <arm_convolve_s4+0x154>
 801525a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801525c:	2400      	movs	r4, #0
 801525e:	4628      	mov	r0, r5
 8015260:	3401      	adds	r4, #1
 8015262:	465a      	mov	r2, fp
 8015264:	2100      	movs	r1, #0
 8015266:	f007 fc3d 	bl	801cae4 <memset>
 801526a:	42a7      	cmp	r7, r4
 801526c:	445d      	add	r5, fp
 801526e:	d1f6      	bne.n	801525e <arm_convolve_s4+0x1ea>
 8015270:	e7ce      	b.n	8015210 <arm_convolve_s4+0x19c>
 8015272:	ee18 3a90 	vmov	r3, s17
 8015276:	ee18 2a10 	vmov	r2, s16
 801527a:	4629      	mov	r1, r5
 801527c:	4640      	mov	r0, r8
 801527e:	f005 fbb1 	bl	801a9e4 <arm_q7_to_q15_with_offset>
 8015282:	e7bf      	b.n	8015204 <arm_convolve_s4+0x190>
 8015284:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015286:	9306      	str	r3, [sp, #24]
 8015288:	9b44      	ldr	r3, [sp, #272]	; 0x110
 801528a:	9305      	str	r3, [sp, #20]
 801528c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801528e:	9304      	str	r3, [sp, #16]
 8015290:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015292:	9303      	str	r3, [sp, #12]
 8015294:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8015296:	9302      	str	r3, [sp, #8]
 8015298:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801529a:	9301      	str	r3, [sp, #4]
 801529c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801529e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80152a0:	9300      	str	r3, [sp, #0]
 80152a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80152a4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80152a6:	991a      	ldr	r1, [sp, #104]	; 0x68
 80152a8:	9842      	ldr	r0, [sp, #264]	; 0x108
 80152aa:	4413      	add	r3, r2
 80152ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80152ae:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80152b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80152b2:	4413      	add	r3, r2
 80152b4:	3401      	adds	r4, #1
 80152b6:	9312      	str	r3, [sp, #72]	; 0x48
 80152b8:	ee19 2a90 	vmov	r2, s19
 80152bc:	ee19 3a10 	vmov	r3, s18
 80152c0:	9415      	str	r4, [sp, #84]	; 0x54
 80152c2:	f000 f8dd 	bl	8015480 <arm_nn_mat_mult_kernel_s4_s16>
 80152c6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80152c8:	901b      	str	r0, [sp, #108]	; 0x6c
 80152ca:	42a3      	cmp	r3, r4
 80152cc:	d028      	beq.n	8015320 <arm_convolve_s4+0x2ac>
 80152ce:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80152d0:	9309      	str	r3, [sp, #36]	; 0x24
 80152d2:	2300      	movs	r3, #0
 80152d4:	9314      	str	r3, [sp, #80]	; 0x50
 80152d6:	e777      	b.n	80151c8 <arm_convolve_s4+0x154>
 80152d8:	2301      	movs	r3, #1
 80152da:	46c8      	mov	r8, r9
 80152dc:	9314      	str	r3, [sp, #80]	; 0x50
 80152de:	46b9      	mov	r9, r7
 80152e0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80152e2:	b333      	cbz	r3, 8015332 <arm_convolve_s4+0x2be>
 80152e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80152e6:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80152e8:	3301      	adds	r3, #1
 80152ea:	4293      	cmp	r3, r2
 80152ec:	9321      	str	r3, [sp, #132]	; 0x84
 80152ee:	f6ff af4b 	blt.w	8015188 <arm_convolve_s4+0x114>
 80152f2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80152f4:	bb23      	cbnz	r3, 8015340 <arm_convolve_s4+0x2cc>
 80152f6:	9a40      	ldr	r2, [sp, #256]	; 0x100
 80152f8:	992b      	ldr	r1, [sp, #172]	; 0xac
 80152fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80152fc:	440a      	add	r2, r1
 80152fe:	9240      	str	r2, [sp, #256]	; 0x100
 8015300:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015302:	9a46      	ldr	r2, [sp, #280]	; 0x118
 8015304:	440a      	add	r2, r1
 8015306:	9246      	str	r2, [sp, #280]	; 0x118
 8015308:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801530a:	3301      	adds	r3, #1
 801530c:	429a      	cmp	r2, r3
 801530e:	9326      	str	r3, [sp, #152]	; 0x98
 8015310:	f47f af2f 	bne.w	8015172 <arm_convolve_s4+0xfe>
 8015314:	2000      	movs	r0, #0
 8015316:	b033      	add	sp, #204	; 0xcc
 8015318:	ecbd 8b04 	vpop	{d8-d9}
 801531c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015320:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8015322:	9309      	str	r3, [sp, #36]	; 0x24
 8015324:	2300      	movs	r3, #0
 8015326:	9314      	str	r3, [sp, #80]	; 0x50
 8015328:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801532a:	46c8      	mov	r8, r9
 801532c:	46b9      	mov	r9, r7
 801532e:	2b00      	cmp	r3, #0
 8015330:	d1d8      	bne.n	80152e4 <arm_convolve_s4+0x270>
 8015332:	f06f 0001 	mvn.w	r0, #1
 8015336:	b033      	add	sp, #204	; 0xcc
 8015338:	ecbd 8b04 	vpop	{d8-d9}
 801533c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015340:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8015342:	2b00      	cmp	r3, #0
 8015344:	d0d7      	beq.n	80152f6 <arm_convolve_s4+0x282>
 8015346:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015348:	f8dd c108 	ldr.w	ip, [sp, #264]	; 0x108
 801534c:	3b04      	subs	r3, #4
 801534e:	9308      	str	r3, [sp, #32]
 8015350:	ee19 3a10 	vmov	r3, s18
 8015354:	2600      	movs	r6, #0
 8015356:	1f1f      	subs	r7, r3, #4
 8015358:	46b6      	mov	lr, r6
 801535a:	9b44      	ldr	r3, [sp, #272]	; 0x110
 801535c:	b10b      	cbz	r3, 8015362 <arm_convolve_s4+0x2ee>
 801535e:	f853 302e 	ldr.w	r3, [r3, lr, lsl #2]
 8015362:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8015364:	991a      	ldr	r1, [sp, #104]	; 0x68
 8015366:	b132      	cbz	r2, 8015376 <arm_convolve_s4+0x302>
 8015368:	f01e 0f01 	tst.w	lr, #1
 801536c:	bf1c      	itt	ne
 801536e:	f831 2b02 	ldrhne.w	r2, [r1], #2
 8015372:	fb12 3306 	smlabbne	r3, r2, r6, r3
 8015376:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015378:	b362      	cbz	r2, 80153d4 <arm_convolve_s4+0x360>
 801537a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801537c:	4462      	add	r2, ip
 801537e:	9209      	str	r2, [sp, #36]	; 0x24
 8015380:	460c      	mov	r4, r1
 8015382:	f83c 2b02 	ldrh.w	r2, [ip], #2
 8015386:	f8ad 20c4 	strh.w	r2, [sp, #196]	; 0xc4
 801538a:	9831      	ldr	r0, [sp, #196]	; 0xc4
 801538c:	6822      	ldr	r2, [r4, #0]
 801538e:	920a      	str	r2, [sp, #40]	; 0x28
 8015390:	0202      	lsls	r2, r0, #8
 8015392:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8015396:	b2c0      	uxtb	r0, r0
 8015398:	4302      	orrs	r2, r0
 801539a:	0110      	lsls	r0, r2, #4
 801539c:	fa2f f080 	sxtb16	r0, r0
 80153a0:	fa2f f282 	sxtb16	r2, r2
 80153a4:	ea4f 1232 	mov.w	r2, r2, ror #4
 80153a8:	ea4f 1030 	mov.w	r0, r0, ror #4
 80153ac:	fa2f f282 	sxtb16	r2, r2
 80153b0:	fa2f f080 	sxtb16	r0, r0
 80153b4:	eac2 4520 	pkhtb	r5, r2, r0, asr #16
 80153b8:	eac0 4202 	pkhbt	r2, r0, r2, lsl #16
 80153bc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80153be:	fb22 3300 	smlad	r3, r2, r0, r3
 80153c2:	6862      	ldr	r2, [r4, #4]
 80153c4:	3408      	adds	r4, #8
 80153c6:	fb25 3302 	smlad	r3, r5, r2, r3
 80153ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80153cc:	4594      	cmp	ip, r2
 80153ce:	d1d8      	bne.n	8015382 <arm_convolve_s4+0x30e>
 80153d0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80153d2:	4411      	add	r1, r2
 80153d4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80153d6:	b15a      	cbz	r2, 80153f0 <arm_convolve_s4+0x37c>
 80153d8:	f91c 2b01 	ldrsb.w	r2, [ip], #1
 80153dc:	884c      	ldrh	r4, [r1, #2]
 80153de:	f831 5b04 	ldrh.w	r5, [r1], #4
 80153e2:	f342 0003 	sbfx	r0, r2, #0, #4
 80153e6:	fb15 3300 	smlabb	r3, r5, r0, r3
 80153ea:	1112      	asrs	r2, r2, #4
 80153ec:	fb14 3302 	smlabb	r3, r4, r2, r3
 80153f0:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80153f2:	b152      	cbz	r2, 801540a <arm_convolve_s4+0x396>
 80153f4:	f01e 0f01 	tst.w	lr, #1
 80153f8:	d107      	bne.n	801540a <arm_convolve_s4+0x396>
 80153fa:	f91c 6b01 	ldrsb.w	r6, [ip], #1
 80153fe:	8809      	ldrh	r1, [r1, #0]
 8015400:	f346 0203 	sbfx	r2, r6, #0, #4
 8015404:	fb11 3302 	smlabb	r3, r1, r2, r3
 8015408:	1136      	asrs	r6, r6, #4
 801540a:	9908      	ldr	r1, [sp, #32]
 801540c:	f857 2f04 	ldr.w	r2, [r7, #4]!
 8015410:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8015414:	9108      	str	r1, [sp, #32]
 8015416:	ea22 71e2 	bic.w	r1, r2, r2, asr #31
 801541a:	fa03 f101 	lsl.w	r1, r3, r1
 801541e:	2400      	movs	r4, #0
 8015420:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8015424:	fbc1 3400 	smlal	r3, r4, r1, r0
 8015428:	0fdb      	lsrs	r3, r3, #31
 801542a:	2a00      	cmp	r2, #0
 801542c:	ea43 0444 	orr.w	r4, r3, r4, lsl #1
 8015430:	dc0d      	bgt.n	801544e <arm_convolve_s4+0x3da>
 8015432:	4252      	negs	r2, r2
 8015434:	2301      	movs	r3, #1
 8015436:	4093      	lsls	r3, r2
 8015438:	3b01      	subs	r3, #1
 801543a:	ea04 0103 	and.w	r1, r4, r3
 801543e:	4114      	asrs	r4, r2
 8015440:	ea4f 0363 	mov.w	r3, r3, asr #1
 8015444:	bf48      	it	mi
 8015446:	3301      	addmi	r3, #1
 8015448:	4299      	cmp	r1, r3
 801544a:	bfc8      	it	gt
 801544c:	3401      	addgt	r4, #1
 801544e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015450:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015452:	4423      	add	r3, r4
 8015454:	4293      	cmp	r3, r2
 8015456:	bfb8      	it	lt
 8015458:	4613      	movlt	r3, r2
 801545a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801545c:	4293      	cmp	r3, r2
 801545e:	bfa8      	it	ge
 8015460:	4613      	movge	r3, r2
 8015462:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8015464:	f802 3b01 	strb.w	r3, [r2], #1
 8015468:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801546a:	921b      	str	r2, [sp, #108]	; 0x6c
 801546c:	f10e 0e01 	add.w	lr, lr, #1
 8015470:	459e      	cmp	lr, r3
 8015472:	f47f af72 	bne.w	801535a <arm_convolve_s4+0x2e6>
 8015476:	e73e      	b.n	80152f6 <arm_convolve_s4+0x282>
 8015478:	f04f 30ff 	mov.w	r0, #4294967295
 801547c:	e75b      	b.n	8015336 <arm_convolve_s4+0x2c2>
 801547e:	bf00      	nop

08015480 <arm_nn_mat_mult_kernel_s4_s16>:
 8015480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015484:	b09d      	sub	sp, #116	; 0x74
 8015486:	9001      	str	r0, [sp, #4]
 8015488:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801548a:	9317      	str	r3, [sp, #92]	; 0x5c
 801548c:	4613      	mov	r3, r2
 801548e:	9218      	str	r2, [sp, #96]	; 0x60
 8015490:	089b      	lsrs	r3, r3, #2
 8015492:	4402      	add	r2, r0
 8015494:	910b      	str	r1, [sp, #44]	; 0x2c
 8015496:	920d      	str	r2, [sp, #52]	; 0x34
 8015498:	9319      	str	r3, [sp, #100]	; 0x64
 801549a:	f000 8349 	beq.w	8015b30 <arm_nn_mat_mult_kernel_s4_s16+0x6b0>
 801549e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80154a0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80154a2:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80154a6:	930e      	str	r3, [sp, #56]	; 0x38
 80154a8:	2a00      	cmp	r2, #0
 80154aa:	4613      	mov	r3, r2
 80154ac:	bfb8      	it	lt
 80154ae:	3303      	addlt	r3, #3
 80154b0:	1099      	asrs	r1, r3, #2
 80154b2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80154b4:	910f      	str	r1, [sp, #60]	; 0x3c
 80154b6:	3b01      	subs	r3, #1
 80154b8:	f100 0208 	add.w	r2, r0, #8
 80154bc:	b29b      	uxth	r3, r3
 80154be:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80154c2:	9312      	str	r3, [sp, #72]	; 0x48
 80154c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80154c6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80154ca:	9310      	str	r3, [sp, #64]	; 0x40
 80154cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80154ce:	f003 0301 	and.w	r3, r3, #1
 80154d2:	930c      	str	r3, [sp, #48]	; 0x30
 80154d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154d6:	1c9a      	adds	r2, r3, #2
 80154d8:	9216      	str	r2, [sp, #88]	; 0x58
 80154da:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80154dc:	3204      	adds	r2, #4
 80154de:	9207      	str	r2, [sp, #28]
 80154e0:	1d02      	adds	r2, r0, #4
 80154e2:	9208      	str	r2, [sp, #32]
 80154e4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80154e6:	3210      	adds	r2, #16
 80154e8:	9205      	str	r2, [sp, #20]
 80154ea:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80154ec:	3210      	adds	r2, #16
 80154ee:	9204      	str	r2, [sp, #16]
 80154f0:	004a      	lsls	r2, r1, #1
 80154f2:	9211      	str	r2, [sp, #68]	; 0x44
 80154f4:	00ca      	lsls	r2, r1, #3
 80154f6:	9213      	str	r2, [sp, #76]	; 0x4c
 80154f8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80154fa:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80154fe:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 8015502:	9215      	str	r2, [sp, #84]	; 0x54
 8015504:	9314      	str	r3, [sp, #80]	; 0x50
 8015506:	9b01      	ldr	r3, [sp, #4]
 8015508:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801550a:	4413      	add	r3, r2
 801550c:	9306      	str	r3, [sp, #24]
 801550e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015510:	2b00      	cmp	r3, #0
 8015512:	f000 843a 	beq.w	8015d8a <arm_nn_mat_mult_kernel_s4_s16+0x90a>
 8015516:	461a      	mov	r2, r3
 8015518:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 801551a:	f8d2 9008 	ldr.w	r9, [r2, #8]
 801551e:	681b      	ldr	r3, [r3, #0]
 8015520:	3204      	adds	r2, #4
 8015522:	922b      	str	r2, [sp, #172]	; 0xac
 8015524:	2e00      	cmp	r6, #0
 8015526:	f000 8435 	beq.w	8015d94 <arm_nn_mat_mult_kernel_s4_s16+0x914>
 801552a:	9906      	ldr	r1, [sp, #24]
 801552c:	9103      	str	r1, [sp, #12]
 801552e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015530:	9901      	ldr	r1, [sp, #4]
 8015532:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015534:	9102      	str	r1, [sp, #8]
 8015536:	46ca      	mov	sl, r9
 8015538:	461a      	mov	r2, r3
 801553a:	9802      	ldr	r0, [sp, #8]
 801553c:	f8d4 8000 	ldr.w	r8, [r4]
 8015540:	f830 1b02 	ldrh.w	r1, [r0], #2
 8015544:	9002      	str	r0, [sp, #8]
 8015546:	9803      	ldr	r0, [sp, #12]
 8015548:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
 801554c:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 801554e:	f830 1b02 	ldrh.w	r1, [r0], #2
 8015552:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
 8015556:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015558:	9003      	str	r0, [sp, #12]
 801555a:	ea4f 2b07 	mov.w	fp, r7, lsl #8
 801555e:	f40b 0b7f 	and.w	fp, fp, #16711680	; 0xff0000
 8015562:	b2ff      	uxtb	r7, r7
 8015564:	ea4b 0b07 	orr.w	fp, fp, r7
 8015568:	020f      	lsls	r7, r1, #8
 801556a:	f407 077f 	and.w	r7, r7, #16711680	; 0xff0000
 801556e:	b2c9      	uxtb	r1, r1
 8015570:	430f      	orrs	r7, r1
 8015572:	ea4f 100b 	mov.w	r0, fp, lsl #4
 8015576:	0139      	lsls	r1, r7, #4
 8015578:	fa2f fb8b 	sxtb16	fp, fp
 801557c:	fa2f f080 	sxtb16	r0, r0
 8015580:	fa2f f787 	sxtb16	r7, r7
 8015584:	fa2f f181 	sxtb16	r1, r1
 8015588:	f8d5 e000 	ldr.w	lr, [r5]
 801558c:	ea4f 1b3b 	mov.w	fp, fp, ror #4
 8015590:	ea4f 1030 	mov.w	r0, r0, ror #4
 8015594:	fa2f fb8b 	sxtb16	fp, fp
 8015598:	fa2f f080 	sxtb16	r0, r0
 801559c:	ea4f 1737 	mov.w	r7, r7, ror #4
 80155a0:	eacb 4c20 	pkhtb	ip, fp, r0, asr #16
 80155a4:	fa2f f787 	sxtb16	r7, r7
 80155a8:	eac0 400b 	pkhbt	r0, r0, fp, lsl #16
 80155ac:	ea4f 1131 	mov.w	r1, r1, ror #4
 80155b0:	fa2f f181 	sxtb16	r1, r1
 80155b4:	eac7 4b21 	pkhtb	fp, r7, r1, asr #16
 80155b8:	eac1 4107 	pkhbt	r1, r1, r7, lsl #16
 80155bc:	fb20 3308 	smlad	r3, r0, r8, r3
 80155c0:	fb20 220e 	smlad	r2, r0, lr, r2
 80155c4:	fb21 9908 	smlad	r9, r1, r8, r9
 80155c8:	fb21 a10e 	smlad	r1, r1, lr, sl
 80155cc:	6860      	ldr	r0, [r4, #4]
 80155ce:	f8d5 a004 	ldr.w	sl, [r5, #4]
 80155d2:	3408      	adds	r4, #8
 80155d4:	3508      	adds	r5, #8
 80155d6:	fb2c 3300 	smlad	r3, ip, r0, r3
 80155da:	fb2c 220a 	smlad	r2, ip, sl, r2
 80155de:	fb2b 9900 	smlad	r9, fp, r0, r9
 80155e2:	fb2b 1a0a 	smlad	sl, fp, sl, r1
 80155e6:	3e01      	subs	r6, #1
 80155e8:	d1a7      	bne.n	801553a <arm_nn_mat_mult_kernel_s4_s16+0xba>
 80155ea:	9901      	ldr	r1, [sp, #4]
 80155ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80155ee:	4401      	add	r1, r0
 80155f0:	9101      	str	r1, [sp, #4]
 80155f2:	9906      	ldr	r1, [sp, #24]
 80155f4:	e9dd 4514 	ldrd	r4, r5, [sp, #80]	; 0x50
 80155f8:	4401      	add	r1, r0
 80155fa:	9106      	str	r1, [sp, #24]
 80155fc:	9910      	ldr	r1, [sp, #64]	; 0x40
 80155fe:	b331      	cbz	r1, 801564e <arm_nn_mat_mult_kernel_s4_s16+0x1ce>
 8015600:	9801      	ldr	r0, [sp, #4]
 8015602:	f9b5 e002 	ldrsh.w	lr, [r5, #2]
 8015606:	f910 1b01 	ldrsb.w	r1, [r0], #1
 801560a:	9001      	str	r0, [sp, #4]
 801560c:	9806      	ldr	r0, [sp, #24]
 801560e:	f9b4 8002 	ldrsh.w	r8, [r4, #2]
 8015612:	f910 6b01 	ldrsb.w	r6, [r0], #1
 8015616:	f934 cb04 	ldrsh.w	ip, [r4], #4
 801561a:	9006      	str	r0, [sp, #24]
 801561c:	f935 0b04 	ldrsh.w	r0, [r5], #4
 8015620:	f341 0703 	sbfx	r7, r1, #0, #4
 8015624:	fb10 3307 	smlabb	r3, r0, r7, r3
 8015628:	1109      	asrs	r1, r1, #4
 801562a:	fb1c 2207 	smlabb	r2, ip, r7, r2
 801562e:	fb1e 3301 	smlabb	r3, lr, r1, r3
 8015632:	fb18 2201 	smlabb	r2, r8, r1, r2
 8015636:	f346 0103 	sbfx	r1, r6, #0, #4
 801563a:	fb10 9001 	smlabb	r0, r0, r1, r9
 801563e:	fb1c a101 	smlabb	r1, ip, r1, sl
 8015642:	ea4f 1c26 	mov.w	ip, r6, asr #4
 8015646:	fb1e 090c 	smlabb	r9, lr, ip, r0
 801564a:	fb18 1a0c 	smlabb	sl, r8, ip, r1
 801564e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015650:	2900      	cmp	r1, #0
 8015652:	f000 837d 	beq.w	8015d50 <arm_nn_mat_mult_kernel_s4_s16+0x8d0>
 8015656:	9906      	ldr	r1, [sp, #24]
 8015658:	f9b4 0000 	ldrsh.w	r0, [r4]
 801565c:	9c01      	ldr	r4, [sp, #4]
 801565e:	f991 6000 	ldrsb.w	r6, [r1]
 8015662:	f9b5 5000 	ldrsh.w	r5, [r5]
 8015666:	f914 1b01 	ldrsb.w	r1, [r4], #1
 801566a:	9401      	str	r4, [sp, #4]
 801566c:	f346 0403 	sbfx	r4, r6, #0, #4
 8015670:	fb15 9904 	smlabb	r9, r5, r4, r9
 8015674:	fb10 aa04 	smlabb	sl, r0, r4, sl
 8015678:	f341 0403 	sbfx	r4, r1, #0, #4
 801567c:	1137      	asrs	r7, r6, #4
 801567e:	fb15 3304 	smlabb	r3, r5, r4, r3
 8015682:	fb10 2204 	smlabb	r2, r0, r4, r2
 8015686:	110e      	asrs	r6, r1, #4
 8015688:	9904      	ldr	r1, [sp, #16]
 801568a:	f851 4c10 	ldr.w	r4, [r1, #-16]
 801568e:	9905      	ldr	r1, [sp, #20]
 8015690:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8015694:	f851 1c10 	ldr.w	r1, [r1, #-16]
 8015698:	4083      	lsls	r3, r0
 801569a:	2500      	movs	r5, #0
 801569c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80156a0:	fbc3 0501 	smlal	r0, r5, r3, r1
 80156a4:	0fc0      	lsrs	r0, r0, #31
 80156a6:	2c00      	cmp	r4, #0
 80156a8:	ea40 0545 	orr.w	r5, r0, r5, lsl #1
 80156ac:	dc0d      	bgt.n	80156ca <arm_nn_mat_mult_kernel_s4_s16+0x24a>
 80156ae:	4264      	negs	r4, r4
 80156b0:	2301      	movs	r3, #1
 80156b2:	40a3      	lsls	r3, r4
 80156b4:	3b01      	subs	r3, #1
 80156b6:	ea05 0103 	and.w	r1, r5, r3
 80156ba:	4125      	asrs	r5, r4
 80156bc:	ea4f 0363 	mov.w	r3, r3, asr #1
 80156c0:	bf48      	it	mi
 80156c2:	3301      	addmi	r3, #1
 80156c4:	4299      	cmp	r1, r3
 80156c6:	bfc8      	it	gt
 80156c8:	3501      	addgt	r5, #1
 80156ca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80156cc:	441d      	add	r5, r3
 80156ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80156d0:	429d      	cmp	r5, r3
 80156d2:	bfb8      	it	lt
 80156d4:	461d      	movlt	r5, r3
 80156d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80156d8:	429d      	cmp	r5, r3
 80156da:	bfa8      	it	ge
 80156dc:	461d      	movge	r5, r3
 80156de:	9b07      	ldr	r3, [sp, #28]
 80156e0:	f803 5c04 	strb.w	r5, [r3, #-4]
 80156e4:	9b04      	ldr	r3, [sp, #16]
 80156e6:	f853 0c10 	ldr.w	r0, [r3, #-16]
 80156ea:	9b05      	ldr	r3, [sp, #20]
 80156ec:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 80156f0:	f853 3c10 	ldr.w	r3, [r3, #-16]
 80156f4:	408a      	lsls	r2, r1
 80156f6:	2400      	movs	r4, #0
 80156f8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80156fc:	fbc2 1403 	smlal	r1, r4, r2, r3
 8015700:	0fc9      	lsrs	r1, r1, #31
 8015702:	2800      	cmp	r0, #0
 8015704:	ea41 0444 	orr.w	r4, r1, r4, lsl #1
 8015708:	dc0d      	bgt.n	8015726 <arm_nn_mat_mult_kernel_s4_s16+0x2a6>
 801570a:	4240      	negs	r0, r0
 801570c:	2301      	movs	r3, #1
 801570e:	4083      	lsls	r3, r0
 8015710:	3b01      	subs	r3, #1
 8015712:	ea04 0203 	and.w	r2, r4, r3
 8015716:	4104      	asrs	r4, r0
 8015718:	ea4f 0363 	mov.w	r3, r3, asr #1
 801571c:	bf48      	it	mi
 801571e:	3301      	addmi	r3, #1
 8015720:	429a      	cmp	r2, r3
 8015722:	bfc8      	it	gt
 8015724:	3401      	addgt	r4, #1
 8015726:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015728:	441c      	add	r4, r3
 801572a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801572c:	429c      	cmp	r4, r3
 801572e:	bfb8      	it	lt
 8015730:	461c      	movlt	r4, r3
 8015732:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015734:	429c      	cmp	r4, r3
 8015736:	bfa8      	it	ge
 8015738:	461c      	movge	r4, r3
 801573a:	9b08      	ldr	r3, [sp, #32]
 801573c:	f803 4c04 	strb.w	r4, [r3, #-4]
 8015740:	9b04      	ldr	r3, [sp, #16]
 8015742:	f853 1c08 	ldr.w	r1, [r3, #-8]
 8015746:	9b05      	ldr	r3, [sp, #20]
 8015748:	ea21 70e1 	bic.w	r0, r1, r1, asr #31
 801574c:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8015750:	fa09 f000 	lsl.w	r0, r9, r0
 8015754:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8015758:	2400      	movs	r4, #0
 801575a:	fbc0 2403 	smlal	r2, r4, r0, r3
 801575e:	0fd2      	lsrs	r2, r2, #31
 8015760:	2900      	cmp	r1, #0
 8015762:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 8015766:	dc0d      	bgt.n	8015784 <arm_nn_mat_mult_kernel_s4_s16+0x304>
 8015768:	4249      	negs	r1, r1
 801576a:	2301      	movs	r3, #1
 801576c:	408b      	lsls	r3, r1
 801576e:	3b01      	subs	r3, #1
 8015770:	ea04 0203 	and.w	r2, r4, r3
 8015774:	410c      	asrs	r4, r1
 8015776:	ea4f 0363 	mov.w	r3, r3, asr #1
 801577a:	bf48      	it	mi
 801577c:	3301      	addmi	r3, #1
 801577e:	429a      	cmp	r2, r3
 8015780:	bfc8      	it	gt
 8015782:	3401      	addgt	r4, #1
 8015784:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015786:	441c      	add	r4, r3
 8015788:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801578a:	429c      	cmp	r4, r3
 801578c:	bfb8      	it	lt
 801578e:	461c      	movlt	r4, r3
 8015790:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015792:	429c      	cmp	r4, r3
 8015794:	bfa8      	it	ge
 8015796:	461c      	movge	r4, r3
 8015798:	9b07      	ldr	r3, [sp, #28]
 801579a:	f803 4c02 	strb.w	r4, [r3, #-2]
 801579e:	9b04      	ldr	r3, [sp, #16]
 80157a0:	f853 0c08 	ldr.w	r0, [r3, #-8]
 80157a4:	9b05      	ldr	r3, [sp, #20]
 80157a6:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 80157aa:	f853 3c08 	ldr.w	r3, [r3, #-8]
 80157ae:	fa0a f101 	lsl.w	r1, sl, r1
 80157b2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80157b6:	2400      	movs	r4, #0
 80157b8:	fbc1 2403 	smlal	r2, r4, r1, r3
 80157bc:	0fd2      	lsrs	r2, r2, #31
 80157be:	2800      	cmp	r0, #0
 80157c0:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 80157c4:	dc0d      	bgt.n	80157e2 <arm_nn_mat_mult_kernel_s4_s16+0x362>
 80157c6:	4240      	negs	r0, r0
 80157c8:	2301      	movs	r3, #1
 80157ca:	4083      	lsls	r3, r0
 80157cc:	3b01      	subs	r3, #1
 80157ce:	ea04 0203 	and.w	r2, r4, r3
 80157d2:	4104      	asrs	r4, r0
 80157d4:	ea4f 0363 	mov.w	r3, r3, asr #1
 80157d8:	bf48      	it	mi
 80157da:	3301      	addmi	r3, #1
 80157dc:	429a      	cmp	r2, r3
 80157de:	bfc8      	it	gt
 80157e0:	3401      	addgt	r4, #1
 80157e2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80157e4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80157e6:	441c      	add	r4, r3
 80157e8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80157ea:	429c      	cmp	r4, r3
 80157ec:	bfb8      	it	lt
 80157ee:	461c      	movlt	r4, r3
 80157f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80157f2:	429c      	cmp	r4, r3
 80157f4:	bfa8      	it	ge
 80157f6:	461c      	movge	r4, r3
 80157f8:	9b08      	ldr	r3, [sp, #32]
 80157fa:	f803 4c02 	strb.w	r4, [r3, #-2]
 80157fe:	9b01      	ldr	r3, [sp, #4]
 8015800:	4413      	add	r3, r2
 8015802:	9309      	str	r3, [sp, #36]	; 0x24
 8015804:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015806:	2b00      	cmp	r3, #0
 8015808:	f000 82bd 	beq.w	8015d86 <arm_nn_mat_mult_kernel_s4_s16+0x906>
 801580c:	461a      	mov	r2, r3
 801580e:	320c      	adds	r2, #12
 8015810:	681b      	ldr	r3, [r3, #0]
 8015812:	f852 ac04 	ldr.w	sl, [r2, #-4]
 8015816:	922b      	str	r2, [sp, #172]	; 0xac
 8015818:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801581a:	2a00      	cmp	r2, #0
 801581c:	f000 8291 	beq.w	8015d42 <arm_nn_mat_mult_kernel_s4_s16+0x8c2>
 8015820:	990e      	ldr	r1, [sp, #56]	; 0x38
 8015822:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015824:	f9b1 1000 	ldrsh.w	r1, [r1]
 8015828:	f932 0b02 	ldrsh.w	r0, [r2], #2
 801582c:	9206      	str	r2, [sp, #24]
 801582e:	fb11 a907 	smlabb	r9, r1, r7, sl
 8015832:	fb11 3206 	smlabb	r2, r1, r6, r3
 8015836:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015838:	910a      	str	r1, [sp, #40]	; 0x28
 801583a:	fb00 3306 	mla	r3, r0, r6, r3
 801583e:	fb00 aa07 	mla	sl, r0, r7, sl
 8015842:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015844:	2e00      	cmp	r6, #0
 8015846:	d06b      	beq.n	8015920 <arm_nn_mat_mult_kernel_s4_s16+0x4a0>
 8015848:	9909      	ldr	r1, [sp, #36]	; 0x24
 801584a:	9103      	str	r1, [sp, #12]
 801584c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801584e:	9901      	ldr	r1, [sp, #4]
 8015850:	9c06      	ldr	r4, [sp, #24]
 8015852:	9102      	str	r1, [sp, #8]
 8015854:	9802      	ldr	r0, [sp, #8]
 8015856:	f8d4 8000 	ldr.w	r8, [r4]
 801585a:	f830 1b02 	ldrh.w	r1, [r0], #2
 801585e:	9002      	str	r0, [sp, #8]
 8015860:	9803      	ldr	r0, [sp, #12]
 8015862:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
 8015866:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8015868:	f830 1b02 	ldrh.w	r1, [r0], #2
 801586c:	f8ad 106c 	strh.w	r1, [sp, #108]	; 0x6c
 8015870:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015872:	9003      	str	r0, [sp, #12]
 8015874:	ea4f 2b07 	mov.w	fp, r7, lsl #8
 8015878:	f40b 0b7f 	and.w	fp, fp, #16711680	; 0xff0000
 801587c:	b2ff      	uxtb	r7, r7
 801587e:	ea4b 0b07 	orr.w	fp, fp, r7
 8015882:	020f      	lsls	r7, r1, #8
 8015884:	f407 077f 	and.w	r7, r7, #16711680	; 0xff0000
 8015888:	b2c9      	uxtb	r1, r1
 801588a:	430f      	orrs	r7, r1
 801588c:	ea4f 100b 	mov.w	r0, fp, lsl #4
 8015890:	0139      	lsls	r1, r7, #4
 8015892:	fa2f fb8b 	sxtb16	fp, fp
 8015896:	fa2f f080 	sxtb16	r0, r0
 801589a:	fa2f f787 	sxtb16	r7, r7
 801589e:	fa2f f181 	sxtb16	r1, r1
 80158a2:	f8d5 e000 	ldr.w	lr, [r5]
 80158a6:	ea4f 1b3b 	mov.w	fp, fp, ror #4
 80158aa:	ea4f 1030 	mov.w	r0, r0, ror #4
 80158ae:	fa2f fb8b 	sxtb16	fp, fp
 80158b2:	fa2f f080 	sxtb16	r0, r0
 80158b6:	ea4f 1737 	mov.w	r7, r7, ror #4
 80158ba:	eacb 4c20 	pkhtb	ip, fp, r0, asr #16
 80158be:	fa2f f787 	sxtb16	r7, r7
 80158c2:	eac0 400b 	pkhbt	r0, r0, fp, lsl #16
 80158c6:	ea4f 1131 	mov.w	r1, r1, ror #4
 80158ca:	fa2f f181 	sxtb16	r1, r1
 80158ce:	eac7 4b21 	pkhtb	fp, r7, r1, asr #16
 80158d2:	eac1 4107 	pkhbt	r1, r1, r7, lsl #16
 80158d6:	fb20 3308 	smlad	r3, r0, r8, r3
 80158da:	fb20 220e 	smlad	r2, r0, lr, r2
 80158de:	fb21 aa08 	smlad	sl, r1, r8, sl
 80158e2:	fb21 910e 	smlad	r1, r1, lr, r9
 80158e6:	6860      	ldr	r0, [r4, #4]
 80158e8:	f8d5 9004 	ldr.w	r9, [r5, #4]
 80158ec:	3408      	adds	r4, #8
 80158ee:	3508      	adds	r5, #8
 80158f0:	fb2c 3300 	smlad	r3, ip, r0, r3
 80158f4:	fb2c 2209 	smlad	r2, ip, r9, r2
 80158f8:	fb2b aa00 	smlad	sl, fp, r0, sl
 80158fc:	fb2b 1909 	smlad	r9, fp, r9, r1
 8015900:	3e01      	subs	r6, #1
 8015902:	d1a7      	bne.n	8015854 <arm_nn_mat_mult_kernel_s4_s16+0x3d4>
 8015904:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015906:	9901      	ldr	r1, [sp, #4]
 8015908:	4401      	add	r1, r0
 801590a:	9101      	str	r1, [sp, #4]
 801590c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801590e:	4401      	add	r1, r0
 8015910:	9109      	str	r1, [sp, #36]	; 0x24
 8015912:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015914:	9906      	ldr	r1, [sp, #24]
 8015916:	4401      	add	r1, r0
 8015918:	9106      	str	r1, [sp, #24]
 801591a:	990a      	ldr	r1, [sp, #40]	; 0x28
 801591c:	4401      	add	r1, r0
 801591e:	910a      	str	r1, [sp, #40]	; 0x28
 8015920:	9910      	ldr	r1, [sp, #64]	; 0x40
 8015922:	b339      	cbz	r1, 8015974 <arm_nn_mat_mult_kernel_s4_s16+0x4f4>
 8015924:	9801      	ldr	r0, [sp, #4]
 8015926:	9909      	ldr	r1, [sp, #36]	; 0x24
 8015928:	9d06      	ldr	r5, [sp, #24]
 801592a:	f991 4000 	ldrsb.w	r4, [r1]
 801592e:	f910 1b01 	ldrsb.w	r1, [r0], #1
 8015932:	f9b5 6002 	ldrsh.w	r6, [r5, #2]
 8015936:	9001      	str	r0, [sp, #4]
 8015938:	f9b5 0000 	ldrsh.w	r0, [r5]
 801593c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801593e:	f9b5 7000 	ldrsh.w	r7, [r5]
 8015942:	f9b5 8002 	ldrsh.w	r8, [r5, #2]
 8015946:	f341 0503 	sbfx	r5, r1, #0, #4
 801594a:	fb10 3305 	smlabb	r3, r0, r5, r3
 801594e:	1109      	asrs	r1, r1, #4
 8015950:	fb17 2205 	smlabb	r2, r7, r5, r2
 8015954:	fb16 3301 	smlabb	r3, r6, r1, r3
 8015958:	fb18 2201 	smlabb	r2, r8, r1, r2
 801595c:	f344 0103 	sbfx	r1, r4, #0, #4
 8015960:	fb10 a001 	smlabb	r0, r0, r1, sl
 8015964:	ea4f 1c24 	mov.w	ip, r4, asr #4
 8015968:	fb17 9101 	smlabb	r1, r7, r1, r9
 801596c:	fb16 0a0c 	smlabb	sl, r6, ip, r0
 8015970:	fb18 190c 	smlabb	r9, r8, ip, r1
 8015974:	9904      	ldr	r1, [sp, #16]
 8015976:	f851 4c0c 	ldr.w	r4, [r1, #-12]
 801597a:	9905      	ldr	r1, [sp, #20]
 801597c:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8015980:	f851 1c0c 	ldr.w	r1, [r1, #-12]
 8015984:	4083      	lsls	r3, r0
 8015986:	2500      	movs	r5, #0
 8015988:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 801598c:	fbc3 0501 	smlal	r0, r5, r3, r1
 8015990:	0fc0      	lsrs	r0, r0, #31
 8015992:	2c00      	cmp	r4, #0
 8015994:	ea40 0545 	orr.w	r5, r0, r5, lsl #1
 8015998:	dc0d      	bgt.n	80159b6 <arm_nn_mat_mult_kernel_s4_s16+0x536>
 801599a:	4264      	negs	r4, r4
 801599c:	2301      	movs	r3, #1
 801599e:	40a3      	lsls	r3, r4
 80159a0:	3b01      	subs	r3, #1
 80159a2:	ea05 0103 	and.w	r1, r5, r3
 80159a6:	4125      	asrs	r5, r4
 80159a8:	ea4f 0363 	mov.w	r3, r3, asr #1
 80159ac:	bf48      	it	mi
 80159ae:	3301      	addmi	r3, #1
 80159b0:	4299      	cmp	r1, r3
 80159b2:	bfc8      	it	gt
 80159b4:	3501      	addgt	r5, #1
 80159b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80159b8:	441d      	add	r5, r3
 80159ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80159bc:	429d      	cmp	r5, r3
 80159be:	bfb8      	it	lt
 80159c0:	461d      	movlt	r5, r3
 80159c2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80159c4:	429d      	cmp	r5, r3
 80159c6:	bfa8      	it	ge
 80159c8:	461d      	movge	r5, r3
 80159ca:	9b07      	ldr	r3, [sp, #28]
 80159cc:	f803 5c03 	strb.w	r5, [r3, #-3]
 80159d0:	9b04      	ldr	r3, [sp, #16]
 80159d2:	f853 0c0c 	ldr.w	r0, [r3, #-12]
 80159d6:	9b05      	ldr	r3, [sp, #20]
 80159d8:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 80159dc:	f853 3c0c 	ldr.w	r3, [r3, #-12]
 80159e0:	408a      	lsls	r2, r1
 80159e2:	2400      	movs	r4, #0
 80159e4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80159e8:	fbc2 1403 	smlal	r1, r4, r2, r3
 80159ec:	0fc9      	lsrs	r1, r1, #31
 80159ee:	2800      	cmp	r0, #0
 80159f0:	ea41 0444 	orr.w	r4, r1, r4, lsl #1
 80159f4:	dc0d      	bgt.n	8015a12 <arm_nn_mat_mult_kernel_s4_s16+0x592>
 80159f6:	4240      	negs	r0, r0
 80159f8:	2301      	movs	r3, #1
 80159fa:	4083      	lsls	r3, r0
 80159fc:	3b01      	subs	r3, #1
 80159fe:	ea04 0203 	and.w	r2, r4, r3
 8015a02:	4104      	asrs	r4, r0
 8015a04:	ea4f 0363 	mov.w	r3, r3, asr #1
 8015a08:	bf48      	it	mi
 8015a0a:	3301      	addmi	r3, #1
 8015a0c:	429a      	cmp	r2, r3
 8015a0e:	bfc8      	it	gt
 8015a10:	3401      	addgt	r4, #1
 8015a12:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015a14:	441c      	add	r4, r3
 8015a16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015a18:	429c      	cmp	r4, r3
 8015a1a:	bfb8      	it	lt
 8015a1c:	461c      	movlt	r4, r3
 8015a1e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a20:	429c      	cmp	r4, r3
 8015a22:	bfa8      	it	ge
 8015a24:	461c      	movge	r4, r3
 8015a26:	9b08      	ldr	r3, [sp, #32]
 8015a28:	f803 4c03 	strb.w	r4, [r3, #-3]
 8015a2c:	9b04      	ldr	r3, [sp, #16]
 8015a2e:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8015a32:	9b05      	ldr	r3, [sp, #20]
 8015a34:	ea21 70e1 	bic.w	r0, r1, r1, asr #31
 8015a38:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8015a3c:	fa0a f000 	lsl.w	r0, sl, r0
 8015a40:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8015a44:	2400      	movs	r4, #0
 8015a46:	fbc0 2403 	smlal	r2, r4, r0, r3
 8015a4a:	0fd2      	lsrs	r2, r2, #31
 8015a4c:	2900      	cmp	r1, #0
 8015a4e:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 8015a52:	dc0d      	bgt.n	8015a70 <arm_nn_mat_mult_kernel_s4_s16+0x5f0>
 8015a54:	4249      	negs	r1, r1
 8015a56:	2301      	movs	r3, #1
 8015a58:	408b      	lsls	r3, r1
 8015a5a:	3b01      	subs	r3, #1
 8015a5c:	ea04 0203 	and.w	r2, r4, r3
 8015a60:	410c      	asrs	r4, r1
 8015a62:	ea4f 0363 	mov.w	r3, r3, asr #1
 8015a66:	bf48      	it	mi
 8015a68:	3301      	addmi	r3, #1
 8015a6a:	429a      	cmp	r2, r3
 8015a6c:	bfc8      	it	gt
 8015a6e:	3401      	addgt	r4, #1
 8015a70:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015a72:	441c      	add	r4, r3
 8015a74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015a76:	429c      	cmp	r4, r3
 8015a78:	bfb8      	it	lt
 8015a7a:	461c      	movlt	r4, r3
 8015a7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015a7e:	429c      	cmp	r4, r3
 8015a80:	bfa8      	it	ge
 8015a82:	461c      	movge	r4, r3
 8015a84:	9b07      	ldr	r3, [sp, #28]
 8015a86:	f803 4c01 	strb.w	r4, [r3, #-1]
 8015a8a:	9b04      	ldr	r3, [sp, #16]
 8015a8c:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8015a90:	9b05      	ldr	r3, [sp, #20]
 8015a92:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8015a96:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8015a9a:	fa09 f101 	lsl.w	r1, r9, r1
 8015a9e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8015aa2:	2400      	movs	r4, #0
 8015aa4:	fbc1 2403 	smlal	r2, r4, r1, r3
 8015aa8:	0fd2      	lsrs	r2, r2, #31
 8015aaa:	2800      	cmp	r0, #0
 8015aac:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 8015ab0:	dc0d      	bgt.n	8015ace <arm_nn_mat_mult_kernel_s4_s16+0x64e>
 8015ab2:	4240      	negs	r0, r0
 8015ab4:	2301      	movs	r3, #1
 8015ab6:	4083      	lsls	r3, r0
 8015ab8:	3b01      	subs	r3, #1
 8015aba:	ea04 0203 	and.w	r2, r4, r3
 8015abe:	4104      	asrs	r4, r0
 8015ac0:	ea4f 0363 	mov.w	r3, r3, asr #1
 8015ac4:	bf48      	it	mi
 8015ac6:	3301      	addmi	r3, #1
 8015ac8:	429a      	cmp	r2, r3
 8015aca:	bfc8      	it	gt
 8015acc:	3401      	addgt	r4, #1
 8015ace:	9a01      	ldr	r2, [sp, #4]
 8015ad0:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015ad2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015ad4:	440a      	add	r2, r1
 8015ad6:	9201      	str	r2, [sp, #4]
 8015ad8:	9a07      	ldr	r2, [sp, #28]
 8015ada:	441c      	add	r4, r3
 8015adc:	3204      	adds	r2, #4
 8015ade:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015ae0:	9207      	str	r2, [sp, #28]
 8015ae2:	9a05      	ldr	r2, [sp, #20]
 8015ae4:	429c      	cmp	r4, r3
 8015ae6:	bfb8      	it	lt
 8015ae8:	461c      	movlt	r4, r3
 8015aea:	3210      	adds	r2, #16
 8015aec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015aee:	9205      	str	r2, [sp, #20]
 8015af0:	9a04      	ldr	r2, [sp, #16]
 8015af2:	429c      	cmp	r4, r3
 8015af4:	bfa8      	it	ge
 8015af6:	461c      	movge	r4, r3
 8015af8:	3210      	adds	r2, #16
 8015afa:	9b08      	ldr	r3, [sp, #32]
 8015afc:	9204      	str	r2, [sp, #16]
 8015afe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015b00:	f803 4c01 	strb.w	r4, [r3, #-1]
 8015b04:	3304      	adds	r3, #4
 8015b06:	429a      	cmp	r2, r3
 8015b08:	9308      	str	r3, [sp, #32]
 8015b0a:	f47f acfc 	bne.w	8015506 <arm_nn_mat_mult_kernel_s4_s16+0x86>
 8015b0e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015b10:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8015b12:	eb02 1203 	add.w	r2, r2, r3, lsl #4
 8015b16:	9217      	str	r2, [sp, #92]	; 0x5c
 8015b18:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8015b1a:	eb02 1203 	add.w	r2, r2, r3, lsl #4
 8015b1e:	9226      	str	r2, [sp, #152]	; 0x98
 8015b20:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015b22:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8015b26:	922c      	str	r2, [sp, #176]	; 0xb0
 8015b28:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8015b2a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8015b2e:	930d      	str	r3, [sp, #52]	; 0x34
 8015b30:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015b32:	f013 0303 	ands.w	r3, r3, #3
 8015b36:	9305      	str	r3, [sp, #20]
 8015b38:	f000 80fd 	beq.w	8015d36 <arm_nn_mat_mult_kernel_s4_s16+0x8b6>
 8015b3c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015b3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b40:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8015b44:	f002 0201 	and.w	r2, r2, #1
 8015b48:	9204      	str	r2, [sp, #16]
 8015b4a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015b4c:	9308      	str	r3, [sp, #32]
 8015b4e:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8015b52:	3302      	adds	r3, #2
 8015b54:	9207      	str	r2, [sp, #28]
 8015b56:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8015b58:	930c      	str	r3, [sp, #48]	; 0x30
 8015b5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015b5c:	3a04      	subs	r2, #4
 8015b5e:	2b00      	cmp	r3, #0
 8015b60:	9203      	str	r2, [sp, #12]
 8015b62:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8015b64:	bfb8      	it	lt
 8015b66:	3303      	addlt	r3, #3
 8015b68:	109b      	asrs	r3, r3, #2
 8015b6a:	3a04      	subs	r2, #4
 8015b6c:	9306      	str	r3, [sp, #24]
 8015b6e:	9202      	str	r2, [sp, #8]
 8015b70:	005a      	lsls	r2, r3, #1
 8015b72:	00db      	lsls	r3, r3, #3
 8015b74:	f04f 0b00 	mov.w	fp, #0
 8015b78:	920a      	str	r2, [sp, #40]	; 0x28
 8015b7a:	9309      	str	r3, [sp, #36]	; 0x24
 8015b7c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8015b7e:	2b00      	cmp	r3, #0
 8015b80:	f000 80ff 	beq.w	8015d82 <arm_nn_mat_mult_kernel_s4_s16+0x902>
 8015b84:	f853 0b04 	ldr.w	r0, [r3], #4
 8015b88:	932b      	str	r3, [sp, #172]	; 0xac
 8015b8a:	f1bb 0f01 	cmp.w	fp, #1
 8015b8e:	f000 80e2 	beq.w	8015d56 <arm_nn_mat_mult_kernel_s4_s16+0x8d6>
 8015b92:	f8dd a020 	ldr.w	sl, [sp, #32]
 8015b96:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8015b9a:	4602      	mov	r2, r0
 8015b9c:	9f06      	ldr	r7, [sp, #24]
 8015b9e:	b3cf      	cbz	r7, 8015c14 <arm_nn_mat_mult_kernel_s4_s16+0x794>
 8015ba0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8015ba4:	4656      	mov	r6, sl
 8015ba6:	464d      	mov	r5, r9
 8015ba8:	f83e 3b02 	ldrh.w	r3, [lr], #2
 8015bac:	f8ad 306c 	strh.w	r3, [sp, #108]	; 0x6c
 8015bb0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015bb2:	6829      	ldr	r1, [r5, #0]
 8015bb4:	f8d6 c000 	ldr.w	ip, [r6]
 8015bb8:	ea4f 2803 	mov.w	r8, r3, lsl #8
 8015bbc:	f408 087f 	and.w	r8, r8, #16711680	; 0xff0000
 8015bc0:	b2db      	uxtb	r3, r3
 8015bc2:	ea48 0803 	orr.w	r8, r8, r3
 8015bc6:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8015bca:	fa2f f383 	sxtb16	r3, r3
 8015bce:	fa2f f888 	sxtb16	r8, r8
 8015bd2:	ea4f 1838 	mov.w	r8, r8, ror #4
 8015bd6:	ea4f 1333 	mov.w	r3, r3, ror #4
 8015bda:	fa2f f888 	sxtb16	r8, r8
 8015bde:	fa2f f383 	sxtb16	r3, r3
 8015be2:	eac8 4423 	pkhtb	r4, r8, r3, asr #16
 8015be6:	eac3 4308 	pkhbt	r3, r3, r8, lsl #16
 8015bea:	fb23 0101 	smlad	r1, r3, r1, r0
 8015bee:	fb23 230c 	smlad	r3, r3, ip, r2
 8015bf2:	6868      	ldr	r0, [r5, #4]
 8015bf4:	6872      	ldr	r2, [r6, #4]
 8015bf6:	3508      	adds	r5, #8
 8015bf8:	3608      	adds	r6, #8
 8015bfa:	fb24 1000 	smlad	r0, r4, r0, r1
 8015bfe:	fb24 3202 	smlad	r2, r4, r2, r3
 8015c02:	3f01      	subs	r7, #1
 8015c04:	d1d0      	bne.n	8015ba8 <arm_nn_mat_mult_kernel_s4_s16+0x728>
 8015c06:	9b01      	ldr	r3, [sp, #4]
 8015c08:	990a      	ldr	r1, [sp, #40]	; 0x28
 8015c0a:	440b      	add	r3, r1
 8015c0c:	9301      	str	r3, [sp, #4]
 8015c0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c10:	4499      	add	r9, r3
 8015c12:	449a      	add	sl, r3
 8015c14:	9b07      	ldr	r3, [sp, #28]
 8015c16:	b1b3      	cbz	r3, 8015c46 <arm_nn_mat_mult_kernel_s4_s16+0x7c6>
 8015c18:	9901      	ldr	r1, [sp, #4]
 8015c1a:	f8b9 6002 	ldrh.w	r6, [r9, #2]
 8015c1e:	f911 3b01 	ldrsb.w	r3, [r1], #1
 8015c22:	f8ba 5002 	ldrh.w	r5, [sl, #2]
 8015c26:	f839 4b04 	ldrh.w	r4, [r9], #4
 8015c2a:	f83a 7b04 	ldrh.w	r7, [sl], #4
 8015c2e:	9101      	str	r1, [sp, #4]
 8015c30:	f343 0103 	sbfx	r1, r3, #0, #4
 8015c34:	fb14 0001 	smlabb	r0, r4, r1, r0
 8015c38:	111b      	asrs	r3, r3, #4
 8015c3a:	fb17 2201 	smlabb	r2, r7, r1, r2
 8015c3e:	fb16 0003 	smlabb	r0, r6, r3, r0
 8015c42:	fb15 2203 	smlabb	r2, r5, r3, r2
 8015c46:	9b04      	ldr	r3, [sp, #16]
 8015c48:	b17b      	cbz	r3, 8015c6a <arm_nn_mat_mult_kernel_s4_s16+0x7ea>
 8015c4a:	f1bb 0f01 	cmp.w	fp, #1
 8015c4e:	d00c      	beq.n	8015c6a <arm_nn_mat_mult_kernel_s4_s16+0x7ea>
 8015c50:	9b01      	ldr	r3, [sp, #4]
 8015c52:	f8b9 1000 	ldrh.w	r1, [r9]
 8015c56:	f993 3000 	ldrsb.w	r3, [r3]
 8015c5a:	f8ba 4000 	ldrh.w	r4, [sl]
 8015c5e:	f343 0303 	sbfx	r3, r3, #0, #4
 8015c62:	fb11 0003 	smlabb	r0, r1, r3, r0
 8015c66:	fb14 2203 	smlabb	r2, r4, r3, r2
 8015c6a:	9b02      	ldr	r3, [sp, #8]
 8015c6c:	685c      	ldr	r4, [r3, #4]
 8015c6e:	9b03      	ldr	r3, [sp, #12]
 8015c70:	ea24 71e4 	bic.w	r1, r4, r4, asr #31
 8015c74:	685b      	ldr	r3, [r3, #4]
 8015c76:	4088      	lsls	r0, r1
 8015c78:	2500      	movs	r5, #0
 8015c7a:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8015c7e:	fbc0 1503 	smlal	r1, r5, r0, r3
 8015c82:	0fc9      	lsrs	r1, r1, #31
 8015c84:	2c00      	cmp	r4, #0
 8015c86:	ea41 0545 	orr.w	r5, r1, r5, lsl #1
 8015c8a:	dc0d      	bgt.n	8015ca8 <arm_nn_mat_mult_kernel_s4_s16+0x828>
 8015c8c:	4264      	negs	r4, r4
 8015c8e:	2301      	movs	r3, #1
 8015c90:	40a3      	lsls	r3, r4
 8015c92:	3b01      	subs	r3, #1
 8015c94:	ea05 0103 	and.w	r1, r5, r3
 8015c98:	4125      	asrs	r5, r4
 8015c9a:	ea4f 0363 	mov.w	r3, r3, asr #1
 8015c9e:	bf48      	it	mi
 8015ca0:	3301      	addmi	r3, #1
 8015ca2:	4299      	cmp	r1, r3
 8015ca4:	bfc8      	it	gt
 8015ca6:	3501      	addgt	r5, #1
 8015ca8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015caa:	441d      	add	r5, r3
 8015cac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015cae:	429d      	cmp	r5, r3
 8015cb0:	bfb8      	it	lt
 8015cb2:	461d      	movlt	r5, r3
 8015cb4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015cb6:	429d      	cmp	r5, r3
 8015cb8:	bfa8      	it	ge
 8015cba:	461d      	movge	r5, r3
 8015cbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015cbe:	f803 5b01 	strb.w	r5, [r3], #1
 8015cc2:	932c      	str	r3, [sp, #176]	; 0xb0
 8015cc4:	9b02      	ldr	r3, [sp, #8]
 8015cc6:	f853 1f04 	ldr.w	r1, [r3, #4]!
 8015cca:	9302      	str	r3, [sp, #8]
 8015ccc:	9b03      	ldr	r3, [sp, #12]
 8015cce:	f853 0f04 	ldr.w	r0, [r3, #4]!
 8015cd2:	9303      	str	r3, [sp, #12]
 8015cd4:	ea21 73e1 	bic.w	r3, r1, r1, asr #31
 8015cd8:	409a      	lsls	r2, r3
 8015cda:	2400      	movs	r4, #0
 8015cdc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8015ce0:	fbc2 3400 	smlal	r3, r4, r2, r0
 8015ce4:	0fdb      	lsrs	r3, r3, #31
 8015ce6:	2900      	cmp	r1, #0
 8015ce8:	ea43 0444 	orr.w	r4, r3, r4, lsl #1
 8015cec:	dc0d      	bgt.n	8015d0a <arm_nn_mat_mult_kernel_s4_s16+0x88a>
 8015cee:	4249      	negs	r1, r1
 8015cf0:	2301      	movs	r3, #1
 8015cf2:	408b      	lsls	r3, r1
 8015cf4:	3b01      	subs	r3, #1
 8015cf6:	ea04 0203 	and.w	r2, r4, r3
 8015cfa:	410c      	asrs	r4, r1
 8015cfc:	ea4f 0363 	mov.w	r3, r3, asr #1
 8015d00:	bf48      	it	mi
 8015d02:	3301      	addmi	r3, #1
 8015d04:	429a      	cmp	r2, r3
 8015d06:	bfc8      	it	gt
 8015d08:	3401      	addgt	r4, #1
 8015d0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8015d0c:	441c      	add	r4, r3
 8015d0e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015d10:	429c      	cmp	r4, r3
 8015d12:	bfb8      	it	lt
 8015d14:	461c      	movlt	r4, r3
 8015d16:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015d18:	429c      	cmp	r4, r3
 8015d1a:	bfa8      	it	ge
 8015d1c:	461c      	movge	r4, r3
 8015d1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015d20:	f803 4b01 	strb.w	r4, [r3], #1
 8015d24:	f10b 0b01 	add.w	fp, fp, #1
 8015d28:	930d      	str	r3, [sp, #52]	; 0x34
 8015d2a:	9b05      	ldr	r3, [sp, #20]
 8015d2c:	fa0f fb8b 	sxth.w	fp, fp
 8015d30:	459b      	cmp	fp, r3
 8015d32:	f6ff af23 	blt.w	8015b7c <arm_nn_mat_mult_kernel_s4_s16+0x6fc>
 8015d36:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015d38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015d3a:	4418      	add	r0, r3
 8015d3c:	b01d      	add	sp, #116	; 0x74
 8015d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d42:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015d44:	920a      	str	r2, [sp, #40]	; 0x28
 8015d46:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015d48:	9206      	str	r2, [sp, #24]
 8015d4a:	46d1      	mov	r9, sl
 8015d4c:	461a      	mov	r2, r3
 8015d4e:	e578      	b.n	8015842 <arm_nn_mat_mult_kernel_s4_s16+0x3c2>
 8015d50:	460e      	mov	r6, r1
 8015d52:	460f      	mov	r7, r1
 8015d54:	e498      	b.n	8015688 <arm_nn_mat_mult_kernel_s4_s16+0x208>
 8015d56:	9b04      	ldr	r3, [sp, #16]
 8015d58:	2b00      	cmp	r3, #0
 8015d5a:	f43f af1a 	beq.w	8015b92 <arm_nn_mat_mult_kernel_s4_s16+0x712>
 8015d5e:	9a01      	ldr	r2, [sp, #4]
 8015d60:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8015d64:	f912 3b01 	ldrsb.w	r3, [r2], #1
 8015d68:	9201      	str	r2, [sp, #4]
 8015d6a:	9a08      	ldr	r2, [sp, #32]
 8015d6c:	f939 1b02 	ldrsh.w	r1, [r9], #2
 8015d70:	8812      	ldrh	r2, [r2, #0]
 8015d72:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8015d76:	111b      	asrs	r3, r3, #4
 8015d78:	fb12 0203 	smlabb	r2, r2, r3, r0
 8015d7c:	fb01 0003 	mla	r0, r1, r3, r0
 8015d80:	e70c      	b.n	8015b9c <arm_nn_mat_mult_kernel_s4_s16+0x71c>
 8015d82:	4618      	mov	r0, r3
 8015d84:	e701      	b.n	8015b8a <arm_nn_mat_mult_kernel_s4_s16+0x70a>
 8015d86:	469a      	mov	sl, r3
 8015d88:	e546      	b.n	8015818 <arm_nn_mat_mult_kernel_s4_s16+0x398>
 8015d8a:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015d8c:	4699      	mov	r9, r3
 8015d8e:	2e00      	cmp	r6, #0
 8015d90:	f47f abcb 	bne.w	801552a <arm_nn_mat_mult_kernel_s4_s16+0xaa>
 8015d94:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015d96:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8015d98:	46ca      	mov	sl, r9
 8015d9a:	461a      	mov	r2, r3
 8015d9c:	e42e      	b.n	80155fc <arm_nn_mat_mult_kernel_s4_s16+0x17c>
 8015d9e:	bf00      	nop

08015da0 <arm_convolve_1_x_n_s8>:
 8015da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015da4:	b083      	sub	sp, #12
 8015da6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015da8:	9501      	str	r5, [sp, #4]
 8015daa:	685d      	ldr	r5, [r3, #4]
 8015dac:	2d01      	cmp	r5, #1
 8015dae:	d112      	bne.n	8015dd6 <arm_convolve_1_x_n_s8+0x36>
 8015db0:	698d      	ldr	r5, [r1, #24]
 8015db2:	2d01      	cmp	r5, #1
 8015db4:	468e      	mov	lr, r1
 8015db6:	d10e      	bne.n	8015dd6 <arm_convolve_1_x_n_s8+0x36>
 8015db8:	6804      	ldr	r4, [r0, #0]
 8015dba:	b164      	cbz	r4, 8015dd6 <arm_convolve_1_x_n_s8+0x36>
 8015dbc:	688c      	ldr	r4, [r1, #8]
 8015dbe:	b154      	cbz	r4, 8015dd6 <arm_convolve_1_x_n_s8+0x36>
 8015dc0:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8015dc4:	fb0c f404 	mul.w	r4, ip, r4
 8015dc8:	07a4      	lsls	r4, r4, #30
 8015dca:	d104      	bne.n	8015dd6 <arm_convolve_1_x_n_s8+0x36>
 8015dcc:	b003      	add	sp, #12
 8015dce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dd2:	f000 b883 	b.w	8015edc <arm_convolve_s8>
 8015dd6:	f04f 30ff 	mov.w	r0, #4294967295
 8015dda:	b003      	add	sp, #12
 8015ddc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015de0 <arm_convolve_1x1_s8>:
 8015de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015de4:	460c      	mov	r4, r1
 8015de6:	b095      	sub	sp, #84	; 0x54
 8015de8:	469e      	mov	lr, r3
 8015dea:	6923      	ldr	r3, [r4, #16]
 8015dec:	9920      	ldr	r1, [sp, #128]	; 0x80
 8015dee:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8015df0:	4690      	mov	r8, r2
 8015df2:	e9dd 2022 	ldrd	r2, r0, [sp, #136]	; 0x88
 8015df6:	2b00      	cmp	r3, #0
 8015df8:	d16c      	bne.n	8015ed4 <arm_convolve_1x1_s8+0xf4>
 8015dfa:	6967      	ldr	r7, [r4, #20]
 8015dfc:	2f00      	cmp	r7, #0
 8015dfe:	d169      	bne.n	8015ed4 <arm_convolve_1x1_s8+0xf4>
 8015e00:	68e3      	ldr	r3, [r4, #12]
 8015e02:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015e06:	f8d0 900c 	ldr.w	r9, [r0, #12]
 8015e0a:	f8d0 a004 	ldr.w	sl, [r0, #4]
 8015e0e:	f8cd e044 	str.w	lr, [sp, #68]	; 0x44
 8015e12:	fb05 fc03 	mul.w	ip, r5, r3
 8015e16:	6883      	ldr	r3, [r0, #8]
 8015e18:	930d      	str	r3, [sp, #52]	; 0x34
 8015e1a:	f8de 300c 	ldr.w	r3, [lr, #12]
 8015e1e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8015e20:	930c      	str	r3, [sp, #48]	; 0x30
 8015e22:	fb03 fb0c 	mul.w	fp, r3, ip
 8015e26:	f8de 3000 	ldr.w	r3, [lr]
 8015e2a:	9312      	str	r3, [sp, #72]	; 0x48
 8015e2c:	fb09 f000 	mul.w	r0, r9, r0
 8015e30:	900e      	str	r0, [sp, #56]	; 0x38
 8015e32:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015e34:	68a3      	ldr	r3, [r4, #8]
 8015e36:	2800      	cmp	r0, #0
 8015e38:	dd48      	ble.n	8015ecc <arm_convolve_1x1_s8+0xec>
 8015e3a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8015e3c:	9713      	str	r7, [sp, #76]	; 0x4c
 8015e3e:	fb00 f303 	mul.w	r3, r0, r3
 8015e42:	930f      	str	r3, [sp, #60]	; 0x3c
 8015e44:	9710      	str	r7, [sp, #64]	; 0x40
 8015e46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e48:	981e      	ldr	r0, [sp, #120]	; 0x78
 8015e4a:	fb03 f505 	mul.w	r5, r3, r5
 8015e4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015e50:	685b      	ldr	r3, [r3, #4]
 8015e52:	f1ba 0f00 	cmp.w	sl, #0
 8015e56:	fb03 0505 	mla	r5, r3, r5, r0
 8015e5a:	dd2a      	ble.n	8015eb2 <arm_convolve_1x1_s8+0xd2>
 8015e5c:	2700      	movs	r7, #0
 8015e5e:	e003      	b.n	8015e68 <arm_convolve_1x1_s8+0x88>
 8015e60:	45ba      	cmp	sl, r7
 8015e62:	9920      	ldr	r1, [sp, #128]	; 0x80
 8015e64:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015e66:	d024      	beq.n	8015eb2 <arm_convolve_1x1_s8+0xd2>
 8015e68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015e6a:	9308      	str	r3, [sp, #32]
 8015e6c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015e6e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015e70:	9222      	str	r2, [sp, #136]	; 0x88
 8015e72:	e9cd 9309 	strd	r9, r3, [sp, #36]	; 0x24
 8015e76:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015e78:	9120      	str	r1, [sp, #128]	; 0x80
 8015e7a:	e9cd 9303 	strd	r9, r3, [sp, #12]
 8015e7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015e80:	9302      	str	r3, [sp, #8]
 8015e82:	6a23      	ldr	r3, [r4, #32]
 8015e84:	9307      	str	r3, [sp, #28]
 8015e86:	6863      	ldr	r3, [r4, #4]
 8015e88:	9306      	str	r3, [sp, #24]
 8015e8a:	6823      	ldr	r3, [r4, #0]
 8015e8c:	9305      	str	r3, [sp, #20]
 8015e8e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8015e92:	9301      	str	r3, [sp, #4]
 8015e94:	f8d8 3000 	ldr.w	r3, [r8]
 8015e98:	9300      	str	r3, [sp, #0]
 8015e9a:	4633      	mov	r3, r6
 8015e9c:	4406      	add	r6, r0
 8015e9e:	4628      	mov	r0, r5
 8015ea0:	3701      	adds	r7, #1
 8015ea2:	445d      	add	r5, fp
 8015ea4:	f7fd f9e8 	bl	8013278 <arm_nn_mat_mult_nt_t_s8>
 8015ea8:	2800      	cmp	r0, #0
 8015eaa:	d0d9      	beq.n	8015e60 <arm_convolve_1x1_s8+0x80>
 8015eac:	b015      	add	sp, #84	; 0x54
 8015eae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015eb2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015eb4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8015eb6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015eb8:	4428      	add	r0, r5
 8015eba:	9010      	str	r0, [sp, #64]	; 0x40
 8015ebc:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015ebe:	3301      	adds	r3, #1
 8015ec0:	4298      	cmp	r0, r3
 8015ec2:	9313      	str	r3, [sp, #76]	; 0x4c
 8015ec4:	d002      	beq.n	8015ecc <arm_convolve_1x1_s8+0xec>
 8015ec6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015ec8:	689d      	ldr	r5, [r3, #8]
 8015eca:	e7bc      	b.n	8015e46 <arm_convolve_1x1_s8+0x66>
 8015ecc:	2000      	movs	r0, #0
 8015ece:	b015      	add	sp, #84	; 0x54
 8015ed0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ed4:	f04f 30ff 	mov.w	r0, #4294967295
 8015ed8:	e7e8      	b.n	8015eac <arm_convolve_1x1_s8+0xcc>
 8015eda:	bf00      	nop

08015edc <arm_convolve_s8>:
 8015edc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ee0:	ed2d 8b04 	vpush	{d8-d9}
 8015ee4:	6800      	ldr	r0, [r0, #0]
 8015ee6:	b0c7      	sub	sp, #284	; 0x11c
 8015ee8:	9e55      	ldr	r6, [sp, #340]	; 0x154
 8015eea:	9c59      	ldr	r4, [sp, #356]	; 0x164
 8015eec:	9022      	str	r0, [sp, #136]	; 0x88
 8015eee:	2800      	cmp	r0, #0
 8015ef0:	f000 8272 	beq.w	80163d8 <arm_convolve_s8+0x4fc>
 8015ef4:	68f5      	ldr	r5, [r6, #12]
 8015ef6:	68d8      	ldr	r0, [r3, #12]
 8015ef8:	f8b6 9008 	ldrh.w	r9, [r6, #8]
 8015efc:	88b6      	ldrh	r6, [r6, #4]
 8015efe:	9610      	str	r6, [sp, #64]	; 0x40
 8015f00:	b287      	uxth	r7, r0
 8015f02:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015f04:	68e6      	ldr	r6, [r4, #12]
 8015f06:	9631      	str	r6, [sp, #196]	; 0xc4
 8015f08:	fa1f f885 	uxth.w	r8, r5
 8015f0c:	fb00 f009 	mul.w	r0, r0, r9
 8015f10:	b2ae      	uxth	r6, r5
 8015f12:	fb08 f000 	mul.w	r0, r8, r0
 8015f16:	f8bd 50c4 	ldrh.w	r5, [sp, #196]	; 0xc4
 8015f1a:	fbb7 f6f6 	udiv	r6, r7, r6
 8015f1e:	9735      	str	r7, [sp, #212]	; 0xd4
 8015f20:	901b      	str	r0, [sp, #108]	; 0x6c
 8015f22:	9625      	str	r6, [sp, #148]	; 0x94
 8015f24:	fbb7 f0f6 	udiv	r0, r7, r6
 8015f28:	952d      	str	r5, [sp, #180]	; 0xb4
 8015f2a:	fb06 7010 	mls	r0, r6, r0, r7
 8015f2e:	681f      	ldr	r7, [r3, #0]
 8015f30:	9733      	str	r7, [sp, #204]	; 0xcc
 8015f32:	e9d3 6501 	ldrd	r6, r5, [r3, #4]
 8015f36:	690b      	ldr	r3, [r1, #16]
 8015f38:	933a      	str	r3, [sp, #232]	; 0xe8
 8015f3a:	694b      	ldr	r3, [r1, #20]
 8015f3c:	933b      	str	r3, [sp, #236]	; 0xec
 8015f3e:	e9d1 7302 	ldrd	r7, r3, [r1, #8]
 8015f42:	933c      	str	r3, [sp, #240]	; 0xf0
 8015f44:	e9d1 a306 	ldrd	sl, r3, [r1, #24]
 8015f48:	9311      	str	r3, [sp, #68]	; 0x44
 8015f4a:	684b      	ldr	r3, [r1, #4]
 8015f4c:	932a      	str	r3, [sp, #168]	; 0xa8
 8015f4e:	6a0b      	ldr	r3, [r1, #32]
 8015f50:	e9d4 4c01 	ldrd	r4, ip, [r4, #4]
 8015f54:	932b      	str	r3, [sp, #172]	; 0xac
 8015f56:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8015f58:	932c      	str	r3, [sp, #176]	; 0xb0
 8015f5a:	680b      	ldr	r3, [r1, #0]
 8015f5c:	9334      	str	r3, [sp, #208]	; 0xd0
 8015f5e:	6813      	ldr	r3, [r2, #0]
 8015f60:	933e      	str	r3, [sp, #248]	; 0xf8
 8015f62:	6853      	ldr	r3, [r2, #4]
 8015f64:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015f66:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8015f68:	933f      	str	r3, [sp, #252]	; 0xfc
 8015f6a:	fbb1 f3f2 	udiv	r3, r1, r2
 8015f6e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015f70:	2800      	cmp	r0, #0
 8015f72:	f040 8231 	bne.w	80163d8 <arm_convolve_s8+0x4fc>
 8015f76:	fb02 1213 	mls	r2, r2, r3, r1
 8015f7a:	2a00      	cmp	r2, #0
 8015f7c:	f040 822c 	bne.w	80163d8 <arm_convolve_s8+0x4fc>
 8015f80:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015f82:	f011 0203 	ands.w	r2, r1, #3
 8015f86:	bf1a      	itte	ne
 8015f88:	3104      	addne	r1, #4
 8015f8a:	1a8b      	subne	r3, r1, r2
 8015f8c:	460b      	moveq	r3, r1
 8015f8e:	9328      	str	r3, [sp, #160]	; 0xa0
 8015f90:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8015f92:	2b00      	cmp	r3, #0
 8015f94:	f340 812f 	ble.w	80161f6 <arm_convolve_s8+0x31a>
 8015f98:	b2a9      	uxth	r1, r5
 8015f9a:	b2a5      	uxth	r5, r4
 8015f9c:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 8015f9e:	9113      	str	r1, [sp, #76]	; 0x4c
 8015fa0:	b2b0      	uxth	r0, r6
 8015fa2:	fa1f f38c 	uxth.w	r3, ip
 8015fa6:	b2be      	uxth	r6, r7
 8015fa8:	9015      	str	r0, [sp, #84]	; 0x54
 8015faa:	f3c4 078f 	ubfx	r7, r4, #2, #16
 8015fae:	460c      	mov	r4, r1
 8015fb0:	fb00 f101 	mul.w	r1, r0, r1
 8015fb4:	9835      	ldr	r0, [sp, #212]	; 0xd4
 8015fb6:	931c      	str	r3, [sp, #112]	; 0x70
 8015fb8:	9741      	str	r7, [sp, #260]	; 0x104
 8015fba:	1e7b      	subs	r3, r7, #1
 8015fbc:	fb00 f701 	mul.w	r7, r0, r1
 8015fc0:	991c      	ldr	r1, [sp, #112]	; 0x70
 8015fc2:	9539      	str	r5, [sp, #228]	; 0xe4
 8015fc4:	fb05 f101 	mul.w	r1, r5, r1
 8015fc8:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8015fca:	9742      	str	r7, [sp, #264]	; 0x108
 8015fcc:	fb05 f101 	mul.w	r1, r5, r1
 8015fd0:	9143      	str	r1, [sp, #268]	; 0x10c
 8015fd2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015fd4:	961e      	str	r6, [sp, #120]	; 0x78
 8015fd6:	4621      	mov	r1, r4
 8015fd8:	fb00 f101 	mul.w	r1, r0, r1
 8015fdc:	fb05 f101 	mul.w	r1, r5, r1
 8015fe0:	9112      	str	r1, [sp, #72]	; 0x48
 8015fe2:	1e51      	subs	r1, r2, #1
 8015fe4:	b292      	uxth	r2, r2
 8015fe6:	9237      	str	r2, [sp, #220]	; 0xdc
 8015fe8:	b28a      	uxth	r2, r1
 8015fea:	9244      	str	r2, [sp, #272]	; 0x110
 8015fec:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8015fee:	9c1b      	ldr	r4, [sp, #108]	; 0x6c
 8015ff0:	4252      	negs	r2, r2
 8015ff2:	b257      	sxtb	r7, r2
 8015ff4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8015ff6:	0051      	lsls	r1, r2, #1
 8015ff8:	9123      	str	r1, [sp, #140]	; 0x8c
 8015ffa:	9922      	ldr	r1, [sp, #136]	; 0x88
 8015ffc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8016000:	9226      	str	r2, [sp, #152]	; 0x98
 8016002:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016004:	fb04 f402 	mul.w	r4, r4, r2
 8016008:	0092      	lsls	r2, r2, #2
 801600a:	9232      	str	r2, [sp, #200]	; 0xc8
 801600c:	fb00 f206 	mul.w	r2, r0, r6
 8016010:	b29b      	uxth	r3, r3
 8016012:	921d      	str	r2, [sp, #116]	; 0x74
 8016014:	fb08 f209 	mul.w	r2, r8, r9
 8016018:	3301      	adds	r3, #1
 801601a:	9214      	str	r2, [sp, #80]	; 0x50
 801601c:	fb0a f200 	mul.w	r2, sl, r0
 8016020:	920b      	str	r2, [sp, #44]	; 0x2c
 8016022:	009a      	lsls	r2, r3, #2
 8016024:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 8016028:	933d      	str	r3, [sp, #244]	; 0xf4
 801602a:	2300      	movs	r3, #0
 801602c:	46d3      	mov	fp, sl
 801602e:	9440      	str	r4, [sp, #256]	; 0x100
 8016030:	46ca      	mov	sl, r9
 8016032:	9245      	str	r2, [sp, #276]	; 0x114
 8016034:	9336      	str	r3, [sp, #216]	; 0xd8
 8016036:	46c1      	mov	r9, r8
 8016038:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801603a:	2b00      	cmp	r3, #0
 801603c:	f000 80cc 	beq.w	80161d8 <arm_convolve_s8+0x2fc>
 8016040:	9a5a      	ldr	r2, [sp, #360]	; 0x168
 8016042:	922e      	str	r2, [sp, #184]	; 0xb8
 8016044:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8016046:	ee09 2a10 	vmov	s18, r2
 801604a:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 801604c:	9227      	str	r2, [sp, #156]	; 0x9c
 801604e:	9a58      	ldr	r2, [sp, #352]	; 0x160
 8016050:	9224      	str	r2, [sp, #144]	; 0x90
 8016052:	9a56      	ldr	r2, [sp, #344]	; 0x158
 8016054:	ee08 2a90 	vmov	s17, r2
 8016058:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801605a:	9218      	str	r2, [sp, #96]	; 0x60
 801605c:	2300      	movs	r3, #0
 801605e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016060:	9338      	str	r3, [sp, #224]	; 0xe0
 8016062:	920d      	str	r2, [sp, #52]	; 0x34
 8016064:	932f      	str	r3, [sp, #188]	; 0xbc
 8016066:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016068:	9321      	str	r3, [sp, #132]	; 0x84
 801606a:	9b39      	ldr	r3, [sp, #228]	; 0xe4
 801606c:	2b00      	cmp	r3, #0
 801606e:	f000 81a3 	beq.w	80163b8 <arm_convolve_s8+0x4dc>
 8016072:	2300      	movs	r3, #0
 8016074:	9330      	str	r3, [sp, #192]	; 0xc0
 8016076:	9319      	str	r3, [sp, #100]	; 0x64
 8016078:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801607a:	2b00      	cmp	r3, #0
 801607c:	d07d      	beq.n	801617a <arm_convolve_s8+0x29e>
 801607e:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8016080:	f8bd 30f0 	ldrh.w	r3, [sp, #240]	; 0xf0
 8016084:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8016086:	9835      	ldr	r0, [sp, #212]	; 0xd4
 8016088:	fb02 f303 	mul.w	r3, r2, r3
 801608c:	f8bd 20ec 	ldrh.w	r2, [sp, #236]	; 0xec
 8016090:	1a9b      	subs	r3, r3, r2
 8016092:	f8bd 20e8 	ldrh.w	r2, [sp, #232]	; 0xe8
 8016096:	9320      	str	r3, [sp, #128]	; 0x80
 8016098:	fb03 f301 	mul.w	r3, r3, r1
 801609c:	992f      	ldr	r1, [sp, #188]	; 0xbc
 801609e:	1a9b      	subs	r3, r3, r2
 80160a0:	fb00 1303 	mla	r3, r0, r3, r1
 80160a4:	9954      	ldr	r1, [sp, #336]	; 0x150
 80160a6:	18cb      	adds	r3, r1, r3
 80160a8:	9317      	str	r3, [sp, #92]	; 0x5c
 80160aa:	4253      	negs	r3, r2
 80160ac:	9316      	str	r3, [sp, #88]	; 0x58
 80160ae:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80160b0:	425b      	negs	r3, r3
 80160b2:	931f      	str	r3, [sp, #124]	; 0x7c
 80160b4:	f9bd 30d0 	ldrsh.w	r3, [sp, #208]	; 0xd0
 80160b8:	ee08 3a10 	vmov	s16, r3
 80160bc:	2300      	movs	r3, #0
 80160be:	46b8      	mov	r8, r7
 80160c0:	931a      	str	r3, [sp, #104]	; 0x68
 80160c2:	4657      	mov	r7, sl
 80160c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80160c6:	2b00      	cmp	r3, #0
 80160c8:	d034      	beq.n	8016134 <arm_convolve_s8+0x258>
 80160ca:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80160cc:	930e      	str	r3, [sp, #56]	; 0x38
 80160ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80160d0:	930c      	str	r3, [sp, #48]	; 0x30
 80160d2:	2300      	movs	r3, #0
 80160d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80160d6:	b1ff      	cbz	r7, 8016118 <arm_convolve_s8+0x23c>
 80160d8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80160da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80160dc:	4293      	cmp	r3, r2
 80160de:	f240 8090 	bls.w	8016202 <arm_convolve_s8+0x326>
 80160e2:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
 80160e6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80160e8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80160ea:	2600      	movs	r6, #0
 80160ec:	2c00      	cmp	r4, #0
 80160ee:	464a      	mov	r2, r9
 80160f0:	4641      	mov	r1, r8
 80160f2:	4628      	mov	r0, r5
 80160f4:	db03      	blt.n	80160fe <arm_convolve_s8+0x222>
 80160f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80160f8:	42a3      	cmp	r3, r4
 80160fa:	f300 808e 	bgt.w	801621a <arm_convolve_s8+0x33e>
 80160fe:	f006 fcf1 	bl	801cae4 <memset>
 8016102:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016104:	3601      	adds	r6, #1
 8016106:	42b7      	cmp	r7, r6
 8016108:	444d      	add	r5, r9
 801610a:	445c      	add	r4, fp
 801610c:	449a      	add	sl, r3
 801610e:	d1ed      	bne.n	80160ec <arm_convolve_s8+0x210>
 8016110:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016112:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016114:	4413      	add	r3, r2
 8016116:	930d      	str	r3, [sp, #52]	; 0x34
 8016118:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801611a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801611c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801611e:	440a      	add	r2, r1
 8016120:	920c      	str	r2, [sp, #48]	; 0x30
 8016122:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016124:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016126:	440a      	add	r2, r1
 8016128:	920e      	str	r2, [sp, #56]	; 0x38
 801612a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801612c:	3301      	adds	r3, #1
 801612e:	429a      	cmp	r2, r3
 8016130:	930f      	str	r3, [sp, #60]	; 0x3c
 8016132:	d1d0      	bne.n	80160d6 <arm_convolve_s8+0x1fa>
 8016134:	9d18      	ldr	r5, [sp, #96]	; 0x60
 8016136:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016138:	9c1f      	ldr	r4, [sp, #124]	; 0x7c
 801613a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801613c:	ee18 3a10 	vmov	r3, s16
 8016140:	4629      	mov	r1, r5
 8016142:	4420      	add	r0, r4
 8016144:	f004 fc16 	bl	801a974 <arm_s8_to_s16_unordered_with_offset>
 8016148:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801614a:	2a00      	cmp	r2, #0
 801614c:	d169      	bne.n	8016222 <arm_convolve_s8+0x346>
 801614e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8016150:	462b      	mov	r3, r5
 8016152:	4413      	add	r3, r2
 8016154:	9318      	str	r3, [sp, #96]	; 0x60
 8016156:	2301      	movs	r3, #1
 8016158:	9319      	str	r3, [sp, #100]	; 0x64
 801615a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 801615c:	991d      	ldr	r1, [sp, #116]	; 0x74
 801615e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016160:	440a      	add	r2, r1
 8016162:	9217      	str	r2, [sp, #92]	; 0x5c
 8016164:	991e      	ldr	r1, [sp, #120]	; 0x78
 8016166:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016168:	440a      	add	r2, r1
 801616a:	9216      	str	r2, [sp, #88]	; 0x58
 801616c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801616e:	3301      	adds	r3, #1
 8016170:	4293      	cmp	r3, r2
 8016172:	931a      	str	r3, [sp, #104]	; 0x68
 8016174:	d1a6      	bne.n	80160c4 <arm_convolve_s8+0x1e8>
 8016176:	46ba      	mov	sl, r7
 8016178:	4647      	mov	r7, r8
 801617a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801617c:	9a39      	ldr	r2, [sp, #228]	; 0xe4
 801617e:	3301      	adds	r3, #1
 8016180:	4293      	cmp	r3, r2
 8016182:	9330      	str	r3, [sp, #192]	; 0xc0
 8016184:	f6ff af78 	blt.w	8016078 <arm_convolve_s8+0x19c>
 8016188:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801618a:	2b00      	cmp	r3, #0
 801618c:	f000 8118 	beq.w	80163c0 <arm_convolve_s8+0x4e4>
 8016190:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016192:	2b00      	cmp	r3, #0
 8016194:	f040 8088 	bne.w	80162a8 <arm_convolve_s8+0x3cc>
 8016198:	ee18 2a90 	vmov	r2, s17
 801619c:	9940      	ldr	r1, [sp, #256]	; 0x100
 801619e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80161a0:	440a      	add	r2, r1
 80161a2:	ee08 2a90 	vmov	s17, r2
 80161a6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80161a8:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80161aa:	4411      	add	r1, r2
 80161ac:	9124      	str	r1, [sp, #144]	; 0x90
 80161ae:	9927      	ldr	r1, [sp, #156]	; 0x9c
 80161b0:	4411      	add	r1, r2
 80161b2:	9127      	str	r1, [sp, #156]	; 0x9c
 80161b4:	ee19 1a10 	vmov	r1, s18
 80161b8:	4411      	add	r1, r2
 80161ba:	ee09 1a10 	vmov	s18, r1
 80161be:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80161c0:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80161c2:	440a      	add	r2, r1
 80161c4:	922e      	str	r2, [sp, #184]	; 0xb8
 80161c6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80161c8:	444a      	add	r2, r9
 80161ca:	922f      	str	r2, [sp, #188]	; 0xbc
 80161cc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80161ce:	3301      	adds	r3, #1
 80161d0:	429a      	cmp	r2, r3
 80161d2:	9338      	str	r3, [sp, #224]	; 0xe0
 80161d4:	f47f af47 	bne.w	8016066 <arm_convolve_s8+0x18a>
 80161d8:	9a54      	ldr	r2, [sp, #336]	; 0x150
 80161da:	9942      	ldr	r1, [sp, #264]	; 0x108
 80161dc:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80161de:	440a      	add	r2, r1
 80161e0:	9254      	str	r2, [sp, #336]	; 0x150
 80161e2:	9943      	ldr	r1, [sp, #268]	; 0x10c
 80161e4:	9a5a      	ldr	r2, [sp, #360]	; 0x168
 80161e6:	440a      	add	r2, r1
 80161e8:	925a      	str	r2, [sp, #360]	; 0x168
 80161ea:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80161ec:	3301      	adds	r3, #1
 80161ee:	429a      	cmp	r2, r3
 80161f0:	9336      	str	r3, [sp, #216]	; 0xd8
 80161f2:	f47f af21 	bne.w	8016038 <arm_convolve_s8+0x15c>
 80161f6:	2000      	movs	r0, #0
 80161f8:	b047      	add	sp, #284	; 0x11c
 80161fa:	ecbd 8b04 	vpop	{d8-d9}
 80161fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016202:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016204:	2500      	movs	r5, #0
 8016206:	4620      	mov	r0, r4
 8016208:	3501      	adds	r5, #1
 801620a:	464a      	mov	r2, r9
 801620c:	4641      	mov	r1, r8
 801620e:	f006 fc69 	bl	801cae4 <memset>
 8016212:	42af      	cmp	r7, r5
 8016214:	444c      	add	r4, r9
 8016216:	d1f6      	bne.n	8016206 <arm_convolve_s8+0x32a>
 8016218:	e77a      	b.n	8016110 <arm_convolve_s8+0x234>
 801621a:	4651      	mov	r1, sl
 801621c:	f006 fc3a 	bl	801ca94 <memcpy>
 8016220:	e76f      	b.n	8016102 <arm_convolve_s8+0x226>
 8016222:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016224:	2b01      	cmp	r3, #1
 8016226:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016228:	d022      	beq.n	8016270 <arm_convolve_s8+0x394>
 801622a:	9308      	str	r3, [sp, #32]
 801622c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801622e:	9307      	str	r3, [sp, #28]
 8016230:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016232:	9306      	str	r3, [sp, #24]
 8016234:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016236:	9305      	str	r3, [sp, #20]
 8016238:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801623a:	9304      	str	r3, [sp, #16]
 801623c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801623e:	9301      	str	r3, [sp, #4]
 8016240:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016242:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8016244:	9300      	str	r3, [sp, #0]
 8016246:	f9bd 30b0 	ldrsh.w	r3, [sp, #176]	; 0xb0
 801624a:	9303      	str	r3, [sp, #12]
 801624c:	f9bd 30ac 	ldrsh.w	r3, [sp, #172]	; 0xac
 8016250:	9302      	str	r3, [sp, #8]
 8016252:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016254:	ee19 3a10 	vmov	r3, s18
 8016258:	ee18 0a90 	vmov	r0, s17
 801625c:	4621      	mov	r1, r4
 801625e:	f000 f8bf 	bl	80163e0 <arm_nn_mat_mult_kernel_row_offset_s8_s16>
 8016262:	2300      	movs	r3, #0
 8016264:	9319      	str	r3, [sp, #100]	; 0x64
 8016266:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016268:	9021      	str	r0, [sp, #132]	; 0x84
 801626a:	9418      	str	r4, [sp, #96]	; 0x60
 801626c:	930d      	str	r3, [sp, #52]	; 0x34
 801626e:	e774      	b.n	801615a <arm_convolve_s8+0x27e>
 8016270:	9307      	str	r3, [sp, #28]
 8016272:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016274:	9306      	str	r3, [sp, #24]
 8016276:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016278:	9305      	str	r3, [sp, #20]
 801627a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801627c:	9304      	str	r3, [sp, #16]
 801627e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016280:	9301      	str	r3, [sp, #4]
 8016282:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016284:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8016286:	9300      	str	r3, [sp, #0]
 8016288:	f9bd 30b0 	ldrsh.w	r3, [sp, #176]	; 0xb0
 801628c:	9303      	str	r3, [sp, #12]
 801628e:	f9bd 30ac 	ldrsh.w	r3, [sp, #172]	; 0xac
 8016292:	9302      	str	r3, [sp, #8]
 8016294:	f8bd 20c4 	ldrh.w	r2, [sp, #196]	; 0xc4
 8016298:	ee19 3a10 	vmov	r3, s18
 801629c:	ee18 0a90 	vmov	r0, s17
 80162a0:	4621      	mov	r1, r4
 80162a2:	f000 fb21 	bl	80168e8 <arm_nn_mat_mult_kernel_s8_s16>
 80162a6:	e7dc      	b.n	8016262 <arm_convolve_s8+0x386>
 80162a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80162aa:	2b00      	cmp	r3, #0
 80162ac:	f000 808f 	beq.w	80163ce <arm_convolve_s8+0x4f2>
 80162b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80162b2:	3b04      	subs	r3, #4
 80162b4:	930c      	str	r3, [sp, #48]	; 0x30
 80162b6:	ee19 3a10 	vmov	r3, s18
 80162ba:	f1a3 0e04 	sub.w	lr, r3, #4
 80162be:	4673      	mov	r3, lr
 80162c0:	ee18 6a90 	vmov	r6, s17
 80162c4:	46de      	mov	lr, fp
 80162c6:	f04f 0c00 	mov.w	ip, #0
 80162ca:	f04f 0801 	mov.w	r8, #1
 80162ce:	469b      	mov	fp, r3
 80162d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80162d2:	b10b      	cbz	r3, 80162d8 <arm_convolve_s8+0x3fc>
 80162d4:	f853 300c 	ldr.w	r3, [r3, ip]
 80162d8:	9a41      	ldr	r2, [sp, #260]	; 0x104
 80162da:	2a00      	cmp	r2, #0
 80162dc:	d069      	beq.n	80163b2 <arm_convolve_s8+0x4d6>
 80162de:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80162e0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80162e2:	18b4      	adds	r4, r6, r2
 80162e4:	f856 2b04 	ldr.w	r2, [r6], #4
 80162e8:	680d      	ldr	r5, [r1, #0]
 80162ea:	ea4f 2032 	mov.w	r0, r2, ror #8
 80162ee:	fa2f f282 	sxtb16	r2, r2
 80162f2:	fa2f f080 	sxtb16	r0, r0
 80162f6:	fb22 3305 	smlad	r3, r2, r5, r3
 80162fa:	684a      	ldr	r2, [r1, #4]
 80162fc:	3108      	adds	r1, #8
 80162fe:	fb20 3302 	smlad	r3, r0, r2, r3
 8016302:	42a6      	cmp	r6, r4
 8016304:	d1ee      	bne.n	80162e4 <arm_convolve_s8+0x408>
 8016306:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
 8016308:	9d37      	ldr	r5, [sp, #220]	; 0xdc
 801630a:	2d00      	cmp	r5, #0
 801630c:	d04f      	beq.n	80163ae <arm_convolve_s8+0x4d2>
 801630e:	f994 1000 	ldrsb.w	r1, [r4]
 8016312:	8810      	ldrh	r0, [r2, #0]
 8016314:	fb10 3301 	smlabb	r3, r0, r1, r3
 8016318:	9944      	ldr	r1, [sp, #272]	; 0x110
 801631a:	b159      	cbz	r1, 8016334 <arm_convolve_s8+0x458>
 801631c:	f994 1001 	ldrsb.w	r1, [r4, #1]
 8016320:	8850      	ldrh	r0, [r2, #2]
 8016322:	2d02      	cmp	r5, #2
 8016324:	fb10 3301 	smlabb	r3, r0, r1, r3
 8016328:	d004      	beq.n	8016334 <arm_convolve_s8+0x458>
 801632a:	8891      	ldrh	r1, [r2, #4]
 801632c:	f994 2002 	ldrsb.w	r2, [r4, #2]
 8016330:	fb11 3302 	smlabb	r3, r1, r2, r3
 8016334:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 8016336:	18a6      	adds	r6, r4, r2
 8016338:	990c      	ldr	r1, [sp, #48]	; 0x30
 801633a:	f85b 2f04 	ldr.w	r2, [fp, #4]!
 801633e:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8016342:	910c      	str	r1, [sp, #48]	; 0x30
 8016344:	ea22 71e2 	bic.w	r1, r2, r2, asr #31
 8016348:	fa03 f101 	lsl.w	r1, r3, r1
 801634c:	2400      	movs	r4, #0
 801634e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8016352:	fbc1 3400 	smlal	r3, r4, r1, r0
 8016356:	0fdb      	lsrs	r3, r3, #31
 8016358:	2a00      	cmp	r2, #0
 801635a:	ea43 0444 	orr.w	r4, r3, r4, lsl #1
 801635e:	dc0d      	bgt.n	801637c <arm_convolve_s8+0x4a0>
 8016360:	4252      	negs	r2, r2
 8016362:	fa08 f302 	lsl.w	r3, r8, r2
 8016366:	3b01      	subs	r3, #1
 8016368:	ea04 0103 	and.w	r1, r4, r3
 801636c:	4114      	asrs	r4, r2
 801636e:	ea4f 0363 	mov.w	r3, r3, asr #1
 8016372:	bf48      	it	mi
 8016374:	3301      	addmi	r3, #1
 8016376:	4299      	cmp	r1, r3
 8016378:	bfc8      	it	gt
 801637a:	3401      	addgt	r4, #1
 801637c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801637e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016380:	4423      	add	r3, r4
 8016382:	4293      	cmp	r3, r2
 8016384:	bfb8      	it	lt
 8016386:	4613      	movlt	r3, r2
 8016388:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801638a:	4293      	cmp	r3, r2
 801638c:	bfa8      	it	ge
 801638e:	4613      	movge	r3, r2
 8016390:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016392:	f802 3b01 	strb.w	r3, [r2], #1
 8016396:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8016398:	9221      	str	r2, [sp, #132]	; 0x84
 801639a:	f10c 0c04 	add.w	ip, ip, #4
 801639e:	4563      	cmp	r3, ip
 80163a0:	d196      	bne.n	80162d0 <arm_convolve_s8+0x3f4>
 80163a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80163a4:	9318      	str	r3, [sp, #96]	; 0x60
 80163a6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80163a8:	930d      	str	r3, [sp, #52]	; 0x34
 80163aa:	46f3      	mov	fp, lr
 80163ac:	e6f4      	b.n	8016198 <arm_convolve_s8+0x2bc>
 80163ae:	4626      	mov	r6, r4
 80163b0:	e7c2      	b.n	8016338 <arm_convolve_s8+0x45c>
 80163b2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80163b4:	4634      	mov	r4, r6
 80163b6:	e7a7      	b.n	8016308 <arm_convolve_s8+0x42c>
 80163b8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80163ba:	2b00      	cmp	r3, #0
 80163bc:	f47f aeec 	bne.w	8016198 <arm_convolve_s8+0x2bc>
 80163c0:	f06f 0001 	mvn.w	r0, #1
 80163c4:	b047      	add	sp, #284	; 0x11c
 80163c6:	ecbd 8b04 	vpop	{d8-d9}
 80163ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80163d0:	9318      	str	r3, [sp, #96]	; 0x60
 80163d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80163d4:	930d      	str	r3, [sp, #52]	; 0x34
 80163d6:	e6df      	b.n	8016198 <arm_convolve_s8+0x2bc>
 80163d8:	f04f 30ff 	mov.w	r0, #4294967295
 80163dc:	e7f2      	b.n	80163c4 <arm_convolve_s8+0x4e8>
 80163de:	bf00      	nop

080163e0 <arm_nn_mat_mult_kernel_row_offset_s8_s16>:
 80163e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80163e4:	b097      	sub	sp, #92	; 0x5c
 80163e6:	9312      	str	r3, [sp, #72]	; 0x48
 80163e8:	f9bd 3088 	ldrsh.w	r3, [sp, #136]	; 0x88
 80163ec:	9306      	str	r3, [sp, #24]
 80163ee:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80163f2:	9002      	str	r0, [sp, #8]
 80163f4:	9307      	str	r3, [sp, #28]
 80163f6:	e9dd 0327 	ldrd	r0, r3, [sp, #156]	; 0x9c
 80163fa:	4403      	add	r3, r0
 80163fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80163fe:	0853      	lsrs	r3, r2, #1
 8016400:	9214      	str	r2, [sp, #80]	; 0x50
 8016402:	910b      	str	r1, [sp, #44]	; 0x2c
 8016404:	9315      	str	r3, [sp, #84]	; 0x54
 8016406:	f000 819c 	beq.w	8016742 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x362>
 801640a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801640c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8016410:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8016412:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8016414:	930c      	str	r3, [sp, #48]	; 0x30
 8016416:	3a01      	subs	r2, #1
 8016418:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801641a:	b292      	uxth	r2, r2
 801641c:	2b00      	cmp	r3, #0
 801641e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8016422:	bfb8      	it	lt
 8016424:	3303      	addlt	r3, #3
 8016426:	3204      	adds	r2, #4
 8016428:	920e      	str	r2, [sp, #56]	; 0x38
 801642a:	109a      	asrs	r2, r3, #2
 801642c:	f023 0303 	bic.w	r3, r3, #3
 8016430:	930f      	str	r3, [sp, #60]	; 0x3c
 8016432:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016434:	920d      	str	r2, [sp, #52]	; 0x34
 8016436:	f003 0303 	and.w	r3, r3, #3
 801643a:	930a      	str	r3, [sp, #40]	; 0x28
 801643c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801643e:	3302      	adds	r3, #2
 8016440:	9308      	str	r3, [sp, #32]
 8016442:	1c8b      	adds	r3, r1, #2
 8016444:	9309      	str	r3, [sp, #36]	; 0x24
 8016446:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016448:	3308      	adds	r3, #8
 801644a:	9304      	str	r3, [sp, #16]
 801644c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801644e:	3308      	adds	r3, #8
 8016450:	9303      	str	r3, [sp, #12]
 8016452:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016454:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8016458:	9311      	str	r3, [sp, #68]	; 0x44
 801645a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801645c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8016460:	9310      	str	r3, [sp, #64]	; 0x40
 8016462:	9b02      	ldr	r3, [sp, #8]
 8016464:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016466:	4413      	add	r3, r2
 8016468:	9305      	str	r3, [sp, #20]
 801646a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801646c:	2b00      	cmp	r3, #0
 801646e:	f000 822d 	beq.w	80168cc <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x4ec>
 8016472:	461a      	mov	r2, r3
 8016474:	3208      	adds	r2, #8
 8016476:	f852 bc04 	ldr.w	fp, [r2, #-4]
 801647a:	9226      	str	r2, [sp, #152]	; 0x98
 801647c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801647e:	681b      	ldr	r3, [r3, #0]
 8016480:	2a00      	cmp	r2, #0
 8016482:	f000 8228 	beq.w	80168d6 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x4f6>
 8016486:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801648a:	f8dd a014 	ldr.w	sl, [sp, #20]
 801648e:	9201      	str	r2, [sp, #4]
 8016490:	e9dd 670b 	ldrd	r6, r7, [sp, #44]	; 0x2c
 8016494:	46dc      	mov	ip, fp
 8016496:	461a      	mov	r2, r3
 8016498:	46ce      	mov	lr, r9
 801649a:	f85e 0b04 	ldr.w	r0, [lr], #4
 801649e:	f85a 1b04 	ldr.w	r1, [sl], #4
 80164a2:	f8d6 9000 	ldr.w	r9, [r6]
 80164a6:	f8d7 8000 	ldr.w	r8, [r7]
 80164aa:	ea4f 2530 	mov.w	r5, r0, ror #8
 80164ae:	ea4f 2431 	mov.w	r4, r1, ror #8
 80164b2:	fa2f f080 	sxtb16	r0, r0
 80164b6:	fa2f f585 	sxtb16	r5, r5
 80164ba:	fa2f f181 	sxtb16	r1, r1
 80164be:	fa2f f484 	sxtb16	r4, r4
 80164c2:	fb20 3309 	smlad	r3, r0, r9, r3
 80164c6:	fb20 2208 	smlad	r2, r0, r8, r2
 80164ca:	fb21 bb09 	smlad	fp, r1, r9, fp
 80164ce:	fb21 cc08 	smlad	ip, r1, r8, ip
 80164d2:	6871      	ldr	r1, [r6, #4]
 80164d4:	6878      	ldr	r0, [r7, #4]
 80164d6:	3608      	adds	r6, #8
 80164d8:	3708      	adds	r7, #8
 80164da:	fb25 3301 	smlad	r3, r5, r1, r3
 80164de:	fb25 2200 	smlad	r2, r5, r0, r2
 80164e2:	fb24 bb01 	smlad	fp, r4, r1, fp
 80164e6:	fb24 cc00 	smlad	ip, r4, r0, ip
 80164ea:	9901      	ldr	r1, [sp, #4]
 80164ec:	3901      	subs	r1, #1
 80164ee:	9101      	str	r1, [sp, #4]
 80164f0:	d1d3      	bne.n	801649a <arm_nn_mat_mult_kernel_row_offset_s8_s16+0xba>
 80164f2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80164f4:	9902      	ldr	r1, [sp, #8]
 80164f6:	4401      	add	r1, r0
 80164f8:	9102      	str	r1, [sp, #8]
 80164fa:	9905      	ldr	r1, [sp, #20]
 80164fc:	4401      	add	r1, r0
 80164fe:	9105      	str	r1, [sp, #20]
 8016500:	e9dd 1010 	ldrd	r1, r0, [sp, #64]	; 0x40
 8016504:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016506:	2f00      	cmp	r7, #0
 8016508:	d03d      	beq.n	8016586 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x1a6>
 801650a:	9c02      	ldr	r4, [sp, #8]
 801650c:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016510:	f994 6000 	ldrsb.w	r6, [r4]
 8016514:	9c05      	ldr	r4, [sp, #20]
 8016516:	f994 4000 	ldrsb.w	r4, [r4]
 801651a:	fb15 3306 	smlabb	r3, r5, r6, r3
 801651e:	fb15 bb04 	smlabb	fp, r5, r4, fp
 8016522:	f9b1 5000 	ldrsh.w	r5, [r1]
 8016526:	2f01      	cmp	r7, #1
 8016528:	fb15 2206 	smlabb	r2, r5, r6, r2
 801652c:	fb15 cc04 	smlabb	ip, r5, r4, ip
 8016530:	d025      	beq.n	801657e <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x19e>
 8016532:	9c02      	ldr	r4, [sp, #8]
 8016534:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8016538:	f994 6001 	ldrsb.w	r6, [r4, #1]
 801653c:	9c05      	ldr	r4, [sp, #20]
 801653e:	f994 4001 	ldrsb.w	r4, [r4, #1]
 8016542:	fb15 3306 	smlabb	r3, r5, r6, r3
 8016546:	fb15 bb04 	smlabb	fp, r5, r4, fp
 801654a:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 801654e:	2f02      	cmp	r7, #2
 8016550:	fb15 2206 	smlabb	r2, r5, r6, r2
 8016554:	fb15 cc04 	smlabb	ip, r5, r4, ip
 8016558:	d011      	beq.n	801657e <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x19e>
 801655a:	9d05      	ldr	r5, [sp, #20]
 801655c:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8016560:	f995 4002 	ldrsb.w	r4, [r5, #2]
 8016564:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8016568:	fb10 bb04 	smlabb	fp, r0, r4, fp
 801656c:	fb11 cc04 	smlabb	ip, r1, r4, ip
 8016570:	9c02      	ldr	r4, [sp, #8]
 8016572:	f994 4002 	ldrsb.w	r4, [r4, #2]
 8016576:	fb10 3304 	smlabb	r3, r0, r4, r3
 801657a:	fb11 2204 	smlabb	r2, r1, r4, r2
 801657e:	9902      	ldr	r1, [sp, #8]
 8016580:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016582:	4401      	add	r1, r0
 8016584:	9102      	str	r1, [sp, #8]
 8016586:	9903      	ldr	r1, [sp, #12]
 8016588:	f851 4c08 	ldr.w	r4, [r1, #-8]
 801658c:	9904      	ldr	r1, [sp, #16]
 801658e:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8016592:	f851 1c08 	ldr.w	r1, [r1, #-8]
 8016596:	4083      	lsls	r3, r0
 8016598:	2500      	movs	r5, #0
 801659a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 801659e:	fbc3 0501 	smlal	r0, r5, r3, r1
 80165a2:	0fc0      	lsrs	r0, r0, #31
 80165a4:	2c00      	cmp	r4, #0
 80165a6:	ea40 0545 	orr.w	r5, r0, r5, lsl #1
 80165aa:	dc0d      	bgt.n	80165c8 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x1e8>
 80165ac:	4264      	negs	r4, r4
 80165ae:	2301      	movs	r3, #1
 80165b0:	40a3      	lsls	r3, r4
 80165b2:	3b01      	subs	r3, #1
 80165b4:	ea05 0103 	and.w	r1, r5, r3
 80165b8:	4125      	asrs	r5, r4
 80165ba:	ea4f 0363 	mov.w	r3, r3, asr #1
 80165be:	bf48      	it	mi
 80165c0:	3301      	addmi	r3, #1
 80165c2:	4299      	cmp	r1, r3
 80165c4:	bfc8      	it	gt
 80165c6:	3501      	addgt	r5, #1
 80165c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80165ca:	441d      	add	r5, r3
 80165cc:	9b06      	ldr	r3, [sp, #24]
 80165ce:	429d      	cmp	r5, r3
 80165d0:	bfb8      	it	lt
 80165d2:	461d      	movlt	r5, r3
 80165d4:	9b07      	ldr	r3, [sp, #28]
 80165d6:	429d      	cmp	r5, r3
 80165d8:	bfa8      	it	ge
 80165da:	461d      	movge	r5, r3
 80165dc:	9b08      	ldr	r3, [sp, #32]
 80165de:	f803 5c02 	strb.w	r5, [r3, #-2]
 80165e2:	9b03      	ldr	r3, [sp, #12]
 80165e4:	f853 0c08 	ldr.w	r0, [r3, #-8]
 80165e8:	9b04      	ldr	r3, [sp, #16]
 80165ea:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 80165ee:	f853 3c08 	ldr.w	r3, [r3, #-8]
 80165f2:	408a      	lsls	r2, r1
 80165f4:	2400      	movs	r4, #0
 80165f6:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80165fa:	fbc2 1403 	smlal	r1, r4, r2, r3
 80165fe:	0fc9      	lsrs	r1, r1, #31
 8016600:	2800      	cmp	r0, #0
 8016602:	ea41 0444 	orr.w	r4, r1, r4, lsl #1
 8016606:	dc0d      	bgt.n	8016624 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x244>
 8016608:	4240      	negs	r0, r0
 801660a:	2301      	movs	r3, #1
 801660c:	4083      	lsls	r3, r0
 801660e:	3b01      	subs	r3, #1
 8016610:	ea04 0203 	and.w	r2, r4, r3
 8016614:	4104      	asrs	r4, r0
 8016616:	ea4f 0363 	mov.w	r3, r3, asr #1
 801661a:	bf48      	it	mi
 801661c:	3301      	addmi	r3, #1
 801661e:	429a      	cmp	r2, r3
 8016620:	bfc8      	it	gt
 8016622:	3401      	addgt	r4, #1
 8016624:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016626:	441c      	add	r4, r3
 8016628:	9b06      	ldr	r3, [sp, #24]
 801662a:	429c      	cmp	r4, r3
 801662c:	bfb8      	it	lt
 801662e:	461c      	movlt	r4, r3
 8016630:	9b07      	ldr	r3, [sp, #28]
 8016632:	429c      	cmp	r4, r3
 8016634:	bfa8      	it	ge
 8016636:	461c      	movge	r4, r3
 8016638:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801663a:	f803 4c02 	strb.w	r4, [r3, #-2]
 801663e:	9b03      	ldr	r3, [sp, #12]
 8016640:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8016644:	9b04      	ldr	r3, [sp, #16]
 8016646:	ea21 74e1 	bic.w	r4, r1, r1, asr #31
 801664a:	f853 3c04 	ldr.w	r3, [r3, #-4]
 801664e:	fa0b f404 	lsl.w	r4, fp, r4
 8016652:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8016656:	2000      	movs	r0, #0
 8016658:	fbc4 2003 	smlal	r2, r0, r4, r3
 801665c:	0fd2      	lsrs	r2, r2, #31
 801665e:	2900      	cmp	r1, #0
 8016660:	ea42 0040 	orr.w	r0, r2, r0, lsl #1
 8016664:	dc0d      	bgt.n	8016682 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x2a2>
 8016666:	4249      	negs	r1, r1
 8016668:	2301      	movs	r3, #1
 801666a:	408b      	lsls	r3, r1
 801666c:	3b01      	subs	r3, #1
 801666e:	ea00 0203 	and.w	r2, r0, r3
 8016672:	4108      	asrs	r0, r1
 8016674:	ea4f 0363 	mov.w	r3, r3, asr #1
 8016678:	bf48      	it	mi
 801667a:	3301      	addmi	r3, #1
 801667c:	429a      	cmp	r2, r3
 801667e:	bfc8      	it	gt
 8016680:	3001      	addgt	r0, #1
 8016682:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016684:	4418      	add	r0, r3
 8016686:	9b06      	ldr	r3, [sp, #24]
 8016688:	4298      	cmp	r0, r3
 801668a:	bfb8      	it	lt
 801668c:	4618      	movlt	r0, r3
 801668e:	9b07      	ldr	r3, [sp, #28]
 8016690:	4298      	cmp	r0, r3
 8016692:	bfa8      	it	ge
 8016694:	4618      	movge	r0, r3
 8016696:	9b08      	ldr	r3, [sp, #32]
 8016698:	f803 0c01 	strb.w	r0, [r3, #-1]
 801669c:	9b03      	ldr	r3, [sp, #12]
 801669e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 80166a2:	9b04      	ldr	r3, [sp, #16]
 80166a4:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 80166a8:	f853 3c04 	ldr.w	r3, [r3, #-4]
 80166ac:	fa0c f101 	lsl.w	r1, ip, r1
 80166b0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80166b4:	2400      	movs	r4, #0
 80166b6:	fbc1 2403 	smlal	r2, r4, r1, r3
 80166ba:	0fd2      	lsrs	r2, r2, #31
 80166bc:	2800      	cmp	r0, #0
 80166be:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 80166c2:	dc0d      	bgt.n	80166e0 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x300>
 80166c4:	4240      	negs	r0, r0
 80166c6:	2301      	movs	r3, #1
 80166c8:	4083      	lsls	r3, r0
 80166ca:	3b01      	subs	r3, #1
 80166cc:	ea04 0203 	and.w	r2, r4, r3
 80166d0:	4104      	asrs	r4, r0
 80166d2:	ea4f 0363 	mov.w	r3, r3, asr #1
 80166d6:	bf48      	it	mi
 80166d8:	3301      	addmi	r3, #1
 80166da:	429a      	cmp	r2, r3
 80166dc:	bfc8      	it	gt
 80166de:	3401      	addgt	r4, #1
 80166e0:	9a02      	ldr	r2, [sp, #8]
 80166e2:	9924      	ldr	r1, [sp, #144]	; 0x90
 80166e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80166e6:	440a      	add	r2, r1
 80166e8:	9202      	str	r2, [sp, #8]
 80166ea:	9a08      	ldr	r2, [sp, #32]
 80166ec:	441c      	add	r4, r3
 80166ee:	3202      	adds	r2, #2
 80166f0:	9b06      	ldr	r3, [sp, #24]
 80166f2:	9208      	str	r2, [sp, #32]
 80166f4:	9a04      	ldr	r2, [sp, #16]
 80166f6:	429c      	cmp	r4, r3
 80166f8:	bfb8      	it	lt
 80166fa:	461c      	movlt	r4, r3
 80166fc:	3208      	adds	r2, #8
 80166fe:	9b07      	ldr	r3, [sp, #28]
 8016700:	9204      	str	r2, [sp, #16]
 8016702:	9a03      	ldr	r2, [sp, #12]
 8016704:	429c      	cmp	r4, r3
 8016706:	bfa8      	it	ge
 8016708:	461c      	movge	r4, r3
 801670a:	3208      	adds	r2, #8
 801670c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801670e:	9203      	str	r2, [sp, #12]
 8016710:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016712:	f803 4c01 	strb.w	r4, [r3, #-1]
 8016716:	3302      	adds	r3, #2
 8016718:	429a      	cmp	r2, r3
 801671a:	9309      	str	r3, [sp, #36]	; 0x24
 801671c:	f47f aea1 	bne.w	8016462 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x82>
 8016720:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016722:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016724:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8016728:	9212      	str	r2, [sp, #72]	; 0x48
 801672a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801672c:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8016730:	9220      	str	r2, [sp, #128]	; 0x80
 8016732:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8016734:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8016738:	9228      	str	r2, [sp, #160]	; 0xa0
 801673a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801673c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016740:	9313      	str	r3, [sp, #76]	; 0x4c
 8016742:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016744:	07db      	lsls	r3, r3, #31
 8016746:	f140 80b8 	bpl.w	80168ba <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x4da>
 801674a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801674c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801674e:	eb03 0842 	add.w	r8, r3, r2, lsl #1
 8016752:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016754:	2b00      	cmp	r3, #0
 8016756:	f000 80c3 	beq.w	80168e0 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x500>
 801675a:	681a      	ldr	r2, [r3, #0]
 801675c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801675e:	ea5f 0ca3 	movs.w	ip, r3, asr #2
 8016762:	f000 80bf 	beq.w	80168e4 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x504>
 8016766:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016768:	9f02      	ldr	r7, [sp, #8]
 801676a:	4645      	mov	r5, r8
 801676c:	4666      	mov	r6, ip
 801676e:	4613      	mov	r3, r2
 8016770:	f857 1b04 	ldr.w	r1, [r7], #4
 8016774:	f8d4 e000 	ldr.w	lr, [r4]
 8016778:	ea4f 2031 	mov.w	r0, r1, ror #8
 801677c:	fa2f f181 	sxtb16	r1, r1
 8016780:	fa2f f080 	sxtb16	r0, r0
 8016784:	fb21 220e 	smlad	r2, r1, lr, r2
 8016788:	f8d5 e000 	ldr.w	lr, [r5]
 801678c:	fb21 310e 	smlad	r1, r1, lr, r3
 8016790:	f8d4 e004 	ldr.w	lr, [r4, #4]
 8016794:	686b      	ldr	r3, [r5, #4]
 8016796:	3408      	adds	r4, #8
 8016798:	3508      	adds	r5, #8
 801679a:	fb20 220e 	smlad	r2, r0, lr, r2
 801679e:	fb20 1303 	smlad	r3, r0, r3, r1
 80167a2:	3e01      	subs	r6, #1
 80167a4:	d1e4      	bne.n	8016770 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x390>
 80167a6:	9902      	ldr	r1, [sp, #8]
 80167a8:	eb01 018c 	add.w	r1, r1, ip, lsl #2
 80167ac:	9102      	str	r1, [sp, #8]
 80167ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80167b0:	eb01 01cc 	add.w	r1, r1, ip, lsl #3
 80167b4:	910b      	str	r1, [sp, #44]	; 0x2c
 80167b6:	eb08 08cc 	add.w	r8, r8, ip, lsl #3
 80167ba:	9924      	ldr	r1, [sp, #144]	; 0x90
 80167bc:	f011 0103 	ands.w	r1, r1, #3
 80167c0:	d020      	beq.n	8016804 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x424>
 80167c2:	9d02      	ldr	r5, [sp, #8]
 80167c4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80167c6:	f995 0000 	ldrsb.w	r0, [r5]
 80167ca:	8834      	ldrh	r4, [r6, #0]
 80167cc:	fb14 2200 	smlabb	r2, r4, r0, r2
 80167d0:	f8b8 4000 	ldrh.w	r4, [r8]
 80167d4:	3901      	subs	r1, #1
 80167d6:	fb14 3300 	smlabb	r3, r4, r0, r3
 80167da:	d013      	beq.n	8016804 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x424>
 80167dc:	f995 0001 	ldrsb.w	r0, [r5, #1]
 80167e0:	8874      	ldrh	r4, [r6, #2]
 80167e2:	fb14 2200 	smlabb	r2, r4, r0, r2
 80167e6:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 80167ea:	2901      	cmp	r1, #1
 80167ec:	fb14 3300 	smlabb	r3, r4, r0, r3
 80167f0:	d008      	beq.n	8016804 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x424>
 80167f2:	f995 1002 	ldrsb.w	r1, [r5, #2]
 80167f6:	88b0      	ldrh	r0, [r6, #4]
 80167f8:	fb10 2201 	smlabb	r2, r0, r1, r2
 80167fc:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8016800:	fb10 3301 	smlabb	r3, r0, r1, r3
 8016804:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016806:	6808      	ldr	r0, [r1, #0]
 8016808:	9920      	ldr	r1, [sp, #128]	; 0x80
 801680a:	ea20 74e0 	bic.w	r4, r0, r0, asr #31
 801680e:	6809      	ldr	r1, [r1, #0]
 8016810:	fa02 f404 	lsl.w	r4, r2, r4
 8016814:	2500      	movs	r5, #0
 8016816:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801681a:	fbc4 2501 	smlal	r2, r5, r4, r1
 801681e:	0fd2      	lsrs	r2, r2, #31
 8016820:	2800      	cmp	r0, #0
 8016822:	ea42 0545 	orr.w	r5, r2, r5, lsl #1
 8016826:	dc0d      	bgt.n	8016844 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x464>
 8016828:	4240      	negs	r0, r0
 801682a:	2201      	movs	r2, #1
 801682c:	4082      	lsls	r2, r0
 801682e:	3a01      	subs	r2, #1
 8016830:	ea05 0102 	and.w	r1, r5, r2
 8016834:	4105      	asrs	r5, r0
 8016836:	ea4f 0262 	mov.w	r2, r2, asr #1
 801683a:	bf48      	it	mi
 801683c:	3201      	addmi	r2, #1
 801683e:	4291      	cmp	r1, r2
 8016840:	bfc8      	it	gt
 8016842:	3501      	addgt	r5, #1
 8016844:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016846:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8016848:	4415      	add	r5, r2
 801684a:	9a06      	ldr	r2, [sp, #24]
 801684c:	4295      	cmp	r5, r2
 801684e:	bfb8      	it	lt
 8016850:	4615      	movlt	r5, r2
 8016852:	9a07      	ldr	r2, [sp, #28]
 8016854:	4295      	cmp	r5, r2
 8016856:	bfa8      	it	ge
 8016858:	4615      	movge	r5, r2
 801685a:	f800 5b01 	strb.w	r5, [r0], #1
 801685e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016860:	6811      	ldr	r1, [r2, #0]
 8016862:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016864:	6815      	ldr	r5, [r2, #0]
 8016866:	ea21 72e1 	bic.w	r2, r1, r1, asr #31
 801686a:	4093      	lsls	r3, r2
 801686c:	2400      	movs	r4, #0
 801686e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8016872:	fbc3 2405 	smlal	r2, r4, r3, r5
 8016876:	0fd3      	lsrs	r3, r2, #31
 8016878:	2900      	cmp	r1, #0
 801687a:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 801687e:	dc0d      	bgt.n	801689c <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x4bc>
 8016880:	4249      	negs	r1, r1
 8016882:	2201      	movs	r2, #1
 8016884:	408a      	lsls	r2, r1
 8016886:	3a01      	subs	r2, #1
 8016888:	ea03 0402 	and.w	r4, r3, r2
 801688c:	410b      	asrs	r3, r1
 801688e:	ea4f 0262 	mov.w	r2, r2, asr #1
 8016892:	bf48      	it	mi
 8016894:	3201      	addmi	r2, #1
 8016896:	4294      	cmp	r4, r2
 8016898:	bfc8      	it	gt
 801689a:	3301      	addgt	r3, #1
 801689c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801689e:	9028      	str	r0, [sp, #160]	; 0xa0
 80168a0:	4413      	add	r3, r2
 80168a2:	9a06      	ldr	r2, [sp, #24]
 80168a4:	429a      	cmp	r2, r3
 80168a6:	bfb8      	it	lt
 80168a8:	461a      	movlt	r2, r3
 80168aa:	4613      	mov	r3, r2
 80168ac:	9a07      	ldr	r2, [sp, #28]
 80168ae:	429a      	cmp	r2, r3
 80168b0:	bfa8      	it	ge
 80168b2:	461a      	movge	r2, r3
 80168b4:	4613      	mov	r3, r2
 80168b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168b8:	7013      	strb	r3, [r2, #0]
 80168ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80168bc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80168be:	ebc3 0042 	rsb	r0, r3, r2, lsl #1
 80168c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80168c4:	4418      	add	r0, r3
 80168c6:	b017      	add	sp, #92	; 0x5c
 80168c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80168cc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80168ce:	469b      	mov	fp, r3
 80168d0:	2a00      	cmp	r2, #0
 80168d2:	f47f add8 	bne.w	8016486 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0xa6>
 80168d6:	e9dd 010b 	ldrd	r0, r1, [sp, #44]	; 0x2c
 80168da:	46dc      	mov	ip, fp
 80168dc:	461a      	mov	r2, r3
 80168de:	e611      	b.n	8016504 <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x124>
 80168e0:	461a      	mov	r2, r3
 80168e2:	e73b      	b.n	801675c <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x37c>
 80168e4:	4613      	mov	r3, r2
 80168e6:	e768      	b.n	80167ba <arm_nn_mat_mult_kernel_row_offset_s8_s16+0x3da>

080168e8 <arm_nn_mat_mult_kernel_s8_s16>:
 80168e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80168ec:	b097      	sub	sp, #92	; 0x5c
 80168ee:	9002      	str	r0, [sp, #8]
 80168f0:	f9bd 0088 	ldrsh.w	r0, [sp, #136]	; 0x88
 80168f4:	9006      	str	r0, [sp, #24]
 80168f6:	f9bd 008c 	ldrsh.w	r0, [sp, #140]	; 0x8c
 80168fa:	9007      	str	r0, [sp, #28]
 80168fc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80168fe:	9312      	str	r3, [sp, #72]	; 0x48
 8016900:	4613      	mov	r3, r2
 8016902:	9214      	str	r2, [sp, #80]	; 0x50
 8016904:	085b      	lsrs	r3, r3, #1
 8016906:	4402      	add	r2, r0
 8016908:	910b      	str	r1, [sp, #44]	; 0x2c
 801690a:	9213      	str	r2, [sp, #76]	; 0x4c
 801690c:	9315      	str	r3, [sp, #84]	; 0x54
 801690e:	f000 819c 	beq.w	8016c4a <arm_nn_mat_mult_kernel_s8_s16+0x362>
 8016912:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016914:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016916:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801691a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801691c:	930c      	str	r3, [sp, #48]	; 0x30
 801691e:	2a00      	cmp	r2, #0
 8016920:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016922:	bfb8      	it	lt
 8016924:	3203      	addlt	r2, #3
 8016926:	1091      	asrs	r1, r2, #2
 8016928:	3b01      	subs	r3, #1
 801692a:	f022 0203 	bic.w	r2, r2, #3
 801692e:	b29b      	uxth	r3, r3
 8016930:	920f      	str	r2, [sp, #60]	; 0x3c
 8016932:	1d02      	adds	r2, r0, #4
 8016934:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016938:	930e      	str	r3, [sp, #56]	; 0x38
 801693a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801693c:	910d      	str	r1, [sp, #52]	; 0x34
 801693e:	f003 0303 	and.w	r3, r3, #3
 8016942:	930a      	str	r3, [sp, #40]	; 0x28
 8016944:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016946:	3302      	adds	r3, #2
 8016948:	9308      	str	r3, [sp, #32]
 801694a:	1c83      	adds	r3, r0, #2
 801694c:	9309      	str	r3, [sp, #36]	; 0x24
 801694e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016950:	3308      	adds	r3, #8
 8016952:	9304      	str	r3, [sp, #16]
 8016954:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016956:	3308      	adds	r3, #8
 8016958:	9303      	str	r3, [sp, #12]
 801695a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801695c:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8016960:	9311      	str	r3, [sp, #68]	; 0x44
 8016962:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016964:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8016968:	9310      	str	r3, [sp, #64]	; 0x40
 801696a:	9b02      	ldr	r3, [sp, #8]
 801696c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801696e:	4413      	add	r3, r2
 8016970:	9305      	str	r3, [sp, #20]
 8016972:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016974:	2b00      	cmp	r3, #0
 8016976:	f000 822a 	beq.w	8016dce <arm_nn_mat_mult_kernel_s8_s16+0x4e6>
 801697a:	461a      	mov	r2, r3
 801697c:	3208      	adds	r2, #8
 801697e:	f852 bc04 	ldr.w	fp, [r2, #-4]
 8016982:	9226      	str	r2, [sp, #152]	; 0x98
 8016984:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016986:	681b      	ldr	r3, [r3, #0]
 8016988:	2a00      	cmp	r2, #0
 801698a:	f000 8225 	beq.w	8016dd8 <arm_nn_mat_mult_kernel_s8_s16+0x4f0>
 801698e:	f8dd 9008 	ldr.w	r9, [sp, #8]
 8016992:	f8dd a014 	ldr.w	sl, [sp, #20]
 8016996:	9201      	str	r2, [sp, #4]
 8016998:	e9dd 670b 	ldrd	r6, r7, [sp, #44]	; 0x2c
 801699c:	46dc      	mov	ip, fp
 801699e:	461a      	mov	r2, r3
 80169a0:	46ce      	mov	lr, r9
 80169a2:	f85e 0b04 	ldr.w	r0, [lr], #4
 80169a6:	f85a 1b04 	ldr.w	r1, [sl], #4
 80169aa:	f8d6 9000 	ldr.w	r9, [r6]
 80169ae:	f8d7 8000 	ldr.w	r8, [r7]
 80169b2:	ea4f 2530 	mov.w	r5, r0, ror #8
 80169b6:	ea4f 2431 	mov.w	r4, r1, ror #8
 80169ba:	fa2f f080 	sxtb16	r0, r0
 80169be:	fa2f f585 	sxtb16	r5, r5
 80169c2:	fa2f f181 	sxtb16	r1, r1
 80169c6:	fa2f f484 	sxtb16	r4, r4
 80169ca:	fb20 3309 	smlad	r3, r0, r9, r3
 80169ce:	fb20 2208 	smlad	r2, r0, r8, r2
 80169d2:	fb21 bb09 	smlad	fp, r1, r9, fp
 80169d6:	fb21 cc08 	smlad	ip, r1, r8, ip
 80169da:	6871      	ldr	r1, [r6, #4]
 80169dc:	6878      	ldr	r0, [r7, #4]
 80169de:	3608      	adds	r6, #8
 80169e0:	3708      	adds	r7, #8
 80169e2:	fb25 3301 	smlad	r3, r5, r1, r3
 80169e6:	fb25 2200 	smlad	r2, r5, r0, r2
 80169ea:	fb24 bb01 	smlad	fp, r4, r1, fp
 80169ee:	fb24 cc00 	smlad	ip, r4, r0, ip
 80169f2:	9901      	ldr	r1, [sp, #4]
 80169f4:	3901      	subs	r1, #1
 80169f6:	9101      	str	r1, [sp, #4]
 80169f8:	d1d3      	bne.n	80169a2 <arm_nn_mat_mult_kernel_s8_s16+0xba>
 80169fa:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80169fc:	9902      	ldr	r1, [sp, #8]
 80169fe:	4401      	add	r1, r0
 8016a00:	9102      	str	r1, [sp, #8]
 8016a02:	9905      	ldr	r1, [sp, #20]
 8016a04:	4401      	add	r1, r0
 8016a06:	9105      	str	r1, [sp, #20]
 8016a08:	e9dd 1010 	ldrd	r1, r0, [sp, #64]	; 0x40
 8016a0c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016a0e:	2f00      	cmp	r7, #0
 8016a10:	d03d      	beq.n	8016a8e <arm_nn_mat_mult_kernel_s8_s16+0x1a6>
 8016a12:	9c02      	ldr	r4, [sp, #8]
 8016a14:	f9b0 5000 	ldrsh.w	r5, [r0]
 8016a18:	f994 6000 	ldrsb.w	r6, [r4]
 8016a1c:	9c05      	ldr	r4, [sp, #20]
 8016a1e:	f994 4000 	ldrsb.w	r4, [r4]
 8016a22:	fb15 3306 	smlabb	r3, r5, r6, r3
 8016a26:	fb15 bb04 	smlabb	fp, r5, r4, fp
 8016a2a:	f9b1 5000 	ldrsh.w	r5, [r1]
 8016a2e:	2f01      	cmp	r7, #1
 8016a30:	fb15 2206 	smlabb	r2, r5, r6, r2
 8016a34:	fb15 cc04 	smlabb	ip, r5, r4, ip
 8016a38:	d025      	beq.n	8016a86 <arm_nn_mat_mult_kernel_s8_s16+0x19e>
 8016a3a:	9c02      	ldr	r4, [sp, #8]
 8016a3c:	f9b0 5002 	ldrsh.w	r5, [r0, #2]
 8016a40:	f994 6001 	ldrsb.w	r6, [r4, #1]
 8016a44:	9c05      	ldr	r4, [sp, #20]
 8016a46:	f994 4001 	ldrsb.w	r4, [r4, #1]
 8016a4a:	fb15 3306 	smlabb	r3, r5, r6, r3
 8016a4e:	fb15 bb04 	smlabb	fp, r5, r4, fp
 8016a52:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8016a56:	2f02      	cmp	r7, #2
 8016a58:	fb15 2206 	smlabb	r2, r5, r6, r2
 8016a5c:	fb15 cc04 	smlabb	ip, r5, r4, ip
 8016a60:	d011      	beq.n	8016a86 <arm_nn_mat_mult_kernel_s8_s16+0x19e>
 8016a62:	9d05      	ldr	r5, [sp, #20]
 8016a64:	f9b0 0004 	ldrsh.w	r0, [r0, #4]
 8016a68:	f995 4002 	ldrsb.w	r4, [r5, #2]
 8016a6c:	f9b1 1004 	ldrsh.w	r1, [r1, #4]
 8016a70:	fb10 bb04 	smlabb	fp, r0, r4, fp
 8016a74:	fb11 cc04 	smlabb	ip, r1, r4, ip
 8016a78:	9c02      	ldr	r4, [sp, #8]
 8016a7a:	f994 4002 	ldrsb.w	r4, [r4, #2]
 8016a7e:	fb10 3304 	smlabb	r3, r0, r4, r3
 8016a82:	fb11 2204 	smlabb	r2, r1, r4, r2
 8016a86:	9902      	ldr	r1, [sp, #8]
 8016a88:	980a      	ldr	r0, [sp, #40]	; 0x28
 8016a8a:	4401      	add	r1, r0
 8016a8c:	9102      	str	r1, [sp, #8]
 8016a8e:	9903      	ldr	r1, [sp, #12]
 8016a90:	f851 4c08 	ldr.w	r4, [r1, #-8]
 8016a94:	9904      	ldr	r1, [sp, #16]
 8016a96:	ea24 70e4 	bic.w	r0, r4, r4, asr #31
 8016a9a:	f851 1c08 	ldr.w	r1, [r1, #-8]
 8016a9e:	4083      	lsls	r3, r0
 8016aa0:	2500      	movs	r5, #0
 8016aa2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8016aa6:	fbc3 0501 	smlal	r0, r5, r3, r1
 8016aaa:	0fc0      	lsrs	r0, r0, #31
 8016aac:	2c00      	cmp	r4, #0
 8016aae:	ea40 0545 	orr.w	r5, r0, r5, lsl #1
 8016ab2:	dc0d      	bgt.n	8016ad0 <arm_nn_mat_mult_kernel_s8_s16+0x1e8>
 8016ab4:	4264      	negs	r4, r4
 8016ab6:	2301      	movs	r3, #1
 8016ab8:	40a3      	lsls	r3, r4
 8016aba:	3b01      	subs	r3, #1
 8016abc:	ea05 0103 	and.w	r1, r5, r3
 8016ac0:	4125      	asrs	r5, r4
 8016ac2:	ea4f 0363 	mov.w	r3, r3, asr #1
 8016ac6:	bf48      	it	mi
 8016ac8:	3301      	addmi	r3, #1
 8016aca:	4299      	cmp	r1, r3
 8016acc:	bfc8      	it	gt
 8016ace:	3501      	addgt	r5, #1
 8016ad0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016ad2:	441d      	add	r5, r3
 8016ad4:	9b06      	ldr	r3, [sp, #24]
 8016ad6:	429d      	cmp	r5, r3
 8016ad8:	bfb8      	it	lt
 8016ada:	461d      	movlt	r5, r3
 8016adc:	9b07      	ldr	r3, [sp, #28]
 8016ade:	429d      	cmp	r5, r3
 8016ae0:	bfa8      	it	ge
 8016ae2:	461d      	movge	r5, r3
 8016ae4:	9b08      	ldr	r3, [sp, #32]
 8016ae6:	f803 5c02 	strb.w	r5, [r3, #-2]
 8016aea:	9b03      	ldr	r3, [sp, #12]
 8016aec:	f853 0c08 	ldr.w	r0, [r3, #-8]
 8016af0:	9b04      	ldr	r3, [sp, #16]
 8016af2:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8016af6:	f853 3c08 	ldr.w	r3, [r3, #-8]
 8016afa:	408a      	lsls	r2, r1
 8016afc:	2400      	movs	r4, #0
 8016afe:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8016b02:	fbc2 1403 	smlal	r1, r4, r2, r3
 8016b06:	0fc9      	lsrs	r1, r1, #31
 8016b08:	2800      	cmp	r0, #0
 8016b0a:	ea41 0444 	orr.w	r4, r1, r4, lsl #1
 8016b0e:	dc0d      	bgt.n	8016b2c <arm_nn_mat_mult_kernel_s8_s16+0x244>
 8016b10:	4240      	negs	r0, r0
 8016b12:	2301      	movs	r3, #1
 8016b14:	4083      	lsls	r3, r0
 8016b16:	3b01      	subs	r3, #1
 8016b18:	ea04 0203 	and.w	r2, r4, r3
 8016b1c:	4104      	asrs	r4, r0
 8016b1e:	ea4f 0363 	mov.w	r3, r3, asr #1
 8016b22:	bf48      	it	mi
 8016b24:	3301      	addmi	r3, #1
 8016b26:	429a      	cmp	r2, r3
 8016b28:	bfc8      	it	gt
 8016b2a:	3401      	addgt	r4, #1
 8016b2c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016b2e:	441c      	add	r4, r3
 8016b30:	9b06      	ldr	r3, [sp, #24]
 8016b32:	429c      	cmp	r4, r3
 8016b34:	bfb8      	it	lt
 8016b36:	461c      	movlt	r4, r3
 8016b38:	9b07      	ldr	r3, [sp, #28]
 8016b3a:	429c      	cmp	r4, r3
 8016b3c:	bfa8      	it	ge
 8016b3e:	461c      	movge	r4, r3
 8016b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016b42:	f803 4c02 	strb.w	r4, [r3, #-2]
 8016b46:	9b03      	ldr	r3, [sp, #12]
 8016b48:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8016b4c:	9b04      	ldr	r3, [sp, #16]
 8016b4e:	ea21 74e1 	bic.w	r4, r1, r1, asr #31
 8016b52:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8016b56:	fa0b f404 	lsl.w	r4, fp, r4
 8016b5a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8016b5e:	2000      	movs	r0, #0
 8016b60:	fbc4 2003 	smlal	r2, r0, r4, r3
 8016b64:	0fd2      	lsrs	r2, r2, #31
 8016b66:	2900      	cmp	r1, #0
 8016b68:	ea42 0040 	orr.w	r0, r2, r0, lsl #1
 8016b6c:	dc0d      	bgt.n	8016b8a <arm_nn_mat_mult_kernel_s8_s16+0x2a2>
 8016b6e:	4249      	negs	r1, r1
 8016b70:	2301      	movs	r3, #1
 8016b72:	408b      	lsls	r3, r1
 8016b74:	3b01      	subs	r3, #1
 8016b76:	ea00 0203 	and.w	r2, r0, r3
 8016b7a:	4108      	asrs	r0, r1
 8016b7c:	ea4f 0363 	mov.w	r3, r3, asr #1
 8016b80:	bf48      	it	mi
 8016b82:	3301      	addmi	r3, #1
 8016b84:	429a      	cmp	r2, r3
 8016b86:	bfc8      	it	gt
 8016b88:	3001      	addgt	r0, #1
 8016b8a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016b8c:	4418      	add	r0, r3
 8016b8e:	9b06      	ldr	r3, [sp, #24]
 8016b90:	4298      	cmp	r0, r3
 8016b92:	bfb8      	it	lt
 8016b94:	4618      	movlt	r0, r3
 8016b96:	9b07      	ldr	r3, [sp, #28]
 8016b98:	4298      	cmp	r0, r3
 8016b9a:	bfa8      	it	ge
 8016b9c:	4618      	movge	r0, r3
 8016b9e:	9b08      	ldr	r3, [sp, #32]
 8016ba0:	f803 0c01 	strb.w	r0, [r3, #-1]
 8016ba4:	9b03      	ldr	r3, [sp, #12]
 8016ba6:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8016baa:	9b04      	ldr	r3, [sp, #16]
 8016bac:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 8016bb0:	f853 3c04 	ldr.w	r3, [r3, #-4]
 8016bb4:	fa0c f101 	lsl.w	r1, ip, r1
 8016bb8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8016bbc:	2400      	movs	r4, #0
 8016bbe:	fbc1 2403 	smlal	r2, r4, r1, r3
 8016bc2:	0fd2      	lsrs	r2, r2, #31
 8016bc4:	2800      	cmp	r0, #0
 8016bc6:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 8016bca:	dc0d      	bgt.n	8016be8 <arm_nn_mat_mult_kernel_s8_s16+0x300>
 8016bcc:	4240      	negs	r0, r0
 8016bce:	2301      	movs	r3, #1
 8016bd0:	4083      	lsls	r3, r0
 8016bd2:	3b01      	subs	r3, #1
 8016bd4:	ea04 0203 	and.w	r2, r4, r3
 8016bd8:	4104      	asrs	r4, r0
 8016bda:	ea4f 0363 	mov.w	r3, r3, asr #1
 8016bde:	bf48      	it	mi
 8016be0:	3301      	addmi	r3, #1
 8016be2:	429a      	cmp	r2, r3
 8016be4:	bfc8      	it	gt
 8016be6:	3401      	addgt	r4, #1
 8016be8:	9a02      	ldr	r2, [sp, #8]
 8016bea:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016bec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8016bee:	440a      	add	r2, r1
 8016bf0:	9202      	str	r2, [sp, #8]
 8016bf2:	9a08      	ldr	r2, [sp, #32]
 8016bf4:	441c      	add	r4, r3
 8016bf6:	3202      	adds	r2, #2
 8016bf8:	9b06      	ldr	r3, [sp, #24]
 8016bfa:	9208      	str	r2, [sp, #32]
 8016bfc:	9a04      	ldr	r2, [sp, #16]
 8016bfe:	429c      	cmp	r4, r3
 8016c00:	bfb8      	it	lt
 8016c02:	461c      	movlt	r4, r3
 8016c04:	3208      	adds	r2, #8
 8016c06:	9b07      	ldr	r3, [sp, #28]
 8016c08:	9204      	str	r2, [sp, #16]
 8016c0a:	9a03      	ldr	r2, [sp, #12]
 8016c0c:	429c      	cmp	r4, r3
 8016c0e:	bfa8      	it	ge
 8016c10:	461c      	movge	r4, r3
 8016c12:	3208      	adds	r2, #8
 8016c14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016c16:	9203      	str	r2, [sp, #12]
 8016c18:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016c1a:	f803 4c01 	strb.w	r4, [r3, #-1]
 8016c1e:	3302      	adds	r3, #2
 8016c20:	429a      	cmp	r2, r3
 8016c22:	9309      	str	r3, [sp, #36]	; 0x24
 8016c24:	f47f aea1 	bne.w	801696a <arm_nn_mat_mult_kernel_s8_s16+0x82>
 8016c28:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016c2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016c2c:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8016c30:	9212      	str	r2, [sp, #72]	; 0x48
 8016c32:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016c34:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8016c38:	9220      	str	r2, [sp, #128]	; 0x80
 8016c3a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016c3c:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8016c40:	9227      	str	r2, [sp, #156]	; 0x9c
 8016c42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c44:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016c48:	9313      	str	r3, [sp, #76]	; 0x4c
 8016c4a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016c4c:	07db      	lsls	r3, r3, #31
 8016c4e:	f140 80b8 	bpl.w	8016dc2 <arm_nn_mat_mult_kernel_s8_s16+0x4da>
 8016c52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016c54:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016c56:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 8016c5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016c5c:	2b00      	cmp	r3, #0
 8016c5e:	f000 80c0 	beq.w	8016de2 <arm_nn_mat_mult_kernel_s8_s16+0x4fa>
 8016c62:	681a      	ldr	r2, [r3, #0]
 8016c64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016c66:	ea5f 08a3 	movs.w	r8, r3, asr #2
 8016c6a:	f000 80bc 	beq.w	8016de6 <arm_nn_mat_mult_kernel_s8_s16+0x4fe>
 8016c6e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016c70:	f8dd c008 	ldr.w	ip, [sp, #8]
 8016c74:	463d      	mov	r5, r7
 8016c76:	4646      	mov	r6, r8
 8016c78:	4613      	mov	r3, r2
 8016c7a:	f85c 1b04 	ldr.w	r1, [ip], #4
 8016c7e:	f8d4 e000 	ldr.w	lr, [r4]
 8016c82:	ea4f 2031 	mov.w	r0, r1, ror #8
 8016c86:	fa2f f181 	sxtb16	r1, r1
 8016c8a:	fa2f f080 	sxtb16	r0, r0
 8016c8e:	fb21 220e 	smlad	r2, r1, lr, r2
 8016c92:	f8d5 e000 	ldr.w	lr, [r5]
 8016c96:	fb21 310e 	smlad	r1, r1, lr, r3
 8016c9a:	f8d4 e004 	ldr.w	lr, [r4, #4]
 8016c9e:	686b      	ldr	r3, [r5, #4]
 8016ca0:	3408      	adds	r4, #8
 8016ca2:	3508      	adds	r5, #8
 8016ca4:	fb20 220e 	smlad	r2, r0, lr, r2
 8016ca8:	fb20 1303 	smlad	r3, r0, r3, r1
 8016cac:	3e01      	subs	r6, #1
 8016cae:	d1e4      	bne.n	8016c7a <arm_nn_mat_mult_kernel_s8_s16+0x392>
 8016cb0:	9902      	ldr	r1, [sp, #8]
 8016cb2:	eb01 0188 	add.w	r1, r1, r8, lsl #2
 8016cb6:	9102      	str	r1, [sp, #8]
 8016cb8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8016cba:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
 8016cbe:	910b      	str	r1, [sp, #44]	; 0x2c
 8016cc0:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
 8016cc4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016cc6:	f011 0103 	ands.w	r1, r1, #3
 8016cca:	d01d      	beq.n	8016d08 <arm_nn_mat_mult_kernel_s8_s16+0x420>
 8016ccc:	9d02      	ldr	r5, [sp, #8]
 8016cce:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016cd0:	f995 0000 	ldrsb.w	r0, [r5]
 8016cd4:	8834      	ldrh	r4, [r6, #0]
 8016cd6:	fb14 2200 	smlabb	r2, r4, r0, r2
 8016cda:	883c      	ldrh	r4, [r7, #0]
 8016cdc:	3901      	subs	r1, #1
 8016cde:	fb14 3300 	smlabb	r3, r4, r0, r3
 8016ce2:	d011      	beq.n	8016d08 <arm_nn_mat_mult_kernel_s8_s16+0x420>
 8016ce4:	f995 0001 	ldrsb.w	r0, [r5, #1]
 8016ce8:	8874      	ldrh	r4, [r6, #2]
 8016cea:	fb14 2200 	smlabb	r2, r4, r0, r2
 8016cee:	887c      	ldrh	r4, [r7, #2]
 8016cf0:	2901      	cmp	r1, #1
 8016cf2:	fb14 3300 	smlabb	r3, r4, r0, r3
 8016cf6:	d007      	beq.n	8016d08 <arm_nn_mat_mult_kernel_s8_s16+0x420>
 8016cf8:	f995 1002 	ldrsb.w	r1, [r5, #2]
 8016cfc:	88b0      	ldrh	r0, [r6, #4]
 8016cfe:	fb10 2201 	smlabb	r2, r0, r1, r2
 8016d02:	88b8      	ldrh	r0, [r7, #4]
 8016d04:	fb10 3301 	smlabb	r3, r0, r1, r3
 8016d08:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016d0a:	680c      	ldr	r4, [r1, #0]
 8016d0c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8016d0e:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
 8016d12:	6809      	ldr	r1, [r1, #0]
 8016d14:	fa02 f505 	lsl.w	r5, r2, r5
 8016d18:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8016d1c:	2200      	movs	r2, #0
 8016d1e:	fbc5 0201 	smlal	r0, r2, r5, r1
 8016d22:	4616      	mov	r6, r2
 8016d24:	2c00      	cmp	r4, #0
 8016d26:	ea4f 72d0 	mov.w	r2, r0, lsr #31
 8016d2a:	ea42 0246 	orr.w	r2, r2, r6, lsl #1
 8016d2e:	dc0d      	bgt.n	8016d4c <arm_nn_mat_mult_kernel_s8_s16+0x464>
 8016d30:	4264      	negs	r4, r4
 8016d32:	2101      	movs	r1, #1
 8016d34:	40a1      	lsls	r1, r4
 8016d36:	3901      	subs	r1, #1
 8016d38:	ea02 0001 	and.w	r0, r2, r1
 8016d3c:	4122      	asrs	r2, r4
 8016d3e:	ea4f 0161 	mov.w	r1, r1, asr #1
 8016d42:	bf48      	it	mi
 8016d44:	3101      	addmi	r1, #1
 8016d46:	4288      	cmp	r0, r1
 8016d48:	bfc8      	it	gt
 8016d4a:	3201      	addgt	r2, #1
 8016d4c:	9921      	ldr	r1, [sp, #132]	; 0x84
 8016d4e:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8016d50:	440a      	add	r2, r1
 8016d52:	9906      	ldr	r1, [sp, #24]
 8016d54:	428a      	cmp	r2, r1
 8016d56:	bfb8      	it	lt
 8016d58:	460a      	movlt	r2, r1
 8016d5a:	9907      	ldr	r1, [sp, #28]
 8016d5c:	428a      	cmp	r2, r1
 8016d5e:	bfa8      	it	ge
 8016d60:	460a      	movge	r2, r1
 8016d62:	f800 2b01 	strb.w	r2, [r0], #1
 8016d66:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016d68:	6811      	ldr	r1, [r2, #0]
 8016d6a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016d6c:	6815      	ldr	r5, [r2, #0]
 8016d6e:	ea21 72e1 	bic.w	r2, r1, r1, asr #31
 8016d72:	4093      	lsls	r3, r2
 8016d74:	2400      	movs	r4, #0
 8016d76:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8016d7a:	fbc3 2405 	smlal	r2, r4, r3, r5
 8016d7e:	0fd3      	lsrs	r3, r2, #31
 8016d80:	2900      	cmp	r1, #0
 8016d82:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 8016d86:	dc0d      	bgt.n	8016da4 <arm_nn_mat_mult_kernel_s8_s16+0x4bc>
 8016d88:	4249      	negs	r1, r1
 8016d8a:	2201      	movs	r2, #1
 8016d8c:	408a      	lsls	r2, r1
 8016d8e:	3a01      	subs	r2, #1
 8016d90:	ea03 0402 	and.w	r4, r3, r2
 8016d94:	410b      	asrs	r3, r1
 8016d96:	ea4f 0262 	mov.w	r2, r2, asr #1
 8016d9a:	bf48      	it	mi
 8016d9c:	3201      	addmi	r2, #1
 8016d9e:	4294      	cmp	r4, r2
 8016da0:	bfc8      	it	gt
 8016da2:	3301      	addgt	r3, #1
 8016da4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016da6:	9027      	str	r0, [sp, #156]	; 0x9c
 8016da8:	4413      	add	r3, r2
 8016daa:	9a06      	ldr	r2, [sp, #24]
 8016dac:	429a      	cmp	r2, r3
 8016dae:	bfb8      	it	lt
 8016db0:	461a      	movlt	r2, r3
 8016db2:	4613      	mov	r3, r2
 8016db4:	9a07      	ldr	r2, [sp, #28]
 8016db6:	429a      	cmp	r2, r3
 8016db8:	bfa8      	it	ge
 8016dba:	461a      	movge	r2, r3
 8016dbc:	4613      	mov	r3, r2
 8016dbe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016dc0:	7013      	strb	r3, [r2, #0]
 8016dc2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016dc4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016dc6:	4418      	add	r0, r3
 8016dc8:	b017      	add	sp, #92	; 0x5c
 8016dca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016dd0:	469b      	mov	fp, r3
 8016dd2:	2a00      	cmp	r2, #0
 8016dd4:	f47f addb 	bne.w	801698e <arm_nn_mat_mult_kernel_s8_s16+0xa6>
 8016dd8:	e9dd 010b 	ldrd	r0, r1, [sp, #44]	; 0x2c
 8016ddc:	46dc      	mov	ip, fp
 8016dde:	461a      	mov	r2, r3
 8016de0:	e614      	b.n	8016a0c <arm_nn_mat_mult_kernel_s8_s16+0x124>
 8016de2:	461a      	mov	r2, r3
 8016de4:	e73e      	b.n	8016c64 <arm_nn_mat_mult_kernel_s8_s16+0x37c>
 8016de6:	4613      	mov	r3, r2
 8016de8:	e76c      	b.n	8016cc4 <arm_nn_mat_mult_kernel_s8_s16+0x3dc>
 8016dea:	bf00      	nop

08016dec <arm_convolve_s16>:
 8016dec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016df0:	ed2d 8b02 	vpush	{d8}
 8016df4:	6800      	ldr	r0, [r0, #0]
 8016df6:	b0b3      	sub	sp, #204	; 0xcc
 8016df8:	9d3f      	ldr	r5, [sp, #252]	; 0xfc
 8016dfa:	9c43      	ldr	r4, [sp, #268]	; 0x10c
 8016dfc:	901a      	str	r0, [sp, #104]	; 0x68
 8016dfe:	2800      	cmp	r0, #0
 8016e00:	f000 8215 	beq.w	801722e <arm_convolve_s16+0x442>
 8016e04:	68d8      	ldr	r0, [r3, #12]
 8016e06:	686e      	ldr	r6, [r5, #4]
 8016e08:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8016e0c:	681f      	ldr	r7, [r3, #0]
 8016e0e:	9608      	str	r6, [sp, #32]
 8016e10:	fb06 f500 	mul.w	r5, r6, r0
 8016e14:	fb0b f505 	mul.w	r5, fp, r5
 8016e18:	951e      	str	r5, [sp, #120]	; 0x78
 8016e1a:	689d      	ldr	r5, [r3, #8]
 8016e1c:	685b      	ldr	r3, [r3, #4]
 8016e1e:	930d      	str	r3, [sp, #52]	; 0x34
 8016e20:	68a3      	ldr	r3, [r4, #8]
 8016e22:	9316      	str	r3, [sp, #88]	; 0x58
 8016e24:	6863      	ldr	r3, [r4, #4]
 8016e26:	931d      	str	r3, [sp, #116]	; 0x74
 8016e28:	68e3      	ldr	r3, [r4, #12]
 8016e2a:	931c      	str	r3, [sp, #112]	; 0x70
 8016e2c:	698b      	ldr	r3, [r1, #24]
 8016e2e:	9311      	str	r3, [sp, #68]	; 0x44
 8016e30:	69cb      	ldr	r3, [r1, #28]
 8016e32:	9309      	str	r3, [sp, #36]	; 0x24
 8016e34:	690b      	ldr	r3, [r1, #16]
 8016e36:	9323      	str	r3, [sp, #140]	; 0x8c
 8016e38:	694b      	ldr	r3, [r1, #20]
 8016e3a:	9324      	str	r3, [sp, #144]	; 0x90
 8016e3c:	688b      	ldr	r3, [r1, #8]
 8016e3e:	9318      	str	r3, [sp, #96]	; 0x60
 8016e40:	68cb      	ldr	r3, [r1, #12]
 8016e42:	9325      	str	r3, [sp, #148]	; 0x94
 8016e44:	6a0b      	ldr	r3, [r1, #32]
 8016e46:	931f      	str	r3, [sp, #124]	; 0x7c
 8016e48:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8016e4a:	972c      	str	r7, [sp, #176]	; 0xb0
 8016e4c:	950c      	str	r5, [sp, #48]	; 0x30
 8016e4e:	9320      	str	r3, [sp, #128]	; 0x80
 8016e50:	6813      	ldr	r3, [r2, #0]
 8016e52:	9321      	str	r3, [sp, #132]	; 0x84
 8016e54:	6853      	ldr	r3, [r2, #4]
 8016e56:	2f00      	cmp	r7, #0
 8016e58:	ee08 3a10 	vmov	s16, r3
 8016e5c:	f340 80d8 	ble.w	8017010 <arm_convolve_s16+0x224>
 8016e60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016e62:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8016e64:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016e66:	fb03 f305 	mul.w	r3, r3, r5
 8016e6a:	425b      	negs	r3, r3
 8016e6c:	1a9b      	subs	r3, r3, r2
 8016e6e:	fb05 f200 	mul.w	r2, r5, r0
 8016e72:	fb04 f202 	mul.w	r2, r4, r2
 8016e76:	0052      	lsls	r2, r2, #1
 8016e78:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016e7a:	922a      	str	r2, [sp, #168]	; 0xa8
 8016e7c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8016e7e:	fb04 f202 	mul.w	r2, r4, r2
 8016e82:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8016e84:	fb04 f202 	mul.w	r2, r4, r2
 8016e88:	0052      	lsls	r2, r2, #1
 8016e8a:	922b      	str	r2, [sp, #172]	; 0xac
 8016e8c:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8016e8e:	fb02 f205 	mul.w	r2, r2, r5
 8016e92:	fb00 f202 	mul.w	r2, r0, r2
 8016e96:	ea4f 0a40 	mov.w	sl, r0, lsl #1
 8016e9a:	0052      	lsls	r2, r2, #1
 8016e9c:	fb0a f303 	mul.w	r3, sl, r3
 8016ea0:	9230      	str	r2, [sp, #192]	; 0xc0
 8016ea2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016ea4:	9331      	str	r3, [sp, #196]	; 0xc4
 8016ea6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016ea8:	fb05 f202 	mul.w	r2, r5, r2
 8016eac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016eae:	fb00 f202 	mul.w	r2, r0, r2
 8016eb2:	fb03 f300 	mul.w	r3, r3, r0
 8016eb6:	0052      	lsls	r2, r2, #1
 8016eb8:	005b      	lsls	r3, r3, #1
 8016eba:	fb05 f000 	mul.w	r0, r5, r0
 8016ebe:	920a      	str	r2, [sp, #40]	; 0x28
 8016ec0:	9319      	str	r3, [sp, #100]	; 0x64
 8016ec2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8016ec4:	0043      	lsls	r3, r0, #1
 8016ec6:	9313      	str	r3, [sp, #76]	; 0x4c
 8016ec8:	2300      	movs	r3, #0
 8016eca:	9328      	str	r3, [sp, #160]	; 0xa0
 8016ecc:	f002 0303 	and.w	r3, r2, #3
 8016ed0:	9327      	str	r3, [sp, #156]	; 0x9c
 8016ed2:	fb0a f30b 	mul.w	r3, sl, fp
 8016ed6:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ed8:	0063      	lsls	r3, r4, #1
 8016eda:	932d      	str	r3, [sp, #180]	; 0xb4
 8016edc:	f022 0303 	bic.w	r3, r2, #3
 8016ee0:	932e      	str	r3, [sp, #184]	; 0xb8
 8016ee2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8016ee4:	1091      	asrs	r1, r2, #2
 8016ee6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8016eea:	46d9      	mov	r9, fp
 8016eec:	9126      	str	r1, [sp, #152]	; 0x98
 8016eee:	932f      	str	r3, [sp, #188]	; 0xbc
 8016ef0:	46d3      	mov	fp, sl
 8016ef2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8016ef4:	2b00      	cmp	r3, #0
 8016ef6:	dd7c      	ble.n	8016ff2 <arm_convolve_s16+0x206>
 8016ef8:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 8016efa:	9931      	ldr	r1, [sp, #196]	; 0xc4
 8016efc:	440a      	add	r2, r1
 8016efe:	9222      	str	r2, [sp, #136]	; 0x88
 8016f00:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8016f02:	4252      	negs	r2, r2
 8016f04:	9217      	str	r2, [sp, #92]	; 0x5c
 8016f06:	9a44      	ldr	r2, [sp, #272]	; 0x110
 8016f08:	921b      	str	r2, [sp, #108]	; 0x6c
 8016f0a:	2300      	movs	r3, #0
 8016f0c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8016f0e:	9329      	str	r3, [sp, #164]	; 0xa4
 8016f10:	9206      	str	r2, [sp, #24]
 8016f12:	9314      	str	r3, [sp, #80]	; 0x50
 8016f14:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016f16:	2b00      	cmp	r3, #0
 8016f18:	dd57      	ble.n	8016fca <arm_convolve_s16+0x1de>
 8016f1a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016f1c:	425b      	negs	r3, r3
 8016f1e:	9310      	str	r3, [sp, #64]	; 0x40
 8016f20:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016f22:	9312      	str	r3, [sp, #72]	; 0x48
 8016f24:	2300      	movs	r3, #0
 8016f26:	9315      	str	r3, [sp, #84]	; 0x54
 8016f28:	9b08      	ldr	r3, [sp, #32]
 8016f2a:	2b00      	cmp	r3, #0
 8016f2c:	dd39      	ble.n	8016fa2 <arm_convolve_s16+0x1b6>
 8016f2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016f30:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 8016f32:	9307      	str	r3, [sp, #28]
 8016f34:	f04f 0800 	mov.w	r8, #0
 8016f38:	f1b9 0f00 	cmp.w	r9, #0
 8016f3c:	dd26      	ble.n	8016f8c <arm_convolve_s16+0x1a0>
 8016f3e:	2f00      	cmp	r7, #0
 8016f40:	db78      	blt.n	8017034 <arm_convolve_s16+0x248>
 8016f42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016f44:	42bb      	cmp	r3, r7
 8016f46:	dd69      	ble.n	801701c <arm_convolve_s16+0x230>
 8016f48:	970e      	str	r7, [sp, #56]	; 0x38
 8016f4a:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8016f4e:	f8dd a01c 	ldr.w	sl, [sp, #28]
 8016f52:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016f54:	9d06      	ldr	r5, [sp, #24]
 8016f56:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 8016f58:	f8dd 8044 	ldr.w	r8, [sp, #68]	; 0x44
 8016f5c:	2600      	movs	r6, #0
 8016f5e:	2c00      	cmp	r4, #0
 8016f60:	4628      	mov	r0, r5
 8016f62:	465a      	mov	r2, fp
 8016f64:	f04f 0100 	mov.w	r1, #0
 8016f68:	db02      	blt.n	8016f70 <arm_convolve_s16+0x184>
 8016f6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016f6c:	429c      	cmp	r4, r3
 8016f6e:	db6d      	blt.n	801704c <arm_convolve_s16+0x260>
 8016f70:	f005 fdb8 	bl	801cae4 <memset>
 8016f74:	3601      	adds	r6, #1
 8016f76:	45b1      	cmp	r9, r6
 8016f78:	445d      	add	r5, fp
 8016f7a:	4444      	add	r4, r8
 8016f7c:	44ba      	add	sl, r7
 8016f7e:	d1ee      	bne.n	8016f5e <arm_convolve_s16+0x172>
 8016f80:	e9dd 780e 	ldrd	r7, r8, [sp, #56]	; 0x38
 8016f84:	9b06      	ldr	r3, [sp, #24]
 8016f86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016f88:	4413      	add	r3, r2
 8016f8a:	9306      	str	r3, [sp, #24]
 8016f8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016f8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016f90:	441f      	add	r7, r3
 8016f92:	9b07      	ldr	r3, [sp, #28]
 8016f94:	4413      	add	r3, r2
 8016f96:	9307      	str	r3, [sp, #28]
 8016f98:	9b08      	ldr	r3, [sp, #32]
 8016f9a:	f108 0801 	add.w	r8, r8, #1
 8016f9e:	4543      	cmp	r3, r8
 8016fa0:	d1ca      	bne.n	8016f38 <arm_convolve_s16+0x14c>
 8016fa2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016fa4:	2b00      	cmp	r3, #0
 8016fa6:	d155      	bne.n	8017054 <arm_convolve_s16+0x268>
 8016fa8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016faa:	9919      	ldr	r1, [sp, #100]	; 0x64
 8016fac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016fae:	440a      	add	r2, r1
 8016fb0:	9212      	str	r2, [sp, #72]	; 0x48
 8016fb2:	9918      	ldr	r1, [sp, #96]	; 0x60
 8016fb4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016fb6:	440a      	add	r2, r1
 8016fb8:	9210      	str	r2, [sp, #64]	; 0x40
 8016fba:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016fbc:	3301      	adds	r3, #1
 8016fbe:	9315      	str	r3, [sp, #84]	; 0x54
 8016fc0:	429a      	cmp	r2, r3
 8016fc2:	f04f 0301 	mov.w	r3, #1
 8016fc6:	9314      	str	r3, [sp, #80]	; 0x50
 8016fc8:	d1ae      	bne.n	8016f28 <arm_convolve_s16+0x13c>
 8016fca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016fcc:	2b00      	cmp	r3, #0
 8016fce:	d06c      	beq.n	80170aa <arm_convolve_s16+0x2be>
 8016fd0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8016fd2:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8016fd4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016fd6:	440a      	add	r2, r1
 8016fd8:	9222      	str	r2, [sp, #136]	; 0x88
 8016fda:	9925      	ldr	r1, [sp, #148]	; 0x94
 8016fdc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8016fde:	440a      	add	r2, r1
 8016fe0:	9217      	str	r2, [sp, #92]	; 0x5c
 8016fe2:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8016fe4:	3301      	adds	r3, #1
 8016fe6:	429a      	cmp	r2, r3
 8016fe8:	9329      	str	r3, [sp, #164]	; 0xa4
 8016fea:	d193      	bne.n	8016f14 <arm_convolve_s16+0x128>
 8016fec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8016fee:	2b00      	cmp	r3, #0
 8016ff0:	d162      	bne.n	80170b8 <arm_convolve_s16+0x2cc>
 8016ff2:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 8016ff4:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8016ff6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016ff8:	440a      	add	r2, r1
 8016ffa:	923e      	str	r2, [sp, #248]	; 0xf8
 8016ffc:	992b      	ldr	r1, [sp, #172]	; 0xac
 8016ffe:	9a44      	ldr	r2, [sp, #272]	; 0x110
 8017000:	440a      	add	r2, r1
 8017002:	9244      	str	r2, [sp, #272]	; 0x110
 8017004:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017006:	3301      	adds	r3, #1
 8017008:	429a      	cmp	r2, r3
 801700a:	9328      	str	r3, [sp, #160]	; 0xa0
 801700c:	f47f af71 	bne.w	8016ef2 <arm_convolve_s16+0x106>
 8017010:	2000      	movs	r0, #0
 8017012:	b033      	add	sp, #204	; 0xcc
 8017014:	ecbd 8b02 	vpop	{d8}
 8017018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801701c:	9d06      	ldr	r5, [sp, #24]
 801701e:	2400      	movs	r4, #0
 8017020:	4628      	mov	r0, r5
 8017022:	3401      	adds	r4, #1
 8017024:	465a      	mov	r2, fp
 8017026:	2100      	movs	r1, #0
 8017028:	f005 fd5c 	bl	801cae4 <memset>
 801702c:	45a1      	cmp	r9, r4
 801702e:	445d      	add	r5, fp
 8017030:	d1f6      	bne.n	8017020 <arm_convolve_s16+0x234>
 8017032:	e7a7      	b.n	8016f84 <arm_convolve_s16+0x198>
 8017034:	9d06      	ldr	r5, [sp, #24]
 8017036:	2400      	movs	r4, #0
 8017038:	4628      	mov	r0, r5
 801703a:	3401      	adds	r4, #1
 801703c:	465a      	mov	r2, fp
 801703e:	2100      	movs	r1, #0
 8017040:	f005 fd50 	bl	801cae4 <memset>
 8017044:	45a1      	cmp	r9, r4
 8017046:	445d      	add	r5, fp
 8017048:	d1f6      	bne.n	8017038 <arm_convolve_s16+0x24c>
 801704a:	e79b      	b.n	8016f84 <arm_convolve_s16+0x198>
 801704c:	4651      	mov	r1, sl
 801704e:	f005 fd21 	bl	801ca94 <memcpy>
 8017052:	e78f      	b.n	8016f74 <arm_convolve_s16+0x188>
 8017054:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017056:	9305      	str	r3, [sp, #20]
 8017058:	9b42      	ldr	r3, [sp, #264]	; 0x108
 801705a:	9304      	str	r3, [sp, #16]
 801705c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801705e:	9303      	str	r3, [sp, #12]
 8017060:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017062:	9302      	str	r3, [sp, #8]
 8017064:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017066:	9301      	str	r3, [sp, #4]
 8017068:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801706a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801706c:	9300      	str	r3, [sp, #0]
 801706e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017070:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017072:	991a      	ldr	r1, [sp, #104]	; 0x68
 8017074:	9840      	ldr	r0, [sp, #256]	; 0x100
 8017076:	4413      	add	r3, r2
 8017078:	9312      	str	r3, [sp, #72]	; 0x48
 801707a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801707c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801707e:	4413      	add	r3, r2
 8017080:	3401      	adds	r4, #1
 8017082:	9310      	str	r3, [sp, #64]	; 0x40
 8017084:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8017086:	9415      	str	r4, [sp, #84]	; 0x54
 8017088:	ee18 3a10 	vmov	r3, s16
 801708c:	f000 f8d4 	bl	8017238 <arm_nn_mat_mult_kernel_s16>
 8017090:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017092:	901b      	str	r0, [sp, #108]	; 0x6c
 8017094:	42a3      	cmp	r3, r4
 8017096:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017098:	9306      	str	r3, [sp, #24]
 801709a:	f04f 0300 	mov.w	r3, #0
 801709e:	9314      	str	r3, [sp, #80]	; 0x50
 80170a0:	f47f af42 	bne.w	8016f28 <arm_convolve_s16+0x13c>
 80170a4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80170a6:	2b00      	cmp	r3, #0
 80170a8:	d192      	bne.n	8016fd0 <arm_convolve_s16+0x1e4>
 80170aa:	f06f 0001 	mvn.w	r0, #1
 80170ae:	b033      	add	sp, #204	; 0xcc
 80170b0:	ecbd 8b02 	vpop	{d8}
 80170b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170b8:	9b42      	ldr	r3, [sp, #264]	; 0x108
 80170ba:	f8d3 e000 	ldr.w	lr, [r3]
 80170be:	f893 a004 	ldrb.w	sl, [r3, #4]
 80170c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80170c4:	2b00      	cmp	r3, #0
 80170c6:	dd94      	ble.n	8016ff2 <arm_convolve_s16+0x206>
 80170c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80170ca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80170cc:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80170ce:	f8dd c100 	ldr.w	ip, [sp, #256]	; 0x100
 80170d2:	4413      	add	r3, r2
 80170d4:	ee18 7a10 	vmov	r7, s16
 80170d8:	ee07 ba90 	vmov	s15, fp
 80170dc:	9306      	str	r3, [sp, #24]
 80170de:	f04f 0800 	mov.w	r8, #0
 80170e2:	4671      	mov	r1, lr
 80170e4:	9c26      	ldr	r4, [sp, #152]	; 0x98
 80170e6:	2c00      	cmp	r4, #0
 80170e8:	f000 809e 	beq.w	8017228 <arm_convolve_s16+0x43c>
 80170ec:	981a      	ldr	r0, [sp, #104]	; 0x68
 80170ee:	9107      	str	r1, [sp, #28]
 80170f0:	46e3      	mov	fp, ip
 80170f2:	2300      	movs	r3, #0
 80170f4:	f85b 2b04 	ldr.w	r2, [fp], #4
 80170f8:	fa2f f592 	sxtb16	r5, r2, ror #8
 80170fc:	fa2f f282 	sxtb16	r2, r2
 8017100:	f8d0 e000 	ldr.w	lr, [r0]
 8017104:	eac5 4122 	pkhtb	r1, r5, r2, asr #16
 8017108:	eac2 4205 	pkhbt	r2, r2, r5, lsl #16
 801710c:	fb22 330e 	smlad	r3, r2, lr, r3
 8017110:	6842      	ldr	r2, [r0, #4]
 8017112:	3008      	adds	r0, #8
 8017114:	fb21 3302 	smlad	r3, r1, r2, r3
 8017118:	3c01      	subs	r4, #1
 801711a:	d1eb      	bne.n	80170f4 <arm_convolve_s16+0x308>
 801711c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801711e:	9907      	ldr	r1, [sp, #28]
 8017120:	4494      	add	ip, r2
 8017122:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017124:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8017126:	b1a5      	cbz	r5, 8017152 <arm_convolve_s16+0x366>
 8017128:	f99c 0000 	ldrsb.w	r0, [ip]
 801712c:	8814      	ldrh	r4, [r2, #0]
 801712e:	2d01      	cmp	r5, #1
 8017130:	fb14 3300 	smlabb	r3, r4, r0, r3
 8017134:	d00b      	beq.n	801714e <arm_convolve_s16+0x362>
 8017136:	f99c 0001 	ldrsb.w	r0, [ip, #1]
 801713a:	8854      	ldrh	r4, [r2, #2]
 801713c:	2d02      	cmp	r5, #2
 801713e:	fb14 3300 	smlabb	r3, r4, r0, r3
 8017142:	d004      	beq.n	801714e <arm_convolve_s16+0x362>
 8017144:	8890      	ldrh	r0, [r2, #4]
 8017146:	f99c 2002 	ldrsb.w	r2, [ip, #2]
 801714a:	fb10 3302 	smlabb	r3, r0, r2, r3
 801714e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017150:	4494      	add	ip, r2
 8017152:	f1ba 0f00 	cmp.w	sl, #0
 8017156:	d02b      	beq.n	80171b0 <arm_convolve_s16+0x3c4>
 8017158:	b111      	cbz	r1, 8017160 <arm_convolve_s16+0x374>
 801715a:	f851 2028 	ldr.w	r2, [r1, r8, lsl #2]
 801715e:	4413      	add	r3, r2
 8017160:	6838      	ldr	r0, [r7, #0]
 8017162:	6832      	ldr	r2, [r6, #0]
 8017164:	ea20 74e0 	bic.w	r4, r0, r0, asr #31
 8017168:	fa03 f404 	lsl.w	r4, r3, r4
 801716c:	2500      	movs	r5, #0
 801716e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8017172:	fbc4 3502 	smlal	r3, r5, r4, r2
 8017176:	0fdb      	lsrs	r3, r3, #31
 8017178:	2800      	cmp	r0, #0
 801717a:	ea43 0545 	orr.w	r5, r3, r5, lsl #1
 801717e:	dd45      	ble.n	801720c <arm_convolve_s16+0x420>
 8017180:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8017182:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8017184:	429d      	cmp	r5, r3
 8017186:	bfb8      	it	lt
 8017188:	461d      	movlt	r5, r3
 801718a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801718c:	42ab      	cmp	r3, r5
 801718e:	bfa8      	it	ge
 8017190:	462b      	movge	r3, r5
 8017192:	f822 3b02 	strh.w	r3, [r2], #2
 8017196:	9b06      	ldr	r3, [sp, #24]
 8017198:	921b      	str	r2, [sp, #108]	; 0x6c
 801719a:	429a      	cmp	r2, r3
 801719c:	f108 0801 	add.w	r8, r8, #1
 80171a0:	f107 0704 	add.w	r7, r7, #4
 80171a4:	f106 0604 	add.w	r6, r6, #4
 80171a8:	d19c      	bne.n	80170e4 <arm_convolve_s16+0x2f8>
 80171aa:	ee17 ba90 	vmov	fp, s15
 80171ae:	e720      	b.n	8016ff2 <arm_convolve_s16+0x206>
 80171b0:	17d8      	asrs	r0, r3, #31
 80171b2:	b139      	cbz	r1, 80171c4 <arm_convolve_s16+0x3d8>
 80171b4:	eb01 02c8 	add.w	r2, r1, r8, lsl #3
 80171b8:	6854      	ldr	r4, [r2, #4]
 80171ba:	f851 2038 	ldr.w	r2, [r1, r8, lsl #3]
 80171be:	189b      	adds	r3, r3, r2
 80171c0:	eb40 0004 	adc.w	r0, r0, r4
 80171c4:	6834      	ldr	r4, [r6, #0]
 80171c6:	4a1b      	ldr	r2, [pc, #108]	; (8017234 <arm_convolve_s16+0x448>)
 80171c8:	4294      	cmp	r4, r2
 80171ca:	dc1b      	bgt.n	8017204 <arm_convolve_s16+0x418>
 80171cc:	f504 4400 	add.w	r4, r4, #32768	; 0x8000
 80171d0:	1422      	asrs	r2, r4, #16
 80171d2:	17e4      	asrs	r4, r4, #31
 80171d4:	fb03 f404 	mul.w	r4, r3, r4
 80171d8:	fb02 4000 	mla	r0, r2, r0, r4
 80171dc:	683c      	ldr	r4, [r7, #0]
 80171de:	fba3 2302 	umull	r2, r3, r3, r2
 80171e2:	4403      	add	r3, r0
 80171e4:	f1c4 000e 	rsb	r0, r4, #14
 80171e8:	3412      	adds	r4, #18
 80171ea:	40c2      	lsrs	r2, r0
 80171ec:	fa03 f404 	lsl.w	r4, r3, r4
 80171f0:	3820      	subs	r0, #32
 80171f2:	ea42 0204 	orr.w	r2, r2, r4
 80171f6:	bf5c      	itt	pl
 80171f8:	fa43 f000 	asrpl.w	r0, r3, r0
 80171fc:	4302      	orrpl	r2, r0
 80171fe:	3201      	adds	r2, #1
 8017200:	1055      	asrs	r5, r2, #1
 8017202:	e7bd      	b.n	8017180 <arm_convolve_s16+0x394>
 8017204:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8017208:	2400      	movs	r4, #0
 801720a:	e7e3      	b.n	80171d4 <arm_convolve_s16+0x3e8>
 801720c:	4240      	negs	r0, r0
 801720e:	2301      	movs	r3, #1
 8017210:	4083      	lsls	r3, r0
 8017212:	3b01      	subs	r3, #1
 8017214:	ea05 0203 	and.w	r2, r5, r3
 8017218:	105b      	asrs	r3, r3, #1
 801721a:	4105      	asrs	r5, r0
 801721c:	bf48      	it	mi
 801721e:	3301      	addmi	r3, #1
 8017220:	429a      	cmp	r2, r3
 8017222:	ddad      	ble.n	8017180 <arm_convolve_s16+0x394>
 8017224:	3501      	adds	r5, #1
 8017226:	e7ab      	b.n	8017180 <arm_convolve_s16+0x394>
 8017228:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801722a:	4623      	mov	r3, r4
 801722c:	e77a      	b.n	8017124 <arm_convolve_s16+0x338>
 801722e:	f04f 30ff 	mov.w	r0, #4294967295
 8017232:	e73c      	b.n	80170ae <arm_convolve_s16+0x2c2>
 8017234:	7ffeffff 	.word	0x7ffeffff

08017238 <arm_nn_mat_mult_kernel_s16>:
 8017238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801723c:	b0a9      	sub	sp, #164	; 0xa4
 801723e:	4683      	mov	fp, r0
 8017240:	9320      	str	r3, [sp, #128]	; 0x80
 8017242:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017244:	9222      	str	r2, [sp, #136]	; 0x88
 8017246:	791a      	ldrb	r2, [r3, #4]
 8017248:	681b      	ldr	r3, [r3, #0]
 801724a:	9318      	str	r3, [sp, #96]	; 0x60
 801724c:	9114      	str	r1, [sp, #80]	; 0x50
 801724e:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017250:	9217      	str	r2, [sp, #92]	; 0x5c
 8017252:	2a00      	cmp	r2, #0
 8017254:	f040 83b9 	bne.w	80179ca <arm_nn_mat_mult_kernel_s16+0x792>
 8017258:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801725c:	bfa8      	it	ge
 801725e:	f44f 7300 	movge.w	r3, #512	; 0x200
 8017262:	9321      	str	r3, [sp, #132]	; 0x84
 8017264:	9935      	ldr	r1, [sp, #212]	; 0xd4
 8017266:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017268:	f5a1 7100 	sub.w	r1, r1, #512	; 0x200
 801726c:	9125      	str	r1, [sp, #148]	; 0x94
 801726e:	0051      	lsls	r1, r2, #1
 8017270:	9124      	str	r1, [sp, #144]	; 0x90
 8017272:	9937      	ldr	r1, [sp, #220]	; 0xdc
 8017274:	eb02 73d2 	add.w	r3, r2, r2, lsr #31
 8017278:	105b      	asrs	r3, r3, #1
 801727a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801727e:	921f      	str	r2, [sp, #124]	; 0x7c
 8017280:	9323      	str	r3, [sp, #140]	; 0x8c
 8017282:	f000 8451 	beq.w	8017b28 <arm_nn_mat_mult_kernel_s16+0x8f0>
 8017286:	9825      	ldr	r0, [sp, #148]	; 0x94
 8017288:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 801728a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801728c:	b281      	uxth	r1, r0
 801728e:	9126      	str	r1, [sp, #152]	; 0x98
 8017290:	9920      	ldr	r1, [sp, #128]	; 0x80
 8017292:	3108      	adds	r1, #8
 8017294:	9107      	str	r1, [sp, #28]
 8017296:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8017298:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801729c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801729e:	9316      	str	r3, [sp, #88]	; 0x58
 80172a0:	3108      	adds	r1, #8
 80172a2:	2a00      	cmp	r2, #0
 80172a4:	9108      	str	r1, [sp, #32]
 80172a6:	9937      	ldr	r1, [sp, #220]	; 0xdc
 80172a8:	4613      	mov	r3, r2
 80172aa:	bfb8      	it	lt
 80172ac:	1cd3      	addlt	r3, r2, #3
 80172ae:	f3c3 038f 	ubfx	r3, r3, #2, #16
 80172b2:	3104      	adds	r1, #4
 80172b4:	9315      	str	r3, [sp, #84]	; 0x54
 80172b6:	9110      	str	r1, [sp, #64]	; 0x40
 80172b8:	3b01      	subs	r3, #1
 80172ba:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80172bc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80172be:	b29b      	uxth	r3, r3
 80172c0:	3301      	adds	r3, #1
 80172c2:	3104      	adds	r1, #4
 80172c4:	9109      	str	r1, [sp, #36]	; 0x24
 80172c6:	0099      	lsls	r1, r3, #2
 80172c8:	9112      	str	r1, [sp, #72]	; 0x48
 80172ca:	9914      	ldr	r1, [sp, #80]	; 0x50
 80172cc:	f002 0203 	and.w	r2, r2, #3
 80172d0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80172d4:	9213      	str	r2, [sp, #76]	; 0x4c
 80172d6:	911b      	str	r1, [sp, #108]	; 0x6c
 80172d8:	3a01      	subs	r2, #1
 80172da:	9916      	ldr	r1, [sp, #88]	; 0x58
 80172dc:	b292      	uxth	r2, r2
 80172de:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 80172e2:	921c      	str	r2, [sp, #112]	; 0x70
 80172e4:	3201      	adds	r2, #1
 80172e6:	931a      	str	r3, [sp, #104]	; 0x68
 80172e8:	0053      	lsls	r3, r2, #1
 80172ea:	931d      	str	r3, [sp, #116]	; 0x74
 80172ec:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80172ee:	9311      	str	r3, [sp, #68]	; 0x44
 80172f0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80172f2:	9319      	str	r3, [sp, #100]	; 0x64
 80172f4:	b283      	uxth	r3, r0
 80172f6:	921e      	str	r2, [sp, #120]	; 0x78
 80172f8:	9327      	str	r3, [sp, #156]	; 0x9c
 80172fa:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80172fc:	eb0b 0203 	add.w	r2, fp, r3
 8017300:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017302:	9206      	str	r2, [sp, #24]
 8017304:	2b00      	cmp	r3, #0
 8017306:	f000 8358 	beq.w	80179ba <arm_nn_mat_mult_kernel_s16+0x782>
 801730a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801730c:	9f16      	ldr	r7, [sp, #88]	; 0x58
 801730e:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8017310:	9202      	str	r2, [sp, #8]
 8017312:	2300      	movs	r3, #0
 8017314:	4459      	add	r1, fp
 8017316:	9103      	str	r1, [sp, #12]
 8017318:	469a      	mov	sl, r3
 801731a:	4618      	mov	r0, r3
 801731c:	461c      	mov	r4, r3
 801731e:	9301      	str	r3, [sp, #4]
 8017320:	f8d6 8000 	ldr.w	r8, [r6]
 8017324:	f8d7 e000 	ldr.w	lr, [r7]
 8017328:	f85b 1b04 	ldr.w	r1, [fp], #4
 801732c:	fa2f f591 	sxtb16	r5, r1, ror #8
 8017330:	9b02      	ldr	r3, [sp, #8]
 8017332:	fa2f f181 	sxtb16	r1, r1
 8017336:	f853 2b04 	ldr.w	r2, [r3], #4
 801733a:	eac5 4c21 	pkhtb	ip, r5, r1, asr #16
 801733e:	9302      	str	r3, [sp, #8]
 8017340:	eac1 4105 	pkhbt	r1, r1, r5, lsl #16
 8017344:	fa2f f992 	sxtb16	r9, r2, ror #8
 8017348:	fa2f f282 	sxtb16	r2, r2
 801734c:	eac9 4522 	pkhtb	r5, r9, r2, asr #16
 8017350:	eac2 4209 	pkhbt	r2, r2, r9, lsl #16
 8017354:	fb21 4408 	smlad	r4, r1, r8, r4
 8017358:	fb21 000e 	smlad	r0, r1, lr, r0
 801735c:	fb22 aa08 	smlad	sl, r2, r8, sl
 8017360:	9b01      	ldr	r3, [sp, #4]
 8017362:	fb22 320e 	smlad	r2, r2, lr, r3
 8017366:	6871      	ldr	r1, [r6, #4]
 8017368:	687b      	ldr	r3, [r7, #4]
 801736a:	3608      	adds	r6, #8
 801736c:	3708      	adds	r7, #8
 801736e:	fb2c 4401 	smlad	r4, ip, r1, r4
 8017372:	fb2c 0003 	smlad	r0, ip, r3, r0
 8017376:	fb25 aa01 	smlad	sl, r5, r1, sl
 801737a:	fb25 2303 	smlad	r3, r5, r3, r2
 801737e:	9301      	str	r3, [sp, #4]
 8017380:	9b03      	ldr	r3, [sp, #12]
 8017382:	459b      	cmp	fp, r3
 8017384:	d1cc      	bne.n	8017320 <arm_nn_mat_mult_kernel_s16+0xe8>
 8017386:	9a06      	ldr	r2, [sp, #24]
 8017388:	9912      	ldr	r1, [sp, #72]	; 0x48
 801738a:	9b01      	ldr	r3, [sp, #4]
 801738c:	440a      	add	r2, r1
 801738e:	9206      	str	r2, [sp, #24]
 8017390:	e9dd 121a 	ldrd	r1, r2, [sp, #104]	; 0x68
 8017394:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017396:	2d00      	cmp	r5, #0
 8017398:	d044      	beq.n	8017424 <arm_nn_mat_mult_kernel_s16+0x1ec>
 801739a:	9e03      	ldr	r6, [sp, #12]
 801739c:	9d06      	ldr	r5, [sp, #24]
 801739e:	f996 7000 	ldrsb.w	r7, [r6]
 80173a2:	f995 5000 	ldrsb.w	r5, [r5]
 80173a6:	f9b2 6000 	ldrsh.w	r6, [r2]
 80173aa:	fb16 4407 	smlabb	r4, r6, r7, r4
 80173ae:	fb16 aa05 	smlabb	sl, r6, r5, sl
 80173b2:	f9b1 6000 	ldrsh.w	r6, [r1]
 80173b6:	fb16 0007 	smlabb	r0, r6, r7, r0
 80173ba:	9f1c      	ldr	r7, [sp, #112]	; 0x70
 80173bc:	fb16 3305 	smlabb	r3, r6, r5, r3
 80173c0:	b337      	cbz	r7, 8017410 <arm_nn_mat_mult_kernel_s16+0x1d8>
 80173c2:	9e03      	ldr	r6, [sp, #12]
 80173c4:	9d06      	ldr	r5, [sp, #24]
 80173c6:	f996 7001 	ldrsb.w	r7, [r6, #1]
 80173ca:	f995 5001 	ldrsb.w	r5, [r5, #1]
 80173ce:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80173d2:	fb16 aa05 	smlabb	sl, r6, r5, sl
 80173d6:	fb16 4407 	smlabb	r4, r6, r7, r4
 80173da:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80173de:	fb16 3305 	smlabb	r3, r6, r5, r3
 80173e2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80173e4:	2d02      	cmp	r5, #2
 80173e6:	fb16 0007 	smlabb	r0, r6, r7, r0
 80173ea:	d011      	beq.n	8017410 <arm_nn_mat_mult_kernel_s16+0x1d8>
 80173ec:	9e03      	ldr	r6, [sp, #12]
 80173ee:	9d06      	ldr	r5, [sp, #24]
 80173f0:	f996 7002 	ldrsb.w	r7, [r6, #2]
 80173f4:	f995 5002 	ldrsb.w	r5, [r5, #2]
 80173f8:	f9b2 6004 	ldrsh.w	r6, [r2, #4]
 80173fc:	fb16 4407 	smlabb	r4, r6, r7, r4
 8017400:	fb16 aa05 	smlabb	sl, r6, r5, sl
 8017404:	f9b1 6004 	ldrsh.w	r6, [r1, #4]
 8017408:	fb16 0007 	smlabb	r0, r6, r7, r0
 801740c:	fb16 3305 	smlabb	r3, r6, r5, r3
 8017410:	9d03      	ldr	r5, [sp, #12]
 8017412:	9e1e      	ldr	r6, [sp, #120]	; 0x78
 8017414:	4435      	add	r5, r6
 8017416:	9503      	str	r5, [sp, #12]
 8017418:	9d06      	ldr	r5, [sp, #24]
 801741a:	4435      	add	r5, r6
 801741c:	9506      	str	r5, [sp, #24]
 801741e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8017420:	442a      	add	r2, r5
 8017422:	4429      	add	r1, r5
 8017424:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8017426:	2d00      	cmp	r5, #0
 8017428:	f000 814a 	beq.w	80176c0 <arm_nn_mat_mult_kernel_s16+0x488>
 801742c:	9919      	ldr	r1, [sp, #100]	; 0x64
 801742e:	b139      	cbz	r1, 8017440 <arm_nn_mat_mult_kernel_s16+0x208>
 8017430:	680a      	ldr	r2, [r1, #0]
 8017432:	4414      	add	r4, r2
 8017434:	4410      	add	r0, r2
 8017436:	684a      	ldr	r2, [r1, #4]
 8017438:	3108      	adds	r1, #8
 801743a:	9119      	str	r1, [sp, #100]	; 0x64
 801743c:	4492      	add	sl, r2
 801743e:	4413      	add	r3, r2
 8017440:	9a07      	ldr	r2, [sp, #28]
 8017442:	9908      	ldr	r1, [sp, #32]
 8017444:	f852 2c08 	ldr.w	r2, [r2, #-8]
 8017448:	f851 6c08 	ldr.w	r6, [r1, #-8]
 801744c:	ea22 75e2 	bic.w	r5, r2, r2, asr #31
 8017450:	40ac      	lsls	r4, r5
 8017452:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8017456:	2700      	movs	r7, #0
 8017458:	fbc4 1706 	smlal	r1, r7, r4, r6
 801745c:	0fc9      	lsrs	r1, r1, #31
 801745e:	2a00      	cmp	r2, #0
 8017460:	ea41 0147 	orr.w	r1, r1, r7, lsl #1
 8017464:	f340 8238 	ble.w	80178d8 <arm_nn_mat_mult_kernel_s16+0x6a0>
 8017468:	2900      	cmp	r1, #0
 801746a:	fa00 f005 	lsl.w	r0, r0, r5
 801746e:	f2c0 828e 	blt.w	801798e <arm_nn_mat_mult_kernel_s16+0x756>
 8017472:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8017476:	2200      	movs	r2, #0
 8017478:	fbc6 4200 	smlal	r4, r2, r6, r0
 801747c:	0fe5      	lsrs	r5, r4, #31
 801747e:	ea55 0542 	orrs.w	r5, r5, r2, lsl #1
 8017482:	f100 824f 	bmi.w	8017924 <arm_nn_mat_mult_kernel_s16+0x6ec>
 8017486:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017488:	4291      	cmp	r1, r2
 801748a:	bfb8      	it	lt
 801748c:	4611      	movlt	r1, r2
 801748e:	4295      	cmp	r5, r2
 8017490:	bfb8      	it	lt
 8017492:	4615      	movlt	r5, r2
 8017494:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8017496:	4291      	cmp	r1, r2
 8017498:	bfa8      	it	ge
 801749a:	4611      	movge	r1, r2
 801749c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801749e:	f822 1c04 	strh.w	r1, [r2, #-4]
 80174a2:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 80174a4:	9908      	ldr	r1, [sp, #32]
 80174a6:	4295      	cmp	r5, r2
 80174a8:	bfa8      	it	ge
 80174aa:	4615      	movge	r5, r2
 80174ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80174ae:	f851 4c04 	ldr.w	r4, [r1, #-4]
 80174b2:	f822 5c04 	strh.w	r5, [r2, #-4]
 80174b6:	9a07      	ldr	r2, [sp, #28]
 80174b8:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80174bc:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 80174c0:	fa0a f500 	lsl.w	r5, sl, r0
 80174c4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80174c8:	2600      	movs	r6, #0
 80174ca:	fbc5 1604 	smlal	r1, r6, r5, r4
 80174ce:	0fc9      	lsrs	r1, r1, #31
 80174d0:	2a00      	cmp	r2, #0
 80174d2:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 80174d6:	f340 81dd 	ble.w	8017894 <arm_nn_mat_mult_kernel_s16+0x65c>
 80174da:	2900      	cmp	r1, #0
 80174dc:	fa03 f300 	lsl.w	r3, r3, r0
 80174e0:	f2c0 8260 	blt.w	80179a4 <arm_nn_mat_mult_kernel_s16+0x76c>
 80174e4:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 80174e8:	2200      	movs	r2, #0
 80174ea:	fbc4 5203 	smlal	r5, r2, r4, r3
 80174ee:	0fe8      	lsrs	r0, r5, #31
 80174f0:	ea50 0042 	orrs.w	r0, r0, r2, lsl #1
 80174f4:	f100 8212 	bmi.w	801791c <arm_nn_mat_mult_kernel_s16+0x6e4>
 80174f8:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 80174fa:	4299      	cmp	r1, r3
 80174fc:	bfb8      	it	lt
 80174fe:	4619      	movlt	r1, r3
 8017500:	4298      	cmp	r0, r3
 8017502:	bfb8      	it	lt
 8017504:	4618      	movlt	r0, r3
 8017506:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017508:	4299      	cmp	r1, r3
 801750a:	bfa8      	it	ge
 801750c:	4619      	movge	r1, r3
 801750e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017510:	f823 1c02 	strh.w	r1, [r3, #-2]
 8017514:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017516:	4298      	cmp	r0, r3
 8017518:	bfa8      	it	ge
 801751a:	4618      	movge	r0, r3
 801751c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801751e:	f823 0c02 	strh.w	r0, [r3, #-2]
 8017522:	9b03      	ldr	r3, [sp, #12]
 8017524:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8017526:	4413      	add	r3, r2
 8017528:	469b      	mov	fp, r3
 801752a:	9b07      	ldr	r3, [sp, #28]
 801752c:	3308      	adds	r3, #8
 801752e:	9307      	str	r3, [sp, #28]
 8017530:	9b08      	ldr	r3, [sp, #32]
 8017532:	3308      	adds	r3, #8
 8017534:	9308      	str	r3, [sp, #32]
 8017536:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017538:	3304      	adds	r3, #4
 801753a:	9310      	str	r3, [sp, #64]	; 0x40
 801753c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801753e:	3304      	adds	r3, #4
 8017540:	9309      	str	r3, [sp, #36]	; 0x24
 8017542:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017544:	3b01      	subs	r3, #1
 8017546:	9311      	str	r3, [sp, #68]	; 0x44
 8017548:	f47f aed7 	bne.w	80172fa <arm_nn_mat_mult_kernel_s16+0xc2>
 801754c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801754e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017550:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 8017554:	9220      	str	r2, [sp, #128]	; 0x80
 8017556:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8017558:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 801755c:	9232      	str	r2, [sp, #200]	; 0xc8
 801755e:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 8017560:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8017564:	9237      	str	r2, [sp, #220]	; 0xdc
 8017566:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8017568:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801756c:	931f      	str	r3, [sp, #124]	; 0x7c
 801756e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017570:	07db      	lsls	r3, r3, #31
 8017572:	f140 809f 	bpl.w	80176b4 <arm_nn_mat_mult_kernel_s16+0x47c>
 8017576:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017578:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801757a:	f3c3 028f 	ubfx	r2, r3, #2, #16
 801757e:	ea4f 0ea3 	mov.w	lr, r3, asr #2
 8017582:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 8017584:	eb04 0843 	add.w	r8, r4, r3, lsl #1
 8017588:	2a00      	cmp	r2, #0
 801758a:	f000 82ca 	beq.w	8017b22 <arm_nn_mat_mult_kernel_s16+0x8ea>
 801758e:	fa1f fe8e 	uxth.w	lr, lr
 8017592:	2200      	movs	r2, #0
 8017594:	eb0b 0c8e 	add.w	ip, fp, lr, lsl #2
 8017598:	4645      	mov	r5, r8
 801759a:	4611      	mov	r1, r2
 801759c:	f85b 3b04 	ldr.w	r3, [fp], #4
 80175a0:	fa2f f793 	sxtb16	r7, r3, ror #8
 80175a4:	fa2f f383 	sxtb16	r3, r3
 80175a8:	6820      	ldr	r0, [r4, #0]
 80175aa:	eac7 4623 	pkhtb	r6, r7, r3, asr #16
 80175ae:	eac3 4307 	pkhbt	r3, r3, r7, lsl #16
 80175b2:	fb23 1100 	smlad	r1, r3, r0, r1
 80175b6:	6828      	ldr	r0, [r5, #0]
 80175b8:	fb23 2300 	smlad	r3, r3, r0, r2
 80175bc:	6860      	ldr	r0, [r4, #4]
 80175be:	686a      	ldr	r2, [r5, #4]
 80175c0:	3408      	adds	r4, #8
 80175c2:	3508      	adds	r5, #8
 80175c4:	fb26 1100 	smlad	r1, r6, r0, r1
 80175c8:	fb26 3202 	smlad	r2, r6, r2, r3
 80175cc:	45e3      	cmp	fp, ip
 80175ce:	d1e5      	bne.n	801759c <arm_nn_mat_mult_kernel_s16+0x364>
 80175d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80175d2:	eb03 03ce 	add.w	r3, r3, lr, lsl #3
 80175d6:	9314      	str	r3, [sp, #80]	; 0x50
 80175d8:	eb08 08ce 	add.w	r8, r8, lr, lsl #3
 80175dc:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80175de:	f013 0303 	ands.w	r3, r3, #3
 80175e2:	d027      	beq.n	8017634 <arm_nn_mat_mult_kernel_s16+0x3fc>
 80175e4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80175e6:	f99c 0000 	ldrsb.w	r0, [ip]
 80175ea:	8834      	ldrh	r4, [r6, #0]
 80175ec:	fb14 1100 	smlabb	r1, r4, r0, r1
 80175f0:	f8b8 4000 	ldrh.w	r4, [r8]
 80175f4:	fb14 2200 	smlabb	r2, r4, r0, r2
 80175f8:	1e58      	subs	r0, r3, #1
 80175fa:	b280      	uxth	r0, r0
 80175fc:	b198      	cbz	r0, 8017626 <arm_nn_mat_mult_kernel_s16+0x3ee>
 80175fe:	f99c 4001 	ldrsb.w	r4, [ip, #1]
 8017602:	8875      	ldrh	r5, [r6, #2]
 8017604:	fb15 1104 	smlabb	r1, r5, r4, r1
 8017608:	f8b8 5002 	ldrh.w	r5, [r8, #2]
 801760c:	2801      	cmp	r0, #1
 801760e:	fb15 2204 	smlabb	r2, r5, r4, r2
 8017612:	d008      	beq.n	8017626 <arm_nn_mat_mult_kernel_s16+0x3ee>
 8017614:	f99c 0002 	ldrsb.w	r0, [ip, #2]
 8017618:	88b4      	ldrh	r4, [r6, #4]
 801761a:	fb14 1100 	smlabb	r1, r4, r0, r1
 801761e:	f8b8 4004 	ldrh.w	r4, [r8, #4]
 8017622:	fb14 2200 	smlabb	r2, r4, r0, r2
 8017626:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017628:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801762c:	449c      	add	ip, r3
 801762e:	9014      	str	r0, [sp, #80]	; 0x50
 8017630:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8017634:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017636:	2b00      	cmp	r3, #0
 8017638:	f000 81cc 	beq.w	80179d4 <arm_nn_mat_mult_kernel_s16+0x79c>
 801763c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801763e:	b113      	cbz	r3, 8017646 <arm_nn_mat_mult_kernel_s16+0x40e>
 8017640:	681b      	ldr	r3, [r3, #0]
 8017642:	4419      	add	r1, r3
 8017644:	441a      	add	r2, r3
 8017646:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017648:	9832      	ldr	r0, [sp, #200]	; 0xc8
 801764a:	681b      	ldr	r3, [r3, #0]
 801764c:	6806      	ldr	r6, [r0, #0]
 801764e:	2700      	movs	r7, #0
 8017650:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017654:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8017658:	fa01 fc04 	lsl.w	ip, r1, r4
 801765c:	463d      	mov	r5, r7
 801765e:	4601      	mov	r1, r0
 8017660:	fbcc 1506 	smlal	r1, r5, ip, r6
 8017664:	0fc9      	lsrs	r1, r1, #31
 8017666:	42bb      	cmp	r3, r7
 8017668:	ea41 0145 	orr.w	r1, r1, r5, lsl #1
 801766c:	f340 8237 	ble.w	8017ade <arm_nn_mat_mult_kernel_s16+0x8a6>
 8017670:	2900      	cmp	r1, #0
 8017672:	f2c0 8261 	blt.w	8017b38 <arm_nn_mat_mult_kernel_s16+0x900>
 8017676:	fa02 f404 	lsl.w	r4, r2, r4
 801767a:	4603      	mov	r3, r0
 801767c:	463a      	mov	r2, r7
 801767e:	fbc6 3204 	smlal	r3, r2, r6, r4
 8017682:	0fdb      	lsrs	r3, r3, #31
 8017684:	ea53 0342 	orrs.w	r3, r3, r2, lsl #1
 8017688:	f100 8251 	bmi.w	8017b2e <arm_nn_mat_mult_kernel_s16+0x8f6>
 801768c:	9833      	ldr	r0, [sp, #204]	; 0xcc
 801768e:	9a37      	ldr	r2, [sp, #220]	; 0xdc
 8017690:	4281      	cmp	r1, r0
 8017692:	bfb8      	it	lt
 8017694:	4601      	movlt	r1, r0
 8017696:	4283      	cmp	r3, r0
 8017698:	bfb8      	it	lt
 801769a:	4603      	movlt	r3, r0
 801769c:	9834      	ldr	r0, [sp, #208]	; 0xd0
 801769e:	4281      	cmp	r1, r0
 80176a0:	bfa8      	it	ge
 80176a2:	4601      	movge	r1, r0
 80176a4:	f822 1b02 	strh.w	r1, [r2], #2
 80176a8:	4283      	cmp	r3, r0
 80176aa:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80176ac:	9237      	str	r2, [sp, #220]	; 0xdc
 80176ae:	bfa8      	it	ge
 80176b0:	4603      	movge	r3, r0
 80176b2:	800b      	strh	r3, [r1, #0]
 80176b4:	9824      	ldr	r0, [sp, #144]	; 0x90
 80176b6:	9b37      	ldr	r3, [sp, #220]	; 0xdc
 80176b8:	4418      	add	r0, r3
 80176ba:	b029      	add	sp, #164	; 0xa4
 80176bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176c0:	900a      	str	r0, [sp, #40]	; 0x28
 80176c2:	17c0      	asrs	r0, r0, #31
 80176c4:	e9cd 0a0b 	strd	r0, sl, [sp, #44]	; 0x2c
 80176c8:	ea4f 70ea 	mov.w	r0, sl, asr #31
 80176cc:	e9cd 030d 	strd	r0, r3, [sp, #52]	; 0x34
 80176d0:	17db      	asrs	r3, r3, #31
 80176d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80176d4:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80176d6:	9404      	str	r4, [sp, #16]
 80176d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80176dc:	ea4f 74e4 	mov.w	r4, r4, asr #31
 80176e0:	9405      	str	r4, [sp, #20]
 80176e2:	f300 8123 	bgt.w	801792c <arm_nn_mat_mult_kernel_s16+0x6f4>
 80176e6:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80176e8:	b31d      	cbz	r5, 8017732 <arm_nn_mat_mult_kernel_s16+0x4fa>
 80176ea:	e9d5 2100 	ldrd	r2, r1, [r5]
 80176ee:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
 80176f2:	1994      	adds	r4, r2, r6
 80176f4:	eb41 0007 	adc.w	r0, r1, r7
 80176f8:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
 80176fc:	19d2      	adds	r2, r2, r7
 80176fe:	4646      	mov	r6, r8
 8017700:	eb41 0106 	adc.w	r1, r1, r6
 8017704:	68ab      	ldr	r3, [r5, #8]
 8017706:	e9cd 4004 	strd	r4, r0, [sp, #16]
 801770a:	e9cd 210a 	strd	r2, r1, [sp, #40]	; 0x28
 801770e:	68ea      	ldr	r2, [r5, #12]
 8017710:	f105 0110 	add.w	r1, r5, #16
 8017714:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
 8017718:	1918      	adds	r0, r3, r4
 801771a:	9118      	str	r1, [sp, #96]	; 0x60
 801771c:	eb42 0105 	adc.w	r1, r2, r5
 8017720:	e9dd 560e 	ldrd	r5, r6, [sp, #56]	; 0x38
 8017724:	195b      	adds	r3, r3, r5
 8017726:	eb42 0206 	adc.w	r2, r2, r6
 801772a:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 801772e:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
 8017732:	9b08      	ldr	r3, [sp, #32]
 8017734:	f853 2c08 	ldr.w	r2, [r3, #-8]
 8017738:	4ba5      	ldr	r3, [pc, #660]	; (80179d0 <arm_nn_mat_mult_kernel_s16+0x798>)
 801773a:	429a      	cmp	r2, r3
 801773c:	f300 80a2 	bgt.w	8017884 <arm_nn_mat_mult_kernel_s16+0x64c>
 8017740:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8017744:	1413      	asrs	r3, r2, #16
 8017746:	17d2      	asrs	r2, r2, #31
 8017748:	e9dd 7804 	ldrd	r7, r8, [sp, #16]
 801774c:	9907      	ldr	r1, [sp, #28]
 801774e:	fb07 f502 	mul.w	r5, r7, r2
 8017752:	f851 4c08 	ldr.w	r4, [r1, #-8]
 8017756:	fba7 0703 	umull	r0, r7, r7, r3
 801775a:	fb03 5508 	mla	r5, r3, r8, r5
 801775e:	f1c4 010e 	rsb	r1, r4, #14
 8017762:	443d      	add	r5, r7
 8017764:	3412      	adds	r4, #18
 8017766:	f1b1 0620 	subs.w	r6, r1, #32
 801776a:	fa05 f704 	lsl.w	r7, r5, r4
 801776e:	fa20 f001 	lsr.w	r0, r0, r1
 8017772:	bf58      	it	pl
 8017774:	fa45 f606 	asrpl.w	r6, r5, r6
 8017778:	ea40 0007 	orr.w	r0, r0, r7
 801777c:	bf58      	it	pl
 801777e:	4330      	orrpl	r0, r6
 8017780:	e9dd 670a 	ldrd	r6, r7, [sp, #40]	; 0x28
 8017784:	fb06 f202 	mul.w	r2, r6, r2
 8017788:	fb03 2207 	mla	r2, r3, r7, r2
 801778c:	fba6 3503 	umull	r3, r5, r6, r3
 8017790:	442a      	add	r2, r5
 8017792:	fa02 f404 	lsl.w	r4, r2, r4
 8017796:	40cb      	lsrs	r3, r1
 8017798:	3920      	subs	r1, #32
 801779a:	ea43 0304 	orr.w	r3, r3, r4
 801779e:	bf5c      	itt	pl
 80177a0:	fa42 f101 	asrpl.w	r1, r2, r1
 80177a4:	430b      	orrpl	r3, r1
 80177a6:	3301      	adds	r3, #1
 80177a8:	105a      	asrs	r2, r3, #1
 80177aa:	9b08      	ldr	r3, [sp, #32]
 80177ac:	f853 4c04 	ldr.w	r4, [r3, #-4]
 80177b0:	4b87      	ldr	r3, [pc, #540]	; (80179d0 <arm_nn_mat_mult_kernel_s16+0x798>)
 80177b2:	3001      	adds	r0, #1
 80177b4:	429c      	cmp	r4, r3
 80177b6:	ea4f 0060 	mov.w	r0, r0, asr #1
 80177ba:	dc67      	bgt.n	801788c <arm_nn_mat_mult_kernel_s16+0x654>
 80177bc:	f504 4400 	add.w	r4, r4, #32768	; 0x8000
 80177c0:	1423      	asrs	r3, r4, #16
 80177c2:	17e4      	asrs	r4, r4, #31
 80177c4:	e9dd 890c 	ldrd	r8, r9, [sp, #48]	; 0x30
 80177c8:	9907      	ldr	r1, [sp, #28]
 80177ca:	fb08 f704 	mul.w	r7, r8, r4
 80177ce:	f851 6c04 	ldr.w	r6, [r1, #-4]
 80177d2:	fb03 7709 	mla	r7, r3, r9, r7
 80177d6:	fba8 1e03 	umull	r1, lr, r8, r3
 80177da:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
 80177de:	f1c6 050e 	rsb	r5, r6, #14
 80177e2:	f1b5 0c20 	subs.w	ip, r5, #32
 80177e6:	4477      	add	r7, lr
 80177e8:	f106 0612 	add.w	r6, r6, #18
 80177ec:	fa07 fe06 	lsl.w	lr, r7, r6
 80177f0:	bf58      	it	pl
 80177f2:	fa47 fc0c 	asrpl.w	ip, r7, ip
 80177f6:	4647      	mov	r7, r8
 80177f8:	fa21 f105 	lsr.w	r1, r1, r5
 80177fc:	fb07 f404 	mul.w	r4, r7, r4
 8017800:	ea41 010e 	orr.w	r1, r1, lr
 8017804:	fb03 4409 	mla	r4, r3, r9, r4
 8017808:	fba8 3703 	umull	r3, r7, r8, r3
 801780c:	443c      	add	r4, r7
 801780e:	bf58      	it	pl
 8017810:	ea41 010c 	orrpl.w	r1, r1, ip
 8017814:	40eb      	lsrs	r3, r5
 8017816:	3d20      	subs	r5, #32
 8017818:	bf58      	it	pl
 801781a:	fa44 f505 	asrpl.w	r5, r4, r5
 801781e:	fa04 f606 	lsl.w	r6, r4, r6
 8017822:	9c33      	ldr	r4, [sp, #204]	; 0xcc
 8017824:	ea43 0306 	orr.w	r3, r3, r6
 8017828:	bf58      	it	pl
 801782a:	432b      	orrpl	r3, r5
 801782c:	3101      	adds	r1, #1
 801782e:	42a0      	cmp	r0, r4
 8017830:	ea4f 0161 	mov.w	r1, r1, asr #1
 8017834:	bfb8      	it	lt
 8017836:	4620      	movlt	r0, r4
 8017838:	3301      	adds	r3, #1
 801783a:	42a2      	cmp	r2, r4
 801783c:	ea4f 0363 	mov.w	r3, r3, asr #1
 8017840:	bfb8      	it	lt
 8017842:	4622      	movlt	r2, r4
 8017844:	42a1      	cmp	r1, r4
 8017846:	bfb8      	it	lt
 8017848:	4621      	movlt	r1, r4
 801784a:	42a3      	cmp	r3, r4
 801784c:	bfb8      	it	lt
 801784e:	4623      	movlt	r3, r4
 8017850:	9c34      	ldr	r4, [sp, #208]	; 0xd0
 8017852:	42a0      	cmp	r0, r4
 8017854:	bfa8      	it	ge
 8017856:	4620      	movge	r0, r4
 8017858:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801785a:	f824 0c04 	strh.w	r0, [r4, #-4]
 801785e:	9834      	ldr	r0, [sp, #208]	; 0xd0
 8017860:	4282      	cmp	r2, r0
 8017862:	bfa8      	it	ge
 8017864:	4602      	movge	r2, r0
 8017866:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017868:	f820 2c04 	strh.w	r2, [r0, #-4]
 801786c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801786e:	4291      	cmp	r1, r2
 8017870:	bfa8      	it	ge
 8017872:	4611      	movge	r1, r2
 8017874:	4293      	cmp	r3, r2
 8017876:	bfa8      	it	ge
 8017878:	4613      	movge	r3, r2
 801787a:	f824 1c02 	strh.w	r1, [r4, #-2]
 801787e:	f820 3c02 	strh.w	r3, [r0, #-2]
 8017882:	e64e      	b.n	8017522 <arm_nn_mat_mult_kernel_s16+0x2ea>
 8017884:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017888:	2200      	movs	r2, #0
 801788a:	e75d      	b.n	8017748 <arm_nn_mat_mult_kernel_s16+0x510>
 801788c:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017890:	2400      	movs	r4, #0
 8017892:	e797      	b.n	80177c4 <arm_nn_mat_mult_kernel_s16+0x58c>
 8017894:	4252      	negs	r2, r2
 8017896:	2501      	movs	r5, #1
 8017898:	4095      	lsls	r5, r2
 801789a:	4083      	lsls	r3, r0
 801789c:	3d01      	subs	r5, #1
 801789e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80178a2:	f04f 0c00 	mov.w	ip, #0
 80178a6:	fbc4 0c03 	smlal	r0, ip, r4, r3
 80178aa:	ea01 0705 	and.w	r7, r1, r5
 80178ae:	106e      	asrs	r6, r5, #1
 80178b0:	4111      	asrs	r1, r2
 80178b2:	ea4f 70d0 	mov.w	r0, r0, lsr #31
 80178b6:	bf54      	ite	pl
 80178b8:	4633      	movpl	r3, r6
 80178ba:	1c73      	addmi	r3, r6, #1
 80178bc:	ea40 004c 	orr.w	r0, r0, ip, lsl #1
 80178c0:	429f      	cmp	r7, r3
 80178c2:	ea05 0500 	and.w	r5, r5, r0
 80178c6:	bfc8      	it	gt
 80178c8:	3101      	addgt	r1, #1
 80178ca:	4110      	asrs	r0, r2
 80178cc:	2800      	cmp	r0, #0
 80178ce:	db27      	blt.n	8017920 <arm_nn_mat_mult_kernel_s16+0x6e8>
 80178d0:	42ae      	cmp	r6, r5
 80178d2:	bfb8      	it	lt
 80178d4:	3001      	addlt	r0, #1
 80178d6:	e60f      	b.n	80174f8 <arm_nn_mat_mult_kernel_s16+0x2c0>
 80178d8:	4252      	negs	r2, r2
 80178da:	40a8      	lsls	r0, r5
 80178dc:	2401      	movs	r4, #1
 80178de:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 80178e2:	f04f 0e00 	mov.w	lr, #0
 80178e6:	4094      	lsls	r4, r2
 80178e8:	fbc6 5e00 	smlal	r5, lr, r6, r0
 80178ec:	3c01      	subs	r4, #1
 80178ee:	0fed      	lsrs	r5, r5, #31
 80178f0:	ea01 0c04 	and.w	ip, r1, r4
 80178f4:	1067      	asrs	r7, r4, #1
 80178f6:	4111      	asrs	r1, r2
 80178f8:	ea45 054e 	orr.w	r5, r5, lr, lsl #1
 80178fc:	ea04 0405 	and.w	r4, r4, r5
 8017900:	fa45 f502 	asr.w	r5, r5, r2
 8017904:	bf54      	ite	pl
 8017906:	463a      	movpl	r2, r7
 8017908:	1c7a      	addmi	r2, r7, #1
 801790a:	4594      	cmp	ip, r2
 801790c:	bfc8      	it	gt
 801790e:	3101      	addgt	r1, #1
 8017910:	2d00      	cmp	r5, #0
 8017912:	db09      	blt.n	8017928 <arm_nn_mat_mult_kernel_s16+0x6f0>
 8017914:	42a7      	cmp	r7, r4
 8017916:	bfb8      	it	lt
 8017918:	3501      	addlt	r5, #1
 801791a:	e5b4      	b.n	8017486 <arm_nn_mat_mult_kernel_s16+0x24e>
 801791c:	2500      	movs	r5, #0
 801791e:	462e      	mov	r6, r5
 8017920:	3601      	adds	r6, #1
 8017922:	e7d5      	b.n	80178d0 <arm_nn_mat_mult_kernel_s16+0x698>
 8017924:	2400      	movs	r4, #0
 8017926:	4627      	mov	r7, r4
 8017928:	3701      	adds	r7, #1
 801792a:	e7f3      	b.n	8017914 <arm_nn_mat_mult_kernel_s16+0x6dc>
 801792c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801792e:	2b00      	cmp	r3, #0
 8017930:	f43f aed9 	beq.w	80176e6 <arm_nn_mat_mult_kernel_s16+0x4ae>
 8017934:	9b03      	ldr	r3, [sp, #12]
 8017936:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8017938:	f8dd a018 	ldr.w	sl, [sp, #24]
 801793c:	9101      	str	r1, [sp, #4]
 801793e:	181d      	adds	r5, r3, r0
 8017940:	46ab      	mov	fp, r5
 8017942:	e9dd 670c 	ldrd	r6, r7, [sp, #48]	; 0x30
 8017946:	e9dd 890e 	ldrd	r8, r9, [sp, #56]	; 0x38
 801794a:	e9dd 450a 	ldrd	r4, r5, [sp, #40]	; 0x28
 801794e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8017952:	f913 eb01 	ldrsb.w	lr, [r3], #1
 8017956:	f932 cb02 	ldrsh.w	ip, [r2], #2
 801795a:	fbcc 018e 	smlalbb	r0, r1, ip, lr
 801795e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8017962:	f91a 0b01 	ldrsb.w	r0, [sl], #1
 8017966:	9901      	ldr	r1, [sp, #4]
 8017968:	fbcc 6780 	smlalbb	r6, r7, ip, r0
 801796c:	f931 cb02 	ldrsh.w	ip, [r1], #2
 8017970:	9101      	str	r1, [sp, #4]
 8017972:	455b      	cmp	r3, fp
 8017974:	fbcc 458e 	smlalbb	r4, r5, ip, lr
 8017978:	fbcc 8980 	smlalbb	r8, r9, ip, r0
 801797c:	d1e7      	bne.n	801794e <arm_nn_mat_mult_kernel_s16+0x716>
 801797e:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
 8017982:	e9cd 670c 	strd	r6, r7, [sp, #48]	; 0x30
 8017986:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 801798a:	9303      	str	r3, [sp, #12]
 801798c:	e6ab      	b.n	80176e6 <arm_nn_mat_mult_kernel_s16+0x4ae>
 801798e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8017992:	2400      	movs	r4, #0
 8017994:	fbc6 2400 	smlal	r2, r4, r6, r0
 8017998:	0fd5      	lsrs	r5, r2, #31
 801799a:	ea45 0544 	orr.w	r5, r5, r4, lsl #1
 801799e:	2400      	movs	r4, #0
 80179a0:	4627      	mov	r7, r4
 80179a2:	e7b5      	b.n	8017910 <arm_nn_mat_mult_kernel_s16+0x6d8>
 80179a4:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80179a8:	2000      	movs	r0, #0
 80179aa:	fbc4 2003 	smlal	r2, r0, r4, r3
 80179ae:	0fd2      	lsrs	r2, r2, #31
 80179b0:	2500      	movs	r5, #0
 80179b2:	ea42 0040 	orr.w	r0, r2, r0, lsl #1
 80179b6:	462e      	mov	r6, r5
 80179b8:	e788      	b.n	80178cc <arm_nn_mat_mult_kernel_s16+0x694>
 80179ba:	9916      	ldr	r1, [sp, #88]	; 0x58
 80179bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80179be:	f8cd b00c 	str.w	fp, [sp, #12]
 80179c2:	461c      	mov	r4, r3
 80179c4:	469a      	mov	sl, r3
 80179c6:	4618      	mov	r0, r3
 80179c8:	e4e4      	b.n	8017394 <arm_nn_mat_mult_kernel_s16+0x15c>
 80179ca:	9321      	str	r3, [sp, #132]	; 0x84
 80179cc:	e44a      	b.n	8017264 <arm_nn_mat_mult_kernel_s16+0x2c>
 80179ce:	bf00      	nop
 80179d0:	7ffeffff 	.word	0x7ffeffff
 80179d4:	9b35      	ldr	r3, [sp, #212]	; 0xd4
 80179d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80179da:	460c      	mov	r4, r1
 80179dc:	ea4f 75e1 	mov.w	r5, r1, asr #31
 80179e0:	4691      	mov	r9, r2
 80179e2:	ea4f 7ae2 	mov.w	sl, r2, asr #31
 80179e6:	dd15      	ble.n	8017a14 <arm_nn_mat_mult_kernel_s16+0x7dc>
 80179e8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80179ea:	b293      	uxth	r3, r2
 80179ec:	b193      	cbz	r3, 8017a14 <arm_nn_mat_mult_kernel_s16+0x7dc>
 80179ee:	fa1c f682 	uxtah	r6, ip, r2
 80179f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80179f4:	4648      	mov	r0, r9
 80179f6:	4651      	mov	r1, sl
 80179f8:	f91c 3b01 	ldrsb.w	r3, [ip], #1
 80179fc:	f832 7b02 	ldrh.w	r7, [r2], #2
 8017a00:	fbc7 4583 	smlalbb	r4, r5, r7, r3
 8017a04:	f838 7b02 	ldrh.w	r7, [r8], #2
 8017a08:	45b4      	cmp	ip, r6
 8017a0a:	fbc7 0183 	smlalbb	r0, r1, r7, r3
 8017a0e:	d1f3      	bne.n	80179f8 <arm_nn_mat_mult_kernel_s16+0x7c0>
 8017a10:	4681      	mov	r9, r0
 8017a12:	468a      	mov	sl, r1
 8017a14:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017a16:	b162      	cbz	r2, 8017a32 <arm_nn_mat_mult_kernel_s16+0x7fa>
 8017a18:	e9d2 3200 	ldrd	r3, r2, [r2]
 8017a1c:	191f      	adds	r7, r3, r4
 8017a1e:	eb42 0605 	adc.w	r6, r2, r5
 8017a22:	eb13 0309 	adds.w	r3, r3, r9
 8017a26:	eb42 020a 	adc.w	r2, r2, sl
 8017a2a:	463c      	mov	r4, r7
 8017a2c:	4635      	mov	r5, r6
 8017a2e:	4699      	mov	r9, r3
 8017a30:	4692      	mov	sl, r2
 8017a32:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8017a34:	4a45      	ldr	r2, [pc, #276]	; (8017b4c <arm_nn_mat_mult_kernel_s16+0x914>)
 8017a36:	681b      	ldr	r3, [r3, #0]
 8017a38:	4293      	cmp	r3, r2
 8017a3a:	dd4b      	ble.n	8017ad4 <arm_nn_mat_mult_kernel_s16+0x89c>
 8017a3c:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8017a40:	2300      	movs	r3, #0
 8017a42:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017a44:	fb04 f703 	mul.w	r7, r4, r3
 8017a48:	6812      	ldr	r2, [r2, #0]
 8017a4a:	fba4 c406 	umull	ip, r4, r4, r6
 8017a4e:	fb06 7705 	mla	r7, r6, r5, r7
 8017a52:	4427      	add	r7, r4
 8017a54:	f102 0512 	add.w	r5, r2, #18
 8017a58:	f1c2 040e 	rsb	r4, r2, #14
 8017a5c:	fa2c f204 	lsr.w	r2, ip, r4
 8017a60:	fa07 fc05 	lsl.w	ip, r7, r5
 8017a64:	ea42 020c 	orr.w	r2, r2, ip
 8017a68:	fb09 f303 	mul.w	r3, r9, r3
 8017a6c:	f1b4 0c20 	subs.w	ip, r4, #32
 8017a70:	bf58      	it	pl
 8017a72:	fa47 fc0c 	asrpl.w	ip, r7, ip
 8017a76:	fb06 310a 	mla	r1, r6, sl, r3
 8017a7a:	fba9 3006 	umull	r3, r0, r9, r6
 8017a7e:	4401      	add	r1, r0
 8017a80:	bf58      	it	pl
 8017a82:	ea42 020c 	orrpl.w	r2, r2, ip
 8017a86:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8017a88:	40e3      	lsrs	r3, r4
 8017a8a:	fa01 f505 	lsl.w	r5, r1, r5
 8017a8e:	3c20      	subs	r4, #32
 8017a90:	f102 0201 	add.w	r2, r2, #1
 8017a94:	ea4f 0262 	mov.w	r2, r2, asr #1
 8017a98:	bf58      	it	pl
 8017a9a:	fa41 f404 	asrpl.w	r4, r1, r4
 8017a9e:	ea43 0305 	orr.w	r3, r3, r5
 8017aa2:	bf58      	it	pl
 8017aa4:	4323      	orrpl	r3, r4
 8017aa6:	4282      	cmp	r2, r0
 8017aa8:	bfb8      	it	lt
 8017aaa:	4602      	movlt	r2, r0
 8017aac:	9834      	ldr	r0, [sp, #208]	; 0xd0
 8017aae:	9937      	ldr	r1, [sp, #220]	; 0xdc
 8017ab0:	4282      	cmp	r2, r0
 8017ab2:	bfa8      	it	ge
 8017ab4:	4602      	movge	r2, r0
 8017ab6:	f821 2b02 	strh.w	r2, [r1], #2
 8017aba:	3301      	adds	r3, #1
 8017abc:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017abe:	9137      	str	r1, [sp, #220]	; 0xdc
 8017ac0:	105b      	asrs	r3, r3, #1
 8017ac2:	4293      	cmp	r3, r2
 8017ac4:	bfb8      	it	lt
 8017ac6:	4613      	movlt	r3, r2
 8017ac8:	4283      	cmp	r3, r0
 8017aca:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8017acc:	bfa8      	it	ge
 8017ace:	4603      	movge	r3, r0
 8017ad0:	8013      	strh	r3, [r2, #0]
 8017ad2:	e5ef      	b.n	80176b4 <arm_nn_mat_mult_kernel_s16+0x47c>
 8017ad4:	f503 4300 	add.w	r3, r3, #32768	; 0x8000
 8017ad8:	141e      	asrs	r6, r3, #16
 8017ada:	17db      	asrs	r3, r3, #31
 8017adc:	e7b1      	b.n	8017a42 <arm_nn_mat_mult_kernel_s16+0x80a>
 8017ade:	425b      	negs	r3, r3
 8017ae0:	fa02 f404 	lsl.w	r4, r2, r4
 8017ae4:	2501      	movs	r5, #1
 8017ae6:	4602      	mov	r2, r0
 8017ae8:	409d      	lsls	r5, r3
 8017aea:	fbc6 2704 	smlal	r2, r7, r6, r4
 8017aee:	3d01      	subs	r5, #1
 8017af0:	0fd2      	lsrs	r2, r2, #31
 8017af2:	ea42 0247 	orr.w	r2, r2, r7, lsl #1
 8017af6:	ea01 0e05 	and.w	lr, r1, r5
 8017afa:	ea4f 0c65 	mov.w	ip, r5, asr #1
 8017afe:	4119      	asrs	r1, r3
 8017b00:	ea05 0502 	and.w	r5, r5, r2
 8017b04:	fa42 f303 	asr.w	r3, r2, r3
 8017b08:	bf54      	ite	pl
 8017b0a:	4662      	movpl	r2, ip
 8017b0c:	f10c 0201 	addmi.w	r2, ip, #1
 8017b10:	4596      	cmp	lr, r2
 8017b12:	bfc8      	it	gt
 8017b14:	3101      	addgt	r1, #1
 8017b16:	2b00      	cmp	r3, #0
 8017b18:	db0b      	blt.n	8017b32 <arm_nn_mat_mult_kernel_s16+0x8fa>
 8017b1a:	45ac      	cmp	ip, r5
 8017b1c:	bfb8      	it	lt
 8017b1e:	3301      	addlt	r3, #1
 8017b20:	e5b4      	b.n	801768c <arm_nn_mat_mult_kernel_s16+0x454>
 8017b22:	46dc      	mov	ip, fp
 8017b24:	4611      	mov	r1, r2
 8017b26:	e559      	b.n	80175dc <arm_nn_mat_mult_kernel_s16+0x3a4>
 8017b28:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017b2a:	9319      	str	r3, [sp, #100]	; 0x64
 8017b2c:	e51f      	b.n	801756e <arm_nn_mat_mult_kernel_s16+0x336>
 8017b2e:	463d      	mov	r5, r7
 8017b30:	46bc      	mov	ip, r7
 8017b32:	f10c 0c01 	add.w	ip, ip, #1
 8017b36:	e7f0      	b.n	8017b1a <arm_nn_mat_mult_kernel_s16+0x8e2>
 8017b38:	40a2      	lsls	r2, r4
 8017b3a:	463b      	mov	r3, r7
 8017b3c:	fbc6 0302 	smlal	r0, r3, r6, r2
 8017b40:	0fc2      	lsrs	r2, r0, #31
 8017b42:	ea42 0343 	orr.w	r3, r2, r3, lsl #1
 8017b46:	463d      	mov	r5, r7
 8017b48:	46bc      	mov	ip, r7
 8017b4a:	e7e4      	b.n	8017b16 <arm_nn_mat_mult_kernel_s16+0x8de>
 8017b4c:	7ffeffff 	.word	0x7ffeffff

08017b50 <arm_nn_softmax_common_s8>:
 8017b50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b54:	b0a5      	sub	sp, #148	; 0x94
 8017b56:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8017b5a:	9301      	str	r3, [sp, #4]
 8017b5c:	f89d 30c0 	ldrb.w	r3, [sp, #192]	; 0xc0
 8017b60:	9322      	str	r3, [sp, #136]	; 0x88
 8017b62:	1e0b      	subs	r3, r1, #0
 8017b64:	9321      	str	r3, [sp, #132]	; 0x84
 8017b66:	f340 8467 	ble.w	8018438 <arm_nn_softmax_common_s8+0x8e8>
 8017b6a:	1e53      	subs	r3, r2, #1
 8017b6c:	18c3      	adds	r3, r0, r3
 8017b6e:	0052      	lsls	r2, r2, #1
 8017b70:	9306      	str	r3, [sp, #24]
 8017b72:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017b74:	9318      	str	r3, [sp, #96]	; 0x60
 8017b76:	9223      	str	r2, [sp, #140]	; 0x8c
 8017b78:	9319      	str	r3, [sp, #100]	; 0x64
 8017b7a:	1e42      	subs	r2, r0, #1
 8017b7c:	2300      	movs	r3, #0
 8017b7e:	f8df b358 	ldr.w	fp, [pc, #856]	; 8017ed8 <arm_nn_softmax_common_s8+0x388>
 8017b82:	9216      	str	r2, [sp, #88]	; 0x58
 8017b84:	4601      	mov	r1, r0
 8017b86:	931e      	str	r3, [sp, #120]	; 0x78
 8017b88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017b8a:	f993 2001 	ldrsb.w	r2, [r3, #1]
 8017b8e:	9b04      	ldr	r3, [sp, #16]
 8017b90:	9202      	str	r2, [sp, #8]
 8017b92:	2b01      	cmp	r3, #1
 8017b94:	f340 86df 	ble.w	8018956 <arm_nn_softmax_common_s8+0xe06>
 8017b98:	e9dd 3005 	ldrd	r3, r0, [sp, #20]
 8017b9c:	f913 1f01 	ldrsb.w	r1, [r3, #1]!
 8017ba0:	428a      	cmp	r2, r1
 8017ba2:	bfb8      	it	lt
 8017ba4:	460a      	movlt	r2, r1
 8017ba6:	4283      	cmp	r3, r0
 8017ba8:	d1f8      	bne.n	8017b9c <arm_nn_softmax_common_s8+0x4c>
 8017baa:	9202      	str	r2, [sp, #8]
 8017bac:	2300      	movs	r3, #0
 8017bae:	9303      	str	r3, [sp, #12]
 8017bb0:	9b01      	ldr	r3, [sp, #4]
 8017bb2:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 8017bb6:	0fdb      	lsrs	r3, r3, #31
 8017bb8:	9315      	str	r3, [sp, #84]	; 0x54
 8017bba:	e07c      	b.n	8017cb6 <arm_nn_softmax_common_s8+0x166>
 8017bbc:	49be      	ldr	r1, [pc, #760]	; (8017eb8 <arm_nn_softmax_common_s8+0x368>)
 8017bbe:	fbc0 2301 	smlal	r2, r3, r0, r1
 8017bc2:	2b00      	cmp	r3, #0
 8017bc4:	da04      	bge.n	8017bd0 <arm_nn_softmax_common_s8+0x80>
 8017bc6:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8017bca:	1852      	adds	r2, r2, r1
 8017bcc:	f143 0300 	adc.w	r3, r3, #0
 8017bd0:	0fd2      	lsrs	r2, r2, #31
 8017bd2:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 8017bd6:	f102 42e2 	add.w	r2, r2, #1895825408	; 0x71000000
 8017bda:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8017bde:	2100      	movs	r1, #0
 8017be0:	48b6      	ldr	r0, [pc, #728]	; (8017ebc <arm_nn_softmax_common_s8+0x36c>)
 8017be2:	f5a2 2225 	sub.w	r2, r2, #675840	; 0xa5000
 8017be6:	f2a2 726c 	subw	r2, r2, #1900	; 0x76c
 8017bea:	469c      	mov	ip, r3
 8017bec:	460d      	mov	r5, r1
 8017bee:	fbc2 c500 	smlal	ip, r5, r2, r0
 8017bf2:	4660      	mov	r0, ip
 8017bf4:	0fc0      	lsrs	r0, r0, #31
 8017bf6:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 8017bfa:	4020      	ands	r0, r4
 8017bfc:	4017      	ands	r7, r2
 8017bfe:	4cb0      	ldr	r4, [pc, #704]	; (8017ec0 <arm_nn_softmax_common_s8+0x370>)
 8017c00:	4db0      	ldr	r5, [pc, #704]	; (8017ec4 <arm_nn_softmax_common_s8+0x374>)
 8017c02:	4047      	eors	r7, r0
 8017c04:	461a      	mov	r2, r3
 8017c06:	4608      	mov	r0, r1
 8017c08:	fbc7 2004 	smlal	r2, r0, r7, r4
 8017c0c:	0fd2      	lsrs	r2, r2, #31
 8017c0e:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8017c12:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017c14:	403e      	ands	r6, r7
 8017c16:	4010      	ands	r0, r2
 8017c18:	4046      	eors	r6, r0
 8017c1a:	461a      	mov	r2, r3
 8017c1c:	460c      	mov	r4, r1
 8017c1e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017c20:	fbc6 2405 	smlal	r2, r4, r6, r5
 8017c24:	4030      	ands	r0, r6
 8017c26:	0fd2      	lsrs	r2, r2, #31
 8017c28:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8017c2a:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8017c2e:	4016      	ands	r6, r2
 8017c30:	4070      	eors	r0, r6
 8017c32:	4ea5      	ldr	r6, [pc, #660]	; (8017ec8 <arm_nn_softmax_common_s8+0x378>)
 8017c34:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017c36:	461a      	mov	r2, r3
 8017c38:	460d      	mov	r5, r1
 8017c3a:	fbc0 2506 	smlal	r2, r5, r0, r6
 8017c3e:	4004      	ands	r4, r0
 8017c40:	0fd2      	lsrs	r2, r2, #31
 8017c42:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017c44:	4ea1      	ldr	r6, [pc, #644]	; (8017ecc <arm_nn_softmax_common_s8+0x37c>)
 8017c46:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8017c4a:	4010      	ands	r0, r2
 8017c4c:	4044      	eors	r4, r0
 8017c4e:	461a      	mov	r2, r3
 8017c50:	4608      	mov	r0, r1
 8017c52:	fbc4 2006 	smlal	r2, r0, r4, r6
 8017c56:	0fd2      	lsrs	r2, r2, #31
 8017c58:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8017c5c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8017c5e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8017c60:	4010      	ands	r0, r2
 8017c62:	4025      	ands	r5, r4
 8017c64:	4602      	mov	r2, r0
 8017c66:	4c9a      	ldr	r4, [pc, #616]	; (8017ed0 <arm_nn_softmax_common_s8+0x380>)
 8017c68:	406a      	eors	r2, r5
 8017c6a:	4618      	mov	r0, r3
 8017c6c:	460e      	mov	r6, r1
 8017c6e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8017c70:	fbc2 0604 	smlal	r0, r6, r2, r4
 8017c74:	4015      	ands	r5, r2
 8017c76:	0fc0      	lsrs	r0, r0, #31
 8017c78:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017c7a:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 8017c7e:	4002      	ands	r2, r0
 8017c80:	4055      	eors	r5, r2
 8017c82:	22f2      	movs	r2, #242	; 0xf2
 8017c84:	fbc5 3102 	smlal	r3, r1, r5, r2
 8017c88:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017c8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8017c8c:	0fdb      	lsrs	r3, r3, #31
 8017c8e:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8017c92:	4028      	ands	r0, r5
 8017c94:	401a      	ands	r2, r3
 8017c96:	4050      	eors	r0, r2
 8017c98:	1303      	asrs	r3, r0, #12
 8017c9a:	0505      	lsls	r5, r0, #20
 8017c9c:	bf48      	it	mi
 8017c9e:	3301      	addmi	r3, #1
 8017ca0:	9a03      	ldr	r2, [sp, #12]
 8017ca2:	441a      	add	r2, r3
 8017ca4:	9203      	str	r2, [sp, #12]
 8017ca6:	9a05      	ldr	r2, [sp, #20]
 8017ca8:	f10a 0302 	add.w	r3, sl, #2
 8017cac:	1a9b      	subs	r3, r3, r2
 8017cae:	9a04      	ldr	r2, [sp, #16]
 8017cb0:	429a      	cmp	r2, r3
 8017cb2:	f340 8113 	ble.w	8017edc <arm_nn_softmax_common_s8+0x38c>
 8017cb6:	9a02      	ldr	r2, [sp, #8]
 8017cb8:	46ca      	mov	sl, r9
 8017cba:	f919 3f01 	ldrsb.w	r3, [r9, #1]!
 8017cbe:	1a9b      	subs	r3, r3, r2
 8017cc0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8017cc2:	429a      	cmp	r2, r3
 8017cc4:	dcef      	bgt.n	8017ca6 <arm_nn_softmax_common_s8+0x156>
 8017cc6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017cc8:	9c01      	ldr	r4, [sp, #4]
 8017cca:	4093      	lsls	r3, r2
 8017ccc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8017cce:	ebb2 7fd3 	cmp.w	r2, r3, lsr #31
 8017cd2:	bf0b      	itete	eq
 8017cd4:	f04f 4280 	moveq.w	r2, #1073741824	; 0x40000000
 8017cd8:	465a      	movne	r2, fp
 8017cda:	2100      	moveq	r1, #0
 8017cdc:	f04f 31ff 	movne.w	r1, #4294967295
 8017ce0:	fbc4 2103 	smlal	r2, r1, r4, r3
 8017ce4:	2900      	cmp	r1, #0
 8017ce6:	4608      	mov	r0, r1
 8017ce8:	da04      	bge.n	8017cf4 <arm_nn_softmax_common_s8+0x1a4>
 8017cea:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8017cee:	1852      	adds	r2, r2, r1
 8017cf0:	f140 0000 	adc.w	r0, r0, #0
 8017cf4:	0fd1      	lsrs	r1, r2, #31
 8017cf6:	ea41 0240 	orr.w	r2, r1, r0, lsl #1
 8017cfa:	4611      	mov	r1, r2
 8017cfc:	9207      	str	r2, [sp, #28]
 8017cfe:	9a01      	ldr	r2, [sp, #4]
 8017d00:	429a      	cmp	r2, r3
 8017d02:	f000 80be 	beq.w	8017e82 <arm_nn_softmax_common_s8+0x332>
 8017d06:	f041 467f 	orr.w	r6, r1, #4278190080	; 0xff000000
 8017d0a:	0170      	lsls	r0, r6, #5
 8017d0c:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8017d10:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8017d14:	f04f 0800 	mov.w	r8, #0
 8017d18:	fbc0 3800 	smlal	r3, r8, r0, r0
 8017d1c:	f1b8 0f00 	cmp.w	r8, #0
 8017d20:	eba6 0601 	sub.w	r6, r6, r1
 8017d24:	da04      	bge.n	8017d30 <arm_nn_softmax_common_s8+0x1e0>
 8017d26:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 8017d2a:	195b      	adds	r3, r3, r5
 8017d2c:	f148 0800 	adc.w	r8, r8, #0
 8017d30:	0fdb      	lsrs	r3, r3, #31
 8017d32:	ea43 0348 	orr.w	r3, r3, r8, lsl #1
 8017d36:	fba3 2403 	umull	r2, r4, r3, r3
 8017d3a:	ea4f 78e8 	mov.w	r8, r8, asr #31
 8017d3e:	f112 4280 	adds.w	r2, r2, #1073741824	; 0x40000000
 8017d42:	fb03 f508 	mul.w	r5, r3, r8
 8017d46:	eb44 0445 	adc.w	r4, r4, r5, lsl #1
 8017d4a:	2c00      	cmp	r4, #0
 8017d4c:	9309      	str	r3, [sp, #36]	; 0x24
 8017d4e:	da04      	bge.n	8017d5a <arm_nn_softmax_common_s8+0x20a>
 8017d50:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 8017d54:	1952      	adds	r2, r2, r5
 8017d56:	f144 0400 	adc.w	r4, r4, #0
 8017d5a:	f3c6 65c0 	ubfx	r5, r6, #27, #1
 8017d5e:	1e69      	subs	r1, r5, #1
 8017d60:	f3c6 7500 	ubfx	r5, r6, #28, #1
 8017d64:	910c      	str	r1, [sp, #48]	; 0x30
 8017d66:	1e69      	subs	r1, r5, #1
 8017d68:	f3c6 7540 	ubfx	r5, r6, #29, #1
 8017d6c:	0fd2      	lsrs	r2, r2, #31
 8017d6e:	910e      	str	r1, [sp, #56]	; 0x38
 8017d70:	1e69      	subs	r1, r5, #1
 8017d72:	f3c6 6580 	ubfx	r5, r6, #26, #1
 8017d76:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8017d7a:	910f      	str	r1, [sp, #60]	; 0x3c
 8017d7c:	1e69      	subs	r1, r5, #1
 8017d7e:	f3c6 7780 	ubfx	r7, r6, #30, #1
 8017d82:	910a      	str	r1, [sp, #40]	; 0x28
 8017d84:	f002 0103 	and.w	r1, r2, #3
 8017d88:	9108      	str	r1, [sp, #32]
 8017d8a:	1e79      	subs	r1, r7, #1
 8017d8c:	9114      	str	r1, [sp, #80]	; 0x50
 8017d8e:	4279      	negs	r1, r7
 8017d90:	9110      	str	r1, [sp, #64]	; 0x40
 8017d92:	f346 61c0 	sbfx	r1, r6, #27, #1
 8017d96:	9113      	str	r1, [sp, #76]	; 0x4c
 8017d98:	f346 7100 	sbfx	r1, r6, #28, #1
 8017d9c:	9112      	str	r1, [sp, #72]	; 0x48
 8017d9e:	f346 7140 	sbfx	r1, r6, #29, #1
 8017da2:	17c4      	asrs	r4, r0, #31
 8017da4:	f3c6 6c40 	ubfx	ip, r6, #25, #1
 8017da8:	fb00 f808 	mul.w	r8, r0, r8
 8017dac:	1092      	asrs	r2, r2, #2
 8017dae:	9111      	str	r1, [sp, #68]	; 0x44
 8017db0:	f346 6180 	sbfx	r1, r6, #26, #1
 8017db4:	fb03 8804 	mla	r8, r3, r4, r8
 8017db8:	ea4f 7ed3 	mov.w	lr, r3, lsr #31
 8017dbc:	f3c6 6400 	ubfx	r4, r6, #24, #1
 8017dc0:	fba0 5303 	umull	r5, r3, r0, r3
 8017dc4:	910d      	str	r1, [sp, #52]	; 0x34
 8017dc6:	2a00      	cmp	r2, #0
 8017dc8:	f1cc 0100 	rsb	r1, ip, #0
 8017dcc:	4443      	add	r3, r8
 8017dce:	f104 37ff 	add.w	r7, r4, #4294967295
 8017dd2:	ea4f 78d0 	mov.w	r8, r0, lsr #31
 8017dd6:	f1c4 0400 	rsb	r4, r4, #0
 8017dda:	f10c 36ff 	add.w	r6, ip, #4294967295
 8017dde:	910b      	str	r1, [sp, #44]	; 0x2c
 8017de0:	db4c      	blt.n	8017e7c <arm_nn_softmax_common_s8+0x32c>
 8017de2:	f04f 0c01 	mov.w	ip, #1
 8017de6:	9908      	ldr	r1, [sp, #32]
 8017de8:	458c      	cmp	ip, r1
 8017dea:	bfb8      	it	lt
 8017dec:	3201      	addlt	r2, #1
 8017dee:	45f0      	cmp	r8, lr
 8017df0:	bf0b      	itete	eq
 8017df2:	f04f 4c80 	moveq.w	ip, #1073741824	; 0x40000000
 8017df6:	46dc      	movne	ip, fp
 8017df8:	f04f 0e00 	moveq.w	lr, #0
 8017dfc:	f04f 3eff 	movne.w	lr, #4294967295
 8017e00:	eb1c 0c05 	adds.w	ip, ip, r5
 8017e04:	eb43 030e 	adc.w	r3, r3, lr
 8017e08:	2b00      	cmp	r3, #0
 8017e0a:	da05      	bge.n	8017e18 <arm_nn_softmax_common_s8+0x2c8>
 8017e0c:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
 8017e10:	eb1c 0c05 	adds.w	ip, ip, r5
 8017e14:	f143 0300 	adc.w	r3, r3, #0
 8017e18:	ea4f 7cdc 	mov.w	ip, ip, lsr #31
 8017e1c:	ea4c 0c43 	orr.w	ip, ip, r3, lsl #1
 8017e20:	4462      	add	r2, ip
 8017e22:	2a00      	cmp	r2, #0
 8017e24:	492b      	ldr	r1, [pc, #172]	; (8017ed4 <arm_nn_softmax_common_s8+0x384>)
 8017e26:	bfab      	itete	ge
 8017e28:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 8017e2c:	465b      	movlt	r3, fp
 8017e2e:	2500      	movge	r5, #0
 8017e30:	f04f 35ff 	movlt.w	r5, #4294967295
 8017e34:	fbc2 3501 	smlal	r3, r5, r2, r1
 8017e38:	2d00      	cmp	r5, #0
 8017e3a:	da04      	bge.n	8017e46 <arm_nn_softmax_common_s8+0x2f6>
 8017e3c:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8017e40:	189b      	adds	r3, r3, r2
 8017e42:	f145 0500 	adc.w	r5, r5, #0
 8017e46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017e48:	0fdb      	lsrs	r3, r3, #31
 8017e4a:	ea43 0345 	orr.w	r3, r3, r5, lsl #1
 8017e4e:	441a      	add	r2, r3
 8017e50:	4613      	mov	r3, r2
 8017e52:	1052      	asrs	r2, r2, #1
 8017e54:	d402      	bmi.n	8017e5c <arm_nn_softmax_common_s8+0x30c>
 8017e56:	07d9      	lsls	r1, r3, #31
 8017e58:	bf48      	it	mi
 8017e5a:	3201      	addmi	r2, #1
 8017e5c:	4410      	add	r0, r2
 8017e5e:	9907      	ldr	r1, [sp, #28]
 8017e60:	2800      	cmp	r0, #0
 8017e62:	bfab      	itete	ge
 8017e64:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 8017e68:	465a      	movlt	r2, fp
 8017e6a:	2300      	movge	r3, #0
 8017e6c:	f04f 33ff 	movlt.w	r3, #4294967295
 8017e70:	2900      	cmp	r1, #0
 8017e72:	f47f aea3 	bne.w	8017bbc <arm_nn_softmax_common_s8+0x6c>
 8017e76:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8017e7a:	e711      	b.n	8017ca0 <arm_nn_softmax_common_s8+0x150>
 8017e7c:	f04f 0c02 	mov.w	ip, #2
 8017e80:	e7b1      	b.n	8017de6 <arm_nn_softmax_common_s8+0x296>
 8017e82:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8017e86:	f000 857b 	beq.w	8018980 <arm_nn_softmax_common_s8+0xe30>
 8017e8a:	f041 467f 	orr.w	r6, r1, #4278190080	; 0xff000000
 8017e8e:	0170      	lsls	r0, r6, #5
 8017e90:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8017e94:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8017e98:	f04f 0800 	mov.w	r8, #0
 8017e9c:	fbc0 3800 	smlal	r3, r8, r0, r0
 8017ea0:	f1b8 0f00 	cmp.w	r8, #0
 8017ea4:	eba6 0601 	sub.w	r6, r6, r1
 8017ea8:	f6bf af42 	bge.w	8017d30 <arm_nn_softmax_common_s8+0x1e0>
 8017eac:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8017eb0:	189b      	adds	r3, r3, r2
 8017eb2:	f148 0800 	adc.w	r8, r8, #0
 8017eb6:	e73b      	b.n	8017d30 <arm_nn_softmax_common_s8+0x1e0>
 8017eb8:	70f5a894 	.word	0x70f5a894
 8017ebc:	63afbe7b 	.word	0x63afbe7b
 8017ec0:	4da2cbf2 	.word	0x4da2cbf2
 8017ec4:	2f16ac6c 	.word	0x2f16ac6c
 8017ec8:	1152aaa4 	.word	0x1152aaa4
 8017ecc:	02582ab7 	.word	0x02582ab7
 8017ed0:	000afe11 	.word	0x000afe11
 8017ed4:	2aaaaaab 	.word	0x2aaaaaab
 8017ed8:	c0000001 	.word	0xc0000001
 8017edc:	9b03      	ldr	r3, [sp, #12]
 8017ede:	2b00      	cmp	r3, #0
 8017ee0:	f000 853b 	beq.w	801895a <arm_nn_softmax_common_s8+0xe0a>
 8017ee4:	fab3 f983 	clz	r9, r3
 8017ee8:	fa03 f209 	lsl.w	r2, r3, r9
 8017eec:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017ef0:	f112 4300 	adds.w	r3, r2, #2147483648	; 0x80000000
 8017ef4:	ea4f 72e2 	mov.w	r2, r2, asr #31
 8017ef8:	f142 0200 	adc.w	r2, r2, #0
 8017efc:	085b      	lsrs	r3, r3, #1
 8017efe:	ea43 73c2 	orr.w	r3, r3, r2, lsl #31
 8017f02:	497c      	ldr	r1, [pc, #496]	; (80180f4 <arm_nn_softmax_common_s8+0x5a4>)
 8017f04:	4258      	negs	r0, r3
 8017f06:	1052      	asrs	r2, r2, #1
 8017f08:	fb01 0402 	mla	r4, r1, r2, r0
 8017f0c:	fba3 1001 	umull	r1, r0, r3, r1
 8017f10:	eb11 010b 	adds.w	r1, r1, fp
 8017f14:	4420      	add	r0, r4
 8017f16:	f160 0000 	sbc.w	r0, r0, #0
 8017f1a:	2800      	cmp	r0, #0
 8017f1c:	da04      	bge.n	8017f28 <arm_nn_softmax_common_s8+0x3d8>
 8017f1e:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8017f22:	1909      	adds	r1, r1, r4
 8017f24:	f140 0000 	adc.w	r0, r0, #0
 8017f28:	0fc9      	lsrs	r1, r1, #31
 8017f2a:	ea41 0140 	orr.w	r1, r1, r0, lsl #1
 8017f2e:	f101 315a 	add.w	r1, r1, #1515870810	; 0x5a5a5a5a
 8017f32:	17c8      	asrs	r0, r1, #31
 8017f34:	fb01 f502 	mul.w	r5, r1, r2
 8017f38:	fb03 5500 	mla	r5, r3, r0, r5
 8017f3c:	fba1 0403 	umull	r0, r4, r1, r3
 8017f40:	f110 4080 	adds.w	r0, r0, #1073741824	; 0x40000000
 8017f44:	eb45 0404 	adc.w	r4, r5, r4
 8017f48:	0fc0      	lsrs	r0, r0, #31
 8017f4a:	ea40 0044 	orr.w	r0, r0, r4, lsl #1
 8017f4e:	f1d0 5000 	rsbs	r0, r0, #536870912	; 0x20000000
 8017f52:	f140 85ad 	bpl.w	8018ab0 <arm_nn_softmax_common_s8+0xf60>
 8017f56:	f04f 35ff 	mov.w	r5, #4294967295
 8017f5a:	465c      	mov	r4, fp
 8017f5c:	fbc1 4500 	smlal	r4, r5, r1, r0
 8017f60:	2d00      	cmp	r5, #0
 8017f62:	da04      	bge.n	8017f6e <arm_nn_softmax_common_s8+0x41e>
 8017f64:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017f68:	1824      	adds	r4, r4, r0
 8017f6a:	f145 0500 	adc.w	r5, r5, #0
 8017f6e:	0fe4      	lsrs	r4, r4, #31
 8017f70:	ea44 0445 	orr.w	r4, r4, r5, lsl #1
 8017f74:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8017f78:	17cd      	asrs	r5, r1, #31
 8017f7a:	fb03 f005 	mul.w	r0, r3, r5
 8017f7e:	fb01 0002 	mla	r0, r1, r2, r0
 8017f82:	fba3 e701 	umull	lr, r7, r3, r1
 8017f86:	2900      	cmp	r1, #0
 8017f88:	460c      	mov	r4, r1
 8017f8a:	4407      	add	r7, r0
 8017f8c:	f280 85b8 	bge.w	8018b00 <arm_nn_softmax_common_s8+0xfb0>
 8017f90:	f04f 0801 	mov.w	r8, #1
 8017f94:	f04f 0c00 	mov.w	ip, #0
 8017f98:	4658      	mov	r0, fp
 8017f9a:	f04f 36ff 	mov.w	r6, #4294967295
 8017f9e:	eb10 000e 	adds.w	r0, r0, lr
 8017fa2:	eb46 0607 	adc.w	r6, r6, r7
 8017fa6:	2e00      	cmp	r6, #0
 8017fa8:	da04      	bge.n	8017fb4 <arm_nn_softmax_common_s8+0x464>
 8017faa:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 8017fae:	19c0      	adds	r0, r0, r7
 8017fb0:	f146 0600 	adc.w	r6, r6, #0
 8017fb4:	0fc0      	lsrs	r0, r0, #31
 8017fb6:	ea40 0046 	orr.w	r0, r0, r6, lsl #1
 8017fba:	f1c0 5000 	rsb	r0, r0, #536870912	; 0x20000000
 8017fbe:	0fc6      	lsrs	r6, r0, #31
 8017fc0:	4546      	cmp	r6, r8
 8017fc2:	fb00 f505 	mul.w	r5, r0, r5
 8017fc6:	ea4f 76e0 	mov.w	r6, r0, asr #31
 8017fca:	fb04 5506 	mla	r5, r4, r6, r5
 8017fce:	fba0 4004 	umull	r4, r0, r0, r4
 8017fd2:	bf0c      	ite	eq
 8017fd4:	f04f 4680 	moveq.w	r6, #1073741824	; 0x40000000
 8017fd8:	465e      	movne	r6, fp
 8017fda:	4405      	add	r5, r0
 8017fdc:	bf0c      	ite	eq
 8017fde:	2700      	moveq	r7, #0
 8017fe0:	f04f 37ff 	movne.w	r7, #4294967295
 8017fe4:	19a0      	adds	r0, r4, r6
 8017fe6:	eb45 0507 	adc.w	r5, r5, r7
 8017fea:	2d00      	cmp	r5, #0
 8017fec:	da04      	bge.n	8017ff8 <arm_nn_softmax_common_s8+0x4a8>
 8017fee:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 8017ff2:	1900      	adds	r0, r0, r4
 8017ff4:	f145 0500 	adc.w	r5, r5, #0
 8017ff8:	0fc0      	lsrs	r0, r0, #31
 8017ffa:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 8017ffe:	f1b0 5f00 	cmp.w	r0, #536870912	; 0x20000000
 8018002:	f2c0 826d 	blt.w	80184e0 <arm_nn_softmax_common_s8+0x990>
 8018006:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801800a:	4401      	add	r1, r0
 801800c:	fb01 f202 	mul.w	r2, r1, r2
 8018010:	0fcc      	lsrs	r4, r1, #31
 8018012:	17c8      	asrs	r0, r1, #31
 8018014:	4564      	cmp	r4, ip
 8018016:	fb03 2200 	mla	r2, r3, r0, r2
 801801a:	fba1 6303 	umull	r6, r3, r1, r3
 801801e:	4413      	add	r3, r2
 8018020:	bf0b      	itete	eq
 8018022:	f04f 4280 	moveq.w	r2, #1073741824	; 0x40000000
 8018026:	465a      	movne	r2, fp
 8018028:	2500      	moveq	r5, #0
 801802a:	f04f 35ff 	movne.w	r5, #4294967295
 801802e:	18b2      	adds	r2, r6, r2
 8018030:	eb43 0505 	adc.w	r5, r3, r5
 8018034:	2d00      	cmp	r5, #0
 8018036:	4613      	mov	r3, r2
 8018038:	da04      	bge.n	8018044 <arm_nn_softmax_common_s8+0x4f4>
 801803a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801803e:	189b      	adds	r3, r3, r2
 8018040:	f145 0500 	adc.w	r5, r5, #0
 8018044:	0fdb      	lsrs	r3, r3, #31
 8018046:	ea43 0345 	orr.w	r3, r3, r5, lsl #1
 801804a:	f1c3 5300 	rsb	r3, r3, #536870912	; 0x20000000
 801804e:	0fda      	lsrs	r2, r3, #31
 8018050:	42a2      	cmp	r2, r4
 8018052:	bf0b      	itete	eq
 8018054:	f04f 4280 	moveq.w	r2, #1073741824	; 0x40000000
 8018058:	465a      	movne	r2, fp
 801805a:	2400      	moveq	r4, #0
 801805c:	f04f 34ff 	movne.w	r4, #4294967295
 8018060:	fb03 f000 	mul.w	r0, r3, r0
 8018064:	17dd      	asrs	r5, r3, #31
 8018066:	fb01 0005 	mla	r0, r1, r5, r0
 801806a:	fba3 3501 	umull	r3, r5, r3, r1
 801806e:	189b      	adds	r3, r3, r2
 8018070:	4428      	add	r0, r5
 8018072:	eb40 0404 	adc.w	r4, r0, r4
 8018076:	2c00      	cmp	r4, #0
 8018078:	da04      	bge.n	8018084 <arm_nn_softmax_common_s8+0x534>
 801807a:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801807e:	189b      	adds	r3, r3, r2
 8018080:	f144 0400 	adc.w	r4, r4, #0
 8018084:	0fdb      	lsrs	r3, r3, #31
 8018086:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 801808a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 801808e:	f2c0 825a 	blt.w	8018546 <arm_nn_softmax_common_s8+0x9f6>
 8018092:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8018096:	4419      	add	r1, r3
 8018098:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
 801809c:	bfa8      	it	ge
 801809e:	9307      	strge	r3, [sp, #28]
 80180a0:	f2c0 852a 	blt.w	8018af8 <arm_nn_softmax_common_s8+0xfa8>
 80180a4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80180a6:	2b00      	cmp	r3, #0
 80180a8:	f000 8260 	beq.w	801856c <arm_nn_softmax_common_s8+0xa1c>
 80180ac:	f1c9 031b 	rsb	r3, r9, #27
 80180b0:	9317      	str	r3, [sp, #92]	; 0x5c
 80180b2:	9b04      	ldr	r3, [sp, #16]
 80180b4:	2b00      	cmp	r3, #0
 80180b6:	f340 81a7 	ble.w	8018408 <arm_nn_softmax_common_s8+0x8b8>
 80180ba:	9b07      	ldr	r3, [sp, #28]
 80180bc:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80180c0:	f8dd a058 	ldr.w	sl, [sp, #88]	; 0x58
 80180c4:	2b00      	cmp	r3, #0
 80180c6:	bfb9      	ittee	lt
 80180c8:	4a0b      	ldrlt	r2, [pc, #44]	; (80180f8 <arm_nn_softmax_common_s8+0x5a8>)
 80180ca:	f04f 33ff 	movlt.w	r3, #4294967295
 80180ce:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 80180d2:	2300      	movge	r3, #0
 80180d4:	e9cd 231b 	strd	r2, r3, [sp, #108]	; 0x6c
 80180d8:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80180da:	2301      	movs	r3, #1
 80180dc:	4093      	lsls	r3, r2
 80180de:	3b01      	subs	r3, #1
 80180e0:	931a      	str	r3, [sp, #104]	; 0x68
 80180e2:	105b      	asrs	r3, r3, #1
 80180e4:	931f      	str	r3, [sp, #124]	; 0x7c
 80180e6:	3301      	adds	r3, #1
 80180e8:	9320      	str	r3, [sp, #128]	; 0x80
 80180ea:	9b01      	ldr	r3, [sp, #4]
 80180ec:	0fdb      	lsrs	r3, r3, #31
 80180ee:	931d      	str	r3, [sp, #116]	; 0x74
 80180f0:	46c8      	mov	r8, r9
 80180f2:	e178      	b.n	80183e6 <arm_nn_softmax_common_s8+0x896>
 80180f4:	c3c3c3c4 	.word	0xc3c3c3c4
 80180f8:	c0000001 	.word	0xc0000001
 80180fc:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80180fe:	9901      	ldr	r1, [sp, #4]
 8018100:	4093      	lsls	r3, r2
 8018102:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8018104:	ebb2 7fd3 	cmp.w	r2, r3, lsr #31
 8018108:	bf0b      	itete	eq
 801810a:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
 801810e:	4658      	movne	r0, fp
 8018110:	2200      	moveq	r2, #0
 8018112:	f04f 32ff 	movne.w	r2, #4294967295
 8018116:	fbc1 0203 	smlal	r0, r2, r1, r3
 801811a:	2a00      	cmp	r2, #0
 801811c:	da04      	bge.n	8018128 <arm_nn_softmax_common_s8+0x5d8>
 801811e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8018122:	1840      	adds	r0, r0, r1
 8018124:	f142 0200 	adc.w	r2, r2, #0
 8018128:	0fc0      	lsrs	r0, r0, #31
 801812a:	ea40 0042 	orr.w	r0, r0, r2, lsl #1
 801812e:	9a01      	ldr	r2, [sp, #4]
 8018130:	429a      	cmp	r2, r3
 8018132:	f000 818b 	beq.w	801844c <arm_nn_softmax_common_s8+0x8fc>
 8018136:	f040 447f 	orr.w	r4, r0, #4278190080	; 0xff000000
 801813a:	0161      	lsls	r1, r4, #5
 801813c:	1a24      	subs	r4, r4, r0
 801813e:	f344 7240 	sbfx	r2, r4, #29, #1
 8018142:	f3c4 6700 	ubfx	r7, r4, #24, #1
 8018146:	9215      	str	r2, [sp, #84]	; 0x54
 8018148:	f344 7280 	sbfx	r2, r4, #30, #1
 801814c:	fab0 f080 	clz	r0, r0
 8018150:	9214      	str	r2, [sp, #80]	; 0x50
 8018152:	1e7a      	subs	r2, r7, #1
 8018154:	f101 5180 	add.w	r1, r1, #268435456	; 0x10000000
 8018158:	0940      	lsrs	r0, r0, #5
 801815a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801815e:	2500      	movs	r5, #0
 8018160:	9213      	str	r2, [sp, #76]	; 0x4c
 8018162:	427a      	negs	r2, r7
 8018164:	fbc1 3501 	smlal	r3, r5, r1, r1
 8018168:	9210      	str	r2, [sp, #64]	; 0x40
 801816a:	1e42      	subs	r2, r0, #1
 801816c:	9212      	str	r2, [sp, #72]	; 0x48
 801816e:	2d00      	cmp	r5, #0
 8018170:	f344 62c0 	sbfx	r2, r4, #27, #1
 8018174:	f3c4 7c40 	ubfx	ip, r4, #29, #1
 8018178:	f3c4 7980 	ubfx	r9, r4, #30, #1
 801817c:	f3c4 6ec0 	ubfx	lr, r4, #27, #1
 8018180:	9211      	str	r2, [sp, #68]	; 0x44
 8018182:	da04      	bge.n	801818e <arm_nn_softmax_common_s8+0x63e>
 8018184:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8018188:	189b      	adds	r3, r3, r2
 801818a:	f145 0500 	adc.w	r5, r5, #0
 801818e:	0fdb      	lsrs	r3, r3, #31
 8018190:	ea43 0345 	orr.w	r3, r3, r5, lsl #1
 8018194:	fba3 2603 	umull	r2, r6, r3, r3
 8018198:	17ed      	asrs	r5, r5, #31
 801819a:	f112 4280 	adds.w	r2, r2, #1073741824	; 0x40000000
 801819e:	fb03 f705 	mul.w	r7, r3, r5
 80181a2:	eb46 0647 	adc.w	r6, r6, r7, lsl #1
 80181a6:	2e00      	cmp	r6, #0
 80181a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80181aa:	da04      	bge.n	80181b6 <arm_nn_softmax_common_s8+0x666>
 80181ac:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 80181b0:	19d2      	adds	r2, r2, r7
 80181b2:	f146 0600 	adc.w	r6, r6, #0
 80181b6:	4240      	negs	r0, r0
 80181b8:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 80181bc:	900b      	str	r0, [sp, #44]	; 0x2c
 80181be:	f10c 30ff 	add.w	r0, ip, #4294967295
 80181c2:	fb01 f505 	mul.w	r5, r1, r5
 80181c6:	9008      	str	r0, [sp, #32]
 80181c8:	17c8      	asrs	r0, r1, #31
 80181ca:	fb03 5500 	mla	r5, r3, r0, r5
 80181ce:	0fd2      	lsrs	r2, r2, #31
 80181d0:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 80181d4:	fba1 7303 	umull	r7, r3, r1, r3
 80181d8:	ea42 0246 	orr.w	r2, r2, r6, lsl #1
 80181dc:	442b      	add	r3, r5
 80181de:	f109 36ff 	add.w	r6, r9, #4294967295
 80181e2:	0fcd      	lsrs	r5, r1, #31
 80181e4:	f3c4 6980 	ubfx	r9, r4, #26, #1
 80181e8:	f3c4 6040 	ubfx	r0, r4, #25, #1
 80181ec:	960c      	str	r6, [sp, #48]	; 0x30
 80181ee:	f3c4 7400 	ubfx	r4, r4, #28, #1
 80181f2:	f002 0603 	and.w	r6, r2, #3
 80181f6:	950d      	str	r5, [sp, #52]	; 0x34
 80181f8:	1092      	asrs	r2, r2, #2
 80181fa:	f109 35ff 	add.w	r5, r9, #4294967295
 80181fe:	950a      	str	r5, [sp, #40]	; 0x28
 8018200:	2a00      	cmp	r2, #0
 8018202:	f104 35ff 	add.w	r5, r4, #4294967295
 8018206:	f1c4 0400 	rsb	r4, r4, #0
 801820a:	960e      	str	r6, [sp, #56]	; 0x38
 801820c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018210:	f100 36ff 	add.w	r6, r0, #4294967295
 8018214:	f1c9 0900 	rsb	r9, r9, #0
 8018218:	f1c0 0000 	rsb	r0, r0, #0
 801821c:	9509      	str	r5, [sp, #36]	; 0x24
 801821e:	9403      	str	r4, [sp, #12]
 8018220:	f2c0 8112 	blt.w	8018448 <arm_nn_softmax_common_s8+0x8f8>
 8018224:	2401      	movs	r4, #1
 8018226:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018228:	42ac      	cmp	r4, r5
 801822a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801822c:	bfb8      	it	lt
 801822e:	3201      	addlt	r2, #1
 8018230:	4564      	cmp	r4, ip
 8018232:	bf0b      	itete	eq
 8018234:	f04f 4480 	moveq.w	r4, #1073741824	; 0x40000000
 8018238:	465c      	movne	r4, fp
 801823a:	f04f 0c00 	moveq.w	ip, #0
 801823e:	f04f 3cff 	movne.w	ip, #4294967295
 8018242:	19e4      	adds	r4, r4, r7
 8018244:	eb43 030c 	adc.w	r3, r3, ip
 8018248:	2b00      	cmp	r3, #0
 801824a:	da04      	bge.n	8018256 <arm_nn_softmax_common_s8+0x706>
 801824c:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 8018250:	19e4      	adds	r4, r4, r7
 8018252:	f143 0300 	adc.w	r3, r3, #0
 8018256:	0fe4      	lsrs	r4, r4, #31
 8018258:	ea44 0443 	orr.w	r4, r4, r3, lsl #1
 801825c:	4422      	add	r2, r4
 801825e:	2a00      	cmp	r2, #0
 8018260:	4d96      	ldr	r5, [pc, #600]	; (80184bc <arm_nn_softmax_common_s8+0x96c>)
 8018262:	bfab      	itete	ge
 8018264:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 8018268:	465b      	movlt	r3, fp
 801826a:	2400      	movge	r4, #0
 801826c:	f04f 34ff 	movlt.w	r4, #4294967295
 8018270:	fbc2 3405 	smlal	r3, r4, r2, r5
 8018274:	2c00      	cmp	r4, #0
 8018276:	da04      	bge.n	8018282 <arm_nn_softmax_common_s8+0x732>
 8018278:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801827c:	189b      	adds	r3, r3, r2
 801827e:	f144 0400 	adc.w	r4, r4, #0
 8018282:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018284:	0fdb      	lsrs	r3, r3, #31
 8018286:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 801828a:	441a      	add	r2, r3
 801828c:	4613      	mov	r3, r2
 801828e:	1052      	asrs	r2, r2, #1
 8018290:	d402      	bmi.n	8018298 <arm_nn_softmax_common_s8+0x748>
 8018292:	07dc      	lsls	r4, r3, #31
 8018294:	bf48      	it	mi
 8018296:	3201      	addmi	r2, #1
 8018298:	4411      	add	r1, r2
 801829a:	2900      	cmp	r1, #0
 801829c:	4c88      	ldr	r4, [pc, #544]	; (80184c0 <arm_nn_softmax_common_s8+0x970>)
 801829e:	bfab      	itete	ge
 80182a0:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 80182a4:	465a      	movlt	r2, fp
 80182a6:	2300      	movge	r3, #0
 80182a8:	f04f 33ff 	movlt.w	r3, #4294967295
 80182ac:	fbc1 2304 	smlal	r2, r3, r1, r4
 80182b0:	2b00      	cmp	r3, #0
 80182b2:	da04      	bge.n	80182be <arm_nn_softmax_common_s8+0x76e>
 80182b4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80182b8:	1852      	adds	r2, r2, r1
 80182ba:	f143 0300 	adc.w	r3, r3, #0
 80182be:	0fd2      	lsrs	r2, r2, #31
 80182c0:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 80182c4:	f102 42e2 	add.w	r2, r2, #1895825408	; 0x71000000
 80182c8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80182cc:	2100      	movs	r1, #0
 80182ce:	4d7d      	ldr	r5, [pc, #500]	; (80184c4 <arm_nn_softmax_common_s8+0x974>)
 80182d0:	9f13      	ldr	r7, [sp, #76]	; 0x4c
 80182d2:	f5a2 2225 	sub.w	r2, r2, #675840	; 0xa5000
 80182d6:	f2a2 726c 	subw	r2, r2, #1900	; 0x76c
 80182da:	461c      	mov	r4, r3
 80182dc:	468c      	mov	ip, r1
 80182de:	fbc2 4c05 	smlal	r4, ip, r2, r5
 80182e2:	4017      	ands	r7, r2
 80182e4:	0fe4      	lsrs	r4, r4, #31
 80182e6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80182e8:	4d77      	ldr	r5, [pc, #476]	; (80184c8 <arm_nn_softmax_common_s8+0x978>)
 80182ea:	ea44 044c 	orr.w	r4, r4, ip, lsl #1
 80182ee:	4022      	ands	r2, r4
 80182f0:	4057      	eors	r7, r2
 80182f2:	460c      	mov	r4, r1
 80182f4:	461a      	mov	r2, r3
 80182f6:	fbc7 2405 	smlal	r2, r4, r7, r5
 80182fa:	0fd2      	lsrs	r2, r2, #31
 80182fc:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8018300:	4002      	ands	r2, r0
 8018302:	4c72      	ldr	r4, [pc, #456]	; (80184cc <arm_nn_softmax_common_s8+0x97c>)
 8018304:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018306:	403e      	ands	r6, r7
 8018308:	4056      	eors	r6, r2
 801830a:	4608      	mov	r0, r1
 801830c:	461a      	mov	r2, r3
 801830e:	fbc6 2004 	smlal	r2, r0, r6, r4
 8018312:	0fd2      	lsrs	r2, r2, #31
 8018314:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8018318:	4c6d      	ldr	r4, [pc, #436]	; (80184d0 <arm_nn_softmax_common_s8+0x980>)
 801831a:	4035      	ands	r5, r6
 801831c:	ea09 0902 	and.w	r9, r9, r2
 8018320:	ea85 0509 	eor.w	r5, r5, r9
 8018324:	461a      	mov	r2, r3
 8018326:	4608      	mov	r0, r1
 8018328:	fbc5 2004 	smlal	r2, r0, r5, r4
 801832c:	0fd2      	lsrs	r2, r2, #31
 801832e:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8018332:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018334:	4c67      	ldr	r4, [pc, #412]	; (80184d4 <arm_nn_softmax_common_s8+0x984>)
 8018336:	4010      	ands	r0, r2
 8018338:	ea05 0e0e 	and.w	lr, r5, lr
 801833c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801833e:	ea8e 0e00 	eor.w	lr, lr, r0
 8018342:	ea0e 0002 	and.w	r0, lr, r2
 8018346:	460d      	mov	r5, r1
 8018348:	461a      	mov	r2, r3
 801834a:	fbce 2504 	smlal	r2, r5, lr, r4
 801834e:	0fd2      	lsrs	r2, r2, #31
 8018350:	9c03      	ldr	r4, [sp, #12]
 8018352:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8018356:	4014      	ands	r4, r2
 8018358:	4d5f      	ldr	r5, [pc, #380]	; (80184d8 <arm_nn_softmax_common_s8+0x988>)
 801835a:	4060      	eors	r0, r4
 801835c:	461a      	mov	r2, r3
 801835e:	460e      	mov	r6, r1
 8018360:	9c08      	ldr	r4, [sp, #32]
 8018362:	fbc0 2605 	smlal	r2, r6, r0, r5
 8018366:	4004      	ands	r4, r0
 8018368:	0fd2      	lsrs	r2, r2, #31
 801836a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801836c:	ea42 0246 	orr.w	r2, r2, r6, lsl #1
 8018370:	4010      	ands	r0, r2
 8018372:	4044      	eors	r4, r0
 8018374:	22f2      	movs	r2, #242	; 0xf2
 8018376:	fbc4 3102 	smlal	r3, r1, r4, r2
 801837a:	0fdb      	lsrs	r3, r3, #31
 801837c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801837e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018380:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8018384:	401a      	ands	r2, r3
 8018386:	4020      	ands	r0, r4
 8018388:	4613      	mov	r3, r2
 801838a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801838c:	9907      	ldr	r1, [sp, #28]
 801838e:	4043      	eors	r3, r0
 8018390:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018392:	4013      	ands	r3, r2
 8018394:	4058      	eors	r0, r3
 8018396:	e9dd 231b 	ldrd	r2, r3, [sp, #108]	; 0x6c
 801839a:	fbc0 2301 	smlal	r2, r3, r0, r1
 801839e:	2b00      	cmp	r3, #0
 80183a0:	da04      	bge.n	80183ac <arm_nn_softmax_common_s8+0x85c>
 80183a2:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80183a6:	1852      	adds	r2, r2, r1
 80183a8:	f143 0300 	adc.w	r3, r3, #0
 80183ac:	0fd2      	lsrs	r2, r2, #31
 80183ae:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 80183b2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80183b4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80183b6:	4013      	ands	r3, r2
 80183b8:	410a      	asrs	r2, r1
 80183ba:	d440      	bmi.n	801843e <arm_nn_softmax_common_s8+0x8ee>
 80183bc:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80183be:	4299      	cmp	r1, r3
 80183c0:	da00      	bge.n	80183c4 <arm_nn_softmax_common_s8+0x874>
 80183c2:	3201      	adds	r2, #1
 80183c4:	f5a2 4200 	sub.w	r2, r2, #32768	; 0x8000
 80183c8:	f512 4f00 	cmn.w	r2, #32768	; 0x8000
 80183cc:	dd3a      	ble.n	8018444 <arm_nn_softmax_common_s8+0x8f4>
 80183ce:	f647 73fe 	movw	r3, #32766	; 0x7ffe
 80183d2:	429a      	cmp	r2, r3
 80183d4:	dc6e      	bgt.n	80184b4 <arm_nn_softmax_common_s8+0x964>
 80183d6:	b212      	sxth	r2, r2
 80183d8:	9b06      	ldr	r3, [sp, #24]
 80183da:	f8a8 2000 	strh.w	r2, [r8]
 80183de:	459a      	cmp	sl, r3
 80183e0:	f108 0802 	add.w	r8, r8, #2
 80183e4:	d010      	beq.n	8018408 <arm_nn_softmax_common_s8+0x8b8>
 80183e6:	9a02      	ldr	r2, [sp, #8]
 80183e8:	f91a 3f01 	ldrsb.w	r3, [sl, #1]!
 80183ec:	1a9b      	subs	r3, r3, r2
 80183ee:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80183f0:	429a      	cmp	r2, r3
 80183f2:	f77f ae83 	ble.w	80180fc <arm_nn_softmax_common_s8+0x5ac>
 80183f6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80183fa:	f8a8 3000 	strh.w	r3, [r8]
 80183fe:	9b06      	ldr	r3, [sp, #24]
 8018400:	459a      	cmp	sl, r3
 8018402:	f108 0802 	add.w	r8, r8, #2
 8018406:	d1ee      	bne.n	80183e6 <arm_nn_softmax_common_s8+0x896>
 8018408:	e9dd 3104 	ldrd	r3, r1, [sp, #16]
 801840c:	4419      	add	r1, r3
 801840e:	9105      	str	r1, [sp, #20]
 8018410:	9906      	ldr	r1, [sp, #24]
 8018412:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018414:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8018416:	4419      	add	r1, r3
 8018418:	9106      	str	r1, [sp, #24]
 801841a:	9918      	ldr	r1, [sp, #96]	; 0x60
 801841c:	4401      	add	r1, r0
 801841e:	9118      	str	r1, [sp, #96]	; 0x60
 8018420:	9916      	ldr	r1, [sp, #88]	; 0x58
 8018422:	4419      	add	r1, r3
 8018424:	9116      	str	r1, [sp, #88]	; 0x58
 8018426:	9919      	ldr	r1, [sp, #100]	; 0x64
 8018428:	4419      	add	r1, r3
 801842a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801842c:	9119      	str	r1, [sp, #100]	; 0x64
 801842e:	3201      	adds	r2, #1
 8018430:	4293      	cmp	r3, r2
 8018432:	921e      	str	r2, [sp, #120]	; 0x78
 8018434:	f47f aba8 	bne.w	8017b88 <arm_nn_softmax_common_s8+0x38>
 8018438:	b025      	add	sp, #148	; 0x94
 801843a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801843e:	9920      	ldr	r1, [sp, #128]	; 0x80
 8018440:	4299      	cmp	r1, r3
 8018442:	dbbe      	blt.n	80183c2 <arm_nn_softmax_common_s8+0x872>
 8018444:	4a25      	ldr	r2, [pc, #148]	; (80184dc <arm_nn_softmax_common_s8+0x98c>)
 8018446:	e7c7      	b.n	80183d8 <arm_nn_softmax_common_s8+0x888>
 8018448:	2402      	movs	r4, #2
 801844a:	e6ec      	b.n	8018226 <arm_nn_softmax_common_s8+0x6d6>
 801844c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8018450:	f000 82d1 	beq.w	80189f6 <arm_nn_softmax_common_s8+0xea6>
 8018454:	f040 447f 	orr.w	r4, r0, #4278190080	; 0xff000000
 8018458:	0161      	lsls	r1, r4, #5
 801845a:	f101 5180 	add.w	r1, r1, #268435456	; 0x10000000
 801845e:	1a24      	subs	r4, r4, r0
 8018460:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8018464:	2500      	movs	r5, #0
 8018466:	fbc1 3501 	smlal	r3, r5, r1, r1
 801846a:	f344 7240 	sbfx	r2, r4, #29, #1
 801846e:	fab0 f080 	clz	r0, r0
 8018472:	461f      	mov	r7, r3
 8018474:	9215      	str	r2, [sp, #84]	; 0x54
 8018476:	f3c4 6300 	ubfx	r3, r4, #24, #1
 801847a:	f344 7280 	sbfx	r2, r4, #30, #1
 801847e:	0940      	lsrs	r0, r0, #5
 8018480:	9214      	str	r2, [sp, #80]	; 0x50
 8018482:	1e5a      	subs	r2, r3, #1
 8018484:	425b      	negs	r3, r3
 8018486:	9310      	str	r3, [sp, #64]	; 0x40
 8018488:	1e43      	subs	r3, r0, #1
 801848a:	9312      	str	r3, [sp, #72]	; 0x48
 801848c:	2d00      	cmp	r5, #0
 801848e:	f344 63c0 	sbfx	r3, r4, #27, #1
 8018492:	f3c4 7c40 	ubfx	ip, r4, #29, #1
 8018496:	f3c4 7980 	ubfx	r9, r4, #30, #1
 801849a:	9213      	str	r2, [sp, #76]	; 0x4c
 801849c:	f3c4 6ec0 	ubfx	lr, r4, #27, #1
 80184a0:	9311      	str	r3, [sp, #68]	; 0x44
 80184a2:	da05      	bge.n	80184b0 <arm_nn_softmax_common_s8+0x960>
 80184a4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80184a8:	18fb      	adds	r3, r7, r3
 80184aa:	461f      	mov	r7, r3
 80184ac:	f145 0500 	adc.w	r5, r5, #0
 80184b0:	0ffb      	lsrs	r3, r7, #31
 80184b2:	e66d      	b.n	8018190 <arm_nn_softmax_common_s8+0x640>
 80184b4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80184b8:	e78e      	b.n	80183d8 <arm_nn_softmax_common_s8+0x888>
 80184ba:	bf00      	nop
 80184bc:	2aaaaaab 	.word	0x2aaaaaab
 80184c0:	70f5a894 	.word	0x70f5a894
 80184c4:	63afbe7b 	.word	0x63afbe7b
 80184c8:	4da2cbf2 	.word	0x4da2cbf2
 80184cc:	2f16ac6c 	.word	0x2f16ac6c
 80184d0:	1152aaa4 	.word	0x1152aaa4
 80184d4:	02582ab7 	.word	0x02582ab7
 80184d8:	000afe11 	.word	0x000afe11
 80184dc:	ffff8000 	.word	0xffff8000
 80184e0:	f1b0 4f60 	cmp.w	r0, #3758096384	; 0xe0000000
 80184e4:	bfc8      	it	gt
 80184e6:	0080      	lslgt	r0, r0, #2
 80184e8:	f73f ad8f 	bgt.w	801800a <arm_nn_softmax_common_s8+0x4ba>
 80184ec:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80184f0:	f1bc 0f00 	cmp.w	ip, #0
 80184f4:	f040 8263 	bne.w	80189be <arm_nn_softmax_common_s8+0xe6e>
 80184f8:	17cc      	asrs	r4, r1, #31
 80184fa:	fb01 f202 	mul.w	r2, r1, r2
 80184fe:	fb03 2204 	mla	r2, r3, r4, r2
 8018502:	fba1 0403 	umull	r0, r4, r1, r3
 8018506:	eb10 030b 	adds.w	r3, r0, fp
 801850a:	4414      	add	r4, r2
 801850c:	f164 0400 	sbc.w	r4, r4, #0
 8018510:	2c00      	cmp	r4, #0
 8018512:	da04      	bge.n	801851e <arm_nn_softmax_common_s8+0x9ce>
 8018514:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8018518:	189b      	adds	r3, r3, r2
 801851a:	f144 0400 	adc.w	r4, r4, #0
 801851e:	0fdb      	lsrs	r3, r3, #31
 8018520:	ea43 0344 	orr.w	r3, r3, r4, lsl #1
 8018524:	f1c3 5200 	rsb	r2, r3, #536870912	; 0x20000000
 8018528:	f04f 30ff 	mov.w	r0, #4294967295
 801852c:	465b      	mov	r3, fp
 801852e:	fbc1 3002 	smlal	r3, r0, r1, r2
 8018532:	2800      	cmp	r0, #0
 8018534:	da04      	bge.n	8018540 <arm_nn_softmax_common_s8+0x9f0>
 8018536:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 801853a:	189b      	adds	r3, r3, r2
 801853c:	f140 0000 	adc.w	r0, r0, #0
 8018540:	0fdb      	lsrs	r3, r3, #31
 8018542:	ea43 0340 	orr.w	r3, r3, r0, lsl #1
 8018546:	f1b3 4f60 	cmp.w	r3, #3758096384	; 0xe0000000
 801854a:	f300 82c8 	bgt.w	8018ade <arm_nn_softmax_common_s8+0xf8e>
 801854e:	004a      	lsls	r2, r1, #1
 8018550:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8018554:	9207      	str	r2, [sp, #28]
 8018556:	f1b3 4f40 	cmp.w	r3, #3221225472	; 0xc0000000
 801855a:	9b07      	ldr	r3, [sp, #28]
 801855c:	bfd8      	it	le
 801855e:	f04f 4300 	movle.w	r3, #2147483648	; 0x80000000
 8018562:	9307      	str	r3, [sp, #28]
 8018564:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018566:	2b00      	cmp	r3, #0
 8018568:	f47f ada0 	bne.w	80180ac <arm_nn_softmax_common_s8+0x55c>
 801856c:	f1c9 0323 	rsb	r3, r9, #35	; 0x23
 8018570:	9317      	str	r3, [sp, #92]	; 0x5c
 8018572:	9b04      	ldr	r3, [sp, #16]
 8018574:	2b00      	cmp	r3, #0
 8018576:	f77f af47 	ble.w	8018408 <arm_nn_softmax_common_s8+0x8b8>
 801857a:	9b07      	ldr	r3, [sp, #28]
 801857c:	f8dd a058 	ldr.w	sl, [sp, #88]	; 0x58
 8018580:	2b00      	cmp	r3, #0
 8018582:	bfb9      	ittee	lt
 8018584:	4a0b      	ldrlt	r2, [pc, #44]	; (80185b4 <arm_nn_softmax_common_s8+0xa64>)
 8018586:	f04f 33ff 	movlt.w	r3, #4294967295
 801858a:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 801858e:	2300      	movge	r3, #0
 8018590:	e9cd 231b 	strd	r2, r3, [sp, #108]	; 0x6c
 8018594:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8018596:	2301      	movs	r3, #1
 8018598:	4093      	lsls	r3, r2
 801859a:	3b01      	subs	r3, #1
 801859c:	931a      	str	r3, [sp, #104]	; 0x68
 801859e:	105b      	asrs	r3, r3, #1
 80185a0:	931f      	str	r3, [sp, #124]	; 0x7c
 80185a2:	3301      	adds	r3, #1
 80185a4:	9320      	str	r3, [sp, #128]	; 0x80
 80185a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80185a8:	9303      	str	r3, [sp, #12]
 80185aa:	9b01      	ldr	r3, [sp, #4]
 80185ac:	0fdb      	lsrs	r3, r3, #31
 80185ae:	931d      	str	r3, [sp, #116]	; 0x74
 80185b0:	e17d      	b.n	80188ae <arm_nn_softmax_common_s8+0xd5e>
 80185b2:	bf00      	nop
 80185b4:	c0000001 	.word	0xc0000001
 80185b8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80185ba:	9901      	ldr	r1, [sp, #4]
 80185bc:	4093      	lsls	r3, r2
 80185be:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80185c0:	ebb2 7fd3 	cmp.w	r2, r3, lsr #31
 80185c4:	bf0b      	itete	eq
 80185c6:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
 80185ca:	4658      	movne	r0, fp
 80185cc:	2200      	moveq	r2, #0
 80185ce:	f04f 32ff 	movne.w	r2, #4294967295
 80185d2:	fbc1 0203 	smlal	r0, r2, r1, r3
 80185d6:	2a00      	cmp	r2, #0
 80185d8:	da04      	bge.n	80185e4 <arm_nn_softmax_common_s8+0xa94>
 80185da:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80185de:	1840      	adds	r0, r0, r1
 80185e0:	f142 0200 	adc.w	r2, r2, #0
 80185e4:	0fc0      	lsrs	r0, r0, #31
 80185e6:	ea40 0042 	orr.w	r0, r0, r2, lsl #1
 80185ea:	9a01      	ldr	r2, [sp, #4]
 80185ec:	429a      	cmp	r2, r3
 80185ee:	f000 8174 	beq.w	80188da <arm_nn_softmax_common_s8+0xd8a>
 80185f2:	f040 4e7f 	orr.w	lr, r0, #4278190080	; 0xff000000
 80185f6:	ea4f 114e 	mov.w	r1, lr, lsl #5
 80185fa:	ebae 0e00 	sub.w	lr, lr, r0
 80185fe:	f3ce 7280 	ubfx	r2, lr, #30, #1
 8018602:	3a01      	subs	r2, #1
 8018604:	9212      	str	r2, [sp, #72]	; 0x48
 8018606:	f3ce 6840 	ubfx	r8, lr, #25, #1
 801860a:	f34e 7280 	sbfx	r2, lr, #30, #1
 801860e:	fab0 f080 	clz	r0, r0
 8018612:	f3ce 7c40 	ubfx	ip, lr, #29, #1
 8018616:	9215      	str	r2, [sp, #84]	; 0x54
 8018618:	f108 32ff 	add.w	r2, r8, #4294967295
 801861c:	0940      	lsrs	r0, r0, #5
 801861e:	9214      	str	r2, [sp, #80]	; 0x50
 8018620:	f10c 32ff 	add.w	r2, ip, #4294967295
 8018624:	f101 5180 	add.w	r1, r1, #268435456	; 0x10000000
 8018628:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801862c:	2500      	movs	r5, #0
 801862e:	9213      	str	r2, [sp, #76]	; 0x4c
 8018630:	1e42      	subs	r2, r0, #1
 8018632:	fbc1 3501 	smlal	r3, r5, r1, r1
 8018636:	f3ce 6400 	ubfx	r4, lr, #24, #1
 801863a:	9211      	str	r2, [sp, #68]	; 0x44
 801863c:	f34e 6280 	sbfx	r2, lr, #26, #1
 8018640:	9210      	str	r2, [sp, #64]	; 0x40
 8018642:	2d00      	cmp	r5, #0
 8018644:	f104 32ff 	add.w	r2, r4, #4294967295
 8018648:	f3ce 6980 	ubfx	r9, lr, #26, #1
 801864c:	920f      	str	r2, [sp, #60]	; 0x3c
 801864e:	da04      	bge.n	801865a <arm_nn_softmax_common_s8+0xb0a>
 8018650:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8018654:	189b      	adds	r3, r3, r2
 8018656:	f145 0500 	adc.w	r5, r5, #0
 801865a:	0fdb      	lsrs	r3, r3, #31
 801865c:	ea43 0345 	orr.w	r3, r3, r5, lsl #1
 8018660:	fba3 2603 	umull	r2, r6, r3, r3
 8018664:	17ed      	asrs	r5, r5, #31
 8018666:	f112 4280 	adds.w	r2, r2, #1073741824	; 0x40000000
 801866a:	fb03 f705 	mul.w	r7, r3, r5
 801866e:	eb46 0647 	adc.w	r6, r6, r7, lsl #1
 8018672:	2e00      	cmp	r6, #0
 8018674:	930e      	str	r3, [sp, #56]	; 0x38
 8018676:	da04      	bge.n	8018682 <arm_nn_softmax_common_s8+0xb32>
 8018678:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 801867c:	19d2      	adds	r2, r2, r7
 801867e:	f146 0600 	adc.w	r6, r6, #0
 8018682:	4240      	negs	r0, r0
 8018684:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8018688:	0fd2      	lsrs	r2, r2, #31
 801868a:	ea42 0246 	orr.w	r2, r2, r6, lsl #1
 801868e:	900b      	str	r0, [sp, #44]	; 0x2c
 8018690:	f1cc 0000 	rsb	r0, ip, #0
 8018694:	f002 0603 	and.w	r6, r2, #3
 8018698:	fb01 f505 	mul.w	r5, r1, r5
 801869c:	9008      	str	r0, [sp, #32]
 801869e:	17c8      	asrs	r0, r1, #31
 80186a0:	fb03 5500 	mla	r5, r3, r0, r5
 80186a4:	960d      	str	r6, [sp, #52]	; 0x34
 80186a6:	f3ce 60c0 	ubfx	r0, lr, #27, #1
 80186aa:	0fde      	lsrs	r6, r3, #31
 80186ac:	f3ce 7e00 	ubfx	lr, lr, #28, #1
 80186b0:	1092      	asrs	r2, r2, #2
 80186b2:	960c      	str	r6, [sp, #48]	; 0x30
 80186b4:	1e46      	subs	r6, r0, #1
 80186b6:	4240      	negs	r0, r0
 80186b8:	fba1 7303 	umull	r7, r3, r1, r3
 80186bc:	9009      	str	r0, [sp, #36]	; 0x24
 80186be:	2a00      	cmp	r2, #0
 80186c0:	f1ce 0000 	rsb	r0, lr, #0
 80186c4:	442b      	add	r3, r5
 80186c6:	f109 39ff 	add.w	r9, r9, #4294967295
 80186ca:	f1c4 0400 	rsb	r4, r4, #0
 80186ce:	f1c8 0800 	rsb	r8, r8, #0
 80186d2:	ea4f 7cd1 	mov.w	ip, r1, lsr #31
 80186d6:	f10e 35ff 	add.w	r5, lr, #4294967295
 80186da:	900a      	str	r0, [sp, #40]	; 0x28
 80186dc:	f2c0 80fa 	blt.w	80188d4 <arm_nn_softmax_common_s8+0xd84>
 80186e0:	f04f 0e01 	mov.w	lr, #1
 80186e4:	980d      	ldr	r0, [sp, #52]	; 0x34
 80186e6:	4586      	cmp	lr, r0
 80186e8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80186ea:	bfb8      	it	lt
 80186ec:	3201      	addlt	r2, #1
 80186ee:	4584      	cmp	ip, r0
 80186f0:	bf0b      	itete	eq
 80186f2:	f04f 4c80 	moveq.w	ip, #1073741824	; 0x40000000
 80186f6:	46dc      	movne	ip, fp
 80186f8:	f04f 0e00 	moveq.w	lr, #0
 80186fc:	f04f 3eff 	movne.w	lr, #4294967295
 8018700:	eb1c 0c07 	adds.w	ip, ip, r7
 8018704:	eb43 030e 	adc.w	r3, r3, lr
 8018708:	2b00      	cmp	r3, #0
 801870a:	da05      	bge.n	8018718 <arm_nn_softmax_common_s8+0xbc8>
 801870c:	f06f 4700 	mvn.w	r7, #2147483648	; 0x80000000
 8018710:	eb1c 0c07 	adds.w	ip, ip, r7
 8018714:	f143 0300 	adc.w	r3, r3, #0
 8018718:	ea4f 7cdc 	mov.w	ip, ip, lsr #31
 801871c:	ea4c 0c43 	orr.w	ip, ip, r3, lsl #1
 8018720:	4462      	add	r2, ip
 8018722:	2a00      	cmp	r2, #0
 8018724:	48c3      	ldr	r0, [pc, #780]	; (8018a34 <arm_nn_softmax_common_s8+0xee4>)
 8018726:	bfab      	itete	ge
 8018728:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 801872c:	465b      	movlt	r3, fp
 801872e:	2700      	movge	r7, #0
 8018730:	f04f 37ff 	movlt.w	r7, #4294967295
 8018734:	fbc2 3700 	smlal	r3, r7, r2, r0
 8018738:	2f00      	cmp	r7, #0
 801873a:	da04      	bge.n	8018746 <arm_nn_softmax_common_s8+0xbf6>
 801873c:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 8018740:	189b      	adds	r3, r3, r2
 8018742:	f147 0700 	adc.w	r7, r7, #0
 8018746:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018748:	0fdb      	lsrs	r3, r3, #31
 801874a:	ea43 0347 	orr.w	r3, r3, r7, lsl #1
 801874e:	441a      	add	r2, r3
 8018750:	4613      	mov	r3, r2
 8018752:	1052      	asrs	r2, r2, #1
 8018754:	d402      	bmi.n	801875c <arm_nn_softmax_common_s8+0xc0c>
 8018756:	07d8      	lsls	r0, r3, #31
 8018758:	bf48      	it	mi
 801875a:	3201      	addmi	r2, #1
 801875c:	4411      	add	r1, r2
 801875e:	2900      	cmp	r1, #0
 8018760:	48b5      	ldr	r0, [pc, #724]	; (8018a38 <arm_nn_softmax_common_s8+0xee8>)
 8018762:	bfab      	itete	ge
 8018764:	f04f 4280 	movge.w	r2, #1073741824	; 0x40000000
 8018768:	465a      	movlt	r2, fp
 801876a:	2300      	movge	r3, #0
 801876c:	f04f 33ff 	movlt.w	r3, #4294967295
 8018770:	fbc1 2300 	smlal	r2, r3, r1, r0
 8018774:	2b00      	cmp	r3, #0
 8018776:	da04      	bge.n	8018782 <arm_nn_softmax_common_s8+0xc32>
 8018778:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801877c:	1852      	adds	r2, r2, r1
 801877e:	f143 0300 	adc.w	r3, r3, #0
 8018782:	0fd2      	lsrs	r2, r2, #31
 8018784:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 8018788:	f102 42e2 	add.w	r2, r2, #1895825408	; 0x71000000
 801878c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801878e:	48ab      	ldr	r0, [pc, #684]	; (8018a3c <arm_nn_softmax_common_s8+0xeec>)
 8018790:	f5a2 2225 	sub.w	r2, r2, #675840	; 0xa5000
 8018794:	f2a2 726c 	subw	r2, r2, #1900	; 0x76c
 8018798:	2100      	movs	r1, #0
 801879a:	ea02 0c03 	and.w	ip, r2, r3
 801879e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80187a2:	461f      	mov	r7, r3
 80187a4:	468e      	mov	lr, r1
 80187a6:	fbc2 7e00 	smlal	r7, lr, r2, r0
 80187aa:	0fff      	lsrs	r7, r7, #31
 80187ac:	ea47 074e 	orr.w	r7, r7, lr, lsl #1
 80187b0:	4027      	ands	r7, r4
 80187b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80187b4:	48a2      	ldr	r0, [pc, #648]	; (8018a40 <arm_nn_softmax_common_s8+0xef0>)
 80187b6:	ea8c 0c07 	eor.w	ip, ip, r7
 80187ba:	ea0c 0402 	and.w	r4, ip, r2
 80187be:	460f      	mov	r7, r1
 80187c0:	461a      	mov	r2, r3
 80187c2:	fbcc 2700 	smlal	r2, r7, ip, r0
 80187c6:	0fd2      	lsrs	r2, r2, #31
 80187c8:	ea42 0247 	orr.w	r2, r2, r7, lsl #1
 80187cc:	489d      	ldr	r0, [pc, #628]	; (8018a44 <arm_nn_softmax_common_s8+0xef4>)
 80187ce:	ea08 0802 	and.w	r8, r8, r2
 80187d2:	ea84 0408 	eor.w	r4, r4, r8
 80187d6:	461a      	mov	r2, r3
 80187d8:	460f      	mov	r7, r1
 80187da:	fbc4 2700 	smlal	r2, r7, r4, r0
 80187de:	ea04 0909 	and.w	r9, r4, r9
 80187e2:	0fd2      	lsrs	r2, r2, #31
 80187e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80187e6:	4898      	ldr	r0, [pc, #608]	; (8018a48 <arm_nn_softmax_common_s8+0xef8>)
 80187e8:	ea42 0247 	orr.w	r2, r2, r7, lsl #1
 80187ec:	4014      	ands	r4, r2
 80187ee:	ea89 0904 	eor.w	r9, r9, r4
 80187f2:	461a      	mov	r2, r3
 80187f4:	460c      	mov	r4, r1
 80187f6:	fbc9 2400 	smlal	r2, r4, r9, r0
 80187fa:	0fd2      	lsrs	r2, r2, #31
 80187fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80187fe:	ea42 0244 	orr.w	r2, r2, r4, lsl #1
 8018802:	4002      	ands	r2, r0
 8018804:	4c91      	ldr	r4, [pc, #580]	; (8018a4c <arm_nn_softmax_common_s8+0xefc>)
 8018806:	ea09 0606 	and.w	r6, r9, r6
 801880a:	4056      	eors	r6, r2
 801880c:	4608      	mov	r0, r1
 801880e:	461a      	mov	r2, r3
 8018810:	fbc6 2004 	smlal	r2, r0, r6, r4
 8018814:	0fd2      	lsrs	r2, r2, #31
 8018816:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 801881a:	980a      	ldr	r0, [sp, #40]	; 0x28
 801881c:	4c8c      	ldr	r4, [pc, #560]	; (8018a50 <arm_nn_softmax_common_s8+0xf00>)
 801881e:	4010      	ands	r0, r2
 8018820:	4035      	ands	r5, r6
 8018822:	4045      	eors	r5, r0
 8018824:	461a      	mov	r2, r3
 8018826:	460e      	mov	r6, r1
 8018828:	fbc5 2604 	smlal	r2, r6, r5, r4
 801882c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801882e:	9c08      	ldr	r4, [sp, #32]
 8018830:	0fd2      	lsrs	r2, r2, #31
 8018832:	ea42 0246 	orr.w	r2, r2, r6, lsl #1
 8018836:	ea04 0c02 	and.w	ip, r4, r2
 801883a:	4028      	ands	r0, r5
 801883c:	ea80 000c 	eor.w	r0, r0, ip
 8018840:	22f2      	movs	r2, #242	; 0xf2
 8018842:	fbc0 3102 	smlal	r3, r1, r0, r2
 8018846:	0fdb      	lsrs	r3, r3, #31
 8018848:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801884a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801884c:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
 8018850:	401a      	ands	r2, r3
 8018852:	4004      	ands	r4, r0
 8018854:	4613      	mov	r3, r2
 8018856:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018858:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801885a:	9907      	ldr	r1, [sp, #28]
 801885c:	4063      	eors	r3, r4
 801885e:	4013      	ands	r3, r2
 8018860:	4058      	eors	r0, r3
 8018862:	e9dd 231b 	ldrd	r2, r3, [sp, #108]	; 0x6c
 8018866:	fbc0 2301 	smlal	r2, r3, r0, r1
 801886a:	2b00      	cmp	r3, #0
 801886c:	da04      	bge.n	8018878 <arm_nn_softmax_common_s8+0xd28>
 801886e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8018872:	1852      	adds	r2, r2, r1
 8018874:	f143 0300 	adc.w	r3, r3, #0
 8018878:	0fd2      	lsrs	r2, r2, #31
 801887a:	ea42 0243 	orr.w	r2, r2, r3, lsl #1
 801887e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8018880:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8018882:	4013      	ands	r3, r2
 8018884:	410a      	asrs	r2, r1
 8018886:	d41f      	bmi.n	80188c8 <arm_nn_softmax_common_s8+0xd78>
 8018888:	991f      	ldr	r1, [sp, #124]	; 0x7c
 801888a:	4299      	cmp	r1, r3
 801888c:	da00      	bge.n	8018890 <arm_nn_softmax_common_s8+0xd40>
 801888e:	3201      	adds	r2, #1
 8018890:	3a80      	subs	r2, #128	; 0x80
 8018892:	f112 0f7f 	cmn.w	r2, #127	; 0x7f
 8018896:	db1a      	blt.n	80188ce <arm_nn_softmax_common_s8+0xd7e>
 8018898:	2a7e      	cmp	r2, #126	; 0x7e
 801889a:	dc5a      	bgt.n	8018952 <arm_nn_softmax_common_s8+0xe02>
 801889c:	b252      	sxtb	r2, r2
 801889e:	9b03      	ldr	r3, [sp, #12]
 80188a0:	701a      	strb	r2, [r3, #0]
 80188a2:	3301      	adds	r3, #1
 80188a4:	9303      	str	r3, [sp, #12]
 80188a6:	9b06      	ldr	r3, [sp, #24]
 80188a8:	459a      	cmp	sl, r3
 80188aa:	f43f adad 	beq.w	8018408 <arm_nn_softmax_common_s8+0x8b8>
 80188ae:	9a02      	ldr	r2, [sp, #8]
 80188b0:	f91a 3f01 	ldrsb.w	r3, [sl, #1]!
 80188b4:	1a9b      	subs	r3, r3, r2
 80188b6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80188b8:	429a      	cmp	r2, r3
 80188ba:	f77f ae7d 	ble.w	80185b8 <arm_nn_softmax_common_s8+0xa68>
 80188be:	9a03      	ldr	r2, [sp, #12]
 80188c0:	2380      	movs	r3, #128	; 0x80
 80188c2:	7013      	strb	r3, [r2, #0]
 80188c4:	4613      	mov	r3, r2
 80188c6:	e7ec      	b.n	80188a2 <arm_nn_softmax_common_s8+0xd52>
 80188c8:	9920      	ldr	r1, [sp, #128]	; 0x80
 80188ca:	4299      	cmp	r1, r3
 80188cc:	dbdf      	blt.n	801888e <arm_nn_softmax_common_s8+0xd3e>
 80188ce:	f06f 027f 	mvn.w	r2, #127	; 0x7f
 80188d2:	e7e4      	b.n	801889e <arm_nn_softmax_common_s8+0xd4e>
 80188d4:	f04f 0e02 	mov.w	lr, #2
 80188d8:	e704      	b.n	80186e4 <arm_nn_softmax_common_s8+0xb94>
 80188da:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80188de:	f000 80c5 	beq.w	8018a6c <arm_nn_softmax_common_s8+0xf1c>
 80188e2:	f040 4e7f 	orr.w	lr, r0, #4278190080	; 0xff000000
 80188e6:	ea4f 114e 	mov.w	r1, lr, lsl #5
 80188ea:	f101 5180 	add.w	r1, r1, #268435456	; 0x10000000
 80188ee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80188f2:	2500      	movs	r5, #0
 80188f4:	ebae 0e00 	sub.w	lr, lr, r0
 80188f8:	fbc1 3501 	smlal	r3, r5, r1, r1
 80188fc:	461f      	mov	r7, r3
 80188fe:	f3ce 7380 	ubfx	r3, lr, #30, #1
 8018902:	3b01      	subs	r3, #1
 8018904:	9312      	str	r3, [sp, #72]	; 0x48
 8018906:	f3ce 6840 	ubfx	r8, lr, #25, #1
 801890a:	f34e 7380 	sbfx	r3, lr, #30, #1
 801890e:	fab0 f080 	clz	r0, r0
 8018912:	f3ce 7c40 	ubfx	ip, lr, #29, #1
 8018916:	9315      	str	r3, [sp, #84]	; 0x54
 8018918:	f108 33ff 	add.w	r3, r8, #4294967295
 801891c:	0940      	lsrs	r0, r0, #5
 801891e:	9314      	str	r3, [sp, #80]	; 0x50
 8018920:	f10c 33ff 	add.w	r3, ip, #4294967295
 8018924:	9313      	str	r3, [sp, #76]	; 0x4c
 8018926:	1e43      	subs	r3, r0, #1
 8018928:	f3ce 6400 	ubfx	r4, lr, #24, #1
 801892c:	9311      	str	r3, [sp, #68]	; 0x44
 801892e:	f34e 6380 	sbfx	r3, lr, #26, #1
 8018932:	9310      	str	r3, [sp, #64]	; 0x40
 8018934:	2d00      	cmp	r5, #0
 8018936:	f104 33ff 	add.w	r3, r4, #4294967295
 801893a:	f3ce 6980 	ubfx	r9, lr, #26, #1
 801893e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018940:	da05      	bge.n	801894e <arm_nn_softmax_common_s8+0xdfe>
 8018942:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8018946:	18fb      	adds	r3, r7, r3
 8018948:	461f      	mov	r7, r3
 801894a:	f145 0500 	adc.w	r5, r5, #0
 801894e:	0ffb      	lsrs	r3, r7, #31
 8018950:	e684      	b.n	801865c <arm_nn_softmax_common_s8+0xb0c>
 8018952:	227f      	movs	r2, #127	; 0x7f
 8018954:	e7a3      	b.n	801889e <arm_nn_softmax_common_s8+0xd4e>
 8018956:	f43f a929 	beq.w	8017bac <arm_nn_softmax_common_s8+0x5c>
 801895a:	4c3e      	ldr	r4, [pc, #248]	; (8018a54 <arm_nn_softmax_common_s8+0xf04>)
 801895c:	f8df e108 	ldr.w	lr, [pc, #264]	; 8018a68 <arm_nn_softmax_common_s8+0xf18>
 8018960:	f04f 35ff 	mov.w	r5, #4294967295
 8018964:	2700      	movs	r7, #0
 8018966:	f04f 0c01 	mov.w	ip, #1
 801896a:	4621      	mov	r1, r4
 801896c:	462b      	mov	r3, r5
 801896e:	462a      	mov	r2, r5
 8018970:	f04f 0920 	mov.w	r9, #32
 8018974:	46e0      	mov	r8, ip
 8018976:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 801897a:	2600      	movs	r6, #0
 801897c:	f7ff bb0f 	b.w	8017f9e <arm_nn_softmax_common_s8+0x44e>
 8018980:	4935      	ldr	r1, [pc, #212]	; (8018a58 <arm_nn_softmax_common_s8+0xf08>)
 8018982:	9109      	str	r1, [sp, #36]	; 0x24
 8018984:	2400      	movs	r4, #0
 8018986:	f04f 32ff 	mov.w	r2, #4294967295
 801898a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801898e:	e9cd 240c 	strd	r2, r4, [sp, #48]	; 0x30
 8018992:	e9cd 220e 	strd	r2, r2, [sp, #56]	; 0x38
 8018996:	920a      	str	r2, [sp, #40]	; 0x28
 8018998:	4616      	mov	r6, r2
 801899a:	4617      	mov	r7, r2
 801899c:	9214      	str	r2, [sp, #80]	; 0x50
 801899e:	e9cd 4410 	strd	r4, r4, [sp, #64]	; 0x40
 80189a2:	e9cd 4412 	strd	r4, r4, [sp, #72]	; 0x48
 80189a6:	4d2d      	ldr	r5, [pc, #180]	; (8018a5c <arm_nn_softmax_common_s8+0xf0c>)
 80189a8:	4b2d      	ldr	r3, [pc, #180]	; (8018a60 <arm_nn_softmax_common_s8+0xf10>)
 80189aa:	482e      	ldr	r0, [pc, #184]	; (8018a64 <arm_nn_softmax_common_s8+0xf14>)
 80189ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80189ae:	46a0      	mov	r8, r4
 80189b0:	46a6      	mov	lr, r4
 80189b2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80189b6:	9408      	str	r4, [sp, #32]
 80189b8:	9107      	str	r1, [sp, #28]
 80189ba:	f7ff ba12 	b.w	8017de2 <arm_nn_softmax_common_s8+0x292>
 80189be:	fb01 f202 	mul.w	r2, r1, r2
 80189c2:	17c8      	asrs	r0, r1, #31
 80189c4:	fb03 2200 	mla	r2, r3, r0, r2
 80189c8:	fba1 3403 	umull	r3, r4, r1, r3
 80189cc:	f113 4380 	adds.w	r3, r3, #1073741824	; 0x40000000
 80189d0:	eb42 0204 	adc.w	r2, r2, r4
 80189d4:	2a00      	cmp	r2, #0
 80189d6:	da04      	bge.n	80189e2 <arm_nn_softmax_common_s8+0xe92>
 80189d8:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 80189dc:	191b      	adds	r3, r3, r4
 80189de:	f142 0200 	adc.w	r2, r2, #0
 80189e2:	0fdb      	lsrs	r3, r3, #31
 80189e4:	ea43 0342 	orr.w	r3, r3, r2, lsl #1
 80189e8:	f1c3 5300 	rsb	r3, r3, #536870912	; 0x20000000
 80189ec:	465a      	mov	r2, fp
 80189ee:	f04f 34ff 	mov.w	r4, #4294967295
 80189f2:	f7ff bb35 	b.w	8018060 <arm_nn_softmax_common_s8+0x510>
 80189f6:	f04f 32ff 	mov.w	r2, #4294967295
 80189fa:	2000      	movs	r0, #0
 80189fc:	4916      	ldr	r1, [pc, #88]	; (8018a58 <arm_nn_softmax_common_s8+0xf08>)
 80189fe:	9208      	str	r2, [sp, #32]
 8018a00:	4614      	mov	r4, r2
 8018a02:	e9cd 020b 	strd	r0, r2, [sp, #44]	; 0x2c
 8018a06:	910f      	str	r1, [sp, #60]	; 0x3c
 8018a08:	9209      	str	r2, [sp, #36]	; 0x24
 8018a0a:	4696      	mov	lr, r2
 8018a0c:	920a      	str	r2, [sp, #40]	; 0x28
 8018a0e:	4616      	mov	r6, r2
 8018a10:	e9cd 0010 	strd	r0, r0, [sp, #64]	; 0x40
 8018a14:	e9cd 4412 	strd	r4, r4, [sp, #72]	; 0x48
 8018a18:	e9cd 0014 	strd	r0, r0, [sp, #80]	; 0x50
 8018a1c:	4f0f      	ldr	r7, [pc, #60]	; (8018a5c <arm_nn_softmax_common_s8+0xf0c>)
 8018a1e:	4b10      	ldr	r3, [pc, #64]	; (8018a60 <arm_nn_softmax_common_s8+0xf10>)
 8018a20:	4910      	ldr	r1, [pc, #64]	; (8018a64 <arm_nn_softmax_common_s8+0xf14>)
 8018a22:	9003      	str	r0, [sp, #12]
 8018a24:	4681      	mov	r9, r0
 8018a26:	900d      	str	r0, [sp, #52]	; 0x34
 8018a28:	4684      	mov	ip, r0
 8018a2a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8018a2e:	900e      	str	r0, [sp, #56]	; 0x38
 8018a30:	f7ff bbf8 	b.w	8018224 <arm_nn_softmax_common_s8+0x6d4>
 8018a34:	2aaaaaab 	.word	0x2aaaaaab
 8018a38:	70f5a894 	.word	0x70f5a894
 8018a3c:	63afbe7b 	.word	0x63afbe7b
 8018a40:	4da2cbf2 	.word	0x4da2cbf2
 8018a44:	2f16ac6c 	.word	0x2f16ac6c
 8018a48:	1152aaa4 	.word	0x1152aaa4
 8018a4c:	02582ab7 	.word	0x02582ab7
 8018a50:	000afe11 	.word	0x000afe11
 8018a54:	b4b4b4b6 	.word	0xb4b4b4b6
 8018a58:	01fffff8 	.word	0x01fffff8
 8018a5c:	40000100 	.word	0x40000100
 8018a60:	001fffff 	.word	0x001fffff
 8018a64:	0fffffe0 	.word	0x0fffffe0
 8018a68:	4b4b4b4a 	.word	0x4b4b4b4a
 8018a6c:	f04f 0c00 	mov.w	ip, #0
 8018a70:	f04f 35ff 	mov.w	r5, #4294967295
 8018a74:	4a24      	ldr	r2, [pc, #144]	; (8018b08 <arm_nn_softmax_common_s8+0xfb8>)
 8018a76:	920e      	str	r2, [sp, #56]	; 0x38
 8018a78:	e9cd cc08 	strd	ip, ip, [sp, #32]
 8018a7c:	e9cd 5c0f 	strd	r5, ip, [sp, #60]	; 0x3c
 8018a80:	e9cd 5511 	strd	r5, r5, [sp, #68]	; 0x44
 8018a84:	e9cd 5513 	strd	r5, r5, [sp, #76]	; 0x4c
 8018a88:	4f20      	ldr	r7, [pc, #128]	; (8018b0c <arm_nn_softmax_common_s8+0xfbc>)
 8018a8a:	4b21      	ldr	r3, [pc, #132]	; (8018b10 <arm_nn_softmax_common_s8+0xfc0>)
 8018a8c:	4921      	ldr	r1, [pc, #132]	; (8018b14 <arm_nn_softmax_common_s8+0xfc4>)
 8018a8e:	f8cd c030 	str.w	ip, [sp, #48]	; 0x30
 8018a92:	f8cd c028 	str.w	ip, [sp, #40]	; 0x28
 8018a96:	46e0      	mov	r8, ip
 8018a98:	4664      	mov	r4, ip
 8018a9a:	462e      	mov	r6, r5
 8018a9c:	46a9      	mov	r9, r5
 8018a9e:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 8018aa2:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8018aa6:	f8cd c034 	str.w	ip, [sp, #52]	; 0x34
 8018aaa:	f8cd c054 	str.w	ip, [sp, #84]	; 0x54
 8018aae:	e617      	b.n	80186e0 <arm_nn_softmax_common_s8+0xb90>
 8018ab0:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8018ab4:	f04f 0c00 	mov.w	ip, #0
 8018ab8:	4625      	mov	r5, r4
 8018aba:	4664      	mov	r4, ip
 8018abc:	fbc1 5400 	smlal	r5, r4, r1, r0
 8018ac0:	0fe8      	lsrs	r0, r5, #31
 8018ac2:	ea40 0044 	orr.w	r0, r0, r4, lsl #1
 8018ac6:	eb01 0180 	add.w	r1, r1, r0, lsl #2
 8018aca:	17cd      	asrs	r5, r1, #31
 8018acc:	fb03 f005 	mul.w	r0, r3, r5
 8018ad0:	fb01 0002 	mla	r0, r1, r2, r0
 8018ad4:	fba3 e701 	umull	lr, r7, r3, r1
 8018ad8:	460c      	mov	r4, r1
 8018ada:	4407      	add	r7, r0
 8018adc:	e74a      	b.n	8018974 <arm_nn_softmax_common_s8+0xe24>
 8018ade:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018ae2:	005a      	lsls	r2, r3, #1
 8018ae4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8018ae8:	9207      	str	r2, [sp, #28]
 8018aea:	f6ff ad34 	blt.w	8018556 <arm_nn_softmax_common_s8+0xa06>
 8018aee:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8018af2:	9307      	str	r3, [sp, #28]
 8018af4:	f7ff bad6 	b.w	80180a4 <arm_nn_softmax_common_s8+0x554>
 8018af8:	004b      	lsls	r3, r1, #1
 8018afa:	9307      	str	r3, [sp, #28]
 8018afc:	f7ff bad2 	b.w	80180a4 <arm_nn_softmax_common_s8+0x554>
 8018b00:	f04f 0c00 	mov.w	ip, #0
 8018b04:	e736      	b.n	8018974 <arm_nn_softmax_common_s8+0xe24>
 8018b06:	bf00      	nop
 8018b08:	01fffff8 	.word	0x01fffff8
 8018b0c:	40000100 	.word	0x40000100
 8018b10:	001fffff 	.word	0x001fffff
 8018b14:	0fffffe0 	.word	0x0fffffe0

08018b18 <arm_nn_mat_mult_nt_t_s4>:
 8018b18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b1c:	b0b1      	sub	sp, #196	; 0xc4
 8018b1e:	461e      	mov	r6, r3
 8018b20:	9026      	str	r0, [sp, #152]	; 0x98
 8018b22:	983d      	ldr	r0, [sp, #244]	; 0xf4
 8018b24:	9323      	str	r3, [sp, #140]	; 0x8c
 8018b26:	9b3f      	ldr	r3, [sp, #252]	; 0xfc
 8018b28:	9121      	str	r1, [sp, #132]	; 0x84
 8018b2a:	2803      	cmp	r0, #3
 8018b2c:	b21b      	sxth	r3, r3
 8018b2e:	9217      	str	r2, [sp, #92]	; 0x5c
 8018b30:	eac3 4e03 	pkhbt	lr, r3, r3, lsl #16
 8018b34:	f341 8716 	ble.w	801a964 <arm_nn_mat_mult_nt_t_s4+0x1e4c>
 8018b38:	9c3e      	ldr	r4, [sp, #248]	; 0xf8
 8018b3a:	1f03      	subs	r3, r0, #4
 8018b3c:	089b      	lsrs	r3, r3, #2
 8018b3e:	4605      	mov	r5, r0
 8018b40:	1c58      	adds	r0, r3, #1
 8018b42:	f1a4 0310 	sub.w	r3, r4, #16
 8018b46:	9c3c      	ldr	r4, [sp, #240]	; 0xf0
 8018b48:	902d      	str	r0, [sp, #180]	; 0xb4
 8018b4a:	1064      	asrs	r4, r4, #1
 8018b4c:	4617      	mov	r7, r2
 8018b4e:	fb05 f204 	mul.w	r2, r5, r4
 8018b52:	9429      	str	r4, [sp, #164]	; 0xa4
 8018b54:	9d43      	ldr	r5, [sp, #268]	; 0x10c
 8018b56:	971f      	str	r7, [sp, #124]	; 0x7c
 8018b58:	0054      	lsls	r4, r2, #1
 8018b5a:	942b      	str	r4, [sp, #172]	; 0xac
 8018b5c:	f06f 0403 	mvn.w	r4, #3
 8018b60:	1b64      	subs	r4, r4, r5
 8018b62:	9d3e      	ldr	r5, [sp, #248]	; 0xf8
 8018b64:	9405      	str	r4, [sp, #20]
 8018b66:	f06f 0401 	mvn.w	r4, #1
 8018b6a:	091b      	lsrs	r3, r3, #4
 8018b6c:	1b64      	subs	r4, r4, r5
 8018b6e:	f105 020a 	add.w	r2, r5, #10
 8018b72:	9406      	str	r4, [sp, #24]
 8018b74:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 8018b78:	9420      	str	r4, [sp, #128]	; 0x80
 8018b7a:	00dc      	lsls	r4, r3, #3
 8018b7c:	942a      	str	r4, [sp, #168]	; 0xa8
 8018b7e:	f06f 0403 	mvn.w	r4, #3
 8018b82:	1b64      	subs	r4, r4, r5
 8018b84:	942c      	str	r4, [sp, #176]	; 0xb0
 8018b86:	f1a5 040f 	sub.w	r4, r5, #15
 8018b8a:	9413      	str	r4, [sp, #76]	; 0x4c
 8018b8c:	f005 0401 	and.w	r4, r5, #1
 8018b90:	941b      	str	r4, [sp, #108]	; 0x6c
 8018b92:	462c      	mov	r4, r5
 8018b94:	9d43      	ldr	r5, [sp, #268]	; 0x10c
 8018b96:	ebc4 0445 	rsb	r4, r4, r5, lsl #1
 8018b9a:	941c      	str	r4, [sp, #112]	; 0x70
 8018b9c:	9c3c      	ldr	r4, [sp, #240]	; 0xf0
 8018b9e:	9d3e      	ldr	r5, [sp, #248]	; 0xf8
 8018ba0:	f004 0401 	and.w	r4, r4, #1
 8018ba4:	468c      	mov	ip, r1
 8018ba6:	9428      	str	r4, [sp, #160]	; 0xa0
 8018ba8:	1c59      	adds	r1, r3, #1
 8018baa:	9c3e      	ldr	r4, [sp, #248]	; 0xf8
 8018bac:	eb06 0380 	add.w	r3, r6, r0, lsl #2
 8018bb0:	9325      	str	r3, [sp, #148]	; 0x94
 8018bb2:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 8018bb4:	0064      	lsls	r4, r4, #1
 8018bb6:	9427      	str	r4, [sp, #156]	; 0x9c
 8018bb8:	005b      	lsls	r3, r3, #1
 8018bba:	9c3a      	ldr	r4, [sp, #232]	; 0xe8
 8018bbc:	940b      	str	r4, [sp, #44]	; 0x2c
 8018bbe:	931d      	str	r3, [sp, #116]	; 0x74
 8018bc0:	9c3b      	ldr	r4, [sp, #236]	; 0xec
 8018bc2:	940a      	str	r4, [sp, #40]	; 0x28
 8018bc4:	00cb      	lsls	r3, r1, #3
 8018bc6:	931a      	str	r3, [sp, #104]	; 0x68
 8018bc8:	4664      	mov	r4, ip
 8018bca:	010b      	lsls	r3, r1, #4
 8018bcc:	9316      	str	r3, [sp, #88]	; 0x58
 8018bce:	442c      	add	r4, r5
 8018bd0:	426b      	negs	r3, r5
 8018bd2:	9419      	str	r4, [sp, #100]	; 0x64
 8018bd4:	9322      	str	r3, [sp, #136]	; 0x88
 8018bd6:	1e6b      	subs	r3, r5, #1
 8018bd8:	9314      	str	r3, [sp, #80]	; 0x50
 8018bda:	9919      	ldr	r1, [sp, #100]	; 0x64
 8018bdc:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8018bde:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8018be0:	1aca      	subs	r2, r1, r3
 8018be2:	9224      	str	r2, [sp, #144]	; 0x90
 8018be4:	2800      	cmp	r0, #0
 8018be6:	f001 8556 	beq.w	801a696 <arm_nn_mat_mult_nt_t_s4+0x1b7e>
 8018bea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018bec:	9011      	str	r0, [sp, #68]	; 0x44
 8018bee:	330a      	adds	r3, #10
 8018bf0:	440b      	add	r3, r1
 8018bf2:	9309      	str	r3, [sp, #36]	; 0x24
 8018bf4:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8018bf6:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8018bf8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8018bfc:	3b03      	subs	r3, #3
 8018bfe:	9312      	str	r3, [sp, #72]	; 0x48
 8018c00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8018c02:	930e      	str	r3, [sp, #56]	; 0x38
 8018c04:	1859      	adds	r1, r3, r1
 8018c06:	910f      	str	r1, [sp, #60]	; 0x3c
 8018c08:	991a      	ldr	r1, [sp, #104]	; 0x68
 8018c0a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8018c0c:	440a      	add	r2, r1
 8018c0e:	921e      	str	r2, [sp, #120]	; 0x78
 8018c10:	3304      	adds	r3, #4
 8018c12:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8018c14:	9207      	str	r2, [sp, #28]
 8018c16:	9315      	str	r3, [sp, #84]	; 0x54
 8018c18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018c1a:	2b00      	cmp	r3, #0
 8018c1c:	f001 80ac 	beq.w	8019d78 <arm_nn_mat_mult_nt_t_s4+0x1260>
 8018c20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018c22:	e9d3 2701 	ldrd	r2, r7, [r3, #4]
 8018c26:	681c      	ldr	r4, [r3, #0]
 8018c28:	68db      	ldr	r3, [r3, #12]
 8018c2a:	9303      	str	r3, [sp, #12]
 8018c2c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018c2e:	9202      	str	r2, [sp, #8]
 8018c30:	2b00      	cmp	r3, #0
 8018c32:	f341 80a9 	ble.w	8019d88 <arm_nn_mat_mult_nt_t_s4+0x1270>
 8018c36:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8018c38:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8018c3a:	9701      	str	r7, [sp, #4]
 8018c3c:	1c9d      	adds	r5, r3, #2
 8018c3e:	9b07      	ldr	r3, [sp, #28]
 8018c40:	9500      	str	r5, [sp, #0]
 8018c42:	189e      	adds	r6, r3, r2
 8018c44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018c46:	46a3      	mov	fp, r4
 8018c48:	46b1      	mov	r9, r6
 8018c4a:	9e06      	ldr	r6, [sp, #24]
 8018c4c:	9a00      	ldr	r2, [sp, #0]
 8018c4e:	5ab2      	ldrh	r2, [r6, r2]
 8018c50:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 8018c54:	9a00      	ldr	r2, [sp, #0]
 8018c56:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8018c58:	f832 2c02 	ldrh.w	r2, [r2, #-2]
 8018c5c:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 8018c60:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8018c62:	0210      	lsls	r0, r2, #8
 8018c64:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
 8018c68:	b2d2      	uxtb	r2, r2
 8018c6a:	4310      	orrs	r0, r2
 8018c6c:	ea4f 2c01 	mov.w	ip, r1, lsl #8
 8018c70:	9a05      	ldr	r2, [sp, #20]
 8018c72:	b2c9      	uxtb	r1, r1
 8018c74:	f40c 0c7f 	and.w	ip, ip, #16711680	; 0xff0000
 8018c78:	ea4c 0c01 	orr.w	ip, ip, r1
 8018c7c:	f852 1009 	ldr.w	r1, [r2, r9]
 8018c80:	444a      	add	r2, r9
 8018c82:	ea4f 180c 	mov.w	r8, ip, lsl #4
 8018c86:	ea4f 1e00 	mov.w	lr, r0, lsl #4
 8018c8a:	9204      	str	r2, [sp, #16]
 8018c8c:	9a00      	ldr	r2, [sp, #0]
 8018c8e:	fa2f f888 	sxtb16	r8, r8
 8018c92:	fa2f fc8c 	sxtb16	ip, ip
 8018c96:	fa2f fe8e 	sxtb16	lr, lr
 8018c9a:	fa2f f080 	sxtb16	r0, r0
 8018c9e:	464d      	mov	r5, r9
 8018ca0:	ea4f 1838 	mov.w	r8, r8, ror #4
 8018ca4:	ea4f 1c3c 	mov.w	ip, ip, ror #4
 8018ca8:	ea4f 1e3e 	mov.w	lr, lr, ror #4
 8018cac:	ea4f 1030 	mov.w	r0, r0, ror #4
 8018cb0:	eb06 0a02 	add.w	sl, r6, r2
 8018cb4:	fa2f f888 	sxtb16	r8, r8
 8018cb8:	fa2f fc8c 	sxtb16	ip, ip
 8018cbc:	fa2f fe8e 	sxtb16	lr, lr
 8018cc0:	fa2f f080 	sxtb16	r0, r0
 8018cc4:	fa23 f981 	sxtab16	r9, r3, r1
 8018cc8:	fa23 f191 	sxtab16	r1, r3, r1, ror #8
 8018ccc:	fb28 4209 	smlad	r2, r8, r9, r4
 8018cd0:	fb2c 2201 	smlad	r2, ip, r1, r2
 8018cd4:	fb2e 7709 	smlad	r7, lr, r9, r7
 8018cd8:	fb20 7701 	smlad	r7, r0, r1, r7
 8018cdc:	f855 1c04 	ldr.w	r1, [r5, #-4]
 8018ce0:	fa23 f481 	sxtab16	r4, r3, r1
 8018ce4:	fa23 f191 	sxtab16	r1, r3, r1, ror #8
 8018ce8:	fb28 bb04 	smlad	fp, r8, r4, fp
 8018cec:	9e01      	ldr	r6, [sp, #4]
 8018cee:	fb2e 6404 	smlad	r4, lr, r4, r6
 8018cf2:	fb2c bb01 	smlad	fp, ip, r1, fp
 8018cf6:	fb20 4101 	smlad	r1, r0, r1, r4
 8018cfa:	f8ba 0002 	ldrh.w	r0, [sl, #2]
 8018cfe:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 8018d02:	9800      	ldr	r0, [sp, #0]
 8018d04:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8018d06:	8800      	ldrh	r0, [r0, #0]
 8018d08:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 8018d0c:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8018d0e:	9e04      	ldr	r6, [sp, #16]
 8018d10:	ea4f 2c04 	mov.w	ip, r4, lsl #8
 8018d14:	f40c 0c7f 	and.w	ip, ip, #16711680	; 0xff0000
 8018d18:	b2e4      	uxtb	r4, r4
 8018d1a:	ea4c 0404 	orr.w	r4, ip, r4
 8018d1e:	ea4f 2c00 	mov.w	ip, r0, lsl #8
 8018d22:	f40c 0c7f 	and.w	ip, ip, #16711680	; 0xff0000
 8018d26:	b2c0      	uxtb	r0, r0
 8018d28:	ea4c 0000 	orr.w	r0, ip, r0
 8018d2c:	ea4f 1e00 	mov.w	lr, r0, lsl #4
 8018d30:	ea4f 1c04 	mov.w	ip, r4, lsl #4
 8018d34:	fa2f fc8c 	sxtb16	ip, ip
 8018d38:	fa2f f484 	sxtb16	r4, r4
 8018d3c:	fa2f fe8e 	sxtb16	lr, lr
 8018d40:	fa2f f080 	sxtb16	r0, r0
 8018d44:	f8d6 9004 	ldr.w	r9, [r6, #4]
 8018d48:	fa23 f889 	sxtab16	r8, r3, r9
 8018d4c:	ea4f 1c3c 	mov.w	ip, ip, ror #4
 8018d50:	ea4f 1434 	mov.w	r4, r4, ror #4
 8018d54:	ea4f 1e3e 	mov.w	lr, lr, ror #4
 8018d58:	ea4f 1030 	mov.w	r0, r0, ror #4
 8018d5c:	fa2f fc8c 	sxtb16	ip, ip
 8018d60:	fa2f f484 	sxtb16	r4, r4
 8018d64:	fa2f fe8e 	sxtb16	lr, lr
 8018d68:	fa2f f080 	sxtb16	r0, r0
 8018d6c:	fa23 f999 	sxtab16	r9, r3, r9, ror #8
 8018d70:	fb2c 2208 	smlad	r2, ip, r8, r2
 8018d74:	fb24 2209 	smlad	r2, r4, r9, r2
 8018d78:	fb2e 7708 	smlad	r7, lr, r8, r7
 8018d7c:	fb20 7909 	smlad	r9, r0, r9, r7
 8018d80:	682f      	ldr	r7, [r5, #0]
 8018d82:	fa23 f887 	sxtab16	r8, r3, r7
 8018d86:	fa23 f797 	sxtab16	r7, r3, r7, ror #8
 8018d8a:	fb2c bb08 	smlad	fp, ip, r8, fp
 8018d8e:	fb2e 1108 	smlad	r1, lr, r8, r1
 8018d92:	fb24 b407 	smlad	r4, r4, r7, fp
 8018d96:	fb20 1007 	smlad	r0, r0, r7, r1
 8018d9a:	f8ba 1004 	ldrh.w	r1, [sl, #4]
 8018d9e:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 8018da2:	9900      	ldr	r1, [sp, #0]
 8018da4:	f8d6 c008 	ldr.w	ip, [r6, #8]
 8018da8:	884f      	ldrh	r7, [r1, #2]
 8018daa:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8018dac:	f8ad 70bc 	strh.w	r7, [sp, #188]	; 0xbc
 8018db0:	9f2f      	ldr	r7, [sp, #188]	; 0xbc
 8018db2:	fa23 fb8c 	sxtab16	fp, r3, ip
 8018db6:	ea4f 2e01 	mov.w	lr, r1, lsl #8
 8018dba:	f40e 0e7f 	and.w	lr, lr, #16711680	; 0xff0000
 8018dbe:	b2c9      	uxtb	r1, r1
 8018dc0:	ea4e 0e01 	orr.w	lr, lr, r1
 8018dc4:	0239      	lsls	r1, r7, #8
 8018dc6:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 8018dca:	b2ff      	uxtb	r7, r7
 8018dcc:	4339      	orrs	r1, r7
 8018dce:	ea4f 180e 	mov.w	r8, lr, lsl #4
 8018dd2:	010f      	lsls	r7, r1, #4
 8018dd4:	fa2f f888 	sxtb16	r8, r8
 8018dd8:	fa2f fe8e 	sxtb16	lr, lr
 8018ddc:	fa2f f787 	sxtb16	r7, r7
 8018de0:	fa2f f181 	sxtb16	r1, r1
 8018de4:	ea4f 1838 	mov.w	r8, r8, ror #4
 8018de8:	ea4f 1e3e 	mov.w	lr, lr, ror #4
 8018dec:	ea4f 1737 	mov.w	r7, r7, ror #4
 8018df0:	ea4f 1131 	mov.w	r1, r1, ror #4
 8018df4:	fa2f f888 	sxtb16	r8, r8
 8018df8:	fa2f fe8e 	sxtb16	lr, lr
 8018dfc:	fa2f f787 	sxtb16	r7, r7
 8018e00:	fa2f f181 	sxtb16	r1, r1
 8018e04:	fa23 fc9c 	sxtab16	ip, r3, ip, ror #8
 8018e08:	fb28 220b 	smlad	r2, r8, fp, r2
 8018e0c:	fb2e 220c 	smlad	r2, lr, ip, r2
 8018e10:	fb27 990b 	smlad	r9, r7, fp, r9
 8018e14:	fb21 9c0c 	smlad	ip, r1, ip, r9
 8018e18:	f8d5 9004 	ldr.w	r9, [r5, #4]
 8018e1c:	fa23 fb89 	sxtab16	fp, r3, r9
 8018e20:	fa23 f999 	sxtab16	r9, r3, r9, ror #8
 8018e24:	fb28 440b 	smlad	r4, r8, fp, r4
 8018e28:	fb27 000b 	smlad	r0, r7, fp, r0
 8018e2c:	fb2e 4e09 	smlad	lr, lr, r9, r4
 8018e30:	fb21 0909 	smlad	r9, r1, r9, r0
 8018e34:	f8ba 1006 	ldrh.w	r1, [sl, #6]
 8018e38:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 8018e3c:	9900      	ldr	r1, [sp, #0]
 8018e3e:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8018e40:	8889      	ldrh	r1, [r1, #4]
 8018e42:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 8018e46:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8018e48:	68f7      	ldr	r7, [r6, #12]
 8018e4a:	ea4f 2b00 	mov.w	fp, r0, lsl #8
 8018e4e:	ea4f 2a01 	mov.w	sl, r1, lsl #8
 8018e52:	b2c0      	uxtb	r0, r0
 8018e54:	b2c9      	uxtb	r1, r1
 8018e56:	f40b 0b7f 	and.w	fp, fp, #16711680	; 0xff0000
 8018e5a:	f40a 0a7f 	and.w	sl, sl, #16711680	; 0xff0000
 8018e5e:	ea4a 0a01 	orr.w	sl, sl, r1
 8018e62:	ea4b 0b00 	orr.w	fp, fp, r0
 8018e66:	ea4f 100b 	mov.w	r0, fp, lsl #4
 8018e6a:	ea4f 180a 	mov.w	r8, sl, lsl #4
 8018e6e:	fa2f f080 	sxtb16	r0, r0
 8018e72:	fa2f fb8b 	sxtb16	fp, fp
 8018e76:	fa2f f888 	sxtb16	r8, r8
 8018e7a:	fa2f fa8a 	sxtb16	sl, sl
 8018e7e:	ea4f 1030 	mov.w	r0, r0, ror #4
 8018e82:	ea4f 1b3b 	mov.w	fp, fp, ror #4
 8018e86:	ea4f 1838 	mov.w	r8, r8, ror #4
 8018e8a:	ea4f 1a3a 	mov.w	sl, sl, ror #4
 8018e8e:	fa2f f080 	sxtb16	r0, r0
 8018e92:	fa2f fb8b 	sxtb16	fp, fp
 8018e96:	fa2f f888 	sxtb16	r8, r8
 8018e9a:	fa2f fa8a 	sxtb16	sl, sl
 8018e9e:	fa23 f187 	sxtab16	r1, r3, r7
 8018ea2:	fa23 f797 	sxtab16	r7, r3, r7, ror #8
 8018ea6:	fb20 2201 	smlad	r2, r0, r1, r2
 8018eaa:	fb2b 2407 	smlad	r4, fp, r7, r2
 8018eae:	fb28 cc01 	smlad	ip, r8, r1, ip
 8018eb2:	fb2a c707 	smlad	r7, sl, r7, ip
 8018eb6:	68aa      	ldr	r2, [r5, #8]
 8018eb8:	fa23 fc82 	sxtab16	ip, r3, r2
 8018ebc:	4629      	mov	r1, r5
 8018ebe:	fa23 f292 	sxtab16	r2, r3, r2, ror #8
 8018ec2:	fb20 ee0c 	smlad	lr, r0, ip, lr
 8018ec6:	fb28 990c 	smlad	r9, r8, ip, r9
 8018eca:	fb2b eb02 	smlad	fp, fp, r2, lr
 8018ece:	fb2a 9202 	smlad	r2, sl, r2, r9
 8018ed2:	9201      	str	r2, [sp, #4]
 8018ed4:	9a00      	ldr	r2, [sp, #0]
 8018ed6:	3208      	adds	r2, #8
 8018ed8:	9200      	str	r2, [sp, #0]
 8018eda:	3110      	adds	r1, #16
 8018edc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ede:	4689      	mov	r9, r1
 8018ee0:	9900      	ldr	r1, [sp, #0]
 8018ee2:	428a      	cmp	r2, r1
 8018ee4:	f47f aeb1 	bne.w	8018c4a <arm_nn_mat_mult_nt_t_s4+0x132>
 8018ee8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018eea:	9b07      	ldr	r3, [sp, #28]
 8018eec:	f8dd e078 	ldr.w	lr, [sp, #120]	; 0x78
 8018ef0:	920c      	str	r2, [sp, #48]	; 0x30
 8018ef2:	4413      	add	r3, r2
 8018ef4:	9307      	str	r3, [sp, #28]
 8018ef6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018ef8:	429a      	cmp	r2, r3
 8018efa:	f280 8750 	bge.w	8019d9e <arm_nn_mat_mult_nt_t_s4+0x1286>
 8018efe:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8018f00:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018f04:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018f06:	f8dd a10c 	ldr.w	sl, [sp, #268]	; 0x10c
 8018f0a:	3b04      	subs	r3, #4
 8018f0c:	1a9b      	subs	r3, r3, r2
 8018f0e:	ea4f 0993 	mov.w	r9, r3, lsr #2
 8018f12:	f109 0001 	add.w	r0, r9, #1
 8018f16:	eb0e 0340 	add.w	r3, lr, r0, lsl #1
 8018f1a:	f8cd 9020 	str.w	r9, [sp, #32]
 8018f1e:	f8dd 9004 	ldr.w	r9, [sp, #4]
 8018f22:	9304      	str	r3, [sp, #16]
 8018f24:	9000      	str	r0, [sp, #0]
 8018f26:	f8be 3000 	ldrh.w	r3, [lr]
 8018f2a:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8018f2e:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8018f30:	f858 5b04 	ldr.w	r5, [r8], #4
 8018f34:	f83e 2003 	ldrh.w	r2, [lr, r3]
 8018f38:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018f3a:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 8018f3e:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8018f40:	fa26 fc85 	sxtab16	ip, r6, r5
 8018f44:	021a      	lsls	r2, r3, #8
 8018f46:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8018f4a:	b2db      	uxtb	r3, r3
 8018f4c:	431a      	orrs	r2, r3
 8018f4e:	020b      	lsls	r3, r1, #8
 8018f50:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8018f54:	b2c9      	uxtb	r1, r1
 8018f56:	430b      	orrs	r3, r1
 8018f58:	0110      	lsls	r0, r2, #4
 8018f5a:	0119      	lsls	r1, r3, #4
 8018f5c:	fa2f f080 	sxtb16	r0, r0
 8018f60:	fa2f f282 	sxtb16	r2, r2
 8018f64:	fa2f f181 	sxtb16	r1, r1
 8018f68:	fa2f f383 	sxtb16	r3, r3
 8018f6c:	f10e 0e02 	add.w	lr, lr, #2
 8018f70:	ea4f 1030 	mov.w	r0, r0, ror #4
 8018f74:	ea4f 1232 	mov.w	r2, r2, ror #4
 8018f78:	ea4f 1131 	mov.w	r1, r1, ror #4
 8018f7c:	ea4f 1333 	mov.w	r3, r3, ror #4
 8018f80:	fa2f f080 	sxtb16	r0, r0
 8018f84:	fa2f f282 	sxtb16	r2, r2
 8018f88:	fa2f f181 	sxtb16	r1, r1
 8018f8c:	fa2f f383 	sxtb16	r3, r3
 8018f90:	fa26 f595 	sxtab16	r5, r6, r5, ror #8
 8018f94:	fb20 440c 	smlad	r4, r0, ip, r4
 8018f98:	fb22 4405 	smlad	r4, r2, r5, r4
 8018f9c:	fb21 770c 	smlad	r7, r1, ip, r7
 8018fa0:	fb23 7705 	smlad	r7, r3, r5, r7
 8018fa4:	eb08 050a 	add.w	r5, r8, sl
 8018fa8:	f855 5c04 	ldr.w	r5, [r5, #-4]
 8018fac:	fa26 fc85 	sxtab16	ip, r6, r5
 8018fb0:	fa26 f595 	sxtab16	r5, r6, r5, ror #8
 8018fb4:	fb20 bb0c 	smlad	fp, r0, ip, fp
 8018fb8:	fb21 990c 	smlad	r9, r1, ip, r9
 8018fbc:	fb22 bb05 	smlad	fp, r2, r5, fp
 8018fc0:	fb23 9905 	smlad	r9, r3, r5, r9
 8018fc4:	9b04      	ldr	r3, [sp, #16]
 8018fc6:	459e      	cmp	lr, r3
 8018fc8:	d1ad      	bne.n	8018f26 <arm_nn_mat_mult_nt_t_s4+0x40e>
 8018fca:	f8cd 9004 	str.w	r9, [sp, #4]
 8018fce:	e9dd 3907 	ldrd	r3, r9, [sp, #28]
 8018fd2:	9800      	ldr	r0, [sp, #0]
 8018fd4:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 8018fd8:	9307      	str	r3, [sp, #28]
 8018fda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018fdc:	3304      	adds	r3, #4
 8018fde:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 8018fe2:	9310      	str	r3, [sp, #64]	; 0x40
 8018fe4:	461a      	mov	r2, r3
 8018fe6:	9914      	ldr	r1, [sp, #80]	; 0x50
 8018fe8:	428a      	cmp	r2, r1
 8018fea:	da4e      	bge.n	801908a <arm_nn_mat_mult_nt_t_s4+0x572>
 8018fec:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8018fee:	3b02      	subs	r3, #2
 8018ff0:	1a9b      	subs	r3, r3, r2
 8018ff2:	9a43      	ldr	r2, [sp, #268]	; 0x10c
 8018ff4:	f102 0801 	add.w	r8, r2, #1
 8018ff8:	9a07      	ldr	r2, [sp, #28]
 8018ffa:	4490      	add	r8, r2
 8018ffc:	f102 0e02 	add.w	lr, r2, #2
 8019000:	9a04      	ldr	r2, [sp, #16]
 8019002:	f102 39ff 	add.w	r9, r2, #4294967295
 8019006:	1850      	adds	r0, r2, r1
 8019008:	46cc      	mov	ip, r9
 801900a:	0859      	lsrs	r1, r3, #1
 801900c:	f8dd 90fc 	ldr.w	r9, [sp, #252]	; 0xfc
 8019010:	9118      	str	r1, [sp, #96]	; 0x60
 8019012:	eb02 0353 	add.w	r3, r2, r3, lsr #1
 8019016:	9308      	str	r3, [sp, #32]
 8019018:	9000      	str	r0, [sp, #0]
 801901a:	9b00      	ldr	r3, [sp, #0]
 801901c:	f91c 1f01 	ldrsb.w	r1, [ip, #1]!
 8019020:	f913 2f01 	ldrsb.w	r2, [r3, #1]!
 8019024:	f918 6c01 	ldrsb.w	r6, [r8, #-1]
 8019028:	9300      	str	r3, [sp, #0]
 801902a:	f91e 3c02 	ldrsb.w	r3, [lr, #-2]
 801902e:	f91e 5c01 	ldrsb.w	r5, [lr, #-1]
 8019032:	f918 0b02 	ldrsb.w	r0, [r8], #2
 8019036:	f341 0a03 	sbfx	sl, r1, #0, #4
 801903a:	444b      	add	r3, r9
 801903c:	444e      	add	r6, r9
 801903e:	1109      	asrs	r1, r1, #4
 8019040:	fb03 440a 	mla	r4, r3, sl, r4
 8019044:	444d      	add	r5, r9
 8019046:	4448      	add	r0, r9
 8019048:	fb06 bb0a 	mla	fp, r6, sl, fp
 801904c:	fb05 4401 	mla	r4, r5, r1, r4
 8019050:	fb00 bb01 	mla	fp, r0, r1, fp
 8019054:	f342 0103 	sbfx	r1, r2, #0, #4
 8019058:	fb03 7701 	mla	r7, r3, r1, r7
 801905c:	9b01      	ldr	r3, [sp, #4]
 801905e:	1112      	asrs	r2, r2, #4
 8019060:	fb06 3a01 	mla	sl, r6, r1, r3
 8019064:	fb00 a302 	mla	r3, r0, r2, sl
 8019068:	9301      	str	r3, [sp, #4]
 801906a:	9b08      	ldr	r3, [sp, #32]
 801906c:	4563      	cmp	r3, ip
 801906e:	f10e 0e02 	add.w	lr, lr, #2
 8019072:	fb05 7702 	mla	r7, r5, r2, r7
 8019076:	d1d0      	bne.n	801901a <arm_nn_mat_mult_nt_t_s4+0x502>
 8019078:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801907a:	9a04      	ldr	r2, [sp, #16]
 801907c:	3301      	adds	r3, #1
 801907e:	441a      	add	r2, r3
 8019080:	9204      	str	r2, [sp, #16]
 8019082:	9a07      	ldr	r2, [sp, #28]
 8019084:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019088:	9307      	str	r3, [sp, #28]
 801908a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801908c:	2b00      	cmp	r3, #0
 801908e:	f000 85e9 	beq.w	8019c64 <arm_nn_mat_mult_nt_t_s4+0x114c>
 8019092:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8019094:	9907      	ldr	r1, [sp, #28]
 8019096:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8019098:	9804      	ldr	r0, [sp, #16]
 801909a:	f991 5000 	ldrsb.w	r5, [r1]
 801909e:	f1c3 0301 	rsb	r3, r3, #1
 80190a2:	18ce      	adds	r6, r1, r3
 80190a4:	56cb      	ldrsb	r3, [r1, r3]
 80190a6:	eb03 0c02 	add.w	ip, r3, r2
 80190aa:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80190ac:	f990 2000 	ldrsb.w	r2, [r0]
 80190b0:	56c3      	ldrsb	r3, [r0, r3]
 80190b2:	3001      	adds	r0, #1
 80190b4:	9004      	str	r0, [sp, #16]
 80190b6:	9843      	ldr	r0, [sp, #268]	; 0x10c
 80190b8:	5608      	ldrsb	r0, [r1, r0]
 80190ba:	993f      	ldr	r1, [sp, #252]	; 0xfc
 80190bc:	440d      	add	r5, r1
 80190be:	4408      	add	r0, r1
 80190c0:	9943      	ldr	r1, [sp, #268]	; 0x10c
 80190c2:	5671      	ldrsb	r1, [r6, r1]
 80190c4:	3601      	adds	r6, #1
 80190c6:	9607      	str	r6, [sp, #28]
 80190c8:	9e3f      	ldr	r6, [sp, #252]	; 0xfc
 80190ca:	4431      	add	r1, r6
 80190cc:	f342 0603 	sbfx	r6, r2, #0, #4
 80190d0:	fb05 4406 	mla	r4, r5, r6, r4
 80190d4:	fb00 bb06 	mla	fp, r0, r6, fp
 80190d8:	f343 0603 	sbfx	r6, r3, #0, #4
 80190dc:	fb05 7706 	mla	r7, r5, r6, r7
 80190e0:	9d01      	ldr	r5, [sp, #4]
 80190e2:	fb00 5006 	mla	r0, r0, r6, r5
 80190e6:	9001      	str	r0, [sp, #4]
 80190e8:	9802      	ldr	r0, [sp, #8]
 80190ea:	1112      	asrs	r2, r2, #4
 80190ec:	fb01 0602 	mla	r6, r1, r2, r0
 80190f0:	fb0c 0202 	mla	r2, ip, r2, r0
 80190f4:	9202      	str	r2, [sp, #8]
 80190f6:	9a03      	ldr	r2, [sp, #12]
 80190f8:	111b      	asrs	r3, r3, #4
 80190fa:	fb01 2e03 	mla	lr, r1, r3, r2
 80190fe:	fb0c 2303 	mla	r3, ip, r3, r2
 8019102:	9303      	str	r3, [sp, #12]
 8019104:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019106:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019108:	681b      	ldr	r3, [r3, #0]
 801910a:	6815      	ldr	r5, [r2, #0]
 801910c:	ea23 72e3 	bic.w	r2, r3, r3, asr #31
 8019110:	4094      	lsls	r4, r2
 8019112:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8019116:	2000      	movs	r0, #0
 8019118:	fbc4 1005 	smlal	r1, r0, r4, r5
 801911c:	0fc9      	lsrs	r1, r1, #31
 801911e:	2b00      	cmp	r3, #0
 8019120:	ea41 0840 	orr.w	r8, r1, r0, lsl #1
 8019124:	f340 85a6 	ble.w	8019c74 <arm_nn_mat_mult_nt_t_s4+0x115c>
 8019128:	fa0b f202 	lsl.w	r2, fp, r2
 801912c:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8019130:	2300      	movs	r3, #0
 8019132:	fbc5 1302 	smlal	r1, r3, r5, r2
 8019136:	ea4f 7cd1 	mov.w	ip, r1, lsr #31
 801913a:	f04f 0a00 	mov.w	sl, #0
 801913e:	ea4c 0c43 	orr.w	ip, ip, r3, lsl #1
 8019142:	46d1      	mov	r9, sl
 8019144:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019146:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019148:	689b      	ldr	r3, [r3, #8]
 801914a:	6895      	ldr	r5, [r2, #8]
 801914c:	ea23 71e3 	bic.w	r1, r3, r3, asr #31
 8019150:	fa07 fb01 	lsl.w	fp, r7, r1
 8019154:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8019158:	2000      	movs	r0, #0
 801915a:	fbcb 2005 	smlal	r2, r0, fp, r5
 801915e:	0fd2      	lsrs	r2, r2, #31
 8019160:	2b00      	cmp	r3, #0
 8019162:	ea42 0240 	orr.w	r2, r2, r0, lsl #1
 8019166:	f340 85a8 	ble.w	8019cba <arm_nn_mat_mult_nt_t_s4+0x11a2>
 801916a:	9b01      	ldr	r3, [sp, #4]
 801916c:	408b      	lsls	r3, r1
 801916e:	4619      	mov	r1, r3
 8019170:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8019174:	2300      	movs	r3, #0
 8019176:	fbc5 0301 	smlal	r0, r3, r5, r1
 801917a:	0fc5      	lsrs	r5, r0, #31
 801917c:	2000      	movs	r0, #0
 801917e:	ea45 0543 	orr.w	r5, r5, r3, lsl #1
 8019182:	4604      	mov	r4, r0
 8019184:	f1bc 0f00 	cmp.w	ip, #0
 8019188:	bfb8      	it	lt
 801918a:	f109 0901 	addlt.w	r9, r9, #1
 801918e:	45d1      	cmp	r9, sl
 8019190:	bfb8      	it	lt
 8019192:	f10c 0c01 	addlt.w	ip, ip, #1
 8019196:	2d00      	cmp	r5, #0
 8019198:	bfb8      	it	lt
 801919a:	3401      	addlt	r4, #1
 801919c:	9b40      	ldr	r3, [sp, #256]	; 0x100
 801919e:	4284      	cmp	r4, r0
 80191a0:	bfb8      	it	lt
 80191a2:	3501      	addlt	r5, #1
 80191a4:	eb03 0108 	add.w	r1, r3, r8
 80191a8:	441a      	add	r2, r3
 80191aa:	449c      	add	ip, r3
 80191ac:	441d      	add	r5, r3
 80191ae:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80191b0:	4299      	cmp	r1, r3
 80191b2:	bfb8      	it	lt
 80191b4:	4619      	movlt	r1, r3
 80191b6:	429a      	cmp	r2, r3
 80191b8:	bfb8      	it	lt
 80191ba:	461a      	movlt	r2, r3
 80191bc:	459c      	cmp	ip, r3
 80191be:	bfb8      	it	lt
 80191c0:	469c      	movlt	ip, r3
 80191c2:	429d      	cmp	r5, r3
 80191c4:	bfb8      	it	lt
 80191c6:	461d      	movlt	r5, r3
 80191c8:	9b42      	ldr	r3, [sp, #264]	; 0x108
 80191ca:	4299      	cmp	r1, r3
 80191cc:	bfa8      	it	ge
 80191ce:	4619      	movge	r1, r3
 80191d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80191d2:	7019      	strb	r1, [r3, #0]
 80191d4:	9942      	ldr	r1, [sp, #264]	; 0x108
 80191d6:	428a      	cmp	r2, r1
 80191d8:	bfa8      	it	ge
 80191da:	460a      	movge	r2, r1
 80191dc:	458c      	cmp	ip, r1
 80191de:	709a      	strb	r2, [r3, #2]
 80191e0:	bfa8      	it	ge
 80191e2:	468c      	movge	ip, r1
 80191e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80191e6:	428d      	cmp	r5, r1
 80191e8:	bfa8      	it	ge
 80191ea:	460d      	movge	r5, r1
 80191ec:	f883 c000 	strb.w	ip, [r3]
 80191f0:	709d      	strb	r5, [r3, #2]
 80191f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80191f4:	2b00      	cmp	r3, #0
 80191f6:	f340 815b 	ble.w	80194b0 <arm_nn_mat_mult_nt_t_s4+0x998>
 80191fa:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80191fc:	9a07      	ldr	r2, [sp, #28]
 80191fe:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019200:	f8dd a00c 	ldr.w	sl, [sp, #12]
 8019204:	1c9f      	adds	r7, r3, #2
 8019206:	eb02 0c01 	add.w	ip, r2, r1
 801920a:	9b04      	ldr	r3, [sp, #16]
 801920c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801920e:	441f      	add	r7, r3
 8019210:	4413      	add	r3, r2
 8019212:	9308      	str	r3, [sp, #32]
 8019214:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019216:	9700      	str	r7, [sp, #0]
 8019218:	9a06      	ldr	r2, [sp, #24]
 801921a:	9f00      	ldr	r7, [sp, #0]
 801921c:	5bd1      	ldrh	r1, [r2, r7]
 801921e:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 8019222:	f837 0c02 	ldrh.w	r0, [r7, #-2]
 8019226:	992f      	ldr	r1, [sp, #188]	; 0xbc
 8019228:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 801922c:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801922e:	9f05      	ldr	r7, [sp, #20]
 8019230:	0208      	lsls	r0, r1, #8
 8019232:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
 8019236:	b2c9      	uxtb	r1, r1
 8019238:	4308      	orrs	r0, r1
 801923a:	0221      	lsls	r1, r4, #8
 801923c:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 8019240:	b2e4      	uxtb	r4, r4
 8019242:	f857 800c 	ldr.w	r8, [r7, ip]
 8019246:	fa23 fb88 	sxtab16	fp, r3, r8
 801924a:	4467      	add	r7, ip
 801924c:	4321      	orrs	r1, r4
 801924e:	0105      	lsls	r5, r0, #4
 8019250:	010c      	lsls	r4, r1, #4
 8019252:	9701      	str	r7, [sp, #4]
 8019254:	4617      	mov	r7, r2
 8019256:	9a00      	ldr	r2, [sp, #0]
 8019258:	fa2f f585 	sxtb16	r5, r5
 801925c:	fa2f f080 	sxtb16	r0, r0
 8019260:	fa2f f484 	sxtb16	r4, r4
 8019264:	fa2f f181 	sxtb16	r1, r1
 8019268:	ea4f 1535 	mov.w	r5, r5, ror #4
 801926c:	ea4f 1030 	mov.w	r0, r0, ror #4
 8019270:	ea4f 1434 	mov.w	r4, r4, ror #4
 8019274:	ea4f 1131 	mov.w	r1, r1, ror #4
 8019278:	eb07 0902 	add.w	r9, r7, r2
 801927c:	fa2f f585 	sxtb16	r5, r5
 8019280:	fa2f f080 	sxtb16	r0, r0
 8019284:	fa2f f484 	sxtb16	r4, r4
 8019288:	fa2f f181 	sxtb16	r1, r1
 801928c:	fa23 f898 	sxtab16	r8, r3, r8, ror #8
 8019290:	9a02      	ldr	r2, [sp, #8]
 8019292:	fb25 220b 	smlad	r2, r5, fp, r2
 8019296:	fb20 2208 	smlad	r2, r0, r8, r2
 801929a:	fb24 ab0b 	smlad	fp, r4, fp, sl
 801929e:	fb21 b808 	smlad	r8, r1, r8, fp
 80192a2:	f85c ac04 	ldr.w	sl, [ip, #-4]
 80192a6:	fa23 fb8a 	sxtab16	fp, r3, sl
 80192aa:	fa23 fa9a 	sxtab16	sl, r3, sl, ror #8
 80192ae:	fb25 660b 	smlad	r6, r5, fp, r6
 80192b2:	fb24 ee0b 	smlad	lr, r4, fp, lr
 80192b6:	fb20 660a 	smlad	r6, r0, sl, r6
 80192ba:	fb21 ee0a 	smlad	lr, r1, sl, lr
 80192be:	f8b9 1002 	ldrh.w	r1, [r9, #2]
 80192c2:	9f00      	ldr	r7, [sp, #0]
 80192c4:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 80192c8:	8838      	ldrh	r0, [r7, #0]
 80192ca:	992f      	ldr	r1, [sp, #188]	; 0xbc
 80192cc:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 80192d0:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 80192d2:	9f01      	ldr	r7, [sp, #4]
 80192d4:	0208      	lsls	r0, r1, #8
 80192d6:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
 80192da:	b2c9      	uxtb	r1, r1
 80192dc:	4308      	orrs	r0, r1
 80192de:	0221      	lsls	r1, r4, #8
 80192e0:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 80192e4:	b2e4      	uxtb	r4, r4
 80192e6:	4321      	orrs	r1, r4
 80192e8:	010d      	lsls	r5, r1, #4
 80192ea:	0104      	lsls	r4, r0, #4
 80192ec:	fa2f f484 	sxtb16	r4, r4
 80192f0:	fa2f f080 	sxtb16	r0, r0
 80192f4:	fa2f f585 	sxtb16	r5, r5
 80192f8:	fa2f f181 	sxtb16	r1, r1
 80192fc:	f8d7 b004 	ldr.w	fp, [r7, #4]
 8019300:	fa23 fa8b 	sxtab16	sl, r3, fp
 8019304:	ea4f 1434 	mov.w	r4, r4, ror #4
 8019308:	ea4f 1030 	mov.w	r0, r0, ror #4
 801930c:	ea4f 1535 	mov.w	r5, r5, ror #4
 8019310:	ea4f 1131 	mov.w	r1, r1, ror #4
 8019314:	fa2f f484 	sxtb16	r4, r4
 8019318:	fa2f f080 	sxtb16	r0, r0
 801931c:	fa2f f585 	sxtb16	r5, r5
 8019320:	fa2f f181 	sxtb16	r1, r1
 8019324:	fa23 fb9b 	sxtab16	fp, r3, fp, ror #8
 8019328:	fb24 220a 	smlad	r2, r4, sl, r2
 801932c:	fb20 220b 	smlad	r2, r0, fp, r2
 8019330:	fb25 880a 	smlad	r8, r5, sl, r8
 8019334:	fb21 8b0b 	smlad	fp, r1, fp, r8
 8019338:	f8dc 8000 	ldr.w	r8, [ip]
 801933c:	fa23 fa88 	sxtab16	sl, r3, r8
 8019340:	fa23 f898 	sxtab16	r8, r3, r8, ror #8
 8019344:	fb24 640a 	smlad	r4, r4, sl, r6
 8019348:	fb25 ee0a 	smlad	lr, r5, sl, lr
 801934c:	fb20 4408 	smlad	r4, r0, r8, r4
 8019350:	fb21 e108 	smlad	r1, r1, r8, lr
 8019354:	f8b9 0004 	ldrh.w	r0, [r9, #4]
 8019358:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 801935c:	9800      	ldr	r0, [sp, #0]
 801935e:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 8019360:	8840      	ldrh	r0, [r0, #2]
 8019362:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 8019366:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8019368:	68be      	ldr	r6, [r7, #8]
 801936a:	ea4f 2e05 	mov.w	lr, r5, lsl #8
 801936e:	f40e 0e7f 	and.w	lr, lr, #16711680	; 0xff0000
 8019372:	b2ed      	uxtb	r5, r5
 8019374:	ea4e 0e05 	orr.w	lr, lr, r5
 8019378:	0205      	lsls	r5, r0, #8
 801937a:	f405 057f 	and.w	r5, r5, #16711680	; 0xff0000
 801937e:	b2c0      	uxtb	r0, r0
 8019380:	4305      	orrs	r5, r0
 8019382:	ea4f 1a0e 	mov.w	sl, lr, lsl #4
 8019386:	ea4f 1805 	mov.w	r8, r5, lsl #4
 801938a:	fa2f fa8a 	sxtb16	sl, sl
 801938e:	fa2f fe8e 	sxtb16	lr, lr
 8019392:	fa2f f888 	sxtb16	r8, r8
 8019396:	fa2f f585 	sxtb16	r5, r5
 801939a:	ea4f 1a3a 	mov.w	sl, sl, ror #4
 801939e:	ea4f 1e3e 	mov.w	lr, lr, ror #4
 80193a2:	ea4f 1838 	mov.w	r8, r8, ror #4
 80193a6:	ea4f 1535 	mov.w	r5, r5, ror #4
 80193aa:	fa2f fa8a 	sxtb16	sl, sl
 80193ae:	fa2f fe8e 	sxtb16	lr, lr
 80193b2:	fa2f f888 	sxtb16	r8, r8
 80193b6:	fa2f f585 	sxtb16	r5, r5
 80193ba:	fa23 f086 	sxtab16	r0, r3, r6
 80193be:	fa23 f696 	sxtab16	r6, r3, r6, ror #8
 80193c2:	fb2a 2200 	smlad	r2, sl, r0, r2
 80193c6:	fb2e 2206 	smlad	r2, lr, r6, r2
 80193ca:	fb28 bb00 	smlad	fp, r8, r0, fp
 80193ce:	fb25 bb06 	smlad	fp, r5, r6, fp
 80193d2:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80193d6:	fa23 f086 	sxtab16	r0, r3, r6
 80193da:	fa23 f696 	sxtab16	r6, r3, r6, ror #8
 80193de:	fb2a 4400 	smlad	r4, sl, r0, r4
 80193e2:	fb28 1100 	smlad	r1, r8, r0, r1
 80193e6:	fb2e 4406 	smlad	r4, lr, r6, r4
 80193ea:	fb25 1006 	smlad	r0, r5, r6, r1
 80193ee:	f8d7 a00c 	ldr.w	sl, [r7, #12]
 80193f2:	9f00      	ldr	r7, [sp, #0]
 80193f4:	f8b9 1006 	ldrh.w	r1, [r9, #6]
 80193f8:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 80193fc:	88b9      	ldrh	r1, [r7, #4]
 80193fe:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8019400:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 8019404:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 8019406:	0231      	lsls	r1, r6, #8
 8019408:	ea4f 2905 	mov.w	r9, r5, lsl #8
 801940c:	b2f6      	uxtb	r6, r6
 801940e:	b2ed      	uxtb	r5, r5
 8019410:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 8019414:	f409 097f 	and.w	r9, r9, #16711680	; 0xff0000
 8019418:	4331      	orrs	r1, r6
 801941a:	ea49 0905 	orr.w	r9, r9, r5
 801941e:	ea4f 1801 	mov.w	r8, r1, lsl #4
 8019422:	ea4f 1509 	mov.w	r5, r9, lsl #4
 8019426:	fa2f f888 	sxtb16	r8, r8
 801942a:	fa2f f181 	sxtb16	r1, r1
 801942e:	fa2f f585 	sxtb16	r5, r5
 8019432:	fa2f f989 	sxtb16	r9, r9
 8019436:	ea4f 1838 	mov.w	r8, r8, ror #4
 801943a:	ea4f 1131 	mov.w	r1, r1, ror #4
 801943e:	ea4f 1535 	mov.w	r5, r5, ror #4
 8019442:	ea4f 1939 	mov.w	r9, r9, ror #4
 8019446:	fa2f f888 	sxtb16	r8, r8
 801944a:	fa2f f181 	sxtb16	r1, r1
 801944e:	fa2f f585 	sxtb16	r5, r5
 8019452:	fa2f f989 	sxtb16	r9, r9
 8019456:	fa23 f68a 	sxtab16	r6, r3, sl
 801945a:	fa23 fa9a 	sxtab16	sl, r3, sl, ror #8
 801945e:	fb28 2206 	smlad	r2, r8, r6, r2
 8019462:	fb21 220a 	smlad	r2, r1, sl, r2
 8019466:	9202      	str	r2, [sp, #8]
 8019468:	fb25 b606 	smlad	r6, r5, r6, fp
 801946c:	fb29 6a0a 	smlad	sl, r9, sl, r6
 8019470:	f8dc e008 	ldr.w	lr, [ip, #8]
 8019474:	fa23 fb8e 	sxtab16	fp, r3, lr
 8019478:	fa23 fe9e 	sxtab16	lr, r3, lr, ror #8
 801947c:	fb28 440b 	smlad	r4, r8, fp, r4
 8019480:	fb25 050b 	smlad	r5, r5, fp, r0
 8019484:	fb21 460e 	smlad	r6, r1, lr, r4
 8019488:	fb29 5e0e 	smlad	lr, r9, lr, r5
 801948c:	9908      	ldr	r1, [sp, #32]
 801948e:	3708      	adds	r7, #8
 8019490:	42b9      	cmp	r1, r7
 8019492:	9700      	str	r7, [sp, #0]
 8019494:	f10c 0c10 	add.w	ip, ip, #16
 8019498:	f47f aebe 	bne.w	8019218 <arm_nn_mat_mult_nt_t_s4+0x700>
 801949c:	9b04      	ldr	r3, [sp, #16]
 801949e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80194a0:	f8cd a00c 	str.w	sl, [sp, #12]
 80194a4:	4413      	add	r3, r2
 80194a6:	9304      	str	r3, [sp, #16]
 80194a8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80194aa:	9b07      	ldr	r3, [sp, #28]
 80194ac:	4413      	add	r3, r2
 80194ae:	9307      	str	r3, [sp, #28]
 80194b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80194b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80194b4:	4293      	cmp	r3, r2
 80194b6:	f280 84b6 	bge.w	8019e26 <arm_nn_mat_mult_nt_t_s4+0x130e>
 80194ba:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 80194bc:	9d04      	ldr	r5, [sp, #16]
 80194be:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80194c2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 80194c4:	f1a2 0904 	sub.w	r9, r2, #4
 80194c8:	eba9 0903 	sub.w	r9, r9, r3
 80194cc:	ea4f 0999 	mov.w	r9, r9, lsr #2
 80194d0:	e9dd cb02 	ldrd	ip, fp, [sp, #8]
 80194d4:	f109 0901 	add.w	r9, r9, #1
 80194d8:	eb05 0a49 	add.w	sl, r5, r9, lsl #1
 80194dc:	f8cd 9000 	str.w	r9, [sp]
 80194e0:	882b      	ldrh	r3, [r5, #0]
 80194e2:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 80194e6:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80194e8:	f858 4b04 	ldr.w	r4, [r8], #4
 80194ec:	5aea      	ldrh	r2, [r5, r3]
 80194ee:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80194f0:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 80194f4:	992f      	ldr	r1, [sp, #188]	; 0xbc
 80194f6:	fa27 f984 	sxtab16	r9, r7, r4
 80194fa:	021a      	lsls	r2, r3, #8
 80194fc:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8019500:	b2db      	uxtb	r3, r3
 8019502:	431a      	orrs	r2, r3
 8019504:	020b      	lsls	r3, r1, #8
 8019506:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801950a:	b2c9      	uxtb	r1, r1
 801950c:	430b      	orrs	r3, r1
 801950e:	0110      	lsls	r0, r2, #4
 8019510:	0119      	lsls	r1, r3, #4
 8019512:	fa2f f080 	sxtb16	r0, r0
 8019516:	fa2f f282 	sxtb16	r2, r2
 801951a:	fa2f f181 	sxtb16	r1, r1
 801951e:	fa2f f383 	sxtb16	r3, r3
 8019522:	3502      	adds	r5, #2
 8019524:	ea4f 1030 	mov.w	r0, r0, ror #4
 8019528:	ea4f 1232 	mov.w	r2, r2, ror #4
 801952c:	ea4f 1131 	mov.w	r1, r1, ror #4
 8019530:	ea4f 1333 	mov.w	r3, r3, ror #4
 8019534:	fa2f f080 	sxtb16	r0, r0
 8019538:	fa2f f282 	sxtb16	r2, r2
 801953c:	fa2f f181 	sxtb16	r1, r1
 8019540:	fa2f f383 	sxtb16	r3, r3
 8019544:	fa27 f494 	sxtab16	r4, r7, r4, ror #8
 8019548:	fb20 cc09 	smlad	ip, r0, r9, ip
 801954c:	fb22 cc04 	smlad	ip, r2, r4, ip
 8019550:	fb21 bb09 	smlad	fp, r1, r9, fp
 8019554:	fb23 bb04 	smlad	fp, r3, r4, fp
 8019558:	9c43      	ldr	r4, [sp, #268]	; 0x10c
 801955a:	4444      	add	r4, r8
 801955c:	f854 4c04 	ldr.w	r4, [r4, #-4]
 8019560:	fa27 f984 	sxtab16	r9, r7, r4
 8019564:	fa27 f494 	sxtab16	r4, r7, r4, ror #8
 8019568:	fb20 6609 	smlad	r6, r0, r9, r6
 801956c:	fb21 ee09 	smlad	lr, r1, r9, lr
 8019570:	fb22 6604 	smlad	r6, r2, r4, r6
 8019574:	fb23 ee04 	smlad	lr, r3, r4, lr
 8019578:	4555      	cmp	r5, sl
 801957a:	d1b1      	bne.n	80194e0 <arm_nn_mat_mult_nt_t_s4+0x9c8>
 801957c:	9b07      	ldr	r3, [sp, #28]
 801957e:	f8dd 9000 	ldr.w	r9, [sp]
 8019582:	e9cd cb02 	strd	ip, fp, [sp, #8]
 8019586:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 801958a:	9307      	str	r3, [sp, #28]
 801958c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801958e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019590:	4293      	cmp	r3, r2
 8019592:	da52      	bge.n	801963a <arm_nn_mat_mult_nt_t_s4+0xb22>
 8019594:	993e      	ldr	r1, [sp, #248]	; 0xf8
 8019596:	1e8f      	subs	r7, r1, #2
 8019598:	1aff      	subs	r7, r7, r3
 801959a:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 801959c:	f103 0801 	add.w	r8, r3, #1
 80195a0:	9b07      	ldr	r3, [sp, #28]
 80195a2:	f10a 39ff 	add.w	r9, sl, #4294967295
 80195a6:	eb0a 0402 	add.w	r4, sl, r2
 80195aa:	4498      	add	r8, r3
 80195ac:	f103 0c02 	add.w	ip, r3, #2
 80195b0:	eb0a 0357 	add.w	r3, sl, r7, lsr #1
 80195b4:	e9cd 9400 	strd	r9, r4, [sp]
 80195b8:	9304      	str	r3, [sp, #16]
 80195ba:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80195be:	f8dd a0fc 	ldr.w	sl, [sp, #252]	; 0xfc
 80195c2:	087b      	lsrs	r3, r7, #1
 80195c4:	9308      	str	r3, [sp, #32]
 80195c6:	9a00      	ldr	r2, [sp, #0]
 80195c8:	9b01      	ldr	r3, [sp, #4]
 80195ca:	f912 1f01 	ldrsb.w	r1, [r2, #1]!
 80195ce:	9200      	str	r2, [sp, #0]
 80195d0:	f913 2f01 	ldrsb.w	r2, [r3, #1]!
 80195d4:	f918 5c01 	ldrsb.w	r5, [r8, #-1]
 80195d8:	9301      	str	r3, [sp, #4]
 80195da:	f91c 3c02 	ldrsb.w	r3, [ip, #-2]
 80195de:	f91c 4c01 	ldrsb.w	r4, [ip, #-1]
 80195e2:	f918 0b02 	ldrsb.w	r0, [r8], #2
 80195e6:	9f03      	ldr	r7, [sp, #12]
 80195e8:	f341 0b03 	sbfx	fp, r1, #0, #4
 80195ec:	4453      	add	r3, sl
 80195ee:	4455      	add	r5, sl
 80195f0:	1109      	asrs	r1, r1, #4
 80195f2:	fb03 990b 	mla	r9, r3, fp, r9
 80195f6:	4454      	add	r4, sl
 80195f8:	4450      	add	r0, sl
 80195fa:	fb05 660b 	mla	r6, r5, fp, r6
 80195fe:	fb04 9901 	mla	r9, r4, r1, r9
 8019602:	fb00 6601 	mla	r6, r0, r1, r6
 8019606:	f342 0103 	sbfx	r1, r2, #0, #4
 801960a:	fb03 7b01 	mla	fp, r3, r1, r7
 801960e:	1112      	asrs	r2, r2, #4
 8019610:	fb04 b302 	mla	r3, r4, r2, fp
 8019614:	fb05 ee01 	mla	lr, r5, r1, lr
 8019618:	9303      	str	r3, [sp, #12]
 801961a:	fb00 ee02 	mla	lr, r0, r2, lr
 801961e:	9b04      	ldr	r3, [sp, #16]
 8019620:	9a00      	ldr	r2, [sp, #0]
 8019622:	4293      	cmp	r3, r2
 8019624:	f10c 0c02 	add.w	ip, ip, #2
 8019628:	d1cd      	bne.n	80195c6 <arm_nn_mat_mult_nt_t_s4+0xaae>
 801962a:	9b08      	ldr	r3, [sp, #32]
 801962c:	9a07      	ldr	r2, [sp, #28]
 801962e:	f8cd 9008 	str.w	r9, [sp, #8]
 8019632:	3301      	adds	r3, #1
 8019634:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019638:	9307      	str	r3, [sp, #28]
 801963a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801963c:	9c02      	ldr	r4, [sp, #8]
 801963e:	6859      	ldr	r1, [r3, #4]
 8019640:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019642:	685a      	ldr	r2, [r3, #4]
 8019644:	ea21 73e1 	bic.w	r3, r1, r1, asr #31
 8019648:	409c      	lsls	r4, r3
 801964a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 801964e:	2500      	movs	r5, #0
 8019650:	fbc4 0502 	smlal	r0, r5, r4, r2
 8019654:	0fc0      	lsrs	r0, r0, #31
 8019656:	2900      	cmp	r1, #0
 8019658:	ea40 0045 	orr.w	r0, r0, r5, lsl #1
 801965c:	f340 836c 	ble.w	8019d38 <arm_nn_mat_mult_nt_t_s4+0x1220>
 8019660:	fa06 f303 	lsl.w	r3, r6, r3
 8019664:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 8019668:	2400      	movs	r4, #0
 801966a:	fbc2 1403 	smlal	r1, r4, r2, r3
 801966e:	0fc9      	lsrs	r1, r1, #31
 8019670:	f04f 0a00 	mov.w	sl, #0
 8019674:	ea41 0144 	orr.w	r1, r1, r4, lsl #1
 8019678:	46d1      	mov	r9, sl
 801967a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801967c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801967e:	68db      	ldr	r3, [r3, #12]
 8019680:	68d6      	ldr	r6, [r2, #12]
 8019682:	9a03      	ldr	r2, [sp, #12]
 8019684:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019688:	fa02 fb04 	lsl.w	fp, r2, r4
 801968c:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8019690:	2700      	movs	r7, #0
 8019692:	fbcb 5706 	smlal	r5, r7, fp, r6
 8019696:	0fea      	lsrs	r2, r5, #31
 8019698:	2b00      	cmp	r3, #0
 801969a:	ea42 0247 	orr.w	r2, r2, r7, lsl #1
 801969e:	f340 832c 	ble.w	8019cfa <arm_nn_mat_mult_nt_t_s4+0x11e2>
 80196a2:	fa0e f404 	lsl.w	r4, lr, r4
 80196a6:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 80196aa:	2300      	movs	r3, #0
 80196ac:	fbc6 5304 	smlal	r5, r3, r6, r4
 80196b0:	ea4f 7ed5 	mov.w	lr, r5, lsr #31
 80196b4:	2500      	movs	r5, #0
 80196b6:	ea4e 0e43 	orr.w	lr, lr, r3, lsl #1
 80196ba:	462f      	mov	r7, r5
 80196bc:	2900      	cmp	r1, #0
 80196be:	bfb8      	it	lt
 80196c0:	f109 0901 	addlt.w	r9, r9, #1
 80196c4:	45d1      	cmp	r9, sl
 80196c6:	bfb8      	it	lt
 80196c8:	3101      	addlt	r1, #1
 80196ca:	f1be 0f00 	cmp.w	lr, #0
 80196ce:	bfb8      	it	lt
 80196d0:	3701      	addlt	r7, #1
 80196d2:	9b40      	ldr	r3, [sp, #256]	; 0x100
 80196d4:	42af      	cmp	r7, r5
 80196d6:	bfb8      	it	lt
 80196d8:	f10e 0e01 	addlt.w	lr, lr, #1
 80196dc:	4418      	add	r0, r3
 80196de:	441a      	add	r2, r3
 80196e0:	4419      	add	r1, r3
 80196e2:	449e      	add	lr, r3
 80196e4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80196e6:	4298      	cmp	r0, r3
 80196e8:	bfb8      	it	lt
 80196ea:	4618      	movlt	r0, r3
 80196ec:	429a      	cmp	r2, r3
 80196ee:	bfb8      	it	lt
 80196f0:	461a      	movlt	r2, r3
 80196f2:	4299      	cmp	r1, r3
 80196f4:	bfb8      	it	lt
 80196f6:	4619      	movlt	r1, r3
 80196f8:	459e      	cmp	lr, r3
 80196fa:	bfb8      	it	lt
 80196fc:	469e      	movlt	lr, r3
 80196fe:	9b42      	ldr	r3, [sp, #264]	; 0x108
 8019700:	4298      	cmp	r0, r3
 8019702:	bfa8      	it	ge
 8019704:	4618      	movge	r0, r3
 8019706:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019708:	7058      	strb	r0, [r3, #1]
 801970a:	9842      	ldr	r0, [sp, #264]	; 0x108
 801970c:	4282      	cmp	r2, r0
 801970e:	bfa8      	it	ge
 8019710:	4602      	movge	r2, r0
 8019712:	70da      	strb	r2, [r3, #3]
 8019714:	4281      	cmp	r1, r0
 8019716:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019718:	bfa8      	it	ge
 801971a:	4601      	movge	r1, r0
 801971c:	7051      	strb	r1, [r2, #1]
 801971e:	991d      	ldr	r1, [sp, #116]	; 0x74
 8019720:	4586      	cmp	lr, r0
 8019722:	440b      	add	r3, r1
 8019724:	bfa8      	it	ge
 8019726:	4686      	movge	lr, r0
 8019728:	930e      	str	r3, [sp, #56]	; 0x38
 801972a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801972c:	9b07      	ldr	r3, [sp, #28]
 801972e:	f882 e003 	strb.w	lr, [r2, #3]
 8019732:	4403      	add	r3, r0
 8019734:	9307      	str	r3, [sp, #28]
 8019736:	1853      	adds	r3, r2, r1
 8019738:	930f      	str	r3, [sp, #60]	; 0x3c
 801973a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801973c:	3b01      	subs	r3, #1
 801973e:	9311      	str	r3, [sp, #68]	; 0x44
 8019740:	f47f aa6a 	bne.w	8018c18 <arm_nn_mat_mult_nt_t_s4+0x100>
 8019744:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8019746:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019748:	f8dd e034 	ldr.w	lr, [sp, #52]	; 0x34
 801974c:	4413      	add	r3, r2
 801974e:	9302      	str	r3, [sp, #8]
 8019750:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019752:	2b00      	cmp	r3, #0
 8019754:	f040 837e 	bne.w	8019e54 <arm_nn_mat_mult_nt_t_s4+0x133c>
 8019758:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801975a:	9927      	ldr	r1, [sp, #156]	; 0x9c
 801975c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801975e:	3210      	adds	r2, #16
 8019760:	920b      	str	r2, [sp, #44]	; 0x2c
 8019762:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019764:	3210      	adds	r2, #16
 8019766:	920a      	str	r2, [sp, #40]	; 0x28
 8019768:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801976a:	440a      	add	r2, r1
 801976c:	9219      	str	r2, [sp, #100]	; 0x64
 801976e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8019770:	3210      	adds	r2, #16
 8019772:	921f      	str	r2, [sp, #124]	; 0x7c
 8019774:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8019776:	3304      	adds	r3, #4
 8019778:	4293      	cmp	r3, r2
 801977a:	9323      	str	r3, [sp, #140]	; 0x8c
 801977c:	f47f aa2d 	bne.w	8018bda <arm_nn_mat_mult_nt_t_s4+0xc2>
 8019780:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019782:	460a      	mov	r2, r1
 8019784:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8019786:	fb01 3302 	mla	r3, r1, r2, r3
 801978a:	9321      	str	r3, [sp, #132]	; 0x84
 801978c:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 801978e:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
 8019790:	425b      	negs	r3, r3
 8019792:	f003 0303 	and.w	r3, r3, #3
 8019796:	f002 0103 	and.w	r1, r2, #3
 801979a:	bf58      	it	pl
 801979c:	4259      	negpl	r1, r3
 801979e:	2900      	cmp	r1, #0
 80197a0:	911b      	str	r1, [sp, #108]	; 0x6c
 80197a2:	f340 8240 	ble.w	8019c26 <arm_nn_mat_mult_nt_t_s4+0x110e>
 80197a6:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80197a8:	3b10      	subs	r3, #16
 80197aa:	091b      	lsrs	r3, r3, #4
 80197ac:	1c5a      	adds	r2, r3, #1
 80197ae:	9b3c      	ldr	r3, [sp, #240]	; 0xf0
 80197b0:	1058      	asrs	r0, r3, #1
 80197b2:	f003 0301 	and.w	r3, r3, #1
 80197b6:	931c      	str	r3, [sp, #112]	; 0x70
 80197b8:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 80197ba:	901d      	str	r0, [sp, #116]	; 0x74
 80197bc:	1a5b      	subs	r3, r3, r1
 80197be:	993a      	ldr	r1, [sp, #232]	; 0xe8
 80197c0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80197c4:	910a      	str	r1, [sp, #40]	; 0x28
 80197c6:	993b      	ldr	r1, [sp, #236]	; 0xec
 80197c8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80197cc:	009b      	lsls	r3, r3, #2
 80197ce:	9311      	str	r3, [sp, #68]	; 0x44
 80197d0:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 80197d2:	9109      	str	r1, [sp, #36]	; 0x24
 80197d4:	fb03 f300 	mul.w	r3, r3, r0
 80197d8:	9825      	ldr	r0, [sp, #148]	; 0x94
 80197da:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80197de:	931f      	str	r3, [sp, #124]	; 0x7c
 80197e0:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 80197e2:	9843      	ldr	r0, [sp, #268]	; 0x10c
 80197e4:	f06f 0b03 	mvn.w	fp, #3
 80197e8:	ebab 0b03 	sub.w	fp, fp, r3
 80197ec:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80197ee:	f003 0301 	and.w	r3, r3, #1
 80197f2:	9303      	str	r3, [sp, #12]
 80197f4:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80197f6:	3b0f      	subs	r3, #15
 80197f8:	930d      	str	r3, [sp, #52]	; 0x34
 80197fa:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 80197fc:	ebc3 0340 	rsb	r3, r3, r0, lsl #1
 8019800:	930f      	str	r3, [sp, #60]	; 0x3c
 8019802:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8019804:	105b      	asrs	r3, r3, #1
 8019806:	9320      	str	r3, [sp, #128]	; 0x80
 8019808:	00d3      	lsls	r3, r2, #3
 801980a:	931e      	str	r3, [sp, #120]	; 0x78
 801980c:	0113      	lsls	r3, r2, #4
 801980e:	9315      	str	r3, [sp, #84]	; 0x54
 8019810:	9b3d      	ldr	r3, [sp, #244]	; 0xf4
 8019812:	005b      	lsls	r3, r3, #1
 8019814:	9310      	str	r3, [sp, #64]	; 0x40
 8019816:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8019818:	3b01      	subs	r3, #1
 801981a:	930e      	str	r3, [sp, #56]	; 0x38
 801981c:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801981e:	2100      	movs	r1, #0
 8019820:	3b02      	subs	r3, #2
 8019822:	910b      	str	r1, [sp, #44]	; 0x2c
 8019824:	911a      	str	r1, [sp, #104]	; 0x68
 8019826:	46da      	mov	sl, fp
 8019828:	9316      	str	r3, [sp, #88]	; 0x58
 801982a:	1e83      	subs	r3, r0, #2
 801982c:	f8dd b0fc 	ldr.w	fp, [sp, #252]	; 0xfc
 8019830:	9318      	str	r3, [sp, #96]	; 0x60
 8019832:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8019834:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019836:	441a      	add	r2, r3
 8019838:	9202      	str	r2, [sp, #8]
 801983a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801983c:	2a00      	cmp	r2, #0
 801983e:	f001 8088 	beq.w	801a952 <arm_nn_mat_mult_nt_t_s4+0x1e3a>
 8019842:	f003 0301 	and.w	r3, r3, #1
 8019846:	9319      	str	r3, [sp, #100]	; 0x64
 8019848:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801984a:	991e      	ldr	r1, [sp, #120]	; 0x78
 801984c:	9204      	str	r2, [sp, #16]
 801984e:	3b03      	subs	r3, #3
 8019850:	930c      	str	r3, [sp, #48]	; 0x30
 8019852:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019854:	440b      	add	r3, r1
 8019856:	9305      	str	r3, [sp, #20]
 8019858:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801985a:	9300      	str	r3, [sp, #0]
 801985c:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 801985e:	3304      	adds	r3, #4
 8019860:	9312      	str	r3, [sp, #72]	; 0x48
 8019862:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 8019864:	3b04      	subs	r3, #4
 8019866:	9313      	str	r3, [sp, #76]	; 0x4c
 8019868:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 801986a:	3b01      	subs	r3, #1
 801986c:	9314      	str	r3, [sp, #80]	; 0x50
 801986e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019870:	2b00      	cmp	r3, #0
 8019872:	f000 82d6 	beq.w	8019e22 <arm_nn_mat_mult_nt_t_s4+0x130a>
 8019876:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019878:	5899      	ldr	r1, [r3, r2]
 801987a:	9b03      	ldr	r3, [sp, #12]
 801987c:	b11b      	cbz	r3, 8019886 <arm_nn_mat_mult_nt_t_s4+0xd6e>
 801987e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019880:	2b01      	cmp	r3, #1
 8019882:	f000 81d4 	beq.w	8019c2e <arm_nn_mat_mult_nt_t_s4+0x1116>
 8019886:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019888:	2a00      	cmp	r2, #0
 801988a:	460b      	mov	r3, r1
 801988c:	f340 81e1 	ble.w	8019c52 <arm_nn_mat_mult_nt_t_s4+0x113a>
 8019890:	9a00      	ldr	r2, [sp, #0]
 8019892:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019894:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8019896:	9e05      	ldr	r6, [sp, #20]
 8019898:	1810      	adds	r0, r2, r0
 801989a:	8822      	ldrh	r2, [r4, #0]
 801989c:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 80198a0:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 80198a2:	f85a 8000 	ldr.w	r8, [sl, r0]
 80198a6:	022a      	lsls	r2, r5, #8
 80198a8:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 80198ac:	b2ed      	uxtb	r5, r5
 80198ae:	432a      	orrs	r2, r5
 80198b0:	0117      	lsls	r7, r2, #4
 80198b2:	fa2f f787 	sxtb16	r7, r7
 80198b6:	fa2f f582 	sxtb16	r5, r2
 80198ba:	ea4f 1535 	mov.w	r5, r5, ror #4
 80198be:	ea4f 1237 	mov.w	r2, r7, ror #4
 80198c2:	eb0a 0c00 	add.w	ip, sl, r0
 80198c6:	fa2f f282 	sxtb16	r2, r2
 80198ca:	fa2f f585 	sxtb16	r5, r5
 80198ce:	fa2e f788 	sxtab16	r7, lr, r8
 80198d2:	fa2e f898 	sxtab16	r8, lr, r8, ror #8
 80198d6:	fb22 1107 	smlad	r1, r2, r7, r1
 80198da:	fb25 1808 	smlad	r8, r5, r8, r1
 80198de:	f850 1c04 	ldr.w	r1, [r0, #-4]
 80198e2:	fa2e f781 	sxtab16	r7, lr, r1
 80198e6:	fa2e f191 	sxtab16	r1, lr, r1, ror #8
 80198ea:	fb22 3207 	smlad	r2, r2, r7, r3
 80198ee:	fb25 2501 	smlad	r5, r5, r1, r2
 80198f2:	8863      	ldrh	r3, [r4, #2]
 80198f4:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 80198f8:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80198fa:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80198fe:	fa2e f781 	sxtab16	r7, lr, r1
 8019902:	0213      	lsls	r3, r2, #8
 8019904:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8019908:	b2d2      	uxtb	r2, r2
 801990a:	4313      	orrs	r3, r2
 801990c:	011a      	lsls	r2, r3, #4
 801990e:	fa2f f282 	sxtb16	r2, r2
 8019912:	fa2f f383 	sxtb16	r3, r3
 8019916:	ea4f 1232 	mov.w	r2, r2, ror #4
 801991a:	ea4f 1333 	mov.w	r3, r3, ror #4
 801991e:	fa2f f282 	sxtb16	r2, r2
 8019922:	fa2f f383 	sxtb16	r3, r3
 8019926:	fa2e f191 	sxtab16	r1, lr, r1, ror #8
 801992a:	fb22 8807 	smlad	r8, r2, r7, r8
 801992e:	fb23 8101 	smlad	r1, r3, r1, r8
 8019932:	6807      	ldr	r7, [r0, #0]
 8019934:	fa2e f887 	sxtab16	r8, lr, r7
 8019938:	fa2e f797 	sxtab16	r7, lr, r7, ror #8
 801993c:	fb22 5508 	smlad	r5, r2, r8, r5
 8019940:	fb23 5507 	smlad	r5, r3, r7, r5
 8019944:	88a3      	ldrh	r3, [r4, #4]
 8019946:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801994a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801994c:	f8dc 7008 	ldr.w	r7, [ip, #8]
 8019950:	fa2e f887 	sxtab16	r8, lr, r7
 8019954:	0213      	lsls	r3, r2, #8
 8019956:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801995a:	b2d2      	uxtb	r2, r2
 801995c:	4313      	orrs	r3, r2
 801995e:	011a      	lsls	r2, r3, #4
 8019960:	fa2f f282 	sxtb16	r2, r2
 8019964:	fa2f f383 	sxtb16	r3, r3
 8019968:	ea4f 1232 	mov.w	r2, r2, ror #4
 801996c:	ea4f 1333 	mov.w	r3, r3, ror #4
 8019970:	fa2f f282 	sxtb16	r2, r2
 8019974:	fa2f f383 	sxtb16	r3, r3
 8019978:	fa2e f797 	sxtab16	r7, lr, r7, ror #8
 801997c:	fb22 1108 	smlad	r1, r2, r8, r1
 8019980:	fb23 1707 	smlad	r7, r3, r7, r1
 8019984:	6841      	ldr	r1, [r0, #4]
 8019986:	fa2e f881 	sxtab16	r8, lr, r1
 801998a:	fa2e f191 	sxtab16	r1, lr, r1, ror #8
 801998e:	fb22 5508 	smlad	r5, r2, r8, r5
 8019992:	fb23 5301 	smlad	r3, r3, r1, r5
 8019996:	88e2      	ldrh	r2, [r4, #6]
 8019998:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 801999c:	f8dc 100c 	ldr.w	r1, [ip, #12]
 80199a0:	f8dd c0bc 	ldr.w	ip, [sp, #188]	; 0xbc
 80199a4:	fa2e f581 	sxtab16	r5, lr, r1
 80199a8:	ea4f 220c 	mov.w	r2, ip, lsl #8
 80199ac:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 80199b0:	fa5f fc8c 	uxtb.w	ip, ip
 80199b4:	ea42 020c 	orr.w	r2, r2, ip
 80199b8:	ea4f 1c02 	mov.w	ip, r2, lsl #4
 80199bc:	fa2f fc8c 	sxtb16	ip, ip
 80199c0:	fa2f f282 	sxtb16	r2, r2
 80199c4:	3408      	adds	r4, #8
 80199c6:	ea4f 1c3c 	mov.w	ip, ip, ror #4
 80199ca:	ea4f 1232 	mov.w	r2, r2, ror #4
 80199ce:	fa2f fc8c 	sxtb16	ip, ip
 80199d2:	fa2f f282 	sxtb16	r2, r2
 80199d6:	fa2e f191 	sxtab16	r1, lr, r1, ror #8
 80199da:	fb2c 7505 	smlad	r5, ip, r5, r7
 80199de:	fb22 5101 	smlad	r1, r2, r1, r5
 80199e2:	6885      	ldr	r5, [r0, #8]
 80199e4:	fa2e f785 	sxtab16	r7, lr, r5
 80199e8:	fa2e f595 	sxtab16	r5, lr, r5, ror #8
 80199ec:	fb2c 3307 	smlad	r3, ip, r7, r3
 80199f0:	fb22 3305 	smlad	r3, r2, r5, r3
 80199f4:	42b4      	cmp	r4, r6
 80199f6:	f100 0010 	add.w	r0, r0, #16
 80199fa:	f47f af4e 	bne.w	801989a <arm_nn_mat_mult_nt_t_s4+0xd82>
 80199fe:	9a00      	ldr	r2, [sp, #0]
 8019a00:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019a02:	9d05      	ldr	r5, [sp, #20]
 8019a04:	4402      	add	r2, r0
 8019a06:	9200      	str	r2, [sp, #0]
 8019a08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019a0a:	4681      	mov	r9, r0
 8019a0c:	4591      	cmp	r9, r2
 8019a0e:	f280 8127 	bge.w	8019c60 <arm_nn_mat_mult_nt_t_s4+0x1148>
 8019a12:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019a14:	9e00      	ldr	r6, [sp, #0]
 8019a16:	eba2 0c09 	sub.w	ip, r2, r9
 8019a1a:	ea4f 0c9c 	mov.w	ip, ip, lsr #2
 8019a1e:	f10c 0801 	add.w	r8, ip, #1
 8019a22:	e9cd 9c06 	strd	r9, ip, [sp, #24]
 8019a26:	eb05 0248 	add.w	r2, r5, r8, lsl #1
 8019a2a:	f8dd 910c 	ldr.w	r9, [sp, #268]	; 0x10c
 8019a2e:	9201      	str	r2, [sp, #4]
 8019a30:	4694      	mov	ip, r2
 8019a32:	f835 2b02 	ldrh.w	r2, [r5], #2
 8019a36:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 8019a3a:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8019a3c:	f856 4b04 	ldr.w	r4, [r6], #4
 8019a40:	0202      	lsls	r2, r0, #8
 8019a42:	f402 077f 	and.w	r7, r2, #16711680	; 0xff0000
 8019a46:	b2c2      	uxtb	r2, r0
 8019a48:	433a      	orrs	r2, r7
 8019a4a:	0110      	lsls	r0, r2, #4
 8019a4c:	fa2f f080 	sxtb16	r0, r0
 8019a50:	fa2f f282 	sxtb16	r2, r2
 8019a54:	ea4f 1030 	mov.w	r0, r0, ror #4
 8019a58:	ea4f 1232 	mov.w	r2, r2, ror #4
 8019a5c:	fa2f f080 	sxtb16	r0, r0
 8019a60:	fa2f f282 	sxtb16	r2, r2
 8019a64:	fa2e f784 	sxtab16	r7, lr, r4
 8019a68:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 8019a6c:	fb20 1107 	smlad	r1, r0, r7, r1
 8019a70:	fb22 1104 	smlad	r1, r2, r4, r1
 8019a74:	eb06 0409 	add.w	r4, r6, r9
 8019a78:	f854 4c04 	ldr.w	r4, [r4, #-4]
 8019a7c:	fa2e f784 	sxtab16	r7, lr, r4
 8019a80:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 8019a84:	fb20 3307 	smlad	r3, r0, r7, r3
 8019a88:	fb22 3304 	smlad	r3, r2, r4, r3
 8019a8c:	4565      	cmp	r5, ip
 8019a8e:	d1d0      	bne.n	8019a32 <arm_nn_mat_mult_nt_t_s4+0xf1a>
 8019a90:	e9dd 9c06 	ldrd	r9, ip, [sp, #24]
 8019a94:	9a00      	ldr	r2, [sp, #0]
 8019a96:	f109 0904 	add.w	r9, r9, #4
 8019a9a:	eb02 0288 	add.w	r2, r2, r8, lsl #2
 8019a9e:	9200      	str	r2, [sp, #0]
 8019aa0:	eb09 098c 	add.w	r9, r9, ip, lsl #2
 8019aa4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019aa6:	4591      	cmp	r9, r2
 8019aa8:	da3c      	bge.n	8019b24 <arm_nn_mat_mult_nt_t_s4+0x100c>
 8019aaa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019aac:	f8cd e01c 	str.w	lr, [sp, #28]
 8019ab0:	eba2 0909 	sub.w	r9, r2, r9
 8019ab4:	9a00      	ldr	r2, [sp, #0]
 8019ab6:	f8cd a020 	str.w	sl, [sp, #32]
 8019aba:	1c94      	adds	r4, r2, #2
 8019abc:	9a01      	ldr	r2, [sp, #4]
 8019abe:	f8dd e050 	ldr.w	lr, [sp, #80]	; 0x50
 8019ac2:	f8dd a060 	ldr.w	sl, [sp, #96]	; 0x60
 8019ac6:	ea4f 0059 	mov.w	r0, r9, lsr #1
 8019aca:	f102 38ff 	add.w	r8, r2, #4294967295
 8019ace:	9006      	str	r0, [sp, #24]
 8019ad0:	eb02 0959 	add.w	r9, r2, r9, lsr #1
 8019ad4:	f918 2f01 	ldrsb.w	r2, [r8, #1]!
 8019ad8:	f914 0c02 	ldrsb.w	r0, [r4, #-2]
 8019adc:	f914 700a 	ldrsb.w	r7, [r4, sl]
 8019ae0:	f914 6c01 	ldrsb.w	r6, [r4, #-1]
 8019ae4:	f914 500e 	ldrsb.w	r5, [r4, lr]
 8019ae8:	f342 0c03 	sbfx	ip, r2, #0, #4
 8019aec:	4458      	add	r0, fp
 8019aee:	445f      	add	r7, fp
 8019af0:	1112      	asrs	r2, r2, #4
 8019af2:	445e      	add	r6, fp
 8019af4:	445d      	add	r5, fp
 8019af6:	fb0c 1100 	mla	r1, ip, r0, r1
 8019afa:	fb0c 3307 	mla	r3, ip, r7, r3
 8019afe:	45c8      	cmp	r8, r9
 8019b00:	f104 0402 	add.w	r4, r4, #2
 8019b04:	fb02 1106 	mla	r1, r2, r6, r1
 8019b08:	fb02 3305 	mla	r3, r2, r5, r3
 8019b0c:	d1e2      	bne.n	8019ad4 <arm_nn_mat_mult_nt_t_s4+0xfbc>
 8019b0e:	9a06      	ldr	r2, [sp, #24]
 8019b10:	9801      	ldr	r0, [sp, #4]
 8019b12:	3201      	adds	r2, #1
 8019b14:	4410      	add	r0, r2
 8019b16:	9001      	str	r0, [sp, #4]
 8019b18:	9800      	ldr	r0, [sp, #0]
 8019b1a:	e9dd ea07 	ldrd	lr, sl, [sp, #28]
 8019b1e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019b22:	9200      	str	r2, [sp, #0]
 8019b24:	9a03      	ldr	r2, [sp, #12]
 8019b26:	b19a      	cbz	r2, 8019b50 <arm_nn_mat_mult_nt_t_s4+0x1038>
 8019b28:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019b2a:	b98a      	cbnz	r2, 8019b50 <arm_nn_mat_mult_nt_t_s4+0x1038>
 8019b2c:	9c00      	ldr	r4, [sp, #0]
 8019b2e:	9a01      	ldr	r2, [sp, #4]
 8019b30:	f994 0000 	ldrsb.w	r0, [r4]
 8019b34:	f992 2000 	ldrsb.w	r2, [r2]
 8019b38:	4458      	add	r0, fp
 8019b3a:	f342 0203 	sbfx	r2, r2, #0, #4
 8019b3e:	fb02 1100 	mla	r1, r2, r0, r1
 8019b42:	9843      	ldr	r0, [sp, #268]	; 0x10c
 8019b44:	5620      	ldrsb	r0, [r4, r0]
 8019b46:	3401      	adds	r4, #1
 8019b48:	4458      	add	r0, fp
 8019b4a:	9400      	str	r4, [sp, #0]
 8019b4c:	fb02 3300 	mla	r3, r2, r0, r3
 8019b50:	9a00      	ldr	r2, [sp, #0]
 8019b52:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019b54:	4402      	add	r2, r0
 8019b56:	9200      	str	r2, [sp, #0]
 8019b58:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019b5a:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019b5c:	6812      	ldr	r2, [r2, #0]
 8019b5e:	6805      	ldr	r5, [r0, #0]
 8019b60:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 8019b64:	4081      	lsls	r1, r0
 8019b66:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8019b6a:	2600      	movs	r6, #0
 8019b6c:	fbc1 4605 	smlal	r4, r6, r1, r5
 8019b70:	0fe1      	lsrs	r1, r4, #31
 8019b72:	2a00      	cmp	r2, #0
 8019b74:	ea41 0146 	orr.w	r1, r1, r6, lsl #1
 8019b78:	f340 812d 	ble.w	8019dd6 <arm_nn_mat_mult_nt_t_s4+0x12be>
 8019b7c:	2900      	cmp	r1, #0
 8019b7e:	f2c0 8156 	blt.w	8019e2e <arm_nn_mat_mult_nt_t_s4+0x1316>
 8019b82:	fa03 f000 	lsl.w	r0, r3, r0
 8019b86:	2200      	movs	r2, #0
 8019b88:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8019b8c:	fbc5 3200 	smlal	r3, r2, r5, r0
 8019b90:	0fd8      	lsrs	r0, r3, #31
 8019b92:	ea50 0042 	orrs.w	r0, r0, r2, lsl #1
 8019b96:	f100 8140 	bmi.w	8019e1a <arm_nn_mat_mult_nt_t_s4+0x1302>
 8019b9a:	9b40      	ldr	r3, [sp, #256]	; 0x100
 8019b9c:	9a42      	ldr	r2, [sp, #264]	; 0x108
 8019b9e:	4419      	add	r1, r3
 8019ba0:	4418      	add	r0, r3
 8019ba2:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8019ba4:	4299      	cmp	r1, r3
 8019ba6:	bfb8      	it	lt
 8019ba8:	4619      	movlt	r1, r3
 8019baa:	4298      	cmp	r0, r3
 8019bac:	bfb8      	it	lt
 8019bae:	4618      	movlt	r0, r3
 8019bb0:	9b42      	ldr	r3, [sp, #264]	; 0x108
 8019bb2:	4299      	cmp	r1, r3
 8019bb4:	bfa8      	it	ge
 8019bb6:	4619      	movge	r1, r3
 8019bb8:	4290      	cmp	r0, r2
 8019bba:	9b02      	ldr	r3, [sp, #8]
 8019bbc:	bfa8      	it	ge
 8019bbe:	4610      	movge	r0, r2
 8019bc0:	9a3d      	ldr	r2, [sp, #244]	; 0xf4
 8019bc2:	7019      	strb	r1, [r3, #0]
 8019bc4:	5498      	strb	r0, [r3, r2]
 8019bc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bc8:	4413      	add	r3, r2
 8019bca:	9302      	str	r3, [sp, #8]
 8019bcc:	9b04      	ldr	r3, [sp, #16]
 8019bce:	3b01      	subs	r3, #1
 8019bd0:	9304      	str	r3, [sp, #16]
 8019bd2:	f47f ae4c 	bne.w	801986e <arm_nn_mat_mult_nt_t_s4+0xd56>
 8019bd6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019bd8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019bda:	4413      	add	r3, r2
 8019bdc:	9302      	str	r3, [sp, #8]
 8019bde:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019be0:	2b00      	cmp	r3, #0
 8019be2:	f040 855e 	bne.w	801a6a2 <arm_nn_mat_mult_nt_t_s4+0x1b8a>
 8019be6:	9b03      	ldr	r3, [sp, #12]
 8019be8:	2b00      	cmp	r3, #0
 8019bea:	f000 812c 	beq.w	8019e46 <arm_nn_mat_mult_nt_t_s4+0x132e>
 8019bee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019bf0:	07db      	lsls	r3, r3, #31
 8019bf2:	f100 8128 	bmi.w	8019e46 <arm_nn_mat_mult_nt_t_s4+0x132e>
 8019bf6:	e9dd 1220 	ldrd	r1, r2, [sp, #128]	; 0x80
 8019bfa:	5653      	ldrsb	r3, [r2, r1]
 8019bfc:	111b      	asrs	r3, r3, #4
 8019bfe:	931a      	str	r3, [sp, #104]	; 0x68
 8019c00:	1c4b      	adds	r3, r1, #1
 8019c02:	18d3      	adds	r3, r2, r3
 8019c04:	9321      	str	r3, [sp, #132]	; 0x84
 8019c06:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019c08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c0a:	3204      	adds	r2, #4
 8019c0c:	920a      	str	r2, [sp, #40]	; 0x28
 8019c0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019c10:	3204      	adds	r2, #4
 8019c12:	9209      	str	r2, [sp, #36]	; 0x24
 8019c14:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019c16:	3204      	adds	r2, #4
 8019c18:	9211      	str	r2, [sp, #68]	; 0x44
 8019c1a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8019c1c:	3301      	adds	r3, #1
 8019c1e:	429a      	cmp	r2, r3
 8019c20:	930b      	str	r3, [sp, #44]	; 0x2c
 8019c22:	f47f ae06 	bne.w	8019832 <arm_nn_mat_mult_nt_t_s4+0xd1a>
 8019c26:	2000      	movs	r0, #0
 8019c28:	b031      	add	sp, #196	; 0xc4
 8019c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c2e:	9800      	ldr	r0, [sp, #0]
 8019c30:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8019c32:	f990 2000 	ldrsb.w	r2, [r0]
 8019c36:	56c3      	ldrsb	r3, [r0, r3]
 8019c38:	3001      	adds	r0, #1
 8019c3a:	9000      	str	r0, [sp, #0]
 8019c3c:	981a      	ldr	r0, [sp, #104]	; 0x68
 8019c3e:	445a      	add	r2, fp
 8019c40:	445b      	add	r3, fp
 8019c42:	fb00 1303 	mla	r3, r0, r3, r1
 8019c46:	fb00 1102 	mla	r1, r0, r2, r1
 8019c4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019c4c:	2a00      	cmp	r2, #0
 8019c4e:	f73f ae1f 	bgt.w	8019890 <arm_nn_mat_mult_nt_t_s4+0xd78>
 8019c52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8019c54:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8019c56:	f04f 0900 	mov.w	r9, #0
 8019c5a:	4591      	cmp	r9, r2
 8019c5c:	f6ff aed9 	blt.w	8019a12 <arm_nn_mat_mult_nt_t_s4+0xefa>
 8019c60:	9501      	str	r5, [sp, #4]
 8019c62:	e71f      	b.n	8019aa4 <arm_nn_mat_mult_nt_t_s4+0xf8c>
 8019c64:	9b07      	ldr	r3, [sp, #28]
 8019c66:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8019c68:	4413      	add	r3, r2
 8019c6a:	e9dd 6e02 	ldrd	r6, lr, [sp, #8]
 8019c6e:	9307      	str	r3, [sp, #28]
 8019c70:	f7ff ba48 	b.w	8019104 <arm_nn_mat_mult_nt_t_s4+0x5ec>
 8019c74:	425b      	negs	r3, r3
 8019c76:	2101      	movs	r1, #1
 8019c78:	4099      	lsls	r1, r3
 8019c7a:	3901      	subs	r1, #1
 8019c7c:	ea08 0001 	and.w	r0, r8, r1
 8019c80:	fa58 f803 	asrs.w	r8, r8, r3
 8019c84:	9000      	str	r0, [sp, #0]
 8019c86:	ea4f 0961 	mov.w	r9, r1, asr #1
 8019c8a:	fa0b f202 	lsl.w	r2, fp, r2
 8019c8e:	f100 8093 	bmi.w	8019db8 <arm_nn_mat_mult_nt_t_s4+0x12a0>
 8019c92:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8019c96:	2400      	movs	r4, #0
 8019c98:	fbc5 0402 	smlal	r0, r4, r5, r2
 8019c9c:	0fc0      	lsrs	r0, r0, #31
 8019c9e:	ea40 0044 	orr.w	r0, r0, r4, lsl #1
 8019ca2:	fa40 fc03 	asr.w	ip, r0, r3
 8019ca6:	ea01 0a00 	and.w	sl, r1, r0
 8019caa:	464b      	mov	r3, r9
 8019cac:	9a00      	ldr	r2, [sp, #0]
 8019cae:	429a      	cmp	r2, r3
 8019cb0:	bfc8      	it	gt
 8019cb2:	f108 0801 	addgt.w	r8, r8, #1
 8019cb6:	f7ff ba45 	b.w	8019144 <arm_nn_mat_mult_nt_t_s4+0x62c>
 8019cba:	425b      	negs	r3, r3
 8019cbc:	9f01      	ldr	r7, [sp, #4]
 8019cbe:	2001      	movs	r0, #1
 8019cc0:	4098      	lsls	r0, r3
 8019cc2:	3801      	subs	r0, #1
 8019cc4:	408f      	lsls	r7, r1
 8019cc6:	ea02 0400 	and.w	r4, r2, r0
 8019cca:	4639      	mov	r1, r7
 8019ccc:	f04f 0b00 	mov.w	fp, #0
 8019cd0:	f04f 4780 	mov.w	r7, #1073741824	; 0x40000000
 8019cd4:	411a      	asrs	r2, r3
 8019cd6:	9400      	str	r4, [sp, #0]
 8019cd8:	fbc5 7b01 	smlal	r7, fp, r5, r1
 8019cdc:	ea4f 0460 	mov.w	r4, r0, asr #1
 8019ce0:	d462      	bmi.n	8019da8 <arm_nn_mat_mult_nt_t_s4+0x1290>
 8019ce2:	0ffd      	lsrs	r5, r7, #31
 8019ce4:	ea45 054b 	orr.w	r5, r5, fp, lsl #1
 8019ce8:	4028      	ands	r0, r5
 8019cea:	411d      	asrs	r5, r3
 8019cec:	4623      	mov	r3, r4
 8019cee:	9900      	ldr	r1, [sp, #0]
 8019cf0:	4299      	cmp	r1, r3
 8019cf2:	bfc8      	it	gt
 8019cf4:	3201      	addgt	r2, #1
 8019cf6:	f7ff ba45 	b.w	8019184 <arm_nn_mat_mult_nt_t_s4+0x66c>
 8019cfa:	425b      	negs	r3, r3
 8019cfc:	fa0e f404 	lsl.w	r4, lr, r4
 8019d00:	2501      	movs	r5, #1
 8019d02:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8019d06:	f04f 0800 	mov.w	r8, #0
 8019d0a:	409d      	lsls	r5, r3
 8019d0c:	fbc6 e804 	smlal	lr, r8, r6, r4
 8019d10:	3d01      	subs	r5, #1
 8019d12:	ea4f 7ede 	mov.w	lr, lr, lsr #31
 8019d16:	ea02 0c05 	and.w	ip, r2, r5
 8019d1a:	106f      	asrs	r7, r5, #1
 8019d1c:	411a      	asrs	r2, r3
 8019d1e:	ea4e 0e48 	orr.w	lr, lr, r8, lsl #1
 8019d22:	ea05 050e 	and.w	r5, r5, lr
 8019d26:	fa4e fe03 	asr.w	lr, lr, r3
 8019d2a:	bf54      	ite	pl
 8019d2c:	463b      	movpl	r3, r7
 8019d2e:	1c7b      	addmi	r3, r7, #1
 8019d30:	459c      	cmp	ip, r3
 8019d32:	bfc8      	it	gt
 8019d34:	3201      	addgt	r2, #1
 8019d36:	e4c1      	b.n	80196bc <arm_nn_mat_mult_nt_t_s4+0xba4>
 8019d38:	4249      	negs	r1, r1
 8019d3a:	2501      	movs	r5, #1
 8019d3c:	408d      	lsls	r5, r1
 8019d3e:	fa06 f303 	lsl.w	r3, r6, r3
 8019d42:	3d01      	subs	r5, #1
 8019d44:	f04f 4680 	mov.w	r6, #1073741824	; 0x40000000
 8019d48:	2700      	movs	r7, #0
 8019d4a:	fbc2 6703 	smlal	r6, r7, r2, r3
 8019d4e:	ea00 0405 	and.w	r4, r0, r5
 8019d52:	ea4f 0965 	mov.w	r9, r5, asr #1
 8019d56:	4108      	asrs	r0, r1
 8019d58:	ea4f 76d6 	mov.w	r6, r6, lsr #31
 8019d5c:	bf54      	ite	pl
 8019d5e:	464b      	movpl	r3, r9
 8019d60:	f109 0301 	addmi.w	r3, r9, #1
 8019d64:	ea46 0647 	orr.w	r6, r6, r7, lsl #1
 8019d68:	429c      	cmp	r4, r3
 8019d6a:	ea05 0a06 	and.w	sl, r5, r6
 8019d6e:	fa46 f101 	asr.w	r1, r6, r1
 8019d72:	bfc8      	it	gt
 8019d74:	3001      	addgt	r0, #1
 8019d76:	e480      	b.n	801967a <arm_nn_mat_mult_nt_t_s4+0xb62>
 8019d78:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8019d7c:	461c      	mov	r4, r3
 8019d7e:	461f      	mov	r7, r3
 8019d80:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019d82:	2b00      	cmp	r3, #0
 8019d84:	f73e af57 	bgt.w	8018c36 <arm_nn_mat_mult_nt_t_s4+0x11e>
 8019d88:	2300      	movs	r3, #0
 8019d8a:	461a      	mov	r2, r3
 8019d8c:	930c      	str	r3, [sp, #48]	; 0x30
 8019d8e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019d90:	f8dd e090 	ldr.w	lr, [sp, #144]	; 0x90
 8019d94:	9701      	str	r7, [sp, #4]
 8019d96:	429a      	cmp	r2, r3
 8019d98:	46a3      	mov	fp, r4
 8019d9a:	f6ff a8b0 	blt.w	8018efe <arm_nn_mat_mult_nt_t_s4+0x3e6>
 8019d9e:	f8cd e010 	str.w	lr, [sp, #16]
 8019da2:	9210      	str	r2, [sp, #64]	; 0x40
 8019da4:	f7ff b91f 	b.w	8018fe6 <arm_nn_mat_mult_nt_t_s4+0x4ce>
 8019da8:	0ff9      	lsrs	r1, r7, #31
 8019daa:	ea41 014b 	orr.w	r1, r1, fp, lsl #1
 8019dae:	fa41 f503 	asr.w	r5, r1, r3
 8019db2:	4008      	ands	r0, r1
 8019db4:	1c63      	adds	r3, r4, #1
 8019db6:	e79a      	b.n	8019cee <arm_nn_mat_mult_nt_t_s4+0x11d6>
 8019db8:	f04f 4480 	mov.w	r4, #1073741824	; 0x40000000
 8019dbc:	2000      	movs	r0, #0
 8019dbe:	fbc5 4002 	smlal	r4, r0, r5, r2
 8019dc2:	0fe4      	lsrs	r4, r4, #31
 8019dc4:	ea44 0440 	orr.w	r4, r4, r0, lsl #1
 8019dc8:	fa44 fc03 	asr.w	ip, r4, r3
 8019dcc:	ea01 0a04 	and.w	sl, r1, r4
 8019dd0:	f109 0301 	add.w	r3, r9, #1
 8019dd4:	e76a      	b.n	8019cac <arm_nn_mat_mult_nt_t_s4+0x1194>
 8019dd6:	4252      	negs	r2, r2
 8019dd8:	2401      	movs	r4, #1
 8019dda:	4094      	lsls	r4, r2
 8019ddc:	4083      	lsls	r3, r0
 8019dde:	3c01      	subs	r4, #1
 8019de0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8019de4:	f04f 0c00 	mov.w	ip, #0
 8019de8:	fbc5 0c03 	smlal	r0, ip, r5, r3
 8019dec:	ea01 0704 	and.w	r7, r1, r4
 8019df0:	1066      	asrs	r6, r4, #1
 8019df2:	4111      	asrs	r1, r2
 8019df4:	ea4f 70d0 	mov.w	r0, r0, lsr #31
 8019df8:	bf54      	ite	pl
 8019dfa:	4633      	movpl	r3, r6
 8019dfc:	1c73      	addmi	r3, r6, #1
 8019dfe:	ea40 004c 	orr.w	r0, r0, ip, lsl #1
 8019e02:	429f      	cmp	r7, r3
 8019e04:	ea04 0400 	and.w	r4, r4, r0
 8019e08:	bfc8      	it	gt
 8019e0a:	3101      	addgt	r1, #1
 8019e0c:	4110      	asrs	r0, r2
 8019e0e:	2800      	cmp	r0, #0
 8019e10:	db05      	blt.n	8019e1e <arm_nn_mat_mult_nt_t_s4+0x1306>
 8019e12:	42a6      	cmp	r6, r4
 8019e14:	bfb8      	it	lt
 8019e16:	3001      	addlt	r0, #1
 8019e18:	e6bf      	b.n	8019b9a <arm_nn_mat_mult_nt_t_s4+0x1082>
 8019e1a:	2400      	movs	r4, #0
 8019e1c:	4626      	mov	r6, r4
 8019e1e:	3601      	adds	r6, #1
 8019e20:	e7f7      	b.n	8019e12 <arm_nn_mat_mult_nt_t_s4+0x12fa>
 8019e22:	4619      	mov	r1, r3
 8019e24:	e529      	b.n	801987a <arm_nn_mat_mult_nt_t_s4+0xd62>
 8019e26:	f8dd a010 	ldr.w	sl, [sp, #16]
 8019e2a:	f7ff bbaf 	b.w	801958c <arm_nn_mat_mult_nt_t_s4+0xa74>
 8019e2e:	4083      	lsls	r3, r0
 8019e30:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8019e34:	2000      	movs	r0, #0
 8019e36:	fbc5 2003 	smlal	r2, r0, r5, r3
 8019e3a:	0fd2      	lsrs	r2, r2, #31
 8019e3c:	2400      	movs	r4, #0
 8019e3e:	ea42 0040 	orr.w	r0, r2, r0, lsl #1
 8019e42:	4626      	mov	r6, r4
 8019e44:	e7e3      	b.n	8019e0e <arm_nn_mat_mult_nt_t_s4+0x12f6>
 8019e46:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
 8019e4a:	4413      	add	r3, r2
 8019e4c:	9321      	str	r3, [sp, #132]	; 0x84
 8019e4e:	2300      	movs	r3, #0
 8019e50:	931a      	str	r3, [sp, #104]	; 0x68
 8019e52:	e6d8      	b.n	8019c06 <arm_nn_mat_mult_nt_t_s4+0x10ee>
 8019e54:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019e56:	2b00      	cmp	r3, #0
 8019e58:	f000 8547 	beq.w	801a8ea <arm_nn_mat_mult_nt_t_s4+0x1dd2>
 8019e5c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019e5e:	e9d3 c200 	ldrd	ip, r2, [r3]
 8019e62:	e9d3 b302 	ldrd	fp, r3, [r3, #8]
 8019e66:	9301      	str	r3, [sp, #4]
 8019e68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019e6a:	9200      	str	r2, [sp, #0]
 8019e6c:	2b00      	cmp	r3, #0
 8019e6e:	f340 8544 	ble.w	801a8fa <arm_nn_mat_mult_nt_t_s4+0x1de2>
 8019e72:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019e74:	9907      	ldr	r1, [sp, #28]
 8019e76:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8019e78:	f103 0904 	add.w	r9, r3, #4
 8019e7c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019e7e:	eb01 0a03 	add.w	sl, r1, r3
 8019e82:	f830 3009 	ldrh.w	r3, [r0, r9]
 8019e86:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019e8a:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019e8c:	f839 3c04 	ldrh.w	r3, [r9, #-4]
 8019e90:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019e94:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8019e96:	0213      	lsls	r3, r2, #8
 8019e98:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8019e9c:	b2d2      	uxtb	r2, r2
 8019e9e:	4313      	orrs	r3, r2
 8019ea0:	0222      	lsls	r2, r4, #8
 8019ea2:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8019ea6:	b2e4      	uxtb	r4, r4
 8019ea8:	4322      	orrs	r2, r4
 8019eaa:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8019eae:	fa2f f783 	sxtb16	r7, r3
 8019eb2:	0113      	lsls	r3, r2, #4
 8019eb4:	fa2f f888 	sxtb16	r8, r8
 8019eb8:	fa2f f383 	sxtb16	r3, r3
 8019ebc:	fa2f f282 	sxtb16	r2, r2
 8019ec0:	680c      	ldr	r4, [r1, #0]
 8019ec2:	fa2e f584 	sxtab16	r5, lr, r4
 8019ec6:	ea4f 1838 	mov.w	r8, r8, ror #4
 8019eca:	ea4f 1737 	mov.w	r7, r7, ror #4
 8019ece:	ea4f 1333 	mov.w	r3, r3, ror #4
 8019ed2:	ea4f 1232 	mov.w	r2, r2, ror #4
 8019ed6:	eb00 0609 	add.w	r6, r0, r9
 8019eda:	fa2f f888 	sxtb16	r8, r8
 8019ede:	fa2f f787 	sxtb16	r7, r7
 8019ee2:	fa2f f383 	sxtb16	r3, r3
 8019ee6:	fa2f f282 	sxtb16	r2, r2
 8019eea:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 8019eee:	fb28 cc05 	smlad	ip, r8, r5, ip
 8019ef2:	fb27 cc04 	smlad	ip, r7, r4, ip
 8019ef6:	fb23 bb05 	smlad	fp, r3, r5, fp
 8019efa:	fb22 bb04 	smlad	fp, r2, r4, fp
 8019efe:	8873      	ldrh	r3, [r6, #2]
 8019f00:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019f04:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019f06:	f839 3c02 	ldrh.w	r3, [r9, #-2]
 8019f0a:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019f0e:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8019f10:	0213      	lsls	r3, r2, #8
 8019f12:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8019f16:	b2d2      	uxtb	r2, r2
 8019f18:	4313      	orrs	r3, r2
 8019f1a:	0222      	lsls	r2, r4, #8
 8019f1c:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 8019f20:	b2e4      	uxtb	r4, r4
 8019f22:	4322      	orrs	r2, r4
 8019f24:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8019f28:	fa2f f783 	sxtb16	r7, r3
 8019f2c:	0113      	lsls	r3, r2, #4
 8019f2e:	fa2f f888 	sxtb16	r8, r8
 8019f32:	fa2f f383 	sxtb16	r3, r3
 8019f36:	fa2f f282 	sxtb16	r2, r2
 8019f3a:	684c      	ldr	r4, [r1, #4]
 8019f3c:	fa2e f584 	sxtab16	r5, lr, r4
 8019f40:	ea4f 1838 	mov.w	r8, r8, ror #4
 8019f44:	ea4f 1737 	mov.w	r7, r7, ror #4
 8019f48:	ea4f 1333 	mov.w	r3, r3, ror #4
 8019f4c:	ea4f 1232 	mov.w	r2, r2, ror #4
 8019f50:	fa2f f888 	sxtb16	r8, r8
 8019f54:	fa2f f787 	sxtb16	r7, r7
 8019f58:	fa2f f383 	sxtb16	r3, r3
 8019f5c:	fa2f f282 	sxtb16	r2, r2
 8019f60:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 8019f64:	fb28 cc05 	smlad	ip, r8, r5, ip
 8019f68:	fb27 c704 	smlad	r7, r7, r4, ip
 8019f6c:	fb23 bb05 	smlad	fp, r3, r5, fp
 8019f70:	fb22 b204 	smlad	r2, r2, r4, fp
 8019f74:	88b3      	ldrh	r3, [r6, #4]
 8019f76:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019f7a:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 8019f7c:	f8b9 3000 	ldrh.w	r3, [r9]
 8019f80:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019f84:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 8019f86:	f8d1 b008 	ldr.w	fp, [r1, #8]
 8019f8a:	fa2e fc8b 	sxtab16	ip, lr, fp
 8019f8e:	0223      	lsls	r3, r4, #8
 8019f90:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8019f94:	b2e4      	uxtb	r4, r4
 8019f96:	4323      	orrs	r3, r4
 8019f98:	022c      	lsls	r4, r5, #8
 8019f9a:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8019f9e:	b2ed      	uxtb	r5, r5
 8019fa0:	432c      	orrs	r4, r5
 8019fa2:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8019fa6:	fa2f f583 	sxtb16	r5, r3
 8019faa:	0123      	lsls	r3, r4, #4
 8019fac:	fa2f f888 	sxtb16	r8, r8
 8019fb0:	fa2f f383 	sxtb16	r3, r3
 8019fb4:	fa2f f484 	sxtb16	r4, r4
 8019fb8:	ea4f 1838 	mov.w	r8, r8, ror #4
 8019fbc:	ea4f 1535 	mov.w	r5, r5, ror #4
 8019fc0:	ea4f 1333 	mov.w	r3, r3, ror #4
 8019fc4:	ea4f 1434 	mov.w	r4, r4, ror #4
 8019fc8:	fa2f f888 	sxtb16	r8, r8
 8019fcc:	fa2f f585 	sxtb16	r5, r5
 8019fd0:	fa2f f383 	sxtb16	r3, r3
 8019fd4:	fa2f f484 	sxtb16	r4, r4
 8019fd8:	fa2e fb9b 	sxtab16	fp, lr, fp, ror #8
 8019fdc:	fb28 770c 	smlad	r7, r8, ip, r7
 8019fe0:	fb25 750b 	smlad	r5, r5, fp, r7
 8019fe4:	fb23 230c 	smlad	r3, r3, ip, r2
 8019fe8:	fb24 340b 	smlad	r4, r4, fp, r3
 8019fec:	88f3      	ldrh	r3, [r6, #6]
 8019fee:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 8019ff2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8019ff4:	f8b9 2002 	ldrh.w	r2, [r9, #2]
 8019ff8:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 8019ffc:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8019ffe:	f8d1 b00c 	ldr.w	fp, [r1, #12]
 801a002:	fa2e f78b 	sxtab16	r7, lr, fp
 801a006:	021a      	lsls	r2, r3, #8
 801a008:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 801a00c:	b2db      	uxtb	r3, r3
 801a00e:	431a      	orrs	r2, r3
 801a010:	0233      	lsls	r3, r6, #8
 801a012:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a016:	b2f6      	uxtb	r6, r6
 801a018:	4333      	orrs	r3, r6
 801a01a:	ea4f 1c02 	mov.w	ip, r2, lsl #4
 801a01e:	011e      	lsls	r6, r3, #4
 801a020:	fa2f fc8c 	sxtb16	ip, ip
 801a024:	fa2f f282 	sxtb16	r2, r2
 801a028:	fa2f f686 	sxtb16	r6, r6
 801a02c:	fa2f f383 	sxtb16	r3, r3
 801a030:	ea4f 1c3c 	mov.w	ip, ip, ror #4
 801a034:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a038:	ea4f 1636 	mov.w	r6, r6, ror #4
 801a03c:	ea4f 1333 	mov.w	r3, r3, ror #4
 801a040:	3110      	adds	r1, #16
 801a042:	fa2f fc8c 	sxtb16	ip, ip
 801a046:	fa2f f282 	sxtb16	r2, r2
 801a04a:	fa2f f686 	sxtb16	r6, r6
 801a04e:	fa2f f383 	sxtb16	r3, r3
 801a052:	fa2e fb9b 	sxtab16	fp, lr, fp, ror #8
 801a056:	fb2c 5c07 	smlad	ip, ip, r7, r5
 801a05a:	fb22 cc0b 	smlad	ip, r2, fp, ip
 801a05e:	fb26 4407 	smlad	r4, r6, r7, r4
 801a062:	fb23 4b0b 	smlad	fp, r3, fp, r4
 801a066:	4551      	cmp	r1, sl
 801a068:	f109 0908 	add.w	r9, r9, #8
 801a06c:	f47f af09 	bne.w	8019e82 <arm_nn_mat_mult_nt_t_s4+0x136a>
 801a070:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a072:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 801a074:	4413      	add	r3, r2
 801a076:	9324      	str	r3, [sp, #144]	; 0x90
 801a078:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a07a:	9304      	str	r3, [sp, #16]
 801a07c:	461a      	mov	r2, r3
 801a07e:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a080:	3b03      	subs	r3, #3
 801a082:	4293      	cmp	r3, r2
 801a084:	9308      	str	r3, [sp, #32]
 801a086:	f340 8443 	ble.w	801a910 <arm_nn_mat_mult_nt_t_s4+0x1df8>
 801a08a:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a08c:	9d24      	ldr	r5, [sp, #144]	; 0x90
 801a08e:	f8cd a01c 	str.w	sl, [sp, #28]
 801a092:	3b04      	subs	r3, #4
 801a094:	1a9b      	subs	r3, r3, r2
 801a096:	089b      	lsrs	r3, r3, #2
 801a098:	1c5e      	adds	r6, r3, #1
 801a09a:	46d0      	mov	r8, sl
 801a09c:	f8dd a0f8 	ldr.w	sl, [sp, #248]	; 0xf8
 801a0a0:	9303      	str	r3, [sp, #12]
 801a0a2:	eb05 0946 	add.w	r9, r5, r6, lsl #1
 801a0a6:	882b      	ldrh	r3, [r5, #0]
 801a0a8:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a0ac:	f835 200a 	ldrh.w	r2, [r5, sl]
 801a0b0:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a0b2:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 801a0b6:	992f      	ldr	r1, [sp, #188]	; 0xbc
 801a0b8:	f858 4b04 	ldr.w	r4, [r8], #4
 801a0bc:	fa2e f784 	sxtab16	r7, lr, r4
 801a0c0:	021a      	lsls	r2, r3, #8
 801a0c2:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 801a0c6:	b2db      	uxtb	r3, r3
 801a0c8:	431a      	orrs	r2, r3
 801a0ca:	020b      	lsls	r3, r1, #8
 801a0cc:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a0d0:	b2c9      	uxtb	r1, r1
 801a0d2:	430b      	orrs	r3, r1
 801a0d4:	0110      	lsls	r0, r2, #4
 801a0d6:	0119      	lsls	r1, r3, #4
 801a0d8:	fa2f f080 	sxtb16	r0, r0
 801a0dc:	fa2f f282 	sxtb16	r2, r2
 801a0e0:	fa2f f181 	sxtb16	r1, r1
 801a0e4:	fa2f f383 	sxtb16	r3, r3
 801a0e8:	3502      	adds	r5, #2
 801a0ea:	ea4f 1030 	mov.w	r0, r0, ror #4
 801a0ee:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a0f2:	ea4f 1131 	mov.w	r1, r1, ror #4
 801a0f6:	ea4f 1333 	mov.w	r3, r3, ror #4
 801a0fa:	fa2f f080 	sxtb16	r0, r0
 801a0fe:	fa2f f282 	sxtb16	r2, r2
 801a102:	fa2f f181 	sxtb16	r1, r1
 801a106:	fa2f f383 	sxtb16	r3, r3
 801a10a:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 801a10e:	fb20 cc07 	smlad	ip, r0, r7, ip
 801a112:	fb22 cc04 	smlad	ip, r2, r4, ip
 801a116:	fb21 bb07 	smlad	fp, r1, r7, fp
 801a11a:	fb23 bb04 	smlad	fp, r3, r4, fp
 801a11e:	454d      	cmp	r5, r9
 801a120:	d1c1      	bne.n	801a0a6 <arm_nn_mat_mult_nt_t_s4+0x158e>
 801a122:	9b04      	ldr	r3, [sp, #16]
 801a124:	9a03      	ldr	r2, [sp, #12]
 801a126:	f8dd a01c 	ldr.w	sl, [sp, #28]
 801a12a:	3304      	adds	r3, #4
 801a12c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 801a130:	eb0a 0a86 	add.w	sl, sl, r6, lsl #2
 801a134:	9307      	str	r3, [sp, #28]
 801a136:	4619      	mov	r1, r3
 801a138:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a13a:	428a      	cmp	r2, r1
 801a13c:	dd33      	ble.n	801a1a6 <arm_nn_mat_mult_nt_t_s4+0x168e>
 801a13e:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a140:	9d3f      	ldr	r5, [sp, #252]	; 0xfc
 801a142:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 801a146:	3b02      	subs	r3, #2
 801a148:	1a5b      	subs	r3, r3, r1
 801a14a:	eb09 0702 	add.w	r7, r9, r2
 801a14e:	085a      	lsrs	r2, r3, #1
 801a150:	eb09 0353 	add.w	r3, r9, r3, lsr #1
 801a154:	f109 36ff 	add.w	r6, r9, #4294967295
 801a158:	f10a 0402 	add.w	r4, sl, #2
 801a15c:	9203      	str	r2, [sp, #12]
 801a15e:	4699      	mov	r9, r3
 801a160:	f916 0f01 	ldrsb.w	r0, [r6, #1]!
 801a164:	f914 1c02 	ldrsb.w	r1, [r4, #-2]
 801a168:	f914 2c01 	ldrsb.w	r2, [r4, #-1]
 801a16c:	f917 3f01 	ldrsb.w	r3, [r7, #1]!
 801a170:	4429      	add	r1, r5
 801a172:	f340 0803 	sbfx	r8, r0, #0, #4
 801a176:	442a      	add	r2, r5
 801a178:	1100      	asrs	r0, r0, #4
 801a17a:	fb01 cc08 	mla	ip, r1, r8, ip
 801a17e:	fb02 cc00 	mla	ip, r2, r0, ip
 801a182:	f343 0003 	sbfx	r0, r3, #0, #4
 801a186:	fb01 bb00 	mla	fp, r1, r0, fp
 801a18a:	111b      	asrs	r3, r3, #4
 801a18c:	45b1      	cmp	r9, r6
 801a18e:	f104 0402 	add.w	r4, r4, #2
 801a192:	fb02 bb03 	mla	fp, r2, r3, fp
 801a196:	d1e3      	bne.n	801a160 <arm_nn_mat_mult_nt_t_s4+0x1648>
 801a198:	9b03      	ldr	r3, [sp, #12]
 801a19a:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801a19e:	3301      	adds	r3, #1
 801a1a0:	4499      	add	r9, r3
 801a1a2:	eb0a 0a43 	add.w	sl, sl, r3, lsl #1
 801a1a6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a1a8:	2b00      	cmp	r3, #0
 801a1aa:	f000 8271 	beq.w	801a690 <arm_nn_mat_mult_nt_t_s4+0x1b78>
 801a1ae:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 801a1b0:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a1b2:	f919 4002 	ldrsb.w	r4, [r9, r2]
 801a1b6:	983f      	ldr	r0, [sp, #252]	; 0xfc
 801a1b8:	f99a 2000 	ldrsb.w	r2, [sl]
 801a1bc:	f999 1000 	ldrsb.w	r1, [r9]
 801a1c0:	9d3f      	ldr	r5, [sp, #252]	; 0xfc
 801a1c2:	f1c3 0301 	rsb	r3, r3, #1
 801a1c6:	1810      	adds	r0, r2, r0
 801a1c8:	f91a 2003 	ldrsb.w	r2, [sl, r3]
 801a1cc:	4453      	add	r3, sl
 801a1ce:	f103 0a01 	add.w	sl, r3, #1
 801a1d2:	f341 0303 	sbfx	r3, r1, #0, #4
 801a1d6:	fb00 cc03 	mla	ip, r0, r3, ip
 801a1da:	110b      	asrs	r3, r1, #4
 801a1dc:	9900      	ldr	r1, [sp, #0]
 801a1de:	442a      	add	r2, r5
 801a1e0:	fb02 1303 	mla	r3, r2, r3, r1
 801a1e4:	9300      	str	r3, [sp, #0]
 801a1e6:	9901      	ldr	r1, [sp, #4]
 801a1e8:	f344 0303 	sbfx	r3, r4, #0, #4
 801a1ec:	fb00 bb03 	mla	fp, r0, r3, fp
 801a1f0:	1123      	asrs	r3, r4, #4
 801a1f2:	fb02 1303 	mla	r3, r2, r3, r1
 801a1f6:	f109 0901 	add.w	r9, r9, #1
 801a1fa:	9301      	str	r3, [sp, #4]
 801a1fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1fe:	6819      	ldr	r1, [r3, #0]
 801a200:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a202:	ea21 70e1 	bic.w	r0, r1, r1, asr #31
 801a206:	681b      	ldr	r3, [r3, #0]
 801a208:	fa0c f000 	lsl.w	r0, ip, r0
 801a20c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801a210:	2400      	movs	r4, #0
 801a212:	fbc0 2403 	smlal	r2, r4, r0, r3
 801a216:	0fd2      	lsrs	r2, r2, #31
 801a218:	2900      	cmp	r1, #0
 801a21a:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 801a21e:	dc0d      	bgt.n	801a23c <arm_nn_mat_mult_nt_t_s4+0x1724>
 801a220:	4249      	negs	r1, r1
 801a222:	2301      	movs	r3, #1
 801a224:	408b      	lsls	r3, r1
 801a226:	3b01      	subs	r3, #1
 801a228:	ea04 0203 	and.w	r2, r4, r3
 801a22c:	410c      	asrs	r4, r1
 801a22e:	ea4f 0363 	mov.w	r3, r3, asr #1
 801a232:	bf48      	it	mi
 801a234:	3301      	addmi	r3, #1
 801a236:	429a      	cmp	r2, r3
 801a238:	bfc8      	it	gt
 801a23a:	3401      	addgt	r4, #1
 801a23c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a23e:	6899      	ldr	r1, [r3, #8]
 801a240:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a242:	ea21 75e1 	bic.w	r5, r1, r1, asr #31
 801a246:	689b      	ldr	r3, [r3, #8]
 801a248:	fa0b f505 	lsl.w	r5, fp, r5
 801a24c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801a250:	2000      	movs	r0, #0
 801a252:	fbc5 2003 	smlal	r2, r0, r5, r3
 801a256:	0fd2      	lsrs	r2, r2, #31
 801a258:	2900      	cmp	r1, #0
 801a25a:	ea42 0040 	orr.w	r0, r2, r0, lsl #1
 801a25e:	dc0d      	bgt.n	801a27c <arm_nn_mat_mult_nt_t_s4+0x1764>
 801a260:	4249      	negs	r1, r1
 801a262:	2301      	movs	r3, #1
 801a264:	408b      	lsls	r3, r1
 801a266:	3b01      	subs	r3, #1
 801a268:	ea00 0203 	and.w	r2, r0, r3
 801a26c:	4108      	asrs	r0, r1
 801a26e:	ea4f 0363 	mov.w	r3, r3, asr #1
 801a272:	bf48      	it	mi
 801a274:	3301      	addmi	r3, #1
 801a276:	429a      	cmp	r2, r3
 801a278:	bfc8      	it	gt
 801a27a:	3001      	addgt	r0, #1
 801a27c:	9a40      	ldr	r2, [sp, #256]	; 0x100
 801a27e:	9b40      	ldr	r3, [sp, #256]	; 0x100
 801a280:	4410      	add	r0, r2
 801a282:	9a41      	ldr	r2, [sp, #260]	; 0x104
 801a284:	4423      	add	r3, r4
 801a286:	4293      	cmp	r3, r2
 801a288:	bfb8      	it	lt
 801a28a:	4613      	movlt	r3, r2
 801a28c:	4290      	cmp	r0, r2
 801a28e:	bfb8      	it	lt
 801a290:	4610      	movlt	r0, r2
 801a292:	9a42      	ldr	r2, [sp, #264]	; 0x108
 801a294:	4293      	cmp	r3, r2
 801a296:	bfa8      	it	ge
 801a298:	4613      	movge	r3, r2
 801a29a:	9a02      	ldr	r2, [sp, #8]
 801a29c:	7013      	strb	r3, [r2, #0]
 801a29e:	9b42      	ldr	r3, [sp, #264]	; 0x108
 801a2a0:	4298      	cmp	r0, r3
 801a2a2:	bfa8      	it	ge
 801a2a4:	4618      	movge	r0, r3
 801a2a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a2a8:	7090      	strb	r0, [r2, #2]
 801a2aa:	2b00      	cmp	r3, #0
 801a2ac:	f340 8357 	ble.w	801a95e <arm_nn_mat_mult_nt_t_s4+0x1e46>
 801a2b0:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a2b2:	9d2c      	ldr	r5, [sp, #176]	; 0xb0
 801a2b4:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 801a2b8:	3304      	adds	r3, #4
 801a2ba:	eb09 0b03 	add.w	fp, r9, r3
 801a2be:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a2c0:	eb0a 0603 	add.w	r6, sl, r3
 801a2c4:	e9dd 3200 	ldrd	r3, r2, [sp]
 801a2c8:	9603      	str	r6, [sp, #12]
 801a2ca:	f835 100b 	ldrh.w	r1, [r5, fp]
 801a2ce:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 801a2d2:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a2d4:	f83b 1c04 	ldrh.w	r1, [fp, #-4]
 801a2d8:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 801a2dc:	982f      	ldr	r0, [sp, #188]	; 0xbc
 801a2de:	f8da c000 	ldr.w	ip, [sl]
 801a2e2:	fa2e f88c 	sxtab16	r8, lr, ip
 801a2e6:	0221      	lsls	r1, r4, #8
 801a2e8:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 801a2ec:	b2e4      	uxtb	r4, r4
 801a2ee:	4321      	orrs	r1, r4
 801a2f0:	0204      	lsls	r4, r0, #8
 801a2f2:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 801a2f6:	b2c0      	uxtb	r0, r0
 801a2f8:	4304      	orrs	r4, r0
 801a2fa:	ea4f 1901 	mov.w	r9, r1, lsl #4
 801a2fe:	0127      	lsls	r7, r4, #4
 801a300:	fa2f f081 	sxtb16	r0, r1
 801a304:	fa2f f989 	sxtb16	r9, r9
 801a308:	fa2f f184 	sxtb16	r1, r4
 801a30c:	fa2f f787 	sxtb16	r7, r7
 801a310:	ea4f 1939 	mov.w	r9, r9, ror #4
 801a314:	ea4f 1030 	mov.w	r0, r0, ror #4
 801a318:	ea4f 1737 	mov.w	r7, r7, ror #4
 801a31c:	ea4f 1131 	mov.w	r1, r1, ror #4
 801a320:	eb05 040b 	add.w	r4, r5, fp
 801a324:	fa2f f989 	sxtb16	r9, r9
 801a328:	fa2f f080 	sxtb16	r0, r0
 801a32c:	fa2f f787 	sxtb16	r7, r7
 801a330:	fa2f f181 	sxtb16	r1, r1
 801a334:	fa2e fc9c 	sxtab16	ip, lr, ip, ror #8
 801a338:	fb29 3308 	smlad	r3, r9, r8, r3
 801a33c:	fb20 300c 	smlad	r0, r0, ip, r3
 801a340:	fb27 2208 	smlad	r2, r7, r8, r2
 801a344:	fb21 220c 	smlad	r2, r1, ip, r2
 801a348:	8863      	ldrh	r3, [r4, #2]
 801a34a:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a34e:	992f      	ldr	r1, [sp, #188]	; 0xbc
 801a350:	f83b 3c02 	ldrh.w	r3, [fp, #-2]
 801a354:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a358:	9f2f      	ldr	r7, [sp, #188]	; 0xbc
 801a35a:	f8da c004 	ldr.w	ip, [sl, #4]
 801a35e:	fa2e f88c 	sxtab16	r8, lr, ip
 801a362:	020b      	lsls	r3, r1, #8
 801a364:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a368:	b2c9      	uxtb	r1, r1
 801a36a:	430b      	orrs	r3, r1
 801a36c:	0239      	lsls	r1, r7, #8
 801a36e:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 801a372:	b2ff      	uxtb	r7, r7
 801a374:	4339      	orrs	r1, r7
 801a376:	ea4f 1903 	mov.w	r9, r3, lsl #4
 801a37a:	010f      	lsls	r7, r1, #4
 801a37c:	fa2f f989 	sxtb16	r9, r9
 801a380:	fa2f f383 	sxtb16	r3, r3
 801a384:	fa2f f787 	sxtb16	r7, r7
 801a388:	fa2f f181 	sxtb16	r1, r1
 801a38c:	ea4f 1939 	mov.w	r9, r9, ror #4
 801a390:	ea4f 1333 	mov.w	r3, r3, ror #4
 801a394:	ea4f 1737 	mov.w	r7, r7, ror #4
 801a398:	ea4f 1131 	mov.w	r1, r1, ror #4
 801a39c:	fa2f f989 	sxtb16	r9, r9
 801a3a0:	fa2f f383 	sxtb16	r3, r3
 801a3a4:	fa2f f787 	sxtb16	r7, r7
 801a3a8:	fa2f f181 	sxtb16	r1, r1
 801a3ac:	fa2e fc9c 	sxtab16	ip, lr, ip, ror #8
 801a3b0:	fb29 0008 	smlad	r0, r9, r8, r0
 801a3b4:	fb23 030c 	smlad	r3, r3, ip, r0
 801a3b8:	fb27 2208 	smlad	r2, r7, r8, r2
 801a3bc:	fb21 220c 	smlad	r2, r1, ip, r2
 801a3c0:	88a1      	ldrh	r1, [r4, #4]
 801a3c2:	f8ad 10bc 	strh.w	r1, [sp, #188]	; 0xbc
 801a3c6:	992f      	ldr	r1, [sp, #188]	; 0xbc
 801a3c8:	f8bb 0000 	ldrh.w	r0, [fp]
 801a3cc:	f8ad 00bc 	strh.w	r0, [sp, #188]	; 0xbc
 801a3d0:	9f2f      	ldr	r7, [sp, #188]	; 0xbc
 801a3d2:	f8da 9008 	ldr.w	r9, [sl, #8]
 801a3d6:	fa2e f889 	sxtab16	r8, lr, r9
 801a3da:	0208      	lsls	r0, r1, #8
 801a3dc:	f400 007f 	and.w	r0, r0, #16711680	; 0xff0000
 801a3e0:	b2c9      	uxtb	r1, r1
 801a3e2:	4308      	orrs	r0, r1
 801a3e4:	0239      	lsls	r1, r7, #8
 801a3e6:	f401 017f 	and.w	r1, r1, #16711680	; 0xff0000
 801a3ea:	b2ff      	uxtb	r7, r7
 801a3ec:	4339      	orrs	r1, r7
 801a3ee:	ea4f 1c00 	mov.w	ip, r0, lsl #4
 801a3f2:	010f      	lsls	r7, r1, #4
 801a3f4:	fa2f fc8c 	sxtb16	ip, ip
 801a3f8:	fa2f f080 	sxtb16	r0, r0
 801a3fc:	fa2f f787 	sxtb16	r7, r7
 801a400:	fa2f f181 	sxtb16	r1, r1
 801a404:	ea4f 1c3c 	mov.w	ip, ip, ror #4
 801a408:	ea4f 1030 	mov.w	r0, r0, ror #4
 801a40c:	ea4f 1737 	mov.w	r7, r7, ror #4
 801a410:	ea4f 1131 	mov.w	r1, r1, ror #4
 801a414:	fa2f fc8c 	sxtb16	ip, ip
 801a418:	fa2f f080 	sxtb16	r0, r0
 801a41c:	fa2f f787 	sxtb16	r7, r7
 801a420:	fa2f f181 	sxtb16	r1, r1
 801a424:	fa2e f999 	sxtab16	r9, lr, r9, ror #8
 801a428:	fb2c 3308 	smlad	r3, ip, r8, r3
 801a42c:	fb20 3009 	smlad	r0, r0, r9, r3
 801a430:	fb27 2208 	smlad	r2, r7, r8, r2
 801a434:	fb21 2109 	smlad	r1, r1, r9, r2
 801a438:	88e3      	ldrh	r3, [r4, #6]
 801a43a:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a43e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a440:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a444:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a448:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a44a:	f8da c00c 	ldr.w	ip, [sl, #12]
 801a44e:	fa2e f78c 	sxtab16	r7, lr, ip
 801a452:	0213      	lsls	r3, r2, #8
 801a454:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a458:	b2d2      	uxtb	r2, r2
 801a45a:	4313      	orrs	r3, r2
 801a45c:	0222      	lsls	r2, r4, #8
 801a45e:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 801a462:	b2e4      	uxtb	r4, r4
 801a464:	4322      	orrs	r2, r4
 801a466:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801a46a:	0114      	lsls	r4, r2, #4
 801a46c:	fa2f f888 	sxtb16	r8, r8
 801a470:	fa2f f383 	sxtb16	r3, r3
 801a474:	fa2f f484 	sxtb16	r4, r4
 801a478:	fa2f f282 	sxtb16	r2, r2
 801a47c:	ea4f 1838 	mov.w	r8, r8, ror #4
 801a480:	ea4f 1333 	mov.w	r3, r3, ror #4
 801a484:	ea4f 1434 	mov.w	r4, r4, ror #4
 801a488:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a48c:	f10a 0a10 	add.w	sl, sl, #16
 801a490:	fa2f f888 	sxtb16	r8, r8
 801a494:	fa2f f383 	sxtb16	r3, r3
 801a498:	fa2f f484 	sxtb16	r4, r4
 801a49c:	fa2f f282 	sxtb16	r2, r2
 801a4a0:	fa2e fc9c 	sxtab16	ip, lr, ip, ror #8
 801a4a4:	fb28 0007 	smlad	r0, r8, r7, r0
 801a4a8:	fb23 030c 	smlad	r3, r3, ip, r0
 801a4ac:	fb24 1107 	smlad	r1, r4, r7, r1
 801a4b0:	fb22 120c 	smlad	r2, r2, ip, r1
 801a4b4:	45b2      	cmp	sl, r6
 801a4b6:	f10b 0b08 	add.w	fp, fp, #8
 801a4ba:	f47f af06 	bne.w	801a2ca <arm_nn_mat_mult_nt_t_s4+0x17b2>
 801a4be:	e9cd 3200 	strd	r3, r2, [sp]
 801a4c2:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801a4c6:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801a4c8:	4499      	add	r9, r3
 801a4ca:	9b08      	ldr	r3, [sp, #32]
 801a4cc:	9a04      	ldr	r2, [sp, #16]
 801a4ce:	4293      	cmp	r3, r2
 801a4d0:	f340 8243 	ble.w	801a95a <arm_nn_mat_mult_nt_t_s4+0x1e42>
 801a4d4:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a4d6:	f8dd c00c 	ldr.w	ip, [sp, #12]
 801a4da:	9c3e      	ldr	r4, [sp, #248]	; 0xf8
 801a4dc:	3b04      	subs	r3, #4
 801a4de:	1a9b      	subs	r3, r3, r2
 801a4e0:	089b      	lsrs	r3, r3, #2
 801a4e2:	e9dd 1000 	ldrd	r1, r0, [sp]
 801a4e6:	1c5d      	adds	r5, r3, #1
 801a4e8:	eb09 0645 	add.w	r6, r9, r5, lsl #1
 801a4ec:	f8b9 3000 	ldrh.w	r3, [r9]
 801a4f0:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a4f4:	f839 2004 	ldrh.w	r2, [r9, r4]
 801a4f8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801a4fa:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 801a4fe:	9f2f      	ldr	r7, [sp, #188]	; 0xbc
 801a500:	021a      	lsls	r2, r3, #8
 801a502:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 801a506:	b2db      	uxtb	r3, r3
 801a508:	431a      	orrs	r2, r3
 801a50a:	023b      	lsls	r3, r7, #8
 801a50c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a510:	b2ff      	uxtb	r7, r7
 801a512:	433b      	orrs	r3, r7
 801a514:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801a518:	0117      	lsls	r7, r2, #4
 801a51a:	fa2f f787 	sxtb16	r7, r7
 801a51e:	fa2f f282 	sxtb16	r2, r2
 801a522:	fa2f f888 	sxtb16	r8, r8
 801a526:	fa2f f383 	sxtb16	r3, r3
 801a52a:	ea4f 1838 	mov.w	r8, r8, ror #4
 801a52e:	f109 0902 	add.w	r9, r9, #2
 801a532:	fa2f fa88 	sxtb16	sl, r8
 801a536:	ea4f 1737 	mov.w	r7, r7, ror #4
 801a53a:	f85c 8b04 	ldr.w	r8, [ip], #4
 801a53e:	fa2f f787 	sxtb16	r7, r7
 801a542:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a546:	ea4f 1333 	mov.w	r3, r3, ror #4
 801a54a:	fa2f f282 	sxtb16	r2, r2
 801a54e:	fa2f f383 	sxtb16	r3, r3
 801a552:	fa2e fb88 	sxtab16	fp, lr, r8
 801a556:	fa2e f898 	sxtab16	r8, lr, r8, ror #8
 801a55a:	fb27 110b 	smlad	r1, r7, fp, r1
 801a55e:	fb22 1108 	smlad	r1, r2, r8, r1
 801a562:	fb2a 000b 	smlad	r0, sl, fp, r0
 801a566:	fb23 0008 	smlad	r0, r3, r8, r0
 801a56a:	45b1      	cmp	r9, r6
 801a56c:	d1be      	bne.n	801a4ec <arm_nn_mat_mult_nt_t_s4+0x19d4>
 801a56e:	9b03      	ldr	r3, [sp, #12]
 801a570:	e9cd 1000 	strd	r1, r0, [sp]
 801a574:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 801a578:	9303      	str	r3, [sp, #12]
 801a57a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a57c:	9a07      	ldr	r2, [sp, #28]
 801a57e:	4293      	cmp	r3, r2
 801a580:	dd2c      	ble.n	801a5dc <arm_nn_mat_mult_nt_t_s4+0x1ac4>
 801a582:	993e      	ldr	r1, [sp, #248]	; 0xf8
 801a584:	9c03      	ldr	r4, [sp, #12]
 801a586:	f8dd 80fc 	ldr.w	r8, [sp, #252]	; 0xfc
 801a58a:	f1a1 0c02 	sub.w	ip, r1, #2
 801a58e:	e9dd 9a00 	ldrd	r9, sl, [sp]
 801a592:	ebac 0c02 	sub.w	ip, ip, r2
 801a596:	eb06 0c5c 	add.w	ip, r6, ip, lsr #1
 801a59a:	1e77      	subs	r7, r6, #1
 801a59c:	3402      	adds	r4, #2
 801a59e:	441e      	add	r6, r3
 801a5a0:	f917 0f01 	ldrsb.w	r0, [r7, #1]!
 801a5a4:	f914 1c02 	ldrsb.w	r1, [r4, #-2]
 801a5a8:	f916 3f01 	ldrsb.w	r3, [r6, #1]!
 801a5ac:	f914 2c01 	ldrsb.w	r2, [r4, #-1]
 801a5b0:	f340 0503 	sbfx	r5, r0, #0, #4
 801a5b4:	4441      	add	r1, r8
 801a5b6:	fb01 9905 	mla	r9, r1, r5, r9
 801a5ba:	f343 0503 	sbfx	r5, r3, #0, #4
 801a5be:	4442      	add	r2, r8
 801a5c0:	1100      	asrs	r0, r0, #4
 801a5c2:	fb01 a105 	mla	r1, r1, r5, sl
 801a5c6:	111b      	asrs	r3, r3, #4
 801a5c8:	45bc      	cmp	ip, r7
 801a5ca:	f104 0402 	add.w	r4, r4, #2
 801a5ce:	fb02 9900 	mla	r9, r2, r0, r9
 801a5d2:	fb02 1a03 	mla	sl, r2, r3, r1
 801a5d6:	d1e3      	bne.n	801a5a0 <arm_nn_mat_mult_nt_t_s4+0x1a88>
 801a5d8:	e9cd 9a00 	strd	r9, sl, [sp]
 801a5dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5de:	9a00      	ldr	r2, [sp, #0]
 801a5e0:	6858      	ldr	r0, [r3, #4]
 801a5e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a5e4:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 801a5e8:	408a      	lsls	r2, r1
 801a5ea:	685b      	ldr	r3, [r3, #4]
 801a5ec:	4611      	mov	r1, r2
 801a5ee:	2400      	movs	r4, #0
 801a5f0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801a5f4:	fbc1 2403 	smlal	r2, r4, r1, r3
 801a5f8:	0fd2      	lsrs	r2, r2, #31
 801a5fa:	2800      	cmp	r0, #0
 801a5fc:	ea42 0544 	orr.w	r5, r2, r4, lsl #1
 801a600:	dc0d      	bgt.n	801a61e <arm_nn_mat_mult_nt_t_s4+0x1b06>
 801a602:	4240      	negs	r0, r0
 801a604:	2301      	movs	r3, #1
 801a606:	4083      	lsls	r3, r0
 801a608:	3b01      	subs	r3, #1
 801a60a:	ea05 0203 	and.w	r2, r5, r3
 801a60e:	4105      	asrs	r5, r0
 801a610:	ea4f 0363 	mov.w	r3, r3, asr #1
 801a614:	bf48      	it	mi
 801a616:	3301      	addmi	r3, #1
 801a618:	429a      	cmp	r2, r3
 801a61a:	bfc8      	it	gt
 801a61c:	3501      	addgt	r5, #1
 801a61e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a620:	9a01      	ldr	r2, [sp, #4]
 801a622:	68d8      	ldr	r0, [r3, #12]
 801a624:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a626:	ea20 71e0 	bic.w	r1, r0, r0, asr #31
 801a62a:	408a      	lsls	r2, r1
 801a62c:	68db      	ldr	r3, [r3, #12]
 801a62e:	4611      	mov	r1, r2
 801a630:	2400      	movs	r4, #0
 801a632:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801a636:	fbc1 2403 	smlal	r2, r4, r1, r3
 801a63a:	0fd2      	lsrs	r2, r2, #31
 801a63c:	2800      	cmp	r0, #0
 801a63e:	ea42 0444 	orr.w	r4, r2, r4, lsl #1
 801a642:	dc0d      	bgt.n	801a660 <arm_nn_mat_mult_nt_t_s4+0x1b48>
 801a644:	4240      	negs	r0, r0
 801a646:	2301      	movs	r3, #1
 801a648:	4083      	lsls	r3, r0
 801a64a:	3b01      	subs	r3, #1
 801a64c:	ea04 0203 	and.w	r2, r4, r3
 801a650:	4104      	asrs	r4, r0
 801a652:	ea4f 0363 	mov.w	r3, r3, asr #1
 801a656:	bf48      	it	mi
 801a658:	3301      	addmi	r3, #1
 801a65a:	429a      	cmp	r2, r3
 801a65c:	bfc8      	it	gt
 801a65e:	3401      	addgt	r4, #1
 801a660:	9a40      	ldr	r2, [sp, #256]	; 0x100
 801a662:	9b40      	ldr	r3, [sp, #256]	; 0x100
 801a664:	4414      	add	r4, r2
 801a666:	9a41      	ldr	r2, [sp, #260]	; 0x104
 801a668:	442b      	add	r3, r5
 801a66a:	4293      	cmp	r3, r2
 801a66c:	bfb8      	it	lt
 801a66e:	4613      	movlt	r3, r2
 801a670:	4294      	cmp	r4, r2
 801a672:	bfb8      	it	lt
 801a674:	4614      	movlt	r4, r2
 801a676:	9a42      	ldr	r2, [sp, #264]	; 0x108
 801a678:	4293      	cmp	r3, r2
 801a67a:	bfa8      	it	ge
 801a67c:	4613      	movge	r3, r2
 801a67e:	9a02      	ldr	r2, [sp, #8]
 801a680:	7053      	strb	r3, [r2, #1]
 801a682:	9b42      	ldr	r3, [sp, #264]	; 0x108
 801a684:	429c      	cmp	r4, r3
 801a686:	bfa8      	it	ge
 801a688:	461c      	movge	r4, r3
 801a68a:	70d4      	strb	r4, [r2, #3]
 801a68c:	f7ff b864 	b.w	8019758 <arm_nn_mat_mult_nt_t_s4+0xc40>
 801a690:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a692:	449a      	add	sl, r3
 801a694:	e5b2      	b.n	801a1fc <arm_nn_mat_mult_nt_t_s4+0x16e4>
 801a696:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a698:	9307      	str	r3, [sp, #28]
 801a69a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801a69c:	9302      	str	r3, [sp, #8]
 801a69e:	f7ff b857 	b.w	8019750 <arm_nn_mat_mult_nt_t_s4+0xc38>
 801a6a2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a6a4:	b10b      	cbz	r3, 801a6aa <arm_nn_mat_mult_nt_t_s4+0x1b92>
 801a6a6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a6a8:	589b      	ldr	r3, [r3, r2]
 801a6aa:	9a03      	ldr	r2, [sp, #12]
 801a6ac:	2a00      	cmp	r2, #0
 801a6ae:	f040 8134 	bne.w	801a91a <arm_nn_mat_mult_nt_t_s4+0x1e02>
 801a6b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a6b4:	9921      	ldr	r1, [sp, #132]	; 0x84
 801a6b6:	2a00      	cmp	r2, #0
 801a6b8:	f340 8157 	ble.w	801a96a <arm_nn_mat_mult_nt_t_s4+0x1e52>
 801a6bc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801a6be:	9800      	ldr	r0, [sp, #0]
 801a6c0:	188f      	adds	r7, r1, r2
 801a6c2:	880a      	ldrh	r2, [r1, #0]
 801a6c4:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 801a6c8:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 801a6ca:	6804      	ldr	r4, [r0, #0]
 801a6cc:	fa2e f684 	sxtab16	r6, lr, r4
 801a6d0:	022a      	lsls	r2, r5, #8
 801a6d2:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 801a6d6:	b2ed      	uxtb	r5, r5
 801a6d8:	432a      	orrs	r2, r5
 801a6da:	0115      	lsls	r5, r2, #4
 801a6dc:	fa2f f585 	sxtb16	r5, r5
 801a6e0:	fa2f f282 	sxtb16	r2, r2
 801a6e4:	ea4f 1535 	mov.w	r5, r5, ror #4
 801a6e8:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a6ec:	fa2f f585 	sxtb16	r5, r5
 801a6f0:	fa2f f282 	sxtb16	r2, r2
 801a6f4:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 801a6f8:	fb25 3306 	smlad	r3, r5, r6, r3
 801a6fc:	fb22 3204 	smlad	r2, r2, r4, r3
 801a700:	884b      	ldrh	r3, [r1, #2]
 801a702:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a706:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a708:	6845      	ldr	r5, [r0, #4]
 801a70a:	0223      	lsls	r3, r4, #8
 801a70c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a710:	b2e4      	uxtb	r4, r4
 801a712:	4323      	orrs	r3, r4
 801a714:	011e      	lsls	r6, r3, #4
 801a716:	fa2f f686 	sxtb16	r6, r6
 801a71a:	fa2f f483 	sxtb16	r4, r3
 801a71e:	ea4f 1434 	mov.w	r4, r4, ror #4
 801a722:	ea4f 1336 	mov.w	r3, r6, ror #4
 801a726:	fa2f f484 	sxtb16	r4, r4
 801a72a:	fa2f f383 	sxtb16	r3, r3
 801a72e:	fa2e f685 	sxtab16	r6, lr, r5
 801a732:	fa2e f595 	sxtab16	r5, lr, r5, ror #8
 801a736:	fb23 2206 	smlad	r2, r3, r6, r2
 801a73a:	fb24 2405 	smlad	r4, r4, r5, r2
 801a73e:	888b      	ldrh	r3, [r1, #4]
 801a740:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a744:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a746:	6885      	ldr	r5, [r0, #8]
 801a748:	0213      	lsls	r3, r2, #8
 801a74a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a74e:	b2d2      	uxtb	r2, r2
 801a750:	4313      	orrs	r3, r2
 801a752:	011e      	lsls	r6, r3, #4
 801a754:	fa2f f686 	sxtb16	r6, r6
 801a758:	fa2f f283 	sxtb16	r2, r3
 801a75c:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a760:	ea4f 1336 	mov.w	r3, r6, ror #4
 801a764:	fa2f f282 	sxtb16	r2, r2
 801a768:	fa2f f383 	sxtb16	r3, r3
 801a76c:	fa2e f685 	sxtab16	r6, lr, r5
 801a770:	fa2e f595 	sxtab16	r5, lr, r5, ror #8
 801a774:	fb23 4406 	smlad	r4, r3, r6, r4
 801a778:	fb22 4205 	smlad	r2, r2, r5, r4
 801a77c:	88cb      	ldrh	r3, [r1, #6]
 801a77e:	f8ad 30bc 	strh.w	r3, [sp, #188]	; 0xbc
 801a782:	9d2f      	ldr	r5, [sp, #188]	; 0xbc
 801a784:	68c4      	ldr	r4, [r0, #12]
 801a786:	fa2e f684 	sxtab16	r6, lr, r4
 801a78a:	022b      	lsls	r3, r5, #8
 801a78c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 801a790:	b2ed      	uxtb	r5, r5
 801a792:	432b      	orrs	r3, r5
 801a794:	011d      	lsls	r5, r3, #4
 801a796:	fa2f f585 	sxtb16	r5, r5
 801a79a:	fa2f f383 	sxtb16	r3, r3
 801a79e:	3108      	adds	r1, #8
 801a7a0:	3010      	adds	r0, #16
 801a7a2:	ea4f 1535 	mov.w	r5, r5, ror #4
 801a7a6:	ea4f 1333 	mov.w	r3, r3, ror #4
 801a7aa:	fa2f f585 	sxtb16	r5, r5
 801a7ae:	fa2f f383 	sxtb16	r3, r3
 801a7b2:	fa2e f494 	sxtab16	r4, lr, r4, ror #8
 801a7b6:	fb25 2206 	smlad	r2, r5, r6, r2
 801a7ba:	fb23 2304 	smlad	r3, r3, r4, r2
 801a7be:	428f      	cmp	r7, r1
 801a7c0:	f47f af7f 	bne.w	801a6c2 <arm_nn_mat_mult_nt_t_s4+0x1baa>
 801a7c4:	9a00      	ldr	r2, [sp, #0]
 801a7c6:	9f15      	ldr	r7, [sp, #84]	; 0x54
 801a7c8:	443a      	add	r2, r7
 801a7ca:	9200      	str	r2, [sp, #0]
 801a7cc:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 801a7ce:	3a03      	subs	r2, #3
 801a7d0:	42ba      	cmp	r2, r7
 801a7d2:	f340 80cc 	ble.w	801a96e <arm_nn_mat_mult_nt_t_s4+0x1e56>
 801a7d6:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
 801a7d8:	9d00      	ldr	r5, [sp, #0]
 801a7da:	3a04      	subs	r2, #4
 801a7dc:	1bd2      	subs	r2, r2, r7
 801a7de:	ea4f 0992 	mov.w	r9, r2, lsr #2
 801a7e2:	f109 0801 	add.w	r8, r9, #1
 801a7e6:	eb01 0c48 	add.w	ip, r1, r8, lsl #1
 801a7ea:	f831 2b02 	ldrh.w	r2, [r1], #2
 801a7ee:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
 801a7f2:	9c2f      	ldr	r4, [sp, #188]	; 0xbc
 801a7f4:	f855 0b04 	ldr.w	r0, [r5], #4
 801a7f8:	fa2e f680 	sxtab16	r6, lr, r0
 801a7fc:	0222      	lsls	r2, r4, #8
 801a7fe:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
 801a802:	b2e4      	uxtb	r4, r4
 801a804:	4322      	orrs	r2, r4
 801a806:	0114      	lsls	r4, r2, #4
 801a808:	fa2f f484 	sxtb16	r4, r4
 801a80c:	fa2f f282 	sxtb16	r2, r2
 801a810:	ea4f 1434 	mov.w	r4, r4, ror #4
 801a814:	ea4f 1232 	mov.w	r2, r2, ror #4
 801a818:	fa2f f484 	sxtb16	r4, r4
 801a81c:	fa2f f282 	sxtb16	r2, r2
 801a820:	fa2e f090 	sxtab16	r0, lr, r0, ror #8
 801a824:	fb24 3306 	smlad	r3, r4, r6, r3
 801a828:	fb22 3300 	smlad	r3, r2, r0, r3
 801a82c:	4561      	cmp	r1, ip
 801a82e:	d1dc      	bne.n	801a7ea <arm_nn_mat_mult_nt_t_s4+0x1cd2>
 801a830:	9a00      	ldr	r2, [sp, #0]
 801a832:	3704      	adds	r7, #4
 801a834:	eb02 0288 	add.w	r2, r2, r8, lsl #2
 801a838:	9200      	str	r2, [sp, #0]
 801a83a:	eb07 0789 	add.w	r7, r7, r9, lsl #2
 801a83e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a840:	42ba      	cmp	r2, r7
 801a842:	dd23      	ble.n	801a88c <arm_nn_mat_mult_nt_t_s4+0x1d74>
 801a844:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a846:	1bd7      	subs	r7, r2, r7
 801a848:	9a00      	ldr	r2, [sp, #0]
 801a84a:	ea4f 0857 	mov.w	r8, r7, lsr #1
 801a84e:	1c90      	adds	r0, r2, #2
 801a850:	f10c 36ff 	add.w	r6, ip, #4294967295
 801a854:	eb0c 0757 	add.w	r7, ip, r7, lsr #1
 801a858:	f916 2f01 	ldrsb.w	r2, [r6, #1]!
 801a85c:	f910 5c02 	ldrsb.w	r5, [r0, #-2]
 801a860:	f910 4c01 	ldrsb.w	r4, [r0, #-1]
 801a864:	f342 0103 	sbfx	r1, r2, #0, #4
 801a868:	445d      	add	r5, fp
 801a86a:	445c      	add	r4, fp
 801a86c:	fb05 3301 	mla	r3, r5, r1, r3
 801a870:	1112      	asrs	r2, r2, #4
 801a872:	42be      	cmp	r6, r7
 801a874:	f100 0002 	add.w	r0, r0, #2
 801a878:	fb02 3304 	mla	r3, r2, r4, r3
 801a87c:	d1ec      	bne.n	801a858 <arm_nn_mat_mult_nt_t_s4+0x1d40>
 801a87e:	9900      	ldr	r1, [sp, #0]
 801a880:	f108 0201 	add.w	r2, r8, #1
 801a884:	4494      	add	ip, r2
 801a886:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801a88a:	9200      	str	r2, [sp, #0]
 801a88c:	9a03      	ldr	r2, [sp, #12]
 801a88e:	b162      	cbz	r2, 801a8aa <arm_nn_mat_mult_nt_t_s4+0x1d92>
 801a890:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a892:	07d2      	lsls	r2, r2, #31
 801a894:	d409      	bmi.n	801a8aa <arm_nn_mat_mult_nt_t_s4+0x1d92>
 801a896:	9900      	ldr	r1, [sp, #0]
 801a898:	f99c 2000 	ldrsb.w	r2, [ip]
 801a89c:	f991 1000 	ldrsb.w	r1, [r1]
 801a8a0:	f342 0203 	sbfx	r2, r2, #0, #4
 801a8a4:	4459      	add	r1, fp
 801a8a6:	fb01 3302 	mla	r3, r1, r2, r3
 801a8aa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a8ac:	6811      	ldr	r1, [r2, #0]
 801a8ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a8b0:	ea21 70e1 	bic.w	r0, r1, r1, asr #31
 801a8b4:	6812      	ldr	r2, [r2, #0]
 801a8b6:	fa03 f000 	lsl.w	r0, r3, r0
 801a8ba:	2400      	movs	r4, #0
 801a8bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801a8c0:	fbc0 3402 	smlal	r3, r4, r0, r2
 801a8c4:	0fdb      	lsrs	r3, r3, #31
 801a8c6:	2900      	cmp	r1, #0
 801a8c8:	ea43 0444 	orr.w	r4, r3, r4, lsl #1
 801a8cc:	dd32      	ble.n	801a934 <arm_nn_mat_mult_nt_t_s4+0x1e1c>
 801a8ce:	9b40      	ldr	r3, [sp, #256]	; 0x100
 801a8d0:	9a41      	ldr	r2, [sp, #260]	; 0x104
 801a8d2:	4423      	add	r3, r4
 801a8d4:	4293      	cmp	r3, r2
 801a8d6:	bfb8      	it	lt
 801a8d8:	4613      	movlt	r3, r2
 801a8da:	9a42      	ldr	r2, [sp, #264]	; 0x108
 801a8dc:	4293      	cmp	r3, r2
 801a8de:	bfa8      	it	ge
 801a8e0:	4613      	movge	r3, r2
 801a8e2:	9a02      	ldr	r2, [sp, #8]
 801a8e4:	7013      	strb	r3, [r2, #0]
 801a8e6:	f7ff b97e 	b.w	8019be6 <arm_nn_mat_mult_nt_t_s4+0x10ce>
 801a8ea:	e9cd 3300 	strd	r3, r3, [sp]
 801a8ee:	469b      	mov	fp, r3
 801a8f0:	469c      	mov	ip, r3
 801a8f2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a8f4:	2b00      	cmp	r3, #0
 801a8f6:	f73f aabc 	bgt.w	8019e72 <arm_nn_mat_mult_nt_t_s4+0x135a>
 801a8fa:	2300      	movs	r3, #0
 801a8fc:	461a      	mov	r2, r3
 801a8fe:	9304      	str	r3, [sp, #16]
 801a900:	9b3e      	ldr	r3, [sp, #248]	; 0xf8
 801a902:	f8dd a01c 	ldr.w	sl, [sp, #28]
 801a906:	3b03      	subs	r3, #3
 801a908:	4293      	cmp	r3, r2
 801a90a:	9308      	str	r3, [sp, #32]
 801a90c:	f73f abbd 	bgt.w	801a08a <arm_nn_mat_mult_nt_t_s4+0x1572>
 801a910:	f8dd 9090 	ldr.w	r9, [sp, #144]	; 0x90
 801a914:	9207      	str	r2, [sp, #28]
 801a916:	4611      	mov	r1, r2
 801a918:	e40e      	b.n	801a138 <arm_nn_mat_mult_nt_t_s4+0x1620>
 801a91a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a91c:	2a01      	cmp	r2, #1
 801a91e:	f47f aec8 	bne.w	801a6b2 <arm_nn_mat_mult_nt_t_s4+0x1b9a>
 801a922:	9900      	ldr	r1, [sp, #0]
 801a924:	f911 2b01 	ldrsb.w	r2, [r1], #1
 801a928:	9100      	str	r1, [sp, #0]
 801a92a:	991a      	ldr	r1, [sp, #104]	; 0x68
 801a92c:	445a      	add	r2, fp
 801a92e:	fb01 3302 	mla	r3, r1, r2, r3
 801a932:	e6be      	b.n	801a6b2 <arm_nn_mat_mult_nt_t_s4+0x1b9a>
 801a934:	4249      	negs	r1, r1
 801a936:	2301      	movs	r3, #1
 801a938:	408b      	lsls	r3, r1
 801a93a:	3b01      	subs	r3, #1
 801a93c:	ea04 0203 	and.w	r2, r4, r3
 801a940:	410c      	asrs	r4, r1
 801a942:	ea4f 0363 	mov.w	r3, r3, asr #1
 801a946:	bf48      	it	mi
 801a948:	3301      	addmi	r3, #1
 801a94a:	429a      	cmp	r2, r3
 801a94c:	bfc8      	it	gt
 801a94e:	3401      	addgt	r4, #1
 801a950:	e7bd      	b.n	801a8ce <arm_nn_mat_mult_nt_t_s4+0x1db6>
 801a952:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a954:	9300      	str	r3, [sp, #0]
 801a956:	f7ff b942 	b.w	8019bde <arm_nn_mat_mult_nt_t_s4+0x10c6>
 801a95a:	464e      	mov	r6, r9
 801a95c:	e60d      	b.n	801a57a <arm_nn_mat_mult_nt_t_s4+0x1a62>
 801a95e:	f8cd a00c 	str.w	sl, [sp, #12]
 801a962:	e5b2      	b.n	801a4ca <arm_nn_mat_mult_nt_t_s4+0x19b2>
 801a964:	9625      	str	r6, [sp, #148]	; 0x94
 801a966:	f7fe bf11 	b.w	801978c <arm_nn_mat_mult_nt_t_s4+0xc74>
 801a96a:	2700      	movs	r7, #0
 801a96c:	e72e      	b.n	801a7cc <arm_nn_mat_mult_nt_t_s4+0x1cb4>
 801a96e:	468c      	mov	ip, r1
 801a970:	e765      	b.n	801a83e <arm_nn_mat_mult_nt_t_s4+0x1d26>
 801a972:	bf00      	nop

0801a974 <arm_s8_to_s16_unordered_with_offset>:
 801a974:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a976:	eac3 4503 	pkhbt	r5, r3, r3, lsl #16
 801a97a:	1097      	asrs	r7, r2, #2
 801a97c:	2f00      	cmp	r7, #0
 801a97e:	dd2f      	ble.n	801a9e0 <arm_s8_to_s16_unordered_with_offset+0x6c>
 801a980:	eb00 0687 	add.w	r6, r0, r7, lsl #2
 801a984:	468e      	mov	lr, r1
 801a986:	f850 cb04 	ldr.w	ip, [r0], #4
 801a98a:	f10e 0e08 	add.w	lr, lr, #8
 801a98e:	42b0      	cmp	r0, r6
 801a990:	ea4f 243c 	mov.w	r4, ip, ror #8
 801a994:	fa25 fc8c 	sxtab16	ip, r5, ip
 801a998:	fa25 f484 	sxtab16	r4, r5, r4
 801a99c:	f84e cc08 	str.w	ip, [lr, #-8]
 801a9a0:	f84e 4c04 	str.w	r4, [lr, #-4]
 801a9a4:	d1ef      	bne.n	801a986 <arm_s8_to_s16_unordered_with_offset+0x12>
 801a9a6:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 801a9aa:	4250      	negs	r0, r2
 801a9ac:	f000 0003 	and.w	r0, r0, #3
 801a9b0:	f002 0203 	and.w	r2, r2, #3
 801a9b4:	bf58      	it	pl
 801a9b6:	4242      	negpl	r2, r0
 801a9b8:	2a00      	cmp	r2, #0
 801a9ba:	dd10      	ble.n	801a9de <arm_s8_to_s16_unordered_with_offset+0x6a>
 801a9bc:	f996 0000 	ldrsb.w	r0, [r6]
 801a9c0:	b29b      	uxth	r3, r3
 801a9c2:	4418      	add	r0, r3
 801a9c4:	3a01      	subs	r2, #1
 801a9c6:	8008      	strh	r0, [r1, #0]
 801a9c8:	d009      	beq.n	801a9de <arm_s8_to_s16_unordered_with_offset+0x6a>
 801a9ca:	f996 0001 	ldrsb.w	r0, [r6, #1]
 801a9ce:	2a01      	cmp	r2, #1
 801a9d0:	4418      	add	r0, r3
 801a9d2:	8048      	strh	r0, [r1, #2]
 801a9d4:	d003      	beq.n	801a9de <arm_s8_to_s16_unordered_with_offset+0x6a>
 801a9d6:	f996 2002 	ldrsb.w	r2, [r6, #2]
 801a9da:	4413      	add	r3, r2
 801a9dc:	808b      	strh	r3, [r1, #4]
 801a9de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a9e0:	4606      	mov	r6, r0
 801a9e2:	e7e2      	b.n	801a9aa <arm_s8_to_s16_unordered_with_offset+0x36>

0801a9e4 <arm_q7_to_q15_with_offset>:
 801a9e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a9e8:	eac3 4503 	pkhbt	r5, r3, r3, lsl #16
 801a9ec:	ea4f 08a2 	mov.w	r8, r2, asr #2
 801a9f0:	f1b8 0f00 	cmp.w	r8, #0
 801a9f4:	dd33      	ble.n	801aa5e <arm_q7_to_q15_with_offset+0x7a>
 801a9f6:	eb00 0788 	add.w	r7, r0, r8, lsl #2
 801a9fa:	460c      	mov	r4, r1
 801a9fc:	f850 cb04 	ldr.w	ip, [r0], #4
 801aa00:	fa25 fe8c 	sxtab16	lr, r5, ip
 801aa04:	3408      	adds	r4, #8
 801aa06:	42b8      	cmp	r0, r7
 801aa08:	ea4f 2c3c 	mov.w	ip, ip, ror #8
 801aa0c:	fa25 fc8c 	sxtab16	ip, r5, ip
 801aa10:	eacc 462e 	pkhtb	r6, ip, lr, asr #16
 801aa14:	eace 4c0c 	pkhbt	ip, lr, ip, lsl #16
 801aa18:	f844 6c04 	str.w	r6, [r4, #-4]
 801aa1c:	f844 cc08 	str.w	ip, [r4, #-8]
 801aa20:	d1ec      	bne.n	801a9fc <arm_q7_to_q15_with_offset+0x18>
 801aa22:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
 801aa26:	4250      	negs	r0, r2
 801aa28:	f000 0003 	and.w	r0, r0, #3
 801aa2c:	f002 0203 	and.w	r2, r2, #3
 801aa30:	bf58      	it	pl
 801aa32:	4242      	negpl	r2, r0
 801aa34:	2a00      	cmp	r2, #0
 801aa36:	dd10      	ble.n	801aa5a <arm_q7_to_q15_with_offset+0x76>
 801aa38:	f997 0000 	ldrsb.w	r0, [r7]
 801aa3c:	b29b      	uxth	r3, r3
 801aa3e:	4418      	add	r0, r3
 801aa40:	3a01      	subs	r2, #1
 801aa42:	8008      	strh	r0, [r1, #0]
 801aa44:	d009      	beq.n	801aa5a <arm_q7_to_q15_with_offset+0x76>
 801aa46:	f997 0001 	ldrsb.w	r0, [r7, #1]
 801aa4a:	2a01      	cmp	r2, #1
 801aa4c:	4418      	add	r0, r3
 801aa4e:	8048      	strh	r0, [r1, #2]
 801aa50:	d003      	beq.n	801aa5a <arm_q7_to_q15_with_offset+0x76>
 801aa52:	f997 2002 	ldrsb.w	r2, [r7, #2]
 801aa56:	4413      	add	r3, r2
 801aa58:	808b      	strh	r3, [r1, #4]
 801aa5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aa5e:	4607      	mov	r7, r0
 801aa60:	e7e1      	b.n	801aa26 <arm_q7_to_q15_with_offset+0x42>
 801aa62:	bf00      	nop

0801aa64 <arm_rfft_fast_init_256_f32>:
 801aa64:	b580      	push	{r7, lr}
 801aa66:	b084      	sub	sp, #16
 801aa68:	af00      	add	r7, sp, #0
 801aa6a:	6078      	str	r0, [r7, #4]
 801aa6c:	687b      	ldr	r3, [r7, #4]
 801aa6e:	2b00      	cmp	r3, #0
 801aa70:	d102      	bne.n	801aa78 <arm_rfft_fast_init_256_f32+0x14>
 801aa72:	f04f 33ff 	mov.w	r3, #4294967295
 801aa76:	e014      	b.n	801aaa2 <arm_rfft_fast_init_256_f32+0x3e>
 801aa78:	687b      	ldr	r3, [r7, #4]
 801aa7a:	4618      	mov	r0, r3
 801aa7c:	f000 f85e 	bl	801ab3c <arm_cfft_init_128_f32>
 801aa80:	4603      	mov	r3, r0
 801aa82:	73fb      	strb	r3, [r7, #15]
 801aa84:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801aa88:	2b00      	cmp	r3, #0
 801aa8a:	d002      	beq.n	801aa92 <arm_rfft_fast_init_256_f32+0x2e>
 801aa8c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801aa90:	e007      	b.n	801aaa2 <arm_rfft_fast_init_256_f32+0x3e>
 801aa92:	687b      	ldr	r3, [r7, #4]
 801aa94:	f44f 7280 	mov.w	r2, #256	; 0x100
 801aa98:	821a      	strh	r2, [r3, #16]
 801aa9a:	687b      	ldr	r3, [r7, #4]
 801aa9c:	4a03      	ldr	r2, [pc, #12]	; (801aaac <arm_rfft_fast_init_256_f32+0x48>)
 801aa9e:	615a      	str	r2, [r3, #20]
 801aaa0:	2300      	movs	r3, #0
 801aaa2:	4618      	mov	r0, r3
 801aaa4:	3710      	adds	r7, #16
 801aaa6:	46bd      	mov	sp, r7
 801aaa8:	bd80      	pop	{r7, pc}
 801aaaa:	bf00      	nop
 801aaac:	08027b70 	.word	0x08027b70

0801aab0 <arm_hanning_f32>:
 801aab0:	b580      	push	{r7, lr}
 801aab2:	b086      	sub	sp, #24
 801aab4:	af00      	add	r7, sp, #0
 801aab6:	6078      	str	r0, [r7, #4]
 801aab8:	6039      	str	r1, [r7, #0]
 801aaba:	683b      	ldr	r3, [r7, #0]
 801aabc:	ee07 3a90 	vmov	s15, r3
 801aac0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 801aac4:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 801aac8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 801aacc:	edc7 7a04 	vstr	s15, [r7, #16]
 801aad0:	2300      	movs	r3, #0
 801aad2:	617b      	str	r3, [r7, #20]
 801aad4:	e027      	b.n	801ab26 <arm_hanning_f32+0x76>
 801aad6:	697b      	ldr	r3, [r7, #20]
 801aad8:	ee07 3a90 	vmov	s15, r3
 801aadc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801aae0:	ed9f 7a15 	vldr	s14, [pc, #84]	; 801ab38 <arm_hanning_f32+0x88>
 801aae4:	ee67 7a87 	vmul.f32	s15, s15, s14
 801aae8:	ed97 7a04 	vldr	s14, [r7, #16]
 801aaec:	ee67 7a27 	vmul.f32	s15, s14, s15
 801aaf0:	edc7 7a03 	vstr	s15, [r7, #12]
 801aaf4:	ed97 0a03 	vldr	s0, [r7, #12]
 801aaf8:	f001 f8aa 	bl	801bc50 <cosf>
 801aafc:	eef0 7a40 	vmov.f32	s15, s0
 801ab00:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ab04:	ee77 7a67 	vsub.f32	s15, s14, s15
 801ab08:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801ab0c:	ee67 7a87 	vmul.f32	s15, s15, s14
 801ab10:	edc7 7a03 	vstr	s15, [r7, #12]
 801ab14:	697b      	ldr	r3, [r7, #20]
 801ab16:	009b      	lsls	r3, r3, #2
 801ab18:	687a      	ldr	r2, [r7, #4]
 801ab1a:	4413      	add	r3, r2
 801ab1c:	68fa      	ldr	r2, [r7, #12]
 801ab1e:	601a      	str	r2, [r3, #0]
 801ab20:	697b      	ldr	r3, [r7, #20]
 801ab22:	3301      	adds	r3, #1
 801ab24:	617b      	str	r3, [r7, #20]
 801ab26:	697a      	ldr	r2, [r7, #20]
 801ab28:	683b      	ldr	r3, [r7, #0]
 801ab2a:	429a      	cmp	r2, r3
 801ab2c:	d3d3      	bcc.n	801aad6 <arm_hanning_f32+0x26>
 801ab2e:	bf00      	nop
 801ab30:	bf00      	nop
 801ab32:	3718      	adds	r7, #24
 801ab34:	46bd      	mov	sp, r7
 801ab36:	bd80      	pop	{r7, pc}
 801ab38:	40490fdb 	.word	0x40490fdb

0801ab3c <arm_cfft_init_128_f32>:
 801ab3c:	b480      	push	{r7}
 801ab3e:	b085      	sub	sp, #20
 801ab40:	af00      	add	r7, sp, #0
 801ab42:	6078      	str	r0, [r7, #4]
 801ab44:	2300      	movs	r3, #0
 801ab46:	73fb      	strb	r3, [r7, #15]
 801ab48:	687b      	ldr	r3, [r7, #4]
 801ab4a:	2280      	movs	r2, #128	; 0x80
 801ab4c:	801a      	strh	r2, [r3, #0]
 801ab4e:	687b      	ldr	r3, [r7, #4]
 801ab50:	2200      	movs	r2, #0
 801ab52:	605a      	str	r2, [r3, #4]
 801ab54:	4b09      	ldr	r3, [pc, #36]	; (801ab7c <arm_cfft_init_128_f32+0x40>)
 801ab56:	899a      	ldrh	r2, [r3, #12]
 801ab58:	687b      	ldr	r3, [r7, #4]
 801ab5a:	819a      	strh	r2, [r3, #12]
 801ab5c:	4b07      	ldr	r3, [pc, #28]	; (801ab7c <arm_cfft_init_128_f32+0x40>)
 801ab5e:	689a      	ldr	r2, [r3, #8]
 801ab60:	687b      	ldr	r3, [r7, #4]
 801ab62:	609a      	str	r2, [r3, #8]
 801ab64:	4b05      	ldr	r3, [pc, #20]	; (801ab7c <arm_cfft_init_128_f32+0x40>)
 801ab66:	685a      	ldr	r2, [r3, #4]
 801ab68:	687b      	ldr	r3, [r7, #4]
 801ab6a:	605a      	str	r2, [r3, #4]
 801ab6c:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801ab70:	4618      	mov	r0, r3
 801ab72:	3714      	adds	r7, #20
 801ab74:	46bd      	mov	sp, r7
 801ab76:	f85d 7b04 	ldr.w	r7, [sp], #4
 801ab7a:	4770      	bx	lr
 801ab7c:	08027f70 	.word	0x08027f70

0801ab80 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 801ab80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801ab82:	2400      	movs	r4, #0
 801ab84:	2310      	movs	r3, #16
 801ab86:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801ab8a:	6803      	ldr	r3, [r0, #0]
 801ab8c:	4615      	mov	r5, r2
 801ab8e:	699e      	ldr	r6, [r3, #24]
 801ab90:	6812      	ldr	r2, [r2, #0]
 801ab92:	466b      	mov	r3, sp
 801ab94:	e9cd 4400 	strd	r4, r4, [sp]
 801ab98:	47b0      	blx	r6
 801ab9a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 801ab9e:	f003 0306 	and.w	r3, r3, #6
 801aba2:	2b06      	cmp	r3, #6
 801aba4:	bf03      	ittte	eq
 801aba6:	9b00      	ldreq	r3, [sp, #0]
 801aba8:	602b      	streq	r3, [r5, #0]
 801abaa:	2001      	moveq	r0, #1
 801abac:	4620      	movne	r0, r4
 801abae:	b004      	add	sp, #16
 801abb0:	bd70      	pop	{r4, r5, r6, pc}

0801abb2 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 801abb2:	9800      	ldr	r0, [sp, #0]
 801abb4:	4290      	cmp	r0, r2
 801abb6:	bf14      	ite	ne
 801abb8:	2001      	movne	r0, #1
 801abba:	2006      	moveq	r0, #6
 801abbc:	4770      	bx	lr
	...

0801abc0 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 801abc0:	b510      	push	{r4, lr}
 801abc2:	4b03      	ldr	r3, [pc, #12]	; (801abd0 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 801abc4:	6003      	str	r3, [r0, #0]
 801abc6:	4604      	mov	r4, r0
 801abc8:	f000 fc2d 	bl	801b426 <_ZNSt9type_infoD1Ev>
 801abcc:	4620      	mov	r0, r4
 801abce:	bd10      	pop	{r4, pc}
 801abd0:	08027fb8 	.word	0x08027fb8

0801abd4 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 801abd4:	b510      	push	{r4, lr}
 801abd6:	4604      	mov	r4, r0
 801abd8:	f7ff fff2 	bl	801abc0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 801abdc:	4620      	mov	r0, r4
 801abde:	2108      	movs	r1, #8
 801abe0:	f000 f842 	bl	801ac68 <_ZdlPvj>
 801abe4:	4620      	mov	r0, r4
 801abe6:	bd10      	pop	{r4, pc}

0801abe8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 801abe8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801abec:	461f      	mov	r7, r3
 801abee:	e9dd 3408 	ldrd	r3, r4, [sp, #32]
 801abf2:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801abf6:	4598      	cmp	r8, r3
 801abf8:	4606      	mov	r6, r0
 801abfa:	4615      	mov	r5, r2
 801abfc:	d107      	bne.n	801ac0e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x26>
 801abfe:	9907      	ldr	r1, [sp, #28]
 801ac00:	f000 fc14 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801ac04:	b118      	cbz	r0, 801ac0e <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x26>
 801ac06:	7165      	strb	r5, [r4, #5]
 801ac08:	2000      	movs	r0, #0
 801ac0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ac0e:	4639      	mov	r1, r7
 801ac10:	4630      	mov	r0, r6
 801ac12:	f000 fc0b 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801ac16:	2800      	cmp	r0, #0
 801ac18:	d0f6      	beq.n	801ac08 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x20>
 801ac1a:	2301      	movs	r3, #1
 801ac1c:	f8c4 8000 	str.w	r8, [r4]
 801ac20:	7125      	strb	r5, [r4, #4]
 801ac22:	71a3      	strb	r3, [r4, #6]
 801ac24:	e7f0      	b.n	801ac08 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x20>

0801ac26 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 801ac26:	b538      	push	{r3, r4, r5, lr}
 801ac28:	4615      	mov	r5, r2
 801ac2a:	461c      	mov	r4, r3
 801ac2c:	f000 fbfe 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801ac30:	b120      	cbz	r0, 801ac3c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 801ac32:	2308      	movs	r3, #8
 801ac34:	60e3      	str	r3, [r4, #12]
 801ac36:	2306      	movs	r3, #6
 801ac38:	6025      	str	r5, [r4, #0]
 801ac3a:	7123      	strb	r3, [r4, #4]
 801ac3c:	bd38      	pop	{r3, r4, r5, pc}

0801ac3e <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 801ac3e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ac40:	4605      	mov	r5, r0
 801ac42:	460c      	mov	r4, r1
 801ac44:	9201      	str	r2, [sp, #4]
 801ac46:	461e      	mov	r6, r3
 801ac48:	f000 fbf0 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801ac4c:	b950      	cbnz	r0, 801ac64 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 801ac4e:	2e03      	cmp	r6, #3
 801ac50:	d808      	bhi.n	801ac64 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x26>
 801ac52:	6823      	ldr	r3, [r4, #0]
 801ac54:	9a01      	ldr	r2, [sp, #4]
 801ac56:	695b      	ldr	r3, [r3, #20]
 801ac58:	4629      	mov	r1, r5
 801ac5a:	4620      	mov	r0, r4
 801ac5c:	b002      	add	sp, #8
 801ac5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801ac62:	4718      	bx	r3
 801ac64:	b002      	add	sp, #8
 801ac66:	bd70      	pop	{r4, r5, r6, pc}

0801ac68 <_ZdlPvj>:
 801ac68:	f000 be2a 	b.w	801b8c0 <_ZdlPv>

0801ac6c <__cxa_end_cleanup>:
 801ac6c:	b41e      	push	{r1, r2, r3, r4}
 801ac6e:	f000 f89c 	bl	801adaa <__gnu_end_cleanup>
 801ac72:	bc1e      	pop	{r1, r2, r3, r4}
 801ac74:	f7e6 ff72 	bl	8001b5c <_Unwind_Resume>

0801ac78 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 801ac78:	7803      	ldrb	r3, [r0, #0]
 801ac7a:	2b47      	cmp	r3, #71	; 0x47
 801ac7c:	d117      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801ac7e:	7843      	ldrb	r3, [r0, #1]
 801ac80:	2b4e      	cmp	r3, #78	; 0x4e
 801ac82:	d114      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801ac84:	7883      	ldrb	r3, [r0, #2]
 801ac86:	2b55      	cmp	r3, #85	; 0x55
 801ac88:	d111      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801ac8a:	78c3      	ldrb	r3, [r0, #3]
 801ac8c:	2b43      	cmp	r3, #67	; 0x43
 801ac8e:	d10e      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801ac90:	7903      	ldrb	r3, [r0, #4]
 801ac92:	2b43      	cmp	r3, #67	; 0x43
 801ac94:	d10b      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801ac96:	7943      	ldrb	r3, [r0, #5]
 801ac98:	2b2b      	cmp	r3, #43	; 0x2b
 801ac9a:	d108      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801ac9c:	7983      	ldrb	r3, [r0, #6]
 801ac9e:	2b2b      	cmp	r3, #43	; 0x2b
 801aca0:	d105      	bne.n	801acae <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801aca2:	79c0      	ldrb	r0, [r0, #7]
 801aca4:	2801      	cmp	r0, #1
 801aca6:	bf8c      	ite	hi
 801aca8:	2000      	movhi	r0, #0
 801acaa:	2001      	movls	r0, #1
 801acac:	4770      	bx	lr
 801acae:	2000      	movs	r0, #0
 801acb0:	4770      	bx	lr
	...

0801acb4 <__cxa_type_match>:
 801acb4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801acb8:	461d      	mov	r5, r3
 801acba:	7803      	ldrb	r3, [r0, #0]
 801acbc:	2b47      	cmp	r3, #71	; 0x47
 801acbe:	460e      	mov	r6, r1
 801acc0:	4602      	mov	r2, r0
 801acc2:	79c1      	ldrb	r1, [r0, #7]
 801acc4:	d113      	bne.n	801acee <__cxa_type_match+0x3a>
 801acc6:	7843      	ldrb	r3, [r0, #1]
 801acc8:	2b4e      	cmp	r3, #78	; 0x4e
 801acca:	d110      	bne.n	801acee <__cxa_type_match+0x3a>
 801accc:	7883      	ldrb	r3, [r0, #2]
 801acce:	2b55      	cmp	r3, #85	; 0x55
 801acd0:	d10d      	bne.n	801acee <__cxa_type_match+0x3a>
 801acd2:	78c3      	ldrb	r3, [r0, #3]
 801acd4:	2b43      	cmp	r3, #67	; 0x43
 801acd6:	d10a      	bne.n	801acee <__cxa_type_match+0x3a>
 801acd8:	7903      	ldrb	r3, [r0, #4]
 801acda:	2b46      	cmp	r3, #70	; 0x46
 801acdc:	d107      	bne.n	801acee <__cxa_type_match+0x3a>
 801acde:	7943      	ldrb	r3, [r0, #5]
 801ace0:	2b4f      	cmp	r3, #79	; 0x4f
 801ace2:	d104      	bne.n	801acee <__cxa_type_match+0x3a>
 801ace4:	7983      	ldrb	r3, [r0, #6]
 801ace6:	2b52      	cmp	r3, #82	; 0x52
 801ace8:	d101      	bne.n	801acee <__cxa_type_match+0x3a>
 801acea:	2900      	cmp	r1, #0
 801acec:	d031      	beq.n	801ad52 <__cxa_type_match+0x9e>
 801acee:	4610      	mov	r0, r2
 801acf0:	f7ff ffc2 	bl	801ac78 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801acf4:	f080 0001 	eor.w	r0, r0, #1
 801acf8:	b2c4      	uxtb	r4, r0
 801acfa:	2300      	movs	r3, #0
 801acfc:	2000      	movs	r0, #0
 801acfe:	9001      	str	r0, [sp, #4]
 801ad00:	bb53      	cbnz	r3, 801ad58 <__cxa_type_match+0xa4>
 801ad02:	bb5c      	cbnz	r4, 801ad5c <__cxa_type_match+0xa8>
 801ad04:	2901      	cmp	r1, #1
 801ad06:	bf0a      	itet	eq
 801ad08:	f852 3c20 	ldreq.w	r3, [r2, #-32]
 801ad0c:	f1a2 0320 	subne.w	r3, r2, #32
 801ad10:	3b78      	subeq	r3, #120	; 0x78
 801ad12:	2901      	cmp	r1, #1
 801ad14:	bf08      	it	eq
 801ad16:	f852 2c20 	ldreq.w	r2, [r2, #-32]
 801ad1a:	681c      	ldr	r4, [r3, #0]
 801ad1c:	bf18      	it	ne
 801ad1e:	3258      	addne	r2, #88	; 0x58
 801ad20:	9201      	str	r2, [sp, #4]
 801ad22:	6823      	ldr	r3, [r4, #0]
 801ad24:	4620      	mov	r0, r4
 801ad26:	689b      	ldr	r3, [r3, #8]
 801ad28:	4798      	blx	r3
 801ad2a:	b1c8      	cbz	r0, 801ad60 <__cxa_type_match+0xac>
 801ad2c:	9b01      	ldr	r3, [sp, #4]
 801ad2e:	681b      	ldr	r3, [r3, #0]
 801ad30:	9301      	str	r3, [sp, #4]
 801ad32:	2702      	movs	r7, #2
 801ad34:	6833      	ldr	r3, [r6, #0]
 801ad36:	aa01      	add	r2, sp, #4
 801ad38:	f8d3 8010 	ldr.w	r8, [r3, #16]
 801ad3c:	4621      	mov	r1, r4
 801ad3e:	2301      	movs	r3, #1
 801ad40:	4630      	mov	r0, r6
 801ad42:	47c0      	blx	r8
 801ad44:	b170      	cbz	r0, 801ad64 <__cxa_type_match+0xb0>
 801ad46:	9b01      	ldr	r3, [sp, #4]
 801ad48:	602b      	str	r3, [r5, #0]
 801ad4a:	4638      	mov	r0, r7
 801ad4c:	b002      	add	sp, #8
 801ad4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ad52:	2301      	movs	r3, #1
 801ad54:	460c      	mov	r4, r1
 801ad56:	e7d1      	b.n	801acfc <__cxa_type_match+0x48>
 801ad58:	4c03      	ldr	r4, [pc, #12]	; (801ad68 <__cxa_type_match+0xb4>)
 801ad5a:	e7e2      	b.n	801ad22 <__cxa_type_match+0x6e>
 801ad5c:	4c03      	ldr	r4, [pc, #12]	; (801ad6c <__cxa_type_match+0xb8>)
 801ad5e:	e7e0      	b.n	801ad22 <__cxa_type_match+0x6e>
 801ad60:	2701      	movs	r7, #1
 801ad62:	e7e7      	b.n	801ad34 <__cxa_type_match+0x80>
 801ad64:	4607      	mov	r7, r0
 801ad66:	e7f0      	b.n	801ad4a <__cxa_type_match+0x96>
 801ad68:	08027fdc 	.word	0x08027fdc
 801ad6c:	08027fe4 	.word	0x08027fe4

0801ad70 <__cxa_begin_cleanup>:
 801ad70:	b510      	push	{r4, lr}
 801ad72:	4604      	mov	r4, r0
 801ad74:	f000 f832 	bl	801addc <__cxa_get_globals>
 801ad78:	4602      	mov	r2, r0
 801ad7a:	4620      	mov	r0, r4
 801ad7c:	f1a4 0120 	sub.w	r1, r4, #32
 801ad80:	f7ff ff7a 	bl	801ac78 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801ad84:	b160      	cbz	r0, 801ada0 <__cxa_begin_cleanup+0x30>
 801ad86:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801ad8a:	3301      	adds	r3, #1
 801ad8c:	2b01      	cmp	r3, #1
 801ad8e:	f844 3c04 	str.w	r3, [r4, #-4]
 801ad92:	d103      	bne.n	801ad9c <__cxa_begin_cleanup+0x2c>
 801ad94:	6893      	ldr	r3, [r2, #8]
 801ad96:	f844 3c08 	str.w	r3, [r4, #-8]
 801ad9a:	6091      	str	r1, [r2, #8]
 801ad9c:	2001      	movs	r0, #1
 801ad9e:	bd10      	pop	{r4, pc}
 801ada0:	6893      	ldr	r3, [r2, #8]
 801ada2:	2b00      	cmp	r3, #0
 801ada4:	d0f9      	beq.n	801ad9a <__cxa_begin_cleanup+0x2a>
 801ada6:	f000 faa5 	bl	801b2f4 <_ZSt9terminatev>

0801adaa <__gnu_end_cleanup>:
 801adaa:	b510      	push	{r4, lr}
 801adac:	f000 f816 	bl	801addc <__cxa_get_globals>
 801adb0:	6882      	ldr	r2, [r0, #8]
 801adb2:	4601      	mov	r1, r0
 801adb4:	b90a      	cbnz	r2, 801adba <__gnu_end_cleanup+0x10>
 801adb6:	f000 fa9d 	bl	801b2f4 <_ZSt9terminatev>
 801adba:	f102 0420 	add.w	r4, r2, #32
 801adbe:	4620      	mov	r0, r4
 801adc0:	f7ff ff5a 	bl	801ac78 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801adc4:	b140      	cbz	r0, 801add8 <__gnu_end_cleanup+0x2e>
 801adc6:	69d3      	ldr	r3, [r2, #28]
 801adc8:	3b01      	subs	r3, #1
 801adca:	61d3      	str	r3, [r2, #28]
 801adcc:	b913      	cbnz	r3, 801add4 <__gnu_end_cleanup+0x2a>
 801adce:	6990      	ldr	r0, [r2, #24]
 801add0:	6088      	str	r0, [r1, #8]
 801add2:	6193      	str	r3, [r2, #24]
 801add4:	4620      	mov	r0, r4
 801add6:	bd10      	pop	{r4, pc}
 801add8:	6088      	str	r0, [r1, #8]
 801adda:	e7fb      	b.n	801add4 <__gnu_end_cleanup+0x2a>

0801addc <__cxa_get_globals>:
 801addc:	4800      	ldr	r0, [pc, #0]	; (801ade0 <__cxa_get_globals+0x4>)
 801adde:	4770      	bx	lr
 801ade0:	20011280 	.word	0x20011280

0801ade4 <_ZL12read_uleb128PKhPm>:
 801ade4:	b530      	push	{r4, r5, lr}
 801ade6:	2300      	movs	r3, #0
 801ade8:	461a      	mov	r2, r3
 801adea:	f810 5b01 	ldrb.w	r5, [r0], #1
 801adee:	f005 047f 	and.w	r4, r5, #127	; 0x7f
 801adf2:	4094      	lsls	r4, r2
 801adf4:	4323      	orrs	r3, r4
 801adf6:	062c      	lsls	r4, r5, #24
 801adf8:	f102 0207 	add.w	r2, r2, #7
 801adfc:	d4f5      	bmi.n	801adea <_ZL12read_uleb128PKhPm+0x6>
 801adfe:	600b      	str	r3, [r1, #0]
 801ae00:	bd30      	pop	{r4, r5, pc}

0801ae02 <_ZL12read_sleb128PKhPl>:
 801ae02:	b530      	push	{r4, r5, lr}
 801ae04:	2300      	movs	r3, #0
 801ae06:	461a      	mov	r2, r3
 801ae08:	f810 4b01 	ldrb.w	r4, [r0], #1
 801ae0c:	f004 057f 	and.w	r5, r4, #127	; 0x7f
 801ae10:	4095      	lsls	r5, r2
 801ae12:	432b      	orrs	r3, r5
 801ae14:	0625      	lsls	r5, r4, #24
 801ae16:	f102 0207 	add.w	r2, r2, #7
 801ae1a:	d4f5      	bmi.n	801ae08 <_ZL12read_sleb128PKhPl+0x6>
 801ae1c:	2a1f      	cmp	r2, #31
 801ae1e:	d806      	bhi.n	801ae2e <_ZL12read_sleb128PKhPl+0x2c>
 801ae20:	0664      	lsls	r4, r4, #25
 801ae22:	bf42      	ittt	mi
 801ae24:	f04f 34ff 	movmi.w	r4, #4294967295
 801ae28:	fa04 f202 	lslmi.w	r2, r4, r2
 801ae2c:	4313      	orrmi	r3, r2
 801ae2e:	600b      	str	r3, [r1, #0]
 801ae30:	bd30      	pop	{r4, r5, pc}

0801ae32 <_ZL28read_encoded_value_with_basehjPKhPj>:
 801ae32:	2850      	cmp	r0, #80	; 0x50
 801ae34:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801ae38:	4606      	mov	r6, r0
 801ae3a:	4688      	mov	r8, r1
 801ae3c:	4615      	mov	r5, r2
 801ae3e:	461f      	mov	r7, r3
 801ae40:	d108      	bne.n	801ae54 <_ZL28read_encoded_value_with_basehjPKhPj+0x22>
 801ae42:	3203      	adds	r2, #3
 801ae44:	f022 0003 	bic.w	r0, r2, #3
 801ae48:	f850 4b04 	ldr.w	r4, [r0], #4
 801ae4c:	603c      	str	r4, [r7, #0]
 801ae4e:	b002      	add	sp, #8
 801ae50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ae54:	f000 030f 	and.w	r3, r0, #15
 801ae58:	2b0c      	cmp	r3, #12
 801ae5a:	d82e      	bhi.n	801aeba <_ZL28read_encoded_value_with_basehjPKhPj+0x88>
 801ae5c:	e8df f003 	tbb	[pc, r3]
 801ae60:	251d0725 	.word	0x251d0725
 801ae64:	2d2d2d29 	.word	0x2d2d2d29
 801ae68:	2521182d 	.word	0x2521182d
 801ae6c:	29          	.byte	0x29
 801ae6d:	00          	.byte	0x00
 801ae6e:	a901      	add	r1, sp, #4
 801ae70:	4628      	mov	r0, r5
 801ae72:	f7ff ffb7 	bl	801ade4 <_ZL12read_uleb128PKhPm>
 801ae76:	9c01      	ldr	r4, [sp, #4]
 801ae78:	2c00      	cmp	r4, #0
 801ae7a:	d0e7      	beq.n	801ae4c <_ZL28read_encoded_value_with_basehjPKhPj+0x1a>
 801ae7c:	f006 0370 	and.w	r3, r6, #112	; 0x70
 801ae80:	2b10      	cmp	r3, #16
 801ae82:	bf08      	it	eq
 801ae84:	46a8      	moveq	r8, r5
 801ae86:	4444      	add	r4, r8
 801ae88:	0633      	lsls	r3, r6, #24
 801ae8a:	bf48      	it	mi
 801ae8c:	6824      	ldrmi	r4, [r4, #0]
 801ae8e:	e7dd      	b.n	801ae4c <_ZL28read_encoded_value_with_basehjPKhPj+0x1a>
 801ae90:	a901      	add	r1, sp, #4
 801ae92:	4628      	mov	r0, r5
 801ae94:	f7ff ffb5 	bl	801ae02 <_ZL12read_sleb128PKhPl>
 801ae98:	e7ed      	b.n	801ae76 <_ZL28read_encoded_value_with_basehjPKhPj+0x44>
 801ae9a:	4628      	mov	r0, r5
 801ae9c:	f830 4b02 	ldrh.w	r4, [r0], #2
 801aea0:	e7ea      	b.n	801ae78 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 801aea2:	4628      	mov	r0, r5
 801aea4:	f930 4b02 	ldrsh.w	r4, [r0], #2
 801aea8:	e7e6      	b.n	801ae78 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 801aeaa:	4628      	mov	r0, r5
 801aeac:	f850 4b04 	ldr.w	r4, [r0], #4
 801aeb0:	e7e2      	b.n	801ae78 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 801aeb2:	4628      	mov	r0, r5
 801aeb4:	f850 4b08 	ldr.w	r4, [r0], #8
 801aeb8:	e7de      	b.n	801ae78 <_ZL28read_encoded_value_with_basehjPKhPj+0x46>
 801aeba:	f001 fd79 	bl	801c9b0 <abort>

0801aebe <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 801aebe:	b508      	push	{r3, lr}
 801aec0:	4603      	mov	r3, r0
 801aec2:	2bff      	cmp	r3, #255	; 0xff
 801aec4:	4608      	mov	r0, r1
 801aec6:	d010      	beq.n	801aeea <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 801aec8:	f003 0270 	and.w	r2, r3, #112	; 0x70
 801aecc:	2a30      	cmp	r2, #48	; 0x30
 801aece:	d012      	beq.n	801aef6 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x38>
 801aed0:	d807      	bhi.n	801aee2 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x24>
 801aed2:	2a20      	cmp	r2, #32
 801aed4:	d00b      	beq.n	801aeee <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x30>
 801aed6:	d802      	bhi.n	801aede <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 801aed8:	f013 0f60 	tst.w	r3, #96	; 0x60
 801aedc:	d005      	beq.n	801aeea <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x2c>
 801aede:	f001 fd67 	bl	801c9b0 <abort>
 801aee2:	2a40      	cmp	r2, #64	; 0x40
 801aee4:	d00b      	beq.n	801aefe <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x40>
 801aee6:	2a50      	cmp	r2, #80	; 0x50
 801aee8:	d1f9      	bne.n	801aede <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x20>
 801aeea:	2000      	movs	r0, #0
 801aeec:	bd08      	pop	{r3, pc}
 801aeee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801aef2:	f004 bb39 	b.w	801f568 <_Unwind_GetTextRelBase>
 801aef6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801aefa:	f004 bb32 	b.w	801f562 <_Unwind_GetDataRelBase>
 801aefe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801af02:	f7e7 b80b 	b.w	8001f1c <_Unwind_GetRegionStart>

0801af06 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>:
 801af06:	b513      	push	{r0, r1, r4, lr}
 801af08:	460c      	mov	r4, r1
 801af0a:	4601      	mov	r1, r0
 801af0c:	4620      	mov	r0, r4
 801af0e:	e9cd 3200 	strd	r3, r2, [sp]
 801af12:	f7ff ffd4 	bl	801aebe <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 801af16:	e9dd 3200 	ldrd	r3, r2, [sp]
 801af1a:	4601      	mov	r1, r0
 801af1c:	4620      	mov	r0, r4
 801af1e:	b002      	add	sp, #8
 801af20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801af24:	f7ff bf85 	b.w	801ae32 <_ZL28read_encoded_value_with_basehjPKhPj>

0801af28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 801af28:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801af2a:	460c      	mov	r4, r1
 801af2c:	4615      	mov	r5, r2
 801af2e:	4606      	mov	r6, r0
 801af30:	b328      	cbz	r0, 801af7e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x56>
 801af32:	f7e6 fff3 	bl	8001f1c <_Unwind_GetRegionStart>
 801af36:	4603      	mov	r3, r0
 801af38:	4620      	mov	r0, r4
 801af3a:	602b      	str	r3, [r5, #0]
 801af3c:	f810 1b01 	ldrb.w	r1, [r0], #1
 801af40:	29ff      	cmp	r1, #255	; 0xff
 801af42:	d01e      	beq.n	801af82 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5a>
 801af44:	4602      	mov	r2, r0
 801af46:	1d2b      	adds	r3, r5, #4
 801af48:	4630      	mov	r0, r6
 801af4a:	f7ff ffdc 	bl	801af06 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 801af4e:	f810 3b01 	ldrb.w	r3, [r0], #1
 801af52:	752b      	strb	r3, [r5, #20]
 801af54:	2bff      	cmp	r3, #255	; 0xff
 801af56:	d016      	beq.n	801af86 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x5e>
 801af58:	2310      	movs	r3, #16
 801af5a:	752b      	strb	r3, [r5, #20]
 801af5c:	a901      	add	r1, sp, #4
 801af5e:	f7ff ff41 	bl	801ade4 <_ZL12read_uleb128PKhPm>
 801af62:	9b01      	ldr	r3, [sp, #4]
 801af64:	4403      	add	r3, r0
 801af66:	60eb      	str	r3, [r5, #12]
 801af68:	f810 3b01 	ldrb.w	r3, [r0], #1
 801af6c:	756b      	strb	r3, [r5, #21]
 801af6e:	a901      	add	r1, sp, #4
 801af70:	f7ff ff38 	bl	801ade4 <_ZL12read_uleb128PKhPm>
 801af74:	9b01      	ldr	r3, [sp, #4]
 801af76:	4403      	add	r3, r0
 801af78:	612b      	str	r3, [r5, #16]
 801af7a:	b002      	add	sp, #8
 801af7c:	bd70      	pop	{r4, r5, r6, pc}
 801af7e:	4603      	mov	r3, r0
 801af80:	e7da      	b.n	801af38 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x10>
 801af82:	606b      	str	r3, [r5, #4]
 801af84:	e7e3      	b.n	801af4e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x26>
 801af86:	2300      	movs	r3, #0
 801af88:	e7ed      	b.n	801af66 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x3e>

0801af8a <_Unwind_GetGR>:
 801af8a:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801af8c:	ab03      	add	r3, sp, #12
 801af8e:	9300      	str	r3, [sp, #0]
 801af90:	2300      	movs	r3, #0
 801af92:	460a      	mov	r2, r1
 801af94:	4619      	mov	r1, r3
 801af96:	f7e6 fa2b 	bl	80013f0 <_Unwind_VRS_Get>
 801af9a:	9803      	ldr	r0, [sp, #12]
 801af9c:	b005      	add	sp, #20
 801af9e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801afa4 <__gxx_personality_v0>:
 801afa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afa8:	b091      	sub	sp, #68	; 0x44
 801afaa:	2300      	movs	r3, #0
 801afac:	9305      	str	r3, [sp, #20]
 801afae:	f000 0303 	and.w	r3, r0, #3
 801afb2:	2b01      	cmp	r3, #1
 801afb4:	4606      	mov	r6, r0
 801afb6:	460c      	mov	r4, r1
 801afb8:	4617      	mov	r7, r2
 801afba:	d00e      	beq.n	801afda <__gxx_personality_v0+0x36>
 801afbc:	2b02      	cmp	r3, #2
 801afbe:	d003      	beq.n	801afc8 <__gxx_personality_v0+0x24>
 801afc0:	2b00      	cmp	r3, #0
 801afc2:	d13b      	bne.n	801b03c <__gxx_personality_v0+0x98>
 801afc4:	0701      	lsls	r1, r0, #28
 801afc6:	d53b      	bpl.n	801b040 <__gxx_personality_v0+0x9c>
 801afc8:	4639      	mov	r1, r7
 801afca:	4620      	mov	r0, r4
 801afcc:	f7e6 ff90 	bl	8001ef0 <__gnu_unwind_frame>
 801afd0:	b390      	cbz	r0, 801b038 <__gxx_personality_v0+0x94>
 801afd2:	2009      	movs	r0, #9
 801afd4:	b011      	add	sp, #68	; 0x44
 801afd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801afda:	0702      	lsls	r2, r0, #28
 801afdc:	d406      	bmi.n	801afec <__gxx_personality_v0+0x48>
 801afde:	6a0d      	ldr	r5, [r1, #32]
 801afe0:	4638      	mov	r0, r7
 801afe2:	210d      	movs	r1, #13
 801afe4:	f7ff ffd1 	bl	801af8a <_Unwind_GetGR>
 801afe8:	4285      	cmp	r5, r0
 801afea:	d02b      	beq.n	801b044 <__gxx_personality_v0+0xa0>
 801afec:	2002      	movs	r0, #2
 801afee:	2300      	movs	r3, #0
 801aff0:	f006 0608 	and.w	r6, r6, #8
 801aff4:	f10d 0a28 	add.w	sl, sp, #40	; 0x28
 801aff8:	4306      	orrs	r6, r0
 801affa:	f8cd a000 	str.w	sl, [sp]
 801affe:	220c      	movs	r2, #12
 801b000:	4619      	mov	r1, r3
 801b002:	4638      	mov	r0, r7
 801b004:	940a      	str	r4, [sp, #40]	; 0x28
 801b006:	f7e6 fa19 	bl	800143c <_Unwind_VRS_Set>
 801b00a:	2e06      	cmp	r6, #6
 801b00c:	d11c      	bne.n	801b048 <__gxx_personality_v0+0xa4>
 801b00e:	f8d4 8030 	ldr.w	r8, [r4, #48]	; 0x30
 801b012:	e9d4 590a 	ldrd	r5, r9, [r4, #40]	; 0x28
 801b016:	f1b8 0f00 	cmp.w	r8, #0
 801b01a:	bf0c      	ite	eq
 801b01c:	f04f 0b01 	moveq.w	fp, #1
 801b020:	f04f 0b03 	movne.w	fp, #3
 801b024:	f016 0608 	ands.w	r6, r6, #8
 801b028:	f000 8107 	beq.w	801b23a <__gxx_personality_v0+0x296>
 801b02c:	f1bb 0f01 	cmp.w	fp, #1
 801b030:	f040 80ff 	bne.w	801b232 <__gxx_personality_v0+0x28e>
 801b034:	f000 f95e 	bl	801b2f4 <_ZSt9terminatev>
 801b038:	2008      	movs	r0, #8
 801b03a:	e7cb      	b.n	801afd4 <__gxx_personality_v0+0x30>
 801b03c:	f001 fcb8 	bl	801c9b0 <abort>
 801b040:	2001      	movs	r0, #1
 801b042:	e7d4      	b.n	801afee <__gxx_personality_v0+0x4a>
 801b044:	2006      	movs	r0, #6
 801b046:	e7d2      	b.n	801afee <__gxx_personality_v0+0x4a>
 801b048:	4638      	mov	r0, r7
 801b04a:	f7e6 ff6d 	bl	8001f28 <_Unwind_GetLanguageSpecificData>
 801b04e:	4681      	mov	r9, r0
 801b050:	2800      	cmp	r0, #0
 801b052:	d0b9      	beq.n	801afc8 <__gxx_personality_v0+0x24>
 801b054:	4652      	mov	r2, sl
 801b056:	4601      	mov	r1, r0
 801b058:	4638      	mov	r0, r7
 801b05a:	f7ff ff65 	bl	801af28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 801b05e:	4639      	mov	r1, r7
 801b060:	4605      	mov	r5, r0
 801b062:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b066:	f7ff ff2a 	bl	801aebe <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 801b06a:	210f      	movs	r1, #15
 801b06c:	900c      	str	r0, [sp, #48]	; 0x30
 801b06e:	4638      	mov	r0, r7
 801b070:	f7ff ff8b 	bl	801af8a <_Unwind_GetGR>
 801b074:	f020 0801 	bic.w	r8, r0, #1
 801b078:	f108 38ff 	add.w	r8, r8, #4294967295
 801b07c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b07e:	42ab      	cmp	r3, r5
 801b080:	f240 80bf 	bls.w	801b202 <__gxx_personality_v0+0x25e>
 801b084:	462a      	mov	r2, r5
 801b086:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
 801b08a:	ab06      	add	r3, sp, #24
 801b08c:	2000      	movs	r0, #0
 801b08e:	f7ff ff3a 	bl	801af06 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 801b092:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
 801b096:	4602      	mov	r2, r0
 801b098:	ab07      	add	r3, sp, #28
 801b09a:	2000      	movs	r0, #0
 801b09c:	f7ff ff33 	bl	801af06 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 801b0a0:	ab08      	add	r3, sp, #32
 801b0a2:	4602      	mov	r2, r0
 801b0a4:	f89d 103d 	ldrb.w	r1, [sp, #61]	; 0x3d
 801b0a8:	2000      	movs	r0, #0
 801b0aa:	f7ff ff2c 	bl	801af06 <_ZL18read_encoded_valueP15_Unwind_ContexthPKhPj>
 801b0ae:	a909      	add	r1, sp, #36	; 0x24
 801b0b0:	f7ff fe98 	bl	801ade4 <_ZL12read_uleb128PKhPm>
 801b0b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b0b6:	9a06      	ldr	r2, [sp, #24]
 801b0b8:	4413      	add	r3, r2
 801b0ba:	4543      	cmp	r3, r8
 801b0bc:	4605      	mov	r5, r0
 801b0be:	d901      	bls.n	801b0c4 <__gxx_personality_v0+0x120>
 801b0c0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b0c2:	e7db      	b.n	801b07c <__gxx_personality_v0+0xd8>
 801b0c4:	9a07      	ldr	r2, [sp, #28]
 801b0c6:	4413      	add	r3, r2
 801b0c8:	4543      	cmp	r3, r8
 801b0ca:	d9d7      	bls.n	801b07c <__gxx_personality_v0+0xd8>
 801b0cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801b0d0:	f1b8 0f00 	cmp.w	r8, #0
 801b0d4:	d001      	beq.n	801b0da <__gxx_personality_v0+0x136>
 801b0d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b0d8:	4498      	add	r8, r3
 801b0da:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b0dc:	b115      	cbz	r5, 801b0e4 <__gxx_personality_v0+0x140>
 801b0de:	980e      	ldr	r0, [sp, #56]	; 0x38
 801b0e0:	3d01      	subs	r5, #1
 801b0e2:	4405      	add	r5, r0
 801b0e4:	f1b8 0f00 	cmp.w	r8, #0
 801b0e8:	f43f af6e 	beq.w	801afc8 <__gxx_personality_v0+0x24>
 801b0ec:	2d00      	cmp	r5, #0
 801b0ee:	f000 80f2 	beq.w	801b2d6 <__gxx_personality_v0+0x332>
 801b0f2:	f016 0308 	ands.w	r3, r6, #8
 801b0f6:	9302      	str	r3, [sp, #8]
 801b0f8:	d034      	beq.n	801b164 <__gxx_personality_v0+0x1c0>
 801b0fa:	2347      	movs	r3, #71	; 0x47
 801b0fc:	7023      	strb	r3, [r4, #0]
 801b0fe:	234e      	movs	r3, #78	; 0x4e
 801b100:	7063      	strb	r3, [r4, #1]
 801b102:	2355      	movs	r3, #85	; 0x55
 801b104:	70a3      	strb	r3, [r4, #2]
 801b106:	2343      	movs	r3, #67	; 0x43
 801b108:	70e3      	strb	r3, [r4, #3]
 801b10a:	2346      	movs	r3, #70	; 0x46
 801b10c:	7123      	strb	r3, [r4, #4]
 801b10e:	234f      	movs	r3, #79	; 0x4f
 801b110:	7163      	strb	r3, [r4, #5]
 801b112:	2352      	movs	r3, #82	; 0x52
 801b114:	71a3      	strb	r3, [r4, #6]
 801b116:	2300      	movs	r3, #0
 801b118:	71e3      	strb	r3, [r4, #7]
 801b11a:	f04f 0b00 	mov.w	fp, #0
 801b11e:	a907      	add	r1, sp, #28
 801b120:	4628      	mov	r0, r5
 801b122:	f7ff fe6e 	bl	801ae02 <_ZL12read_sleb128PKhPl>
 801b126:	a908      	add	r1, sp, #32
 801b128:	9003      	str	r0, [sp, #12]
 801b12a:	f7ff fe6a 	bl	801ae02 <_ZL12read_sleb128PKhPl>
 801b12e:	9907      	ldr	r1, [sp, #28]
 801b130:	2900      	cmp	r1, #0
 801b132:	d063      	beq.n	801b1fc <__gxx_personality_v0+0x258>
 801b134:	dd3a      	ble.n	801b1ac <__gxx_personality_v0+0x208>
 801b136:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b13a:	28ff      	cmp	r0, #255	; 0xff
 801b13c:	d032      	beq.n	801b1a4 <__gxx_personality_v0+0x200>
 801b13e:	f000 0307 	and.w	r3, r0, #7
 801b142:	2b04      	cmp	r3, #4
 801b144:	f63f af7a 	bhi.w	801b03c <__gxx_personality_v0+0x98>
 801b148:	a201      	add	r2, pc, #4	; (adr r2, 801b150 <__gxx_personality_v0+0x1ac>)
 801b14a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801b14e:	bf00      	nop
 801b150:	0801b1a9 	.word	0x0801b1a9
 801b154:	0801b03d 	.word	0x0801b03d
 801b158:	0801b177 	.word	0x0801b177
 801b15c:	0801b1a9 	.word	0x0801b1a9
 801b160:	0801b1a1 	.word	0x0801b1a1
 801b164:	79e3      	ldrb	r3, [r4, #7]
 801b166:	2b01      	cmp	r3, #1
 801b168:	bf0c      	ite	eq
 801b16a:	f854 3c20 	ldreq.w	r3, [r4, #-32]
 801b16e:	f104 0358 	addne.w	r3, r4, #88	; 0x58
 801b172:	9305      	str	r3, [sp, #20]
 801b174:	e7d1      	b.n	801b11a <__gxx_personality_v0+0x176>
 801b176:	2502      	movs	r5, #2
 801b178:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b17a:	ab09      	add	r3, sp, #36	; 0x24
 801b17c:	fb05 2211 	mls	r2, r5, r1, r2
 801b180:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b182:	f7ff fe56 	bl	801ae32 <_ZL28read_encoded_value_with_basehjPKhPj>
 801b186:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b188:	b131      	cbz	r1, 801b198 <__gxx_personality_v0+0x1f4>
 801b18a:	b35c      	cbz	r4, 801b1e4 <__gxx_personality_v0+0x240>
 801b18c:	ab05      	add	r3, sp, #20
 801b18e:	2200      	movs	r2, #0
 801b190:	4620      	mov	r0, r4
 801b192:	f7ff fd8f 	bl	801acb4 <__cxa_type_match>
 801b196:	b328      	cbz	r0, 801b1e4 <__gxx_personality_v0+0x240>
 801b198:	9d07      	ldr	r5, [sp, #28]
 801b19a:	f04f 0b03 	mov.w	fp, #3
 801b19e:	e034      	b.n	801b20a <__gxx_personality_v0+0x266>
 801b1a0:	2508      	movs	r5, #8
 801b1a2:	e7e9      	b.n	801b178 <__gxx_personality_v0+0x1d4>
 801b1a4:	2500      	movs	r5, #0
 801b1a6:	e7e7      	b.n	801b178 <__gxx_personality_v0+0x1d4>
 801b1a8:	2504      	movs	r5, #4
 801b1aa:	e7e5      	b.n	801b178 <__gxx_personality_v0+0x1d4>
 801b1ac:	f1c1 517f 	rsb	r1, r1, #1069547520	; 0x3fc00000
 801b1b0:	f501 117f 	add.w	r1, r1, #4177920	; 0x3fc000
 801b1b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b1b6:	f501 517f 	add.w	r1, r1, #16320	; 0x3fc0
 801b1ba:	313f      	adds	r1, #63	; 0x3f
 801b1bc:	eb03 0581 	add.w	r5, r3, r1, lsl #2
 801b1c0:	b1bc      	cbz	r4, 801b1f2 <__gxx_personality_v0+0x24e>
 801b1c2:	9a02      	ldr	r2, [sp, #8]
 801b1c4:	b9aa      	cbnz	r2, 801b1f2 <__gxx_personality_v0+0x24e>
 801b1c6:	9b05      	ldr	r3, [sp, #20]
 801b1c8:	9309      	str	r3, [sp, #36]	; 0x24
 801b1ca:	3d04      	subs	r5, #4
 801b1cc:	f855 1f04 	ldr.w	r1, [r5, #4]!
 801b1d0:	2900      	cmp	r1, #0
 801b1d2:	d0e1      	beq.n	801b198 <__gxx_personality_v0+0x1f4>
 801b1d4:	ab09      	add	r3, sp, #36	; 0x24
 801b1d6:	2200      	movs	r2, #0
 801b1d8:	4429      	add	r1, r5
 801b1da:	4620      	mov	r0, r4
 801b1dc:	f7ff fd6a 	bl	801acb4 <__cxa_type_match>
 801b1e0:	2800      	cmp	r0, #0
 801b1e2:	d0f3      	beq.n	801b1cc <__gxx_personality_v0+0x228>
 801b1e4:	9d08      	ldr	r5, [sp, #32]
 801b1e6:	2d00      	cmp	r5, #0
 801b1e8:	d071      	beq.n	801b2ce <__gxx_personality_v0+0x32a>
 801b1ea:	9b03      	ldr	r3, [sp, #12]
 801b1ec:	442b      	add	r3, r5
 801b1ee:	461d      	mov	r5, r3
 801b1f0:	e795      	b.n	801b11e <__gxx_personality_v0+0x17a>
 801b1f2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 801b1f6:	2b00      	cmp	r3, #0
 801b1f8:	d1f4      	bne.n	801b1e4 <__gxx_personality_v0+0x240>
 801b1fa:	e7cd      	b.n	801b198 <__gxx_personality_v0+0x1f4>
 801b1fc:	f04f 0b01 	mov.w	fp, #1
 801b200:	e7f0      	b.n	801b1e4 <__gxx_personality_v0+0x240>
 801b202:	2500      	movs	r5, #0
 801b204:	46a8      	mov	r8, r5
 801b206:	f04f 0b01 	mov.w	fp, #1
 801b20a:	07f3      	lsls	r3, r6, #31
 801b20c:	f57f af0a 	bpl.w	801b024 <__gxx_personality_v0+0x80>
 801b210:	f1bb 0f02 	cmp.w	fp, #2
 801b214:	f43f aed8 	beq.w	801afc8 <__gxx_personality_v0+0x24>
 801b218:	210d      	movs	r1, #13
 801b21a:	4638      	mov	r0, r7
 801b21c:	9e05      	ldr	r6, [sp, #20]
 801b21e:	f7ff feb4 	bl	801af8a <_Unwind_GetGR>
 801b222:	e9c4 590a 	strd	r5, r9, [r4, #40]	; 0x28
 801b226:	e9c4 0608 	strd	r0, r6, [r4, #32]
 801b22a:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
 801b22e:	2006      	movs	r0, #6
 801b230:	e6d0      	b.n	801afd4 <__gxx_personality_v0+0x30>
 801b232:	2d00      	cmp	r5, #0
 801b234:	da22      	bge.n	801b27c <__gxx_personality_v0+0x2d8>
 801b236:	f000 f86f 	bl	801b318 <_ZSt10unexpectedv>
 801b23a:	f1bb 0f01 	cmp.w	fp, #1
 801b23e:	d102      	bne.n	801b246 <__gxx_personality_v0+0x2a2>
 801b240:	4620      	mov	r0, r4
 801b242:	f000 fb5c 	bl	801b8fe <__cxa_call_terminate>
 801b246:	2d00      	cmp	r5, #0
 801b248:	da18      	bge.n	801b27c <__gxx_personality_v0+0x2d8>
 801b24a:	4652      	mov	r2, sl
 801b24c:	4649      	mov	r1, r9
 801b24e:	4638      	mov	r0, r7
 801b250:	f7ff fe6a 	bl	801af28 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 801b254:	f89d 003c 	ldrb.w	r0, [sp, #60]	; 0x3c
 801b258:	4639      	mov	r1, r7
 801b25a:	f7ff fe30 	bl	801aebe <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 801b25e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b260:	900c      	str	r0, [sp, #48]	; 0x30
 801b262:	43eb      	mvns	r3, r5
 801b264:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b268:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
 801b26c:	b10a      	cbz	r2, 801b272 <__gxx_personality_v0+0x2ce>
 801b26e:	3601      	adds	r6, #1
 801b270:	e7fa      	b.n	801b268 <__gxx_personality_v0+0x2c4>
 801b272:	2204      	movs	r2, #4
 801b274:	e9c4 600a 	strd	r6, r0, [r4, #40]	; 0x28
 801b278:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 801b27c:	2300      	movs	r3, #0
 801b27e:	ae09      	add	r6, sp, #36	; 0x24
 801b280:	461a      	mov	r2, r3
 801b282:	4619      	mov	r1, r3
 801b284:	9600      	str	r6, [sp, #0]
 801b286:	4638      	mov	r0, r7
 801b288:	9409      	str	r4, [sp, #36]	; 0x24
 801b28a:	f7e6 f8d7 	bl	800143c <_Unwind_VRS_Set>
 801b28e:	2300      	movs	r3, #0
 801b290:	4619      	mov	r1, r3
 801b292:	2201      	movs	r2, #1
 801b294:	9600      	str	r6, [sp, #0]
 801b296:	4638      	mov	r0, r7
 801b298:	9509      	str	r5, [sp, #36]	; 0x24
 801b29a:	f7e6 f8cf 	bl	800143c <_Unwind_VRS_Set>
 801b29e:	210f      	movs	r1, #15
 801b2a0:	4638      	mov	r0, r7
 801b2a2:	f7ff fe72 	bl	801af8a <_Unwind_GetGR>
 801b2a6:	f000 0001 	and.w	r0, r0, #1
 801b2aa:	ea40 0008 	orr.w	r0, r0, r8
 801b2ae:	2300      	movs	r3, #0
 801b2b0:	9009      	str	r0, [sp, #36]	; 0x24
 801b2b2:	9600      	str	r6, [sp, #0]
 801b2b4:	220f      	movs	r2, #15
 801b2b6:	4619      	mov	r1, r3
 801b2b8:	4638      	mov	r0, r7
 801b2ba:	f7e6 f8bf 	bl	800143c <_Unwind_VRS_Set>
 801b2be:	f1bb 0f02 	cmp.w	fp, #2
 801b2c2:	d102      	bne.n	801b2ca <__gxx_personality_v0+0x326>
 801b2c4:	4620      	mov	r0, r4
 801b2c6:	f7ff fd53 	bl	801ad70 <__cxa_begin_cleanup>
 801b2ca:	2007      	movs	r0, #7
 801b2cc:	e682      	b.n	801afd4 <__gxx_personality_v0+0x30>
 801b2ce:	f1bb 0f00 	cmp.w	fp, #0
 801b2d2:	f43f ae79 	beq.w	801afc8 <__gxx_personality_v0+0x24>
 801b2d6:	f04f 0b02 	mov.w	fp, #2
 801b2da:	e796      	b.n	801b20a <__gxx_personality_v0+0x266>

0801b2dc <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b2dc:	b508      	push	{r3, lr}
 801b2de:	4780      	blx	r0
 801b2e0:	f001 fb66 	bl	801c9b0 <abort>

0801b2e4 <_ZSt13get_terminatev>:
 801b2e4:	4b02      	ldr	r3, [pc, #8]	; (801b2f0 <_ZSt13get_terminatev+0xc>)
 801b2e6:	6818      	ldr	r0, [r3, #0]
 801b2e8:	f3bf 8f5b 	dmb	ish
 801b2ec:	4770      	bx	lr
 801b2ee:	bf00      	nop
 801b2f0:	20000010 	.word	0x20000010

0801b2f4 <_ZSt9terminatev>:
 801b2f4:	b508      	push	{r3, lr}
 801b2f6:	f7ff fff5 	bl	801b2e4 <_ZSt13get_terminatev>
 801b2fa:	f7ff ffef 	bl	801b2dc <_ZN10__cxxabiv111__terminateEPFvvE>

0801b2fe <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 801b2fe:	b508      	push	{r3, lr}
 801b300:	4780      	blx	r0
 801b302:	f7ff fff7 	bl	801b2f4 <_ZSt9terminatev>
	...

0801b308 <_ZSt14get_unexpectedv>:
 801b308:	4b02      	ldr	r3, [pc, #8]	; (801b314 <_ZSt14get_unexpectedv+0xc>)
 801b30a:	6818      	ldr	r0, [r3, #0]
 801b30c:	f3bf 8f5b 	dmb	ish
 801b310:	4770      	bx	lr
 801b312:	bf00      	nop
 801b314:	2000000c 	.word	0x2000000c

0801b318 <_ZSt10unexpectedv>:
 801b318:	b508      	push	{r3, lr}
 801b31a:	f7ff fff5 	bl	801b308 <_ZSt14get_unexpectedv>
 801b31e:	f7ff ffee 	bl	801b2fe <_ZN10__cxxabiv112__unexpectedEPFvvE>

0801b322 <__cxa_pure_virtual>:
 801b322:	b508      	push	{r3, lr}
 801b324:	f7ff ffe6 	bl	801b2f4 <_ZSt9terminatev>

0801b328 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 801b328:	b510      	push	{r4, lr}
 801b32a:	4b03      	ldr	r3, [pc, #12]	; (801b338 <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 801b32c:	6003      	str	r3, [r0, #0]
 801b32e:	4604      	mov	r4, r0
 801b330:	f7ff fc46 	bl	801abc0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 801b334:	4620      	mov	r0, r4
 801b336:	bd10      	pop	{r4, pc}
 801b338:	0802806c 	.word	0x0802806c

0801b33c <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 801b33c:	b510      	push	{r4, lr}
 801b33e:	4604      	mov	r4, r0
 801b340:	f7ff fff2 	bl	801b328 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>
 801b344:	4620      	mov	r0, r4
 801b346:	210c      	movs	r1, #12
 801b348:	f7ff fc8e 	bl	801ac68 <_ZdlPvj>
 801b34c:	4620      	mov	r0, r4
 801b34e:	bd10      	pop	{r4, pc}

0801b350 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 801b350:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801b352:	9f08      	ldr	r7, [sp, #32]
 801b354:	4297      	cmp	r7, r2
 801b356:	4605      	mov	r5, r0
 801b358:	460e      	mov	r6, r1
 801b35a:	4614      	mov	r4, r2
 801b35c:	d00a      	beq.n	801b374 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x24>
 801b35e:	68a8      	ldr	r0, [r5, #8]
 801b360:	6802      	ldr	r2, [r0, #0]
 801b362:	9708      	str	r7, [sp, #32]
 801b364:	6a15      	ldr	r5, [r2, #32]
 801b366:	4631      	mov	r1, r6
 801b368:	4622      	mov	r2, r4
 801b36a:	46ac      	mov	ip, r5
 801b36c:	b003      	add	sp, #12
 801b36e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801b372:	4760      	bx	ip
 801b374:	4619      	mov	r1, r3
 801b376:	9301      	str	r3, [sp, #4]
 801b378:	f000 f858 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b37c:	9b01      	ldr	r3, [sp, #4]
 801b37e:	2800      	cmp	r0, #0
 801b380:	d0ed      	beq.n	801b35e <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 801b382:	2006      	movs	r0, #6
 801b384:	b003      	add	sp, #12
 801b386:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801b388 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 801b388:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b38c:	460d      	mov	r5, r1
 801b38e:	4619      	mov	r1, r3
 801b390:	e9dd 4b0a 	ldrd	r4, fp, [sp, #40]	; 0x28
 801b394:	e9dd a60c 	ldrd	sl, r6, [sp, #48]	; 0x30
 801b398:	4681      	mov	r9, r0
 801b39a:	4617      	mov	r7, r2
 801b39c:	4698      	mov	r8, r3
 801b39e:	f000 f845 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b3a2:	b190      	cbz	r0, 801b3ca <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x42>
 801b3a4:	2d00      	cmp	r5, #0
 801b3a6:	6034      	str	r4, [r6, #0]
 801b3a8:	7137      	strb	r7, [r6, #4]
 801b3aa:	db09      	blt.n	801b3c0 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x38>
 801b3ac:	1961      	adds	r1, r4, r5
 801b3ae:	458a      	cmp	sl, r1
 801b3b0:	bf0c      	ite	eq
 801b3b2:	2106      	moveq	r1, #6
 801b3b4:	2101      	movne	r1, #1
 801b3b6:	71b1      	strb	r1, [r6, #6]
 801b3b8:	2000      	movs	r0, #0
 801b3ba:	b001      	add	sp, #4
 801b3bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3c0:	3502      	adds	r5, #2
 801b3c2:	d1f9      	bne.n	801b3b8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 801b3c4:	2301      	movs	r3, #1
 801b3c6:	71b3      	strb	r3, [r6, #6]
 801b3c8:	e7f6      	b.n	801b3b8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 801b3ca:	4554      	cmp	r4, sl
 801b3cc:	d106      	bne.n	801b3dc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x54>
 801b3ce:	4659      	mov	r1, fp
 801b3d0:	4648      	mov	r0, r9
 801b3d2:	f000 f82b 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b3d6:	b108      	cbz	r0, 801b3dc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x54>
 801b3d8:	7177      	strb	r7, [r6, #5]
 801b3da:	e7ed      	b.n	801b3b8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x30>
 801b3dc:	f8d9 0008 	ldr.w	r0, [r9, #8]
 801b3e0:	6803      	ldr	r3, [r0, #0]
 801b3e2:	e9cd a60c 	strd	sl, r6, [sp, #48]	; 0x30
 801b3e6:	e9cd 4b0a 	strd	r4, fp, [sp, #40]	; 0x28
 801b3ea:	69dc      	ldr	r4, [r3, #28]
 801b3ec:	463a      	mov	r2, r7
 801b3ee:	4643      	mov	r3, r8
 801b3f0:	4629      	mov	r1, r5
 801b3f2:	46a4      	mov	ip, r4
 801b3f4:	b001      	add	sp, #4
 801b3f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3fa:	4760      	bx	ip

0801b3fc <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 801b3fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b400:	4607      	mov	r7, r0
 801b402:	460c      	mov	r4, r1
 801b404:	4615      	mov	r5, r2
 801b406:	461e      	mov	r6, r3
 801b408:	f7ff fc0d 	bl	801ac26 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 801b40c:	b948      	cbnz	r0, 801b422 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x26>
 801b40e:	68b8      	ldr	r0, [r7, #8]
 801b410:	6803      	ldr	r3, [r0, #0]
 801b412:	699f      	ldr	r7, [r3, #24]
 801b414:	462a      	mov	r2, r5
 801b416:	4633      	mov	r3, r6
 801b418:	4621      	mov	r1, r4
 801b41a:	46bc      	mov	ip, r7
 801b41c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b420:	4760      	bx	ip
 801b422:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801b426 <_ZNSt9type_infoD1Ev>:
 801b426:	4770      	bx	lr

0801b428 <_ZNKSt9type_info14__is_pointer_pEv>:
 801b428:	2000      	movs	r0, #0
 801b42a:	4770      	bx	lr

0801b42c <_ZNKSt9type_infoeqERKS_>:
 801b42c:	4281      	cmp	r1, r0
 801b42e:	b508      	push	{r3, lr}
 801b430:	d00e      	beq.n	801b450 <_ZNKSt9type_infoeqERKS_+0x24>
 801b432:	6840      	ldr	r0, [r0, #4]
 801b434:	7803      	ldrb	r3, [r0, #0]
 801b436:	2b2a      	cmp	r3, #42	; 0x2a
 801b438:	d00c      	beq.n	801b454 <_ZNKSt9type_infoeqERKS_+0x28>
 801b43a:	6849      	ldr	r1, [r1, #4]
 801b43c:	780b      	ldrb	r3, [r1, #0]
 801b43e:	2b2a      	cmp	r3, #42	; 0x2a
 801b440:	bf08      	it	eq
 801b442:	3101      	addeq	r1, #1
 801b444:	f7e4 ff14 	bl	8000270 <strcmp>
 801b448:	fab0 f080 	clz	r0, r0
 801b44c:	0940      	lsrs	r0, r0, #5
 801b44e:	bd08      	pop	{r3, pc}
 801b450:	2001      	movs	r0, #1
 801b452:	e7fc      	b.n	801b44e <_ZNKSt9type_infoeqERKS_+0x22>
 801b454:	2000      	movs	r0, #0
 801b456:	e7fa      	b.n	801b44e <_ZNKSt9type_infoeqERKS_+0x22>

0801b458 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>:
 801b458:	b510      	push	{r4, lr}
 801b45a:	4b03      	ldr	r3, [pc, #12]	; (801b468 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev+0x10>)
 801b45c:	6003      	str	r3, [r0, #0]
 801b45e:	4604      	mov	r4, r0
 801b460:	f7ff fbae 	bl	801abc0 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 801b464:	4620      	mov	r0, r4
 801b466:	bd10      	pop	{r4, pc}
 801b468:	080280e4 	.word	0x080280e4

0801b46c <_ZN10__cxxabiv121__vmi_class_type_infoD0Ev>:
 801b46c:	b510      	push	{r4, lr}
 801b46e:	4604      	mov	r4, r0
 801b470:	f7ff fff2 	bl	801b458 <_ZN10__cxxabiv121__vmi_class_type_infoD1Ev>
 801b474:	4620      	mov	r0, r4
 801b476:	2118      	movs	r1, #24
 801b478:	f7ff fbf6 	bl	801ac68 <_ZdlPvj>
 801b47c:	4620      	mov	r0, r4
 801b47e:	bd10      	pop	{r4, pc}

0801b480 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 801b480:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b484:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b488:	454a      	cmp	r2, r9
 801b48a:	4604      	mov	r4, r0
 801b48c:	460f      	mov	r7, r1
 801b48e:	4616      	mov	r6, r2
 801b490:	469a      	mov	sl, r3
 801b492:	d024      	beq.n	801b4de <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x5e>
 801b494:	f8d4 800c 	ldr.w	r8, [r4, #12]
 801b498:	eb04 04c8 	add.w	r4, r4, r8, lsl #3
 801b49c:	f1b8 0f00 	cmp.w	r8, #0
 801b4a0:	d028      	beq.n	801b4f4 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x74>
 801b4a2:	68e5      	ldr	r5, [r4, #12]
 801b4a4:	07aa      	lsls	r2, r5, #30
 801b4a6:	d521      	bpl.n	801b4ec <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 801b4a8:	122a      	asrs	r2, r5, #8
 801b4aa:	f015 0501 	ands.w	r5, r5, #1
 801b4ae:	d003      	beq.n	801b4b8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x38>
 801b4b0:	1cfb      	adds	r3, r7, #3
 801b4b2:	d01b      	beq.n	801b4ec <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 801b4b4:	6833      	ldr	r3, [r6, #0]
 801b4b6:	589a      	ldr	r2, [r3, r2]
 801b4b8:	68a0      	ldr	r0, [r4, #8]
 801b4ba:	6803      	ldr	r3, [r0, #0]
 801b4bc:	f8cd 9000 	str.w	r9, [sp]
 801b4c0:	f8d3 b020 	ldr.w	fp, [r3, #32]
 801b4c4:	4432      	add	r2, r6
 801b4c6:	4653      	mov	r3, sl
 801b4c8:	4639      	mov	r1, r7
 801b4ca:	47d8      	blx	fp
 801b4cc:	2803      	cmp	r0, #3
 801b4ce:	d90d      	bls.n	801b4ec <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x6c>
 801b4d0:	b115      	cbz	r5, 801b4d8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>
 801b4d2:	f040 0001 	orr.w	r0, r0, #1
 801b4d6:	b2c0      	uxtb	r0, r0
 801b4d8:	b003      	add	sp, #12
 801b4da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4de:	4619      	mov	r1, r3
 801b4e0:	f7ff ffa4 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b4e4:	2800      	cmp	r0, #0
 801b4e6:	d0d5      	beq.n	801b494 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x14>
 801b4e8:	2006      	movs	r0, #6
 801b4ea:	e7f5      	b.n	801b4d8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>
 801b4ec:	f108 38ff 	add.w	r8, r8, #4294967295
 801b4f0:	3c08      	subs	r4, #8
 801b4f2:	e7d3      	b.n	801b49c <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x1c>
 801b4f4:	2001      	movs	r0, #1
 801b4f6:	e7ef      	b.n	801b4d8 <_ZNK10__cxxabiv121__vmi_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x58>

0801b4f8 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>:
 801b4f8:	b4f0      	push	{r4, r5, r6, r7}
 801b4fa:	1e0d      	subs	r5, r1, #0
 801b4fc:	9c04      	ldr	r4, [sp, #16]
 801b4fe:	db06      	blt.n	801b50e <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x16>
 801b500:	1950      	adds	r0, r2, r5
 801b502:	4284      	cmp	r4, r0
 801b504:	bf14      	ite	ne
 801b506:	2001      	movne	r0, #1
 801b508:	2006      	moveq	r0, #6
 801b50a:	bcf0      	pop	{r4, r5, r6, r7}
 801b50c:	4770      	bx	lr
 801b50e:	3502      	adds	r5, #2
 801b510:	d005      	beq.n	801b51e <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x26>
 801b512:	6805      	ldr	r5, [r0, #0]
 801b514:	9404      	str	r4, [sp, #16]
 801b516:	6a2c      	ldr	r4, [r5, #32]
 801b518:	46a4      	mov	ip, r4
 801b51a:	bcf0      	pop	{r4, r5, r6, r7}
 801b51c:	4760      	bx	ip
 801b51e:	2001      	movs	r0, #1
 801b520:	e7f3      	b.n	801b50a <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_+0x12>

0801b522 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 801b522:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b526:	b091      	sub	sp, #68	; 0x44
 801b528:	469a      	mov	sl, r3
 801b52a:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 801b52c:	9206      	str	r2, [sp, #24]
 801b52e:	68a3      	ldr	r3, [r4, #8]
 801b530:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801b532:	4688      	mov	r8, r1
 801b534:	06d9      	lsls	r1, r3, #27
 801b536:	bf44      	itt	mi
 801b538:	6883      	ldrmi	r3, [r0, #8]
 801b53a:	60a3      	strmi	r3, [r4, #8]
 801b53c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b53e:	4293      	cmp	r3, r2
 801b540:	4681      	mov	r9, r0
 801b542:	d107      	bne.n	801b554 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x32>
 801b544:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801b546:	f7ff ff71 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b54a:	b118      	cbz	r0, 801b554 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x32>
 801b54c:	9b06      	ldr	r3, [sp, #24]
 801b54e:	7163      	strb	r3, [r4, #5]
 801b550:	2700      	movs	r7, #0
 801b552:	e07f      	b.n	801b654 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x132>
 801b554:	4651      	mov	r1, sl
 801b556:	4648      	mov	r0, r9
 801b558:	f7ff ff68 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b55c:	b1c0      	cbz	r0, 801b590 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6e>
 801b55e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b560:	6023      	str	r3, [r4, #0]
 801b562:	f1b8 0f00 	cmp.w	r8, #0
 801b566:	9b06      	ldr	r3, [sp, #24]
 801b568:	7123      	strb	r3, [r4, #4]
 801b56a:	db0b      	blt.n	801b584 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x62>
 801b56c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b56e:	4498      	add	r8, r3
 801b570:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b572:	4543      	cmp	r3, r8
 801b574:	bf0c      	ite	eq
 801b576:	f04f 0806 	moveq.w	r8, #6
 801b57a:	f04f 0801 	movne.w	r8, #1
 801b57e:	f884 8006 	strb.w	r8, [r4, #6]
 801b582:	e7e5      	b.n	801b550 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e>
 801b584:	f118 0f02 	cmn.w	r8, #2
 801b588:	d1e2      	bne.n	801b550 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e>
 801b58a:	2301      	movs	r3, #1
 801b58c:	71a3      	strb	r3, [r4, #6]
 801b58e:	e7df      	b.n	801b550 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x2e>
 801b590:	f1b8 0f00 	cmp.w	r8, #0
 801b594:	bfa9      	itett	ge
 801b596:	9b1c      	ldrge	r3, [sp, #112]	; 0x70
 801b598:	9007      	strlt	r0, [sp, #28]
 801b59a:	eba3 0308 	subge.w	r3, r3, r8
 801b59e:	9307      	strge	r3, [sp, #28]
 801b5a0:	2700      	movs	r7, #0
 801b5a2:	2302      	movs	r3, #2
 801b5a4:	e9cd 7309 	strd	r7, r3, [sp, #36]	; 0x24
 801b5a8:	2301      	movs	r3, #1
 801b5aa:	9308      	str	r3, [sp, #32]
 801b5ac:	9b06      	ldr	r3, [sp, #24]
 801b5ae:	f043 0301 	orr.w	r3, r3, #1
 801b5b2:	930b      	str	r3, [sp, #44]	; 0x2c
 801b5b4:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 801b5b8:	eb09 03cb 	add.w	r3, r9, fp, lsl #3
 801b5bc:	9305      	str	r3, [sp, #20]
 801b5be:	f1bb 0f00 	cmp.w	fp, #0
 801b5c2:	f000 80d4 	beq.w	801b76e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x24c>
 801b5c6:	2300      	movs	r3, #0
 801b5c8:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
 801b5cc:	9b05      	ldr	r3, [sp, #20]
 801b5ce:	68a5      	ldr	r5, [r4, #8]
 801b5d0:	68db      	ldr	r3, [r3, #12]
 801b5d2:	950f      	str	r5, [sp, #60]	; 0x3c
 801b5d4:	07da      	lsls	r2, r3, #31
 801b5d6:	bf43      	ittte	mi
 801b5d8:	981a      	ldrmi	r0, [sp, #104]	; 0x68
 801b5da:	9a0b      	ldrmi	r2, [sp, #44]	; 0x2c
 801b5dc:	6800      	ldrmi	r0, [r0, #0]
 801b5de:	9a06      	ldrpl	r2, [sp, #24]
 801b5e0:	ea4f 2123 	mov.w	r1, r3, asr #8
 801b5e4:	bf48      	it	mi
 801b5e6:	5841      	ldrmi	r1, [r0, r1]
 801b5e8:	981a      	ldr	r0, [sp, #104]	; 0x68
 801b5ea:	4401      	add	r1, r0
 801b5ec:	9807      	ldr	r0, [sp, #28]
 801b5ee:	b138      	cbz	r0, 801b600 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xde>
 801b5f0:	4288      	cmp	r0, r1
 801b5f2:	9e08      	ldr	r6, [sp, #32]
 801b5f4:	bf2c      	ite	cs
 801b5f6:	2000      	movcs	r0, #0
 801b5f8:	2001      	movcc	r0, #1
 801b5fa:	42b0      	cmp	r0, r6
 801b5fc:	f000 80b3 	beq.w	801b766 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x244>
 801b600:	079b      	lsls	r3, r3, #30
 801b602:	d407      	bmi.n	801b614 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xf2>
 801b604:	f118 0f02 	cmn.w	r8, #2
 801b608:	d102      	bne.n	801b610 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xee>
 801b60a:	07ae      	lsls	r6, r5, #30
 801b60c:	f000 80ad 	beq.w	801b76a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x248>
 801b610:	f002 02fd 	and.w	r2, r2, #253	; 0xfd
 801b614:	9b05      	ldr	r3, [sp, #20]
 801b616:	6898      	ldr	r0, [r3, #8]
 801b618:	ad0d      	add	r5, sp, #52	; 0x34
 801b61a:	6803      	ldr	r3, [r0, #0]
 801b61c:	9503      	str	r5, [sp, #12]
 801b61e:	9d1c      	ldr	r5, [sp, #112]	; 0x70
 801b620:	9502      	str	r5, [sp, #8]
 801b622:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 801b624:	e9cd 1500 	strd	r1, r5, [sp]
 801b628:	4641      	mov	r1, r8
 801b62a:	69dd      	ldr	r5, [r3, #28]
 801b62c:	4653      	mov	r3, sl
 801b62e:	47a8      	blx	r5
 801b630:	7963      	ldrb	r3, [r4, #5]
 801b632:	f89d 2039 	ldrb.w	r2, [sp, #57]	; 0x39
 801b636:	f89d 503a 	ldrb.w	r5, [sp, #58]	; 0x3a
 801b63a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801b63c:	4313      	orrs	r3, r2
 801b63e:	2d06      	cmp	r5, #6
 801b640:	7163      	strb	r3, [r4, #5]
 801b642:	d001      	beq.n	801b648 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x126>
 801b644:	2d02      	cmp	r5, #2
 801b646:	d109      	bne.n	801b65c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x13a>
 801b648:	f89d 3038 	ldrb.w	r3, [sp, #56]	; 0x38
 801b64c:	6021      	str	r1, [r4, #0]
 801b64e:	7123      	strb	r3, [r4, #4]
 801b650:	71a5      	strb	r5, [r4, #6]
 801b652:	4607      	mov	r7, r0
 801b654:	4638      	mov	r0, r7
 801b656:	b011      	add	sp, #68	; 0x44
 801b658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b65c:	6822      	ldr	r2, [r4, #0]
 801b65e:	b9a7      	cbnz	r7, 801b68a <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x168>
 801b660:	b9aa      	cbnz	r2, 801b68e <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x16c>
 801b662:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801b666:	6021      	str	r1, [r4, #0]
 801b668:	7122      	strb	r2, [r4, #4]
 801b66a:	b121      	cbz	r1, 801b676 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 801b66c:	b11b      	cbz	r3, 801b676 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 801b66e:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801b672:	07dd      	lsls	r5, r3, #31
 801b674:	d5ed      	bpl.n	801b652 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 801b676:	7963      	ldrb	r3, [r4, #5]
 801b678:	2b04      	cmp	r3, #4
 801b67a:	d0ea      	beq.n	801b652 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 801b67c:	9b05      	ldr	r3, [sp, #20]
 801b67e:	3b08      	subs	r3, #8
 801b680:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b684:	9305      	str	r3, [sp, #20]
 801b686:	4607      	mov	r7, r0
 801b688:	e799      	b.n	801b5be <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x9c>
 801b68a:	2a00      	cmp	r2, #0
 801b68c:	d037      	beq.n	801b6fe <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1dc>
 801b68e:	4291      	cmp	r1, r2
 801b690:	d106      	bne.n	801b6a0 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17e>
 801b692:	7923      	ldrb	r3, [r4, #4]
 801b694:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801b698:	4313      	orrs	r3, r2
 801b69a:	7123      	strb	r3, [r4, #4]
 801b69c:	4638      	mov	r0, r7
 801b69e:	e7ea      	b.n	801b676 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 801b6a0:	b909      	cbnz	r1, 801b6a6 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x184>
 801b6a2:	2800      	cmp	r0, #0
 801b6a4:	d0fa      	beq.n	801b69c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17a>
 801b6a6:	2b03      	cmp	r3, #3
 801b6a8:	79a6      	ldrb	r6, [r4, #6]
 801b6aa:	d904      	bls.n	801b6b6 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x194>
 801b6ac:	07d9      	lsls	r1, r3, #31
 801b6ae:	d529      	bpl.n	801b704 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e2>
 801b6b0:	68a3      	ldr	r3, [r4, #8]
 801b6b2:	079b      	lsls	r3, r3, #30
 801b6b4:	d526      	bpl.n	801b704 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1e2>
 801b6b6:	b97e      	cbnz	r6, 801b6d8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1b6>
 801b6b8:	2d03      	cmp	r5, #3
 801b6ba:	d905      	bls.n	801b6c8 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1a6>
 801b6bc:	07ee      	lsls	r6, r5, #31
 801b6be:	d541      	bpl.n	801b744 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x222>
 801b6c0:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801b6c4:	0798      	lsls	r0, r3, #30
 801b6c6:	d53d      	bpl.n	801b744 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x222>
 801b6c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b6ca:	9300      	str	r3, [sp, #0]
 801b6cc:	4641      	mov	r1, r8
 801b6ce:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b6d0:	4650      	mov	r0, sl
 801b6d2:	f7ff ff11 	bl	801b4f8 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>
 801b6d6:	4606      	mov	r6, r0
 801b6d8:	b9e5      	cbnz	r5, 801b714 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 801b6da:	2e03      	cmp	r6, #3
 801b6dc:	d905      	bls.n	801b6ea <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1c8>
 801b6de:	07f1      	lsls	r1, r6, #31
 801b6e0:	d532      	bpl.n	801b748 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x226>
 801b6e2:	f8d9 3008 	ldr.w	r3, [r9, #8]
 801b6e6:	079a      	lsls	r2, r3, #30
 801b6e8:	d52e      	bpl.n	801b748 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x226>
 801b6ea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b6ec:	9300      	str	r3, [sp, #0]
 801b6ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b6f0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b6f2:	4641      	mov	r1, r8
 801b6f4:	4650      	mov	r0, sl
 801b6f6:	f7ff feff 	bl	801b4f8 <_ZNK10__cxxabiv117__class_type_info17__find_public_srcEiPKvPKS0_S2_>
 801b6fa:	4605      	mov	r5, r0
 801b6fc:	e00a      	b.n	801b714 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 801b6fe:	2900      	cmp	r1, #0
 801b700:	d1d1      	bne.n	801b6a6 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x184>
 801b702:	e7cb      	b.n	801b69c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x17a>
 801b704:	2e01      	cmp	r6, #1
 801b706:	bf38      	it	cc
 801b708:	2601      	movcc	r6, #1
 801b70a:	2d01      	cmp	r5, #1
 801b70c:	bf38      	it	cc
 801b70e:	2501      	movcc	r5, #1
 801b710:	b2f6      	uxtb	r6, r6
 801b712:	b2ed      	uxtb	r5, r5
 801b714:	ea85 0306 	eor.w	r3, r5, r6
 801b718:	b2db      	uxtb	r3, r3
 801b71a:	2b03      	cmp	r3, #3
 801b71c:	d916      	bls.n	801b74c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x22a>
 801b71e:	2d03      	cmp	r5, #3
 801b720:	bf81      	itttt	hi
 801b722:	9b0d      	ldrhi	r3, [sp, #52]	; 0x34
 801b724:	6023      	strhi	r3, [r4, #0]
 801b726:	462e      	movhi	r6, r5
 801b728:	f89d 3038 	ldrbhi.w	r3, [sp, #56]	; 0x38
 801b72c:	bf86      	itte	hi
 801b72e:	7123      	strbhi	r3, [r4, #4]
 801b730:	2000      	movhi	r0, #0
 801b732:	4638      	movls	r0, r7
 801b734:	07b3      	lsls	r3, r6, #30
 801b736:	71a6      	strb	r6, [r4, #6]
 801b738:	d402      	bmi.n	801b740 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x21e>
 801b73a:	f016 0601 	ands.w	r6, r6, #1
 801b73e:	d19a      	bne.n	801b676 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 801b740:	2000      	movs	r0, #0
 801b742:	e786      	b.n	801b652 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 801b744:	2601      	movs	r6, #1
 801b746:	e7e5      	b.n	801b714 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 801b748:	2501      	movs	r5, #1
 801b74a:	e7e3      	b.n	801b714 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x1f2>
 801b74c:	4035      	ands	r5, r6
 801b74e:	b2ed      	uxtb	r5, r5
 801b750:	2300      	movs	r3, #0
 801b752:	2d03      	cmp	r5, #3
 801b754:	6023      	str	r3, [r4, #0]
 801b756:	d903      	bls.n	801b760 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x23e>
 801b758:	2302      	movs	r3, #2
 801b75a:	71a3      	strb	r3, [r4, #6]
 801b75c:	2001      	movs	r0, #1
 801b75e:	e778      	b.n	801b652 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x130>
 801b760:	2001      	movs	r0, #1
 801b762:	71a0      	strb	r0, [r4, #6]
 801b764:	e787      	b.n	801b676 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x154>
 801b766:	2301      	movs	r3, #1
 801b768:	9309      	str	r3, [sp, #36]	; 0x24
 801b76a:	4638      	mov	r0, r7
 801b76c:	e786      	b.n	801b67c <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x15a>
 801b76e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b770:	2b00      	cmp	r3, #0
 801b772:	f43f af6f 	beq.w	801b654 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x132>
 801b776:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b778:	2b01      	cmp	r3, #1
 801b77a:	f43f af6b 	beq.w	801b654 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x132>
 801b77e:	2301      	movs	r3, #1
 801b780:	930a      	str	r3, [sp, #40]	; 0x28
 801b782:	f8cd b020 	str.w	fp, [sp, #32]
 801b786:	e715      	b.n	801b5b4 <_ZNK10__cxxabiv121__vmi_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x92>

0801b788 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 801b788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b78c:	ed2d 8b02 	vpush	{d8}
 801b790:	b089      	sub	sp, #36	; 0x24
 801b792:	ee08 1a10 	vmov	s16, r1
 801b796:	4606      	mov	r6, r0
 801b798:	4617      	mov	r7, r2
 801b79a:	461c      	mov	r4, r3
 801b79c:	f7ff fa43 	bl	801ac26 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 801b7a0:	4605      	mov	r5, r0
 801b7a2:	2800      	cmp	r0, #0
 801b7a4:	d15f      	bne.n	801b866 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 801b7a6:	f8d4 9008 	ldr.w	r9, [r4, #8]
 801b7aa:	f8d6 a00c 	ldr.w	sl, [r6, #12]
 801b7ae:	f019 0f10 	tst.w	r9, #16
 801b7b2:	bf18      	it	ne
 801b7b4:	f8d6 9008 	ldrne.w	r9, [r6, #8]
 801b7b8:	f009 0301 	and.w	r3, r9, #1
 801b7bc:	eb06 08ca 	add.w	r8, r6, sl, lsl #3
 801b7c0:	9303      	str	r3, [sp, #12]
 801b7c2:	f10d 0b10 	add.w	fp, sp, #16
 801b7c6:	f1ba 0f00 	cmp.w	sl, #0
 801b7ca:	d074      	beq.n	801b8b6 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x12e>
 801b7cc:	2300      	movs	r3, #0
 801b7ce:	f8d8 200c 	ldr.w	r2, [r8, #12]
 801b7d2:	9304      	str	r3, [sp, #16]
 801b7d4:	f88d 3014 	strb.w	r3, [sp, #20]
 801b7d8:	2300      	movs	r3, #0
 801b7da:	9307      	str	r3, [sp, #28]
 801b7dc:	f002 0301 	and.w	r3, r2, #1
 801b7e0:	9301      	str	r3, [sp, #4]
 801b7e2:	f002 0302 	and.w	r3, r2, #2
 801b7e6:	9302      	str	r3, [sp, #8]
 801b7e8:	e9dd 1302 	ldrd	r1, r3, [sp, #8]
 801b7ec:	430b      	orrs	r3, r1
 801b7ee:	f8cd 9018 	str.w	r9, [sp, #24]
 801b7f2:	d104      	bne.n	801b7fe <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x76>
 801b7f4:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b7f8:	f1a8 0808 	sub.w	r8, r8, #8
 801b7fc:	e7e3      	b.n	801b7c6 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x3e>
 801b7fe:	2f00      	cmp	r7, #0
 801b800:	d037      	beq.n	801b872 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xea>
 801b802:	9b01      	ldr	r3, [sp, #4]
 801b804:	1212      	asrs	r2, r2, #8
 801b806:	b10b      	cbz	r3, 801b80c <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x84>
 801b808:	683b      	ldr	r3, [r7, #0]
 801b80a:	589a      	ldr	r2, [r3, r2]
 801b80c:	443a      	add	r2, r7
 801b80e:	f8d8 0008 	ldr.w	r0, [r8, #8]
 801b812:	6803      	ldr	r3, [r0, #0]
 801b814:	ee18 1a10 	vmov	r1, s16
 801b818:	699d      	ldr	r5, [r3, #24]
 801b81a:	465b      	mov	r3, fp
 801b81c:	47a8      	blx	r5
 801b81e:	4605      	mov	r5, r0
 801b820:	2800      	cmp	r0, #0
 801b822:	d0e7      	beq.n	801b7f4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x6c>
 801b824:	9b07      	ldr	r3, [sp, #28]
 801b826:	2b08      	cmp	r3, #8
 801b828:	d104      	bne.n	801b834 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xac>
 801b82a:	9b01      	ldr	r3, [sp, #4]
 801b82c:	b113      	cbz	r3, 801b834 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xac>
 801b82e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801b832:	9307      	str	r3, [sp, #28]
 801b834:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801b838:	2b03      	cmp	r3, #3
 801b83a:	d905      	bls.n	801b848 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xc0>
 801b83c:	9a02      	ldr	r2, [sp, #8]
 801b83e:	b91a      	cbnz	r2, 801b848 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xc0>
 801b840:	f023 0302 	bic.w	r3, r3, #2
 801b844:	f88d 3014 	strb.w	r3, [sp, #20]
 801b848:	68e1      	ldr	r1, [r4, #12]
 801b84a:	b9d1      	cbnz	r1, 801b882 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xfa>
 801b84c:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 801b850:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801b854:	7923      	ldrb	r3, [r4, #4]
 801b856:	2b03      	cmp	r3, #3
 801b858:	d905      	bls.n	801b866 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 801b85a:	079a      	lsls	r2, r3, #30
 801b85c:	d50b      	bpl.n	801b876 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xee>
 801b85e:	68b3      	ldr	r3, [r6, #8]
 801b860:	f013 0f01 	tst.w	r3, #1
 801b864:	d1c6      	bne.n	801b7f4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x6c>
 801b866:	4628      	mov	r0, r5
 801b868:	b009      	add	sp, #36	; 0x24
 801b86a:	ecbd 8b02 	vpop	{d8}
 801b86e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b872:	463a      	mov	r2, r7
 801b874:	e7cb      	b.n	801b80e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x86>
 801b876:	07db      	lsls	r3, r3, #31
 801b878:	d5f5      	bpl.n	801b866 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 801b87a:	68b3      	ldr	r3, [r6, #8]
 801b87c:	f013 0f02 	tst.w	r3, #2
 801b880:	e7f0      	b.n	801b864 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xdc>
 801b882:	6823      	ldr	r3, [r4, #0]
 801b884:	9a04      	ldr	r2, [sp, #16]
 801b886:	4293      	cmp	r3, r2
 801b888:	d004      	beq.n	801b894 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x10c>
 801b88a:	2300      	movs	r3, #0
 801b88c:	6023      	str	r3, [r4, #0]
 801b88e:	2302      	movs	r3, #2
 801b890:	7123      	strb	r3, [r4, #4]
 801b892:	e7e8      	b.n	801b866 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>
 801b894:	b12b      	cbz	r3, 801b8a2 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x11a>
 801b896:	7923      	ldrb	r3, [r4, #4]
 801b898:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801b89c:	4313      	orrs	r3, r2
 801b89e:	7123      	strb	r3, [r4, #4]
 801b8a0:	e7a8      	b.n	801b7f4 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x6c>
 801b8a2:	9807      	ldr	r0, [sp, #28]
 801b8a4:	2808      	cmp	r0, #8
 801b8a6:	d0f2      	beq.n	801b88e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x106>
 801b8a8:	2908      	cmp	r1, #8
 801b8aa:	d0f0      	beq.n	801b88e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x106>
 801b8ac:	f7ff fdbe 	bl	801b42c <_ZNKSt9type_infoeqERKS_>
 801b8b0:	2800      	cmp	r0, #0
 801b8b2:	d1f0      	bne.n	801b896 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x10e>
 801b8b4:	e7eb      	b.n	801b88e <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x106>
 801b8b6:	7925      	ldrb	r5, [r4, #4]
 801b8b8:	3d00      	subs	r5, #0
 801b8ba:	bf18      	it	ne
 801b8bc:	2501      	movne	r5, #1
 801b8be:	e7d2      	b.n	801b866 <_ZNK10__cxxabiv121__vmi_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0xde>

0801b8c0 <_ZdlPv>:
 801b8c0:	f001 b8e0 	b.w	801ca84 <free>

0801b8c4 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 801b8c4:	7803      	ldrb	r3, [r0, #0]
 801b8c6:	2b47      	cmp	r3, #71	; 0x47
 801b8c8:	d117      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8ca:	7843      	ldrb	r3, [r0, #1]
 801b8cc:	2b4e      	cmp	r3, #78	; 0x4e
 801b8ce:	d114      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8d0:	7883      	ldrb	r3, [r0, #2]
 801b8d2:	2b55      	cmp	r3, #85	; 0x55
 801b8d4:	d111      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8d6:	78c3      	ldrb	r3, [r0, #3]
 801b8d8:	2b43      	cmp	r3, #67	; 0x43
 801b8da:	d10e      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8dc:	7903      	ldrb	r3, [r0, #4]
 801b8de:	2b43      	cmp	r3, #67	; 0x43
 801b8e0:	d10b      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8e2:	7943      	ldrb	r3, [r0, #5]
 801b8e4:	2b2b      	cmp	r3, #43	; 0x2b
 801b8e6:	d108      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8e8:	7983      	ldrb	r3, [r0, #6]
 801b8ea:	2b2b      	cmp	r3, #43	; 0x2b
 801b8ec:	d105      	bne.n	801b8fa <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b8ee:	79c0      	ldrb	r0, [r0, #7]
 801b8f0:	2801      	cmp	r0, #1
 801b8f2:	bf8c      	ite	hi
 801b8f4:	2000      	movhi	r0, #0
 801b8f6:	2001      	movls	r0, #1
 801b8f8:	4770      	bx	lr
 801b8fa:	2000      	movs	r0, #0
 801b8fc:	4770      	bx	lr

0801b8fe <__cxa_call_terminate>:
 801b8fe:	b510      	push	{r4, lr}
 801b900:	4604      	mov	r4, r0
 801b902:	b148      	cbz	r0, 801b918 <__cxa_call_terminate+0x1a>
 801b904:	f000 f83b 	bl	801b97e <__cxa_begin_catch>
 801b908:	4620      	mov	r0, r4
 801b90a:	f7ff ffdb 	bl	801b8c4 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801b90e:	b118      	cbz	r0, 801b918 <__cxa_call_terminate+0x1a>
 801b910:	f854 0c14 	ldr.w	r0, [r4, #-20]
 801b914:	f7ff fce2 	bl	801b2dc <_ZN10__cxxabiv111__terminateEPFvvE>
 801b918:	f7ff fcec 	bl	801b2f4 <_ZSt9terminatev>

0801b91c <__cxa_call_unexpected>:
 801b91c:	b538      	push	{r3, r4, r5, lr}
 801b91e:	4602      	mov	r2, r0
 801b920:	f7ff ffd0 	bl	801b8c4 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801b924:	4604      	mov	r4, r0
 801b926:	b140      	cbz	r0, 801b93a <__cxa_call_unexpected+0x1e>
 801b928:	f852 4c18 	ldr.w	r4, [r2, #-24]
 801b92c:	2500      	movs	r5, #0
 801b92e:	4610      	mov	r0, r2
 801b930:	f000 f825 	bl	801b97e <__cxa_begin_catch>
 801b934:	b11d      	cbz	r5, 801b93e <__cxa_call_unexpected+0x22>
 801b936:	f7ff fcef 	bl	801b318 <_ZSt10unexpectedv>
 801b93a:	2501      	movs	r5, #1
 801b93c:	e7f7      	b.n	801b92e <__cxa_call_unexpected+0x12>
 801b93e:	4620      	mov	r0, r4
 801b940:	f7ff fcdd 	bl	801b2fe <_ZN10__cxxabiv112__unexpectedEPFvvE>

0801b944 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 801b944:	7803      	ldrb	r3, [r0, #0]
 801b946:	2b47      	cmp	r3, #71	; 0x47
 801b948:	d117      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b94a:	7843      	ldrb	r3, [r0, #1]
 801b94c:	2b4e      	cmp	r3, #78	; 0x4e
 801b94e:	d114      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b950:	7883      	ldrb	r3, [r0, #2]
 801b952:	2b55      	cmp	r3, #85	; 0x55
 801b954:	d111      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b956:	78c3      	ldrb	r3, [r0, #3]
 801b958:	2b43      	cmp	r3, #67	; 0x43
 801b95a:	d10e      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b95c:	7903      	ldrb	r3, [r0, #4]
 801b95e:	2b43      	cmp	r3, #67	; 0x43
 801b960:	d10b      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b962:	7943      	ldrb	r3, [r0, #5]
 801b964:	2b2b      	cmp	r3, #43	; 0x2b
 801b966:	d108      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b968:	7983      	ldrb	r3, [r0, #6]
 801b96a:	2b2b      	cmp	r3, #43	; 0x2b
 801b96c:	d105      	bne.n	801b97a <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x36>
 801b96e:	79c0      	ldrb	r0, [r0, #7]
 801b970:	2801      	cmp	r0, #1
 801b972:	bf8c      	ite	hi
 801b974:	2000      	movhi	r0, #0
 801b976:	2001      	movls	r0, #1
 801b978:	4770      	bx	lr
 801b97a:	2000      	movs	r0, #0
 801b97c:	4770      	bx	lr

0801b97e <__cxa_begin_catch>:
 801b97e:	b538      	push	{r3, r4, r5, lr}
 801b980:	4604      	mov	r4, r0
 801b982:	f7ff fa2b 	bl	801addc <__cxa_get_globals>
 801b986:	6805      	ldr	r5, [r0, #0]
 801b988:	4602      	mov	r2, r0
 801b98a:	4620      	mov	r0, r4
 801b98c:	f1a4 0120 	sub.w	r1, r4, #32
 801b990:	f7ff ffd8 	bl	801b944 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 801b994:	b928      	cbnz	r0, 801b9a2 <__cxa_begin_catch+0x24>
 801b996:	b10d      	cbz	r5, 801b99c <__cxa_begin_catch+0x1e>
 801b998:	f7ff fcac 	bl	801b2f4 <_ZSt9terminatev>
 801b99c:	6011      	str	r1, [r2, #0]
 801b99e:	4628      	mov	r0, r5
 801b9a0:	bd38      	pop	{r3, r4, r5, pc}
 801b9a2:	f854 3c0c 	ldr.w	r3, [r4, #-12]
 801b9a6:	2b00      	cmp	r3, #0
 801b9a8:	bfb4      	ite	lt
 801b9aa:	f1c3 0301 	rsblt	r3, r3, #1
 801b9ae:	3301      	addge	r3, #1
 801b9b0:	f844 3c0c 	str.w	r3, [r4, #-12]
 801b9b4:	6853      	ldr	r3, [r2, #4]
 801b9b6:	428d      	cmp	r5, r1
 801b9b8:	f103 33ff 	add.w	r3, r3, #4294967295
 801b9bc:	6053      	str	r3, [r2, #4]
 801b9be:	4620      	mov	r0, r4
 801b9c0:	bf1c      	itt	ne
 801b9c2:	f844 5c10 	strne.w	r5, [r4, #-16]
 801b9c6:	6011      	strne	r1, [r2, #0]
 801b9c8:	6a65      	ldr	r5, [r4, #36]	; 0x24
 801b9ca:	f7e5 fd09 	bl	80013e0 <_Unwind_Complete>
 801b9ce:	e7e6      	b.n	801b99e <__cxa_begin_catch+0x20>

0801b9d0 <floor>:
 801b9d0:	ec51 0b10 	vmov	r0, r1, d0
 801b9d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b9d8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 801b9dc:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 801b9e0:	2e13      	cmp	r6, #19
 801b9e2:	ee10 5a10 	vmov	r5, s0
 801b9e6:	ee10 8a10 	vmov	r8, s0
 801b9ea:	460c      	mov	r4, r1
 801b9ec:	dc32      	bgt.n	801ba54 <floor+0x84>
 801b9ee:	2e00      	cmp	r6, #0
 801b9f0:	da14      	bge.n	801ba1c <floor+0x4c>
 801b9f2:	a333      	add	r3, pc, #204	; (adr r3, 801bac0 <floor+0xf0>)
 801b9f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 801b9f8:	f7e4 fc52 	bl	80002a0 <__adddf3>
 801b9fc:	2200      	movs	r2, #0
 801b9fe:	2300      	movs	r3, #0
 801ba00:	f7e5 f894 	bl	8000b2c <__aeabi_dcmpgt>
 801ba04:	b138      	cbz	r0, 801ba16 <floor+0x46>
 801ba06:	2c00      	cmp	r4, #0
 801ba08:	da57      	bge.n	801baba <floor+0xea>
 801ba0a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 801ba0e:	431d      	orrs	r5, r3
 801ba10:	d001      	beq.n	801ba16 <floor+0x46>
 801ba12:	4c2d      	ldr	r4, [pc, #180]	; (801bac8 <floor+0xf8>)
 801ba14:	2500      	movs	r5, #0
 801ba16:	4621      	mov	r1, r4
 801ba18:	4628      	mov	r0, r5
 801ba1a:	e025      	b.n	801ba68 <floor+0x98>
 801ba1c:	4f2b      	ldr	r7, [pc, #172]	; (801bacc <floor+0xfc>)
 801ba1e:	4137      	asrs	r7, r6
 801ba20:	ea01 0307 	and.w	r3, r1, r7
 801ba24:	4303      	orrs	r3, r0
 801ba26:	d01f      	beq.n	801ba68 <floor+0x98>
 801ba28:	a325      	add	r3, pc, #148	; (adr r3, 801bac0 <floor+0xf0>)
 801ba2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ba2e:	f7e4 fc37 	bl	80002a0 <__adddf3>
 801ba32:	2200      	movs	r2, #0
 801ba34:	2300      	movs	r3, #0
 801ba36:	f7e5 f879 	bl	8000b2c <__aeabi_dcmpgt>
 801ba3a:	2800      	cmp	r0, #0
 801ba3c:	d0eb      	beq.n	801ba16 <floor+0x46>
 801ba3e:	2c00      	cmp	r4, #0
 801ba40:	bfbe      	ittt	lt
 801ba42:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 801ba46:	fa43 f606 	asrlt.w	r6, r3, r6
 801ba4a:	19a4      	addlt	r4, r4, r6
 801ba4c:	ea24 0407 	bic.w	r4, r4, r7
 801ba50:	2500      	movs	r5, #0
 801ba52:	e7e0      	b.n	801ba16 <floor+0x46>
 801ba54:	2e33      	cmp	r6, #51	; 0x33
 801ba56:	dd0b      	ble.n	801ba70 <floor+0xa0>
 801ba58:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801ba5c:	d104      	bne.n	801ba68 <floor+0x98>
 801ba5e:	ee10 2a10 	vmov	r2, s0
 801ba62:	460b      	mov	r3, r1
 801ba64:	f7e4 fc1c 	bl	80002a0 <__adddf3>
 801ba68:	ec41 0b10 	vmov	d0, r0, r1
 801ba6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ba70:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 801ba74:	f04f 33ff 	mov.w	r3, #4294967295
 801ba78:	fa23 f707 	lsr.w	r7, r3, r7
 801ba7c:	4207      	tst	r7, r0
 801ba7e:	d0f3      	beq.n	801ba68 <floor+0x98>
 801ba80:	a30f      	add	r3, pc, #60	; (adr r3, 801bac0 <floor+0xf0>)
 801ba82:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ba86:	f7e4 fc0b 	bl	80002a0 <__adddf3>
 801ba8a:	2200      	movs	r2, #0
 801ba8c:	2300      	movs	r3, #0
 801ba8e:	f7e5 f84d 	bl	8000b2c <__aeabi_dcmpgt>
 801ba92:	2800      	cmp	r0, #0
 801ba94:	d0bf      	beq.n	801ba16 <floor+0x46>
 801ba96:	2c00      	cmp	r4, #0
 801ba98:	da02      	bge.n	801baa0 <floor+0xd0>
 801ba9a:	2e14      	cmp	r6, #20
 801ba9c:	d103      	bne.n	801baa6 <floor+0xd6>
 801ba9e:	3401      	adds	r4, #1
 801baa0:	ea25 0507 	bic.w	r5, r5, r7
 801baa4:	e7b7      	b.n	801ba16 <floor+0x46>
 801baa6:	2301      	movs	r3, #1
 801baa8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 801baac:	fa03 f606 	lsl.w	r6, r3, r6
 801bab0:	4435      	add	r5, r6
 801bab2:	4545      	cmp	r5, r8
 801bab4:	bf38      	it	cc
 801bab6:	18e4      	addcc	r4, r4, r3
 801bab8:	e7f2      	b.n	801baa0 <floor+0xd0>
 801baba:	2500      	movs	r5, #0
 801babc:	462c      	mov	r4, r5
 801babe:	e7aa      	b.n	801ba16 <floor+0x46>
 801bac0:	8800759c 	.word	0x8800759c
 801bac4:	7e37e43c 	.word	0x7e37e43c
 801bac8:	bff00000 	.word	0xbff00000
 801bacc:	000fffff 	.word	0x000fffff

0801bad0 <frexp>:
 801bad0:	b570      	push	{r4, r5, r6, lr}
 801bad2:	2100      	movs	r1, #0
 801bad4:	ec55 4b10 	vmov	r4, r5, d0
 801bad8:	6001      	str	r1, [r0, #0]
 801bada:	4916      	ldr	r1, [pc, #88]	; (801bb34 <frexp+0x64>)
 801badc:	f025 4200 	bic.w	r2, r5, #2147483648	; 0x80000000
 801bae0:	428a      	cmp	r2, r1
 801bae2:	4606      	mov	r6, r0
 801bae4:	462b      	mov	r3, r5
 801bae6:	dc22      	bgt.n	801bb2e <frexp+0x5e>
 801bae8:	ee10 1a10 	vmov	r1, s0
 801baec:	4311      	orrs	r1, r2
 801baee:	d01e      	beq.n	801bb2e <frexp+0x5e>
 801baf0:	4911      	ldr	r1, [pc, #68]	; (801bb38 <frexp+0x68>)
 801baf2:	4029      	ands	r1, r5
 801baf4:	b969      	cbnz	r1, 801bb12 <frexp+0x42>
 801baf6:	4b11      	ldr	r3, [pc, #68]	; (801bb3c <frexp+0x6c>)
 801baf8:	2200      	movs	r2, #0
 801bafa:	ee10 0a10 	vmov	r0, s0
 801bafe:	4629      	mov	r1, r5
 801bb00:	f7e4 fd84 	bl	800060c <__aeabi_dmul>
 801bb04:	460b      	mov	r3, r1
 801bb06:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 801bb0a:	f06f 0135 	mvn.w	r1, #53	; 0x35
 801bb0e:	4604      	mov	r4, r0
 801bb10:	6031      	str	r1, [r6, #0]
 801bb12:	6831      	ldr	r1, [r6, #0]
 801bb14:	1512      	asrs	r2, r2, #20
 801bb16:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801bb1a:	f2a2 32fe 	subw	r2, r2, #1022	; 0x3fe
 801bb1e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 801bb22:	440a      	add	r2, r1
 801bb24:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 801bb28:	6032      	str	r2, [r6, #0]
 801bb2a:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 801bb2e:	ec45 4b10 	vmov	d0, r4, r5
 801bb32:	bd70      	pop	{r4, r5, r6, pc}
 801bb34:	7fefffff 	.word	0x7fefffff
 801bb38:	7ff00000 	.word	0x7ff00000
 801bb3c:	43500000 	.word	0x43500000

0801bb40 <round>:
 801bb40:	ec51 0b10 	vmov	r0, r1, d0
 801bb44:	b570      	push	{r4, r5, r6, lr}
 801bb46:	f3c1 550a 	ubfx	r5, r1, #20, #11
 801bb4a:	f2a5 34ff 	subw	r4, r5, #1023	; 0x3ff
 801bb4e:	2c13      	cmp	r4, #19
 801bb50:	ee10 2a10 	vmov	r2, s0
 801bb54:	460b      	mov	r3, r1
 801bb56:	dc19      	bgt.n	801bb8c <round+0x4c>
 801bb58:	2c00      	cmp	r4, #0
 801bb5a:	da09      	bge.n	801bb70 <round+0x30>
 801bb5c:	3401      	adds	r4, #1
 801bb5e:	f001 4300 	and.w	r3, r1, #2147483648	; 0x80000000
 801bb62:	d103      	bne.n	801bb6c <round+0x2c>
 801bb64:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 801bb68:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 801bb6c:	2200      	movs	r2, #0
 801bb6e:	e028      	b.n	801bbc2 <round+0x82>
 801bb70:	4d15      	ldr	r5, [pc, #84]	; (801bbc8 <round+0x88>)
 801bb72:	4125      	asrs	r5, r4
 801bb74:	ea01 0605 	and.w	r6, r1, r5
 801bb78:	4332      	orrs	r2, r6
 801bb7a:	d00e      	beq.n	801bb9a <round+0x5a>
 801bb7c:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 801bb80:	fa42 f404 	asr.w	r4, r2, r4
 801bb84:	4423      	add	r3, r4
 801bb86:	ea23 0305 	bic.w	r3, r3, r5
 801bb8a:	e7ef      	b.n	801bb6c <round+0x2c>
 801bb8c:	2c33      	cmp	r4, #51	; 0x33
 801bb8e:	dd07      	ble.n	801bba0 <round+0x60>
 801bb90:	f5b4 6f80 	cmp.w	r4, #1024	; 0x400
 801bb94:	d101      	bne.n	801bb9a <round+0x5a>
 801bb96:	f7e4 fb83 	bl	80002a0 <__adddf3>
 801bb9a:	ec41 0b10 	vmov	d0, r0, r1
 801bb9e:	bd70      	pop	{r4, r5, r6, pc}
 801bba0:	f2a5 4613 	subw	r6, r5, #1043	; 0x413
 801bba4:	f04f 35ff 	mov.w	r5, #4294967295
 801bba8:	40f5      	lsrs	r5, r6
 801bbaa:	4228      	tst	r0, r5
 801bbac:	d0f5      	beq.n	801bb9a <round+0x5a>
 801bbae:	2101      	movs	r1, #1
 801bbb0:	f1c4 0433 	rsb	r4, r4, #51	; 0x33
 801bbb4:	fa01 f404 	lsl.w	r4, r1, r4
 801bbb8:	1912      	adds	r2, r2, r4
 801bbba:	bf28      	it	cs
 801bbbc:	185b      	addcs	r3, r3, r1
 801bbbe:	ea22 0205 	bic.w	r2, r2, r5
 801bbc2:	4619      	mov	r1, r3
 801bbc4:	4610      	mov	r0, r2
 801bbc6:	e7e8      	b.n	801bb9a <round+0x5a>
 801bbc8:	000fffff 	.word	0x000fffff

0801bbcc <ceilf>:
 801bbcc:	ee10 3a10 	vmov	r3, s0
 801bbd0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801bbd4:	3a7f      	subs	r2, #127	; 0x7f
 801bbd6:	2a16      	cmp	r2, #22
 801bbd8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801bbdc:	dc2a      	bgt.n	801bc34 <ceilf+0x68>
 801bbde:	2a00      	cmp	r2, #0
 801bbe0:	da11      	bge.n	801bc06 <ceilf+0x3a>
 801bbe2:	eddf 7a19 	vldr	s15, [pc, #100]	; 801bc48 <ceilf+0x7c>
 801bbe6:	ee30 0a27 	vadd.f32	s0, s0, s15
 801bbea:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bbee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bbf2:	dd05      	ble.n	801bc00 <ceilf+0x34>
 801bbf4:	2b00      	cmp	r3, #0
 801bbf6:	db23      	blt.n	801bc40 <ceilf+0x74>
 801bbf8:	2900      	cmp	r1, #0
 801bbfa:	bf18      	it	ne
 801bbfc:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 801bc00:	ee00 3a10 	vmov	s0, r3
 801bc04:	4770      	bx	lr
 801bc06:	4911      	ldr	r1, [pc, #68]	; (801bc4c <ceilf+0x80>)
 801bc08:	4111      	asrs	r1, r2
 801bc0a:	420b      	tst	r3, r1
 801bc0c:	d0fa      	beq.n	801bc04 <ceilf+0x38>
 801bc0e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 801bc48 <ceilf+0x7c>
 801bc12:	ee30 0a27 	vadd.f32	s0, s0, s15
 801bc16:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bc1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bc1e:	ddef      	ble.n	801bc00 <ceilf+0x34>
 801bc20:	2b00      	cmp	r3, #0
 801bc22:	bfc2      	ittt	gt
 801bc24:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 801bc28:	fa40 f202 	asrgt.w	r2, r0, r2
 801bc2c:	189b      	addgt	r3, r3, r2
 801bc2e:	ea23 0301 	bic.w	r3, r3, r1
 801bc32:	e7e5      	b.n	801bc00 <ceilf+0x34>
 801bc34:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801bc38:	d3e4      	bcc.n	801bc04 <ceilf+0x38>
 801bc3a:	ee30 0a00 	vadd.f32	s0, s0, s0
 801bc3e:	4770      	bx	lr
 801bc40:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801bc44:	e7dc      	b.n	801bc00 <ceilf+0x34>
 801bc46:	bf00      	nop
 801bc48:	7149f2ca 	.word	0x7149f2ca
 801bc4c:	007fffff 	.word	0x007fffff

0801bc50 <cosf>:
 801bc50:	ee10 3a10 	vmov	r3, s0
 801bc54:	b507      	push	{r0, r1, r2, lr}
 801bc56:	4a1e      	ldr	r2, [pc, #120]	; (801bcd0 <cosf+0x80>)
 801bc58:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801bc5c:	4293      	cmp	r3, r2
 801bc5e:	dc06      	bgt.n	801bc6e <cosf+0x1e>
 801bc60:	eddf 0a1c 	vldr	s1, [pc, #112]	; 801bcd4 <cosf+0x84>
 801bc64:	b003      	add	sp, #12
 801bc66:	f85d eb04 	ldr.w	lr, [sp], #4
 801bc6a:	f000 badb 	b.w	801c224 <__kernel_cosf>
 801bc6e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801bc72:	db04      	blt.n	801bc7e <cosf+0x2e>
 801bc74:	ee30 0a40 	vsub.f32	s0, s0, s0
 801bc78:	b003      	add	sp, #12
 801bc7a:	f85d fb04 	ldr.w	pc, [sp], #4
 801bc7e:	4668      	mov	r0, sp
 801bc80:	f000 f994 	bl	801bfac <__ieee754_rem_pio2f>
 801bc84:	f000 0003 	and.w	r0, r0, #3
 801bc88:	2801      	cmp	r0, #1
 801bc8a:	d009      	beq.n	801bca0 <cosf+0x50>
 801bc8c:	2802      	cmp	r0, #2
 801bc8e:	d010      	beq.n	801bcb2 <cosf+0x62>
 801bc90:	b9b0      	cbnz	r0, 801bcc0 <cosf+0x70>
 801bc92:	eddd 0a01 	vldr	s1, [sp, #4]
 801bc96:	ed9d 0a00 	vldr	s0, [sp]
 801bc9a:	f000 fac3 	bl	801c224 <__kernel_cosf>
 801bc9e:	e7eb      	b.n	801bc78 <cosf+0x28>
 801bca0:	eddd 0a01 	vldr	s1, [sp, #4]
 801bca4:	ed9d 0a00 	vldr	s0, [sp]
 801bca8:	f000 fd92 	bl	801c7d0 <__kernel_sinf>
 801bcac:	eeb1 0a40 	vneg.f32	s0, s0
 801bcb0:	e7e2      	b.n	801bc78 <cosf+0x28>
 801bcb2:	eddd 0a01 	vldr	s1, [sp, #4]
 801bcb6:	ed9d 0a00 	vldr	s0, [sp]
 801bcba:	f000 fab3 	bl	801c224 <__kernel_cosf>
 801bcbe:	e7f5      	b.n	801bcac <cosf+0x5c>
 801bcc0:	eddd 0a01 	vldr	s1, [sp, #4]
 801bcc4:	ed9d 0a00 	vldr	s0, [sp]
 801bcc8:	2001      	movs	r0, #1
 801bcca:	f000 fd81 	bl	801c7d0 <__kernel_sinf>
 801bcce:	e7d3      	b.n	801bc78 <cosf+0x28>
 801bcd0:	3f490fd8 	.word	0x3f490fd8
 801bcd4:	00000000 	.word	0x00000000

0801bcd8 <floorf>:
 801bcd8:	ee10 3a10 	vmov	r3, s0
 801bcdc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801bce0:	3a7f      	subs	r2, #127	; 0x7f
 801bce2:	2a16      	cmp	r2, #22
 801bce4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801bce8:	dc2a      	bgt.n	801bd40 <floorf+0x68>
 801bcea:	2a00      	cmp	r2, #0
 801bcec:	da11      	bge.n	801bd12 <floorf+0x3a>
 801bcee:	eddf 7a18 	vldr	s15, [pc, #96]	; 801bd50 <floorf+0x78>
 801bcf2:	ee30 0a27 	vadd.f32	s0, s0, s15
 801bcf6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bcfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bcfe:	dd05      	ble.n	801bd0c <floorf+0x34>
 801bd00:	2b00      	cmp	r3, #0
 801bd02:	da23      	bge.n	801bd4c <floorf+0x74>
 801bd04:	4a13      	ldr	r2, [pc, #76]	; (801bd54 <floorf+0x7c>)
 801bd06:	2900      	cmp	r1, #0
 801bd08:	bf18      	it	ne
 801bd0a:	4613      	movne	r3, r2
 801bd0c:	ee00 3a10 	vmov	s0, r3
 801bd10:	4770      	bx	lr
 801bd12:	4911      	ldr	r1, [pc, #68]	; (801bd58 <floorf+0x80>)
 801bd14:	4111      	asrs	r1, r2
 801bd16:	420b      	tst	r3, r1
 801bd18:	d0fa      	beq.n	801bd10 <floorf+0x38>
 801bd1a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 801bd50 <floorf+0x78>
 801bd1e:	ee30 0a27 	vadd.f32	s0, s0, s15
 801bd22:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801bd26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bd2a:	ddef      	ble.n	801bd0c <floorf+0x34>
 801bd2c:	2b00      	cmp	r3, #0
 801bd2e:	bfbe      	ittt	lt
 801bd30:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 801bd34:	fa40 f202 	asrlt.w	r2, r0, r2
 801bd38:	189b      	addlt	r3, r3, r2
 801bd3a:	ea23 0301 	bic.w	r3, r3, r1
 801bd3e:	e7e5      	b.n	801bd0c <floorf+0x34>
 801bd40:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801bd44:	d3e4      	bcc.n	801bd10 <floorf+0x38>
 801bd46:	ee30 0a00 	vadd.f32	s0, s0, s0
 801bd4a:	4770      	bx	lr
 801bd4c:	2300      	movs	r3, #0
 801bd4e:	e7dd      	b.n	801bd0c <floorf+0x34>
 801bd50:	7149f2ca 	.word	0x7149f2ca
 801bd54:	bf800000 	.word	0xbf800000
 801bd58:	007fffff 	.word	0x007fffff

0801bd5c <roundf>:
 801bd5c:	ee10 0a10 	vmov	r0, s0
 801bd60:	f3c0 52c7 	ubfx	r2, r0, #23, #8
 801bd64:	3a7f      	subs	r2, #127	; 0x7f
 801bd66:	2a16      	cmp	r2, #22
 801bd68:	dc15      	bgt.n	801bd96 <roundf+0x3a>
 801bd6a:	2a00      	cmp	r2, #0
 801bd6c:	da08      	bge.n	801bd80 <roundf+0x24>
 801bd6e:	3201      	adds	r2, #1
 801bd70:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 801bd74:	d101      	bne.n	801bd7a <roundf+0x1e>
 801bd76:	f043 537e 	orr.w	r3, r3, #1065353216	; 0x3f800000
 801bd7a:	ee00 3a10 	vmov	s0, r3
 801bd7e:	4770      	bx	lr
 801bd80:	4907      	ldr	r1, [pc, #28]	; (801bda0 <roundf+0x44>)
 801bd82:	4111      	asrs	r1, r2
 801bd84:	4208      	tst	r0, r1
 801bd86:	d0fa      	beq.n	801bd7e <roundf+0x22>
 801bd88:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 801bd8c:	4113      	asrs	r3, r2
 801bd8e:	4403      	add	r3, r0
 801bd90:	ea23 0301 	bic.w	r3, r3, r1
 801bd94:	e7f1      	b.n	801bd7a <roundf+0x1e>
 801bd96:	2a80      	cmp	r2, #128	; 0x80
 801bd98:	d1f1      	bne.n	801bd7e <roundf+0x22>
 801bd9a:	ee30 0a00 	vadd.f32	s0, s0, s0
 801bd9e:	4770      	bx	lr
 801bda0:	007fffff 	.word	0x007fffff

0801bda4 <expf>:
 801bda4:	b508      	push	{r3, lr}
 801bda6:	ed2d 8b02 	vpush	{d8}
 801bdaa:	eef0 8a40 	vmov.f32	s17, s0
 801bdae:	f000 f82f 	bl	801be10 <__ieee754_expf>
 801bdb2:	eeb0 8a40 	vmov.f32	s16, s0
 801bdb6:	eeb0 0a68 	vmov.f32	s0, s17
 801bdba:	f000 fd7a 	bl	801c8b2 <finitef>
 801bdbe:	b160      	cbz	r0, 801bdda <expf+0x36>
 801bdc0:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801be00 <expf+0x5c>
 801bdc4:	eef4 8ae7 	vcmpe.f32	s17, s15
 801bdc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdcc:	dd0a      	ble.n	801bde4 <expf+0x40>
 801bdce:	f000 fe15 	bl	801c9fc <__errno>
 801bdd2:	ed9f 8a0c 	vldr	s16, [pc, #48]	; 801be04 <expf+0x60>
 801bdd6:	2322      	movs	r3, #34	; 0x22
 801bdd8:	6003      	str	r3, [r0, #0]
 801bdda:	eeb0 0a48 	vmov.f32	s0, s16
 801bdde:	ecbd 8b02 	vpop	{d8}
 801bde2:	bd08      	pop	{r3, pc}
 801bde4:	eddf 7a08 	vldr	s15, [pc, #32]	; 801be08 <expf+0x64>
 801bde8:	eef4 8ae7 	vcmpe.f32	s17, s15
 801bdec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bdf0:	d5f3      	bpl.n	801bdda <expf+0x36>
 801bdf2:	f000 fe03 	bl	801c9fc <__errno>
 801bdf6:	2322      	movs	r3, #34	; 0x22
 801bdf8:	ed9f 8a04 	vldr	s16, [pc, #16]	; 801be0c <expf+0x68>
 801bdfc:	6003      	str	r3, [r0, #0]
 801bdfe:	e7ec      	b.n	801bdda <expf+0x36>
 801be00:	42b17180 	.word	0x42b17180
 801be04:	7f800000 	.word	0x7f800000
 801be08:	c2cff1b5 	.word	0xc2cff1b5
 801be0c:	00000000 	.word	0x00000000

0801be10 <__ieee754_expf>:
 801be10:	ee10 2a10 	vmov	r2, s0
 801be14:	f022 4100 	bic.w	r1, r2, #2147483648	; 0x80000000
 801be18:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801be1c:	d902      	bls.n	801be24 <__ieee754_expf+0x14>
 801be1e:	ee30 0a00 	vadd.f32	s0, s0, s0
 801be22:	4770      	bx	lr
 801be24:	ea4f 73d2 	mov.w	r3, r2, lsr #31
 801be28:	d106      	bne.n	801be38 <__ieee754_expf+0x28>
 801be2a:	eddf 7a4e 	vldr	s15, [pc, #312]	; 801bf64 <__ieee754_expf+0x154>
 801be2e:	2b00      	cmp	r3, #0
 801be30:	bf18      	it	ne
 801be32:	eeb0 0a67 	vmovne.f32	s0, s15
 801be36:	4770      	bx	lr
 801be38:	484b      	ldr	r0, [pc, #300]	; (801bf68 <__ieee754_expf+0x158>)
 801be3a:	4282      	cmp	r2, r0
 801be3c:	dd02      	ble.n	801be44 <__ieee754_expf+0x34>
 801be3e:	2000      	movs	r0, #0
 801be40:	f000 bd2a 	b.w	801c898 <__math_oflowf>
 801be44:	2a00      	cmp	r2, #0
 801be46:	da05      	bge.n	801be54 <__ieee754_expf+0x44>
 801be48:	4a48      	ldr	r2, [pc, #288]	; (801bf6c <__ieee754_expf+0x15c>)
 801be4a:	4291      	cmp	r1, r2
 801be4c:	d902      	bls.n	801be54 <__ieee754_expf+0x44>
 801be4e:	2000      	movs	r0, #0
 801be50:	f000 bd1c 	b.w	801c88c <__math_uflowf>
 801be54:	4a46      	ldr	r2, [pc, #280]	; (801bf70 <__ieee754_expf+0x160>)
 801be56:	4291      	cmp	r1, r2
 801be58:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 801be5c:	d952      	bls.n	801bf04 <__ieee754_expf+0xf4>
 801be5e:	4a45      	ldr	r2, [pc, #276]	; (801bf74 <__ieee754_expf+0x164>)
 801be60:	4291      	cmp	r1, r2
 801be62:	ea4f 0283 	mov.w	r2, r3, lsl #2
 801be66:	d834      	bhi.n	801bed2 <__ieee754_expf+0xc2>
 801be68:	4943      	ldr	r1, [pc, #268]	; (801bf78 <__ieee754_expf+0x168>)
 801be6a:	4411      	add	r1, r2
 801be6c:	ed91 7a00 	vldr	s14, [r1]
 801be70:	4942      	ldr	r1, [pc, #264]	; (801bf7c <__ieee754_expf+0x16c>)
 801be72:	440a      	add	r2, r1
 801be74:	edd2 7a00 	vldr	s15, [r2]
 801be78:	ee30 7a47 	vsub.f32	s14, s0, s14
 801be7c:	f1c3 0201 	rsb	r2, r3, #1
 801be80:	1ad2      	subs	r2, r2, r3
 801be82:	ee37 0a67 	vsub.f32	s0, s14, s15
 801be86:	ee20 6a00 	vmul.f32	s12, s0, s0
 801be8a:	ed9f 5a3d 	vldr	s10, [pc, #244]	; 801bf80 <__ieee754_expf+0x170>
 801be8e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 801bf84 <__ieee754_expf+0x174>
 801be92:	eee6 6a05 	vfma.f32	s13, s12, s10
 801be96:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 801bf88 <__ieee754_expf+0x178>
 801be9a:	eea6 5a86 	vfma.f32	s10, s13, s12
 801be9e:	eddf 6a3b 	vldr	s13, [pc, #236]	; 801bf8c <__ieee754_expf+0x17c>
 801bea2:	eee5 6a06 	vfma.f32	s13, s10, s12
 801bea6:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 801bf90 <__ieee754_expf+0x180>
 801beaa:	eea6 5a86 	vfma.f32	s10, s13, s12
 801beae:	eef0 6a40 	vmov.f32	s13, s0
 801beb2:	eee5 6a46 	vfms.f32	s13, s10, s12
 801beb6:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 801beba:	ee20 5a26 	vmul.f32	s10, s0, s13
 801bebe:	bb92      	cbnz	r2, 801bf26 <__ieee754_expf+0x116>
 801bec0:	ee76 6ac6 	vsub.f32	s13, s13, s12
 801bec4:	eec5 7a26 	vdiv.f32	s15, s10, s13
 801bec8:	ee37 0ac0 	vsub.f32	s0, s15, s0
 801becc:	ee35 0ac0 	vsub.f32	s0, s11, s0
 801bed0:	4770      	bx	lr
 801bed2:	4b30      	ldr	r3, [pc, #192]	; (801bf94 <__ieee754_expf+0x184>)
 801bed4:	ed9f 7a30 	vldr	s14, [pc, #192]	; 801bf98 <__ieee754_expf+0x188>
 801bed8:	eddf 6a30 	vldr	s13, [pc, #192]	; 801bf9c <__ieee754_expf+0x18c>
 801bedc:	4413      	add	r3, r2
 801bede:	edd3 7a00 	vldr	s15, [r3]
 801bee2:	eee0 7a07 	vfma.f32	s15, s0, s14
 801bee6:	eeb0 7a40 	vmov.f32	s14, s0
 801beea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801beee:	ee17 2a90 	vmov	r2, s15
 801bef2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801bef6:	eea7 7ae6 	vfms.f32	s14, s15, s13
 801befa:	eddf 6a29 	vldr	s13, [pc, #164]	; 801bfa0 <__ieee754_expf+0x190>
 801befe:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801bf02:	e7be      	b.n	801be82 <__ieee754_expf+0x72>
 801bf04:	f1b1 5f50 	cmp.w	r1, #872415232	; 0x34000000
 801bf08:	d20b      	bcs.n	801bf22 <__ieee754_expf+0x112>
 801bf0a:	eddf 6a26 	vldr	s13, [pc, #152]	; 801bfa4 <__ieee754_expf+0x194>
 801bf0e:	ee70 6a26 	vadd.f32	s13, s0, s13
 801bf12:	eef4 6ae5 	vcmpe.f32	s13, s11
 801bf16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801bf1a:	dd02      	ble.n	801bf22 <__ieee754_expf+0x112>
 801bf1c:	ee30 0a25 	vadd.f32	s0, s0, s11
 801bf20:	4770      	bx	lr
 801bf22:	2200      	movs	r2, #0
 801bf24:	e7af      	b.n	801be86 <__ieee754_expf+0x76>
 801bf26:	ee76 6a66 	vsub.f32	s13, s12, s13
 801bf2a:	f112 0f7d 	cmn.w	r2, #125	; 0x7d
 801bf2e:	ee85 0a26 	vdiv.f32	s0, s10, s13
 801bf32:	bfb8      	it	lt
 801bf34:	3264      	addlt	r2, #100	; 0x64
 801bf36:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bf3a:	ee37 0ac7 	vsub.f32	s0, s15, s14
 801bf3e:	ee75 7ac0 	vsub.f32	s15, s11, s0
 801bf42:	ee17 3a90 	vmov	r3, s15
 801bf46:	bfab      	itete	ge
 801bf48:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 801bf4c:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 801bf50:	ee00 3a10 	vmovge	s0, r3
 801bf54:	eddf 7a14 	vldrlt	s15, [pc, #80]	; 801bfa8 <__ieee754_expf+0x198>
 801bf58:	bfbc      	itt	lt
 801bf5a:	ee00 3a10 	vmovlt	s0, r3
 801bf5e:	ee20 0a27 	vmullt.f32	s0, s0, s15
 801bf62:	4770      	bx	lr
 801bf64:	00000000 	.word	0x00000000
 801bf68:	42b17217 	.word	0x42b17217
 801bf6c:	42cff1b5 	.word	0x42cff1b5
 801bf70:	3eb17218 	.word	0x3eb17218
 801bf74:	3f851591 	.word	0x3f851591
 801bf78:	08028110 	.word	0x08028110
 801bf7c:	08028118 	.word	0x08028118
 801bf80:	3331bb4c 	.word	0x3331bb4c
 801bf84:	b5ddea0e 	.word	0xb5ddea0e
 801bf88:	388ab355 	.word	0x388ab355
 801bf8c:	bb360b61 	.word	0xbb360b61
 801bf90:	3e2aaaab 	.word	0x3e2aaaab
 801bf94:	08028108 	.word	0x08028108
 801bf98:	3fb8aa3b 	.word	0x3fb8aa3b
 801bf9c:	3f317180 	.word	0x3f317180
 801bfa0:	3717f7d1 	.word	0x3717f7d1
 801bfa4:	7149f2ca 	.word	0x7149f2ca
 801bfa8:	0d800000 	.word	0x0d800000

0801bfac <__ieee754_rem_pio2f>:
 801bfac:	b5f0      	push	{r4, r5, r6, r7, lr}
 801bfae:	ee10 6a10 	vmov	r6, s0
 801bfb2:	4b8e      	ldr	r3, [pc, #568]	; (801c1ec <__ieee754_rem_pio2f+0x240>)
 801bfb4:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 801bfb8:	429d      	cmp	r5, r3
 801bfba:	b087      	sub	sp, #28
 801bfbc:	eef0 7a40 	vmov.f32	s15, s0
 801bfc0:	4604      	mov	r4, r0
 801bfc2:	dc05      	bgt.n	801bfd0 <__ieee754_rem_pio2f+0x24>
 801bfc4:	2300      	movs	r3, #0
 801bfc6:	ed80 0a00 	vstr	s0, [r0]
 801bfca:	6043      	str	r3, [r0, #4]
 801bfcc:	2000      	movs	r0, #0
 801bfce:	e01a      	b.n	801c006 <__ieee754_rem_pio2f+0x5a>
 801bfd0:	4b87      	ldr	r3, [pc, #540]	; (801c1f0 <__ieee754_rem_pio2f+0x244>)
 801bfd2:	429d      	cmp	r5, r3
 801bfd4:	dc46      	bgt.n	801c064 <__ieee754_rem_pio2f+0xb8>
 801bfd6:	2e00      	cmp	r6, #0
 801bfd8:	ed9f 0a86 	vldr	s0, [pc, #536]	; 801c1f4 <__ieee754_rem_pio2f+0x248>
 801bfdc:	4b86      	ldr	r3, [pc, #536]	; (801c1f8 <__ieee754_rem_pio2f+0x24c>)
 801bfde:	f025 050f 	bic.w	r5, r5, #15
 801bfe2:	dd1f      	ble.n	801c024 <__ieee754_rem_pio2f+0x78>
 801bfe4:	429d      	cmp	r5, r3
 801bfe6:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bfea:	d00e      	beq.n	801c00a <__ieee754_rem_pio2f+0x5e>
 801bfec:	ed9f 7a83 	vldr	s14, [pc, #524]	; 801c1fc <__ieee754_rem_pio2f+0x250>
 801bff0:	ee37 0ac7 	vsub.f32	s0, s15, s14
 801bff4:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801bff8:	ed80 0a00 	vstr	s0, [r0]
 801bffc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c000:	2001      	movs	r0, #1
 801c002:	edc4 7a01 	vstr	s15, [r4, #4]
 801c006:	b007      	add	sp, #28
 801c008:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c00a:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 801c200 <__ieee754_rem_pio2f+0x254>
 801c00e:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 801c204 <__ieee754_rem_pio2f+0x258>
 801c012:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801c016:	ee77 6ac7 	vsub.f32	s13, s15, s14
 801c01a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c01e:	edc0 6a00 	vstr	s13, [r0]
 801c022:	e7eb      	b.n	801bffc <__ieee754_rem_pio2f+0x50>
 801c024:	429d      	cmp	r5, r3
 801c026:	ee77 7a80 	vadd.f32	s15, s15, s0
 801c02a:	d00e      	beq.n	801c04a <__ieee754_rem_pio2f+0x9e>
 801c02c:	ed9f 7a73 	vldr	s14, [pc, #460]	; 801c1fc <__ieee754_rem_pio2f+0x250>
 801c030:	ee37 0a87 	vadd.f32	s0, s15, s14
 801c034:	ee77 7ac0 	vsub.f32	s15, s15, s0
 801c038:	ed80 0a00 	vstr	s0, [r0]
 801c03c:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c040:	f04f 30ff 	mov.w	r0, #4294967295
 801c044:	edc4 7a01 	vstr	s15, [r4, #4]
 801c048:	e7dd      	b.n	801c006 <__ieee754_rem_pio2f+0x5a>
 801c04a:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 801c200 <__ieee754_rem_pio2f+0x254>
 801c04e:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 801c204 <__ieee754_rem_pio2f+0x258>
 801c052:	ee77 7a80 	vadd.f32	s15, s15, s0
 801c056:	ee77 6a87 	vadd.f32	s13, s15, s14
 801c05a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c05e:	edc0 6a00 	vstr	s13, [r0]
 801c062:	e7eb      	b.n	801c03c <__ieee754_rem_pio2f+0x90>
 801c064:	4b68      	ldr	r3, [pc, #416]	; (801c208 <__ieee754_rem_pio2f+0x25c>)
 801c066:	429d      	cmp	r5, r3
 801c068:	dc72      	bgt.n	801c150 <__ieee754_rem_pio2f+0x1a4>
 801c06a:	f000 fc1b 	bl	801c8a4 <fabsf>
 801c06e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 801c20c <__ieee754_rem_pio2f+0x260>
 801c072:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801c076:	eee0 7a07 	vfma.f32	s15, s0, s14
 801c07a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c07e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801c082:	ee17 0a90 	vmov	r0, s15
 801c086:	eddf 7a5b 	vldr	s15, [pc, #364]	; 801c1f4 <__ieee754_rem_pio2f+0x248>
 801c08a:	eea7 0a67 	vfms.f32	s0, s14, s15
 801c08e:	281f      	cmp	r0, #31
 801c090:	eddf 7a5a 	vldr	s15, [pc, #360]	; 801c1fc <__ieee754_rem_pio2f+0x250>
 801c094:	ee67 7a27 	vmul.f32	s15, s14, s15
 801c098:	eeb1 6a47 	vneg.f32	s12, s14
 801c09c:	ee70 6a67 	vsub.f32	s13, s0, s15
 801c0a0:	ee16 2a90 	vmov	r2, s13
 801c0a4:	dc1c      	bgt.n	801c0e0 <__ieee754_rem_pio2f+0x134>
 801c0a6:	495a      	ldr	r1, [pc, #360]	; (801c210 <__ieee754_rem_pio2f+0x264>)
 801c0a8:	1e47      	subs	r7, r0, #1
 801c0aa:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 801c0ae:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801c0b2:	428b      	cmp	r3, r1
 801c0b4:	d014      	beq.n	801c0e0 <__ieee754_rem_pio2f+0x134>
 801c0b6:	6022      	str	r2, [r4, #0]
 801c0b8:	ed94 7a00 	vldr	s14, [r4]
 801c0bc:	ee30 0a47 	vsub.f32	s0, s0, s14
 801c0c0:	2e00      	cmp	r6, #0
 801c0c2:	ee30 0a67 	vsub.f32	s0, s0, s15
 801c0c6:	ed84 0a01 	vstr	s0, [r4, #4]
 801c0ca:	da9c      	bge.n	801c006 <__ieee754_rem_pio2f+0x5a>
 801c0cc:	eeb1 7a47 	vneg.f32	s14, s14
 801c0d0:	eeb1 0a40 	vneg.f32	s0, s0
 801c0d4:	ed84 7a00 	vstr	s14, [r4]
 801c0d8:	ed84 0a01 	vstr	s0, [r4, #4]
 801c0dc:	4240      	negs	r0, r0
 801c0de:	e792      	b.n	801c006 <__ieee754_rem_pio2f+0x5a>
 801c0e0:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 801c0e4:	15eb      	asrs	r3, r5, #23
 801c0e6:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 801c0ea:	2d08      	cmp	r5, #8
 801c0ec:	dde3      	ble.n	801c0b6 <__ieee754_rem_pio2f+0x10a>
 801c0ee:	eddf 7a44 	vldr	s15, [pc, #272]	; 801c200 <__ieee754_rem_pio2f+0x254>
 801c0f2:	eddf 5a44 	vldr	s11, [pc, #272]	; 801c204 <__ieee754_rem_pio2f+0x258>
 801c0f6:	eef0 6a40 	vmov.f32	s13, s0
 801c0fa:	eee6 6a27 	vfma.f32	s13, s12, s15
 801c0fe:	ee30 0a66 	vsub.f32	s0, s0, s13
 801c102:	eea6 0a27 	vfma.f32	s0, s12, s15
 801c106:	eef0 7a40 	vmov.f32	s15, s0
 801c10a:	eed7 7a25 	vfnms.f32	s15, s14, s11
 801c10e:	ee76 5ae7 	vsub.f32	s11, s13, s15
 801c112:	ee15 2a90 	vmov	r2, s11
 801c116:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 801c11a:	1a5b      	subs	r3, r3, r1
 801c11c:	2b19      	cmp	r3, #25
 801c11e:	dc04      	bgt.n	801c12a <__ieee754_rem_pio2f+0x17e>
 801c120:	edc4 5a00 	vstr	s11, [r4]
 801c124:	eeb0 0a66 	vmov.f32	s0, s13
 801c128:	e7c6      	b.n	801c0b8 <__ieee754_rem_pio2f+0x10c>
 801c12a:	eddf 5a3a 	vldr	s11, [pc, #232]	; 801c214 <__ieee754_rem_pio2f+0x268>
 801c12e:	eeb0 0a66 	vmov.f32	s0, s13
 801c132:	eea6 0a25 	vfma.f32	s0, s12, s11
 801c136:	ee76 7ac0 	vsub.f32	s15, s13, s0
 801c13a:	eddf 6a37 	vldr	s13, [pc, #220]	; 801c218 <__ieee754_rem_pio2f+0x26c>
 801c13e:	eee6 7a25 	vfma.f32	s15, s12, s11
 801c142:	eed7 7a26 	vfnms.f32	s15, s14, s13
 801c146:	ee30 7a67 	vsub.f32	s14, s0, s15
 801c14a:	ed84 7a00 	vstr	s14, [r4]
 801c14e:	e7b3      	b.n	801c0b8 <__ieee754_rem_pio2f+0x10c>
 801c150:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 801c154:	db06      	blt.n	801c164 <__ieee754_rem_pio2f+0x1b8>
 801c156:	ee70 7a40 	vsub.f32	s15, s0, s0
 801c15a:	edc0 7a01 	vstr	s15, [r0, #4]
 801c15e:	edc0 7a00 	vstr	s15, [r0]
 801c162:	e733      	b.n	801bfcc <__ieee754_rem_pio2f+0x20>
 801c164:	15ea      	asrs	r2, r5, #23
 801c166:	3a86      	subs	r2, #134	; 0x86
 801c168:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 801c16c:	ee07 3a90 	vmov	s15, r3
 801c170:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c174:	eddf 6a29 	vldr	s13, [pc, #164]	; 801c21c <__ieee754_rem_pio2f+0x270>
 801c178:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c17c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c180:	ed8d 7a03 	vstr	s14, [sp, #12]
 801c184:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c188:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801c18c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801c190:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c194:	ed8d 7a04 	vstr	s14, [sp, #16]
 801c198:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801c19c:	eef5 7a40 	vcmp.f32	s15, #0.0
 801c1a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1a4:	edcd 7a05 	vstr	s15, [sp, #20]
 801c1a8:	d11e      	bne.n	801c1e8 <__ieee754_rem_pio2f+0x23c>
 801c1aa:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801c1ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c1b2:	bf14      	ite	ne
 801c1b4:	2302      	movne	r3, #2
 801c1b6:	2301      	moveq	r3, #1
 801c1b8:	4919      	ldr	r1, [pc, #100]	; (801c220 <__ieee754_rem_pio2f+0x274>)
 801c1ba:	9101      	str	r1, [sp, #4]
 801c1bc:	2102      	movs	r1, #2
 801c1be:	9100      	str	r1, [sp, #0]
 801c1c0:	a803      	add	r0, sp, #12
 801c1c2:	4621      	mov	r1, r4
 801c1c4:	f000 f88e 	bl	801c2e4 <__kernel_rem_pio2f>
 801c1c8:	2e00      	cmp	r6, #0
 801c1ca:	f6bf af1c 	bge.w	801c006 <__ieee754_rem_pio2f+0x5a>
 801c1ce:	edd4 7a00 	vldr	s15, [r4]
 801c1d2:	eef1 7a67 	vneg.f32	s15, s15
 801c1d6:	edc4 7a00 	vstr	s15, [r4]
 801c1da:	edd4 7a01 	vldr	s15, [r4, #4]
 801c1de:	eef1 7a67 	vneg.f32	s15, s15
 801c1e2:	edc4 7a01 	vstr	s15, [r4, #4]
 801c1e6:	e779      	b.n	801c0dc <__ieee754_rem_pio2f+0x130>
 801c1e8:	2303      	movs	r3, #3
 801c1ea:	e7e5      	b.n	801c1b8 <__ieee754_rem_pio2f+0x20c>
 801c1ec:	3f490fd8 	.word	0x3f490fd8
 801c1f0:	4016cbe3 	.word	0x4016cbe3
 801c1f4:	3fc90f80 	.word	0x3fc90f80
 801c1f8:	3fc90fd0 	.word	0x3fc90fd0
 801c1fc:	37354443 	.word	0x37354443
 801c200:	37354400 	.word	0x37354400
 801c204:	2e85a308 	.word	0x2e85a308
 801c208:	43490f80 	.word	0x43490f80
 801c20c:	3f22f984 	.word	0x3f22f984
 801c210:	08028120 	.word	0x08028120
 801c214:	2e85a300 	.word	0x2e85a300
 801c218:	248d3132 	.word	0x248d3132
 801c21c:	43800000 	.word	0x43800000
 801c220:	080281a0 	.word	0x080281a0

0801c224 <__kernel_cosf>:
 801c224:	ee10 3a10 	vmov	r3, s0
 801c228:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801c22c:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801c230:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 801c234:	da05      	bge.n	801c242 <__kernel_cosf+0x1e>
 801c236:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801c23a:	ee17 2a90 	vmov	r2, s15
 801c23e:	2a00      	cmp	r2, #0
 801c240:	d03d      	beq.n	801c2be <__kernel_cosf+0x9a>
 801c242:	ee60 5a00 	vmul.f32	s11, s0, s0
 801c246:	eddf 7a1f 	vldr	s15, [pc, #124]	; 801c2c4 <__kernel_cosf+0xa0>
 801c24a:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 801c2c8 <__kernel_cosf+0xa4>
 801c24e:	eddf 6a1f 	vldr	s13, [pc, #124]	; 801c2cc <__kernel_cosf+0xa8>
 801c252:	4a1f      	ldr	r2, [pc, #124]	; (801c2d0 <__kernel_cosf+0xac>)
 801c254:	eea5 7aa7 	vfma.f32	s14, s11, s15
 801c258:	4293      	cmp	r3, r2
 801c25a:	eddf 7a1e 	vldr	s15, [pc, #120]	; 801c2d4 <__kernel_cosf+0xb0>
 801c25e:	eee7 7a25 	vfma.f32	s15, s14, s11
 801c262:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 801c2d8 <__kernel_cosf+0xb4>
 801c266:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801c26a:	eddf 7a1c 	vldr	s15, [pc, #112]	; 801c2dc <__kernel_cosf+0xb8>
 801c26e:	eee7 7a25 	vfma.f32	s15, s14, s11
 801c272:	eeb0 7a66 	vmov.f32	s14, s13
 801c276:	eea7 7aa5 	vfma.f32	s14, s15, s11
 801c27a:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 801c27e:	ee65 7aa6 	vmul.f32	s15, s11, s13
 801c282:	ee67 6a25 	vmul.f32	s13, s14, s11
 801c286:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 801c28a:	eea5 7aa6 	vfma.f32	s14, s11, s13
 801c28e:	dc04      	bgt.n	801c29a <__kernel_cosf+0x76>
 801c290:	ee37 7ac7 	vsub.f32	s14, s15, s14
 801c294:	ee36 0a47 	vsub.f32	s0, s12, s14
 801c298:	4770      	bx	lr
 801c29a:	4a11      	ldr	r2, [pc, #68]	; (801c2e0 <__kernel_cosf+0xbc>)
 801c29c:	4293      	cmp	r3, r2
 801c29e:	bfda      	itte	le
 801c2a0:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 801c2a4:	ee06 3a90 	vmovle	s13, r3
 801c2a8:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 801c2ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801c2b0:	ee36 0a66 	vsub.f32	s0, s12, s13
 801c2b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c2b8:	ee30 0a67 	vsub.f32	s0, s0, s15
 801c2bc:	4770      	bx	lr
 801c2be:	eeb0 0a46 	vmov.f32	s0, s12
 801c2c2:	4770      	bx	lr
 801c2c4:	ad47d74e 	.word	0xad47d74e
 801c2c8:	310f74f6 	.word	0x310f74f6
 801c2cc:	3d2aaaab 	.word	0x3d2aaaab
 801c2d0:	3e999999 	.word	0x3e999999
 801c2d4:	b493f27c 	.word	0xb493f27c
 801c2d8:	37d00d01 	.word	0x37d00d01
 801c2dc:	bab60b61 	.word	0xbab60b61
 801c2e0:	3f480000 	.word	0x3f480000

0801c2e4 <__kernel_rem_pio2f>:
 801c2e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2e8:	ed2d 8b04 	vpush	{d8-d9}
 801c2ec:	b0d9      	sub	sp, #356	; 0x164
 801c2ee:	4688      	mov	r8, r1
 801c2f0:	9002      	str	r0, [sp, #8]
 801c2f2:	49bb      	ldr	r1, [pc, #748]	; (801c5e0 <__kernel_rem_pio2f+0x2fc>)
 801c2f4:	9866      	ldr	r0, [sp, #408]	; 0x198
 801c2f6:	9301      	str	r3, [sp, #4]
 801c2f8:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 801c2fc:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 801c300:	1e59      	subs	r1, r3, #1
 801c302:	1d13      	adds	r3, r2, #4
 801c304:	db27      	blt.n	801c356 <__kernel_rem_pio2f+0x72>
 801c306:	f1b2 0b03 	subs.w	fp, r2, #3
 801c30a:	bf48      	it	mi
 801c30c:	f102 0b04 	addmi.w	fp, r2, #4
 801c310:	ea4f 00eb 	mov.w	r0, fp, asr #3
 801c314:	1c45      	adds	r5, r0, #1
 801c316:	00ec      	lsls	r4, r5, #3
 801c318:	1a47      	subs	r7, r0, r1
 801c31a:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c31e:	9403      	str	r4, [sp, #12]
 801c320:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 801c324:	eb0a 0c01 	add.w	ip, sl, r1
 801c328:	ae1c      	add	r6, sp, #112	; 0x70
 801c32a:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 801c32e:	2400      	movs	r4, #0
 801c330:	4564      	cmp	r4, ip
 801c332:	dd12      	ble.n	801c35a <__kernel_rem_pio2f+0x76>
 801c334:	9b01      	ldr	r3, [sp, #4]
 801c336:	ac1c      	add	r4, sp, #112	; 0x70
 801c338:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 801c33c:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 801c340:	f04f 0c00 	mov.w	ip, #0
 801c344:	45d4      	cmp	ip, sl
 801c346:	dc27      	bgt.n	801c398 <__kernel_rem_pio2f+0xb4>
 801c348:	f8dd 9008 	ldr.w	r9, [sp, #8]
 801c34c:	eddf 7aa8 	vldr	s15, [pc, #672]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c350:	4627      	mov	r7, r4
 801c352:	2600      	movs	r6, #0
 801c354:	e016      	b.n	801c384 <__kernel_rem_pio2f+0xa0>
 801c356:	2000      	movs	r0, #0
 801c358:	e7dc      	b.n	801c314 <__kernel_rem_pio2f+0x30>
 801c35a:	42e7      	cmn	r7, r4
 801c35c:	bf5d      	ittte	pl
 801c35e:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 801c362:	ee07 3a90 	vmovpl	s15, r3
 801c366:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 801c36a:	eef0 7a47 	vmovmi.f32	s15, s14
 801c36e:	ece6 7a01 	vstmia	r6!, {s15}
 801c372:	3401      	adds	r4, #1
 801c374:	e7dc      	b.n	801c330 <__kernel_rem_pio2f+0x4c>
 801c376:	ecf9 6a01 	vldmia	r9!, {s13}
 801c37a:	ed97 7a00 	vldr	s14, [r7]
 801c37e:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c382:	3601      	adds	r6, #1
 801c384:	428e      	cmp	r6, r1
 801c386:	f1a7 0704 	sub.w	r7, r7, #4
 801c38a:	ddf4      	ble.n	801c376 <__kernel_rem_pio2f+0x92>
 801c38c:	eceb 7a01 	vstmia	fp!, {s15}
 801c390:	f10c 0c01 	add.w	ip, ip, #1
 801c394:	3404      	adds	r4, #4
 801c396:	e7d5      	b.n	801c344 <__kernel_rem_pio2f+0x60>
 801c398:	ab08      	add	r3, sp, #32
 801c39a:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 801c39e:	eddf 8a93 	vldr	s17, [pc, #588]	; 801c5ec <__kernel_rem_pio2f+0x308>
 801c3a2:	ed9f 9a91 	vldr	s18, [pc, #580]	; 801c5e8 <__kernel_rem_pio2f+0x304>
 801c3a6:	9304      	str	r3, [sp, #16]
 801c3a8:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 801c3ac:	4656      	mov	r6, sl
 801c3ae:	00b3      	lsls	r3, r6, #2
 801c3b0:	9305      	str	r3, [sp, #20]
 801c3b2:	ab58      	add	r3, sp, #352	; 0x160
 801c3b4:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 801c3b8:	ac08      	add	r4, sp, #32
 801c3ba:	ab44      	add	r3, sp, #272	; 0x110
 801c3bc:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 801c3c0:	46a4      	mov	ip, r4
 801c3c2:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 801c3c6:	4637      	mov	r7, r6
 801c3c8:	2f00      	cmp	r7, #0
 801c3ca:	f1a0 0004 	sub.w	r0, r0, #4
 801c3ce:	dc4f      	bgt.n	801c470 <__kernel_rem_pio2f+0x18c>
 801c3d0:	4628      	mov	r0, r5
 801c3d2:	e9cd 1206 	strd	r1, r2, [sp, #24]
 801c3d6:	f000 fa79 	bl	801c8cc <scalbnf>
 801c3da:	eeb0 8a40 	vmov.f32	s16, s0
 801c3de:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 801c3e2:	ee28 0a00 	vmul.f32	s0, s16, s0
 801c3e6:	f7ff fc77 	bl	801bcd8 <floorf>
 801c3ea:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 801c3ee:	eea0 8a67 	vfms.f32	s16, s0, s15
 801c3f2:	2d00      	cmp	r5, #0
 801c3f4:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801c3f8:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801c3fc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 801c400:	ee17 9a90 	vmov	r9, s15
 801c404:	ee38 8a40 	vsub.f32	s16, s16, s0
 801c408:	dd44      	ble.n	801c494 <__kernel_rem_pio2f+0x1b0>
 801c40a:	f106 3cff 	add.w	ip, r6, #4294967295
 801c40e:	ab08      	add	r3, sp, #32
 801c410:	f1c5 0e08 	rsb	lr, r5, #8
 801c414:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 801c418:	fa47 f00e 	asr.w	r0, r7, lr
 801c41c:	4481      	add	r9, r0
 801c41e:	fa00 f00e 	lsl.w	r0, r0, lr
 801c422:	1a3f      	subs	r7, r7, r0
 801c424:	f1c5 0007 	rsb	r0, r5, #7
 801c428:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 801c42c:	4107      	asrs	r7, r0
 801c42e:	2f00      	cmp	r7, #0
 801c430:	dd3f      	ble.n	801c4b2 <__kernel_rem_pio2f+0x1ce>
 801c432:	f04f 0e00 	mov.w	lr, #0
 801c436:	f109 0901 	add.w	r9, r9, #1
 801c43a:	4673      	mov	r3, lr
 801c43c:	4576      	cmp	r6, lr
 801c43e:	dc6b      	bgt.n	801c518 <__kernel_rem_pio2f+0x234>
 801c440:	2d00      	cmp	r5, #0
 801c442:	dd04      	ble.n	801c44e <__kernel_rem_pio2f+0x16a>
 801c444:	2d01      	cmp	r5, #1
 801c446:	d078      	beq.n	801c53a <__kernel_rem_pio2f+0x256>
 801c448:	2d02      	cmp	r5, #2
 801c44a:	f000 8081 	beq.w	801c550 <__kernel_rem_pio2f+0x26c>
 801c44e:	2f02      	cmp	r7, #2
 801c450:	d12f      	bne.n	801c4b2 <__kernel_rem_pio2f+0x1ce>
 801c452:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801c456:	ee30 8a48 	vsub.f32	s16, s0, s16
 801c45a:	b353      	cbz	r3, 801c4b2 <__kernel_rem_pio2f+0x1ce>
 801c45c:	4628      	mov	r0, r5
 801c45e:	e9cd 1206 	strd	r1, r2, [sp, #24]
 801c462:	f000 fa33 	bl	801c8cc <scalbnf>
 801c466:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 801c46a:	ee38 8a40 	vsub.f32	s16, s16, s0
 801c46e:	e020      	b.n	801c4b2 <__kernel_rem_pio2f+0x1ce>
 801c470:	ee60 7a28 	vmul.f32	s15, s0, s17
 801c474:	3f01      	subs	r7, #1
 801c476:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c47a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c47e:	eea7 0ac9 	vfms.f32	s0, s15, s18
 801c482:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801c486:	ecac 0a01 	vstmia	ip!, {s0}
 801c48a:	ed90 0a00 	vldr	s0, [r0]
 801c48e:	ee37 0a80 	vadd.f32	s0, s15, s0
 801c492:	e799      	b.n	801c3c8 <__kernel_rem_pio2f+0xe4>
 801c494:	d105      	bne.n	801c4a2 <__kernel_rem_pio2f+0x1be>
 801c496:	1e70      	subs	r0, r6, #1
 801c498:	ab08      	add	r3, sp, #32
 801c49a:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 801c49e:	11ff      	asrs	r7, r7, #7
 801c4a0:	e7c5      	b.n	801c42e <__kernel_rem_pio2f+0x14a>
 801c4a2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801c4a6:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801c4aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4ae:	da31      	bge.n	801c514 <__kernel_rem_pio2f+0x230>
 801c4b0:	2700      	movs	r7, #0
 801c4b2:	eeb5 8a40 	vcmp.f32	s16, #0.0
 801c4b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c4ba:	f040 809b 	bne.w	801c5f4 <__kernel_rem_pio2f+0x310>
 801c4be:	1e74      	subs	r4, r6, #1
 801c4c0:	46a4      	mov	ip, r4
 801c4c2:	2000      	movs	r0, #0
 801c4c4:	45d4      	cmp	ip, sl
 801c4c6:	da4a      	bge.n	801c55e <__kernel_rem_pio2f+0x27a>
 801c4c8:	2800      	cmp	r0, #0
 801c4ca:	d07a      	beq.n	801c5c2 <__kernel_rem_pio2f+0x2de>
 801c4cc:	ab08      	add	r3, sp, #32
 801c4ce:	3d08      	subs	r5, #8
 801c4d0:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 801c4d4:	2b00      	cmp	r3, #0
 801c4d6:	f000 8081 	beq.w	801c5dc <__kernel_rem_pio2f+0x2f8>
 801c4da:	4628      	mov	r0, r5
 801c4dc:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801c4e0:	00a5      	lsls	r5, r4, #2
 801c4e2:	f000 f9f3 	bl	801c8cc <scalbnf>
 801c4e6:	aa44      	add	r2, sp, #272	; 0x110
 801c4e8:	1d2b      	adds	r3, r5, #4
 801c4ea:	ed9f 7a40 	vldr	s14, [pc, #256]	; 801c5ec <__kernel_rem_pio2f+0x308>
 801c4ee:	18d1      	adds	r1, r2, r3
 801c4f0:	4622      	mov	r2, r4
 801c4f2:	2a00      	cmp	r2, #0
 801c4f4:	f280 80ae 	bge.w	801c654 <__kernel_rem_pio2f+0x370>
 801c4f8:	4622      	mov	r2, r4
 801c4fa:	2a00      	cmp	r2, #0
 801c4fc:	f2c0 80cc 	blt.w	801c698 <__kernel_rem_pio2f+0x3b4>
 801c500:	a944      	add	r1, sp, #272	; 0x110
 801c502:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 801c506:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 801c5e4 <__kernel_rem_pio2f+0x300>
 801c50a:	eddf 7a39 	vldr	s15, [pc, #228]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c50e:	2000      	movs	r0, #0
 801c510:	1aa1      	subs	r1, r4, r2
 801c512:	e0b6      	b.n	801c682 <__kernel_rem_pio2f+0x39e>
 801c514:	2702      	movs	r7, #2
 801c516:	e78c      	b.n	801c432 <__kernel_rem_pio2f+0x14e>
 801c518:	6820      	ldr	r0, [r4, #0]
 801c51a:	b94b      	cbnz	r3, 801c530 <__kernel_rem_pio2f+0x24c>
 801c51c:	b118      	cbz	r0, 801c526 <__kernel_rem_pio2f+0x242>
 801c51e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801c522:	6020      	str	r0, [r4, #0]
 801c524:	2001      	movs	r0, #1
 801c526:	f10e 0e01 	add.w	lr, lr, #1
 801c52a:	3404      	adds	r4, #4
 801c52c:	4603      	mov	r3, r0
 801c52e:	e785      	b.n	801c43c <__kernel_rem_pio2f+0x158>
 801c530:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 801c534:	6020      	str	r0, [r4, #0]
 801c536:	4618      	mov	r0, r3
 801c538:	e7f5      	b.n	801c526 <__kernel_rem_pio2f+0x242>
 801c53a:	1e74      	subs	r4, r6, #1
 801c53c:	a808      	add	r0, sp, #32
 801c53e:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801c542:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 801c546:	f10d 0c20 	add.w	ip, sp, #32
 801c54a:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 801c54e:	e77e      	b.n	801c44e <__kernel_rem_pio2f+0x16a>
 801c550:	1e74      	subs	r4, r6, #1
 801c552:	a808      	add	r0, sp, #32
 801c554:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 801c558:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 801c55c:	e7f3      	b.n	801c546 <__kernel_rem_pio2f+0x262>
 801c55e:	ab08      	add	r3, sp, #32
 801c560:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c564:	f10c 3cff 	add.w	ip, ip, #4294967295
 801c568:	4318      	orrs	r0, r3
 801c56a:	e7ab      	b.n	801c4c4 <__kernel_rem_pio2f+0x1e0>
 801c56c:	f10c 0c01 	add.w	ip, ip, #1
 801c570:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 801c574:	2c00      	cmp	r4, #0
 801c576:	d0f9      	beq.n	801c56c <__kernel_rem_pio2f+0x288>
 801c578:	9b05      	ldr	r3, [sp, #20]
 801c57a:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 801c57e:	eb0d 0003 	add.w	r0, sp, r3
 801c582:	9b01      	ldr	r3, [sp, #4]
 801c584:	18f4      	adds	r4, r6, r3
 801c586:	ab1c      	add	r3, sp, #112	; 0x70
 801c588:	1c77      	adds	r7, r6, #1
 801c58a:	384c      	subs	r0, #76	; 0x4c
 801c58c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 801c590:	4466      	add	r6, ip
 801c592:	42be      	cmp	r6, r7
 801c594:	f6ff af0b 	blt.w	801c3ae <__kernel_rem_pio2f+0xca>
 801c598:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 801c59c:	f8dd e008 	ldr.w	lr, [sp, #8]
 801c5a0:	ee07 3a90 	vmov	s15, r3
 801c5a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c5a8:	f04f 0c00 	mov.w	ip, #0
 801c5ac:	ece4 7a01 	vstmia	r4!, {s15}
 801c5b0:	eddf 7a0f 	vldr	s15, [pc, #60]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c5b4:	46a1      	mov	r9, r4
 801c5b6:	458c      	cmp	ip, r1
 801c5b8:	dd07      	ble.n	801c5ca <__kernel_rem_pio2f+0x2e6>
 801c5ba:	ece0 7a01 	vstmia	r0!, {s15}
 801c5be:	3701      	adds	r7, #1
 801c5c0:	e7e7      	b.n	801c592 <__kernel_rem_pio2f+0x2ae>
 801c5c2:	9804      	ldr	r0, [sp, #16]
 801c5c4:	f04f 0c01 	mov.w	ip, #1
 801c5c8:	e7d2      	b.n	801c570 <__kernel_rem_pio2f+0x28c>
 801c5ca:	ecfe 6a01 	vldmia	lr!, {s13}
 801c5ce:	ed39 7a01 	vldmdb	r9!, {s14}
 801c5d2:	f10c 0c01 	add.w	ip, ip, #1
 801c5d6:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c5da:	e7ec      	b.n	801c5b6 <__kernel_rem_pio2f+0x2d2>
 801c5dc:	3c01      	subs	r4, #1
 801c5de:	e775      	b.n	801c4cc <__kernel_rem_pio2f+0x1e8>
 801c5e0:	080284e4 	.word	0x080284e4
 801c5e4:	080284b8 	.word	0x080284b8
 801c5e8:	43800000 	.word	0x43800000
 801c5ec:	3b800000 	.word	0x3b800000
 801c5f0:	00000000 	.word	0x00000000
 801c5f4:	9b03      	ldr	r3, [sp, #12]
 801c5f6:	eeb0 0a48 	vmov.f32	s0, s16
 801c5fa:	1a98      	subs	r0, r3, r2
 801c5fc:	f000 f966 	bl	801c8cc <scalbnf>
 801c600:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 801c5e8 <__kernel_rem_pio2f+0x304>
 801c604:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801c608:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801c60c:	db19      	blt.n	801c642 <__kernel_rem_pio2f+0x35e>
 801c60e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 801c5ec <__kernel_rem_pio2f+0x308>
 801c612:	ee60 7a27 	vmul.f32	s15, s0, s15
 801c616:	aa08      	add	r2, sp, #32
 801c618:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c61c:	1c74      	adds	r4, r6, #1
 801c61e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c622:	3508      	adds	r5, #8
 801c624:	eea7 0ac7 	vfms.f32	s0, s15, s14
 801c628:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801c62c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801c630:	ee10 3a10 	vmov	r3, s0
 801c634:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 801c638:	ee17 3a90 	vmov	r3, s15
 801c63c:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 801c640:	e74b      	b.n	801c4da <__kernel_rem_pio2f+0x1f6>
 801c642:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801c646:	aa08      	add	r2, sp, #32
 801c648:	ee10 3a10 	vmov	r3, s0
 801c64c:	4634      	mov	r4, r6
 801c64e:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 801c652:	e742      	b.n	801c4da <__kernel_rem_pio2f+0x1f6>
 801c654:	a808      	add	r0, sp, #32
 801c656:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 801c65a:	9001      	str	r0, [sp, #4]
 801c65c:	ee07 0a90 	vmov	s15, r0
 801c660:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801c664:	3a01      	subs	r2, #1
 801c666:	ee67 7a80 	vmul.f32	s15, s15, s0
 801c66a:	ee20 0a07 	vmul.f32	s0, s0, s14
 801c66e:	ed61 7a01 	vstmdb	r1!, {s15}
 801c672:	e73e      	b.n	801c4f2 <__kernel_rem_pio2f+0x20e>
 801c674:	ecfc 6a01 	vldmia	ip!, {s13}
 801c678:	ecb6 7a01 	vldmia	r6!, {s14}
 801c67c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801c680:	3001      	adds	r0, #1
 801c682:	4550      	cmp	r0, sl
 801c684:	dc01      	bgt.n	801c68a <__kernel_rem_pio2f+0x3a6>
 801c686:	4288      	cmp	r0, r1
 801c688:	ddf4      	ble.n	801c674 <__kernel_rem_pio2f+0x390>
 801c68a:	a858      	add	r0, sp, #352	; 0x160
 801c68c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 801c690:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 801c694:	3a01      	subs	r2, #1
 801c696:	e730      	b.n	801c4fa <__kernel_rem_pio2f+0x216>
 801c698:	9a66      	ldr	r2, [sp, #408]	; 0x198
 801c69a:	2a02      	cmp	r2, #2
 801c69c:	dc09      	bgt.n	801c6b2 <__kernel_rem_pio2f+0x3ce>
 801c69e:	2a00      	cmp	r2, #0
 801c6a0:	dc2a      	bgt.n	801c6f8 <__kernel_rem_pio2f+0x414>
 801c6a2:	d043      	beq.n	801c72c <__kernel_rem_pio2f+0x448>
 801c6a4:	f009 0007 	and.w	r0, r9, #7
 801c6a8:	b059      	add	sp, #356	; 0x164
 801c6aa:	ecbd 8b04 	vpop	{d8-d9}
 801c6ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c6b2:	9b66      	ldr	r3, [sp, #408]	; 0x198
 801c6b4:	2b03      	cmp	r3, #3
 801c6b6:	d1f5      	bne.n	801c6a4 <__kernel_rem_pio2f+0x3c0>
 801c6b8:	ab30      	add	r3, sp, #192	; 0xc0
 801c6ba:	442b      	add	r3, r5
 801c6bc:	461a      	mov	r2, r3
 801c6be:	4619      	mov	r1, r3
 801c6c0:	4620      	mov	r0, r4
 801c6c2:	2800      	cmp	r0, #0
 801c6c4:	f1a1 0104 	sub.w	r1, r1, #4
 801c6c8:	dc51      	bgt.n	801c76e <__kernel_rem_pio2f+0x48a>
 801c6ca:	4621      	mov	r1, r4
 801c6cc:	2901      	cmp	r1, #1
 801c6ce:	f1a2 0204 	sub.w	r2, r2, #4
 801c6d2:	dc5c      	bgt.n	801c78e <__kernel_rem_pio2f+0x4aa>
 801c6d4:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c6d8:	3304      	adds	r3, #4
 801c6da:	2c01      	cmp	r4, #1
 801c6dc:	dc67      	bgt.n	801c7ae <__kernel_rem_pio2f+0x4ca>
 801c6de:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801c6e2:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 801c6e6:	2f00      	cmp	r7, #0
 801c6e8:	d167      	bne.n	801c7ba <__kernel_rem_pio2f+0x4d6>
 801c6ea:	edc8 6a00 	vstr	s13, [r8]
 801c6ee:	ed88 7a01 	vstr	s14, [r8, #4]
 801c6f2:	edc8 7a02 	vstr	s15, [r8, #8]
 801c6f6:	e7d5      	b.n	801c6a4 <__kernel_rem_pio2f+0x3c0>
 801c6f8:	aa30      	add	r2, sp, #192	; 0xc0
 801c6fa:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c6fe:	4413      	add	r3, r2
 801c700:	4622      	mov	r2, r4
 801c702:	2a00      	cmp	r2, #0
 801c704:	da24      	bge.n	801c750 <__kernel_rem_pio2f+0x46c>
 801c706:	b34f      	cbz	r7, 801c75c <__kernel_rem_pio2f+0x478>
 801c708:	eef1 7a47 	vneg.f32	s15, s14
 801c70c:	edc8 7a00 	vstr	s15, [r8]
 801c710:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 801c714:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c718:	aa31      	add	r2, sp, #196	; 0xc4
 801c71a:	2301      	movs	r3, #1
 801c71c:	429c      	cmp	r4, r3
 801c71e:	da20      	bge.n	801c762 <__kernel_rem_pio2f+0x47e>
 801c720:	b10f      	cbz	r7, 801c726 <__kernel_rem_pio2f+0x442>
 801c722:	eef1 7a67 	vneg.f32	s15, s15
 801c726:	edc8 7a01 	vstr	s15, [r8, #4]
 801c72a:	e7bb      	b.n	801c6a4 <__kernel_rem_pio2f+0x3c0>
 801c72c:	aa30      	add	r2, sp, #192	; 0xc0
 801c72e:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 801c5f0 <__kernel_rem_pio2f+0x30c>
 801c732:	4413      	add	r3, r2
 801c734:	2c00      	cmp	r4, #0
 801c736:	da05      	bge.n	801c744 <__kernel_rem_pio2f+0x460>
 801c738:	b10f      	cbz	r7, 801c73e <__kernel_rem_pio2f+0x45a>
 801c73a:	eef1 7a67 	vneg.f32	s15, s15
 801c73e:	edc8 7a00 	vstr	s15, [r8]
 801c742:	e7af      	b.n	801c6a4 <__kernel_rem_pio2f+0x3c0>
 801c744:	ed33 7a01 	vldmdb	r3!, {s14}
 801c748:	3c01      	subs	r4, #1
 801c74a:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c74e:	e7f1      	b.n	801c734 <__kernel_rem_pio2f+0x450>
 801c750:	ed73 7a01 	vldmdb	r3!, {s15}
 801c754:	3a01      	subs	r2, #1
 801c756:	ee37 7a27 	vadd.f32	s14, s14, s15
 801c75a:	e7d2      	b.n	801c702 <__kernel_rem_pio2f+0x41e>
 801c75c:	eef0 7a47 	vmov.f32	s15, s14
 801c760:	e7d4      	b.n	801c70c <__kernel_rem_pio2f+0x428>
 801c762:	ecb2 7a01 	vldmia	r2!, {s14}
 801c766:	3301      	adds	r3, #1
 801c768:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c76c:	e7d6      	b.n	801c71c <__kernel_rem_pio2f+0x438>
 801c76e:	edd1 7a00 	vldr	s15, [r1]
 801c772:	edd1 6a01 	vldr	s13, [r1, #4]
 801c776:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801c77a:	3801      	subs	r0, #1
 801c77c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c780:	ed81 7a00 	vstr	s14, [r1]
 801c784:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c788:	edc1 7a01 	vstr	s15, [r1, #4]
 801c78c:	e799      	b.n	801c6c2 <__kernel_rem_pio2f+0x3de>
 801c78e:	edd2 7a00 	vldr	s15, [r2]
 801c792:	edd2 6a01 	vldr	s13, [r2, #4]
 801c796:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801c79a:	3901      	subs	r1, #1
 801c79c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801c7a0:	ed82 7a00 	vstr	s14, [r2]
 801c7a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801c7a8:	edc2 7a01 	vstr	s15, [r2, #4]
 801c7ac:	e78e      	b.n	801c6cc <__kernel_rem_pio2f+0x3e8>
 801c7ae:	ed33 7a01 	vldmdb	r3!, {s14}
 801c7b2:	3c01      	subs	r4, #1
 801c7b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 801c7b8:	e78f      	b.n	801c6da <__kernel_rem_pio2f+0x3f6>
 801c7ba:	eef1 6a66 	vneg.f32	s13, s13
 801c7be:	eeb1 7a47 	vneg.f32	s14, s14
 801c7c2:	edc8 6a00 	vstr	s13, [r8]
 801c7c6:	ed88 7a01 	vstr	s14, [r8, #4]
 801c7ca:	eef1 7a67 	vneg.f32	s15, s15
 801c7ce:	e790      	b.n	801c6f2 <__kernel_rem_pio2f+0x40e>

0801c7d0 <__kernel_sinf>:
 801c7d0:	ee10 3a10 	vmov	r3, s0
 801c7d4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801c7d8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801c7dc:	da04      	bge.n	801c7e8 <__kernel_sinf+0x18>
 801c7de:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801c7e2:	ee17 3a90 	vmov	r3, s15
 801c7e6:	b35b      	cbz	r3, 801c840 <__kernel_sinf+0x70>
 801c7e8:	ee20 7a00 	vmul.f32	s14, s0, s0
 801c7ec:	eddf 7a15 	vldr	s15, [pc, #84]	; 801c844 <__kernel_sinf+0x74>
 801c7f0:	ed9f 6a15 	vldr	s12, [pc, #84]	; 801c848 <__kernel_sinf+0x78>
 801c7f4:	eea7 6a27 	vfma.f32	s12, s14, s15
 801c7f8:	eddf 7a14 	vldr	s15, [pc, #80]	; 801c84c <__kernel_sinf+0x7c>
 801c7fc:	eee6 7a07 	vfma.f32	s15, s12, s14
 801c800:	ed9f 6a13 	vldr	s12, [pc, #76]	; 801c850 <__kernel_sinf+0x80>
 801c804:	eea7 6a87 	vfma.f32	s12, s15, s14
 801c808:	eddf 7a12 	vldr	s15, [pc, #72]	; 801c854 <__kernel_sinf+0x84>
 801c80c:	ee60 6a07 	vmul.f32	s13, s0, s14
 801c810:	eee6 7a07 	vfma.f32	s15, s12, s14
 801c814:	b930      	cbnz	r0, 801c824 <__kernel_sinf+0x54>
 801c816:	ed9f 6a10 	vldr	s12, [pc, #64]	; 801c858 <__kernel_sinf+0x88>
 801c81a:	eea7 6a27 	vfma.f32	s12, s14, s15
 801c81e:	eea6 0a26 	vfma.f32	s0, s12, s13
 801c822:	4770      	bx	lr
 801c824:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 801c828:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801c82c:	eee0 7a86 	vfma.f32	s15, s1, s12
 801c830:	eed7 0a87 	vfnms.f32	s1, s15, s14
 801c834:	eddf 7a09 	vldr	s15, [pc, #36]	; 801c85c <__kernel_sinf+0x8c>
 801c838:	eee6 0aa7 	vfma.f32	s1, s13, s15
 801c83c:	ee30 0a60 	vsub.f32	s0, s0, s1
 801c840:	4770      	bx	lr
 801c842:	bf00      	nop
 801c844:	2f2ec9d3 	.word	0x2f2ec9d3
 801c848:	b2d72f34 	.word	0xb2d72f34
 801c84c:	3638ef1b 	.word	0x3638ef1b
 801c850:	b9500d01 	.word	0xb9500d01
 801c854:	3c088889 	.word	0x3c088889
 801c858:	be2aaaab 	.word	0xbe2aaaab
 801c85c:	3e2aaaab 	.word	0x3e2aaaab

0801c860 <with_errnof>:
 801c860:	b513      	push	{r0, r1, r4, lr}
 801c862:	4604      	mov	r4, r0
 801c864:	ed8d 0a01 	vstr	s0, [sp, #4]
 801c868:	f000 f8c8 	bl	801c9fc <__errno>
 801c86c:	ed9d 0a01 	vldr	s0, [sp, #4]
 801c870:	6004      	str	r4, [r0, #0]
 801c872:	b002      	add	sp, #8
 801c874:	bd10      	pop	{r4, pc}

0801c876 <xflowf>:
 801c876:	b130      	cbz	r0, 801c886 <xflowf+0x10>
 801c878:	eef1 7a40 	vneg.f32	s15, s0
 801c87c:	ee27 0a80 	vmul.f32	s0, s15, s0
 801c880:	2022      	movs	r0, #34	; 0x22
 801c882:	f7ff bfed 	b.w	801c860 <with_errnof>
 801c886:	eef0 7a40 	vmov.f32	s15, s0
 801c88a:	e7f7      	b.n	801c87c <xflowf+0x6>

0801c88c <__math_uflowf>:
 801c88c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 801c894 <__math_uflowf+0x8>
 801c890:	f7ff bff1 	b.w	801c876 <xflowf>
 801c894:	10000000 	.word	0x10000000

0801c898 <__math_oflowf>:
 801c898:	ed9f 0a01 	vldr	s0, [pc, #4]	; 801c8a0 <__math_oflowf+0x8>
 801c89c:	f7ff bfeb 	b.w	801c876 <xflowf>
 801c8a0:	70000000 	.word	0x70000000

0801c8a4 <fabsf>:
 801c8a4:	ee10 3a10 	vmov	r3, s0
 801c8a8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801c8ac:	ee00 3a10 	vmov	s0, r3
 801c8b0:	4770      	bx	lr

0801c8b2 <finitef>:
 801c8b2:	b082      	sub	sp, #8
 801c8b4:	ed8d 0a01 	vstr	s0, [sp, #4]
 801c8b8:	9801      	ldr	r0, [sp, #4]
 801c8ba:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 801c8be:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 801c8c2:	bfac      	ite	ge
 801c8c4:	2000      	movge	r0, #0
 801c8c6:	2001      	movlt	r0, #1
 801c8c8:	b002      	add	sp, #8
 801c8ca:	4770      	bx	lr

0801c8cc <scalbnf>:
 801c8cc:	ee10 3a10 	vmov	r3, s0
 801c8d0:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 801c8d4:	d025      	beq.n	801c922 <scalbnf+0x56>
 801c8d6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 801c8da:	d302      	bcc.n	801c8e2 <scalbnf+0x16>
 801c8dc:	ee30 0a00 	vadd.f32	s0, s0, s0
 801c8e0:	4770      	bx	lr
 801c8e2:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 801c8e6:	d122      	bne.n	801c92e <scalbnf+0x62>
 801c8e8:	4b2a      	ldr	r3, [pc, #168]	; (801c994 <scalbnf+0xc8>)
 801c8ea:	eddf 7a2b 	vldr	s15, [pc, #172]	; 801c998 <scalbnf+0xcc>
 801c8ee:	4298      	cmp	r0, r3
 801c8f0:	ee20 0a27 	vmul.f32	s0, s0, s15
 801c8f4:	db16      	blt.n	801c924 <scalbnf+0x58>
 801c8f6:	ee10 3a10 	vmov	r3, s0
 801c8fa:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801c8fe:	3a19      	subs	r2, #25
 801c900:	4402      	add	r2, r0
 801c902:	2afe      	cmp	r2, #254	; 0xfe
 801c904:	dd15      	ble.n	801c932 <scalbnf+0x66>
 801c906:	ee10 3a10 	vmov	r3, s0
 801c90a:	eddf 7a24 	vldr	s15, [pc, #144]	; 801c99c <scalbnf+0xd0>
 801c90e:	eddf 6a24 	vldr	s13, [pc, #144]	; 801c9a0 <scalbnf+0xd4>
 801c912:	2b00      	cmp	r3, #0
 801c914:	eeb0 7a67 	vmov.f32	s14, s15
 801c918:	bfb8      	it	lt
 801c91a:	eef0 7a66 	vmovlt.f32	s15, s13
 801c91e:	ee27 0a27 	vmul.f32	s0, s14, s15
 801c922:	4770      	bx	lr
 801c924:	eddf 7a1f 	vldr	s15, [pc, #124]	; 801c9a4 <scalbnf+0xd8>
 801c928:	ee20 0a27 	vmul.f32	s0, s0, s15
 801c92c:	4770      	bx	lr
 801c92e:	0dd2      	lsrs	r2, r2, #23
 801c930:	e7e6      	b.n	801c900 <scalbnf+0x34>
 801c932:	2a00      	cmp	r2, #0
 801c934:	dd06      	ble.n	801c944 <scalbnf+0x78>
 801c936:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801c93a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 801c93e:	ee00 3a10 	vmov	s0, r3
 801c942:	4770      	bx	lr
 801c944:	f112 0f16 	cmn.w	r2, #22
 801c948:	da1a      	bge.n	801c980 <scalbnf+0xb4>
 801c94a:	f24c 3350 	movw	r3, #50000	; 0xc350
 801c94e:	4298      	cmp	r0, r3
 801c950:	ee10 3a10 	vmov	r3, s0
 801c954:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 801c958:	dd0a      	ble.n	801c970 <scalbnf+0xa4>
 801c95a:	ed9f 0a10 	vldr	s0, [pc, #64]	; 801c99c <scalbnf+0xd0>
 801c95e:	ed9f 7a10 	vldr	s14, [pc, #64]	; 801c9a0 <scalbnf+0xd4>
 801c962:	eef0 7a40 	vmov.f32	s15, s0
 801c966:	2b00      	cmp	r3, #0
 801c968:	bf18      	it	ne
 801c96a:	eeb0 0a47 	vmovne.f32	s0, s14
 801c96e:	e7db      	b.n	801c928 <scalbnf+0x5c>
 801c970:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 801c9a4 <scalbnf+0xd8>
 801c974:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 801c9a8 <scalbnf+0xdc>
 801c978:	eef0 7a40 	vmov.f32	s15, s0
 801c97c:	2b00      	cmp	r3, #0
 801c97e:	e7f3      	b.n	801c968 <scalbnf+0x9c>
 801c980:	3219      	adds	r2, #25
 801c982:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 801c986:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 801c98a:	eddf 7a08 	vldr	s15, [pc, #32]	; 801c9ac <scalbnf+0xe0>
 801c98e:	ee07 3a10 	vmov	s14, r3
 801c992:	e7c4      	b.n	801c91e <scalbnf+0x52>
 801c994:	ffff3cb0 	.word	0xffff3cb0
 801c998:	4c000000 	.word	0x4c000000
 801c99c:	7149f2ca 	.word	0x7149f2ca
 801c9a0:	f149f2ca 	.word	0xf149f2ca
 801c9a4:	0da24260 	.word	0x0da24260
 801c9a8:	8da24260 	.word	0x8da24260
 801c9ac:	33000000 	.word	0x33000000

0801c9b0 <abort>:
 801c9b0:	b508      	push	{r3, lr}
 801c9b2:	2006      	movs	r0, #6
 801c9b4:	f000 ff9c 	bl	801d8f0 <raise>
 801c9b8:	2001      	movs	r0, #1
 801c9ba:	f7e6 fe32 	bl	8003622 <_exit>
	...

0801c9c0 <__assert_func>:
 801c9c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801c9c2:	4614      	mov	r4, r2
 801c9c4:	461a      	mov	r2, r3
 801c9c6:	4b09      	ldr	r3, [pc, #36]	; (801c9ec <__assert_func+0x2c>)
 801c9c8:	681b      	ldr	r3, [r3, #0]
 801c9ca:	4605      	mov	r5, r0
 801c9cc:	68d8      	ldr	r0, [r3, #12]
 801c9ce:	b14c      	cbz	r4, 801c9e4 <__assert_func+0x24>
 801c9d0:	4b07      	ldr	r3, [pc, #28]	; (801c9f0 <__assert_func+0x30>)
 801c9d2:	9100      	str	r1, [sp, #0]
 801c9d4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801c9d8:	4906      	ldr	r1, [pc, #24]	; (801c9f4 <__assert_func+0x34>)
 801c9da:	462b      	mov	r3, r5
 801c9dc:	f000 f814 	bl	801ca08 <fiprintf>
 801c9e0:	f7ff ffe6 	bl	801c9b0 <abort>
 801c9e4:	4b04      	ldr	r3, [pc, #16]	; (801c9f8 <__assert_func+0x38>)
 801c9e6:	461c      	mov	r4, r3
 801c9e8:	e7f3      	b.n	801c9d2 <__assert_func+0x12>
 801c9ea:	bf00      	nop
 801c9ec:	20000014 	.word	0x20000014
 801c9f0:	080284f0 	.word	0x080284f0
 801c9f4:	080284fd 	.word	0x080284fd
 801c9f8:	080285a1 	.word	0x080285a1

0801c9fc <__errno>:
 801c9fc:	4b01      	ldr	r3, [pc, #4]	; (801ca04 <__errno+0x8>)
 801c9fe:	6818      	ldr	r0, [r3, #0]
 801ca00:	4770      	bx	lr
 801ca02:	bf00      	nop
 801ca04:	20000014 	.word	0x20000014

0801ca08 <fiprintf>:
 801ca08:	b40e      	push	{r1, r2, r3}
 801ca0a:	b503      	push	{r0, r1, lr}
 801ca0c:	4601      	mov	r1, r0
 801ca0e:	ab03      	add	r3, sp, #12
 801ca10:	4805      	ldr	r0, [pc, #20]	; (801ca28 <fiprintf+0x20>)
 801ca12:	f853 2b04 	ldr.w	r2, [r3], #4
 801ca16:	6800      	ldr	r0, [r0, #0]
 801ca18:	9301      	str	r3, [sp, #4]
 801ca1a:	f000 f975 	bl	801cd08 <_vfiprintf_r>
 801ca1e:	b002      	add	sp, #8
 801ca20:	f85d eb04 	ldr.w	lr, [sp], #4
 801ca24:	b003      	add	sp, #12
 801ca26:	4770      	bx	lr
 801ca28:	20000014 	.word	0x20000014

0801ca2c <__libc_init_array>:
 801ca2c:	b570      	push	{r4, r5, r6, lr}
 801ca2e:	4d0d      	ldr	r5, [pc, #52]	; (801ca64 <__libc_init_array+0x38>)
 801ca30:	4c0d      	ldr	r4, [pc, #52]	; (801ca68 <__libc_init_array+0x3c>)
 801ca32:	1b64      	subs	r4, r4, r5
 801ca34:	10a4      	asrs	r4, r4, #2
 801ca36:	2600      	movs	r6, #0
 801ca38:	42a6      	cmp	r6, r4
 801ca3a:	d109      	bne.n	801ca50 <__libc_init_array+0x24>
 801ca3c:	4d0b      	ldr	r5, [pc, #44]	; (801ca6c <__libc_init_array+0x40>)
 801ca3e:	4c0c      	ldr	r4, [pc, #48]	; (801ca70 <__libc_init_array+0x44>)
 801ca40:	f002 fd96 	bl	801f570 <_init>
 801ca44:	1b64      	subs	r4, r4, r5
 801ca46:	10a4      	asrs	r4, r4, #2
 801ca48:	2600      	movs	r6, #0
 801ca4a:	42a6      	cmp	r6, r4
 801ca4c:	d105      	bne.n	801ca5a <__libc_init_array+0x2e>
 801ca4e:	bd70      	pop	{r4, r5, r6, pc}
 801ca50:	f855 3b04 	ldr.w	r3, [r5], #4
 801ca54:	4798      	blx	r3
 801ca56:	3601      	adds	r6, #1
 801ca58:	e7ee      	b.n	801ca38 <__libc_init_array+0xc>
 801ca5a:	f855 3b04 	ldr.w	r3, [r5], #4
 801ca5e:	4798      	blx	r3
 801ca60:	3601      	adds	r6, #1
 801ca62:	e7f2      	b.n	801ca4a <__libc_init_array+0x1e>
 801ca64:	08029084 	.word	0x08029084
 801ca68:	08029084 	.word	0x08029084
 801ca6c:	08029084 	.word	0x08029084
 801ca70:	0802908c 	.word	0x0802908c

0801ca74 <malloc>:
 801ca74:	4b02      	ldr	r3, [pc, #8]	; (801ca80 <malloc+0xc>)
 801ca76:	4601      	mov	r1, r0
 801ca78:	6818      	ldr	r0, [r3, #0]
 801ca7a:	f000 b8a7 	b.w	801cbcc <_malloc_r>
 801ca7e:	bf00      	nop
 801ca80:	20000014 	.word	0x20000014

0801ca84 <free>:
 801ca84:	4b02      	ldr	r3, [pc, #8]	; (801ca90 <free+0xc>)
 801ca86:	4601      	mov	r1, r0
 801ca88:	6818      	ldr	r0, [r3, #0]
 801ca8a:	f000 b833 	b.w	801caf4 <_free_r>
 801ca8e:	bf00      	nop
 801ca90:	20000014 	.word	0x20000014

0801ca94 <memcpy>:
 801ca94:	440a      	add	r2, r1
 801ca96:	4291      	cmp	r1, r2
 801ca98:	f100 33ff 	add.w	r3, r0, #4294967295
 801ca9c:	d100      	bne.n	801caa0 <memcpy+0xc>
 801ca9e:	4770      	bx	lr
 801caa0:	b510      	push	{r4, lr}
 801caa2:	f811 4b01 	ldrb.w	r4, [r1], #1
 801caa6:	f803 4f01 	strb.w	r4, [r3, #1]!
 801caaa:	4291      	cmp	r1, r2
 801caac:	d1f9      	bne.n	801caa2 <memcpy+0xe>
 801caae:	bd10      	pop	{r4, pc}

0801cab0 <memmove>:
 801cab0:	4288      	cmp	r0, r1
 801cab2:	b510      	push	{r4, lr}
 801cab4:	eb01 0402 	add.w	r4, r1, r2
 801cab8:	d902      	bls.n	801cac0 <memmove+0x10>
 801caba:	4284      	cmp	r4, r0
 801cabc:	4623      	mov	r3, r4
 801cabe:	d807      	bhi.n	801cad0 <memmove+0x20>
 801cac0:	1e43      	subs	r3, r0, #1
 801cac2:	42a1      	cmp	r1, r4
 801cac4:	d008      	beq.n	801cad8 <memmove+0x28>
 801cac6:	f811 2b01 	ldrb.w	r2, [r1], #1
 801caca:	f803 2f01 	strb.w	r2, [r3, #1]!
 801cace:	e7f8      	b.n	801cac2 <memmove+0x12>
 801cad0:	4402      	add	r2, r0
 801cad2:	4601      	mov	r1, r0
 801cad4:	428a      	cmp	r2, r1
 801cad6:	d100      	bne.n	801cada <memmove+0x2a>
 801cad8:	bd10      	pop	{r4, pc}
 801cada:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801cade:	f802 4d01 	strb.w	r4, [r2, #-1]!
 801cae2:	e7f7      	b.n	801cad4 <memmove+0x24>

0801cae4 <memset>:
 801cae4:	4402      	add	r2, r0
 801cae6:	4603      	mov	r3, r0
 801cae8:	4293      	cmp	r3, r2
 801caea:	d100      	bne.n	801caee <memset+0xa>
 801caec:	4770      	bx	lr
 801caee:	f803 1b01 	strb.w	r1, [r3], #1
 801caf2:	e7f9      	b.n	801cae8 <memset+0x4>

0801caf4 <_free_r>:
 801caf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801caf6:	2900      	cmp	r1, #0
 801caf8:	d044      	beq.n	801cb84 <_free_r+0x90>
 801cafa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801cafe:	9001      	str	r0, [sp, #4]
 801cb00:	2b00      	cmp	r3, #0
 801cb02:	f1a1 0404 	sub.w	r4, r1, #4
 801cb06:	bfb8      	it	lt
 801cb08:	18e4      	addlt	r4, r4, r3
 801cb0a:	f002 f8cb 	bl	801eca4 <__malloc_lock>
 801cb0e:	4a1e      	ldr	r2, [pc, #120]	; (801cb88 <_free_r+0x94>)
 801cb10:	9801      	ldr	r0, [sp, #4]
 801cb12:	6813      	ldr	r3, [r2, #0]
 801cb14:	b933      	cbnz	r3, 801cb24 <_free_r+0x30>
 801cb16:	6063      	str	r3, [r4, #4]
 801cb18:	6014      	str	r4, [r2, #0]
 801cb1a:	b003      	add	sp, #12
 801cb1c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801cb20:	f002 b8c6 	b.w	801ecb0 <__malloc_unlock>
 801cb24:	42a3      	cmp	r3, r4
 801cb26:	d908      	bls.n	801cb3a <_free_r+0x46>
 801cb28:	6825      	ldr	r5, [r4, #0]
 801cb2a:	1961      	adds	r1, r4, r5
 801cb2c:	428b      	cmp	r3, r1
 801cb2e:	bf01      	itttt	eq
 801cb30:	6819      	ldreq	r1, [r3, #0]
 801cb32:	685b      	ldreq	r3, [r3, #4]
 801cb34:	1949      	addeq	r1, r1, r5
 801cb36:	6021      	streq	r1, [r4, #0]
 801cb38:	e7ed      	b.n	801cb16 <_free_r+0x22>
 801cb3a:	461a      	mov	r2, r3
 801cb3c:	685b      	ldr	r3, [r3, #4]
 801cb3e:	b10b      	cbz	r3, 801cb44 <_free_r+0x50>
 801cb40:	42a3      	cmp	r3, r4
 801cb42:	d9fa      	bls.n	801cb3a <_free_r+0x46>
 801cb44:	6811      	ldr	r1, [r2, #0]
 801cb46:	1855      	adds	r5, r2, r1
 801cb48:	42a5      	cmp	r5, r4
 801cb4a:	d10b      	bne.n	801cb64 <_free_r+0x70>
 801cb4c:	6824      	ldr	r4, [r4, #0]
 801cb4e:	4421      	add	r1, r4
 801cb50:	1854      	adds	r4, r2, r1
 801cb52:	42a3      	cmp	r3, r4
 801cb54:	6011      	str	r1, [r2, #0]
 801cb56:	d1e0      	bne.n	801cb1a <_free_r+0x26>
 801cb58:	681c      	ldr	r4, [r3, #0]
 801cb5a:	685b      	ldr	r3, [r3, #4]
 801cb5c:	6053      	str	r3, [r2, #4]
 801cb5e:	4421      	add	r1, r4
 801cb60:	6011      	str	r1, [r2, #0]
 801cb62:	e7da      	b.n	801cb1a <_free_r+0x26>
 801cb64:	d902      	bls.n	801cb6c <_free_r+0x78>
 801cb66:	230c      	movs	r3, #12
 801cb68:	6003      	str	r3, [r0, #0]
 801cb6a:	e7d6      	b.n	801cb1a <_free_r+0x26>
 801cb6c:	6825      	ldr	r5, [r4, #0]
 801cb6e:	1961      	adds	r1, r4, r5
 801cb70:	428b      	cmp	r3, r1
 801cb72:	bf04      	itt	eq
 801cb74:	6819      	ldreq	r1, [r3, #0]
 801cb76:	685b      	ldreq	r3, [r3, #4]
 801cb78:	6063      	str	r3, [r4, #4]
 801cb7a:	bf04      	itt	eq
 801cb7c:	1949      	addeq	r1, r1, r5
 801cb7e:	6021      	streq	r1, [r4, #0]
 801cb80:	6054      	str	r4, [r2, #4]
 801cb82:	e7ca      	b.n	801cb1a <_free_r+0x26>
 801cb84:	b003      	add	sp, #12
 801cb86:	bd30      	pop	{r4, r5, pc}
 801cb88:	2001128c 	.word	0x2001128c

0801cb8c <sbrk_aligned>:
 801cb8c:	b570      	push	{r4, r5, r6, lr}
 801cb8e:	4e0e      	ldr	r6, [pc, #56]	; (801cbc8 <sbrk_aligned+0x3c>)
 801cb90:	460c      	mov	r4, r1
 801cb92:	6831      	ldr	r1, [r6, #0]
 801cb94:	4605      	mov	r5, r0
 801cb96:	b911      	cbnz	r1, 801cb9e <sbrk_aligned+0x12>
 801cb98:	f000 fe72 	bl	801d880 <_sbrk_r>
 801cb9c:	6030      	str	r0, [r6, #0]
 801cb9e:	4621      	mov	r1, r4
 801cba0:	4628      	mov	r0, r5
 801cba2:	f000 fe6d 	bl	801d880 <_sbrk_r>
 801cba6:	1c43      	adds	r3, r0, #1
 801cba8:	d00a      	beq.n	801cbc0 <sbrk_aligned+0x34>
 801cbaa:	1cc4      	adds	r4, r0, #3
 801cbac:	f024 0403 	bic.w	r4, r4, #3
 801cbb0:	42a0      	cmp	r0, r4
 801cbb2:	d007      	beq.n	801cbc4 <sbrk_aligned+0x38>
 801cbb4:	1a21      	subs	r1, r4, r0
 801cbb6:	4628      	mov	r0, r5
 801cbb8:	f000 fe62 	bl	801d880 <_sbrk_r>
 801cbbc:	3001      	adds	r0, #1
 801cbbe:	d101      	bne.n	801cbc4 <sbrk_aligned+0x38>
 801cbc0:	f04f 34ff 	mov.w	r4, #4294967295
 801cbc4:	4620      	mov	r0, r4
 801cbc6:	bd70      	pop	{r4, r5, r6, pc}
 801cbc8:	20011290 	.word	0x20011290

0801cbcc <_malloc_r>:
 801cbcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cbd0:	1ccd      	adds	r5, r1, #3
 801cbd2:	f025 0503 	bic.w	r5, r5, #3
 801cbd6:	3508      	adds	r5, #8
 801cbd8:	2d0c      	cmp	r5, #12
 801cbda:	bf38      	it	cc
 801cbdc:	250c      	movcc	r5, #12
 801cbde:	2d00      	cmp	r5, #0
 801cbe0:	4607      	mov	r7, r0
 801cbe2:	db01      	blt.n	801cbe8 <_malloc_r+0x1c>
 801cbe4:	42a9      	cmp	r1, r5
 801cbe6:	d905      	bls.n	801cbf4 <_malloc_r+0x28>
 801cbe8:	230c      	movs	r3, #12
 801cbea:	603b      	str	r3, [r7, #0]
 801cbec:	2600      	movs	r6, #0
 801cbee:	4630      	mov	r0, r6
 801cbf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801cbf4:	4e2e      	ldr	r6, [pc, #184]	; (801ccb0 <_malloc_r+0xe4>)
 801cbf6:	f002 f855 	bl	801eca4 <__malloc_lock>
 801cbfa:	6833      	ldr	r3, [r6, #0]
 801cbfc:	461c      	mov	r4, r3
 801cbfe:	bb34      	cbnz	r4, 801cc4e <_malloc_r+0x82>
 801cc00:	4629      	mov	r1, r5
 801cc02:	4638      	mov	r0, r7
 801cc04:	f7ff ffc2 	bl	801cb8c <sbrk_aligned>
 801cc08:	1c43      	adds	r3, r0, #1
 801cc0a:	4604      	mov	r4, r0
 801cc0c:	d14d      	bne.n	801ccaa <_malloc_r+0xde>
 801cc0e:	6834      	ldr	r4, [r6, #0]
 801cc10:	4626      	mov	r6, r4
 801cc12:	2e00      	cmp	r6, #0
 801cc14:	d140      	bne.n	801cc98 <_malloc_r+0xcc>
 801cc16:	6823      	ldr	r3, [r4, #0]
 801cc18:	4631      	mov	r1, r6
 801cc1a:	4638      	mov	r0, r7
 801cc1c:	eb04 0803 	add.w	r8, r4, r3
 801cc20:	f000 fe2e 	bl	801d880 <_sbrk_r>
 801cc24:	4580      	cmp	r8, r0
 801cc26:	d13a      	bne.n	801cc9e <_malloc_r+0xd2>
 801cc28:	6821      	ldr	r1, [r4, #0]
 801cc2a:	3503      	adds	r5, #3
 801cc2c:	1a6d      	subs	r5, r5, r1
 801cc2e:	f025 0503 	bic.w	r5, r5, #3
 801cc32:	3508      	adds	r5, #8
 801cc34:	2d0c      	cmp	r5, #12
 801cc36:	bf38      	it	cc
 801cc38:	250c      	movcc	r5, #12
 801cc3a:	4629      	mov	r1, r5
 801cc3c:	4638      	mov	r0, r7
 801cc3e:	f7ff ffa5 	bl	801cb8c <sbrk_aligned>
 801cc42:	3001      	adds	r0, #1
 801cc44:	d02b      	beq.n	801cc9e <_malloc_r+0xd2>
 801cc46:	6823      	ldr	r3, [r4, #0]
 801cc48:	442b      	add	r3, r5
 801cc4a:	6023      	str	r3, [r4, #0]
 801cc4c:	e00e      	b.n	801cc6c <_malloc_r+0xa0>
 801cc4e:	6822      	ldr	r2, [r4, #0]
 801cc50:	1b52      	subs	r2, r2, r5
 801cc52:	d41e      	bmi.n	801cc92 <_malloc_r+0xc6>
 801cc54:	2a0b      	cmp	r2, #11
 801cc56:	d916      	bls.n	801cc86 <_malloc_r+0xba>
 801cc58:	1961      	adds	r1, r4, r5
 801cc5a:	42a3      	cmp	r3, r4
 801cc5c:	6025      	str	r5, [r4, #0]
 801cc5e:	bf18      	it	ne
 801cc60:	6059      	strne	r1, [r3, #4]
 801cc62:	6863      	ldr	r3, [r4, #4]
 801cc64:	bf08      	it	eq
 801cc66:	6031      	streq	r1, [r6, #0]
 801cc68:	5162      	str	r2, [r4, r5]
 801cc6a:	604b      	str	r3, [r1, #4]
 801cc6c:	4638      	mov	r0, r7
 801cc6e:	f104 060b 	add.w	r6, r4, #11
 801cc72:	f002 f81d 	bl	801ecb0 <__malloc_unlock>
 801cc76:	f026 0607 	bic.w	r6, r6, #7
 801cc7a:	1d23      	adds	r3, r4, #4
 801cc7c:	1af2      	subs	r2, r6, r3
 801cc7e:	d0b6      	beq.n	801cbee <_malloc_r+0x22>
 801cc80:	1b9b      	subs	r3, r3, r6
 801cc82:	50a3      	str	r3, [r4, r2]
 801cc84:	e7b3      	b.n	801cbee <_malloc_r+0x22>
 801cc86:	6862      	ldr	r2, [r4, #4]
 801cc88:	42a3      	cmp	r3, r4
 801cc8a:	bf0c      	ite	eq
 801cc8c:	6032      	streq	r2, [r6, #0]
 801cc8e:	605a      	strne	r2, [r3, #4]
 801cc90:	e7ec      	b.n	801cc6c <_malloc_r+0xa0>
 801cc92:	4623      	mov	r3, r4
 801cc94:	6864      	ldr	r4, [r4, #4]
 801cc96:	e7b2      	b.n	801cbfe <_malloc_r+0x32>
 801cc98:	4634      	mov	r4, r6
 801cc9a:	6876      	ldr	r6, [r6, #4]
 801cc9c:	e7b9      	b.n	801cc12 <_malloc_r+0x46>
 801cc9e:	230c      	movs	r3, #12
 801cca0:	603b      	str	r3, [r7, #0]
 801cca2:	4638      	mov	r0, r7
 801cca4:	f002 f804 	bl	801ecb0 <__malloc_unlock>
 801cca8:	e7a1      	b.n	801cbee <_malloc_r+0x22>
 801ccaa:	6025      	str	r5, [r4, #0]
 801ccac:	e7de      	b.n	801cc6c <_malloc_r+0xa0>
 801ccae:	bf00      	nop
 801ccb0:	2001128c 	.word	0x2001128c

0801ccb4 <__sfputc_r>:
 801ccb4:	6893      	ldr	r3, [r2, #8]
 801ccb6:	3b01      	subs	r3, #1
 801ccb8:	2b00      	cmp	r3, #0
 801ccba:	b410      	push	{r4}
 801ccbc:	6093      	str	r3, [r2, #8]
 801ccbe:	da08      	bge.n	801ccd2 <__sfputc_r+0x1e>
 801ccc0:	6994      	ldr	r4, [r2, #24]
 801ccc2:	42a3      	cmp	r3, r4
 801ccc4:	db01      	blt.n	801ccca <__sfputc_r+0x16>
 801ccc6:	290a      	cmp	r1, #10
 801ccc8:	d103      	bne.n	801ccd2 <__sfputc_r+0x1e>
 801ccca:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ccce:	f000 be77 	b.w	801d9c0 <__swbuf_r>
 801ccd2:	6813      	ldr	r3, [r2, #0]
 801ccd4:	1c58      	adds	r0, r3, #1
 801ccd6:	6010      	str	r0, [r2, #0]
 801ccd8:	7019      	strb	r1, [r3, #0]
 801ccda:	4608      	mov	r0, r1
 801ccdc:	f85d 4b04 	ldr.w	r4, [sp], #4
 801cce0:	4770      	bx	lr

0801cce2 <__sfputs_r>:
 801cce2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cce4:	4606      	mov	r6, r0
 801cce6:	460f      	mov	r7, r1
 801cce8:	4614      	mov	r4, r2
 801ccea:	18d5      	adds	r5, r2, r3
 801ccec:	42ac      	cmp	r4, r5
 801ccee:	d101      	bne.n	801ccf4 <__sfputs_r+0x12>
 801ccf0:	2000      	movs	r0, #0
 801ccf2:	e007      	b.n	801cd04 <__sfputs_r+0x22>
 801ccf4:	f814 1b01 	ldrb.w	r1, [r4], #1
 801ccf8:	463a      	mov	r2, r7
 801ccfa:	4630      	mov	r0, r6
 801ccfc:	f7ff ffda 	bl	801ccb4 <__sfputc_r>
 801cd00:	1c43      	adds	r3, r0, #1
 801cd02:	d1f3      	bne.n	801ccec <__sfputs_r+0xa>
 801cd04:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801cd08 <_vfiprintf_r>:
 801cd08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd0c:	460d      	mov	r5, r1
 801cd0e:	b09d      	sub	sp, #116	; 0x74
 801cd10:	4614      	mov	r4, r2
 801cd12:	4698      	mov	r8, r3
 801cd14:	4606      	mov	r6, r0
 801cd16:	b118      	cbz	r0, 801cd20 <_vfiprintf_r+0x18>
 801cd18:	6983      	ldr	r3, [r0, #24]
 801cd1a:	b90b      	cbnz	r3, 801cd20 <_vfiprintf_r+0x18>
 801cd1c:	f001 feb8 	bl	801ea90 <__sinit>
 801cd20:	4b89      	ldr	r3, [pc, #548]	; (801cf48 <_vfiprintf_r+0x240>)
 801cd22:	429d      	cmp	r5, r3
 801cd24:	d11b      	bne.n	801cd5e <_vfiprintf_r+0x56>
 801cd26:	6875      	ldr	r5, [r6, #4]
 801cd28:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cd2a:	07d9      	lsls	r1, r3, #31
 801cd2c:	d405      	bmi.n	801cd3a <_vfiprintf_r+0x32>
 801cd2e:	89ab      	ldrh	r3, [r5, #12]
 801cd30:	059a      	lsls	r2, r3, #22
 801cd32:	d402      	bmi.n	801cd3a <_vfiprintf_r+0x32>
 801cd34:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cd36:	f001 ff4e 	bl	801ebd6 <__retarget_lock_acquire_recursive>
 801cd3a:	89ab      	ldrh	r3, [r5, #12]
 801cd3c:	071b      	lsls	r3, r3, #28
 801cd3e:	d501      	bpl.n	801cd44 <_vfiprintf_r+0x3c>
 801cd40:	692b      	ldr	r3, [r5, #16]
 801cd42:	b9eb      	cbnz	r3, 801cd80 <_vfiprintf_r+0x78>
 801cd44:	4629      	mov	r1, r5
 801cd46:	4630      	mov	r0, r6
 801cd48:	f000 fe9e 	bl	801da88 <__swsetup_r>
 801cd4c:	b1c0      	cbz	r0, 801cd80 <_vfiprintf_r+0x78>
 801cd4e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cd50:	07dc      	lsls	r4, r3, #31
 801cd52:	d50e      	bpl.n	801cd72 <_vfiprintf_r+0x6a>
 801cd54:	f04f 30ff 	mov.w	r0, #4294967295
 801cd58:	b01d      	add	sp, #116	; 0x74
 801cd5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd5e:	4b7b      	ldr	r3, [pc, #492]	; (801cf4c <_vfiprintf_r+0x244>)
 801cd60:	429d      	cmp	r5, r3
 801cd62:	d101      	bne.n	801cd68 <_vfiprintf_r+0x60>
 801cd64:	68b5      	ldr	r5, [r6, #8]
 801cd66:	e7df      	b.n	801cd28 <_vfiprintf_r+0x20>
 801cd68:	4b79      	ldr	r3, [pc, #484]	; (801cf50 <_vfiprintf_r+0x248>)
 801cd6a:	429d      	cmp	r5, r3
 801cd6c:	bf08      	it	eq
 801cd6e:	68f5      	ldreq	r5, [r6, #12]
 801cd70:	e7da      	b.n	801cd28 <_vfiprintf_r+0x20>
 801cd72:	89ab      	ldrh	r3, [r5, #12]
 801cd74:	0598      	lsls	r0, r3, #22
 801cd76:	d4ed      	bmi.n	801cd54 <_vfiprintf_r+0x4c>
 801cd78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cd7a:	f001 ff2d 	bl	801ebd8 <__retarget_lock_release_recursive>
 801cd7e:	e7e9      	b.n	801cd54 <_vfiprintf_r+0x4c>
 801cd80:	2300      	movs	r3, #0
 801cd82:	9309      	str	r3, [sp, #36]	; 0x24
 801cd84:	2320      	movs	r3, #32
 801cd86:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801cd8a:	f8cd 800c 	str.w	r8, [sp, #12]
 801cd8e:	2330      	movs	r3, #48	; 0x30
 801cd90:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801cf54 <_vfiprintf_r+0x24c>
 801cd94:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801cd98:	f04f 0901 	mov.w	r9, #1
 801cd9c:	4623      	mov	r3, r4
 801cd9e:	469a      	mov	sl, r3
 801cda0:	f813 2b01 	ldrb.w	r2, [r3], #1
 801cda4:	b10a      	cbz	r2, 801cdaa <_vfiprintf_r+0xa2>
 801cda6:	2a25      	cmp	r2, #37	; 0x25
 801cda8:	d1f9      	bne.n	801cd9e <_vfiprintf_r+0x96>
 801cdaa:	ebba 0b04 	subs.w	fp, sl, r4
 801cdae:	d00b      	beq.n	801cdc8 <_vfiprintf_r+0xc0>
 801cdb0:	465b      	mov	r3, fp
 801cdb2:	4622      	mov	r2, r4
 801cdb4:	4629      	mov	r1, r5
 801cdb6:	4630      	mov	r0, r6
 801cdb8:	f7ff ff93 	bl	801cce2 <__sfputs_r>
 801cdbc:	3001      	adds	r0, #1
 801cdbe:	f000 80aa 	beq.w	801cf16 <_vfiprintf_r+0x20e>
 801cdc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801cdc4:	445a      	add	r2, fp
 801cdc6:	9209      	str	r2, [sp, #36]	; 0x24
 801cdc8:	f89a 3000 	ldrb.w	r3, [sl]
 801cdcc:	2b00      	cmp	r3, #0
 801cdce:	f000 80a2 	beq.w	801cf16 <_vfiprintf_r+0x20e>
 801cdd2:	2300      	movs	r3, #0
 801cdd4:	f04f 32ff 	mov.w	r2, #4294967295
 801cdd8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801cddc:	f10a 0a01 	add.w	sl, sl, #1
 801cde0:	9304      	str	r3, [sp, #16]
 801cde2:	9307      	str	r3, [sp, #28]
 801cde4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801cde8:	931a      	str	r3, [sp, #104]	; 0x68
 801cdea:	4654      	mov	r4, sl
 801cdec:	2205      	movs	r2, #5
 801cdee:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cdf2:	4858      	ldr	r0, [pc, #352]	; (801cf54 <_vfiprintf_r+0x24c>)
 801cdf4:	f7e3 f9ec 	bl	80001d0 <memchr>
 801cdf8:	9a04      	ldr	r2, [sp, #16]
 801cdfa:	b9d8      	cbnz	r0, 801ce34 <_vfiprintf_r+0x12c>
 801cdfc:	06d1      	lsls	r1, r2, #27
 801cdfe:	bf44      	itt	mi
 801ce00:	2320      	movmi	r3, #32
 801ce02:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ce06:	0713      	lsls	r3, r2, #28
 801ce08:	bf44      	itt	mi
 801ce0a:	232b      	movmi	r3, #43	; 0x2b
 801ce0c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801ce10:	f89a 3000 	ldrb.w	r3, [sl]
 801ce14:	2b2a      	cmp	r3, #42	; 0x2a
 801ce16:	d015      	beq.n	801ce44 <_vfiprintf_r+0x13c>
 801ce18:	9a07      	ldr	r2, [sp, #28]
 801ce1a:	4654      	mov	r4, sl
 801ce1c:	2000      	movs	r0, #0
 801ce1e:	f04f 0c0a 	mov.w	ip, #10
 801ce22:	4621      	mov	r1, r4
 801ce24:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ce28:	3b30      	subs	r3, #48	; 0x30
 801ce2a:	2b09      	cmp	r3, #9
 801ce2c:	d94e      	bls.n	801cecc <_vfiprintf_r+0x1c4>
 801ce2e:	b1b0      	cbz	r0, 801ce5e <_vfiprintf_r+0x156>
 801ce30:	9207      	str	r2, [sp, #28]
 801ce32:	e014      	b.n	801ce5e <_vfiprintf_r+0x156>
 801ce34:	eba0 0308 	sub.w	r3, r0, r8
 801ce38:	fa09 f303 	lsl.w	r3, r9, r3
 801ce3c:	4313      	orrs	r3, r2
 801ce3e:	9304      	str	r3, [sp, #16]
 801ce40:	46a2      	mov	sl, r4
 801ce42:	e7d2      	b.n	801cdea <_vfiprintf_r+0xe2>
 801ce44:	9b03      	ldr	r3, [sp, #12]
 801ce46:	1d19      	adds	r1, r3, #4
 801ce48:	681b      	ldr	r3, [r3, #0]
 801ce4a:	9103      	str	r1, [sp, #12]
 801ce4c:	2b00      	cmp	r3, #0
 801ce4e:	bfbb      	ittet	lt
 801ce50:	425b      	neglt	r3, r3
 801ce52:	f042 0202 	orrlt.w	r2, r2, #2
 801ce56:	9307      	strge	r3, [sp, #28]
 801ce58:	9307      	strlt	r3, [sp, #28]
 801ce5a:	bfb8      	it	lt
 801ce5c:	9204      	strlt	r2, [sp, #16]
 801ce5e:	7823      	ldrb	r3, [r4, #0]
 801ce60:	2b2e      	cmp	r3, #46	; 0x2e
 801ce62:	d10c      	bne.n	801ce7e <_vfiprintf_r+0x176>
 801ce64:	7863      	ldrb	r3, [r4, #1]
 801ce66:	2b2a      	cmp	r3, #42	; 0x2a
 801ce68:	d135      	bne.n	801ced6 <_vfiprintf_r+0x1ce>
 801ce6a:	9b03      	ldr	r3, [sp, #12]
 801ce6c:	1d1a      	adds	r2, r3, #4
 801ce6e:	681b      	ldr	r3, [r3, #0]
 801ce70:	9203      	str	r2, [sp, #12]
 801ce72:	2b00      	cmp	r3, #0
 801ce74:	bfb8      	it	lt
 801ce76:	f04f 33ff 	movlt.w	r3, #4294967295
 801ce7a:	3402      	adds	r4, #2
 801ce7c:	9305      	str	r3, [sp, #20]
 801ce7e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801cf64 <_vfiprintf_r+0x25c>
 801ce82:	7821      	ldrb	r1, [r4, #0]
 801ce84:	2203      	movs	r2, #3
 801ce86:	4650      	mov	r0, sl
 801ce88:	f7e3 f9a2 	bl	80001d0 <memchr>
 801ce8c:	b140      	cbz	r0, 801cea0 <_vfiprintf_r+0x198>
 801ce8e:	2340      	movs	r3, #64	; 0x40
 801ce90:	eba0 000a 	sub.w	r0, r0, sl
 801ce94:	fa03 f000 	lsl.w	r0, r3, r0
 801ce98:	9b04      	ldr	r3, [sp, #16]
 801ce9a:	4303      	orrs	r3, r0
 801ce9c:	3401      	adds	r4, #1
 801ce9e:	9304      	str	r3, [sp, #16]
 801cea0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801cea4:	482c      	ldr	r0, [pc, #176]	; (801cf58 <_vfiprintf_r+0x250>)
 801cea6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801ceaa:	2206      	movs	r2, #6
 801ceac:	f7e3 f990 	bl	80001d0 <memchr>
 801ceb0:	2800      	cmp	r0, #0
 801ceb2:	d03f      	beq.n	801cf34 <_vfiprintf_r+0x22c>
 801ceb4:	4b29      	ldr	r3, [pc, #164]	; (801cf5c <_vfiprintf_r+0x254>)
 801ceb6:	bb1b      	cbnz	r3, 801cf00 <_vfiprintf_r+0x1f8>
 801ceb8:	9b03      	ldr	r3, [sp, #12]
 801ceba:	3307      	adds	r3, #7
 801cebc:	f023 0307 	bic.w	r3, r3, #7
 801cec0:	3308      	adds	r3, #8
 801cec2:	9303      	str	r3, [sp, #12]
 801cec4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cec6:	443b      	add	r3, r7
 801cec8:	9309      	str	r3, [sp, #36]	; 0x24
 801ceca:	e767      	b.n	801cd9c <_vfiprintf_r+0x94>
 801cecc:	fb0c 3202 	mla	r2, ip, r2, r3
 801ced0:	460c      	mov	r4, r1
 801ced2:	2001      	movs	r0, #1
 801ced4:	e7a5      	b.n	801ce22 <_vfiprintf_r+0x11a>
 801ced6:	2300      	movs	r3, #0
 801ced8:	3401      	adds	r4, #1
 801ceda:	9305      	str	r3, [sp, #20]
 801cedc:	4619      	mov	r1, r3
 801cede:	f04f 0c0a 	mov.w	ip, #10
 801cee2:	4620      	mov	r0, r4
 801cee4:	f810 2b01 	ldrb.w	r2, [r0], #1
 801cee8:	3a30      	subs	r2, #48	; 0x30
 801ceea:	2a09      	cmp	r2, #9
 801ceec:	d903      	bls.n	801cef6 <_vfiprintf_r+0x1ee>
 801ceee:	2b00      	cmp	r3, #0
 801cef0:	d0c5      	beq.n	801ce7e <_vfiprintf_r+0x176>
 801cef2:	9105      	str	r1, [sp, #20]
 801cef4:	e7c3      	b.n	801ce7e <_vfiprintf_r+0x176>
 801cef6:	fb0c 2101 	mla	r1, ip, r1, r2
 801cefa:	4604      	mov	r4, r0
 801cefc:	2301      	movs	r3, #1
 801cefe:	e7f0      	b.n	801cee2 <_vfiprintf_r+0x1da>
 801cf00:	ab03      	add	r3, sp, #12
 801cf02:	9300      	str	r3, [sp, #0]
 801cf04:	462a      	mov	r2, r5
 801cf06:	4b16      	ldr	r3, [pc, #88]	; (801cf60 <_vfiprintf_r+0x258>)
 801cf08:	a904      	add	r1, sp, #16
 801cf0a:	4630      	mov	r0, r6
 801cf0c:	f000 f8d6 	bl	801d0bc <_printf_float>
 801cf10:	4607      	mov	r7, r0
 801cf12:	1c78      	adds	r0, r7, #1
 801cf14:	d1d6      	bne.n	801cec4 <_vfiprintf_r+0x1bc>
 801cf16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801cf18:	07d9      	lsls	r1, r3, #31
 801cf1a:	d405      	bmi.n	801cf28 <_vfiprintf_r+0x220>
 801cf1c:	89ab      	ldrh	r3, [r5, #12]
 801cf1e:	059a      	lsls	r2, r3, #22
 801cf20:	d402      	bmi.n	801cf28 <_vfiprintf_r+0x220>
 801cf22:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801cf24:	f001 fe58 	bl	801ebd8 <__retarget_lock_release_recursive>
 801cf28:	89ab      	ldrh	r3, [r5, #12]
 801cf2a:	065b      	lsls	r3, r3, #25
 801cf2c:	f53f af12 	bmi.w	801cd54 <_vfiprintf_r+0x4c>
 801cf30:	9809      	ldr	r0, [sp, #36]	; 0x24
 801cf32:	e711      	b.n	801cd58 <_vfiprintf_r+0x50>
 801cf34:	ab03      	add	r3, sp, #12
 801cf36:	9300      	str	r3, [sp, #0]
 801cf38:	462a      	mov	r2, r5
 801cf3a:	4b09      	ldr	r3, [pc, #36]	; (801cf60 <_vfiprintf_r+0x258>)
 801cf3c:	a904      	add	r1, sp, #16
 801cf3e:	4630      	mov	r0, r6
 801cf40:	f000 fb60 	bl	801d604 <_printf_i>
 801cf44:	e7e4      	b.n	801cf10 <_vfiprintf_r+0x208>
 801cf46:	bf00      	nop
 801cf48:	08028654 	.word	0x08028654
 801cf4c:	08028674 	.word	0x08028674
 801cf50:	08028634 	.word	0x08028634
 801cf54:	08028530 	.word	0x08028530
 801cf58:	0802853a 	.word	0x0802853a
 801cf5c:	0801d0bd 	.word	0x0801d0bd
 801cf60:	0801cce3 	.word	0x0801cce3
 801cf64:	08028536 	.word	0x08028536

0801cf68 <vfiprintf>:
 801cf68:	4613      	mov	r3, r2
 801cf6a:	460a      	mov	r2, r1
 801cf6c:	4601      	mov	r1, r0
 801cf6e:	4802      	ldr	r0, [pc, #8]	; (801cf78 <vfiprintf+0x10>)
 801cf70:	6800      	ldr	r0, [r0, #0]
 801cf72:	f7ff bec9 	b.w	801cd08 <_vfiprintf_r>
 801cf76:	bf00      	nop
 801cf78:	20000014 	.word	0x20000014

0801cf7c <__cvt>:
 801cf7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801cf80:	ec55 4b10 	vmov	r4, r5, d0
 801cf84:	2d00      	cmp	r5, #0
 801cf86:	460e      	mov	r6, r1
 801cf88:	4619      	mov	r1, r3
 801cf8a:	462b      	mov	r3, r5
 801cf8c:	bfbb      	ittet	lt
 801cf8e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801cf92:	461d      	movlt	r5, r3
 801cf94:	2300      	movge	r3, #0
 801cf96:	232d      	movlt	r3, #45	; 0x2d
 801cf98:	700b      	strb	r3, [r1, #0]
 801cf9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801cf9c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 801cfa0:	4691      	mov	r9, r2
 801cfa2:	f023 0820 	bic.w	r8, r3, #32
 801cfa6:	bfbc      	itt	lt
 801cfa8:	4622      	movlt	r2, r4
 801cfaa:	4614      	movlt	r4, r2
 801cfac:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801cfb0:	d005      	beq.n	801cfbe <__cvt+0x42>
 801cfb2:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 801cfb6:	d100      	bne.n	801cfba <__cvt+0x3e>
 801cfb8:	3601      	adds	r6, #1
 801cfba:	2102      	movs	r1, #2
 801cfbc:	e000      	b.n	801cfc0 <__cvt+0x44>
 801cfbe:	2103      	movs	r1, #3
 801cfc0:	ab03      	add	r3, sp, #12
 801cfc2:	9301      	str	r3, [sp, #4]
 801cfc4:	ab02      	add	r3, sp, #8
 801cfc6:	9300      	str	r3, [sp, #0]
 801cfc8:	ec45 4b10 	vmov	d0, r4, r5
 801cfcc:	4653      	mov	r3, sl
 801cfce:	4632      	mov	r2, r6
 801cfd0:	f000 fe56 	bl	801dc80 <_dtoa_r>
 801cfd4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 801cfd8:	4607      	mov	r7, r0
 801cfda:	d102      	bne.n	801cfe2 <__cvt+0x66>
 801cfdc:	f019 0f01 	tst.w	r9, #1
 801cfe0:	d022      	beq.n	801d028 <__cvt+0xac>
 801cfe2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 801cfe6:	eb07 0906 	add.w	r9, r7, r6
 801cfea:	d110      	bne.n	801d00e <__cvt+0x92>
 801cfec:	783b      	ldrb	r3, [r7, #0]
 801cfee:	2b30      	cmp	r3, #48	; 0x30
 801cff0:	d10a      	bne.n	801d008 <__cvt+0x8c>
 801cff2:	2200      	movs	r2, #0
 801cff4:	2300      	movs	r3, #0
 801cff6:	4620      	mov	r0, r4
 801cff8:	4629      	mov	r1, r5
 801cffa:	f7e3 fd6f 	bl	8000adc <__aeabi_dcmpeq>
 801cffe:	b918      	cbnz	r0, 801d008 <__cvt+0x8c>
 801d000:	f1c6 0601 	rsb	r6, r6, #1
 801d004:	f8ca 6000 	str.w	r6, [sl]
 801d008:	f8da 3000 	ldr.w	r3, [sl]
 801d00c:	4499      	add	r9, r3
 801d00e:	2200      	movs	r2, #0
 801d010:	2300      	movs	r3, #0
 801d012:	4620      	mov	r0, r4
 801d014:	4629      	mov	r1, r5
 801d016:	f7e3 fd61 	bl	8000adc <__aeabi_dcmpeq>
 801d01a:	b108      	cbz	r0, 801d020 <__cvt+0xa4>
 801d01c:	f8cd 900c 	str.w	r9, [sp, #12]
 801d020:	2230      	movs	r2, #48	; 0x30
 801d022:	9b03      	ldr	r3, [sp, #12]
 801d024:	454b      	cmp	r3, r9
 801d026:	d307      	bcc.n	801d038 <__cvt+0xbc>
 801d028:	9b03      	ldr	r3, [sp, #12]
 801d02a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d02c:	1bdb      	subs	r3, r3, r7
 801d02e:	4638      	mov	r0, r7
 801d030:	6013      	str	r3, [r2, #0]
 801d032:	b004      	add	sp, #16
 801d034:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d038:	1c59      	adds	r1, r3, #1
 801d03a:	9103      	str	r1, [sp, #12]
 801d03c:	701a      	strb	r2, [r3, #0]
 801d03e:	e7f0      	b.n	801d022 <__cvt+0xa6>

0801d040 <__exponent>:
 801d040:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801d042:	4603      	mov	r3, r0
 801d044:	2900      	cmp	r1, #0
 801d046:	bfb8      	it	lt
 801d048:	4249      	neglt	r1, r1
 801d04a:	f803 2b02 	strb.w	r2, [r3], #2
 801d04e:	bfb4      	ite	lt
 801d050:	222d      	movlt	r2, #45	; 0x2d
 801d052:	222b      	movge	r2, #43	; 0x2b
 801d054:	2909      	cmp	r1, #9
 801d056:	7042      	strb	r2, [r0, #1]
 801d058:	dd2a      	ble.n	801d0b0 <__exponent+0x70>
 801d05a:	f10d 0407 	add.w	r4, sp, #7
 801d05e:	46a4      	mov	ip, r4
 801d060:	270a      	movs	r7, #10
 801d062:	46a6      	mov	lr, r4
 801d064:	460a      	mov	r2, r1
 801d066:	fb91 f6f7 	sdiv	r6, r1, r7
 801d06a:	fb07 1516 	mls	r5, r7, r6, r1
 801d06e:	3530      	adds	r5, #48	; 0x30
 801d070:	2a63      	cmp	r2, #99	; 0x63
 801d072:	f104 34ff 	add.w	r4, r4, #4294967295
 801d076:	f80e 5c01 	strb.w	r5, [lr, #-1]
 801d07a:	4631      	mov	r1, r6
 801d07c:	dcf1      	bgt.n	801d062 <__exponent+0x22>
 801d07e:	3130      	adds	r1, #48	; 0x30
 801d080:	f1ae 0502 	sub.w	r5, lr, #2
 801d084:	f804 1c01 	strb.w	r1, [r4, #-1]
 801d088:	1c44      	adds	r4, r0, #1
 801d08a:	4629      	mov	r1, r5
 801d08c:	4561      	cmp	r1, ip
 801d08e:	d30a      	bcc.n	801d0a6 <__exponent+0x66>
 801d090:	f10d 0209 	add.w	r2, sp, #9
 801d094:	eba2 020e 	sub.w	r2, r2, lr
 801d098:	4565      	cmp	r5, ip
 801d09a:	bf88      	it	hi
 801d09c:	2200      	movhi	r2, #0
 801d09e:	4413      	add	r3, r2
 801d0a0:	1a18      	subs	r0, r3, r0
 801d0a2:	b003      	add	sp, #12
 801d0a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801d0a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d0aa:	f804 2f01 	strb.w	r2, [r4, #1]!
 801d0ae:	e7ed      	b.n	801d08c <__exponent+0x4c>
 801d0b0:	2330      	movs	r3, #48	; 0x30
 801d0b2:	3130      	adds	r1, #48	; 0x30
 801d0b4:	7083      	strb	r3, [r0, #2]
 801d0b6:	70c1      	strb	r1, [r0, #3]
 801d0b8:	1d03      	adds	r3, r0, #4
 801d0ba:	e7f1      	b.n	801d0a0 <__exponent+0x60>

0801d0bc <_printf_float>:
 801d0bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0c0:	ed2d 8b02 	vpush	{d8}
 801d0c4:	b08d      	sub	sp, #52	; 0x34
 801d0c6:	460c      	mov	r4, r1
 801d0c8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 801d0cc:	4616      	mov	r6, r2
 801d0ce:	461f      	mov	r7, r3
 801d0d0:	4605      	mov	r5, r0
 801d0d2:	f001 fd7b 	bl	801ebcc <_localeconv_r>
 801d0d6:	f8d0 a000 	ldr.w	sl, [r0]
 801d0da:	4650      	mov	r0, sl
 801d0dc:	f7e3 f8d2 	bl	8000284 <strlen>
 801d0e0:	2300      	movs	r3, #0
 801d0e2:	930a      	str	r3, [sp, #40]	; 0x28
 801d0e4:	6823      	ldr	r3, [r4, #0]
 801d0e6:	9305      	str	r3, [sp, #20]
 801d0e8:	f8d8 3000 	ldr.w	r3, [r8]
 801d0ec:	f894 b018 	ldrb.w	fp, [r4, #24]
 801d0f0:	3307      	adds	r3, #7
 801d0f2:	f023 0307 	bic.w	r3, r3, #7
 801d0f6:	f103 0208 	add.w	r2, r3, #8
 801d0fa:	f8c8 2000 	str.w	r2, [r8]
 801d0fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 801d102:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 801d106:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 801d10a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 801d10e:	9307      	str	r3, [sp, #28]
 801d110:	f8cd 8018 	str.w	r8, [sp, #24]
 801d114:	ee08 0a10 	vmov	s16, r0
 801d118:	4b9f      	ldr	r3, [pc, #636]	; (801d398 <_printf_float+0x2dc>)
 801d11a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d11e:	f04f 32ff 	mov.w	r2, #4294967295
 801d122:	f7e3 fd0d 	bl	8000b40 <__aeabi_dcmpun>
 801d126:	bb88      	cbnz	r0, 801d18c <_printf_float+0xd0>
 801d128:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801d12c:	4b9a      	ldr	r3, [pc, #616]	; (801d398 <_printf_float+0x2dc>)
 801d12e:	f04f 32ff 	mov.w	r2, #4294967295
 801d132:	f7e3 fce7 	bl	8000b04 <__aeabi_dcmple>
 801d136:	bb48      	cbnz	r0, 801d18c <_printf_float+0xd0>
 801d138:	2200      	movs	r2, #0
 801d13a:	2300      	movs	r3, #0
 801d13c:	4640      	mov	r0, r8
 801d13e:	4649      	mov	r1, r9
 801d140:	f7e3 fcd6 	bl	8000af0 <__aeabi_dcmplt>
 801d144:	b110      	cbz	r0, 801d14c <_printf_float+0x90>
 801d146:	232d      	movs	r3, #45	; 0x2d
 801d148:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d14c:	4b93      	ldr	r3, [pc, #588]	; (801d39c <_printf_float+0x2e0>)
 801d14e:	4894      	ldr	r0, [pc, #592]	; (801d3a0 <_printf_float+0x2e4>)
 801d150:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 801d154:	bf94      	ite	ls
 801d156:	4698      	movls	r8, r3
 801d158:	4680      	movhi	r8, r0
 801d15a:	2303      	movs	r3, #3
 801d15c:	6123      	str	r3, [r4, #16]
 801d15e:	9b05      	ldr	r3, [sp, #20]
 801d160:	f023 0204 	bic.w	r2, r3, #4
 801d164:	6022      	str	r2, [r4, #0]
 801d166:	f04f 0900 	mov.w	r9, #0
 801d16a:	9700      	str	r7, [sp, #0]
 801d16c:	4633      	mov	r3, r6
 801d16e:	aa0b      	add	r2, sp, #44	; 0x2c
 801d170:	4621      	mov	r1, r4
 801d172:	4628      	mov	r0, r5
 801d174:	f000 f9d8 	bl	801d528 <_printf_common>
 801d178:	3001      	adds	r0, #1
 801d17a:	f040 8090 	bne.w	801d29e <_printf_float+0x1e2>
 801d17e:	f04f 30ff 	mov.w	r0, #4294967295
 801d182:	b00d      	add	sp, #52	; 0x34
 801d184:	ecbd 8b02 	vpop	{d8}
 801d188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d18c:	4642      	mov	r2, r8
 801d18e:	464b      	mov	r3, r9
 801d190:	4640      	mov	r0, r8
 801d192:	4649      	mov	r1, r9
 801d194:	f7e3 fcd4 	bl	8000b40 <__aeabi_dcmpun>
 801d198:	b140      	cbz	r0, 801d1ac <_printf_float+0xf0>
 801d19a:	464b      	mov	r3, r9
 801d19c:	2b00      	cmp	r3, #0
 801d19e:	bfbc      	itt	lt
 801d1a0:	232d      	movlt	r3, #45	; 0x2d
 801d1a2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 801d1a6:	487f      	ldr	r0, [pc, #508]	; (801d3a4 <_printf_float+0x2e8>)
 801d1a8:	4b7f      	ldr	r3, [pc, #508]	; (801d3a8 <_printf_float+0x2ec>)
 801d1aa:	e7d1      	b.n	801d150 <_printf_float+0x94>
 801d1ac:	6863      	ldr	r3, [r4, #4]
 801d1ae:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 801d1b2:	9206      	str	r2, [sp, #24]
 801d1b4:	1c5a      	adds	r2, r3, #1
 801d1b6:	d13f      	bne.n	801d238 <_printf_float+0x17c>
 801d1b8:	2306      	movs	r3, #6
 801d1ba:	6063      	str	r3, [r4, #4]
 801d1bc:	9b05      	ldr	r3, [sp, #20]
 801d1be:	6861      	ldr	r1, [r4, #4]
 801d1c0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 801d1c4:	2300      	movs	r3, #0
 801d1c6:	9303      	str	r3, [sp, #12]
 801d1c8:	ab0a      	add	r3, sp, #40	; 0x28
 801d1ca:	e9cd b301 	strd	fp, r3, [sp, #4]
 801d1ce:	ab09      	add	r3, sp, #36	; 0x24
 801d1d0:	ec49 8b10 	vmov	d0, r8, r9
 801d1d4:	9300      	str	r3, [sp, #0]
 801d1d6:	6022      	str	r2, [r4, #0]
 801d1d8:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 801d1dc:	4628      	mov	r0, r5
 801d1de:	f7ff fecd 	bl	801cf7c <__cvt>
 801d1e2:	9b06      	ldr	r3, [sp, #24]
 801d1e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d1e6:	2b47      	cmp	r3, #71	; 0x47
 801d1e8:	4680      	mov	r8, r0
 801d1ea:	d108      	bne.n	801d1fe <_printf_float+0x142>
 801d1ec:	1cc8      	adds	r0, r1, #3
 801d1ee:	db02      	blt.n	801d1f6 <_printf_float+0x13a>
 801d1f0:	6863      	ldr	r3, [r4, #4]
 801d1f2:	4299      	cmp	r1, r3
 801d1f4:	dd41      	ble.n	801d27a <_printf_float+0x1be>
 801d1f6:	f1ab 0b02 	sub.w	fp, fp, #2
 801d1fa:	fa5f fb8b 	uxtb.w	fp, fp
 801d1fe:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801d202:	d820      	bhi.n	801d246 <_printf_float+0x18a>
 801d204:	3901      	subs	r1, #1
 801d206:	465a      	mov	r2, fp
 801d208:	f104 0050 	add.w	r0, r4, #80	; 0x50
 801d20c:	9109      	str	r1, [sp, #36]	; 0x24
 801d20e:	f7ff ff17 	bl	801d040 <__exponent>
 801d212:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d214:	1813      	adds	r3, r2, r0
 801d216:	2a01      	cmp	r2, #1
 801d218:	4681      	mov	r9, r0
 801d21a:	6123      	str	r3, [r4, #16]
 801d21c:	dc02      	bgt.n	801d224 <_printf_float+0x168>
 801d21e:	6822      	ldr	r2, [r4, #0]
 801d220:	07d2      	lsls	r2, r2, #31
 801d222:	d501      	bpl.n	801d228 <_printf_float+0x16c>
 801d224:	3301      	adds	r3, #1
 801d226:	6123      	str	r3, [r4, #16]
 801d228:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 801d22c:	2b00      	cmp	r3, #0
 801d22e:	d09c      	beq.n	801d16a <_printf_float+0xae>
 801d230:	232d      	movs	r3, #45	; 0x2d
 801d232:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d236:	e798      	b.n	801d16a <_printf_float+0xae>
 801d238:	9a06      	ldr	r2, [sp, #24]
 801d23a:	2a47      	cmp	r2, #71	; 0x47
 801d23c:	d1be      	bne.n	801d1bc <_printf_float+0x100>
 801d23e:	2b00      	cmp	r3, #0
 801d240:	d1bc      	bne.n	801d1bc <_printf_float+0x100>
 801d242:	2301      	movs	r3, #1
 801d244:	e7b9      	b.n	801d1ba <_printf_float+0xfe>
 801d246:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 801d24a:	d118      	bne.n	801d27e <_printf_float+0x1c2>
 801d24c:	2900      	cmp	r1, #0
 801d24e:	6863      	ldr	r3, [r4, #4]
 801d250:	dd0b      	ble.n	801d26a <_printf_float+0x1ae>
 801d252:	6121      	str	r1, [r4, #16]
 801d254:	b913      	cbnz	r3, 801d25c <_printf_float+0x1a0>
 801d256:	6822      	ldr	r2, [r4, #0]
 801d258:	07d0      	lsls	r0, r2, #31
 801d25a:	d502      	bpl.n	801d262 <_printf_float+0x1a6>
 801d25c:	3301      	adds	r3, #1
 801d25e:	440b      	add	r3, r1
 801d260:	6123      	str	r3, [r4, #16]
 801d262:	65a1      	str	r1, [r4, #88]	; 0x58
 801d264:	f04f 0900 	mov.w	r9, #0
 801d268:	e7de      	b.n	801d228 <_printf_float+0x16c>
 801d26a:	b913      	cbnz	r3, 801d272 <_printf_float+0x1b6>
 801d26c:	6822      	ldr	r2, [r4, #0]
 801d26e:	07d2      	lsls	r2, r2, #31
 801d270:	d501      	bpl.n	801d276 <_printf_float+0x1ba>
 801d272:	3302      	adds	r3, #2
 801d274:	e7f4      	b.n	801d260 <_printf_float+0x1a4>
 801d276:	2301      	movs	r3, #1
 801d278:	e7f2      	b.n	801d260 <_printf_float+0x1a4>
 801d27a:	f04f 0b67 	mov.w	fp, #103	; 0x67
 801d27e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d280:	4299      	cmp	r1, r3
 801d282:	db05      	blt.n	801d290 <_printf_float+0x1d4>
 801d284:	6823      	ldr	r3, [r4, #0]
 801d286:	6121      	str	r1, [r4, #16]
 801d288:	07d8      	lsls	r0, r3, #31
 801d28a:	d5ea      	bpl.n	801d262 <_printf_float+0x1a6>
 801d28c:	1c4b      	adds	r3, r1, #1
 801d28e:	e7e7      	b.n	801d260 <_printf_float+0x1a4>
 801d290:	2900      	cmp	r1, #0
 801d292:	bfd4      	ite	le
 801d294:	f1c1 0202 	rsble	r2, r1, #2
 801d298:	2201      	movgt	r2, #1
 801d29a:	4413      	add	r3, r2
 801d29c:	e7e0      	b.n	801d260 <_printf_float+0x1a4>
 801d29e:	6823      	ldr	r3, [r4, #0]
 801d2a0:	055a      	lsls	r2, r3, #21
 801d2a2:	d407      	bmi.n	801d2b4 <_printf_float+0x1f8>
 801d2a4:	6923      	ldr	r3, [r4, #16]
 801d2a6:	4642      	mov	r2, r8
 801d2a8:	4631      	mov	r1, r6
 801d2aa:	4628      	mov	r0, r5
 801d2ac:	47b8      	blx	r7
 801d2ae:	3001      	adds	r0, #1
 801d2b0:	d12c      	bne.n	801d30c <_printf_float+0x250>
 801d2b2:	e764      	b.n	801d17e <_printf_float+0xc2>
 801d2b4:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 801d2b8:	f240 80e0 	bls.w	801d47c <_printf_float+0x3c0>
 801d2bc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801d2c0:	2200      	movs	r2, #0
 801d2c2:	2300      	movs	r3, #0
 801d2c4:	f7e3 fc0a 	bl	8000adc <__aeabi_dcmpeq>
 801d2c8:	2800      	cmp	r0, #0
 801d2ca:	d034      	beq.n	801d336 <_printf_float+0x27a>
 801d2cc:	4a37      	ldr	r2, [pc, #220]	; (801d3ac <_printf_float+0x2f0>)
 801d2ce:	2301      	movs	r3, #1
 801d2d0:	4631      	mov	r1, r6
 801d2d2:	4628      	mov	r0, r5
 801d2d4:	47b8      	blx	r7
 801d2d6:	3001      	adds	r0, #1
 801d2d8:	f43f af51 	beq.w	801d17e <_printf_float+0xc2>
 801d2dc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801d2e0:	429a      	cmp	r2, r3
 801d2e2:	db02      	blt.n	801d2ea <_printf_float+0x22e>
 801d2e4:	6823      	ldr	r3, [r4, #0]
 801d2e6:	07d8      	lsls	r0, r3, #31
 801d2e8:	d510      	bpl.n	801d30c <_printf_float+0x250>
 801d2ea:	ee18 3a10 	vmov	r3, s16
 801d2ee:	4652      	mov	r2, sl
 801d2f0:	4631      	mov	r1, r6
 801d2f2:	4628      	mov	r0, r5
 801d2f4:	47b8      	blx	r7
 801d2f6:	3001      	adds	r0, #1
 801d2f8:	f43f af41 	beq.w	801d17e <_printf_float+0xc2>
 801d2fc:	f04f 0800 	mov.w	r8, #0
 801d300:	f104 091a 	add.w	r9, r4, #26
 801d304:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d306:	3b01      	subs	r3, #1
 801d308:	4543      	cmp	r3, r8
 801d30a:	dc09      	bgt.n	801d320 <_printf_float+0x264>
 801d30c:	6823      	ldr	r3, [r4, #0]
 801d30e:	079b      	lsls	r3, r3, #30
 801d310:	f100 8105 	bmi.w	801d51e <_printf_float+0x462>
 801d314:	68e0      	ldr	r0, [r4, #12]
 801d316:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d318:	4298      	cmp	r0, r3
 801d31a:	bfb8      	it	lt
 801d31c:	4618      	movlt	r0, r3
 801d31e:	e730      	b.n	801d182 <_printf_float+0xc6>
 801d320:	2301      	movs	r3, #1
 801d322:	464a      	mov	r2, r9
 801d324:	4631      	mov	r1, r6
 801d326:	4628      	mov	r0, r5
 801d328:	47b8      	blx	r7
 801d32a:	3001      	adds	r0, #1
 801d32c:	f43f af27 	beq.w	801d17e <_printf_float+0xc2>
 801d330:	f108 0801 	add.w	r8, r8, #1
 801d334:	e7e6      	b.n	801d304 <_printf_float+0x248>
 801d336:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d338:	2b00      	cmp	r3, #0
 801d33a:	dc39      	bgt.n	801d3b0 <_printf_float+0x2f4>
 801d33c:	4a1b      	ldr	r2, [pc, #108]	; (801d3ac <_printf_float+0x2f0>)
 801d33e:	2301      	movs	r3, #1
 801d340:	4631      	mov	r1, r6
 801d342:	4628      	mov	r0, r5
 801d344:	47b8      	blx	r7
 801d346:	3001      	adds	r0, #1
 801d348:	f43f af19 	beq.w	801d17e <_printf_float+0xc2>
 801d34c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801d350:	4313      	orrs	r3, r2
 801d352:	d102      	bne.n	801d35a <_printf_float+0x29e>
 801d354:	6823      	ldr	r3, [r4, #0]
 801d356:	07d9      	lsls	r1, r3, #31
 801d358:	d5d8      	bpl.n	801d30c <_printf_float+0x250>
 801d35a:	ee18 3a10 	vmov	r3, s16
 801d35e:	4652      	mov	r2, sl
 801d360:	4631      	mov	r1, r6
 801d362:	4628      	mov	r0, r5
 801d364:	47b8      	blx	r7
 801d366:	3001      	adds	r0, #1
 801d368:	f43f af09 	beq.w	801d17e <_printf_float+0xc2>
 801d36c:	f04f 0900 	mov.w	r9, #0
 801d370:	f104 0a1a 	add.w	sl, r4, #26
 801d374:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d376:	425b      	negs	r3, r3
 801d378:	454b      	cmp	r3, r9
 801d37a:	dc01      	bgt.n	801d380 <_printf_float+0x2c4>
 801d37c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d37e:	e792      	b.n	801d2a6 <_printf_float+0x1ea>
 801d380:	2301      	movs	r3, #1
 801d382:	4652      	mov	r2, sl
 801d384:	4631      	mov	r1, r6
 801d386:	4628      	mov	r0, r5
 801d388:	47b8      	blx	r7
 801d38a:	3001      	adds	r0, #1
 801d38c:	f43f aef7 	beq.w	801d17e <_printf_float+0xc2>
 801d390:	f109 0901 	add.w	r9, r9, #1
 801d394:	e7ee      	b.n	801d374 <_printf_float+0x2b8>
 801d396:	bf00      	nop
 801d398:	7fefffff 	.word	0x7fefffff
 801d39c:	08028541 	.word	0x08028541
 801d3a0:	08028545 	.word	0x08028545
 801d3a4:	0802854d 	.word	0x0802854d
 801d3a8:	08028549 	.word	0x08028549
 801d3ac:	08028551 	.word	0x08028551
 801d3b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d3b2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801d3b4:	429a      	cmp	r2, r3
 801d3b6:	bfa8      	it	ge
 801d3b8:	461a      	movge	r2, r3
 801d3ba:	2a00      	cmp	r2, #0
 801d3bc:	4691      	mov	r9, r2
 801d3be:	dc37      	bgt.n	801d430 <_printf_float+0x374>
 801d3c0:	f04f 0b00 	mov.w	fp, #0
 801d3c4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801d3c8:	f104 021a 	add.w	r2, r4, #26
 801d3cc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 801d3ce:	9305      	str	r3, [sp, #20]
 801d3d0:	eba3 0309 	sub.w	r3, r3, r9
 801d3d4:	455b      	cmp	r3, fp
 801d3d6:	dc33      	bgt.n	801d440 <_printf_float+0x384>
 801d3d8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801d3dc:	429a      	cmp	r2, r3
 801d3de:	db3b      	blt.n	801d458 <_printf_float+0x39c>
 801d3e0:	6823      	ldr	r3, [r4, #0]
 801d3e2:	07da      	lsls	r2, r3, #31
 801d3e4:	d438      	bmi.n	801d458 <_printf_float+0x39c>
 801d3e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d3e8:	9a05      	ldr	r2, [sp, #20]
 801d3ea:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d3ec:	1a9a      	subs	r2, r3, r2
 801d3ee:	eba3 0901 	sub.w	r9, r3, r1
 801d3f2:	4591      	cmp	r9, r2
 801d3f4:	bfa8      	it	ge
 801d3f6:	4691      	movge	r9, r2
 801d3f8:	f1b9 0f00 	cmp.w	r9, #0
 801d3fc:	dc35      	bgt.n	801d46a <_printf_float+0x3ae>
 801d3fe:	f04f 0800 	mov.w	r8, #0
 801d402:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 801d406:	f104 0a1a 	add.w	sl, r4, #26
 801d40a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 801d40e:	1a9b      	subs	r3, r3, r2
 801d410:	eba3 0309 	sub.w	r3, r3, r9
 801d414:	4543      	cmp	r3, r8
 801d416:	f77f af79 	ble.w	801d30c <_printf_float+0x250>
 801d41a:	2301      	movs	r3, #1
 801d41c:	4652      	mov	r2, sl
 801d41e:	4631      	mov	r1, r6
 801d420:	4628      	mov	r0, r5
 801d422:	47b8      	blx	r7
 801d424:	3001      	adds	r0, #1
 801d426:	f43f aeaa 	beq.w	801d17e <_printf_float+0xc2>
 801d42a:	f108 0801 	add.w	r8, r8, #1
 801d42e:	e7ec      	b.n	801d40a <_printf_float+0x34e>
 801d430:	4613      	mov	r3, r2
 801d432:	4631      	mov	r1, r6
 801d434:	4642      	mov	r2, r8
 801d436:	4628      	mov	r0, r5
 801d438:	47b8      	blx	r7
 801d43a:	3001      	adds	r0, #1
 801d43c:	d1c0      	bne.n	801d3c0 <_printf_float+0x304>
 801d43e:	e69e      	b.n	801d17e <_printf_float+0xc2>
 801d440:	2301      	movs	r3, #1
 801d442:	4631      	mov	r1, r6
 801d444:	4628      	mov	r0, r5
 801d446:	9205      	str	r2, [sp, #20]
 801d448:	47b8      	blx	r7
 801d44a:	3001      	adds	r0, #1
 801d44c:	f43f ae97 	beq.w	801d17e <_printf_float+0xc2>
 801d450:	9a05      	ldr	r2, [sp, #20]
 801d452:	f10b 0b01 	add.w	fp, fp, #1
 801d456:	e7b9      	b.n	801d3cc <_printf_float+0x310>
 801d458:	ee18 3a10 	vmov	r3, s16
 801d45c:	4652      	mov	r2, sl
 801d45e:	4631      	mov	r1, r6
 801d460:	4628      	mov	r0, r5
 801d462:	47b8      	blx	r7
 801d464:	3001      	adds	r0, #1
 801d466:	d1be      	bne.n	801d3e6 <_printf_float+0x32a>
 801d468:	e689      	b.n	801d17e <_printf_float+0xc2>
 801d46a:	9a05      	ldr	r2, [sp, #20]
 801d46c:	464b      	mov	r3, r9
 801d46e:	4442      	add	r2, r8
 801d470:	4631      	mov	r1, r6
 801d472:	4628      	mov	r0, r5
 801d474:	47b8      	blx	r7
 801d476:	3001      	adds	r0, #1
 801d478:	d1c1      	bne.n	801d3fe <_printf_float+0x342>
 801d47a:	e680      	b.n	801d17e <_printf_float+0xc2>
 801d47c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d47e:	2a01      	cmp	r2, #1
 801d480:	dc01      	bgt.n	801d486 <_printf_float+0x3ca>
 801d482:	07db      	lsls	r3, r3, #31
 801d484:	d538      	bpl.n	801d4f8 <_printf_float+0x43c>
 801d486:	2301      	movs	r3, #1
 801d488:	4642      	mov	r2, r8
 801d48a:	4631      	mov	r1, r6
 801d48c:	4628      	mov	r0, r5
 801d48e:	47b8      	blx	r7
 801d490:	3001      	adds	r0, #1
 801d492:	f43f ae74 	beq.w	801d17e <_printf_float+0xc2>
 801d496:	ee18 3a10 	vmov	r3, s16
 801d49a:	4652      	mov	r2, sl
 801d49c:	4631      	mov	r1, r6
 801d49e:	4628      	mov	r0, r5
 801d4a0:	47b8      	blx	r7
 801d4a2:	3001      	adds	r0, #1
 801d4a4:	f43f ae6b 	beq.w	801d17e <_printf_float+0xc2>
 801d4a8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 801d4ac:	2200      	movs	r2, #0
 801d4ae:	2300      	movs	r3, #0
 801d4b0:	f7e3 fb14 	bl	8000adc <__aeabi_dcmpeq>
 801d4b4:	b9d8      	cbnz	r0, 801d4ee <_printf_float+0x432>
 801d4b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4b8:	f108 0201 	add.w	r2, r8, #1
 801d4bc:	3b01      	subs	r3, #1
 801d4be:	4631      	mov	r1, r6
 801d4c0:	4628      	mov	r0, r5
 801d4c2:	47b8      	blx	r7
 801d4c4:	3001      	adds	r0, #1
 801d4c6:	d10e      	bne.n	801d4e6 <_printf_float+0x42a>
 801d4c8:	e659      	b.n	801d17e <_printf_float+0xc2>
 801d4ca:	2301      	movs	r3, #1
 801d4cc:	4652      	mov	r2, sl
 801d4ce:	4631      	mov	r1, r6
 801d4d0:	4628      	mov	r0, r5
 801d4d2:	47b8      	blx	r7
 801d4d4:	3001      	adds	r0, #1
 801d4d6:	f43f ae52 	beq.w	801d17e <_printf_float+0xc2>
 801d4da:	f108 0801 	add.w	r8, r8, #1
 801d4de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4e0:	3b01      	subs	r3, #1
 801d4e2:	4543      	cmp	r3, r8
 801d4e4:	dcf1      	bgt.n	801d4ca <_printf_float+0x40e>
 801d4e6:	464b      	mov	r3, r9
 801d4e8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 801d4ec:	e6dc      	b.n	801d2a8 <_printf_float+0x1ec>
 801d4ee:	f04f 0800 	mov.w	r8, #0
 801d4f2:	f104 0a1a 	add.w	sl, r4, #26
 801d4f6:	e7f2      	b.n	801d4de <_printf_float+0x422>
 801d4f8:	2301      	movs	r3, #1
 801d4fa:	4642      	mov	r2, r8
 801d4fc:	e7df      	b.n	801d4be <_printf_float+0x402>
 801d4fe:	2301      	movs	r3, #1
 801d500:	464a      	mov	r2, r9
 801d502:	4631      	mov	r1, r6
 801d504:	4628      	mov	r0, r5
 801d506:	47b8      	blx	r7
 801d508:	3001      	adds	r0, #1
 801d50a:	f43f ae38 	beq.w	801d17e <_printf_float+0xc2>
 801d50e:	f108 0801 	add.w	r8, r8, #1
 801d512:	68e3      	ldr	r3, [r4, #12]
 801d514:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d516:	1a5b      	subs	r3, r3, r1
 801d518:	4543      	cmp	r3, r8
 801d51a:	dcf0      	bgt.n	801d4fe <_printf_float+0x442>
 801d51c:	e6fa      	b.n	801d314 <_printf_float+0x258>
 801d51e:	f04f 0800 	mov.w	r8, #0
 801d522:	f104 0919 	add.w	r9, r4, #25
 801d526:	e7f4      	b.n	801d512 <_printf_float+0x456>

0801d528 <_printf_common>:
 801d528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d52c:	4616      	mov	r6, r2
 801d52e:	4699      	mov	r9, r3
 801d530:	688a      	ldr	r2, [r1, #8]
 801d532:	690b      	ldr	r3, [r1, #16]
 801d534:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801d538:	4293      	cmp	r3, r2
 801d53a:	bfb8      	it	lt
 801d53c:	4613      	movlt	r3, r2
 801d53e:	6033      	str	r3, [r6, #0]
 801d540:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801d544:	4607      	mov	r7, r0
 801d546:	460c      	mov	r4, r1
 801d548:	b10a      	cbz	r2, 801d54e <_printf_common+0x26>
 801d54a:	3301      	adds	r3, #1
 801d54c:	6033      	str	r3, [r6, #0]
 801d54e:	6823      	ldr	r3, [r4, #0]
 801d550:	0699      	lsls	r1, r3, #26
 801d552:	bf42      	ittt	mi
 801d554:	6833      	ldrmi	r3, [r6, #0]
 801d556:	3302      	addmi	r3, #2
 801d558:	6033      	strmi	r3, [r6, #0]
 801d55a:	6825      	ldr	r5, [r4, #0]
 801d55c:	f015 0506 	ands.w	r5, r5, #6
 801d560:	d106      	bne.n	801d570 <_printf_common+0x48>
 801d562:	f104 0a19 	add.w	sl, r4, #25
 801d566:	68e3      	ldr	r3, [r4, #12]
 801d568:	6832      	ldr	r2, [r6, #0]
 801d56a:	1a9b      	subs	r3, r3, r2
 801d56c:	42ab      	cmp	r3, r5
 801d56e:	dc26      	bgt.n	801d5be <_printf_common+0x96>
 801d570:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801d574:	1e13      	subs	r3, r2, #0
 801d576:	6822      	ldr	r2, [r4, #0]
 801d578:	bf18      	it	ne
 801d57a:	2301      	movne	r3, #1
 801d57c:	0692      	lsls	r2, r2, #26
 801d57e:	d42b      	bmi.n	801d5d8 <_printf_common+0xb0>
 801d580:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801d584:	4649      	mov	r1, r9
 801d586:	4638      	mov	r0, r7
 801d588:	47c0      	blx	r8
 801d58a:	3001      	adds	r0, #1
 801d58c:	d01e      	beq.n	801d5cc <_printf_common+0xa4>
 801d58e:	6823      	ldr	r3, [r4, #0]
 801d590:	68e5      	ldr	r5, [r4, #12]
 801d592:	6832      	ldr	r2, [r6, #0]
 801d594:	f003 0306 	and.w	r3, r3, #6
 801d598:	2b04      	cmp	r3, #4
 801d59a:	bf08      	it	eq
 801d59c:	1aad      	subeq	r5, r5, r2
 801d59e:	68a3      	ldr	r3, [r4, #8]
 801d5a0:	6922      	ldr	r2, [r4, #16]
 801d5a2:	bf0c      	ite	eq
 801d5a4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801d5a8:	2500      	movne	r5, #0
 801d5aa:	4293      	cmp	r3, r2
 801d5ac:	bfc4      	itt	gt
 801d5ae:	1a9b      	subgt	r3, r3, r2
 801d5b0:	18ed      	addgt	r5, r5, r3
 801d5b2:	2600      	movs	r6, #0
 801d5b4:	341a      	adds	r4, #26
 801d5b6:	42b5      	cmp	r5, r6
 801d5b8:	d11a      	bne.n	801d5f0 <_printf_common+0xc8>
 801d5ba:	2000      	movs	r0, #0
 801d5bc:	e008      	b.n	801d5d0 <_printf_common+0xa8>
 801d5be:	2301      	movs	r3, #1
 801d5c0:	4652      	mov	r2, sl
 801d5c2:	4649      	mov	r1, r9
 801d5c4:	4638      	mov	r0, r7
 801d5c6:	47c0      	blx	r8
 801d5c8:	3001      	adds	r0, #1
 801d5ca:	d103      	bne.n	801d5d4 <_printf_common+0xac>
 801d5cc:	f04f 30ff 	mov.w	r0, #4294967295
 801d5d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d5d4:	3501      	adds	r5, #1
 801d5d6:	e7c6      	b.n	801d566 <_printf_common+0x3e>
 801d5d8:	18e1      	adds	r1, r4, r3
 801d5da:	1c5a      	adds	r2, r3, #1
 801d5dc:	2030      	movs	r0, #48	; 0x30
 801d5de:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801d5e2:	4422      	add	r2, r4
 801d5e4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801d5e8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801d5ec:	3302      	adds	r3, #2
 801d5ee:	e7c7      	b.n	801d580 <_printf_common+0x58>
 801d5f0:	2301      	movs	r3, #1
 801d5f2:	4622      	mov	r2, r4
 801d5f4:	4649      	mov	r1, r9
 801d5f6:	4638      	mov	r0, r7
 801d5f8:	47c0      	blx	r8
 801d5fa:	3001      	adds	r0, #1
 801d5fc:	d0e6      	beq.n	801d5cc <_printf_common+0xa4>
 801d5fe:	3601      	adds	r6, #1
 801d600:	e7d9      	b.n	801d5b6 <_printf_common+0x8e>
	...

0801d604 <_printf_i>:
 801d604:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d608:	7e0f      	ldrb	r7, [r1, #24]
 801d60a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d60c:	2f78      	cmp	r7, #120	; 0x78
 801d60e:	4691      	mov	r9, r2
 801d610:	4680      	mov	r8, r0
 801d612:	460c      	mov	r4, r1
 801d614:	469a      	mov	sl, r3
 801d616:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801d61a:	d807      	bhi.n	801d62c <_printf_i+0x28>
 801d61c:	2f62      	cmp	r7, #98	; 0x62
 801d61e:	d80a      	bhi.n	801d636 <_printf_i+0x32>
 801d620:	2f00      	cmp	r7, #0
 801d622:	f000 80d8 	beq.w	801d7d6 <_printf_i+0x1d2>
 801d626:	2f58      	cmp	r7, #88	; 0x58
 801d628:	f000 80a3 	beq.w	801d772 <_printf_i+0x16e>
 801d62c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d630:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801d634:	e03a      	b.n	801d6ac <_printf_i+0xa8>
 801d636:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801d63a:	2b15      	cmp	r3, #21
 801d63c:	d8f6      	bhi.n	801d62c <_printf_i+0x28>
 801d63e:	a101      	add	r1, pc, #4	; (adr r1, 801d644 <_printf_i+0x40>)
 801d640:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801d644:	0801d69d 	.word	0x0801d69d
 801d648:	0801d6b1 	.word	0x0801d6b1
 801d64c:	0801d62d 	.word	0x0801d62d
 801d650:	0801d62d 	.word	0x0801d62d
 801d654:	0801d62d 	.word	0x0801d62d
 801d658:	0801d62d 	.word	0x0801d62d
 801d65c:	0801d6b1 	.word	0x0801d6b1
 801d660:	0801d62d 	.word	0x0801d62d
 801d664:	0801d62d 	.word	0x0801d62d
 801d668:	0801d62d 	.word	0x0801d62d
 801d66c:	0801d62d 	.word	0x0801d62d
 801d670:	0801d7bd 	.word	0x0801d7bd
 801d674:	0801d6e1 	.word	0x0801d6e1
 801d678:	0801d79f 	.word	0x0801d79f
 801d67c:	0801d62d 	.word	0x0801d62d
 801d680:	0801d62d 	.word	0x0801d62d
 801d684:	0801d7df 	.word	0x0801d7df
 801d688:	0801d62d 	.word	0x0801d62d
 801d68c:	0801d6e1 	.word	0x0801d6e1
 801d690:	0801d62d 	.word	0x0801d62d
 801d694:	0801d62d 	.word	0x0801d62d
 801d698:	0801d7a7 	.word	0x0801d7a7
 801d69c:	682b      	ldr	r3, [r5, #0]
 801d69e:	1d1a      	adds	r2, r3, #4
 801d6a0:	681b      	ldr	r3, [r3, #0]
 801d6a2:	602a      	str	r2, [r5, #0]
 801d6a4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d6a8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801d6ac:	2301      	movs	r3, #1
 801d6ae:	e0a3      	b.n	801d7f8 <_printf_i+0x1f4>
 801d6b0:	6820      	ldr	r0, [r4, #0]
 801d6b2:	6829      	ldr	r1, [r5, #0]
 801d6b4:	0606      	lsls	r6, r0, #24
 801d6b6:	f101 0304 	add.w	r3, r1, #4
 801d6ba:	d50a      	bpl.n	801d6d2 <_printf_i+0xce>
 801d6bc:	680e      	ldr	r6, [r1, #0]
 801d6be:	602b      	str	r3, [r5, #0]
 801d6c0:	2e00      	cmp	r6, #0
 801d6c2:	da03      	bge.n	801d6cc <_printf_i+0xc8>
 801d6c4:	232d      	movs	r3, #45	; 0x2d
 801d6c6:	4276      	negs	r6, r6
 801d6c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d6cc:	485e      	ldr	r0, [pc, #376]	; (801d848 <_printf_i+0x244>)
 801d6ce:	230a      	movs	r3, #10
 801d6d0:	e019      	b.n	801d706 <_printf_i+0x102>
 801d6d2:	680e      	ldr	r6, [r1, #0]
 801d6d4:	602b      	str	r3, [r5, #0]
 801d6d6:	f010 0f40 	tst.w	r0, #64	; 0x40
 801d6da:	bf18      	it	ne
 801d6dc:	b236      	sxthne	r6, r6
 801d6de:	e7ef      	b.n	801d6c0 <_printf_i+0xbc>
 801d6e0:	682b      	ldr	r3, [r5, #0]
 801d6e2:	6820      	ldr	r0, [r4, #0]
 801d6e4:	1d19      	adds	r1, r3, #4
 801d6e6:	6029      	str	r1, [r5, #0]
 801d6e8:	0601      	lsls	r1, r0, #24
 801d6ea:	d501      	bpl.n	801d6f0 <_printf_i+0xec>
 801d6ec:	681e      	ldr	r6, [r3, #0]
 801d6ee:	e002      	b.n	801d6f6 <_printf_i+0xf2>
 801d6f0:	0646      	lsls	r6, r0, #25
 801d6f2:	d5fb      	bpl.n	801d6ec <_printf_i+0xe8>
 801d6f4:	881e      	ldrh	r6, [r3, #0]
 801d6f6:	4854      	ldr	r0, [pc, #336]	; (801d848 <_printf_i+0x244>)
 801d6f8:	2f6f      	cmp	r7, #111	; 0x6f
 801d6fa:	bf0c      	ite	eq
 801d6fc:	2308      	moveq	r3, #8
 801d6fe:	230a      	movne	r3, #10
 801d700:	2100      	movs	r1, #0
 801d702:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801d706:	6865      	ldr	r5, [r4, #4]
 801d708:	60a5      	str	r5, [r4, #8]
 801d70a:	2d00      	cmp	r5, #0
 801d70c:	bfa2      	ittt	ge
 801d70e:	6821      	ldrge	r1, [r4, #0]
 801d710:	f021 0104 	bicge.w	r1, r1, #4
 801d714:	6021      	strge	r1, [r4, #0]
 801d716:	b90e      	cbnz	r6, 801d71c <_printf_i+0x118>
 801d718:	2d00      	cmp	r5, #0
 801d71a:	d04d      	beq.n	801d7b8 <_printf_i+0x1b4>
 801d71c:	4615      	mov	r5, r2
 801d71e:	fbb6 f1f3 	udiv	r1, r6, r3
 801d722:	fb03 6711 	mls	r7, r3, r1, r6
 801d726:	5dc7      	ldrb	r7, [r0, r7]
 801d728:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801d72c:	4637      	mov	r7, r6
 801d72e:	42bb      	cmp	r3, r7
 801d730:	460e      	mov	r6, r1
 801d732:	d9f4      	bls.n	801d71e <_printf_i+0x11a>
 801d734:	2b08      	cmp	r3, #8
 801d736:	d10b      	bne.n	801d750 <_printf_i+0x14c>
 801d738:	6823      	ldr	r3, [r4, #0]
 801d73a:	07de      	lsls	r6, r3, #31
 801d73c:	d508      	bpl.n	801d750 <_printf_i+0x14c>
 801d73e:	6923      	ldr	r3, [r4, #16]
 801d740:	6861      	ldr	r1, [r4, #4]
 801d742:	4299      	cmp	r1, r3
 801d744:	bfde      	ittt	le
 801d746:	2330      	movle	r3, #48	; 0x30
 801d748:	f805 3c01 	strble.w	r3, [r5, #-1]
 801d74c:	f105 35ff 	addle.w	r5, r5, #4294967295
 801d750:	1b52      	subs	r2, r2, r5
 801d752:	6122      	str	r2, [r4, #16]
 801d754:	f8cd a000 	str.w	sl, [sp]
 801d758:	464b      	mov	r3, r9
 801d75a:	aa03      	add	r2, sp, #12
 801d75c:	4621      	mov	r1, r4
 801d75e:	4640      	mov	r0, r8
 801d760:	f7ff fee2 	bl	801d528 <_printf_common>
 801d764:	3001      	adds	r0, #1
 801d766:	d14c      	bne.n	801d802 <_printf_i+0x1fe>
 801d768:	f04f 30ff 	mov.w	r0, #4294967295
 801d76c:	b004      	add	sp, #16
 801d76e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d772:	4835      	ldr	r0, [pc, #212]	; (801d848 <_printf_i+0x244>)
 801d774:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801d778:	6829      	ldr	r1, [r5, #0]
 801d77a:	6823      	ldr	r3, [r4, #0]
 801d77c:	f851 6b04 	ldr.w	r6, [r1], #4
 801d780:	6029      	str	r1, [r5, #0]
 801d782:	061d      	lsls	r5, r3, #24
 801d784:	d514      	bpl.n	801d7b0 <_printf_i+0x1ac>
 801d786:	07df      	lsls	r7, r3, #31
 801d788:	bf44      	itt	mi
 801d78a:	f043 0320 	orrmi.w	r3, r3, #32
 801d78e:	6023      	strmi	r3, [r4, #0]
 801d790:	b91e      	cbnz	r6, 801d79a <_printf_i+0x196>
 801d792:	6823      	ldr	r3, [r4, #0]
 801d794:	f023 0320 	bic.w	r3, r3, #32
 801d798:	6023      	str	r3, [r4, #0]
 801d79a:	2310      	movs	r3, #16
 801d79c:	e7b0      	b.n	801d700 <_printf_i+0xfc>
 801d79e:	6823      	ldr	r3, [r4, #0]
 801d7a0:	f043 0320 	orr.w	r3, r3, #32
 801d7a4:	6023      	str	r3, [r4, #0]
 801d7a6:	2378      	movs	r3, #120	; 0x78
 801d7a8:	4828      	ldr	r0, [pc, #160]	; (801d84c <_printf_i+0x248>)
 801d7aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801d7ae:	e7e3      	b.n	801d778 <_printf_i+0x174>
 801d7b0:	0659      	lsls	r1, r3, #25
 801d7b2:	bf48      	it	mi
 801d7b4:	b2b6      	uxthmi	r6, r6
 801d7b6:	e7e6      	b.n	801d786 <_printf_i+0x182>
 801d7b8:	4615      	mov	r5, r2
 801d7ba:	e7bb      	b.n	801d734 <_printf_i+0x130>
 801d7bc:	682b      	ldr	r3, [r5, #0]
 801d7be:	6826      	ldr	r6, [r4, #0]
 801d7c0:	6961      	ldr	r1, [r4, #20]
 801d7c2:	1d18      	adds	r0, r3, #4
 801d7c4:	6028      	str	r0, [r5, #0]
 801d7c6:	0635      	lsls	r5, r6, #24
 801d7c8:	681b      	ldr	r3, [r3, #0]
 801d7ca:	d501      	bpl.n	801d7d0 <_printf_i+0x1cc>
 801d7cc:	6019      	str	r1, [r3, #0]
 801d7ce:	e002      	b.n	801d7d6 <_printf_i+0x1d2>
 801d7d0:	0670      	lsls	r0, r6, #25
 801d7d2:	d5fb      	bpl.n	801d7cc <_printf_i+0x1c8>
 801d7d4:	8019      	strh	r1, [r3, #0]
 801d7d6:	2300      	movs	r3, #0
 801d7d8:	6123      	str	r3, [r4, #16]
 801d7da:	4615      	mov	r5, r2
 801d7dc:	e7ba      	b.n	801d754 <_printf_i+0x150>
 801d7de:	682b      	ldr	r3, [r5, #0]
 801d7e0:	1d1a      	adds	r2, r3, #4
 801d7e2:	602a      	str	r2, [r5, #0]
 801d7e4:	681d      	ldr	r5, [r3, #0]
 801d7e6:	6862      	ldr	r2, [r4, #4]
 801d7e8:	2100      	movs	r1, #0
 801d7ea:	4628      	mov	r0, r5
 801d7ec:	f7e2 fcf0 	bl	80001d0 <memchr>
 801d7f0:	b108      	cbz	r0, 801d7f6 <_printf_i+0x1f2>
 801d7f2:	1b40      	subs	r0, r0, r5
 801d7f4:	6060      	str	r0, [r4, #4]
 801d7f6:	6863      	ldr	r3, [r4, #4]
 801d7f8:	6123      	str	r3, [r4, #16]
 801d7fa:	2300      	movs	r3, #0
 801d7fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d800:	e7a8      	b.n	801d754 <_printf_i+0x150>
 801d802:	6923      	ldr	r3, [r4, #16]
 801d804:	462a      	mov	r2, r5
 801d806:	4649      	mov	r1, r9
 801d808:	4640      	mov	r0, r8
 801d80a:	47d0      	blx	sl
 801d80c:	3001      	adds	r0, #1
 801d80e:	d0ab      	beq.n	801d768 <_printf_i+0x164>
 801d810:	6823      	ldr	r3, [r4, #0]
 801d812:	079b      	lsls	r3, r3, #30
 801d814:	d413      	bmi.n	801d83e <_printf_i+0x23a>
 801d816:	68e0      	ldr	r0, [r4, #12]
 801d818:	9b03      	ldr	r3, [sp, #12]
 801d81a:	4298      	cmp	r0, r3
 801d81c:	bfb8      	it	lt
 801d81e:	4618      	movlt	r0, r3
 801d820:	e7a4      	b.n	801d76c <_printf_i+0x168>
 801d822:	2301      	movs	r3, #1
 801d824:	4632      	mov	r2, r6
 801d826:	4649      	mov	r1, r9
 801d828:	4640      	mov	r0, r8
 801d82a:	47d0      	blx	sl
 801d82c:	3001      	adds	r0, #1
 801d82e:	d09b      	beq.n	801d768 <_printf_i+0x164>
 801d830:	3501      	adds	r5, #1
 801d832:	68e3      	ldr	r3, [r4, #12]
 801d834:	9903      	ldr	r1, [sp, #12]
 801d836:	1a5b      	subs	r3, r3, r1
 801d838:	42ab      	cmp	r3, r5
 801d83a:	dcf2      	bgt.n	801d822 <_printf_i+0x21e>
 801d83c:	e7eb      	b.n	801d816 <_printf_i+0x212>
 801d83e:	2500      	movs	r5, #0
 801d840:	f104 0619 	add.w	r6, r4, #25
 801d844:	e7f5      	b.n	801d832 <_printf_i+0x22e>
 801d846:	bf00      	nop
 801d848:	08028553 	.word	0x08028553
 801d84c:	08028564 	.word	0x08028564

0801d850 <iprintf>:
 801d850:	b40f      	push	{r0, r1, r2, r3}
 801d852:	4b0a      	ldr	r3, [pc, #40]	; (801d87c <iprintf+0x2c>)
 801d854:	b513      	push	{r0, r1, r4, lr}
 801d856:	681c      	ldr	r4, [r3, #0]
 801d858:	b124      	cbz	r4, 801d864 <iprintf+0x14>
 801d85a:	69a3      	ldr	r3, [r4, #24]
 801d85c:	b913      	cbnz	r3, 801d864 <iprintf+0x14>
 801d85e:	4620      	mov	r0, r4
 801d860:	f001 f916 	bl	801ea90 <__sinit>
 801d864:	ab05      	add	r3, sp, #20
 801d866:	9a04      	ldr	r2, [sp, #16]
 801d868:	68a1      	ldr	r1, [r4, #8]
 801d86a:	9301      	str	r3, [sp, #4]
 801d86c:	4620      	mov	r0, r4
 801d86e:	f7ff fa4b 	bl	801cd08 <_vfiprintf_r>
 801d872:	b002      	add	sp, #8
 801d874:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801d878:	b004      	add	sp, #16
 801d87a:	4770      	bx	lr
 801d87c:	20000014 	.word	0x20000014

0801d880 <_sbrk_r>:
 801d880:	b538      	push	{r3, r4, r5, lr}
 801d882:	4d06      	ldr	r5, [pc, #24]	; (801d89c <_sbrk_r+0x1c>)
 801d884:	2300      	movs	r3, #0
 801d886:	4604      	mov	r4, r0
 801d888:	4608      	mov	r0, r1
 801d88a:	602b      	str	r3, [r5, #0]
 801d88c:	f7e5 ff24 	bl	80036d8 <_sbrk>
 801d890:	1c43      	adds	r3, r0, #1
 801d892:	d102      	bne.n	801d89a <_sbrk_r+0x1a>
 801d894:	682b      	ldr	r3, [r5, #0]
 801d896:	b103      	cbz	r3, 801d89a <_sbrk_r+0x1a>
 801d898:	6023      	str	r3, [r4, #0]
 801d89a:	bd38      	pop	{r3, r4, r5, pc}
 801d89c:	2001129c 	.word	0x2001129c

0801d8a0 <_raise_r>:
 801d8a0:	291f      	cmp	r1, #31
 801d8a2:	b538      	push	{r3, r4, r5, lr}
 801d8a4:	4604      	mov	r4, r0
 801d8a6:	460d      	mov	r5, r1
 801d8a8:	d904      	bls.n	801d8b4 <_raise_r+0x14>
 801d8aa:	2316      	movs	r3, #22
 801d8ac:	6003      	str	r3, [r0, #0]
 801d8ae:	f04f 30ff 	mov.w	r0, #4294967295
 801d8b2:	bd38      	pop	{r3, r4, r5, pc}
 801d8b4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801d8b6:	b112      	cbz	r2, 801d8be <_raise_r+0x1e>
 801d8b8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801d8bc:	b94b      	cbnz	r3, 801d8d2 <_raise_r+0x32>
 801d8be:	4620      	mov	r0, r4
 801d8c0:	f000 f830 	bl	801d924 <_getpid_r>
 801d8c4:	462a      	mov	r2, r5
 801d8c6:	4601      	mov	r1, r0
 801d8c8:	4620      	mov	r0, r4
 801d8ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d8ce:	f000 b817 	b.w	801d900 <_kill_r>
 801d8d2:	2b01      	cmp	r3, #1
 801d8d4:	d00a      	beq.n	801d8ec <_raise_r+0x4c>
 801d8d6:	1c59      	adds	r1, r3, #1
 801d8d8:	d103      	bne.n	801d8e2 <_raise_r+0x42>
 801d8da:	2316      	movs	r3, #22
 801d8dc:	6003      	str	r3, [r0, #0]
 801d8de:	2001      	movs	r0, #1
 801d8e0:	e7e7      	b.n	801d8b2 <_raise_r+0x12>
 801d8e2:	2400      	movs	r4, #0
 801d8e4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801d8e8:	4628      	mov	r0, r5
 801d8ea:	4798      	blx	r3
 801d8ec:	2000      	movs	r0, #0
 801d8ee:	e7e0      	b.n	801d8b2 <_raise_r+0x12>

0801d8f0 <raise>:
 801d8f0:	4b02      	ldr	r3, [pc, #8]	; (801d8fc <raise+0xc>)
 801d8f2:	4601      	mov	r1, r0
 801d8f4:	6818      	ldr	r0, [r3, #0]
 801d8f6:	f7ff bfd3 	b.w	801d8a0 <_raise_r>
 801d8fa:	bf00      	nop
 801d8fc:	20000014 	.word	0x20000014

0801d900 <_kill_r>:
 801d900:	b538      	push	{r3, r4, r5, lr}
 801d902:	4d07      	ldr	r5, [pc, #28]	; (801d920 <_kill_r+0x20>)
 801d904:	2300      	movs	r3, #0
 801d906:	4604      	mov	r4, r0
 801d908:	4608      	mov	r0, r1
 801d90a:	4611      	mov	r1, r2
 801d90c:	602b      	str	r3, [r5, #0]
 801d90e:	f7e5 fe78 	bl	8003602 <_kill>
 801d912:	1c43      	adds	r3, r0, #1
 801d914:	d102      	bne.n	801d91c <_kill_r+0x1c>
 801d916:	682b      	ldr	r3, [r5, #0]
 801d918:	b103      	cbz	r3, 801d91c <_kill_r+0x1c>
 801d91a:	6023      	str	r3, [r4, #0]
 801d91c:	bd38      	pop	{r3, r4, r5, pc}
 801d91e:	bf00      	nop
 801d920:	2001129c 	.word	0x2001129c

0801d924 <_getpid_r>:
 801d924:	f7e5 be65 	b.w	80035f2 <_getpid>

0801d928 <__stack_chk_init>:
 801d928:	4b03      	ldr	r3, [pc, #12]	; (801d938 <__stack_chk_init+0x10>)
 801d92a:	681a      	ldr	r2, [r3, #0]
 801d92c:	b912      	cbnz	r2, 801d934 <__stack_chk_init+0xc>
 801d92e:	f5a2 0276 	sub.w	r2, r2, #16121856	; 0xf60000
 801d932:	601a      	str	r2, [r3, #0]
 801d934:	4770      	bx	lr
 801d936:	bf00      	nop
 801d938:	20011294 	.word	0x20011294

0801d93c <__stack_chk_fail>:
 801d93c:	b500      	push	{lr}
 801d93e:	4b10      	ldr	r3, [pc, #64]	; (801d980 <__stack_chk_fail+0x44>)
 801d940:	b08d      	sub	sp, #52	; 0x34
 801d942:	466a      	mov	r2, sp
 801d944:	f103 0628 	add.w	r6, r3, #40	; 0x28
 801d948:	4615      	mov	r5, r2
 801d94a:	6818      	ldr	r0, [r3, #0]
 801d94c:	6859      	ldr	r1, [r3, #4]
 801d94e:	4614      	mov	r4, r2
 801d950:	c403      	stmia	r4!, {r0, r1}
 801d952:	3308      	adds	r3, #8
 801d954:	42b3      	cmp	r3, r6
 801d956:	4622      	mov	r2, r4
 801d958:	d1f7      	bne.n	801d94a <__stack_chk_fail+0xe>
 801d95a:	6818      	ldr	r0, [r3, #0]
 801d95c:	791b      	ldrb	r3, [r3, #4]
 801d95e:	7123      	strb	r3, [r4, #4]
 801d960:	6020      	str	r0, [r4, #0]
 801d962:	4628      	mov	r0, r5
 801d964:	f7e2 fc8e 	bl	8000284 <strlen>
 801d968:	4629      	mov	r1, r5
 801d96a:	4602      	mov	r2, r0
 801d96c:	2002      	movs	r0, #2
 801d96e:	f000 f81d 	bl	801d9ac <write>
 801d972:	2006      	movs	r0, #6
 801d974:	f7ff ffbc 	bl	801d8f0 <raise>
 801d978:	207f      	movs	r0, #127	; 0x7f
 801d97a:	f7e5 fe52 	bl	8003622 <_exit>
 801d97e:	bf00      	nop
 801d980:	08028575 	.word	0x08028575

0801d984 <strncmp>:
 801d984:	b510      	push	{r4, lr}
 801d986:	b17a      	cbz	r2, 801d9a8 <strncmp+0x24>
 801d988:	4603      	mov	r3, r0
 801d98a:	3901      	subs	r1, #1
 801d98c:	1884      	adds	r4, r0, r2
 801d98e:	f813 0b01 	ldrb.w	r0, [r3], #1
 801d992:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 801d996:	4290      	cmp	r0, r2
 801d998:	d101      	bne.n	801d99e <strncmp+0x1a>
 801d99a:	42a3      	cmp	r3, r4
 801d99c:	d101      	bne.n	801d9a2 <strncmp+0x1e>
 801d99e:	1a80      	subs	r0, r0, r2
 801d9a0:	bd10      	pop	{r4, pc}
 801d9a2:	2800      	cmp	r0, #0
 801d9a4:	d1f3      	bne.n	801d98e <strncmp+0xa>
 801d9a6:	e7fa      	b.n	801d99e <strncmp+0x1a>
 801d9a8:	4610      	mov	r0, r2
 801d9aa:	e7f9      	b.n	801d9a0 <strncmp+0x1c>

0801d9ac <write>:
 801d9ac:	4613      	mov	r3, r2
 801d9ae:	460a      	mov	r2, r1
 801d9b0:	4601      	mov	r1, r0
 801d9b2:	4802      	ldr	r0, [pc, #8]	; (801d9bc <write+0x10>)
 801d9b4:	6800      	ldr	r0, [r0, #0]
 801d9b6:	f000 b855 	b.w	801da64 <_write_r>
 801d9ba:	bf00      	nop
 801d9bc:	20000014 	.word	0x20000014

0801d9c0 <__swbuf_r>:
 801d9c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d9c2:	460e      	mov	r6, r1
 801d9c4:	4614      	mov	r4, r2
 801d9c6:	4605      	mov	r5, r0
 801d9c8:	b118      	cbz	r0, 801d9d2 <__swbuf_r+0x12>
 801d9ca:	6983      	ldr	r3, [r0, #24]
 801d9cc:	b90b      	cbnz	r3, 801d9d2 <__swbuf_r+0x12>
 801d9ce:	f001 f85f 	bl	801ea90 <__sinit>
 801d9d2:	4b21      	ldr	r3, [pc, #132]	; (801da58 <__swbuf_r+0x98>)
 801d9d4:	429c      	cmp	r4, r3
 801d9d6:	d12b      	bne.n	801da30 <__swbuf_r+0x70>
 801d9d8:	686c      	ldr	r4, [r5, #4]
 801d9da:	69a3      	ldr	r3, [r4, #24]
 801d9dc:	60a3      	str	r3, [r4, #8]
 801d9de:	89a3      	ldrh	r3, [r4, #12]
 801d9e0:	071a      	lsls	r2, r3, #28
 801d9e2:	d52f      	bpl.n	801da44 <__swbuf_r+0x84>
 801d9e4:	6923      	ldr	r3, [r4, #16]
 801d9e6:	b36b      	cbz	r3, 801da44 <__swbuf_r+0x84>
 801d9e8:	6923      	ldr	r3, [r4, #16]
 801d9ea:	6820      	ldr	r0, [r4, #0]
 801d9ec:	1ac0      	subs	r0, r0, r3
 801d9ee:	6963      	ldr	r3, [r4, #20]
 801d9f0:	b2f6      	uxtb	r6, r6
 801d9f2:	4283      	cmp	r3, r0
 801d9f4:	4637      	mov	r7, r6
 801d9f6:	dc04      	bgt.n	801da02 <__swbuf_r+0x42>
 801d9f8:	4621      	mov	r1, r4
 801d9fa:	4628      	mov	r0, r5
 801d9fc:	f000 ffb4 	bl	801e968 <_fflush_r>
 801da00:	bb30      	cbnz	r0, 801da50 <__swbuf_r+0x90>
 801da02:	68a3      	ldr	r3, [r4, #8]
 801da04:	3b01      	subs	r3, #1
 801da06:	60a3      	str	r3, [r4, #8]
 801da08:	6823      	ldr	r3, [r4, #0]
 801da0a:	1c5a      	adds	r2, r3, #1
 801da0c:	6022      	str	r2, [r4, #0]
 801da0e:	701e      	strb	r6, [r3, #0]
 801da10:	6963      	ldr	r3, [r4, #20]
 801da12:	3001      	adds	r0, #1
 801da14:	4283      	cmp	r3, r0
 801da16:	d004      	beq.n	801da22 <__swbuf_r+0x62>
 801da18:	89a3      	ldrh	r3, [r4, #12]
 801da1a:	07db      	lsls	r3, r3, #31
 801da1c:	d506      	bpl.n	801da2c <__swbuf_r+0x6c>
 801da1e:	2e0a      	cmp	r6, #10
 801da20:	d104      	bne.n	801da2c <__swbuf_r+0x6c>
 801da22:	4621      	mov	r1, r4
 801da24:	4628      	mov	r0, r5
 801da26:	f000 ff9f 	bl	801e968 <_fflush_r>
 801da2a:	b988      	cbnz	r0, 801da50 <__swbuf_r+0x90>
 801da2c:	4638      	mov	r0, r7
 801da2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801da30:	4b0a      	ldr	r3, [pc, #40]	; (801da5c <__swbuf_r+0x9c>)
 801da32:	429c      	cmp	r4, r3
 801da34:	d101      	bne.n	801da3a <__swbuf_r+0x7a>
 801da36:	68ac      	ldr	r4, [r5, #8]
 801da38:	e7cf      	b.n	801d9da <__swbuf_r+0x1a>
 801da3a:	4b09      	ldr	r3, [pc, #36]	; (801da60 <__swbuf_r+0xa0>)
 801da3c:	429c      	cmp	r4, r3
 801da3e:	bf08      	it	eq
 801da40:	68ec      	ldreq	r4, [r5, #12]
 801da42:	e7ca      	b.n	801d9da <__swbuf_r+0x1a>
 801da44:	4621      	mov	r1, r4
 801da46:	4628      	mov	r0, r5
 801da48:	f000 f81e 	bl	801da88 <__swsetup_r>
 801da4c:	2800      	cmp	r0, #0
 801da4e:	d0cb      	beq.n	801d9e8 <__swbuf_r+0x28>
 801da50:	f04f 37ff 	mov.w	r7, #4294967295
 801da54:	e7ea      	b.n	801da2c <__swbuf_r+0x6c>
 801da56:	bf00      	nop
 801da58:	08028654 	.word	0x08028654
 801da5c:	08028674 	.word	0x08028674
 801da60:	08028634 	.word	0x08028634

0801da64 <_write_r>:
 801da64:	b538      	push	{r3, r4, r5, lr}
 801da66:	4d07      	ldr	r5, [pc, #28]	; (801da84 <_write_r+0x20>)
 801da68:	4604      	mov	r4, r0
 801da6a:	4608      	mov	r0, r1
 801da6c:	4611      	mov	r1, r2
 801da6e:	2200      	movs	r2, #0
 801da70:	602a      	str	r2, [r5, #0]
 801da72:	461a      	mov	r2, r3
 801da74:	f7e5 f852 	bl	8002b1c <_write>
 801da78:	1c43      	adds	r3, r0, #1
 801da7a:	d102      	bne.n	801da82 <_write_r+0x1e>
 801da7c:	682b      	ldr	r3, [r5, #0]
 801da7e:	b103      	cbz	r3, 801da82 <_write_r+0x1e>
 801da80:	6023      	str	r3, [r4, #0]
 801da82:	bd38      	pop	{r3, r4, r5, pc}
 801da84:	2001129c 	.word	0x2001129c

0801da88 <__swsetup_r>:
 801da88:	4b32      	ldr	r3, [pc, #200]	; (801db54 <__swsetup_r+0xcc>)
 801da8a:	b570      	push	{r4, r5, r6, lr}
 801da8c:	681d      	ldr	r5, [r3, #0]
 801da8e:	4606      	mov	r6, r0
 801da90:	460c      	mov	r4, r1
 801da92:	b125      	cbz	r5, 801da9e <__swsetup_r+0x16>
 801da94:	69ab      	ldr	r3, [r5, #24]
 801da96:	b913      	cbnz	r3, 801da9e <__swsetup_r+0x16>
 801da98:	4628      	mov	r0, r5
 801da9a:	f000 fff9 	bl	801ea90 <__sinit>
 801da9e:	4b2e      	ldr	r3, [pc, #184]	; (801db58 <__swsetup_r+0xd0>)
 801daa0:	429c      	cmp	r4, r3
 801daa2:	d10f      	bne.n	801dac4 <__swsetup_r+0x3c>
 801daa4:	686c      	ldr	r4, [r5, #4]
 801daa6:	89a3      	ldrh	r3, [r4, #12]
 801daa8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801daac:	0719      	lsls	r1, r3, #28
 801daae:	d42c      	bmi.n	801db0a <__swsetup_r+0x82>
 801dab0:	06dd      	lsls	r5, r3, #27
 801dab2:	d411      	bmi.n	801dad8 <__swsetup_r+0x50>
 801dab4:	2309      	movs	r3, #9
 801dab6:	6033      	str	r3, [r6, #0]
 801dab8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801dabc:	81a3      	strh	r3, [r4, #12]
 801dabe:	f04f 30ff 	mov.w	r0, #4294967295
 801dac2:	e03e      	b.n	801db42 <__swsetup_r+0xba>
 801dac4:	4b25      	ldr	r3, [pc, #148]	; (801db5c <__swsetup_r+0xd4>)
 801dac6:	429c      	cmp	r4, r3
 801dac8:	d101      	bne.n	801dace <__swsetup_r+0x46>
 801daca:	68ac      	ldr	r4, [r5, #8]
 801dacc:	e7eb      	b.n	801daa6 <__swsetup_r+0x1e>
 801dace:	4b24      	ldr	r3, [pc, #144]	; (801db60 <__swsetup_r+0xd8>)
 801dad0:	429c      	cmp	r4, r3
 801dad2:	bf08      	it	eq
 801dad4:	68ec      	ldreq	r4, [r5, #12]
 801dad6:	e7e6      	b.n	801daa6 <__swsetup_r+0x1e>
 801dad8:	0758      	lsls	r0, r3, #29
 801dada:	d512      	bpl.n	801db02 <__swsetup_r+0x7a>
 801dadc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801dade:	b141      	cbz	r1, 801daf2 <__swsetup_r+0x6a>
 801dae0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801dae4:	4299      	cmp	r1, r3
 801dae6:	d002      	beq.n	801daee <__swsetup_r+0x66>
 801dae8:	4630      	mov	r0, r6
 801daea:	f7ff f803 	bl	801caf4 <_free_r>
 801daee:	2300      	movs	r3, #0
 801daf0:	6363      	str	r3, [r4, #52]	; 0x34
 801daf2:	89a3      	ldrh	r3, [r4, #12]
 801daf4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801daf8:	81a3      	strh	r3, [r4, #12]
 801dafa:	2300      	movs	r3, #0
 801dafc:	6063      	str	r3, [r4, #4]
 801dafe:	6923      	ldr	r3, [r4, #16]
 801db00:	6023      	str	r3, [r4, #0]
 801db02:	89a3      	ldrh	r3, [r4, #12]
 801db04:	f043 0308 	orr.w	r3, r3, #8
 801db08:	81a3      	strh	r3, [r4, #12]
 801db0a:	6923      	ldr	r3, [r4, #16]
 801db0c:	b94b      	cbnz	r3, 801db22 <__swsetup_r+0x9a>
 801db0e:	89a3      	ldrh	r3, [r4, #12]
 801db10:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801db14:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801db18:	d003      	beq.n	801db22 <__swsetup_r+0x9a>
 801db1a:	4621      	mov	r1, r4
 801db1c:	4630      	mov	r0, r6
 801db1e:	f001 f881 	bl	801ec24 <__smakebuf_r>
 801db22:	89a0      	ldrh	r0, [r4, #12]
 801db24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801db28:	f010 0301 	ands.w	r3, r0, #1
 801db2c:	d00a      	beq.n	801db44 <__swsetup_r+0xbc>
 801db2e:	2300      	movs	r3, #0
 801db30:	60a3      	str	r3, [r4, #8]
 801db32:	6963      	ldr	r3, [r4, #20]
 801db34:	425b      	negs	r3, r3
 801db36:	61a3      	str	r3, [r4, #24]
 801db38:	6923      	ldr	r3, [r4, #16]
 801db3a:	b943      	cbnz	r3, 801db4e <__swsetup_r+0xc6>
 801db3c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801db40:	d1ba      	bne.n	801dab8 <__swsetup_r+0x30>
 801db42:	bd70      	pop	{r4, r5, r6, pc}
 801db44:	0781      	lsls	r1, r0, #30
 801db46:	bf58      	it	pl
 801db48:	6963      	ldrpl	r3, [r4, #20]
 801db4a:	60a3      	str	r3, [r4, #8]
 801db4c:	e7f4      	b.n	801db38 <__swsetup_r+0xb0>
 801db4e:	2000      	movs	r0, #0
 801db50:	e7f7      	b.n	801db42 <__swsetup_r+0xba>
 801db52:	bf00      	nop
 801db54:	20000014 	.word	0x20000014
 801db58:	08028654 	.word	0x08028654
 801db5c:	08028674 	.word	0x08028674
 801db60:	08028634 	.word	0x08028634

0801db64 <quorem>:
 801db64:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db68:	6903      	ldr	r3, [r0, #16]
 801db6a:	690c      	ldr	r4, [r1, #16]
 801db6c:	42a3      	cmp	r3, r4
 801db6e:	4607      	mov	r7, r0
 801db70:	f2c0 8081 	blt.w	801dc76 <quorem+0x112>
 801db74:	3c01      	subs	r4, #1
 801db76:	f101 0814 	add.w	r8, r1, #20
 801db7a:	f100 0514 	add.w	r5, r0, #20
 801db7e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801db82:	9301      	str	r3, [sp, #4]
 801db84:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 801db88:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801db8c:	3301      	adds	r3, #1
 801db8e:	429a      	cmp	r2, r3
 801db90:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 801db94:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 801db98:	fbb2 f6f3 	udiv	r6, r2, r3
 801db9c:	d331      	bcc.n	801dc02 <quorem+0x9e>
 801db9e:	f04f 0e00 	mov.w	lr, #0
 801dba2:	4640      	mov	r0, r8
 801dba4:	46ac      	mov	ip, r5
 801dba6:	46f2      	mov	sl, lr
 801dba8:	f850 2b04 	ldr.w	r2, [r0], #4
 801dbac:	b293      	uxth	r3, r2
 801dbae:	fb06 e303 	mla	r3, r6, r3, lr
 801dbb2:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 801dbb6:	b29b      	uxth	r3, r3
 801dbb8:	ebaa 0303 	sub.w	r3, sl, r3
 801dbbc:	f8dc a000 	ldr.w	sl, [ip]
 801dbc0:	0c12      	lsrs	r2, r2, #16
 801dbc2:	fa13 f38a 	uxtah	r3, r3, sl
 801dbc6:	fb06 e202 	mla	r2, r6, r2, lr
 801dbca:	9300      	str	r3, [sp, #0]
 801dbcc:	9b00      	ldr	r3, [sp, #0]
 801dbce:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 801dbd2:	b292      	uxth	r2, r2
 801dbd4:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 801dbd8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801dbdc:	f8bd 3000 	ldrh.w	r3, [sp]
 801dbe0:	4581      	cmp	r9, r0
 801dbe2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dbe6:	f84c 3b04 	str.w	r3, [ip], #4
 801dbea:	ea4f 4a22 	mov.w	sl, r2, asr #16
 801dbee:	d2db      	bcs.n	801dba8 <quorem+0x44>
 801dbf0:	f855 300b 	ldr.w	r3, [r5, fp]
 801dbf4:	b92b      	cbnz	r3, 801dc02 <quorem+0x9e>
 801dbf6:	9b01      	ldr	r3, [sp, #4]
 801dbf8:	3b04      	subs	r3, #4
 801dbfa:	429d      	cmp	r5, r3
 801dbfc:	461a      	mov	r2, r3
 801dbfe:	d32e      	bcc.n	801dc5e <quorem+0xfa>
 801dc00:	613c      	str	r4, [r7, #16]
 801dc02:	4638      	mov	r0, r7
 801dc04:	f001 fadc 	bl	801f1c0 <__mcmp>
 801dc08:	2800      	cmp	r0, #0
 801dc0a:	db24      	blt.n	801dc56 <quorem+0xf2>
 801dc0c:	3601      	adds	r6, #1
 801dc0e:	4628      	mov	r0, r5
 801dc10:	f04f 0c00 	mov.w	ip, #0
 801dc14:	f858 2b04 	ldr.w	r2, [r8], #4
 801dc18:	f8d0 e000 	ldr.w	lr, [r0]
 801dc1c:	b293      	uxth	r3, r2
 801dc1e:	ebac 0303 	sub.w	r3, ip, r3
 801dc22:	0c12      	lsrs	r2, r2, #16
 801dc24:	fa13 f38e 	uxtah	r3, r3, lr
 801dc28:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 801dc2c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801dc30:	b29b      	uxth	r3, r3
 801dc32:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dc36:	45c1      	cmp	r9, r8
 801dc38:	f840 3b04 	str.w	r3, [r0], #4
 801dc3c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801dc40:	d2e8      	bcs.n	801dc14 <quorem+0xb0>
 801dc42:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801dc46:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 801dc4a:	b922      	cbnz	r2, 801dc56 <quorem+0xf2>
 801dc4c:	3b04      	subs	r3, #4
 801dc4e:	429d      	cmp	r5, r3
 801dc50:	461a      	mov	r2, r3
 801dc52:	d30a      	bcc.n	801dc6a <quorem+0x106>
 801dc54:	613c      	str	r4, [r7, #16]
 801dc56:	4630      	mov	r0, r6
 801dc58:	b003      	add	sp, #12
 801dc5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc5e:	6812      	ldr	r2, [r2, #0]
 801dc60:	3b04      	subs	r3, #4
 801dc62:	2a00      	cmp	r2, #0
 801dc64:	d1cc      	bne.n	801dc00 <quorem+0x9c>
 801dc66:	3c01      	subs	r4, #1
 801dc68:	e7c7      	b.n	801dbfa <quorem+0x96>
 801dc6a:	6812      	ldr	r2, [r2, #0]
 801dc6c:	3b04      	subs	r3, #4
 801dc6e:	2a00      	cmp	r2, #0
 801dc70:	d1f0      	bne.n	801dc54 <quorem+0xf0>
 801dc72:	3c01      	subs	r4, #1
 801dc74:	e7eb      	b.n	801dc4e <quorem+0xea>
 801dc76:	2000      	movs	r0, #0
 801dc78:	e7ee      	b.n	801dc58 <quorem+0xf4>
 801dc7a:	0000      	movs	r0, r0
 801dc7c:	0000      	movs	r0, r0
	...

0801dc80 <_dtoa_r>:
 801dc80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc84:	ed2d 8b04 	vpush	{d8-d9}
 801dc88:	ec57 6b10 	vmov	r6, r7, d0
 801dc8c:	b093      	sub	sp, #76	; 0x4c
 801dc8e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 801dc90:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 801dc94:	9106      	str	r1, [sp, #24]
 801dc96:	ee10 aa10 	vmov	sl, s0
 801dc9a:	4604      	mov	r4, r0
 801dc9c:	9209      	str	r2, [sp, #36]	; 0x24
 801dc9e:	930c      	str	r3, [sp, #48]	; 0x30
 801dca0:	46bb      	mov	fp, r7
 801dca2:	b975      	cbnz	r5, 801dcc2 <_dtoa_r+0x42>
 801dca4:	2010      	movs	r0, #16
 801dca6:	f7fe fee5 	bl	801ca74 <malloc>
 801dcaa:	4602      	mov	r2, r0
 801dcac:	6260      	str	r0, [r4, #36]	; 0x24
 801dcae:	b920      	cbnz	r0, 801dcba <_dtoa_r+0x3a>
 801dcb0:	4ba7      	ldr	r3, [pc, #668]	; (801df50 <_dtoa_r+0x2d0>)
 801dcb2:	21ea      	movs	r1, #234	; 0xea
 801dcb4:	48a7      	ldr	r0, [pc, #668]	; (801df54 <_dtoa_r+0x2d4>)
 801dcb6:	f7fe fe83 	bl	801c9c0 <__assert_func>
 801dcba:	e9c0 5501 	strd	r5, r5, [r0, #4]
 801dcbe:	6005      	str	r5, [r0, #0]
 801dcc0:	60c5      	str	r5, [r0, #12]
 801dcc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801dcc4:	6819      	ldr	r1, [r3, #0]
 801dcc6:	b151      	cbz	r1, 801dcde <_dtoa_r+0x5e>
 801dcc8:	685a      	ldr	r2, [r3, #4]
 801dcca:	604a      	str	r2, [r1, #4]
 801dccc:	2301      	movs	r3, #1
 801dcce:	4093      	lsls	r3, r2
 801dcd0:	608b      	str	r3, [r1, #8]
 801dcd2:	4620      	mov	r0, r4
 801dcd4:	f001 f832 	bl	801ed3c <_Bfree>
 801dcd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801dcda:	2200      	movs	r2, #0
 801dcdc:	601a      	str	r2, [r3, #0]
 801dcde:	1e3b      	subs	r3, r7, #0
 801dce0:	bfaa      	itet	ge
 801dce2:	2300      	movge	r3, #0
 801dce4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 801dce8:	f8c8 3000 	strge.w	r3, [r8]
 801dcec:	4b9a      	ldr	r3, [pc, #616]	; (801df58 <_dtoa_r+0x2d8>)
 801dcee:	bfbc      	itt	lt
 801dcf0:	2201      	movlt	r2, #1
 801dcf2:	f8c8 2000 	strlt.w	r2, [r8]
 801dcf6:	ea33 030b 	bics.w	r3, r3, fp
 801dcfa:	d11b      	bne.n	801dd34 <_dtoa_r+0xb4>
 801dcfc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dcfe:	f242 730f 	movw	r3, #9999	; 0x270f
 801dd02:	6013      	str	r3, [r2, #0]
 801dd04:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801dd08:	4333      	orrs	r3, r6
 801dd0a:	f000 8592 	beq.w	801e832 <_dtoa_r+0xbb2>
 801dd0e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801dd10:	b963      	cbnz	r3, 801dd2c <_dtoa_r+0xac>
 801dd12:	4b92      	ldr	r3, [pc, #584]	; (801df5c <_dtoa_r+0x2dc>)
 801dd14:	e022      	b.n	801dd5c <_dtoa_r+0xdc>
 801dd16:	4b92      	ldr	r3, [pc, #584]	; (801df60 <_dtoa_r+0x2e0>)
 801dd18:	9301      	str	r3, [sp, #4]
 801dd1a:	3308      	adds	r3, #8
 801dd1c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801dd1e:	6013      	str	r3, [r2, #0]
 801dd20:	9801      	ldr	r0, [sp, #4]
 801dd22:	b013      	add	sp, #76	; 0x4c
 801dd24:	ecbd 8b04 	vpop	{d8-d9}
 801dd28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd2c:	4b8b      	ldr	r3, [pc, #556]	; (801df5c <_dtoa_r+0x2dc>)
 801dd2e:	9301      	str	r3, [sp, #4]
 801dd30:	3303      	adds	r3, #3
 801dd32:	e7f3      	b.n	801dd1c <_dtoa_r+0x9c>
 801dd34:	2200      	movs	r2, #0
 801dd36:	2300      	movs	r3, #0
 801dd38:	4650      	mov	r0, sl
 801dd3a:	4659      	mov	r1, fp
 801dd3c:	f7e2 fece 	bl	8000adc <__aeabi_dcmpeq>
 801dd40:	ec4b ab19 	vmov	d9, sl, fp
 801dd44:	4680      	mov	r8, r0
 801dd46:	b158      	cbz	r0, 801dd60 <_dtoa_r+0xe0>
 801dd48:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dd4a:	2301      	movs	r3, #1
 801dd4c:	6013      	str	r3, [r2, #0]
 801dd4e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801dd50:	2b00      	cmp	r3, #0
 801dd52:	f000 856b 	beq.w	801e82c <_dtoa_r+0xbac>
 801dd56:	4883      	ldr	r0, [pc, #524]	; (801df64 <_dtoa_r+0x2e4>)
 801dd58:	6018      	str	r0, [r3, #0]
 801dd5a:	1e43      	subs	r3, r0, #1
 801dd5c:	9301      	str	r3, [sp, #4]
 801dd5e:	e7df      	b.n	801dd20 <_dtoa_r+0xa0>
 801dd60:	ec4b ab10 	vmov	d0, sl, fp
 801dd64:	aa10      	add	r2, sp, #64	; 0x40
 801dd66:	a911      	add	r1, sp, #68	; 0x44
 801dd68:	4620      	mov	r0, r4
 801dd6a:	f001 facf 	bl	801f30c <__d2b>
 801dd6e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 801dd72:	ee08 0a10 	vmov	s16, r0
 801dd76:	2d00      	cmp	r5, #0
 801dd78:	f000 8084 	beq.w	801de84 <_dtoa_r+0x204>
 801dd7c:	ee19 3a90 	vmov	r3, s19
 801dd80:	f3c3 0313 	ubfx	r3, r3, #0, #20
 801dd84:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 801dd88:	4656      	mov	r6, sl
 801dd8a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 801dd8e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 801dd92:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801dd96:	4b74      	ldr	r3, [pc, #464]	; (801df68 <_dtoa_r+0x2e8>)
 801dd98:	2200      	movs	r2, #0
 801dd9a:	4630      	mov	r0, r6
 801dd9c:	4639      	mov	r1, r7
 801dd9e:	f7e2 fa7d 	bl	800029c <__aeabi_dsub>
 801dda2:	a365      	add	r3, pc, #404	; (adr r3, 801df38 <_dtoa_r+0x2b8>)
 801dda4:	e9d3 2300 	ldrd	r2, r3, [r3]
 801dda8:	f7e2 fc30 	bl	800060c <__aeabi_dmul>
 801ddac:	a364      	add	r3, pc, #400	; (adr r3, 801df40 <_dtoa_r+0x2c0>)
 801ddae:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ddb2:	f7e2 fa75 	bl	80002a0 <__adddf3>
 801ddb6:	4606      	mov	r6, r0
 801ddb8:	4628      	mov	r0, r5
 801ddba:	460f      	mov	r7, r1
 801ddbc:	f7e2 fbbc 	bl	8000538 <__aeabi_i2d>
 801ddc0:	a361      	add	r3, pc, #388	; (adr r3, 801df48 <_dtoa_r+0x2c8>)
 801ddc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ddc6:	f7e2 fc21 	bl	800060c <__aeabi_dmul>
 801ddca:	4602      	mov	r2, r0
 801ddcc:	460b      	mov	r3, r1
 801ddce:	4630      	mov	r0, r6
 801ddd0:	4639      	mov	r1, r7
 801ddd2:	f7e2 fa65 	bl	80002a0 <__adddf3>
 801ddd6:	4606      	mov	r6, r0
 801ddd8:	460f      	mov	r7, r1
 801ddda:	f7e2 fec7 	bl	8000b6c <__aeabi_d2iz>
 801ddde:	2200      	movs	r2, #0
 801dde0:	9000      	str	r0, [sp, #0]
 801dde2:	2300      	movs	r3, #0
 801dde4:	4630      	mov	r0, r6
 801dde6:	4639      	mov	r1, r7
 801dde8:	f7e2 fe82 	bl	8000af0 <__aeabi_dcmplt>
 801ddec:	b150      	cbz	r0, 801de04 <_dtoa_r+0x184>
 801ddee:	9800      	ldr	r0, [sp, #0]
 801ddf0:	f7e2 fba2 	bl	8000538 <__aeabi_i2d>
 801ddf4:	4632      	mov	r2, r6
 801ddf6:	463b      	mov	r3, r7
 801ddf8:	f7e2 fe70 	bl	8000adc <__aeabi_dcmpeq>
 801ddfc:	b910      	cbnz	r0, 801de04 <_dtoa_r+0x184>
 801ddfe:	9b00      	ldr	r3, [sp, #0]
 801de00:	3b01      	subs	r3, #1
 801de02:	9300      	str	r3, [sp, #0]
 801de04:	9b00      	ldr	r3, [sp, #0]
 801de06:	2b16      	cmp	r3, #22
 801de08:	d85a      	bhi.n	801dec0 <_dtoa_r+0x240>
 801de0a:	9a00      	ldr	r2, [sp, #0]
 801de0c:	4b57      	ldr	r3, [pc, #348]	; (801df6c <_dtoa_r+0x2ec>)
 801de0e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801de12:	e9d3 2300 	ldrd	r2, r3, [r3]
 801de16:	ec51 0b19 	vmov	r0, r1, d9
 801de1a:	f7e2 fe69 	bl	8000af0 <__aeabi_dcmplt>
 801de1e:	2800      	cmp	r0, #0
 801de20:	d050      	beq.n	801dec4 <_dtoa_r+0x244>
 801de22:	9b00      	ldr	r3, [sp, #0]
 801de24:	3b01      	subs	r3, #1
 801de26:	9300      	str	r3, [sp, #0]
 801de28:	2300      	movs	r3, #0
 801de2a:	930b      	str	r3, [sp, #44]	; 0x2c
 801de2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801de2e:	1b5d      	subs	r5, r3, r5
 801de30:	1e6b      	subs	r3, r5, #1
 801de32:	9305      	str	r3, [sp, #20]
 801de34:	bf45      	ittet	mi
 801de36:	f1c5 0301 	rsbmi	r3, r5, #1
 801de3a:	9304      	strmi	r3, [sp, #16]
 801de3c:	2300      	movpl	r3, #0
 801de3e:	2300      	movmi	r3, #0
 801de40:	bf4c      	ite	mi
 801de42:	9305      	strmi	r3, [sp, #20]
 801de44:	9304      	strpl	r3, [sp, #16]
 801de46:	9b00      	ldr	r3, [sp, #0]
 801de48:	2b00      	cmp	r3, #0
 801de4a:	db3d      	blt.n	801dec8 <_dtoa_r+0x248>
 801de4c:	9b05      	ldr	r3, [sp, #20]
 801de4e:	9a00      	ldr	r2, [sp, #0]
 801de50:	920a      	str	r2, [sp, #40]	; 0x28
 801de52:	4413      	add	r3, r2
 801de54:	9305      	str	r3, [sp, #20]
 801de56:	2300      	movs	r3, #0
 801de58:	9307      	str	r3, [sp, #28]
 801de5a:	9b06      	ldr	r3, [sp, #24]
 801de5c:	2b09      	cmp	r3, #9
 801de5e:	f200 8089 	bhi.w	801df74 <_dtoa_r+0x2f4>
 801de62:	2b05      	cmp	r3, #5
 801de64:	bfc4      	itt	gt
 801de66:	3b04      	subgt	r3, #4
 801de68:	9306      	strgt	r3, [sp, #24]
 801de6a:	9b06      	ldr	r3, [sp, #24]
 801de6c:	f1a3 0302 	sub.w	r3, r3, #2
 801de70:	bfcc      	ite	gt
 801de72:	2500      	movgt	r5, #0
 801de74:	2501      	movle	r5, #1
 801de76:	2b03      	cmp	r3, #3
 801de78:	f200 8087 	bhi.w	801df8a <_dtoa_r+0x30a>
 801de7c:	e8df f003 	tbb	[pc, r3]
 801de80:	59383a2d 	.word	0x59383a2d
 801de84:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 801de88:	441d      	add	r5, r3
 801de8a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 801de8e:	2b20      	cmp	r3, #32
 801de90:	bfc1      	itttt	gt
 801de92:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 801de96:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 801de9a:	fa0b f303 	lslgt.w	r3, fp, r3
 801de9e:	fa26 f000 	lsrgt.w	r0, r6, r0
 801dea2:	bfda      	itte	le
 801dea4:	f1c3 0320 	rsble	r3, r3, #32
 801dea8:	fa06 f003 	lslle.w	r0, r6, r3
 801deac:	4318      	orrgt	r0, r3
 801deae:	f7e2 fb33 	bl	8000518 <__aeabi_ui2d>
 801deb2:	2301      	movs	r3, #1
 801deb4:	4606      	mov	r6, r0
 801deb6:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 801deba:	3d01      	subs	r5, #1
 801debc:	930e      	str	r3, [sp, #56]	; 0x38
 801debe:	e76a      	b.n	801dd96 <_dtoa_r+0x116>
 801dec0:	2301      	movs	r3, #1
 801dec2:	e7b2      	b.n	801de2a <_dtoa_r+0x1aa>
 801dec4:	900b      	str	r0, [sp, #44]	; 0x2c
 801dec6:	e7b1      	b.n	801de2c <_dtoa_r+0x1ac>
 801dec8:	9b04      	ldr	r3, [sp, #16]
 801deca:	9a00      	ldr	r2, [sp, #0]
 801decc:	1a9b      	subs	r3, r3, r2
 801dece:	9304      	str	r3, [sp, #16]
 801ded0:	4253      	negs	r3, r2
 801ded2:	9307      	str	r3, [sp, #28]
 801ded4:	2300      	movs	r3, #0
 801ded6:	930a      	str	r3, [sp, #40]	; 0x28
 801ded8:	e7bf      	b.n	801de5a <_dtoa_r+0x1da>
 801deda:	2300      	movs	r3, #0
 801dedc:	9308      	str	r3, [sp, #32]
 801dede:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dee0:	2b00      	cmp	r3, #0
 801dee2:	dc55      	bgt.n	801df90 <_dtoa_r+0x310>
 801dee4:	2301      	movs	r3, #1
 801dee6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801deea:	461a      	mov	r2, r3
 801deec:	9209      	str	r2, [sp, #36]	; 0x24
 801deee:	e00c      	b.n	801df0a <_dtoa_r+0x28a>
 801def0:	2301      	movs	r3, #1
 801def2:	e7f3      	b.n	801dedc <_dtoa_r+0x25c>
 801def4:	2300      	movs	r3, #0
 801def6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801def8:	9308      	str	r3, [sp, #32]
 801defa:	9b00      	ldr	r3, [sp, #0]
 801defc:	4413      	add	r3, r2
 801defe:	9302      	str	r3, [sp, #8]
 801df00:	3301      	adds	r3, #1
 801df02:	2b01      	cmp	r3, #1
 801df04:	9303      	str	r3, [sp, #12]
 801df06:	bfb8      	it	lt
 801df08:	2301      	movlt	r3, #1
 801df0a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 801df0c:	2200      	movs	r2, #0
 801df0e:	6042      	str	r2, [r0, #4]
 801df10:	2204      	movs	r2, #4
 801df12:	f102 0614 	add.w	r6, r2, #20
 801df16:	429e      	cmp	r6, r3
 801df18:	6841      	ldr	r1, [r0, #4]
 801df1a:	d93d      	bls.n	801df98 <_dtoa_r+0x318>
 801df1c:	4620      	mov	r0, r4
 801df1e:	f000 fecd 	bl	801ecbc <_Balloc>
 801df22:	9001      	str	r0, [sp, #4]
 801df24:	2800      	cmp	r0, #0
 801df26:	d13b      	bne.n	801dfa0 <_dtoa_r+0x320>
 801df28:	4b11      	ldr	r3, [pc, #68]	; (801df70 <_dtoa_r+0x2f0>)
 801df2a:	4602      	mov	r2, r0
 801df2c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 801df30:	e6c0      	b.n	801dcb4 <_dtoa_r+0x34>
 801df32:	2301      	movs	r3, #1
 801df34:	e7df      	b.n	801def6 <_dtoa_r+0x276>
 801df36:	bf00      	nop
 801df38:	636f4361 	.word	0x636f4361
 801df3c:	3fd287a7 	.word	0x3fd287a7
 801df40:	8b60c8b3 	.word	0x8b60c8b3
 801df44:	3fc68a28 	.word	0x3fc68a28
 801df48:	509f79fb 	.word	0x509f79fb
 801df4c:	3fd34413 	.word	0x3fd34413
 801df50:	080285af 	.word	0x080285af
 801df54:	080285c6 	.word	0x080285c6
 801df58:	7ff00000 	.word	0x7ff00000
 801df5c:	080285ab 	.word	0x080285ab
 801df60:	080285a2 	.word	0x080285a2
 801df64:	08028552 	.word	0x08028552
 801df68:	3ff80000 	.word	0x3ff80000
 801df6c:	08028718 	.word	0x08028718
 801df70:	08028621 	.word	0x08028621
 801df74:	2501      	movs	r5, #1
 801df76:	2300      	movs	r3, #0
 801df78:	9306      	str	r3, [sp, #24]
 801df7a:	9508      	str	r5, [sp, #32]
 801df7c:	f04f 33ff 	mov.w	r3, #4294967295
 801df80:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801df84:	2200      	movs	r2, #0
 801df86:	2312      	movs	r3, #18
 801df88:	e7b0      	b.n	801deec <_dtoa_r+0x26c>
 801df8a:	2301      	movs	r3, #1
 801df8c:	9308      	str	r3, [sp, #32]
 801df8e:	e7f5      	b.n	801df7c <_dtoa_r+0x2fc>
 801df90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801df92:	e9cd 3302 	strd	r3, r3, [sp, #8]
 801df96:	e7b8      	b.n	801df0a <_dtoa_r+0x28a>
 801df98:	3101      	adds	r1, #1
 801df9a:	6041      	str	r1, [r0, #4]
 801df9c:	0052      	lsls	r2, r2, #1
 801df9e:	e7b8      	b.n	801df12 <_dtoa_r+0x292>
 801dfa0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801dfa2:	9a01      	ldr	r2, [sp, #4]
 801dfa4:	601a      	str	r2, [r3, #0]
 801dfa6:	9b03      	ldr	r3, [sp, #12]
 801dfa8:	2b0e      	cmp	r3, #14
 801dfaa:	f200 809d 	bhi.w	801e0e8 <_dtoa_r+0x468>
 801dfae:	2d00      	cmp	r5, #0
 801dfb0:	f000 809a 	beq.w	801e0e8 <_dtoa_r+0x468>
 801dfb4:	9b00      	ldr	r3, [sp, #0]
 801dfb6:	2b00      	cmp	r3, #0
 801dfb8:	dd32      	ble.n	801e020 <_dtoa_r+0x3a0>
 801dfba:	4ab7      	ldr	r2, [pc, #732]	; (801e298 <_dtoa_r+0x618>)
 801dfbc:	f003 030f 	and.w	r3, r3, #15
 801dfc0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 801dfc4:	e9d3 8900 	ldrd	r8, r9, [r3]
 801dfc8:	9b00      	ldr	r3, [sp, #0]
 801dfca:	05d8      	lsls	r0, r3, #23
 801dfcc:	ea4f 1723 	mov.w	r7, r3, asr #4
 801dfd0:	d516      	bpl.n	801e000 <_dtoa_r+0x380>
 801dfd2:	4bb2      	ldr	r3, [pc, #712]	; (801e29c <_dtoa_r+0x61c>)
 801dfd4:	ec51 0b19 	vmov	r0, r1, d9
 801dfd8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 801dfdc:	f7e2 fc40 	bl	8000860 <__aeabi_ddiv>
 801dfe0:	f007 070f 	and.w	r7, r7, #15
 801dfe4:	4682      	mov	sl, r0
 801dfe6:	468b      	mov	fp, r1
 801dfe8:	2503      	movs	r5, #3
 801dfea:	4eac      	ldr	r6, [pc, #688]	; (801e29c <_dtoa_r+0x61c>)
 801dfec:	b957      	cbnz	r7, 801e004 <_dtoa_r+0x384>
 801dfee:	4642      	mov	r2, r8
 801dff0:	464b      	mov	r3, r9
 801dff2:	4650      	mov	r0, sl
 801dff4:	4659      	mov	r1, fp
 801dff6:	f7e2 fc33 	bl	8000860 <__aeabi_ddiv>
 801dffa:	4682      	mov	sl, r0
 801dffc:	468b      	mov	fp, r1
 801dffe:	e028      	b.n	801e052 <_dtoa_r+0x3d2>
 801e000:	2502      	movs	r5, #2
 801e002:	e7f2      	b.n	801dfea <_dtoa_r+0x36a>
 801e004:	07f9      	lsls	r1, r7, #31
 801e006:	d508      	bpl.n	801e01a <_dtoa_r+0x39a>
 801e008:	4640      	mov	r0, r8
 801e00a:	4649      	mov	r1, r9
 801e00c:	e9d6 2300 	ldrd	r2, r3, [r6]
 801e010:	f7e2 fafc 	bl	800060c <__aeabi_dmul>
 801e014:	3501      	adds	r5, #1
 801e016:	4680      	mov	r8, r0
 801e018:	4689      	mov	r9, r1
 801e01a:	107f      	asrs	r7, r7, #1
 801e01c:	3608      	adds	r6, #8
 801e01e:	e7e5      	b.n	801dfec <_dtoa_r+0x36c>
 801e020:	f000 809b 	beq.w	801e15a <_dtoa_r+0x4da>
 801e024:	9b00      	ldr	r3, [sp, #0]
 801e026:	4f9d      	ldr	r7, [pc, #628]	; (801e29c <_dtoa_r+0x61c>)
 801e028:	425e      	negs	r6, r3
 801e02a:	4b9b      	ldr	r3, [pc, #620]	; (801e298 <_dtoa_r+0x618>)
 801e02c:	f006 020f 	and.w	r2, r6, #15
 801e030:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801e034:	e9d3 2300 	ldrd	r2, r3, [r3]
 801e038:	ec51 0b19 	vmov	r0, r1, d9
 801e03c:	f7e2 fae6 	bl	800060c <__aeabi_dmul>
 801e040:	1136      	asrs	r6, r6, #4
 801e042:	4682      	mov	sl, r0
 801e044:	468b      	mov	fp, r1
 801e046:	2300      	movs	r3, #0
 801e048:	2502      	movs	r5, #2
 801e04a:	2e00      	cmp	r6, #0
 801e04c:	d17a      	bne.n	801e144 <_dtoa_r+0x4c4>
 801e04e:	2b00      	cmp	r3, #0
 801e050:	d1d3      	bne.n	801dffa <_dtoa_r+0x37a>
 801e052:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e054:	2b00      	cmp	r3, #0
 801e056:	f000 8082 	beq.w	801e15e <_dtoa_r+0x4de>
 801e05a:	4b91      	ldr	r3, [pc, #580]	; (801e2a0 <_dtoa_r+0x620>)
 801e05c:	2200      	movs	r2, #0
 801e05e:	4650      	mov	r0, sl
 801e060:	4659      	mov	r1, fp
 801e062:	f7e2 fd45 	bl	8000af0 <__aeabi_dcmplt>
 801e066:	2800      	cmp	r0, #0
 801e068:	d079      	beq.n	801e15e <_dtoa_r+0x4de>
 801e06a:	9b03      	ldr	r3, [sp, #12]
 801e06c:	2b00      	cmp	r3, #0
 801e06e:	d076      	beq.n	801e15e <_dtoa_r+0x4de>
 801e070:	9b02      	ldr	r3, [sp, #8]
 801e072:	2b00      	cmp	r3, #0
 801e074:	dd36      	ble.n	801e0e4 <_dtoa_r+0x464>
 801e076:	9b00      	ldr	r3, [sp, #0]
 801e078:	4650      	mov	r0, sl
 801e07a:	4659      	mov	r1, fp
 801e07c:	1e5f      	subs	r7, r3, #1
 801e07e:	2200      	movs	r2, #0
 801e080:	4b88      	ldr	r3, [pc, #544]	; (801e2a4 <_dtoa_r+0x624>)
 801e082:	f7e2 fac3 	bl	800060c <__aeabi_dmul>
 801e086:	9e02      	ldr	r6, [sp, #8]
 801e088:	4682      	mov	sl, r0
 801e08a:	468b      	mov	fp, r1
 801e08c:	3501      	adds	r5, #1
 801e08e:	4628      	mov	r0, r5
 801e090:	f7e2 fa52 	bl	8000538 <__aeabi_i2d>
 801e094:	4652      	mov	r2, sl
 801e096:	465b      	mov	r3, fp
 801e098:	f7e2 fab8 	bl	800060c <__aeabi_dmul>
 801e09c:	4b82      	ldr	r3, [pc, #520]	; (801e2a8 <_dtoa_r+0x628>)
 801e09e:	2200      	movs	r2, #0
 801e0a0:	f7e2 f8fe 	bl	80002a0 <__adddf3>
 801e0a4:	46d0      	mov	r8, sl
 801e0a6:	46d9      	mov	r9, fp
 801e0a8:	4682      	mov	sl, r0
 801e0aa:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 801e0ae:	2e00      	cmp	r6, #0
 801e0b0:	d158      	bne.n	801e164 <_dtoa_r+0x4e4>
 801e0b2:	4b7e      	ldr	r3, [pc, #504]	; (801e2ac <_dtoa_r+0x62c>)
 801e0b4:	2200      	movs	r2, #0
 801e0b6:	4640      	mov	r0, r8
 801e0b8:	4649      	mov	r1, r9
 801e0ba:	f7e2 f8ef 	bl	800029c <__aeabi_dsub>
 801e0be:	4652      	mov	r2, sl
 801e0c0:	465b      	mov	r3, fp
 801e0c2:	4680      	mov	r8, r0
 801e0c4:	4689      	mov	r9, r1
 801e0c6:	f7e2 fd31 	bl	8000b2c <__aeabi_dcmpgt>
 801e0ca:	2800      	cmp	r0, #0
 801e0cc:	f040 8295 	bne.w	801e5fa <_dtoa_r+0x97a>
 801e0d0:	4652      	mov	r2, sl
 801e0d2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 801e0d6:	4640      	mov	r0, r8
 801e0d8:	4649      	mov	r1, r9
 801e0da:	f7e2 fd09 	bl	8000af0 <__aeabi_dcmplt>
 801e0de:	2800      	cmp	r0, #0
 801e0e0:	f040 8289 	bne.w	801e5f6 <_dtoa_r+0x976>
 801e0e4:	ec5b ab19 	vmov	sl, fp, d9
 801e0e8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e0ea:	2b00      	cmp	r3, #0
 801e0ec:	f2c0 8148 	blt.w	801e380 <_dtoa_r+0x700>
 801e0f0:	9a00      	ldr	r2, [sp, #0]
 801e0f2:	2a0e      	cmp	r2, #14
 801e0f4:	f300 8144 	bgt.w	801e380 <_dtoa_r+0x700>
 801e0f8:	4b67      	ldr	r3, [pc, #412]	; (801e298 <_dtoa_r+0x618>)
 801e0fa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 801e0fe:	e9d3 8900 	ldrd	r8, r9, [r3]
 801e102:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e104:	2b00      	cmp	r3, #0
 801e106:	f280 80d5 	bge.w	801e2b4 <_dtoa_r+0x634>
 801e10a:	9b03      	ldr	r3, [sp, #12]
 801e10c:	2b00      	cmp	r3, #0
 801e10e:	f300 80d1 	bgt.w	801e2b4 <_dtoa_r+0x634>
 801e112:	f040 826f 	bne.w	801e5f4 <_dtoa_r+0x974>
 801e116:	4b65      	ldr	r3, [pc, #404]	; (801e2ac <_dtoa_r+0x62c>)
 801e118:	2200      	movs	r2, #0
 801e11a:	4640      	mov	r0, r8
 801e11c:	4649      	mov	r1, r9
 801e11e:	f7e2 fa75 	bl	800060c <__aeabi_dmul>
 801e122:	4652      	mov	r2, sl
 801e124:	465b      	mov	r3, fp
 801e126:	f7e2 fcf7 	bl	8000b18 <__aeabi_dcmpge>
 801e12a:	9e03      	ldr	r6, [sp, #12]
 801e12c:	4637      	mov	r7, r6
 801e12e:	2800      	cmp	r0, #0
 801e130:	f040 8245 	bne.w	801e5be <_dtoa_r+0x93e>
 801e134:	9d01      	ldr	r5, [sp, #4]
 801e136:	2331      	movs	r3, #49	; 0x31
 801e138:	f805 3b01 	strb.w	r3, [r5], #1
 801e13c:	9b00      	ldr	r3, [sp, #0]
 801e13e:	3301      	adds	r3, #1
 801e140:	9300      	str	r3, [sp, #0]
 801e142:	e240      	b.n	801e5c6 <_dtoa_r+0x946>
 801e144:	07f2      	lsls	r2, r6, #31
 801e146:	d505      	bpl.n	801e154 <_dtoa_r+0x4d4>
 801e148:	e9d7 2300 	ldrd	r2, r3, [r7]
 801e14c:	f7e2 fa5e 	bl	800060c <__aeabi_dmul>
 801e150:	3501      	adds	r5, #1
 801e152:	2301      	movs	r3, #1
 801e154:	1076      	asrs	r6, r6, #1
 801e156:	3708      	adds	r7, #8
 801e158:	e777      	b.n	801e04a <_dtoa_r+0x3ca>
 801e15a:	2502      	movs	r5, #2
 801e15c:	e779      	b.n	801e052 <_dtoa_r+0x3d2>
 801e15e:	9f00      	ldr	r7, [sp, #0]
 801e160:	9e03      	ldr	r6, [sp, #12]
 801e162:	e794      	b.n	801e08e <_dtoa_r+0x40e>
 801e164:	9901      	ldr	r1, [sp, #4]
 801e166:	4b4c      	ldr	r3, [pc, #304]	; (801e298 <_dtoa_r+0x618>)
 801e168:	4431      	add	r1, r6
 801e16a:	910d      	str	r1, [sp, #52]	; 0x34
 801e16c:	9908      	ldr	r1, [sp, #32]
 801e16e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 801e172:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 801e176:	2900      	cmp	r1, #0
 801e178:	d043      	beq.n	801e202 <_dtoa_r+0x582>
 801e17a:	494d      	ldr	r1, [pc, #308]	; (801e2b0 <_dtoa_r+0x630>)
 801e17c:	2000      	movs	r0, #0
 801e17e:	f7e2 fb6f 	bl	8000860 <__aeabi_ddiv>
 801e182:	4652      	mov	r2, sl
 801e184:	465b      	mov	r3, fp
 801e186:	f7e2 f889 	bl	800029c <__aeabi_dsub>
 801e18a:	9d01      	ldr	r5, [sp, #4]
 801e18c:	4682      	mov	sl, r0
 801e18e:	468b      	mov	fp, r1
 801e190:	4649      	mov	r1, r9
 801e192:	4640      	mov	r0, r8
 801e194:	f7e2 fcea 	bl	8000b6c <__aeabi_d2iz>
 801e198:	4606      	mov	r6, r0
 801e19a:	f7e2 f9cd 	bl	8000538 <__aeabi_i2d>
 801e19e:	4602      	mov	r2, r0
 801e1a0:	460b      	mov	r3, r1
 801e1a2:	4640      	mov	r0, r8
 801e1a4:	4649      	mov	r1, r9
 801e1a6:	f7e2 f879 	bl	800029c <__aeabi_dsub>
 801e1aa:	3630      	adds	r6, #48	; 0x30
 801e1ac:	f805 6b01 	strb.w	r6, [r5], #1
 801e1b0:	4652      	mov	r2, sl
 801e1b2:	465b      	mov	r3, fp
 801e1b4:	4680      	mov	r8, r0
 801e1b6:	4689      	mov	r9, r1
 801e1b8:	f7e2 fc9a 	bl	8000af0 <__aeabi_dcmplt>
 801e1bc:	2800      	cmp	r0, #0
 801e1be:	d163      	bne.n	801e288 <_dtoa_r+0x608>
 801e1c0:	4642      	mov	r2, r8
 801e1c2:	464b      	mov	r3, r9
 801e1c4:	4936      	ldr	r1, [pc, #216]	; (801e2a0 <_dtoa_r+0x620>)
 801e1c6:	2000      	movs	r0, #0
 801e1c8:	f7e2 f868 	bl	800029c <__aeabi_dsub>
 801e1cc:	4652      	mov	r2, sl
 801e1ce:	465b      	mov	r3, fp
 801e1d0:	f7e2 fc8e 	bl	8000af0 <__aeabi_dcmplt>
 801e1d4:	2800      	cmp	r0, #0
 801e1d6:	f040 80b5 	bne.w	801e344 <_dtoa_r+0x6c4>
 801e1da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e1dc:	429d      	cmp	r5, r3
 801e1de:	d081      	beq.n	801e0e4 <_dtoa_r+0x464>
 801e1e0:	4b30      	ldr	r3, [pc, #192]	; (801e2a4 <_dtoa_r+0x624>)
 801e1e2:	2200      	movs	r2, #0
 801e1e4:	4650      	mov	r0, sl
 801e1e6:	4659      	mov	r1, fp
 801e1e8:	f7e2 fa10 	bl	800060c <__aeabi_dmul>
 801e1ec:	4b2d      	ldr	r3, [pc, #180]	; (801e2a4 <_dtoa_r+0x624>)
 801e1ee:	4682      	mov	sl, r0
 801e1f0:	468b      	mov	fp, r1
 801e1f2:	4640      	mov	r0, r8
 801e1f4:	4649      	mov	r1, r9
 801e1f6:	2200      	movs	r2, #0
 801e1f8:	f7e2 fa08 	bl	800060c <__aeabi_dmul>
 801e1fc:	4680      	mov	r8, r0
 801e1fe:	4689      	mov	r9, r1
 801e200:	e7c6      	b.n	801e190 <_dtoa_r+0x510>
 801e202:	4650      	mov	r0, sl
 801e204:	4659      	mov	r1, fp
 801e206:	f7e2 fa01 	bl	800060c <__aeabi_dmul>
 801e20a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e20c:	9d01      	ldr	r5, [sp, #4]
 801e20e:	930f      	str	r3, [sp, #60]	; 0x3c
 801e210:	4682      	mov	sl, r0
 801e212:	468b      	mov	fp, r1
 801e214:	4649      	mov	r1, r9
 801e216:	4640      	mov	r0, r8
 801e218:	f7e2 fca8 	bl	8000b6c <__aeabi_d2iz>
 801e21c:	4606      	mov	r6, r0
 801e21e:	f7e2 f98b 	bl	8000538 <__aeabi_i2d>
 801e222:	3630      	adds	r6, #48	; 0x30
 801e224:	4602      	mov	r2, r0
 801e226:	460b      	mov	r3, r1
 801e228:	4640      	mov	r0, r8
 801e22a:	4649      	mov	r1, r9
 801e22c:	f7e2 f836 	bl	800029c <__aeabi_dsub>
 801e230:	f805 6b01 	strb.w	r6, [r5], #1
 801e234:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e236:	429d      	cmp	r5, r3
 801e238:	4680      	mov	r8, r0
 801e23a:	4689      	mov	r9, r1
 801e23c:	f04f 0200 	mov.w	r2, #0
 801e240:	d124      	bne.n	801e28c <_dtoa_r+0x60c>
 801e242:	4b1b      	ldr	r3, [pc, #108]	; (801e2b0 <_dtoa_r+0x630>)
 801e244:	4650      	mov	r0, sl
 801e246:	4659      	mov	r1, fp
 801e248:	f7e2 f82a 	bl	80002a0 <__adddf3>
 801e24c:	4602      	mov	r2, r0
 801e24e:	460b      	mov	r3, r1
 801e250:	4640      	mov	r0, r8
 801e252:	4649      	mov	r1, r9
 801e254:	f7e2 fc6a 	bl	8000b2c <__aeabi_dcmpgt>
 801e258:	2800      	cmp	r0, #0
 801e25a:	d173      	bne.n	801e344 <_dtoa_r+0x6c4>
 801e25c:	4652      	mov	r2, sl
 801e25e:	465b      	mov	r3, fp
 801e260:	4913      	ldr	r1, [pc, #76]	; (801e2b0 <_dtoa_r+0x630>)
 801e262:	2000      	movs	r0, #0
 801e264:	f7e2 f81a 	bl	800029c <__aeabi_dsub>
 801e268:	4602      	mov	r2, r0
 801e26a:	460b      	mov	r3, r1
 801e26c:	4640      	mov	r0, r8
 801e26e:	4649      	mov	r1, r9
 801e270:	f7e2 fc3e 	bl	8000af0 <__aeabi_dcmplt>
 801e274:	2800      	cmp	r0, #0
 801e276:	f43f af35 	beq.w	801e0e4 <_dtoa_r+0x464>
 801e27a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e27c:	1e6b      	subs	r3, r5, #1
 801e27e:	930f      	str	r3, [sp, #60]	; 0x3c
 801e280:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 801e284:	2b30      	cmp	r3, #48	; 0x30
 801e286:	d0f8      	beq.n	801e27a <_dtoa_r+0x5fa>
 801e288:	9700      	str	r7, [sp, #0]
 801e28a:	e049      	b.n	801e320 <_dtoa_r+0x6a0>
 801e28c:	4b05      	ldr	r3, [pc, #20]	; (801e2a4 <_dtoa_r+0x624>)
 801e28e:	f7e2 f9bd 	bl	800060c <__aeabi_dmul>
 801e292:	4680      	mov	r8, r0
 801e294:	4689      	mov	r9, r1
 801e296:	e7bd      	b.n	801e214 <_dtoa_r+0x594>
 801e298:	08028718 	.word	0x08028718
 801e29c:	080286f0 	.word	0x080286f0
 801e2a0:	3ff00000 	.word	0x3ff00000
 801e2a4:	40240000 	.word	0x40240000
 801e2a8:	401c0000 	.word	0x401c0000
 801e2ac:	40140000 	.word	0x40140000
 801e2b0:	3fe00000 	.word	0x3fe00000
 801e2b4:	9d01      	ldr	r5, [sp, #4]
 801e2b6:	4656      	mov	r6, sl
 801e2b8:	465f      	mov	r7, fp
 801e2ba:	4642      	mov	r2, r8
 801e2bc:	464b      	mov	r3, r9
 801e2be:	4630      	mov	r0, r6
 801e2c0:	4639      	mov	r1, r7
 801e2c2:	f7e2 facd 	bl	8000860 <__aeabi_ddiv>
 801e2c6:	f7e2 fc51 	bl	8000b6c <__aeabi_d2iz>
 801e2ca:	4682      	mov	sl, r0
 801e2cc:	f7e2 f934 	bl	8000538 <__aeabi_i2d>
 801e2d0:	4642      	mov	r2, r8
 801e2d2:	464b      	mov	r3, r9
 801e2d4:	f7e2 f99a 	bl	800060c <__aeabi_dmul>
 801e2d8:	4602      	mov	r2, r0
 801e2da:	460b      	mov	r3, r1
 801e2dc:	4630      	mov	r0, r6
 801e2de:	4639      	mov	r1, r7
 801e2e0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 801e2e4:	f7e1 ffda 	bl	800029c <__aeabi_dsub>
 801e2e8:	f805 6b01 	strb.w	r6, [r5], #1
 801e2ec:	9e01      	ldr	r6, [sp, #4]
 801e2ee:	9f03      	ldr	r7, [sp, #12]
 801e2f0:	1bae      	subs	r6, r5, r6
 801e2f2:	42b7      	cmp	r7, r6
 801e2f4:	4602      	mov	r2, r0
 801e2f6:	460b      	mov	r3, r1
 801e2f8:	d135      	bne.n	801e366 <_dtoa_r+0x6e6>
 801e2fa:	f7e1 ffd1 	bl	80002a0 <__adddf3>
 801e2fe:	4642      	mov	r2, r8
 801e300:	464b      	mov	r3, r9
 801e302:	4606      	mov	r6, r0
 801e304:	460f      	mov	r7, r1
 801e306:	f7e2 fc11 	bl	8000b2c <__aeabi_dcmpgt>
 801e30a:	b9d0      	cbnz	r0, 801e342 <_dtoa_r+0x6c2>
 801e30c:	4642      	mov	r2, r8
 801e30e:	464b      	mov	r3, r9
 801e310:	4630      	mov	r0, r6
 801e312:	4639      	mov	r1, r7
 801e314:	f7e2 fbe2 	bl	8000adc <__aeabi_dcmpeq>
 801e318:	b110      	cbz	r0, 801e320 <_dtoa_r+0x6a0>
 801e31a:	f01a 0f01 	tst.w	sl, #1
 801e31e:	d110      	bne.n	801e342 <_dtoa_r+0x6c2>
 801e320:	4620      	mov	r0, r4
 801e322:	ee18 1a10 	vmov	r1, s16
 801e326:	f000 fd09 	bl	801ed3c <_Bfree>
 801e32a:	2300      	movs	r3, #0
 801e32c:	9800      	ldr	r0, [sp, #0]
 801e32e:	702b      	strb	r3, [r5, #0]
 801e330:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e332:	3001      	adds	r0, #1
 801e334:	6018      	str	r0, [r3, #0]
 801e336:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e338:	2b00      	cmp	r3, #0
 801e33a:	f43f acf1 	beq.w	801dd20 <_dtoa_r+0xa0>
 801e33e:	601d      	str	r5, [r3, #0]
 801e340:	e4ee      	b.n	801dd20 <_dtoa_r+0xa0>
 801e342:	9f00      	ldr	r7, [sp, #0]
 801e344:	462b      	mov	r3, r5
 801e346:	461d      	mov	r5, r3
 801e348:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801e34c:	2a39      	cmp	r2, #57	; 0x39
 801e34e:	d106      	bne.n	801e35e <_dtoa_r+0x6de>
 801e350:	9a01      	ldr	r2, [sp, #4]
 801e352:	429a      	cmp	r2, r3
 801e354:	d1f7      	bne.n	801e346 <_dtoa_r+0x6c6>
 801e356:	9901      	ldr	r1, [sp, #4]
 801e358:	2230      	movs	r2, #48	; 0x30
 801e35a:	3701      	adds	r7, #1
 801e35c:	700a      	strb	r2, [r1, #0]
 801e35e:	781a      	ldrb	r2, [r3, #0]
 801e360:	3201      	adds	r2, #1
 801e362:	701a      	strb	r2, [r3, #0]
 801e364:	e790      	b.n	801e288 <_dtoa_r+0x608>
 801e366:	4ba6      	ldr	r3, [pc, #664]	; (801e600 <_dtoa_r+0x980>)
 801e368:	2200      	movs	r2, #0
 801e36a:	f7e2 f94f 	bl	800060c <__aeabi_dmul>
 801e36e:	2200      	movs	r2, #0
 801e370:	2300      	movs	r3, #0
 801e372:	4606      	mov	r6, r0
 801e374:	460f      	mov	r7, r1
 801e376:	f7e2 fbb1 	bl	8000adc <__aeabi_dcmpeq>
 801e37a:	2800      	cmp	r0, #0
 801e37c:	d09d      	beq.n	801e2ba <_dtoa_r+0x63a>
 801e37e:	e7cf      	b.n	801e320 <_dtoa_r+0x6a0>
 801e380:	9a08      	ldr	r2, [sp, #32]
 801e382:	2a00      	cmp	r2, #0
 801e384:	f000 80d7 	beq.w	801e536 <_dtoa_r+0x8b6>
 801e388:	9a06      	ldr	r2, [sp, #24]
 801e38a:	2a01      	cmp	r2, #1
 801e38c:	f300 80ba 	bgt.w	801e504 <_dtoa_r+0x884>
 801e390:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e392:	2a00      	cmp	r2, #0
 801e394:	f000 80b2 	beq.w	801e4fc <_dtoa_r+0x87c>
 801e398:	f203 4333 	addw	r3, r3, #1075	; 0x433
 801e39c:	9e07      	ldr	r6, [sp, #28]
 801e39e:	9d04      	ldr	r5, [sp, #16]
 801e3a0:	9a04      	ldr	r2, [sp, #16]
 801e3a2:	441a      	add	r2, r3
 801e3a4:	9204      	str	r2, [sp, #16]
 801e3a6:	9a05      	ldr	r2, [sp, #20]
 801e3a8:	2101      	movs	r1, #1
 801e3aa:	441a      	add	r2, r3
 801e3ac:	4620      	mov	r0, r4
 801e3ae:	9205      	str	r2, [sp, #20]
 801e3b0:	f000 fd7c 	bl	801eeac <__i2b>
 801e3b4:	4607      	mov	r7, r0
 801e3b6:	2d00      	cmp	r5, #0
 801e3b8:	dd0c      	ble.n	801e3d4 <_dtoa_r+0x754>
 801e3ba:	9b05      	ldr	r3, [sp, #20]
 801e3bc:	2b00      	cmp	r3, #0
 801e3be:	dd09      	ble.n	801e3d4 <_dtoa_r+0x754>
 801e3c0:	42ab      	cmp	r3, r5
 801e3c2:	9a04      	ldr	r2, [sp, #16]
 801e3c4:	bfa8      	it	ge
 801e3c6:	462b      	movge	r3, r5
 801e3c8:	1ad2      	subs	r2, r2, r3
 801e3ca:	9204      	str	r2, [sp, #16]
 801e3cc:	9a05      	ldr	r2, [sp, #20]
 801e3ce:	1aed      	subs	r5, r5, r3
 801e3d0:	1ad3      	subs	r3, r2, r3
 801e3d2:	9305      	str	r3, [sp, #20]
 801e3d4:	9b07      	ldr	r3, [sp, #28]
 801e3d6:	b31b      	cbz	r3, 801e420 <_dtoa_r+0x7a0>
 801e3d8:	9b08      	ldr	r3, [sp, #32]
 801e3da:	2b00      	cmp	r3, #0
 801e3dc:	f000 80af 	beq.w	801e53e <_dtoa_r+0x8be>
 801e3e0:	2e00      	cmp	r6, #0
 801e3e2:	dd13      	ble.n	801e40c <_dtoa_r+0x78c>
 801e3e4:	4639      	mov	r1, r7
 801e3e6:	4632      	mov	r2, r6
 801e3e8:	4620      	mov	r0, r4
 801e3ea:	f000 fe1f 	bl	801f02c <__pow5mult>
 801e3ee:	ee18 2a10 	vmov	r2, s16
 801e3f2:	4601      	mov	r1, r0
 801e3f4:	4607      	mov	r7, r0
 801e3f6:	4620      	mov	r0, r4
 801e3f8:	f000 fd6e 	bl	801eed8 <__multiply>
 801e3fc:	ee18 1a10 	vmov	r1, s16
 801e400:	4680      	mov	r8, r0
 801e402:	4620      	mov	r0, r4
 801e404:	f000 fc9a 	bl	801ed3c <_Bfree>
 801e408:	ee08 8a10 	vmov	s16, r8
 801e40c:	9b07      	ldr	r3, [sp, #28]
 801e40e:	1b9a      	subs	r2, r3, r6
 801e410:	d006      	beq.n	801e420 <_dtoa_r+0x7a0>
 801e412:	ee18 1a10 	vmov	r1, s16
 801e416:	4620      	mov	r0, r4
 801e418:	f000 fe08 	bl	801f02c <__pow5mult>
 801e41c:	ee08 0a10 	vmov	s16, r0
 801e420:	2101      	movs	r1, #1
 801e422:	4620      	mov	r0, r4
 801e424:	f000 fd42 	bl	801eeac <__i2b>
 801e428:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e42a:	2b00      	cmp	r3, #0
 801e42c:	4606      	mov	r6, r0
 801e42e:	f340 8088 	ble.w	801e542 <_dtoa_r+0x8c2>
 801e432:	461a      	mov	r2, r3
 801e434:	4601      	mov	r1, r0
 801e436:	4620      	mov	r0, r4
 801e438:	f000 fdf8 	bl	801f02c <__pow5mult>
 801e43c:	9b06      	ldr	r3, [sp, #24]
 801e43e:	2b01      	cmp	r3, #1
 801e440:	4606      	mov	r6, r0
 801e442:	f340 8081 	ble.w	801e548 <_dtoa_r+0x8c8>
 801e446:	f04f 0800 	mov.w	r8, #0
 801e44a:	6933      	ldr	r3, [r6, #16]
 801e44c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801e450:	6918      	ldr	r0, [r3, #16]
 801e452:	f000 fcdb 	bl	801ee0c <__hi0bits>
 801e456:	f1c0 0020 	rsb	r0, r0, #32
 801e45a:	9b05      	ldr	r3, [sp, #20]
 801e45c:	4418      	add	r0, r3
 801e45e:	f010 001f 	ands.w	r0, r0, #31
 801e462:	f000 8092 	beq.w	801e58a <_dtoa_r+0x90a>
 801e466:	f1c0 0320 	rsb	r3, r0, #32
 801e46a:	2b04      	cmp	r3, #4
 801e46c:	f340 808a 	ble.w	801e584 <_dtoa_r+0x904>
 801e470:	f1c0 001c 	rsb	r0, r0, #28
 801e474:	9b04      	ldr	r3, [sp, #16]
 801e476:	4403      	add	r3, r0
 801e478:	9304      	str	r3, [sp, #16]
 801e47a:	9b05      	ldr	r3, [sp, #20]
 801e47c:	4403      	add	r3, r0
 801e47e:	4405      	add	r5, r0
 801e480:	9305      	str	r3, [sp, #20]
 801e482:	9b04      	ldr	r3, [sp, #16]
 801e484:	2b00      	cmp	r3, #0
 801e486:	dd07      	ble.n	801e498 <_dtoa_r+0x818>
 801e488:	ee18 1a10 	vmov	r1, s16
 801e48c:	461a      	mov	r2, r3
 801e48e:	4620      	mov	r0, r4
 801e490:	f000 fe26 	bl	801f0e0 <__lshift>
 801e494:	ee08 0a10 	vmov	s16, r0
 801e498:	9b05      	ldr	r3, [sp, #20]
 801e49a:	2b00      	cmp	r3, #0
 801e49c:	dd05      	ble.n	801e4aa <_dtoa_r+0x82a>
 801e49e:	4631      	mov	r1, r6
 801e4a0:	461a      	mov	r2, r3
 801e4a2:	4620      	mov	r0, r4
 801e4a4:	f000 fe1c 	bl	801f0e0 <__lshift>
 801e4a8:	4606      	mov	r6, r0
 801e4aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e4ac:	2b00      	cmp	r3, #0
 801e4ae:	d06e      	beq.n	801e58e <_dtoa_r+0x90e>
 801e4b0:	ee18 0a10 	vmov	r0, s16
 801e4b4:	4631      	mov	r1, r6
 801e4b6:	f000 fe83 	bl	801f1c0 <__mcmp>
 801e4ba:	2800      	cmp	r0, #0
 801e4bc:	da67      	bge.n	801e58e <_dtoa_r+0x90e>
 801e4be:	9b00      	ldr	r3, [sp, #0]
 801e4c0:	3b01      	subs	r3, #1
 801e4c2:	ee18 1a10 	vmov	r1, s16
 801e4c6:	9300      	str	r3, [sp, #0]
 801e4c8:	220a      	movs	r2, #10
 801e4ca:	2300      	movs	r3, #0
 801e4cc:	4620      	mov	r0, r4
 801e4ce:	f000 fc57 	bl	801ed80 <__multadd>
 801e4d2:	9b08      	ldr	r3, [sp, #32]
 801e4d4:	ee08 0a10 	vmov	s16, r0
 801e4d8:	2b00      	cmp	r3, #0
 801e4da:	f000 81b1 	beq.w	801e840 <_dtoa_r+0xbc0>
 801e4de:	2300      	movs	r3, #0
 801e4e0:	4639      	mov	r1, r7
 801e4e2:	220a      	movs	r2, #10
 801e4e4:	4620      	mov	r0, r4
 801e4e6:	f000 fc4b 	bl	801ed80 <__multadd>
 801e4ea:	9b02      	ldr	r3, [sp, #8]
 801e4ec:	2b00      	cmp	r3, #0
 801e4ee:	4607      	mov	r7, r0
 801e4f0:	f300 808e 	bgt.w	801e610 <_dtoa_r+0x990>
 801e4f4:	9b06      	ldr	r3, [sp, #24]
 801e4f6:	2b02      	cmp	r3, #2
 801e4f8:	dc51      	bgt.n	801e59e <_dtoa_r+0x91e>
 801e4fa:	e089      	b.n	801e610 <_dtoa_r+0x990>
 801e4fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e4fe:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 801e502:	e74b      	b.n	801e39c <_dtoa_r+0x71c>
 801e504:	9b03      	ldr	r3, [sp, #12]
 801e506:	1e5e      	subs	r6, r3, #1
 801e508:	9b07      	ldr	r3, [sp, #28]
 801e50a:	42b3      	cmp	r3, r6
 801e50c:	bfbf      	itttt	lt
 801e50e:	9b07      	ldrlt	r3, [sp, #28]
 801e510:	9607      	strlt	r6, [sp, #28]
 801e512:	1af2      	sublt	r2, r6, r3
 801e514:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 801e516:	bfb6      	itet	lt
 801e518:	189b      	addlt	r3, r3, r2
 801e51a:	1b9e      	subge	r6, r3, r6
 801e51c:	930a      	strlt	r3, [sp, #40]	; 0x28
 801e51e:	9b03      	ldr	r3, [sp, #12]
 801e520:	bfb8      	it	lt
 801e522:	2600      	movlt	r6, #0
 801e524:	2b00      	cmp	r3, #0
 801e526:	bfb7      	itett	lt
 801e528:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 801e52c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 801e530:	1a9d      	sublt	r5, r3, r2
 801e532:	2300      	movlt	r3, #0
 801e534:	e734      	b.n	801e3a0 <_dtoa_r+0x720>
 801e536:	9e07      	ldr	r6, [sp, #28]
 801e538:	9d04      	ldr	r5, [sp, #16]
 801e53a:	9f08      	ldr	r7, [sp, #32]
 801e53c:	e73b      	b.n	801e3b6 <_dtoa_r+0x736>
 801e53e:	9a07      	ldr	r2, [sp, #28]
 801e540:	e767      	b.n	801e412 <_dtoa_r+0x792>
 801e542:	9b06      	ldr	r3, [sp, #24]
 801e544:	2b01      	cmp	r3, #1
 801e546:	dc18      	bgt.n	801e57a <_dtoa_r+0x8fa>
 801e548:	f1ba 0f00 	cmp.w	sl, #0
 801e54c:	d115      	bne.n	801e57a <_dtoa_r+0x8fa>
 801e54e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 801e552:	b993      	cbnz	r3, 801e57a <_dtoa_r+0x8fa>
 801e554:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 801e558:	0d1b      	lsrs	r3, r3, #20
 801e55a:	051b      	lsls	r3, r3, #20
 801e55c:	b183      	cbz	r3, 801e580 <_dtoa_r+0x900>
 801e55e:	9b04      	ldr	r3, [sp, #16]
 801e560:	3301      	adds	r3, #1
 801e562:	9304      	str	r3, [sp, #16]
 801e564:	9b05      	ldr	r3, [sp, #20]
 801e566:	3301      	adds	r3, #1
 801e568:	9305      	str	r3, [sp, #20]
 801e56a:	f04f 0801 	mov.w	r8, #1
 801e56e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e570:	2b00      	cmp	r3, #0
 801e572:	f47f af6a 	bne.w	801e44a <_dtoa_r+0x7ca>
 801e576:	2001      	movs	r0, #1
 801e578:	e76f      	b.n	801e45a <_dtoa_r+0x7da>
 801e57a:	f04f 0800 	mov.w	r8, #0
 801e57e:	e7f6      	b.n	801e56e <_dtoa_r+0x8ee>
 801e580:	4698      	mov	r8, r3
 801e582:	e7f4      	b.n	801e56e <_dtoa_r+0x8ee>
 801e584:	f43f af7d 	beq.w	801e482 <_dtoa_r+0x802>
 801e588:	4618      	mov	r0, r3
 801e58a:	301c      	adds	r0, #28
 801e58c:	e772      	b.n	801e474 <_dtoa_r+0x7f4>
 801e58e:	9b03      	ldr	r3, [sp, #12]
 801e590:	2b00      	cmp	r3, #0
 801e592:	dc37      	bgt.n	801e604 <_dtoa_r+0x984>
 801e594:	9b06      	ldr	r3, [sp, #24]
 801e596:	2b02      	cmp	r3, #2
 801e598:	dd34      	ble.n	801e604 <_dtoa_r+0x984>
 801e59a:	9b03      	ldr	r3, [sp, #12]
 801e59c:	9302      	str	r3, [sp, #8]
 801e59e:	9b02      	ldr	r3, [sp, #8]
 801e5a0:	b96b      	cbnz	r3, 801e5be <_dtoa_r+0x93e>
 801e5a2:	4631      	mov	r1, r6
 801e5a4:	2205      	movs	r2, #5
 801e5a6:	4620      	mov	r0, r4
 801e5a8:	f000 fbea 	bl	801ed80 <__multadd>
 801e5ac:	4601      	mov	r1, r0
 801e5ae:	4606      	mov	r6, r0
 801e5b0:	ee18 0a10 	vmov	r0, s16
 801e5b4:	f000 fe04 	bl	801f1c0 <__mcmp>
 801e5b8:	2800      	cmp	r0, #0
 801e5ba:	f73f adbb 	bgt.w	801e134 <_dtoa_r+0x4b4>
 801e5be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e5c0:	9d01      	ldr	r5, [sp, #4]
 801e5c2:	43db      	mvns	r3, r3
 801e5c4:	9300      	str	r3, [sp, #0]
 801e5c6:	f04f 0800 	mov.w	r8, #0
 801e5ca:	4631      	mov	r1, r6
 801e5cc:	4620      	mov	r0, r4
 801e5ce:	f000 fbb5 	bl	801ed3c <_Bfree>
 801e5d2:	2f00      	cmp	r7, #0
 801e5d4:	f43f aea4 	beq.w	801e320 <_dtoa_r+0x6a0>
 801e5d8:	f1b8 0f00 	cmp.w	r8, #0
 801e5dc:	d005      	beq.n	801e5ea <_dtoa_r+0x96a>
 801e5de:	45b8      	cmp	r8, r7
 801e5e0:	d003      	beq.n	801e5ea <_dtoa_r+0x96a>
 801e5e2:	4641      	mov	r1, r8
 801e5e4:	4620      	mov	r0, r4
 801e5e6:	f000 fba9 	bl	801ed3c <_Bfree>
 801e5ea:	4639      	mov	r1, r7
 801e5ec:	4620      	mov	r0, r4
 801e5ee:	f000 fba5 	bl	801ed3c <_Bfree>
 801e5f2:	e695      	b.n	801e320 <_dtoa_r+0x6a0>
 801e5f4:	2600      	movs	r6, #0
 801e5f6:	4637      	mov	r7, r6
 801e5f8:	e7e1      	b.n	801e5be <_dtoa_r+0x93e>
 801e5fa:	9700      	str	r7, [sp, #0]
 801e5fc:	4637      	mov	r7, r6
 801e5fe:	e599      	b.n	801e134 <_dtoa_r+0x4b4>
 801e600:	40240000 	.word	0x40240000
 801e604:	9b08      	ldr	r3, [sp, #32]
 801e606:	2b00      	cmp	r3, #0
 801e608:	f000 80ca 	beq.w	801e7a0 <_dtoa_r+0xb20>
 801e60c:	9b03      	ldr	r3, [sp, #12]
 801e60e:	9302      	str	r3, [sp, #8]
 801e610:	2d00      	cmp	r5, #0
 801e612:	dd05      	ble.n	801e620 <_dtoa_r+0x9a0>
 801e614:	4639      	mov	r1, r7
 801e616:	462a      	mov	r2, r5
 801e618:	4620      	mov	r0, r4
 801e61a:	f000 fd61 	bl	801f0e0 <__lshift>
 801e61e:	4607      	mov	r7, r0
 801e620:	f1b8 0f00 	cmp.w	r8, #0
 801e624:	d05b      	beq.n	801e6de <_dtoa_r+0xa5e>
 801e626:	6879      	ldr	r1, [r7, #4]
 801e628:	4620      	mov	r0, r4
 801e62a:	f000 fb47 	bl	801ecbc <_Balloc>
 801e62e:	4605      	mov	r5, r0
 801e630:	b928      	cbnz	r0, 801e63e <_dtoa_r+0x9be>
 801e632:	4b87      	ldr	r3, [pc, #540]	; (801e850 <_dtoa_r+0xbd0>)
 801e634:	4602      	mov	r2, r0
 801e636:	f240 21ea 	movw	r1, #746	; 0x2ea
 801e63a:	f7ff bb3b 	b.w	801dcb4 <_dtoa_r+0x34>
 801e63e:	693a      	ldr	r2, [r7, #16]
 801e640:	3202      	adds	r2, #2
 801e642:	0092      	lsls	r2, r2, #2
 801e644:	f107 010c 	add.w	r1, r7, #12
 801e648:	300c      	adds	r0, #12
 801e64a:	f7fe fa23 	bl	801ca94 <memcpy>
 801e64e:	2201      	movs	r2, #1
 801e650:	4629      	mov	r1, r5
 801e652:	4620      	mov	r0, r4
 801e654:	f000 fd44 	bl	801f0e0 <__lshift>
 801e658:	9b01      	ldr	r3, [sp, #4]
 801e65a:	f103 0901 	add.w	r9, r3, #1
 801e65e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801e662:	4413      	add	r3, r2
 801e664:	9305      	str	r3, [sp, #20]
 801e666:	f00a 0301 	and.w	r3, sl, #1
 801e66a:	46b8      	mov	r8, r7
 801e66c:	9304      	str	r3, [sp, #16]
 801e66e:	4607      	mov	r7, r0
 801e670:	4631      	mov	r1, r6
 801e672:	ee18 0a10 	vmov	r0, s16
 801e676:	f7ff fa75 	bl	801db64 <quorem>
 801e67a:	4641      	mov	r1, r8
 801e67c:	9002      	str	r0, [sp, #8]
 801e67e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 801e682:	ee18 0a10 	vmov	r0, s16
 801e686:	f000 fd9b 	bl	801f1c0 <__mcmp>
 801e68a:	463a      	mov	r2, r7
 801e68c:	9003      	str	r0, [sp, #12]
 801e68e:	4631      	mov	r1, r6
 801e690:	4620      	mov	r0, r4
 801e692:	f000 fdb1 	bl	801f1f8 <__mdiff>
 801e696:	68c2      	ldr	r2, [r0, #12]
 801e698:	f109 3bff 	add.w	fp, r9, #4294967295
 801e69c:	4605      	mov	r5, r0
 801e69e:	bb02      	cbnz	r2, 801e6e2 <_dtoa_r+0xa62>
 801e6a0:	4601      	mov	r1, r0
 801e6a2:	ee18 0a10 	vmov	r0, s16
 801e6a6:	f000 fd8b 	bl	801f1c0 <__mcmp>
 801e6aa:	4602      	mov	r2, r0
 801e6ac:	4629      	mov	r1, r5
 801e6ae:	4620      	mov	r0, r4
 801e6b0:	9207      	str	r2, [sp, #28]
 801e6b2:	f000 fb43 	bl	801ed3c <_Bfree>
 801e6b6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801e6ba:	ea43 0102 	orr.w	r1, r3, r2
 801e6be:	9b04      	ldr	r3, [sp, #16]
 801e6c0:	430b      	orrs	r3, r1
 801e6c2:	464d      	mov	r5, r9
 801e6c4:	d10f      	bne.n	801e6e6 <_dtoa_r+0xa66>
 801e6c6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801e6ca:	d02a      	beq.n	801e722 <_dtoa_r+0xaa2>
 801e6cc:	9b03      	ldr	r3, [sp, #12]
 801e6ce:	2b00      	cmp	r3, #0
 801e6d0:	dd02      	ble.n	801e6d8 <_dtoa_r+0xa58>
 801e6d2:	9b02      	ldr	r3, [sp, #8]
 801e6d4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 801e6d8:	f88b a000 	strb.w	sl, [fp]
 801e6dc:	e775      	b.n	801e5ca <_dtoa_r+0x94a>
 801e6de:	4638      	mov	r0, r7
 801e6e0:	e7ba      	b.n	801e658 <_dtoa_r+0x9d8>
 801e6e2:	2201      	movs	r2, #1
 801e6e4:	e7e2      	b.n	801e6ac <_dtoa_r+0xa2c>
 801e6e6:	9b03      	ldr	r3, [sp, #12]
 801e6e8:	2b00      	cmp	r3, #0
 801e6ea:	db04      	blt.n	801e6f6 <_dtoa_r+0xa76>
 801e6ec:	9906      	ldr	r1, [sp, #24]
 801e6ee:	430b      	orrs	r3, r1
 801e6f0:	9904      	ldr	r1, [sp, #16]
 801e6f2:	430b      	orrs	r3, r1
 801e6f4:	d122      	bne.n	801e73c <_dtoa_r+0xabc>
 801e6f6:	2a00      	cmp	r2, #0
 801e6f8:	ddee      	ble.n	801e6d8 <_dtoa_r+0xa58>
 801e6fa:	ee18 1a10 	vmov	r1, s16
 801e6fe:	2201      	movs	r2, #1
 801e700:	4620      	mov	r0, r4
 801e702:	f000 fced 	bl	801f0e0 <__lshift>
 801e706:	4631      	mov	r1, r6
 801e708:	ee08 0a10 	vmov	s16, r0
 801e70c:	f000 fd58 	bl	801f1c0 <__mcmp>
 801e710:	2800      	cmp	r0, #0
 801e712:	dc03      	bgt.n	801e71c <_dtoa_r+0xa9c>
 801e714:	d1e0      	bne.n	801e6d8 <_dtoa_r+0xa58>
 801e716:	f01a 0f01 	tst.w	sl, #1
 801e71a:	d0dd      	beq.n	801e6d8 <_dtoa_r+0xa58>
 801e71c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801e720:	d1d7      	bne.n	801e6d2 <_dtoa_r+0xa52>
 801e722:	2339      	movs	r3, #57	; 0x39
 801e724:	f88b 3000 	strb.w	r3, [fp]
 801e728:	462b      	mov	r3, r5
 801e72a:	461d      	mov	r5, r3
 801e72c:	3b01      	subs	r3, #1
 801e72e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 801e732:	2a39      	cmp	r2, #57	; 0x39
 801e734:	d071      	beq.n	801e81a <_dtoa_r+0xb9a>
 801e736:	3201      	adds	r2, #1
 801e738:	701a      	strb	r2, [r3, #0]
 801e73a:	e746      	b.n	801e5ca <_dtoa_r+0x94a>
 801e73c:	2a00      	cmp	r2, #0
 801e73e:	dd07      	ble.n	801e750 <_dtoa_r+0xad0>
 801e740:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 801e744:	d0ed      	beq.n	801e722 <_dtoa_r+0xaa2>
 801e746:	f10a 0301 	add.w	r3, sl, #1
 801e74a:	f88b 3000 	strb.w	r3, [fp]
 801e74e:	e73c      	b.n	801e5ca <_dtoa_r+0x94a>
 801e750:	9b05      	ldr	r3, [sp, #20]
 801e752:	f809 ac01 	strb.w	sl, [r9, #-1]
 801e756:	4599      	cmp	r9, r3
 801e758:	d047      	beq.n	801e7ea <_dtoa_r+0xb6a>
 801e75a:	ee18 1a10 	vmov	r1, s16
 801e75e:	2300      	movs	r3, #0
 801e760:	220a      	movs	r2, #10
 801e762:	4620      	mov	r0, r4
 801e764:	f000 fb0c 	bl	801ed80 <__multadd>
 801e768:	45b8      	cmp	r8, r7
 801e76a:	ee08 0a10 	vmov	s16, r0
 801e76e:	f04f 0300 	mov.w	r3, #0
 801e772:	f04f 020a 	mov.w	r2, #10
 801e776:	4641      	mov	r1, r8
 801e778:	4620      	mov	r0, r4
 801e77a:	d106      	bne.n	801e78a <_dtoa_r+0xb0a>
 801e77c:	f000 fb00 	bl	801ed80 <__multadd>
 801e780:	4680      	mov	r8, r0
 801e782:	4607      	mov	r7, r0
 801e784:	f109 0901 	add.w	r9, r9, #1
 801e788:	e772      	b.n	801e670 <_dtoa_r+0x9f0>
 801e78a:	f000 faf9 	bl	801ed80 <__multadd>
 801e78e:	4639      	mov	r1, r7
 801e790:	4680      	mov	r8, r0
 801e792:	2300      	movs	r3, #0
 801e794:	220a      	movs	r2, #10
 801e796:	4620      	mov	r0, r4
 801e798:	f000 faf2 	bl	801ed80 <__multadd>
 801e79c:	4607      	mov	r7, r0
 801e79e:	e7f1      	b.n	801e784 <_dtoa_r+0xb04>
 801e7a0:	9b03      	ldr	r3, [sp, #12]
 801e7a2:	9302      	str	r3, [sp, #8]
 801e7a4:	9d01      	ldr	r5, [sp, #4]
 801e7a6:	ee18 0a10 	vmov	r0, s16
 801e7aa:	4631      	mov	r1, r6
 801e7ac:	f7ff f9da 	bl	801db64 <quorem>
 801e7b0:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 801e7b4:	9b01      	ldr	r3, [sp, #4]
 801e7b6:	f805 ab01 	strb.w	sl, [r5], #1
 801e7ba:	1aea      	subs	r2, r5, r3
 801e7bc:	9b02      	ldr	r3, [sp, #8]
 801e7be:	4293      	cmp	r3, r2
 801e7c0:	dd09      	ble.n	801e7d6 <_dtoa_r+0xb56>
 801e7c2:	ee18 1a10 	vmov	r1, s16
 801e7c6:	2300      	movs	r3, #0
 801e7c8:	220a      	movs	r2, #10
 801e7ca:	4620      	mov	r0, r4
 801e7cc:	f000 fad8 	bl	801ed80 <__multadd>
 801e7d0:	ee08 0a10 	vmov	s16, r0
 801e7d4:	e7e7      	b.n	801e7a6 <_dtoa_r+0xb26>
 801e7d6:	9b02      	ldr	r3, [sp, #8]
 801e7d8:	2b00      	cmp	r3, #0
 801e7da:	bfc8      	it	gt
 801e7dc:	461d      	movgt	r5, r3
 801e7de:	9b01      	ldr	r3, [sp, #4]
 801e7e0:	bfd8      	it	le
 801e7e2:	2501      	movle	r5, #1
 801e7e4:	441d      	add	r5, r3
 801e7e6:	f04f 0800 	mov.w	r8, #0
 801e7ea:	ee18 1a10 	vmov	r1, s16
 801e7ee:	2201      	movs	r2, #1
 801e7f0:	4620      	mov	r0, r4
 801e7f2:	f000 fc75 	bl	801f0e0 <__lshift>
 801e7f6:	4631      	mov	r1, r6
 801e7f8:	ee08 0a10 	vmov	s16, r0
 801e7fc:	f000 fce0 	bl	801f1c0 <__mcmp>
 801e800:	2800      	cmp	r0, #0
 801e802:	dc91      	bgt.n	801e728 <_dtoa_r+0xaa8>
 801e804:	d102      	bne.n	801e80c <_dtoa_r+0xb8c>
 801e806:	f01a 0f01 	tst.w	sl, #1
 801e80a:	d18d      	bne.n	801e728 <_dtoa_r+0xaa8>
 801e80c:	462b      	mov	r3, r5
 801e80e:	461d      	mov	r5, r3
 801e810:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 801e814:	2a30      	cmp	r2, #48	; 0x30
 801e816:	d0fa      	beq.n	801e80e <_dtoa_r+0xb8e>
 801e818:	e6d7      	b.n	801e5ca <_dtoa_r+0x94a>
 801e81a:	9a01      	ldr	r2, [sp, #4]
 801e81c:	429a      	cmp	r2, r3
 801e81e:	d184      	bne.n	801e72a <_dtoa_r+0xaaa>
 801e820:	9b00      	ldr	r3, [sp, #0]
 801e822:	3301      	adds	r3, #1
 801e824:	9300      	str	r3, [sp, #0]
 801e826:	2331      	movs	r3, #49	; 0x31
 801e828:	7013      	strb	r3, [r2, #0]
 801e82a:	e6ce      	b.n	801e5ca <_dtoa_r+0x94a>
 801e82c:	4b09      	ldr	r3, [pc, #36]	; (801e854 <_dtoa_r+0xbd4>)
 801e82e:	f7ff ba95 	b.w	801dd5c <_dtoa_r+0xdc>
 801e832:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801e834:	2b00      	cmp	r3, #0
 801e836:	f47f aa6e 	bne.w	801dd16 <_dtoa_r+0x96>
 801e83a:	4b07      	ldr	r3, [pc, #28]	; (801e858 <_dtoa_r+0xbd8>)
 801e83c:	f7ff ba8e 	b.w	801dd5c <_dtoa_r+0xdc>
 801e840:	9b02      	ldr	r3, [sp, #8]
 801e842:	2b00      	cmp	r3, #0
 801e844:	dcae      	bgt.n	801e7a4 <_dtoa_r+0xb24>
 801e846:	9b06      	ldr	r3, [sp, #24]
 801e848:	2b02      	cmp	r3, #2
 801e84a:	f73f aea8 	bgt.w	801e59e <_dtoa_r+0x91e>
 801e84e:	e7a9      	b.n	801e7a4 <_dtoa_r+0xb24>
 801e850:	08028621 	.word	0x08028621
 801e854:	08028551 	.word	0x08028551
 801e858:	080285a2 	.word	0x080285a2

0801e85c <__sflush_r>:
 801e85c:	898a      	ldrh	r2, [r1, #12]
 801e85e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e862:	4605      	mov	r5, r0
 801e864:	0710      	lsls	r0, r2, #28
 801e866:	460c      	mov	r4, r1
 801e868:	d458      	bmi.n	801e91c <__sflush_r+0xc0>
 801e86a:	684b      	ldr	r3, [r1, #4]
 801e86c:	2b00      	cmp	r3, #0
 801e86e:	dc05      	bgt.n	801e87c <__sflush_r+0x20>
 801e870:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801e872:	2b00      	cmp	r3, #0
 801e874:	dc02      	bgt.n	801e87c <__sflush_r+0x20>
 801e876:	2000      	movs	r0, #0
 801e878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e87c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e87e:	2e00      	cmp	r6, #0
 801e880:	d0f9      	beq.n	801e876 <__sflush_r+0x1a>
 801e882:	2300      	movs	r3, #0
 801e884:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801e888:	682f      	ldr	r7, [r5, #0]
 801e88a:	602b      	str	r3, [r5, #0]
 801e88c:	d032      	beq.n	801e8f4 <__sflush_r+0x98>
 801e88e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801e890:	89a3      	ldrh	r3, [r4, #12]
 801e892:	075a      	lsls	r2, r3, #29
 801e894:	d505      	bpl.n	801e8a2 <__sflush_r+0x46>
 801e896:	6863      	ldr	r3, [r4, #4]
 801e898:	1ac0      	subs	r0, r0, r3
 801e89a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801e89c:	b10b      	cbz	r3, 801e8a2 <__sflush_r+0x46>
 801e89e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801e8a0:	1ac0      	subs	r0, r0, r3
 801e8a2:	2300      	movs	r3, #0
 801e8a4:	4602      	mov	r2, r0
 801e8a6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801e8a8:	6a21      	ldr	r1, [r4, #32]
 801e8aa:	4628      	mov	r0, r5
 801e8ac:	47b0      	blx	r6
 801e8ae:	1c43      	adds	r3, r0, #1
 801e8b0:	89a3      	ldrh	r3, [r4, #12]
 801e8b2:	d106      	bne.n	801e8c2 <__sflush_r+0x66>
 801e8b4:	6829      	ldr	r1, [r5, #0]
 801e8b6:	291d      	cmp	r1, #29
 801e8b8:	d82c      	bhi.n	801e914 <__sflush_r+0xb8>
 801e8ba:	4a2a      	ldr	r2, [pc, #168]	; (801e964 <__sflush_r+0x108>)
 801e8bc:	40ca      	lsrs	r2, r1
 801e8be:	07d6      	lsls	r6, r2, #31
 801e8c0:	d528      	bpl.n	801e914 <__sflush_r+0xb8>
 801e8c2:	2200      	movs	r2, #0
 801e8c4:	6062      	str	r2, [r4, #4]
 801e8c6:	04d9      	lsls	r1, r3, #19
 801e8c8:	6922      	ldr	r2, [r4, #16]
 801e8ca:	6022      	str	r2, [r4, #0]
 801e8cc:	d504      	bpl.n	801e8d8 <__sflush_r+0x7c>
 801e8ce:	1c42      	adds	r2, r0, #1
 801e8d0:	d101      	bne.n	801e8d6 <__sflush_r+0x7a>
 801e8d2:	682b      	ldr	r3, [r5, #0]
 801e8d4:	b903      	cbnz	r3, 801e8d8 <__sflush_r+0x7c>
 801e8d6:	6560      	str	r0, [r4, #84]	; 0x54
 801e8d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801e8da:	602f      	str	r7, [r5, #0]
 801e8dc:	2900      	cmp	r1, #0
 801e8de:	d0ca      	beq.n	801e876 <__sflush_r+0x1a>
 801e8e0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801e8e4:	4299      	cmp	r1, r3
 801e8e6:	d002      	beq.n	801e8ee <__sflush_r+0x92>
 801e8e8:	4628      	mov	r0, r5
 801e8ea:	f7fe f903 	bl	801caf4 <_free_r>
 801e8ee:	2000      	movs	r0, #0
 801e8f0:	6360      	str	r0, [r4, #52]	; 0x34
 801e8f2:	e7c1      	b.n	801e878 <__sflush_r+0x1c>
 801e8f4:	6a21      	ldr	r1, [r4, #32]
 801e8f6:	2301      	movs	r3, #1
 801e8f8:	4628      	mov	r0, r5
 801e8fa:	47b0      	blx	r6
 801e8fc:	1c41      	adds	r1, r0, #1
 801e8fe:	d1c7      	bne.n	801e890 <__sflush_r+0x34>
 801e900:	682b      	ldr	r3, [r5, #0]
 801e902:	2b00      	cmp	r3, #0
 801e904:	d0c4      	beq.n	801e890 <__sflush_r+0x34>
 801e906:	2b1d      	cmp	r3, #29
 801e908:	d001      	beq.n	801e90e <__sflush_r+0xb2>
 801e90a:	2b16      	cmp	r3, #22
 801e90c:	d101      	bne.n	801e912 <__sflush_r+0xb6>
 801e90e:	602f      	str	r7, [r5, #0]
 801e910:	e7b1      	b.n	801e876 <__sflush_r+0x1a>
 801e912:	89a3      	ldrh	r3, [r4, #12]
 801e914:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e918:	81a3      	strh	r3, [r4, #12]
 801e91a:	e7ad      	b.n	801e878 <__sflush_r+0x1c>
 801e91c:	690f      	ldr	r7, [r1, #16]
 801e91e:	2f00      	cmp	r7, #0
 801e920:	d0a9      	beq.n	801e876 <__sflush_r+0x1a>
 801e922:	0793      	lsls	r3, r2, #30
 801e924:	680e      	ldr	r6, [r1, #0]
 801e926:	bf08      	it	eq
 801e928:	694b      	ldreq	r3, [r1, #20]
 801e92a:	600f      	str	r7, [r1, #0]
 801e92c:	bf18      	it	ne
 801e92e:	2300      	movne	r3, #0
 801e930:	eba6 0807 	sub.w	r8, r6, r7
 801e934:	608b      	str	r3, [r1, #8]
 801e936:	f1b8 0f00 	cmp.w	r8, #0
 801e93a:	dd9c      	ble.n	801e876 <__sflush_r+0x1a>
 801e93c:	6a21      	ldr	r1, [r4, #32]
 801e93e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801e940:	4643      	mov	r3, r8
 801e942:	463a      	mov	r2, r7
 801e944:	4628      	mov	r0, r5
 801e946:	47b0      	blx	r6
 801e948:	2800      	cmp	r0, #0
 801e94a:	dc06      	bgt.n	801e95a <__sflush_r+0xfe>
 801e94c:	89a3      	ldrh	r3, [r4, #12]
 801e94e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801e952:	81a3      	strh	r3, [r4, #12]
 801e954:	f04f 30ff 	mov.w	r0, #4294967295
 801e958:	e78e      	b.n	801e878 <__sflush_r+0x1c>
 801e95a:	4407      	add	r7, r0
 801e95c:	eba8 0800 	sub.w	r8, r8, r0
 801e960:	e7e9      	b.n	801e936 <__sflush_r+0xda>
 801e962:	bf00      	nop
 801e964:	20400001 	.word	0x20400001

0801e968 <_fflush_r>:
 801e968:	b538      	push	{r3, r4, r5, lr}
 801e96a:	690b      	ldr	r3, [r1, #16]
 801e96c:	4605      	mov	r5, r0
 801e96e:	460c      	mov	r4, r1
 801e970:	b913      	cbnz	r3, 801e978 <_fflush_r+0x10>
 801e972:	2500      	movs	r5, #0
 801e974:	4628      	mov	r0, r5
 801e976:	bd38      	pop	{r3, r4, r5, pc}
 801e978:	b118      	cbz	r0, 801e982 <_fflush_r+0x1a>
 801e97a:	6983      	ldr	r3, [r0, #24]
 801e97c:	b90b      	cbnz	r3, 801e982 <_fflush_r+0x1a>
 801e97e:	f000 f887 	bl	801ea90 <__sinit>
 801e982:	4b14      	ldr	r3, [pc, #80]	; (801e9d4 <_fflush_r+0x6c>)
 801e984:	429c      	cmp	r4, r3
 801e986:	d11b      	bne.n	801e9c0 <_fflush_r+0x58>
 801e988:	686c      	ldr	r4, [r5, #4]
 801e98a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801e98e:	2b00      	cmp	r3, #0
 801e990:	d0ef      	beq.n	801e972 <_fflush_r+0xa>
 801e992:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801e994:	07d0      	lsls	r0, r2, #31
 801e996:	d404      	bmi.n	801e9a2 <_fflush_r+0x3a>
 801e998:	0599      	lsls	r1, r3, #22
 801e99a:	d402      	bmi.n	801e9a2 <_fflush_r+0x3a>
 801e99c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e99e:	f000 f91a 	bl	801ebd6 <__retarget_lock_acquire_recursive>
 801e9a2:	4628      	mov	r0, r5
 801e9a4:	4621      	mov	r1, r4
 801e9a6:	f7ff ff59 	bl	801e85c <__sflush_r>
 801e9aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801e9ac:	07da      	lsls	r2, r3, #31
 801e9ae:	4605      	mov	r5, r0
 801e9b0:	d4e0      	bmi.n	801e974 <_fflush_r+0xc>
 801e9b2:	89a3      	ldrh	r3, [r4, #12]
 801e9b4:	059b      	lsls	r3, r3, #22
 801e9b6:	d4dd      	bmi.n	801e974 <_fflush_r+0xc>
 801e9b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801e9ba:	f000 f90d 	bl	801ebd8 <__retarget_lock_release_recursive>
 801e9be:	e7d9      	b.n	801e974 <_fflush_r+0xc>
 801e9c0:	4b05      	ldr	r3, [pc, #20]	; (801e9d8 <_fflush_r+0x70>)
 801e9c2:	429c      	cmp	r4, r3
 801e9c4:	d101      	bne.n	801e9ca <_fflush_r+0x62>
 801e9c6:	68ac      	ldr	r4, [r5, #8]
 801e9c8:	e7df      	b.n	801e98a <_fflush_r+0x22>
 801e9ca:	4b04      	ldr	r3, [pc, #16]	; (801e9dc <_fflush_r+0x74>)
 801e9cc:	429c      	cmp	r4, r3
 801e9ce:	bf08      	it	eq
 801e9d0:	68ec      	ldreq	r4, [r5, #12]
 801e9d2:	e7da      	b.n	801e98a <_fflush_r+0x22>
 801e9d4:	08028654 	.word	0x08028654
 801e9d8:	08028674 	.word	0x08028674
 801e9dc:	08028634 	.word	0x08028634

0801e9e0 <std>:
 801e9e0:	2300      	movs	r3, #0
 801e9e2:	b510      	push	{r4, lr}
 801e9e4:	4604      	mov	r4, r0
 801e9e6:	e9c0 3300 	strd	r3, r3, [r0]
 801e9ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801e9ee:	6083      	str	r3, [r0, #8]
 801e9f0:	8181      	strh	r1, [r0, #12]
 801e9f2:	6643      	str	r3, [r0, #100]	; 0x64
 801e9f4:	81c2      	strh	r2, [r0, #14]
 801e9f6:	6183      	str	r3, [r0, #24]
 801e9f8:	4619      	mov	r1, r3
 801e9fa:	2208      	movs	r2, #8
 801e9fc:	305c      	adds	r0, #92	; 0x5c
 801e9fe:	f7fe f871 	bl	801cae4 <memset>
 801ea02:	4b05      	ldr	r3, [pc, #20]	; (801ea18 <std+0x38>)
 801ea04:	6263      	str	r3, [r4, #36]	; 0x24
 801ea06:	4b05      	ldr	r3, [pc, #20]	; (801ea1c <std+0x3c>)
 801ea08:	62a3      	str	r3, [r4, #40]	; 0x28
 801ea0a:	4b05      	ldr	r3, [pc, #20]	; (801ea20 <std+0x40>)
 801ea0c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801ea0e:	4b05      	ldr	r3, [pc, #20]	; (801ea24 <std+0x44>)
 801ea10:	6224      	str	r4, [r4, #32]
 801ea12:	6323      	str	r3, [r4, #48]	; 0x30
 801ea14:	bd10      	pop	{r4, pc}
 801ea16:	bf00      	nop
 801ea18:	0801f3f1 	.word	0x0801f3f1
 801ea1c:	0801f413 	.word	0x0801f413
 801ea20:	0801f44b 	.word	0x0801f44b
 801ea24:	0801f46f 	.word	0x0801f46f

0801ea28 <_cleanup_r>:
 801ea28:	4901      	ldr	r1, [pc, #4]	; (801ea30 <_cleanup_r+0x8>)
 801ea2a:	f000 b8af 	b.w	801eb8c <_fwalk_reent>
 801ea2e:	bf00      	nop
 801ea30:	0801e969 	.word	0x0801e969

0801ea34 <__sfmoreglue>:
 801ea34:	b570      	push	{r4, r5, r6, lr}
 801ea36:	2268      	movs	r2, #104	; 0x68
 801ea38:	1e4d      	subs	r5, r1, #1
 801ea3a:	4355      	muls	r5, r2
 801ea3c:	460e      	mov	r6, r1
 801ea3e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801ea42:	f7fe f8c3 	bl	801cbcc <_malloc_r>
 801ea46:	4604      	mov	r4, r0
 801ea48:	b140      	cbz	r0, 801ea5c <__sfmoreglue+0x28>
 801ea4a:	2100      	movs	r1, #0
 801ea4c:	e9c0 1600 	strd	r1, r6, [r0]
 801ea50:	300c      	adds	r0, #12
 801ea52:	60a0      	str	r0, [r4, #8]
 801ea54:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801ea58:	f7fe f844 	bl	801cae4 <memset>
 801ea5c:	4620      	mov	r0, r4
 801ea5e:	bd70      	pop	{r4, r5, r6, pc}

0801ea60 <__sfp_lock_acquire>:
 801ea60:	4801      	ldr	r0, [pc, #4]	; (801ea68 <__sfp_lock_acquire+0x8>)
 801ea62:	f000 b8b8 	b.w	801ebd6 <__retarget_lock_acquire_recursive>
 801ea66:	bf00      	nop
 801ea68:	20011299 	.word	0x20011299

0801ea6c <__sfp_lock_release>:
 801ea6c:	4801      	ldr	r0, [pc, #4]	; (801ea74 <__sfp_lock_release+0x8>)
 801ea6e:	f000 b8b3 	b.w	801ebd8 <__retarget_lock_release_recursive>
 801ea72:	bf00      	nop
 801ea74:	20011299 	.word	0x20011299

0801ea78 <__sinit_lock_acquire>:
 801ea78:	4801      	ldr	r0, [pc, #4]	; (801ea80 <__sinit_lock_acquire+0x8>)
 801ea7a:	f000 b8ac 	b.w	801ebd6 <__retarget_lock_acquire_recursive>
 801ea7e:	bf00      	nop
 801ea80:	2001129a 	.word	0x2001129a

0801ea84 <__sinit_lock_release>:
 801ea84:	4801      	ldr	r0, [pc, #4]	; (801ea8c <__sinit_lock_release+0x8>)
 801ea86:	f000 b8a7 	b.w	801ebd8 <__retarget_lock_release_recursive>
 801ea8a:	bf00      	nop
 801ea8c:	2001129a 	.word	0x2001129a

0801ea90 <__sinit>:
 801ea90:	b510      	push	{r4, lr}
 801ea92:	4604      	mov	r4, r0
 801ea94:	f7ff fff0 	bl	801ea78 <__sinit_lock_acquire>
 801ea98:	69a3      	ldr	r3, [r4, #24]
 801ea9a:	b11b      	cbz	r3, 801eaa4 <__sinit+0x14>
 801ea9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801eaa0:	f7ff bff0 	b.w	801ea84 <__sinit_lock_release>
 801eaa4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801eaa8:	6523      	str	r3, [r4, #80]	; 0x50
 801eaaa:	4b13      	ldr	r3, [pc, #76]	; (801eaf8 <__sinit+0x68>)
 801eaac:	4a13      	ldr	r2, [pc, #76]	; (801eafc <__sinit+0x6c>)
 801eaae:	681b      	ldr	r3, [r3, #0]
 801eab0:	62a2      	str	r2, [r4, #40]	; 0x28
 801eab2:	42a3      	cmp	r3, r4
 801eab4:	bf04      	itt	eq
 801eab6:	2301      	moveq	r3, #1
 801eab8:	61a3      	streq	r3, [r4, #24]
 801eaba:	4620      	mov	r0, r4
 801eabc:	f000 f820 	bl	801eb00 <__sfp>
 801eac0:	6060      	str	r0, [r4, #4]
 801eac2:	4620      	mov	r0, r4
 801eac4:	f000 f81c 	bl	801eb00 <__sfp>
 801eac8:	60a0      	str	r0, [r4, #8]
 801eaca:	4620      	mov	r0, r4
 801eacc:	f000 f818 	bl	801eb00 <__sfp>
 801ead0:	2200      	movs	r2, #0
 801ead2:	60e0      	str	r0, [r4, #12]
 801ead4:	2104      	movs	r1, #4
 801ead6:	6860      	ldr	r0, [r4, #4]
 801ead8:	f7ff ff82 	bl	801e9e0 <std>
 801eadc:	68a0      	ldr	r0, [r4, #8]
 801eade:	2201      	movs	r2, #1
 801eae0:	2109      	movs	r1, #9
 801eae2:	f7ff ff7d 	bl	801e9e0 <std>
 801eae6:	68e0      	ldr	r0, [r4, #12]
 801eae8:	2202      	movs	r2, #2
 801eaea:	2112      	movs	r1, #18
 801eaec:	f7ff ff78 	bl	801e9e0 <std>
 801eaf0:	2301      	movs	r3, #1
 801eaf2:	61a3      	str	r3, [r4, #24]
 801eaf4:	e7d2      	b.n	801ea9c <__sinit+0xc>
 801eaf6:	bf00      	nop
 801eaf8:	0802852c 	.word	0x0802852c
 801eafc:	0801ea29 	.word	0x0801ea29

0801eb00 <__sfp>:
 801eb00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801eb02:	4607      	mov	r7, r0
 801eb04:	f7ff ffac 	bl	801ea60 <__sfp_lock_acquire>
 801eb08:	4b1e      	ldr	r3, [pc, #120]	; (801eb84 <__sfp+0x84>)
 801eb0a:	681e      	ldr	r6, [r3, #0]
 801eb0c:	69b3      	ldr	r3, [r6, #24]
 801eb0e:	b913      	cbnz	r3, 801eb16 <__sfp+0x16>
 801eb10:	4630      	mov	r0, r6
 801eb12:	f7ff ffbd 	bl	801ea90 <__sinit>
 801eb16:	3648      	adds	r6, #72	; 0x48
 801eb18:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801eb1c:	3b01      	subs	r3, #1
 801eb1e:	d503      	bpl.n	801eb28 <__sfp+0x28>
 801eb20:	6833      	ldr	r3, [r6, #0]
 801eb22:	b30b      	cbz	r3, 801eb68 <__sfp+0x68>
 801eb24:	6836      	ldr	r6, [r6, #0]
 801eb26:	e7f7      	b.n	801eb18 <__sfp+0x18>
 801eb28:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801eb2c:	b9d5      	cbnz	r5, 801eb64 <__sfp+0x64>
 801eb2e:	4b16      	ldr	r3, [pc, #88]	; (801eb88 <__sfp+0x88>)
 801eb30:	60e3      	str	r3, [r4, #12]
 801eb32:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801eb36:	6665      	str	r5, [r4, #100]	; 0x64
 801eb38:	f000 f84c 	bl	801ebd4 <__retarget_lock_init_recursive>
 801eb3c:	f7ff ff96 	bl	801ea6c <__sfp_lock_release>
 801eb40:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801eb44:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801eb48:	6025      	str	r5, [r4, #0]
 801eb4a:	61a5      	str	r5, [r4, #24]
 801eb4c:	2208      	movs	r2, #8
 801eb4e:	4629      	mov	r1, r5
 801eb50:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801eb54:	f7fd ffc6 	bl	801cae4 <memset>
 801eb58:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801eb5c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801eb60:	4620      	mov	r0, r4
 801eb62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801eb64:	3468      	adds	r4, #104	; 0x68
 801eb66:	e7d9      	b.n	801eb1c <__sfp+0x1c>
 801eb68:	2104      	movs	r1, #4
 801eb6a:	4638      	mov	r0, r7
 801eb6c:	f7ff ff62 	bl	801ea34 <__sfmoreglue>
 801eb70:	4604      	mov	r4, r0
 801eb72:	6030      	str	r0, [r6, #0]
 801eb74:	2800      	cmp	r0, #0
 801eb76:	d1d5      	bne.n	801eb24 <__sfp+0x24>
 801eb78:	f7ff ff78 	bl	801ea6c <__sfp_lock_release>
 801eb7c:	230c      	movs	r3, #12
 801eb7e:	603b      	str	r3, [r7, #0]
 801eb80:	e7ee      	b.n	801eb60 <__sfp+0x60>
 801eb82:	bf00      	nop
 801eb84:	0802852c 	.word	0x0802852c
 801eb88:	ffff0001 	.word	0xffff0001

0801eb8c <_fwalk_reent>:
 801eb8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801eb90:	4606      	mov	r6, r0
 801eb92:	4688      	mov	r8, r1
 801eb94:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801eb98:	2700      	movs	r7, #0
 801eb9a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801eb9e:	f1b9 0901 	subs.w	r9, r9, #1
 801eba2:	d505      	bpl.n	801ebb0 <_fwalk_reent+0x24>
 801eba4:	6824      	ldr	r4, [r4, #0]
 801eba6:	2c00      	cmp	r4, #0
 801eba8:	d1f7      	bne.n	801eb9a <_fwalk_reent+0xe>
 801ebaa:	4638      	mov	r0, r7
 801ebac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801ebb0:	89ab      	ldrh	r3, [r5, #12]
 801ebb2:	2b01      	cmp	r3, #1
 801ebb4:	d907      	bls.n	801ebc6 <_fwalk_reent+0x3a>
 801ebb6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801ebba:	3301      	adds	r3, #1
 801ebbc:	d003      	beq.n	801ebc6 <_fwalk_reent+0x3a>
 801ebbe:	4629      	mov	r1, r5
 801ebc0:	4630      	mov	r0, r6
 801ebc2:	47c0      	blx	r8
 801ebc4:	4307      	orrs	r7, r0
 801ebc6:	3568      	adds	r5, #104	; 0x68
 801ebc8:	e7e9      	b.n	801eb9e <_fwalk_reent+0x12>
	...

0801ebcc <_localeconv_r>:
 801ebcc:	4800      	ldr	r0, [pc, #0]	; (801ebd0 <_localeconv_r+0x4>)
 801ebce:	4770      	bx	lr
 801ebd0:	20000168 	.word	0x20000168

0801ebd4 <__retarget_lock_init_recursive>:
 801ebd4:	4770      	bx	lr

0801ebd6 <__retarget_lock_acquire_recursive>:
 801ebd6:	4770      	bx	lr

0801ebd8 <__retarget_lock_release_recursive>:
 801ebd8:	4770      	bx	lr

0801ebda <__swhatbuf_r>:
 801ebda:	b570      	push	{r4, r5, r6, lr}
 801ebdc:	460e      	mov	r6, r1
 801ebde:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801ebe2:	2900      	cmp	r1, #0
 801ebe4:	b096      	sub	sp, #88	; 0x58
 801ebe6:	4614      	mov	r4, r2
 801ebe8:	461d      	mov	r5, r3
 801ebea:	da08      	bge.n	801ebfe <__swhatbuf_r+0x24>
 801ebec:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801ebf0:	2200      	movs	r2, #0
 801ebf2:	602a      	str	r2, [r5, #0]
 801ebf4:	061a      	lsls	r2, r3, #24
 801ebf6:	d410      	bmi.n	801ec1a <__swhatbuf_r+0x40>
 801ebf8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ebfc:	e00e      	b.n	801ec1c <__swhatbuf_r+0x42>
 801ebfe:	466a      	mov	r2, sp
 801ec00:	f000 fc4a 	bl	801f498 <_fstat_r>
 801ec04:	2800      	cmp	r0, #0
 801ec06:	dbf1      	blt.n	801ebec <__swhatbuf_r+0x12>
 801ec08:	9a01      	ldr	r2, [sp, #4]
 801ec0a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801ec0e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801ec12:	425a      	negs	r2, r3
 801ec14:	415a      	adcs	r2, r3
 801ec16:	602a      	str	r2, [r5, #0]
 801ec18:	e7ee      	b.n	801ebf8 <__swhatbuf_r+0x1e>
 801ec1a:	2340      	movs	r3, #64	; 0x40
 801ec1c:	2000      	movs	r0, #0
 801ec1e:	6023      	str	r3, [r4, #0]
 801ec20:	b016      	add	sp, #88	; 0x58
 801ec22:	bd70      	pop	{r4, r5, r6, pc}

0801ec24 <__smakebuf_r>:
 801ec24:	898b      	ldrh	r3, [r1, #12]
 801ec26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801ec28:	079d      	lsls	r5, r3, #30
 801ec2a:	4606      	mov	r6, r0
 801ec2c:	460c      	mov	r4, r1
 801ec2e:	d507      	bpl.n	801ec40 <__smakebuf_r+0x1c>
 801ec30:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801ec34:	6023      	str	r3, [r4, #0]
 801ec36:	6123      	str	r3, [r4, #16]
 801ec38:	2301      	movs	r3, #1
 801ec3a:	6163      	str	r3, [r4, #20]
 801ec3c:	b002      	add	sp, #8
 801ec3e:	bd70      	pop	{r4, r5, r6, pc}
 801ec40:	ab01      	add	r3, sp, #4
 801ec42:	466a      	mov	r2, sp
 801ec44:	f7ff ffc9 	bl	801ebda <__swhatbuf_r>
 801ec48:	9900      	ldr	r1, [sp, #0]
 801ec4a:	4605      	mov	r5, r0
 801ec4c:	4630      	mov	r0, r6
 801ec4e:	f7fd ffbd 	bl	801cbcc <_malloc_r>
 801ec52:	b948      	cbnz	r0, 801ec68 <__smakebuf_r+0x44>
 801ec54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801ec58:	059a      	lsls	r2, r3, #22
 801ec5a:	d4ef      	bmi.n	801ec3c <__smakebuf_r+0x18>
 801ec5c:	f023 0303 	bic.w	r3, r3, #3
 801ec60:	f043 0302 	orr.w	r3, r3, #2
 801ec64:	81a3      	strh	r3, [r4, #12]
 801ec66:	e7e3      	b.n	801ec30 <__smakebuf_r+0xc>
 801ec68:	4b0d      	ldr	r3, [pc, #52]	; (801eca0 <__smakebuf_r+0x7c>)
 801ec6a:	62b3      	str	r3, [r6, #40]	; 0x28
 801ec6c:	89a3      	ldrh	r3, [r4, #12]
 801ec6e:	6020      	str	r0, [r4, #0]
 801ec70:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801ec74:	81a3      	strh	r3, [r4, #12]
 801ec76:	9b00      	ldr	r3, [sp, #0]
 801ec78:	6163      	str	r3, [r4, #20]
 801ec7a:	9b01      	ldr	r3, [sp, #4]
 801ec7c:	6120      	str	r0, [r4, #16]
 801ec7e:	b15b      	cbz	r3, 801ec98 <__smakebuf_r+0x74>
 801ec80:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801ec84:	4630      	mov	r0, r6
 801ec86:	f000 fc19 	bl	801f4bc <_isatty_r>
 801ec8a:	b128      	cbz	r0, 801ec98 <__smakebuf_r+0x74>
 801ec8c:	89a3      	ldrh	r3, [r4, #12]
 801ec8e:	f023 0303 	bic.w	r3, r3, #3
 801ec92:	f043 0301 	orr.w	r3, r3, #1
 801ec96:	81a3      	strh	r3, [r4, #12]
 801ec98:	89a0      	ldrh	r0, [r4, #12]
 801ec9a:	4305      	orrs	r5, r0
 801ec9c:	81a5      	strh	r5, [r4, #12]
 801ec9e:	e7cd      	b.n	801ec3c <__smakebuf_r+0x18>
 801eca0:	0801ea29 	.word	0x0801ea29

0801eca4 <__malloc_lock>:
 801eca4:	4801      	ldr	r0, [pc, #4]	; (801ecac <__malloc_lock+0x8>)
 801eca6:	f7ff bf96 	b.w	801ebd6 <__retarget_lock_acquire_recursive>
 801ecaa:	bf00      	nop
 801ecac:	20011298 	.word	0x20011298

0801ecb0 <__malloc_unlock>:
 801ecb0:	4801      	ldr	r0, [pc, #4]	; (801ecb8 <__malloc_unlock+0x8>)
 801ecb2:	f7ff bf91 	b.w	801ebd8 <__retarget_lock_release_recursive>
 801ecb6:	bf00      	nop
 801ecb8:	20011298 	.word	0x20011298

0801ecbc <_Balloc>:
 801ecbc:	b570      	push	{r4, r5, r6, lr}
 801ecbe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801ecc0:	4604      	mov	r4, r0
 801ecc2:	460d      	mov	r5, r1
 801ecc4:	b976      	cbnz	r6, 801ece4 <_Balloc+0x28>
 801ecc6:	2010      	movs	r0, #16
 801ecc8:	f7fd fed4 	bl	801ca74 <malloc>
 801eccc:	4602      	mov	r2, r0
 801ecce:	6260      	str	r0, [r4, #36]	; 0x24
 801ecd0:	b920      	cbnz	r0, 801ecdc <_Balloc+0x20>
 801ecd2:	4b18      	ldr	r3, [pc, #96]	; (801ed34 <_Balloc+0x78>)
 801ecd4:	4818      	ldr	r0, [pc, #96]	; (801ed38 <_Balloc+0x7c>)
 801ecd6:	2166      	movs	r1, #102	; 0x66
 801ecd8:	f7fd fe72 	bl	801c9c0 <__assert_func>
 801ecdc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801ece0:	6006      	str	r6, [r0, #0]
 801ece2:	60c6      	str	r6, [r0, #12]
 801ece4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 801ece6:	68f3      	ldr	r3, [r6, #12]
 801ece8:	b183      	cbz	r3, 801ed0c <_Balloc+0x50>
 801ecea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801ecec:	68db      	ldr	r3, [r3, #12]
 801ecee:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 801ecf2:	b9b8      	cbnz	r0, 801ed24 <_Balloc+0x68>
 801ecf4:	2101      	movs	r1, #1
 801ecf6:	fa01 f605 	lsl.w	r6, r1, r5
 801ecfa:	1d72      	adds	r2, r6, #5
 801ecfc:	0092      	lsls	r2, r2, #2
 801ecfe:	4620      	mov	r0, r4
 801ed00:	f000 fb60 	bl	801f3c4 <_calloc_r>
 801ed04:	b160      	cbz	r0, 801ed20 <_Balloc+0x64>
 801ed06:	e9c0 5601 	strd	r5, r6, [r0, #4]
 801ed0a:	e00e      	b.n	801ed2a <_Balloc+0x6e>
 801ed0c:	2221      	movs	r2, #33	; 0x21
 801ed0e:	2104      	movs	r1, #4
 801ed10:	4620      	mov	r0, r4
 801ed12:	f000 fb57 	bl	801f3c4 <_calloc_r>
 801ed16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801ed18:	60f0      	str	r0, [r6, #12]
 801ed1a:	68db      	ldr	r3, [r3, #12]
 801ed1c:	2b00      	cmp	r3, #0
 801ed1e:	d1e4      	bne.n	801ecea <_Balloc+0x2e>
 801ed20:	2000      	movs	r0, #0
 801ed22:	bd70      	pop	{r4, r5, r6, pc}
 801ed24:	6802      	ldr	r2, [r0, #0]
 801ed26:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 801ed2a:	2300      	movs	r3, #0
 801ed2c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801ed30:	e7f7      	b.n	801ed22 <_Balloc+0x66>
 801ed32:	bf00      	nop
 801ed34:	080285af 	.word	0x080285af
 801ed38:	08028694 	.word	0x08028694

0801ed3c <_Bfree>:
 801ed3c:	b570      	push	{r4, r5, r6, lr}
 801ed3e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 801ed40:	4605      	mov	r5, r0
 801ed42:	460c      	mov	r4, r1
 801ed44:	b976      	cbnz	r6, 801ed64 <_Bfree+0x28>
 801ed46:	2010      	movs	r0, #16
 801ed48:	f7fd fe94 	bl	801ca74 <malloc>
 801ed4c:	4602      	mov	r2, r0
 801ed4e:	6268      	str	r0, [r5, #36]	; 0x24
 801ed50:	b920      	cbnz	r0, 801ed5c <_Bfree+0x20>
 801ed52:	4b09      	ldr	r3, [pc, #36]	; (801ed78 <_Bfree+0x3c>)
 801ed54:	4809      	ldr	r0, [pc, #36]	; (801ed7c <_Bfree+0x40>)
 801ed56:	218a      	movs	r1, #138	; 0x8a
 801ed58:	f7fd fe32 	bl	801c9c0 <__assert_func>
 801ed5c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 801ed60:	6006      	str	r6, [r0, #0]
 801ed62:	60c6      	str	r6, [r0, #12]
 801ed64:	b13c      	cbz	r4, 801ed76 <_Bfree+0x3a>
 801ed66:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 801ed68:	6862      	ldr	r2, [r4, #4]
 801ed6a:	68db      	ldr	r3, [r3, #12]
 801ed6c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ed70:	6021      	str	r1, [r4, #0]
 801ed72:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 801ed76:	bd70      	pop	{r4, r5, r6, pc}
 801ed78:	080285af 	.word	0x080285af
 801ed7c:	08028694 	.word	0x08028694

0801ed80 <__multadd>:
 801ed80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801ed84:	690d      	ldr	r5, [r1, #16]
 801ed86:	4607      	mov	r7, r0
 801ed88:	460c      	mov	r4, r1
 801ed8a:	461e      	mov	r6, r3
 801ed8c:	f101 0c14 	add.w	ip, r1, #20
 801ed90:	2000      	movs	r0, #0
 801ed92:	f8dc 3000 	ldr.w	r3, [ip]
 801ed96:	b299      	uxth	r1, r3
 801ed98:	fb02 6101 	mla	r1, r2, r1, r6
 801ed9c:	0c1e      	lsrs	r6, r3, #16
 801ed9e:	0c0b      	lsrs	r3, r1, #16
 801eda0:	fb02 3306 	mla	r3, r2, r6, r3
 801eda4:	b289      	uxth	r1, r1
 801eda6:	3001      	adds	r0, #1
 801eda8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 801edac:	4285      	cmp	r5, r0
 801edae:	f84c 1b04 	str.w	r1, [ip], #4
 801edb2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 801edb6:	dcec      	bgt.n	801ed92 <__multadd+0x12>
 801edb8:	b30e      	cbz	r6, 801edfe <__multadd+0x7e>
 801edba:	68a3      	ldr	r3, [r4, #8]
 801edbc:	42ab      	cmp	r3, r5
 801edbe:	dc19      	bgt.n	801edf4 <__multadd+0x74>
 801edc0:	6861      	ldr	r1, [r4, #4]
 801edc2:	4638      	mov	r0, r7
 801edc4:	3101      	adds	r1, #1
 801edc6:	f7ff ff79 	bl	801ecbc <_Balloc>
 801edca:	4680      	mov	r8, r0
 801edcc:	b928      	cbnz	r0, 801edda <__multadd+0x5a>
 801edce:	4602      	mov	r2, r0
 801edd0:	4b0c      	ldr	r3, [pc, #48]	; (801ee04 <__multadd+0x84>)
 801edd2:	480d      	ldr	r0, [pc, #52]	; (801ee08 <__multadd+0x88>)
 801edd4:	21b5      	movs	r1, #181	; 0xb5
 801edd6:	f7fd fdf3 	bl	801c9c0 <__assert_func>
 801edda:	6922      	ldr	r2, [r4, #16]
 801eddc:	3202      	adds	r2, #2
 801edde:	f104 010c 	add.w	r1, r4, #12
 801ede2:	0092      	lsls	r2, r2, #2
 801ede4:	300c      	adds	r0, #12
 801ede6:	f7fd fe55 	bl	801ca94 <memcpy>
 801edea:	4621      	mov	r1, r4
 801edec:	4638      	mov	r0, r7
 801edee:	f7ff ffa5 	bl	801ed3c <_Bfree>
 801edf2:	4644      	mov	r4, r8
 801edf4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801edf8:	3501      	adds	r5, #1
 801edfa:	615e      	str	r6, [r3, #20]
 801edfc:	6125      	str	r5, [r4, #16]
 801edfe:	4620      	mov	r0, r4
 801ee00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ee04:	08028621 	.word	0x08028621
 801ee08:	08028694 	.word	0x08028694

0801ee0c <__hi0bits>:
 801ee0c:	0c03      	lsrs	r3, r0, #16
 801ee0e:	041b      	lsls	r3, r3, #16
 801ee10:	b9d3      	cbnz	r3, 801ee48 <__hi0bits+0x3c>
 801ee12:	0400      	lsls	r0, r0, #16
 801ee14:	2310      	movs	r3, #16
 801ee16:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 801ee1a:	bf04      	itt	eq
 801ee1c:	0200      	lsleq	r0, r0, #8
 801ee1e:	3308      	addeq	r3, #8
 801ee20:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 801ee24:	bf04      	itt	eq
 801ee26:	0100      	lsleq	r0, r0, #4
 801ee28:	3304      	addeq	r3, #4
 801ee2a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 801ee2e:	bf04      	itt	eq
 801ee30:	0080      	lsleq	r0, r0, #2
 801ee32:	3302      	addeq	r3, #2
 801ee34:	2800      	cmp	r0, #0
 801ee36:	db05      	blt.n	801ee44 <__hi0bits+0x38>
 801ee38:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 801ee3c:	f103 0301 	add.w	r3, r3, #1
 801ee40:	bf08      	it	eq
 801ee42:	2320      	moveq	r3, #32
 801ee44:	4618      	mov	r0, r3
 801ee46:	4770      	bx	lr
 801ee48:	2300      	movs	r3, #0
 801ee4a:	e7e4      	b.n	801ee16 <__hi0bits+0xa>

0801ee4c <__lo0bits>:
 801ee4c:	6803      	ldr	r3, [r0, #0]
 801ee4e:	f013 0207 	ands.w	r2, r3, #7
 801ee52:	4601      	mov	r1, r0
 801ee54:	d00b      	beq.n	801ee6e <__lo0bits+0x22>
 801ee56:	07da      	lsls	r2, r3, #31
 801ee58:	d423      	bmi.n	801eea2 <__lo0bits+0x56>
 801ee5a:	0798      	lsls	r0, r3, #30
 801ee5c:	bf49      	itett	mi
 801ee5e:	085b      	lsrmi	r3, r3, #1
 801ee60:	089b      	lsrpl	r3, r3, #2
 801ee62:	2001      	movmi	r0, #1
 801ee64:	600b      	strmi	r3, [r1, #0]
 801ee66:	bf5c      	itt	pl
 801ee68:	600b      	strpl	r3, [r1, #0]
 801ee6a:	2002      	movpl	r0, #2
 801ee6c:	4770      	bx	lr
 801ee6e:	b298      	uxth	r0, r3
 801ee70:	b9a8      	cbnz	r0, 801ee9e <__lo0bits+0x52>
 801ee72:	0c1b      	lsrs	r3, r3, #16
 801ee74:	2010      	movs	r0, #16
 801ee76:	b2da      	uxtb	r2, r3
 801ee78:	b90a      	cbnz	r2, 801ee7e <__lo0bits+0x32>
 801ee7a:	3008      	adds	r0, #8
 801ee7c:	0a1b      	lsrs	r3, r3, #8
 801ee7e:	071a      	lsls	r2, r3, #28
 801ee80:	bf04      	itt	eq
 801ee82:	091b      	lsreq	r3, r3, #4
 801ee84:	3004      	addeq	r0, #4
 801ee86:	079a      	lsls	r2, r3, #30
 801ee88:	bf04      	itt	eq
 801ee8a:	089b      	lsreq	r3, r3, #2
 801ee8c:	3002      	addeq	r0, #2
 801ee8e:	07da      	lsls	r2, r3, #31
 801ee90:	d403      	bmi.n	801ee9a <__lo0bits+0x4e>
 801ee92:	085b      	lsrs	r3, r3, #1
 801ee94:	f100 0001 	add.w	r0, r0, #1
 801ee98:	d005      	beq.n	801eea6 <__lo0bits+0x5a>
 801ee9a:	600b      	str	r3, [r1, #0]
 801ee9c:	4770      	bx	lr
 801ee9e:	4610      	mov	r0, r2
 801eea0:	e7e9      	b.n	801ee76 <__lo0bits+0x2a>
 801eea2:	2000      	movs	r0, #0
 801eea4:	4770      	bx	lr
 801eea6:	2020      	movs	r0, #32
 801eea8:	4770      	bx	lr
	...

0801eeac <__i2b>:
 801eeac:	b510      	push	{r4, lr}
 801eeae:	460c      	mov	r4, r1
 801eeb0:	2101      	movs	r1, #1
 801eeb2:	f7ff ff03 	bl	801ecbc <_Balloc>
 801eeb6:	4602      	mov	r2, r0
 801eeb8:	b928      	cbnz	r0, 801eec6 <__i2b+0x1a>
 801eeba:	4b05      	ldr	r3, [pc, #20]	; (801eed0 <__i2b+0x24>)
 801eebc:	4805      	ldr	r0, [pc, #20]	; (801eed4 <__i2b+0x28>)
 801eebe:	f44f 71a0 	mov.w	r1, #320	; 0x140
 801eec2:	f7fd fd7d 	bl	801c9c0 <__assert_func>
 801eec6:	2301      	movs	r3, #1
 801eec8:	6144      	str	r4, [r0, #20]
 801eeca:	6103      	str	r3, [r0, #16]
 801eecc:	bd10      	pop	{r4, pc}
 801eece:	bf00      	nop
 801eed0:	08028621 	.word	0x08028621
 801eed4:	08028694 	.word	0x08028694

0801eed8 <__multiply>:
 801eed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eedc:	4691      	mov	r9, r2
 801eede:	690a      	ldr	r2, [r1, #16]
 801eee0:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801eee4:	429a      	cmp	r2, r3
 801eee6:	bfb8      	it	lt
 801eee8:	460b      	movlt	r3, r1
 801eeea:	460c      	mov	r4, r1
 801eeec:	bfbc      	itt	lt
 801eeee:	464c      	movlt	r4, r9
 801eef0:	4699      	movlt	r9, r3
 801eef2:	6927      	ldr	r7, [r4, #16]
 801eef4:	f8d9 a010 	ldr.w	sl, [r9, #16]
 801eef8:	68a3      	ldr	r3, [r4, #8]
 801eefa:	6861      	ldr	r1, [r4, #4]
 801eefc:	eb07 060a 	add.w	r6, r7, sl
 801ef00:	42b3      	cmp	r3, r6
 801ef02:	b085      	sub	sp, #20
 801ef04:	bfb8      	it	lt
 801ef06:	3101      	addlt	r1, #1
 801ef08:	f7ff fed8 	bl	801ecbc <_Balloc>
 801ef0c:	b930      	cbnz	r0, 801ef1c <__multiply+0x44>
 801ef0e:	4602      	mov	r2, r0
 801ef10:	4b44      	ldr	r3, [pc, #272]	; (801f024 <__multiply+0x14c>)
 801ef12:	4845      	ldr	r0, [pc, #276]	; (801f028 <__multiply+0x150>)
 801ef14:	f240 115d 	movw	r1, #349	; 0x15d
 801ef18:	f7fd fd52 	bl	801c9c0 <__assert_func>
 801ef1c:	f100 0514 	add.w	r5, r0, #20
 801ef20:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 801ef24:	462b      	mov	r3, r5
 801ef26:	2200      	movs	r2, #0
 801ef28:	4543      	cmp	r3, r8
 801ef2a:	d321      	bcc.n	801ef70 <__multiply+0x98>
 801ef2c:	f104 0314 	add.w	r3, r4, #20
 801ef30:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 801ef34:	f109 0314 	add.w	r3, r9, #20
 801ef38:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 801ef3c:	9202      	str	r2, [sp, #8]
 801ef3e:	1b3a      	subs	r2, r7, r4
 801ef40:	3a15      	subs	r2, #21
 801ef42:	f022 0203 	bic.w	r2, r2, #3
 801ef46:	3204      	adds	r2, #4
 801ef48:	f104 0115 	add.w	r1, r4, #21
 801ef4c:	428f      	cmp	r7, r1
 801ef4e:	bf38      	it	cc
 801ef50:	2204      	movcc	r2, #4
 801ef52:	9201      	str	r2, [sp, #4]
 801ef54:	9a02      	ldr	r2, [sp, #8]
 801ef56:	9303      	str	r3, [sp, #12]
 801ef58:	429a      	cmp	r2, r3
 801ef5a:	d80c      	bhi.n	801ef76 <__multiply+0x9e>
 801ef5c:	2e00      	cmp	r6, #0
 801ef5e:	dd03      	ble.n	801ef68 <__multiply+0x90>
 801ef60:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 801ef64:	2b00      	cmp	r3, #0
 801ef66:	d05a      	beq.n	801f01e <__multiply+0x146>
 801ef68:	6106      	str	r6, [r0, #16]
 801ef6a:	b005      	add	sp, #20
 801ef6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef70:	f843 2b04 	str.w	r2, [r3], #4
 801ef74:	e7d8      	b.n	801ef28 <__multiply+0x50>
 801ef76:	f8b3 a000 	ldrh.w	sl, [r3]
 801ef7a:	f1ba 0f00 	cmp.w	sl, #0
 801ef7e:	d024      	beq.n	801efca <__multiply+0xf2>
 801ef80:	f104 0e14 	add.w	lr, r4, #20
 801ef84:	46a9      	mov	r9, r5
 801ef86:	f04f 0c00 	mov.w	ip, #0
 801ef8a:	f85e 2b04 	ldr.w	r2, [lr], #4
 801ef8e:	f8d9 1000 	ldr.w	r1, [r9]
 801ef92:	fa1f fb82 	uxth.w	fp, r2
 801ef96:	b289      	uxth	r1, r1
 801ef98:	fb0a 110b 	mla	r1, sl, fp, r1
 801ef9c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 801efa0:	f8d9 2000 	ldr.w	r2, [r9]
 801efa4:	4461      	add	r1, ip
 801efa6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801efaa:	fb0a c20b 	mla	r2, sl, fp, ip
 801efae:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 801efb2:	b289      	uxth	r1, r1
 801efb4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 801efb8:	4577      	cmp	r7, lr
 801efba:	f849 1b04 	str.w	r1, [r9], #4
 801efbe:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801efc2:	d8e2      	bhi.n	801ef8a <__multiply+0xb2>
 801efc4:	9a01      	ldr	r2, [sp, #4]
 801efc6:	f845 c002 	str.w	ip, [r5, r2]
 801efca:	9a03      	ldr	r2, [sp, #12]
 801efcc:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 801efd0:	3304      	adds	r3, #4
 801efd2:	f1b9 0f00 	cmp.w	r9, #0
 801efd6:	d020      	beq.n	801f01a <__multiply+0x142>
 801efd8:	6829      	ldr	r1, [r5, #0]
 801efda:	f104 0c14 	add.w	ip, r4, #20
 801efde:	46ae      	mov	lr, r5
 801efe0:	f04f 0a00 	mov.w	sl, #0
 801efe4:	f8bc b000 	ldrh.w	fp, [ip]
 801efe8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 801efec:	fb09 220b 	mla	r2, r9, fp, r2
 801eff0:	4492      	add	sl, r2
 801eff2:	b289      	uxth	r1, r1
 801eff4:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 801eff8:	f84e 1b04 	str.w	r1, [lr], #4
 801effc:	f85c 2b04 	ldr.w	r2, [ip], #4
 801f000:	f8be 1000 	ldrh.w	r1, [lr]
 801f004:	0c12      	lsrs	r2, r2, #16
 801f006:	fb09 1102 	mla	r1, r9, r2, r1
 801f00a:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 801f00e:	4567      	cmp	r7, ip
 801f010:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 801f014:	d8e6      	bhi.n	801efe4 <__multiply+0x10c>
 801f016:	9a01      	ldr	r2, [sp, #4]
 801f018:	50a9      	str	r1, [r5, r2]
 801f01a:	3504      	adds	r5, #4
 801f01c:	e79a      	b.n	801ef54 <__multiply+0x7c>
 801f01e:	3e01      	subs	r6, #1
 801f020:	e79c      	b.n	801ef5c <__multiply+0x84>
 801f022:	bf00      	nop
 801f024:	08028621 	.word	0x08028621
 801f028:	08028694 	.word	0x08028694

0801f02c <__pow5mult>:
 801f02c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801f030:	4615      	mov	r5, r2
 801f032:	f012 0203 	ands.w	r2, r2, #3
 801f036:	4606      	mov	r6, r0
 801f038:	460f      	mov	r7, r1
 801f03a:	d007      	beq.n	801f04c <__pow5mult+0x20>
 801f03c:	4c25      	ldr	r4, [pc, #148]	; (801f0d4 <__pow5mult+0xa8>)
 801f03e:	3a01      	subs	r2, #1
 801f040:	2300      	movs	r3, #0
 801f042:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 801f046:	f7ff fe9b 	bl	801ed80 <__multadd>
 801f04a:	4607      	mov	r7, r0
 801f04c:	10ad      	asrs	r5, r5, #2
 801f04e:	d03d      	beq.n	801f0cc <__pow5mult+0xa0>
 801f050:	6a74      	ldr	r4, [r6, #36]	; 0x24
 801f052:	b97c      	cbnz	r4, 801f074 <__pow5mult+0x48>
 801f054:	2010      	movs	r0, #16
 801f056:	f7fd fd0d 	bl	801ca74 <malloc>
 801f05a:	4602      	mov	r2, r0
 801f05c:	6270      	str	r0, [r6, #36]	; 0x24
 801f05e:	b928      	cbnz	r0, 801f06c <__pow5mult+0x40>
 801f060:	4b1d      	ldr	r3, [pc, #116]	; (801f0d8 <__pow5mult+0xac>)
 801f062:	481e      	ldr	r0, [pc, #120]	; (801f0dc <__pow5mult+0xb0>)
 801f064:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 801f068:	f7fd fcaa 	bl	801c9c0 <__assert_func>
 801f06c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 801f070:	6004      	str	r4, [r0, #0]
 801f072:	60c4      	str	r4, [r0, #12]
 801f074:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 801f078:	f8d8 4008 	ldr.w	r4, [r8, #8]
 801f07c:	b94c      	cbnz	r4, 801f092 <__pow5mult+0x66>
 801f07e:	f240 2171 	movw	r1, #625	; 0x271
 801f082:	4630      	mov	r0, r6
 801f084:	f7ff ff12 	bl	801eeac <__i2b>
 801f088:	2300      	movs	r3, #0
 801f08a:	f8c8 0008 	str.w	r0, [r8, #8]
 801f08e:	4604      	mov	r4, r0
 801f090:	6003      	str	r3, [r0, #0]
 801f092:	f04f 0900 	mov.w	r9, #0
 801f096:	07eb      	lsls	r3, r5, #31
 801f098:	d50a      	bpl.n	801f0b0 <__pow5mult+0x84>
 801f09a:	4639      	mov	r1, r7
 801f09c:	4622      	mov	r2, r4
 801f09e:	4630      	mov	r0, r6
 801f0a0:	f7ff ff1a 	bl	801eed8 <__multiply>
 801f0a4:	4639      	mov	r1, r7
 801f0a6:	4680      	mov	r8, r0
 801f0a8:	4630      	mov	r0, r6
 801f0aa:	f7ff fe47 	bl	801ed3c <_Bfree>
 801f0ae:	4647      	mov	r7, r8
 801f0b0:	106d      	asrs	r5, r5, #1
 801f0b2:	d00b      	beq.n	801f0cc <__pow5mult+0xa0>
 801f0b4:	6820      	ldr	r0, [r4, #0]
 801f0b6:	b938      	cbnz	r0, 801f0c8 <__pow5mult+0x9c>
 801f0b8:	4622      	mov	r2, r4
 801f0ba:	4621      	mov	r1, r4
 801f0bc:	4630      	mov	r0, r6
 801f0be:	f7ff ff0b 	bl	801eed8 <__multiply>
 801f0c2:	6020      	str	r0, [r4, #0]
 801f0c4:	f8c0 9000 	str.w	r9, [r0]
 801f0c8:	4604      	mov	r4, r0
 801f0ca:	e7e4      	b.n	801f096 <__pow5mult+0x6a>
 801f0cc:	4638      	mov	r0, r7
 801f0ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801f0d2:	bf00      	nop
 801f0d4:	080287e0 	.word	0x080287e0
 801f0d8:	080285af 	.word	0x080285af
 801f0dc:	08028694 	.word	0x08028694

0801f0e0 <__lshift>:
 801f0e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f0e4:	460c      	mov	r4, r1
 801f0e6:	6849      	ldr	r1, [r1, #4]
 801f0e8:	6923      	ldr	r3, [r4, #16]
 801f0ea:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801f0ee:	68a3      	ldr	r3, [r4, #8]
 801f0f0:	4607      	mov	r7, r0
 801f0f2:	4691      	mov	r9, r2
 801f0f4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 801f0f8:	f108 0601 	add.w	r6, r8, #1
 801f0fc:	42b3      	cmp	r3, r6
 801f0fe:	db0b      	blt.n	801f118 <__lshift+0x38>
 801f100:	4638      	mov	r0, r7
 801f102:	f7ff fddb 	bl	801ecbc <_Balloc>
 801f106:	4605      	mov	r5, r0
 801f108:	b948      	cbnz	r0, 801f11e <__lshift+0x3e>
 801f10a:	4602      	mov	r2, r0
 801f10c:	4b2a      	ldr	r3, [pc, #168]	; (801f1b8 <__lshift+0xd8>)
 801f10e:	482b      	ldr	r0, [pc, #172]	; (801f1bc <__lshift+0xdc>)
 801f110:	f240 11d9 	movw	r1, #473	; 0x1d9
 801f114:	f7fd fc54 	bl	801c9c0 <__assert_func>
 801f118:	3101      	adds	r1, #1
 801f11a:	005b      	lsls	r3, r3, #1
 801f11c:	e7ee      	b.n	801f0fc <__lshift+0x1c>
 801f11e:	2300      	movs	r3, #0
 801f120:	f100 0114 	add.w	r1, r0, #20
 801f124:	f100 0210 	add.w	r2, r0, #16
 801f128:	4618      	mov	r0, r3
 801f12a:	4553      	cmp	r3, sl
 801f12c:	db37      	blt.n	801f19e <__lshift+0xbe>
 801f12e:	6920      	ldr	r0, [r4, #16]
 801f130:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 801f134:	f104 0314 	add.w	r3, r4, #20
 801f138:	f019 091f 	ands.w	r9, r9, #31
 801f13c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801f140:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 801f144:	d02f      	beq.n	801f1a6 <__lshift+0xc6>
 801f146:	f1c9 0e20 	rsb	lr, r9, #32
 801f14a:	468a      	mov	sl, r1
 801f14c:	f04f 0c00 	mov.w	ip, #0
 801f150:	681a      	ldr	r2, [r3, #0]
 801f152:	fa02 f209 	lsl.w	r2, r2, r9
 801f156:	ea42 020c 	orr.w	r2, r2, ip
 801f15a:	f84a 2b04 	str.w	r2, [sl], #4
 801f15e:	f853 2b04 	ldr.w	r2, [r3], #4
 801f162:	4298      	cmp	r0, r3
 801f164:	fa22 fc0e 	lsr.w	ip, r2, lr
 801f168:	d8f2      	bhi.n	801f150 <__lshift+0x70>
 801f16a:	1b03      	subs	r3, r0, r4
 801f16c:	3b15      	subs	r3, #21
 801f16e:	f023 0303 	bic.w	r3, r3, #3
 801f172:	3304      	adds	r3, #4
 801f174:	f104 0215 	add.w	r2, r4, #21
 801f178:	4290      	cmp	r0, r2
 801f17a:	bf38      	it	cc
 801f17c:	2304      	movcc	r3, #4
 801f17e:	f841 c003 	str.w	ip, [r1, r3]
 801f182:	f1bc 0f00 	cmp.w	ip, #0
 801f186:	d001      	beq.n	801f18c <__lshift+0xac>
 801f188:	f108 0602 	add.w	r6, r8, #2
 801f18c:	3e01      	subs	r6, #1
 801f18e:	4638      	mov	r0, r7
 801f190:	612e      	str	r6, [r5, #16]
 801f192:	4621      	mov	r1, r4
 801f194:	f7ff fdd2 	bl	801ed3c <_Bfree>
 801f198:	4628      	mov	r0, r5
 801f19a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f19e:	f842 0f04 	str.w	r0, [r2, #4]!
 801f1a2:	3301      	adds	r3, #1
 801f1a4:	e7c1      	b.n	801f12a <__lshift+0x4a>
 801f1a6:	3904      	subs	r1, #4
 801f1a8:	f853 2b04 	ldr.w	r2, [r3], #4
 801f1ac:	f841 2f04 	str.w	r2, [r1, #4]!
 801f1b0:	4298      	cmp	r0, r3
 801f1b2:	d8f9      	bhi.n	801f1a8 <__lshift+0xc8>
 801f1b4:	e7ea      	b.n	801f18c <__lshift+0xac>
 801f1b6:	bf00      	nop
 801f1b8:	08028621 	.word	0x08028621
 801f1bc:	08028694 	.word	0x08028694

0801f1c0 <__mcmp>:
 801f1c0:	b530      	push	{r4, r5, lr}
 801f1c2:	6902      	ldr	r2, [r0, #16]
 801f1c4:	690c      	ldr	r4, [r1, #16]
 801f1c6:	1b12      	subs	r2, r2, r4
 801f1c8:	d10e      	bne.n	801f1e8 <__mcmp+0x28>
 801f1ca:	f100 0314 	add.w	r3, r0, #20
 801f1ce:	3114      	adds	r1, #20
 801f1d0:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 801f1d4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 801f1d8:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 801f1dc:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 801f1e0:	42a5      	cmp	r5, r4
 801f1e2:	d003      	beq.n	801f1ec <__mcmp+0x2c>
 801f1e4:	d305      	bcc.n	801f1f2 <__mcmp+0x32>
 801f1e6:	2201      	movs	r2, #1
 801f1e8:	4610      	mov	r0, r2
 801f1ea:	bd30      	pop	{r4, r5, pc}
 801f1ec:	4283      	cmp	r3, r0
 801f1ee:	d3f3      	bcc.n	801f1d8 <__mcmp+0x18>
 801f1f0:	e7fa      	b.n	801f1e8 <__mcmp+0x28>
 801f1f2:	f04f 32ff 	mov.w	r2, #4294967295
 801f1f6:	e7f7      	b.n	801f1e8 <__mcmp+0x28>

0801f1f8 <__mdiff>:
 801f1f8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1fc:	460c      	mov	r4, r1
 801f1fe:	4606      	mov	r6, r0
 801f200:	4611      	mov	r1, r2
 801f202:	4620      	mov	r0, r4
 801f204:	4690      	mov	r8, r2
 801f206:	f7ff ffdb 	bl	801f1c0 <__mcmp>
 801f20a:	1e05      	subs	r5, r0, #0
 801f20c:	d110      	bne.n	801f230 <__mdiff+0x38>
 801f20e:	4629      	mov	r1, r5
 801f210:	4630      	mov	r0, r6
 801f212:	f7ff fd53 	bl	801ecbc <_Balloc>
 801f216:	b930      	cbnz	r0, 801f226 <__mdiff+0x2e>
 801f218:	4b3a      	ldr	r3, [pc, #232]	; (801f304 <__mdiff+0x10c>)
 801f21a:	4602      	mov	r2, r0
 801f21c:	f240 2132 	movw	r1, #562	; 0x232
 801f220:	4839      	ldr	r0, [pc, #228]	; (801f308 <__mdiff+0x110>)
 801f222:	f7fd fbcd 	bl	801c9c0 <__assert_func>
 801f226:	2301      	movs	r3, #1
 801f228:	e9c0 3504 	strd	r3, r5, [r0, #16]
 801f22c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f230:	bfa4      	itt	ge
 801f232:	4643      	movge	r3, r8
 801f234:	46a0      	movge	r8, r4
 801f236:	4630      	mov	r0, r6
 801f238:	f8d8 1004 	ldr.w	r1, [r8, #4]
 801f23c:	bfa6      	itte	ge
 801f23e:	461c      	movge	r4, r3
 801f240:	2500      	movge	r5, #0
 801f242:	2501      	movlt	r5, #1
 801f244:	f7ff fd3a 	bl	801ecbc <_Balloc>
 801f248:	b920      	cbnz	r0, 801f254 <__mdiff+0x5c>
 801f24a:	4b2e      	ldr	r3, [pc, #184]	; (801f304 <__mdiff+0x10c>)
 801f24c:	4602      	mov	r2, r0
 801f24e:	f44f 7110 	mov.w	r1, #576	; 0x240
 801f252:	e7e5      	b.n	801f220 <__mdiff+0x28>
 801f254:	f8d8 7010 	ldr.w	r7, [r8, #16]
 801f258:	6926      	ldr	r6, [r4, #16]
 801f25a:	60c5      	str	r5, [r0, #12]
 801f25c:	f104 0914 	add.w	r9, r4, #20
 801f260:	f108 0514 	add.w	r5, r8, #20
 801f264:	f100 0e14 	add.w	lr, r0, #20
 801f268:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 801f26c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 801f270:	f108 0210 	add.w	r2, r8, #16
 801f274:	46f2      	mov	sl, lr
 801f276:	2100      	movs	r1, #0
 801f278:	f859 3b04 	ldr.w	r3, [r9], #4
 801f27c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 801f280:	fa1f f883 	uxth.w	r8, r3
 801f284:	fa11 f18b 	uxtah	r1, r1, fp
 801f288:	0c1b      	lsrs	r3, r3, #16
 801f28a:	eba1 0808 	sub.w	r8, r1, r8
 801f28e:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 801f292:	eb03 4328 	add.w	r3, r3, r8, asr #16
 801f296:	fa1f f888 	uxth.w	r8, r8
 801f29a:	1419      	asrs	r1, r3, #16
 801f29c:	454e      	cmp	r6, r9
 801f29e:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 801f2a2:	f84a 3b04 	str.w	r3, [sl], #4
 801f2a6:	d8e7      	bhi.n	801f278 <__mdiff+0x80>
 801f2a8:	1b33      	subs	r3, r6, r4
 801f2aa:	3b15      	subs	r3, #21
 801f2ac:	f023 0303 	bic.w	r3, r3, #3
 801f2b0:	3304      	adds	r3, #4
 801f2b2:	3415      	adds	r4, #21
 801f2b4:	42a6      	cmp	r6, r4
 801f2b6:	bf38      	it	cc
 801f2b8:	2304      	movcc	r3, #4
 801f2ba:	441d      	add	r5, r3
 801f2bc:	4473      	add	r3, lr
 801f2be:	469e      	mov	lr, r3
 801f2c0:	462e      	mov	r6, r5
 801f2c2:	4566      	cmp	r6, ip
 801f2c4:	d30e      	bcc.n	801f2e4 <__mdiff+0xec>
 801f2c6:	f10c 0203 	add.w	r2, ip, #3
 801f2ca:	1b52      	subs	r2, r2, r5
 801f2cc:	f022 0203 	bic.w	r2, r2, #3
 801f2d0:	3d03      	subs	r5, #3
 801f2d2:	45ac      	cmp	ip, r5
 801f2d4:	bf38      	it	cc
 801f2d6:	2200      	movcc	r2, #0
 801f2d8:	441a      	add	r2, r3
 801f2da:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 801f2de:	b17b      	cbz	r3, 801f300 <__mdiff+0x108>
 801f2e0:	6107      	str	r7, [r0, #16]
 801f2e2:	e7a3      	b.n	801f22c <__mdiff+0x34>
 801f2e4:	f856 8b04 	ldr.w	r8, [r6], #4
 801f2e8:	fa11 f288 	uxtah	r2, r1, r8
 801f2ec:	1414      	asrs	r4, r2, #16
 801f2ee:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 801f2f2:	b292      	uxth	r2, r2
 801f2f4:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 801f2f8:	f84e 2b04 	str.w	r2, [lr], #4
 801f2fc:	1421      	asrs	r1, r4, #16
 801f2fe:	e7e0      	b.n	801f2c2 <__mdiff+0xca>
 801f300:	3f01      	subs	r7, #1
 801f302:	e7ea      	b.n	801f2da <__mdiff+0xe2>
 801f304:	08028621 	.word	0x08028621
 801f308:	08028694 	.word	0x08028694

0801f30c <__d2b>:
 801f30c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801f310:	4689      	mov	r9, r1
 801f312:	2101      	movs	r1, #1
 801f314:	ec57 6b10 	vmov	r6, r7, d0
 801f318:	4690      	mov	r8, r2
 801f31a:	f7ff fccf 	bl	801ecbc <_Balloc>
 801f31e:	4604      	mov	r4, r0
 801f320:	b930      	cbnz	r0, 801f330 <__d2b+0x24>
 801f322:	4602      	mov	r2, r0
 801f324:	4b25      	ldr	r3, [pc, #148]	; (801f3bc <__d2b+0xb0>)
 801f326:	4826      	ldr	r0, [pc, #152]	; (801f3c0 <__d2b+0xb4>)
 801f328:	f240 310a 	movw	r1, #778	; 0x30a
 801f32c:	f7fd fb48 	bl	801c9c0 <__assert_func>
 801f330:	f3c7 550a 	ubfx	r5, r7, #20, #11
 801f334:	f3c7 0313 	ubfx	r3, r7, #0, #20
 801f338:	bb35      	cbnz	r5, 801f388 <__d2b+0x7c>
 801f33a:	2e00      	cmp	r6, #0
 801f33c:	9301      	str	r3, [sp, #4]
 801f33e:	d028      	beq.n	801f392 <__d2b+0x86>
 801f340:	4668      	mov	r0, sp
 801f342:	9600      	str	r6, [sp, #0]
 801f344:	f7ff fd82 	bl	801ee4c <__lo0bits>
 801f348:	9900      	ldr	r1, [sp, #0]
 801f34a:	b300      	cbz	r0, 801f38e <__d2b+0x82>
 801f34c:	9a01      	ldr	r2, [sp, #4]
 801f34e:	f1c0 0320 	rsb	r3, r0, #32
 801f352:	fa02 f303 	lsl.w	r3, r2, r3
 801f356:	430b      	orrs	r3, r1
 801f358:	40c2      	lsrs	r2, r0
 801f35a:	6163      	str	r3, [r4, #20]
 801f35c:	9201      	str	r2, [sp, #4]
 801f35e:	9b01      	ldr	r3, [sp, #4]
 801f360:	61a3      	str	r3, [r4, #24]
 801f362:	2b00      	cmp	r3, #0
 801f364:	bf14      	ite	ne
 801f366:	2202      	movne	r2, #2
 801f368:	2201      	moveq	r2, #1
 801f36a:	6122      	str	r2, [r4, #16]
 801f36c:	b1d5      	cbz	r5, 801f3a4 <__d2b+0x98>
 801f36e:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 801f372:	4405      	add	r5, r0
 801f374:	f8c9 5000 	str.w	r5, [r9]
 801f378:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 801f37c:	f8c8 0000 	str.w	r0, [r8]
 801f380:	4620      	mov	r0, r4
 801f382:	b003      	add	sp, #12
 801f384:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f388:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801f38c:	e7d5      	b.n	801f33a <__d2b+0x2e>
 801f38e:	6161      	str	r1, [r4, #20]
 801f390:	e7e5      	b.n	801f35e <__d2b+0x52>
 801f392:	a801      	add	r0, sp, #4
 801f394:	f7ff fd5a 	bl	801ee4c <__lo0bits>
 801f398:	9b01      	ldr	r3, [sp, #4]
 801f39a:	6163      	str	r3, [r4, #20]
 801f39c:	2201      	movs	r2, #1
 801f39e:	6122      	str	r2, [r4, #16]
 801f3a0:	3020      	adds	r0, #32
 801f3a2:	e7e3      	b.n	801f36c <__d2b+0x60>
 801f3a4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801f3a8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 801f3ac:	f8c9 0000 	str.w	r0, [r9]
 801f3b0:	6918      	ldr	r0, [r3, #16]
 801f3b2:	f7ff fd2b 	bl	801ee0c <__hi0bits>
 801f3b6:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 801f3ba:	e7df      	b.n	801f37c <__d2b+0x70>
 801f3bc:	08028621 	.word	0x08028621
 801f3c0:	08028694 	.word	0x08028694

0801f3c4 <_calloc_r>:
 801f3c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801f3c6:	fba1 2402 	umull	r2, r4, r1, r2
 801f3ca:	b94c      	cbnz	r4, 801f3e0 <_calloc_r+0x1c>
 801f3cc:	4611      	mov	r1, r2
 801f3ce:	9201      	str	r2, [sp, #4]
 801f3d0:	f7fd fbfc 	bl	801cbcc <_malloc_r>
 801f3d4:	9a01      	ldr	r2, [sp, #4]
 801f3d6:	4605      	mov	r5, r0
 801f3d8:	b930      	cbnz	r0, 801f3e8 <_calloc_r+0x24>
 801f3da:	4628      	mov	r0, r5
 801f3dc:	b003      	add	sp, #12
 801f3de:	bd30      	pop	{r4, r5, pc}
 801f3e0:	220c      	movs	r2, #12
 801f3e2:	6002      	str	r2, [r0, #0]
 801f3e4:	2500      	movs	r5, #0
 801f3e6:	e7f8      	b.n	801f3da <_calloc_r+0x16>
 801f3e8:	4621      	mov	r1, r4
 801f3ea:	f7fd fb7b 	bl	801cae4 <memset>
 801f3ee:	e7f4      	b.n	801f3da <_calloc_r+0x16>

0801f3f0 <__sread>:
 801f3f0:	b510      	push	{r4, lr}
 801f3f2:	460c      	mov	r4, r1
 801f3f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f3f8:	f000 f894 	bl	801f524 <_read_r>
 801f3fc:	2800      	cmp	r0, #0
 801f3fe:	bfab      	itete	ge
 801f400:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801f402:	89a3      	ldrhlt	r3, [r4, #12]
 801f404:	181b      	addge	r3, r3, r0
 801f406:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801f40a:	bfac      	ite	ge
 801f40c:	6563      	strge	r3, [r4, #84]	; 0x54
 801f40e:	81a3      	strhlt	r3, [r4, #12]
 801f410:	bd10      	pop	{r4, pc}

0801f412 <__swrite>:
 801f412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801f416:	461f      	mov	r7, r3
 801f418:	898b      	ldrh	r3, [r1, #12]
 801f41a:	05db      	lsls	r3, r3, #23
 801f41c:	4605      	mov	r5, r0
 801f41e:	460c      	mov	r4, r1
 801f420:	4616      	mov	r6, r2
 801f422:	d505      	bpl.n	801f430 <__swrite+0x1e>
 801f424:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f428:	2302      	movs	r3, #2
 801f42a:	2200      	movs	r2, #0
 801f42c:	f000 f856 	bl	801f4dc <_lseek_r>
 801f430:	89a3      	ldrh	r3, [r4, #12]
 801f432:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801f436:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801f43a:	81a3      	strh	r3, [r4, #12]
 801f43c:	4632      	mov	r2, r6
 801f43e:	463b      	mov	r3, r7
 801f440:	4628      	mov	r0, r5
 801f442:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801f446:	f7fe bb0d 	b.w	801da64 <_write_r>

0801f44a <__sseek>:
 801f44a:	b510      	push	{r4, lr}
 801f44c:	460c      	mov	r4, r1
 801f44e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f452:	f000 f843 	bl	801f4dc <_lseek_r>
 801f456:	1c43      	adds	r3, r0, #1
 801f458:	89a3      	ldrh	r3, [r4, #12]
 801f45a:	bf15      	itete	ne
 801f45c:	6560      	strne	r0, [r4, #84]	; 0x54
 801f45e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801f462:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801f466:	81a3      	strheq	r3, [r4, #12]
 801f468:	bf18      	it	ne
 801f46a:	81a3      	strhne	r3, [r4, #12]
 801f46c:	bd10      	pop	{r4, pc}

0801f46e <__sclose>:
 801f46e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801f472:	f000 b801 	b.w	801f478 <_close_r>
	...

0801f478 <_close_r>:
 801f478:	b538      	push	{r3, r4, r5, lr}
 801f47a:	4d06      	ldr	r5, [pc, #24]	; (801f494 <_close_r+0x1c>)
 801f47c:	2300      	movs	r3, #0
 801f47e:	4604      	mov	r4, r0
 801f480:	4608      	mov	r0, r1
 801f482:	602b      	str	r3, [r5, #0]
 801f484:	f7e4 f8f4 	bl	8003670 <_close>
 801f488:	1c43      	adds	r3, r0, #1
 801f48a:	d102      	bne.n	801f492 <_close_r+0x1a>
 801f48c:	682b      	ldr	r3, [r5, #0]
 801f48e:	b103      	cbz	r3, 801f492 <_close_r+0x1a>
 801f490:	6023      	str	r3, [r4, #0]
 801f492:	bd38      	pop	{r3, r4, r5, pc}
 801f494:	2001129c 	.word	0x2001129c

0801f498 <_fstat_r>:
 801f498:	b538      	push	{r3, r4, r5, lr}
 801f49a:	4d07      	ldr	r5, [pc, #28]	; (801f4b8 <_fstat_r+0x20>)
 801f49c:	2300      	movs	r3, #0
 801f49e:	4604      	mov	r4, r0
 801f4a0:	4608      	mov	r0, r1
 801f4a2:	4611      	mov	r1, r2
 801f4a4:	602b      	str	r3, [r5, #0]
 801f4a6:	f7e4 f8ef 	bl	8003688 <_fstat>
 801f4aa:	1c43      	adds	r3, r0, #1
 801f4ac:	d102      	bne.n	801f4b4 <_fstat_r+0x1c>
 801f4ae:	682b      	ldr	r3, [r5, #0]
 801f4b0:	b103      	cbz	r3, 801f4b4 <_fstat_r+0x1c>
 801f4b2:	6023      	str	r3, [r4, #0]
 801f4b4:	bd38      	pop	{r3, r4, r5, pc}
 801f4b6:	bf00      	nop
 801f4b8:	2001129c 	.word	0x2001129c

0801f4bc <_isatty_r>:
 801f4bc:	b538      	push	{r3, r4, r5, lr}
 801f4be:	4d06      	ldr	r5, [pc, #24]	; (801f4d8 <_isatty_r+0x1c>)
 801f4c0:	2300      	movs	r3, #0
 801f4c2:	4604      	mov	r4, r0
 801f4c4:	4608      	mov	r0, r1
 801f4c6:	602b      	str	r3, [r5, #0]
 801f4c8:	f7e4 f8ee 	bl	80036a8 <_isatty>
 801f4cc:	1c43      	adds	r3, r0, #1
 801f4ce:	d102      	bne.n	801f4d6 <_isatty_r+0x1a>
 801f4d0:	682b      	ldr	r3, [r5, #0]
 801f4d2:	b103      	cbz	r3, 801f4d6 <_isatty_r+0x1a>
 801f4d4:	6023      	str	r3, [r4, #0]
 801f4d6:	bd38      	pop	{r3, r4, r5, pc}
 801f4d8:	2001129c 	.word	0x2001129c

0801f4dc <_lseek_r>:
 801f4dc:	b538      	push	{r3, r4, r5, lr}
 801f4de:	4d07      	ldr	r5, [pc, #28]	; (801f4fc <_lseek_r+0x20>)
 801f4e0:	4604      	mov	r4, r0
 801f4e2:	4608      	mov	r0, r1
 801f4e4:	4611      	mov	r1, r2
 801f4e6:	2200      	movs	r2, #0
 801f4e8:	602a      	str	r2, [r5, #0]
 801f4ea:	461a      	mov	r2, r3
 801f4ec:	f7e4 f8e7 	bl	80036be <_lseek>
 801f4f0:	1c43      	adds	r3, r0, #1
 801f4f2:	d102      	bne.n	801f4fa <_lseek_r+0x1e>
 801f4f4:	682b      	ldr	r3, [r5, #0]
 801f4f6:	b103      	cbz	r3, 801f4fa <_lseek_r+0x1e>
 801f4f8:	6023      	str	r3, [r4, #0]
 801f4fa:	bd38      	pop	{r3, r4, r5, pc}
 801f4fc:	2001129c 	.word	0x2001129c

0801f500 <__ascii_mbtowc>:
 801f500:	b082      	sub	sp, #8
 801f502:	b901      	cbnz	r1, 801f506 <__ascii_mbtowc+0x6>
 801f504:	a901      	add	r1, sp, #4
 801f506:	b142      	cbz	r2, 801f51a <__ascii_mbtowc+0x1a>
 801f508:	b14b      	cbz	r3, 801f51e <__ascii_mbtowc+0x1e>
 801f50a:	7813      	ldrb	r3, [r2, #0]
 801f50c:	600b      	str	r3, [r1, #0]
 801f50e:	7812      	ldrb	r2, [r2, #0]
 801f510:	1e10      	subs	r0, r2, #0
 801f512:	bf18      	it	ne
 801f514:	2001      	movne	r0, #1
 801f516:	b002      	add	sp, #8
 801f518:	4770      	bx	lr
 801f51a:	4610      	mov	r0, r2
 801f51c:	e7fb      	b.n	801f516 <__ascii_mbtowc+0x16>
 801f51e:	f06f 0001 	mvn.w	r0, #1
 801f522:	e7f8      	b.n	801f516 <__ascii_mbtowc+0x16>

0801f524 <_read_r>:
 801f524:	b538      	push	{r3, r4, r5, lr}
 801f526:	4d07      	ldr	r5, [pc, #28]	; (801f544 <_read_r+0x20>)
 801f528:	4604      	mov	r4, r0
 801f52a:	4608      	mov	r0, r1
 801f52c:	4611      	mov	r1, r2
 801f52e:	2200      	movs	r2, #0
 801f530:	602a      	str	r2, [r5, #0]
 801f532:	461a      	mov	r2, r3
 801f534:	f7e4 f87f 	bl	8003636 <_read>
 801f538:	1c43      	adds	r3, r0, #1
 801f53a:	d102      	bne.n	801f542 <_read_r+0x1e>
 801f53c:	682b      	ldr	r3, [r5, #0]
 801f53e:	b103      	cbz	r3, 801f542 <_read_r+0x1e>
 801f540:	6023      	str	r3, [r4, #0]
 801f542:	bd38      	pop	{r3, r4, r5, pc}
 801f544:	2001129c 	.word	0x2001129c

0801f548 <__ascii_wctomb>:
 801f548:	b149      	cbz	r1, 801f55e <__ascii_wctomb+0x16>
 801f54a:	2aff      	cmp	r2, #255	; 0xff
 801f54c:	bf85      	ittet	hi
 801f54e:	238a      	movhi	r3, #138	; 0x8a
 801f550:	6003      	strhi	r3, [r0, #0]
 801f552:	700a      	strbls	r2, [r1, #0]
 801f554:	f04f 30ff 	movhi.w	r0, #4294967295
 801f558:	bf98      	it	ls
 801f55a:	2001      	movls	r0, #1
 801f55c:	4770      	bx	lr
 801f55e:	4608      	mov	r0, r1
 801f560:	4770      	bx	lr

0801f562 <_Unwind_GetDataRelBase>:
 801f562:	b508      	push	{r3, lr}
 801f564:	f7fd fa24 	bl	801c9b0 <abort>

0801f568 <_Unwind_GetTextRelBase>:
 801f568:	b508      	push	{r3, lr}
 801f56a:	f7ff fffa 	bl	801f562 <_Unwind_GetDataRelBase>
	...

0801f570 <_init>:
 801f570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f572:	bf00      	nop
 801f574:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801f576:	bc08      	pop	{r3}
 801f578:	469e      	mov	lr, r3
 801f57a:	4770      	bx	lr

0801f57c <_fini>:
 801f57c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f57e:	bf00      	nop
 801f580:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801f582:	bc08      	pop	{r3}
 801f584:	469e      	mov	lr, r3
 801f586:	4770      	bx	lr
